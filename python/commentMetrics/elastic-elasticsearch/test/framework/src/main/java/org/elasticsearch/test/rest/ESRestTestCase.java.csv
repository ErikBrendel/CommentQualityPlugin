# id;timestamp;commentText;codeText;commentWords;codeWords
ESRestTestCase -> protected static RestClient adminClient();1524684173;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1528762805;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1529687475;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1531179852;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1531382259;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1532456624;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1533143718;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1536187065;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1536611444;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1537300661;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1537806831;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1539796943;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1540238977;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1540313026;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1540486836;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1540503333;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1540581592;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1540583181;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1540941545;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1541690603;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1542145037;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1543368857;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1543495053;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1543514185;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1543514303;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1544448720;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1544549415;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1544575397;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1544648252;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1547479364;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1547500081;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1548866914;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1548928790;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1549310947;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1549439027;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1550083218;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected static RestClient adminClient();1550276900;Get the client used for test administrative actions. Do not use this while writing a test. Only use it for cleaning up after tests.;protected static RestClient adminClient() {_        return adminClient__    };get,the,client,used,for,test,administrative,actions,do,not,use,this,while,writing,a,test,only,use,it,for,cleaning,up,after,tests;protected,static,rest,client,admin,client,return,admin,client
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1524684173;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1528762805;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1529687475;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1531179852;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1531382259;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1532456624;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1533143718;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1536187065;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1536611444;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1537300661;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1537806831;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1539796943;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1540238977;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1540313026;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1540486836;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1540503333;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1540581592;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1540583181;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1540941545;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1541690603;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1542145037;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1543368857;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1543495053;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1543514185;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1543514303;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1544448720;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1544549415;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1544575397;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1544648252;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1547479364;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1547500081;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1548866914;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1548928790;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1549310947;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1549439027;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1550083218;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> protected boolean preserveSnapshotsUponCompletion();1550276900;Returns whether to preserve the snapshots in repositories on completion of this_test. Defaults to not preserving snapshots. Only works for {@code fs} repositories.;protected boolean preserveSnapshotsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,snapshots,in,repositories,on,completion,of,this,test,defaults,to,not,preserving,snapshots,only,works,for,code,fs,repositories;protected,boolean,preserve,snapshots,upon,completion,return,false
ESRestTestCase -> private void wipeSnapshots() throws IOException;1524684173;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest("GET", "_snapshot/_all")).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                String url = "_snapshot/" + repoName + "/_all"__                Map<String, String> params = singletonMap("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest("GET", url, params)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest("DELETE", "_snapshot/" + repoName + "/" + name)__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest("DELETE", "_snapshot/" + repoName)__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,string,url,repo,name,map,string,string,params,singleton,map,true,list,snapshots,list,entity,as,map,admin,client,perform,request,get,url,params,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1528762805;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest("GET", "_snapshot/_all")).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                String url = "_snapshot/" + repoName + "/_all"__                Map<String, String> params = singletonMap("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest("GET", url, params)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest("DELETE", "_snapshot/" + repoName + "/" + name)__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest("DELETE", "_snapshot/" + repoName)__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,string,url,repo,name,map,string,string,params,singleton,map,true,list,snapshots,list,entity,as,map,admin,client,perform,request,get,url,params,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1529687475;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest("GET", "_snapshot/_all")).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                String url = "_snapshot/" + repoName + "/_all"__                Map<String, String> params = singletonMap("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest("GET", url, params)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest("DELETE", "_snapshot/" + repoName + "/" + name)__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest("DELETE", "_snapshot/" + repoName)__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,string,url,repo,name,map,string,string,params,singleton,map,true,list,snapshots,list,entity,as,map,admin,client,perform,request,get,url,params,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1531179852;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest("GET", "_snapshot/_all")).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                String url = "_snapshot/" + repoName + "/_all"__                Map<String, String> params = singletonMap("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest("GET", url, params)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest("DELETE", "_snapshot/" + repoName + "/" + name)__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest("DELETE", "_snapshot/" + repoName)__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,string,url,repo,name,map,string,string,params,singleton,map,true,list,snapshots,list,entity,as,map,admin,client,perform,request,get,url,params,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1531382259;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1532456624;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1533143718;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1536187065;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1536611444;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1537300661;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1537806831;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1539796943;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1540238977;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1540313026;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1540486836;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1540503333;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1540581592;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1540583181;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1540941545;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1541690603;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1542145037;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1543368857;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1543495053;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1543514185;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1543514303;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1544448720;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1544549415;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1544575397;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1544648252;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1547479364;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1547500081;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1548866914;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1548928790;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1549310947;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1549439027;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1550083218;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> private void wipeSnapshots() throws IOException;1550276900;Wipe fs snapshots we created one by one and all repositories so that the next test can create the repositories fresh and they'll_start empty. There isn't an API to delete all snapshots. There is an API to delete all snapshot repositories but that leaves all of_the snapshots intact in the repository.;private void wipeSnapshots() throws IOException {_        for (Map.Entry<String, ?> repo : entityAsMap(adminClient.performRequest(new Request("GET", "/_snapshot/_all"))).entrySet()) {_            String repoName = repo.getKey()__            Map<?, ?> repoSpec = (Map<?, ?>) repo.getValue()__            String repoType = (String) repoSpec.get("type")__            if (false == preserveSnapshotsUponCompletion() && repoType.equals("fs")) {_                _                Request listRequest = new Request("GET", "/_snapshot/" + repoName + "/_all")__                listRequest.addParameter("ignore_unavailable", "true")__                List<?> snapshots = (List<?>) entityAsMap(adminClient.performRequest(listRequest)).get("snapshots")__                for (Object snapshot : snapshots) {_                    Map<?, ?> snapshotInfo = (Map<?, ?>) snapshot__                    String name = (String) snapshotInfo.get("snapshot")__                    logger.debug("wiping snapshot [{}/{}]", repoName, name)__                    adminClient().performRequest(new Request("DELETE", "/_snapshot/" + repoName + "/" + name))__                }_            }_            if (preserveReposUponCompletion() == false) {_                logger.debug("wiping snapshot repository [{}]", repoName)__                adminClient().performRequest(new Request("DELETE", "_snapshot/" + repoName))__            }_        }_    };wipe,fs,snapshots,we,created,one,by,one,and,all,repositories,so,that,the,next,test,can,create,the,repositories,fresh,and,they,ll,start,empty,there,isn,t,an,api,to,delete,all,snapshots,there,is,an,api,to,delete,all,snapshot,repositories,but,that,leaves,all,of,the,snapshots,intact,in,the,repository;private,void,wipe,snapshots,throws,ioexception,for,map,entry,string,repo,entity,as,map,admin,client,perform,request,new,request,get,entry,set,string,repo,name,repo,get,key,map,repo,spec,map,repo,get,value,string,repo,type,string,repo,spec,get,type,if,false,preserve,snapshots,upon,completion,repo,type,equals,fs,request,list,request,new,request,get,repo,name,list,request,add,parameter,true,list,snapshots,list,entity,as,map,admin,client,perform,request,list,request,get,snapshots,for,object,snapshot,snapshots,map,snapshot,info,map,snapshot,string,name,string,snapshot,info,get,snapshot,logger,debug,wiping,snapshot,repo,name,name,admin,client,perform,request,new,request,delete,repo,name,name,if,preserve,repos,upon,completion,false,logger,debug,wiping,snapshot,repository,repo,name,admin,client,perform,request,new,request,delete,repo,name
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1524684173;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1528762805;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1529687475;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1531179852;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1531382259;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1532456624;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1533143718;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1536187065;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1536611444;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1537300661;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1537806831;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1539796943;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1540238977;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1540313026;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1540486836;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1540503333;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1540581592;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1540583181;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1540941545;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1541690603;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1542145037;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1543368857;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1543495053;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1543514185;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1543514303;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1544448720;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1544549415;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1544575397;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1544648252;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1547479364;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1547500081;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1548866914;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1548928790;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1549310947;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1549439027;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1550083218;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> protected final List<HttpHost> getClusterHosts();1550276900;Get the list of hosts in the cluster.;protected final List<HttpHost> getClusterHosts() {_        return clusterHosts__    };get,the,list,of,hosts,in,the,cluster;protected,final,list,http,host,get,cluster,hosts,return,cluster,hosts
ESRestTestCase -> @Deprecated     public static RequestOptions allowTypesRemovalWarnings();1550083218;Creates RequestOptions designed to ignore [types removal] warnings but nothing else_@deprecated this method is only required while we deprecate types and can be removed in 8.0;@Deprecated_    public static RequestOptions allowTypesRemovalWarnings() {_        Builder builder = RequestOptions.DEFAULT.toBuilder()__        builder.setWarningsHandler(new WarningsHandler() {_                @Override_                public boolean warningsShouldFailRequest(List<String> warnings) {_                    for (String warning : warnings) {_                        if(warning.startsWith("[types removal]") == false) {_                            _                            return true__                        }_                    }_                    return false__                }_            })__        return builder.build()__    };creates,request,options,designed,to,ignore,types,removal,warnings,but,nothing,else,deprecated,this,method,is,only,required,while,we,deprecate,types,and,can,be,removed,in,8,0;deprecated,public,static,request,options,allow,types,removal,warnings,builder,builder,request,options,default,to,builder,builder,set,warnings,handler,new,warnings,handler,override,public,boolean,warnings,should,fail,request,list,string,warnings,for,string,warning,warnings,if,warning,starts,with,types,removal,false,return,true,return,false,return,builder,build
ESRestTestCase -> @Deprecated     public static RequestOptions allowTypesRemovalWarnings();1550276900;Creates RequestOptions designed to ignore [types removal] warnings but nothing else_@deprecated this method is only required while we deprecate types and can be removed in 8.0;@Deprecated_    public static RequestOptions allowTypesRemovalWarnings() {_        Builder builder = RequestOptions.DEFAULT.toBuilder()__        builder.setWarningsHandler(new WarningsHandler() {_                @Override_                public boolean warningsShouldFailRequest(List<String> warnings) {_                    for (String warning : warnings) {_                        if(warning.startsWith("[types removal]") == false) {_                            _                            return true__                        }_                    }_                    return false__                }_            })__        return builder.build()__    };creates,request,options,designed,to,ignore,types,removal,warnings,but,nothing,else,deprecated,this,method,is,only,required,while,we,deprecate,types,and,can,be,removed,in,8,0;deprecated,public,static,request,options,allow,types,removal,warnings,builder,builder,request,options,default,to,builder,builder,set,warnings,handler,new,warnings,handler,override,public,boolean,warnings,should,fail,request,list,string,warnings,for,string,warning,warnings,if,warning,starts,with,types,removal,false,return,true,return,false,return,builder,build
ESRestTestCase -> protected boolean preserveReposUponCompletion();1524684173;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1528762805;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1529687475;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1531179852;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1531382259;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1532456624;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1533143718;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1536187065;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1536611444;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1537300661;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1537806831;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1539796943;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1540238977;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1540313026;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1540486836;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1540503333;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1540581592;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1540583181;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1540941545;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1541690603;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1542145037;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1543368857;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1543495053;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1543514185;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1543514303;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1544448720;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1544549415;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1544575397;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1544648252;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1547479364;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1547500081;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1548866914;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1548928790;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1549310947;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1549439027;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1550083218;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> protected boolean preserveReposUponCompletion();1550276900;Returns whether to preserve the repositories on completion of this test._Defaults to not preserving repos. See also_{@link #preserveSnapshotsUponCompletion()}.;protected boolean preserveReposUponCompletion() {_        return false__    };returns,whether,to,preserve,the,repositories,on,completion,of,this,test,defaults,to,not,preserving,repos,see,also,link,preserve,snapshots,upon,completion;protected,boolean,preserve,repos,upon,completion,return,false
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void compatible(String... allowedWarnings);1544549415;Adds to the set of warnings that are permissible (but not required) when running_in mixed-version clusters or those that differ in version from the test client._@param allowedWarnings optional warnings that will be ignored if received;public void compatible(String... allowedWarnings) {            _            this.allowedWarnings.addAll(Arrays.asList(allowedWarnings))__        };adds,to,the,set,of,warnings,that,are,permissible,but,not,required,when,running,in,mixed,version,clusters,or,those,that,differ,in,version,from,the,test,client,param,allowed,warnings,optional,warnings,that,will,be,ignored,if,received;public,void,compatible,string,allowed,warnings,this,allowed,warnings,add,all,arrays,as,list,allowed,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void compatible(String... allowedWarnings);1544575397;Adds to the set of warnings that are permissible (but not required) when running_in mixed-version clusters or those that differ in version from the test client._@param allowedWarnings optional warnings that will be ignored if received;public void compatible(String... allowedWarnings) {            _            this.allowedWarnings.addAll(Arrays.asList(allowedWarnings))__        };adds,to,the,set,of,warnings,that,are,permissible,but,not,required,when,running,in,mixed,version,clusters,or,those,that,differ,in,version,from,the,test,client,param,allowed,warnings,optional,warnings,that,will,be,ignored,if,received;public,void,compatible,string,allowed,warnings,this,allowed,warnings,add,all,arrays,as,list,allowed,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void compatible(String... allowedWarnings);1544648252;Adds to the set of warnings that are permissible (but not required) when running_in mixed-version clusters or those that differ in version from the test client._@param allowedWarnings optional warnings that will be ignored if received;public void compatible(String... allowedWarnings) {            _            this.allowedWarnings.addAll(Arrays.asList(allowedWarnings))__        };adds,to,the,set,of,warnings,that,are,permissible,but,not,required,when,running,in,mixed,version,clusters,or,those,that,differ,in,version,from,the,test,client,param,allowed,warnings,optional,warnings,that,will,be,ignored,if,received;public,void,compatible,string,allowed,warnings,this,allowed,warnings,add,all,arrays,as,list,allowed,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void compatible(String... allowedWarnings);1547479364;Adds to the set of warnings that are permissible (but not required) when running_in mixed-version clusters or those that differ in version from the test client._@param allowedWarnings optional warnings that will be ignored if received;public void compatible(String... allowedWarnings) {            _            this.allowedWarnings.addAll(Arrays.asList(allowedWarnings))__        };adds,to,the,set,of,warnings,that,are,permissible,but,not,required,when,running,in,mixed,version,clusters,or,those,that,differ,in,version,from,the,test,client,param,allowed,warnings,optional,warnings,that,will,be,ignored,if,received;public,void,compatible,string,allowed,warnings,this,allowed,warnings,add,all,arrays,as,list,allowed,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void compatible(String... allowedWarnings);1547500081;Adds to the set of warnings that are permissible (but not required) when running_in mixed-version clusters or those that differ in version from the test client._@param allowedWarnings optional warnings that will be ignored if received;public void compatible(String... allowedWarnings) {            _            this.allowedWarnings.addAll(Arrays.asList(allowedWarnings))__        };adds,to,the,set,of,warnings,that,are,permissible,but,not,required,when,running,in,mixed,version,clusters,or,those,that,differ,in,version,from,the,test,client,param,allowed,warnings,optional,warnings,that,will,be,ignored,if,received;public,void,compatible,string,allowed,warnings,this,allowed,warnings,add,all,arrays,as,list,allowed,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void compatible(String... allowedWarnings);1548866914;Adds to the set of warnings that are permissible (but not required) when running_in mixed-version clusters or those that differ in version from the test client._@param allowedWarnings optional warnings that will be ignored if received;public void compatible(String... allowedWarnings) {            _            this.allowedWarnings.addAll(Arrays.asList(allowedWarnings))__        };adds,to,the,set,of,warnings,that,are,permissible,but,not,required,when,running,in,mixed,version,clusters,or,those,that,differ,in,version,from,the,test,client,param,allowed,warnings,optional,warnings,that,will,be,ignored,if,received;public,void,compatible,string,allowed,warnings,this,allowed,warnings,add,all,arrays,as,list,allowed,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void compatible(String... allowedWarnings);1548928790;Adds to the set of warnings that are permissible (but not required) when running_in mixed-version clusters or those that differ in version from the test client._@param allowedWarnings optional warnings that will be ignored if received;public void compatible(String... allowedWarnings) {            _            this.allowedWarnings.addAll(Arrays.asList(allowedWarnings))__        };adds,to,the,set,of,warnings,that,are,permissible,but,not,required,when,running,in,mixed,version,clusters,or,those,that,differ,in,version,from,the,test,client,param,allowed,warnings,optional,warnings,that,will,be,ignored,if,received;public,void,compatible,string,allowed,warnings,this,allowed,warnings,add,all,arrays,as,list,allowed,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void compatible(String... allowedWarnings);1549310947;Adds to the set of warnings that are permissible (but not required) when running_in mixed-version clusters or those that differ in version from the test client._@param allowedWarnings optional warnings that will be ignored if received;public void compatible(String... allowedWarnings) {            _            this.allowedWarnings.addAll(Arrays.asList(allowedWarnings))__        };adds,to,the,set,of,warnings,that,are,permissible,but,not,required,when,running,in,mixed,version,clusters,or,those,that,differ,in,version,from,the,test,client,param,allowed,warnings,optional,warnings,that,will,be,ignored,if,received;public,void,compatible,string,allowed,warnings,this,allowed,warnings,add,all,arrays,as,list,allowed,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void compatible(String... allowedWarnings);1549439027;Adds to the set of warnings that are permissible (but not required) when running_in mixed-version clusters or those that differ in version from the test client._@param allowedWarnings optional warnings that will be ignored if received;public void compatible(String... allowedWarnings) {            _            this.allowedWarnings.addAll(Arrays.asList(allowedWarnings))__        };adds,to,the,set,of,warnings,that,are,permissible,but,not,required,when,running,in,mixed,version,clusters,or,those,that,differ,in,version,from,the,test,client,param,allowed,warnings,optional,warnings,that,will,be,ignored,if,received;public,void,compatible,string,allowed,warnings,this,allowed,warnings,add,all,arrays,as,list,allowed,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void compatible(String... allowedWarnings);1550083218;Adds to the set of warnings that are permissible (but not required) when running_in mixed-version clusters or those that differ in version from the test client._@param allowedWarnings optional warnings that will be ignored if received;public void compatible(String... allowedWarnings) {            _            this.allowedWarnings.addAll(Arrays.asList(allowedWarnings))__        };adds,to,the,set,of,warnings,that,are,permissible,but,not,required,when,running,in,mixed,version,clusters,or,those,that,differ,in,version,from,the,test,client,param,allowed,warnings,optional,warnings,that,will,be,ignored,if,received;public,void,compatible,string,allowed,warnings,this,allowed,warnings,add,all,arrays,as,list,allowed,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void compatible(String... allowedWarnings);1550276900;Adds to the set of warnings that are permissible (but not required) when running_in mixed-version clusters or those that differ in version from the test client._@param allowedWarnings optional warnings that will be ignored if received;public void compatible(String... allowedWarnings) {            _            this.allowedWarnings.addAll(Arrays.asList(allowedWarnings))__        };adds,to,the,set,of,warnings,that,are,permissible,but,not,required,when,running,in,mixed,version,clusters,or,those,that,differ,in,version,from,the,test,client,param,allowed,warnings,optional,warnings,that,will,be,ignored,if,received;public,void,compatible,string,allowed,warnings,this,allowed,warnings,add,all,arrays,as,list,allowed,warnings
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1533143718;Construct a HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,a,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1536187065;Construct a HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,a,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1536611444;Construct a HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,a,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1537300661;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1537806831;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1539796943;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1540238977;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1540313026;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1540486836;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1540503333;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1540581592;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1540583181;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1540941545;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1541690603;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1542145037;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1543368857;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1543495053;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1543514185;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1543514303;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1544448720;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1544549415;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1544575397;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1544648252;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1547479364;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1547500081;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1548866914;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1548928790;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1549310947;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1549439027;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1550083218;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> protected HttpHost buildHttpHost(String host, int port);1550276900;Construct an HttpHost from the given host and port;protected HttpHost buildHttpHost(String host, int port) {_        return new HttpHost(host, port, getProtocol())__    };construct,an,http,host,from,the,given,host,and,port;protected,http,host,build,http,host,string,host,int,port,return,new,http,host,host,port,get,protocol
ESRestTestCase -> public static boolean hasXPack() throws IOException;1531179852;Does the cluster being tested have xpack installed?;public static boolean hasXPack() throws IOException {_        RestClient client = adminClient()__        if (client == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        Map<?, ?> response = entityAsMap(client.performRequest(new Request("GET", "_nodes/plugins")))__        Map<?, ?> nodes = (Map<?, ?>) response.get("nodes")__        for (Map.Entry<?, ?> node : nodes.entrySet()) {_            Map<?, ?> nodeInfo = (Map<?, ?>) node.getValue()__            for (Object module: (List<?>) nodeInfo.get("modules")) {_                Map<?, ?> moduleInfo = (Map<?, ?>) module__                if (moduleInfo.get("name").toString().startsWith("x-pack-")) {_                    return true__                }_            }_        }_        return false__    };does,the,cluster,being,tested,have,xpack,installed;public,static,boolean,has,xpack,throws,ioexception,rest,client,client,admin,client,if,client,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,map,response,entity,as,map,client,perform,request,new,request,get,plugins,map,nodes,map,response,get,nodes,for,map,entry,node,nodes,entry,set,map,node,info,map,node,get,value,for,object,module,list,node,info,get,modules,map,module,info,map,module,if,module,info,get,name,to,string,starts,with,x,pack,return,true,return,false
ESRestTestCase -> public static boolean hasXPack() throws IOException;1531382259;Does the cluster being tested have xpack installed?;public static boolean hasXPack() throws IOException {_        RestClient client = adminClient()__        if (client == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        Map<?, ?> response = entityAsMap(client.performRequest(new Request("GET", "_nodes/plugins")))__        Map<?, ?> nodes = (Map<?, ?>) response.get("nodes")__        for (Map.Entry<?, ?> node : nodes.entrySet()) {_            Map<?, ?> nodeInfo = (Map<?, ?>) node.getValue()__            for (Object module: (List<?>) nodeInfo.get("modules")) {_                Map<?, ?> moduleInfo = (Map<?, ?>) module__                if (moduleInfo.get("name").toString().startsWith("x-pack-")) {_                    return true__                }_            }_        }_        return false__    };does,the,cluster,being,tested,have,xpack,installed;public,static,boolean,has,xpack,throws,ioexception,rest,client,client,admin,client,if,client,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,map,response,entity,as,map,client,perform,request,new,request,get,plugins,map,nodes,map,response,get,nodes,for,map,entry,node,nodes,entry,set,map,node,info,map,node,get,value,for,object,module,list,node,info,get,modules,map,module,info,map,module,if,module,info,get,name,to,string,starts,with,x,pack,return,true,return,false
ESRestTestCase -> public static boolean hasXPack() throws IOException;1532456624;Does the cluster being tested have xpack installed?;public static boolean hasXPack() throws IOException {_        RestClient client = adminClient()__        if (client == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        Map<?, ?> response = entityAsMap(client.performRequest(new Request("GET", "_nodes/plugins")))__        Map<?, ?> nodes = (Map<?, ?>) response.get("nodes")__        for (Map.Entry<?, ?> node : nodes.entrySet()) {_            Map<?, ?> nodeInfo = (Map<?, ?>) node.getValue()__            for (Object module: (List<?>) nodeInfo.get("modules")) {_                Map<?, ?> moduleInfo = (Map<?, ?>) module__                if (moduleInfo.get("name").toString().startsWith("x-pack-")) {_                    return true__                }_            }_        }_        return false__    };does,the,cluster,being,tested,have,xpack,installed;public,static,boolean,has,xpack,throws,ioexception,rest,client,client,admin,client,if,client,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,map,response,entity,as,map,client,perform,request,new,request,get,plugins,map,nodes,map,response,get,nodes,for,map,entry,node,nodes,entry,set,map,node,info,map,node,get,value,for,object,module,list,node,info,get,modules,map,module,info,map,module,if,module,info,get,name,to,string,starts,with,x,pack,return,true,return,false
ESRestTestCase -> public static boolean hasXPack() throws IOException;1533143718;Does the cluster being tested have xpack installed?;public static boolean hasXPack() throws IOException {_        RestClient client = adminClient()__        if (client == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        Map<?, ?> response = entityAsMap(client.performRequest(new Request("GET", "_nodes/plugins")))__        Map<?, ?> nodes = (Map<?, ?>) response.get("nodes")__        for (Map.Entry<?, ?> node : nodes.entrySet()) {_            Map<?, ?> nodeInfo = (Map<?, ?>) node.getValue()__            for (Object module: (List<?>) nodeInfo.get("modules")) {_                Map<?, ?> moduleInfo = (Map<?, ?>) module__                if (moduleInfo.get("name").toString().startsWith("x-pack-")) {_                    return true__                }_            }_        }_        return false__    };does,the,cluster,being,tested,have,xpack,installed;public,static,boolean,has,xpack,throws,ioexception,rest,client,client,admin,client,if,client,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,map,response,entity,as,map,client,perform,request,new,request,get,plugins,map,nodes,map,response,get,nodes,for,map,entry,node,nodes,entry,set,map,node,info,map,node,get,value,for,object,module,list,node,info,get,modules,map,module,info,map,module,if,module,info,get,name,to,string,starts,with,x,pack,return,true,return,false
ESRestTestCase -> public static boolean hasXPack() throws IOException;1536187065;Does the cluster being tested have xpack installed?;public static boolean hasXPack() throws IOException {_        RestClient client = adminClient()__        if (client == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        Map<?, ?> response = entityAsMap(client.performRequest(new Request("GET", "_nodes/plugins")))__        Map<?, ?> nodes = (Map<?, ?>) response.get("nodes")__        for (Map.Entry<?, ?> node : nodes.entrySet()) {_            Map<?, ?> nodeInfo = (Map<?, ?>) node.getValue()__            for (Object module: (List<?>) nodeInfo.get("modules")) {_                Map<?, ?> moduleInfo = (Map<?, ?>) module__                if (moduleInfo.get("name").toString().startsWith("x-pack-")) {_                    return true__                }_            }_        }_        return false__    };does,the,cluster,being,tested,have,xpack,installed;public,static,boolean,has,xpack,throws,ioexception,rest,client,client,admin,client,if,client,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,map,response,entity,as,map,client,perform,request,new,request,get,plugins,map,nodes,map,response,get,nodes,for,map,entry,node,nodes,entry,set,map,node,info,map,node,get,value,for,object,module,list,node,info,get,modules,map,module,info,map,module,if,module,info,get,name,to,string,starts,with,x,pack,return,true,return,false
ESRestTestCase -> public static boolean hasXPack() throws IOException;1536611444;Does the cluster being tested have xpack installed?;public static boolean hasXPack() throws IOException {_        RestClient client = adminClient()__        if (client == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        Map<?, ?> response = entityAsMap(client.performRequest(new Request("GET", "_nodes/plugins")))__        Map<?, ?> nodes = (Map<?, ?>) response.get("nodes")__        for (Map.Entry<?, ?> node : nodes.entrySet()) {_            Map<?, ?> nodeInfo = (Map<?, ?>) node.getValue()__            for (Object module: (List<?>) nodeInfo.get("modules")) {_                Map<?, ?> moduleInfo = (Map<?, ?>) module__                if (moduleInfo.get("name").toString().startsWith("x-pack-")) {_                    return true__                }_            }_        }_        return false__    };does,the,cluster,being,tested,have,xpack,installed;public,static,boolean,has,xpack,throws,ioexception,rest,client,client,admin,client,if,client,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,map,response,entity,as,map,client,perform,request,new,request,get,plugins,map,nodes,map,response,get,nodes,for,map,entry,node,nodes,entry,set,map,node,info,map,node,get,value,for,object,module,list,node,info,get,modules,map,module,info,map,module,if,module,info,get,name,to,string,starts,with,x,pack,return,true,return,false
ESRestTestCase -> public static boolean hasXPack() throws IOException;1537300661;Does the cluster being tested have xpack installed?;public static boolean hasXPack() throws IOException {_        RestClient client = adminClient()__        if (client == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        Map<?, ?> response = entityAsMap(client.performRequest(new Request("GET", "_nodes/plugins")))__        Map<?, ?> nodes = (Map<?, ?>) response.get("nodes")__        for (Map.Entry<?, ?> node : nodes.entrySet()) {_            Map<?, ?> nodeInfo = (Map<?, ?>) node.getValue()__            for (Object module: (List<?>) nodeInfo.get("modules")) {_                Map<?, ?> moduleInfo = (Map<?, ?>) module__                if (moduleInfo.get("name").toString().startsWith("x-pack-")) {_                    return true__                }_            }_        }_        return false__    };does,the,cluster,being,tested,have,xpack,installed;public,static,boolean,has,xpack,throws,ioexception,rest,client,client,admin,client,if,client,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,map,response,entity,as,map,client,perform,request,new,request,get,plugins,map,nodes,map,response,get,nodes,for,map,entry,node,nodes,entry,set,map,node,info,map,node,get,value,for,object,module,list,node,info,get,modules,map,module,info,map,module,if,module,info,get,name,to,string,starts,with,x,pack,return,true,return,false
ESRestTestCase -> public static boolean hasXPack() throws IOException;1537806831;Does the cluster being tested have xpack installed?;public static boolean hasXPack() throws IOException {_        RestClient client = adminClient()__        if (client == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        Map<?, ?> response = entityAsMap(client.performRequest(new Request("GET", "_nodes/plugins")))__        Map<?, ?> nodes = (Map<?, ?>) response.get("nodes")__        for (Map.Entry<?, ?> node : nodes.entrySet()) {_            Map<?, ?> nodeInfo = (Map<?, ?>) node.getValue()__            for (Object module: (List<?>) nodeInfo.get("modules")) {_                Map<?, ?> moduleInfo = (Map<?, ?>) module__                if (moduleInfo.get("name").toString().startsWith("x-pack-")) {_                    return true__                }_            }_        }_        return false__    };does,the,cluster,being,tested,have,xpack,installed;public,static,boolean,has,xpack,throws,ioexception,rest,client,client,admin,client,if,client,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,map,response,entity,as,map,client,perform,request,new,request,get,plugins,map,nodes,map,response,get,nodes,for,map,entry,node,nodes,entry,set,map,node,info,map,node,get,value,for,object,module,list,node,info,get,modules,map,module,info,map,module,if,module,info,get,name,to,string,starts,with,x,pack,return,true,return,false
ESRestTestCase -> public static boolean hasXPack() throws IOException;1539796943;Does the cluster being tested have xpack installed?;public static boolean hasXPack() throws IOException {_        RestClient client = adminClient()__        if (client == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        Map<?, ?> response = entityAsMap(client.performRequest(new Request("GET", "_nodes/plugins")))__        Map<?, ?> nodes = (Map<?, ?>) response.get("nodes")__        for (Map.Entry<?, ?> node : nodes.entrySet()) {_            Map<?, ?> nodeInfo = (Map<?, ?>) node.getValue()__            for (Object module: (List<?>) nodeInfo.get("modules")) {_                Map<?, ?> moduleInfo = (Map<?, ?>) module__                if (moduleInfo.get("name").toString().startsWith("x-pack-")) {_                    return true__                }_            }_        }_        return false__    };does,the,cluster,being,tested,have,xpack,installed;public,static,boolean,has,xpack,throws,ioexception,rest,client,client,admin,client,if,client,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,map,response,entity,as,map,client,perform,request,new,request,get,plugins,map,nodes,map,response,get,nodes,for,map,entry,node,nodes,entry,set,map,node,info,map,node,get,value,for,object,module,list,node,info,get,modules,map,module,info,map,module,if,module,info,get,name,to,string,starts,with,x,pack,return,true,return,false
ESRestTestCase -> public static boolean hasXPack() throws IOException;1540238977;Does the cluster being tested have xpack installed?;public static boolean hasXPack() throws IOException {_        RestClient client = adminClient()__        if (client == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        Map<?, ?> response = entityAsMap(client.performRequest(new Request("GET", "_nodes/plugins")))__        Map<?, ?> nodes = (Map<?, ?>) response.get("nodes")__        for (Map.Entry<?, ?> node : nodes.entrySet()) {_            Map<?, ?> nodeInfo = (Map<?, ?>) node.getValue()__            for (Object module: (List<?>) nodeInfo.get("modules")) {_                Map<?, ?> moduleInfo = (Map<?, ?>) module__                if (moduleInfo.get("name").toString().startsWith("x-pack-")) {_                    return true__                }_            }_        }_        return false__    };does,the,cluster,being,tested,have,xpack,installed;public,static,boolean,has,xpack,throws,ioexception,rest,client,client,admin,client,if,client,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,map,response,entity,as,map,client,perform,request,new,request,get,plugins,map,nodes,map,response,get,nodes,for,map,entry,node,nodes,entry,set,map,node,info,map,node,get,value,for,object,module,list,node,info,get,modules,map,module,info,map,module,if,module,info,get,name,to,string,starts,with,x,pack,return,true,return,false
ESRestTestCase -> public static boolean hasXPack() throws IOException;1540313026;Does the cluster being tested have xpack installed?;public static boolean hasXPack() throws IOException {_        RestClient client = adminClient()__        if (client == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        Map<?, ?> response = entityAsMap(client.performRequest(new Request("GET", "_nodes/plugins")))__        Map<?, ?> nodes = (Map<?, ?>) response.get("nodes")__        for (Map.Entry<?, ?> node : nodes.entrySet()) {_            Map<?, ?> nodeInfo = (Map<?, ?>) node.getValue()__            for (Object module: (List<?>) nodeInfo.get("modules")) {_                Map<?, ?> moduleInfo = (Map<?, ?>) module__                if (moduleInfo.get("name").toString().startsWith("x-pack-")) {_                    return true__                }_            }_        }_        return false__    };does,the,cluster,being,tested,have,xpack,installed;public,static,boolean,has,xpack,throws,ioexception,rest,client,client,admin,client,if,client,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,map,response,entity,as,map,client,perform,request,new,request,get,plugins,map,nodes,map,response,get,nodes,for,map,entry,node,nodes,entry,set,map,node,info,map,node,get,value,for,object,module,list,node,info,get,modules,map,module,info,map,module,if,module,info,get,name,to,string,starts,with,x,pack,return,true,return,false
ESRestTestCase -> public static boolean hasXPack() throws IOException;1540486836;Does the cluster being tested have xpack installed?;public static boolean hasXPack() throws IOException {_        RestClient client = adminClient()__        if (client == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        Map<?, ?> response = entityAsMap(client.performRequest(new Request("GET", "_nodes/plugins")))__        Map<?, ?> nodes = (Map<?, ?>) response.get("nodes")__        for (Map.Entry<?, ?> node : nodes.entrySet()) {_            Map<?, ?> nodeInfo = (Map<?, ?>) node.getValue()__            for (Object module: (List<?>) nodeInfo.get("modules")) {_                Map<?, ?> moduleInfo = (Map<?, ?>) module__                if (moduleInfo.get("name").toString().startsWith("x-pack-")) {_                    return true__                }_            }_        }_        return false__    };does,the,cluster,being,tested,have,xpack,installed;public,static,boolean,has,xpack,throws,ioexception,rest,client,client,admin,client,if,client,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,map,response,entity,as,map,client,perform,request,new,request,get,plugins,map,nodes,map,response,get,nodes,for,map,entry,node,nodes,entry,set,map,node,info,map,node,get,value,for,object,module,list,node,info,get,modules,map,module,info,map,module,if,module,info,get,name,to,string,starts,with,x,pack,return,true,return,false
ESRestTestCase -> public static boolean hasXPack() throws IOException;1540503333;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() throws IOException {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,throws,ioexception,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack() throws IOException;1540581592;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() throws IOException {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,throws,ioexception,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack() throws IOException;1540583181;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() throws IOException {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,throws,ioexception,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack() throws IOException;1540941545;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() throws IOException {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,throws,ioexception,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack() throws IOException;1541690603;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() throws IOException {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,throws,ioexception,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack() throws IOException;1542145037;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() throws IOException {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,throws,ioexception,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack() throws IOException;1543368857;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() throws IOException {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,throws,ioexception,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack() throws IOException;1543495053;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() throws IOException {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,throws,ioexception,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack() throws IOException;1543514185;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() throws IOException {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,throws,ioexception,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack() throws IOException;1543514303;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() throws IOException {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,throws,ioexception,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack() throws IOException;1544448720;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() throws IOException {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,throws,ioexception,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack() throws IOException;1544549415;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() throws IOException {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,throws,ioexception,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack() throws IOException;1544575397;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() throws IOException {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,throws,ioexception,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack() throws IOException;1544648252;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() throws IOException {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,throws,ioexception,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> protected Settings restClientSettings();1524684173;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        return Settings.EMPTY__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,return,settings,empty
ESRestTestCase -> protected Settings restClientSettings();1528762805;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        return Settings.EMPTY__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,return,settings,empty
ESRestTestCase -> protected Settings restClientSettings();1529687475;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        return Settings.EMPTY__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,return,settings,empty
ESRestTestCase -> protected Settings restClientSettings();1531179852;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1531382259;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1532456624;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1533143718;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1536187065;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1536611444;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1537300661;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1537806831;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1539796943;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1540238977;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1540313026;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1540486836;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1540503333;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1540581592;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1540583181;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1540941545;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1541690603;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1542145037;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1543368857;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1543495053;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1543514185;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1543514303;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1544448720;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1544549415;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1544575397;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1544648252;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1547479364;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1547500081;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1548866914;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1548928790;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1549310947;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1549439027;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1550083218;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> protected Settings restClientSettings();1550276900;Used to obtain settings for the REST client that is used to send REST requests.;protected Settings restClientSettings() {_        Settings.Builder builder = Settings.builder()__        if (System.getProperty("tests.rest.client_path_prefix") != null) {_            builder.put(CLIENT_PATH_PREFIX, System.getProperty("tests.rest.client_path_prefix"))__        }_        return builder.build()__    };used,to,obtain,settings,for,the,rest,client,that,is,used,to,send,rest,requests;protected,settings,rest,client,settings,settings,builder,builder,settings,builder,if,system,get,property,tests,rest,null,builder,put,system,get,property,tests,rest,return,builder,build
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1540238977;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1540313026;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1540486836;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1540503333;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1540581592;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1540583181;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1540941545;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1541690603;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1542145037;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1543368857;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1543495053;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1543514185;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1543514303;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1544448720;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1544549415;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1544575397;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1544648252;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1547479364;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1547500081;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1548866914;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1548928790;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1549310947;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1549439027;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1550083218;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient) throws Exception;1550276900;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete.__@param adminClient the admin client_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient) throws Exception {_        waitForPendingTasks(adminClient, taskName -> false)__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,param,admin,client,the,admin,client,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,throws,exception,wait,for,pending,tasks,admin,client,task,name,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1539796943;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1540238977;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1540313026;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1540486836;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1540503333;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1540581592;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1540583181;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1540941545;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1541690603;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1542145037;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1543368857;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1543495053;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1543514185;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1543514303;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1544448720;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1544549415;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1544575397;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1544648252;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1547479364;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1547500081;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1548866914;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1548928790;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1549310947;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1549439027;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1550083218;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected boolean preserveRollupJobsUponCompletion();1550276900;Returns whether to preserve the rollup jobs of this test. Defaults to_not preserving them. Only runs at all if xpack is installed on the_cluster being tested.;protected boolean preserveRollupJobsUponCompletion() {_        return false__    };returns,whether,to,preserve,the,rollup,jobs,of,this,test,defaults,to,not,preserving,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,rollup,jobs,upon,completion,return,false
ESRestTestCase -> protected Settings restAdminSettings();1524684173;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1528762805;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1529687475;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1531179852;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1531382259;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1532456624;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1533143718;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1536187065;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1536611444;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1537300661;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1537806831;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1539796943;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1540238977;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1540313026;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1540486836;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1540503333;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1540581592;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1540583181;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1540941545;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1541690603;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1542145037;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1543368857;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1543495053;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1543514185;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1543514303;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1544448720;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1544549415;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1544575397;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1544648252;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1547479364;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1547500081;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1548866914;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1548928790;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1549310947;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1549439027;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1550083218;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> protected Settings restAdminSettings();1550276900;Returns the REST client settings used for admin actions like cleaning up after the test has completed.;protected Settings restAdminSettings() {_        return restClientSettings()_ _    };returns,the,rest,client,settings,used,for,admin,actions,like,cleaning,up,after,the,test,has,completed;protected,settings,rest,admin,settings,return,rest,client,settings
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1531179852;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1531382259;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1532456624;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1533143718;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1536187065;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1536611444;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1537300661;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1537806831;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1539796943;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1540238977;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1540313026;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1540486836;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1540503333;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1540581592;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1540583181;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1540941545;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1541690603;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1542145037;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1543368857;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1543495053;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1543514185;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1543514303;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1544448720;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1544549415;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1544575397;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1544648252;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1547479364;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1547500081;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1548866914;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1548928790;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1549310947;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1549439027;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1550083218;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public static Map<String, Object> entityAsMap(Response response) throws IOException;1550276900;Convert the entity from a {@link Response} into a map of maps.;public static Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        _        try (XContentParser parser = xContentType.xContent().createParser(_                NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION,_                response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,static,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,x,content,type,x,content,create,parser,named,xcontent,registry,empty,deprecation,handler,response,get,entity,get,content,return,parser,map
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1524684173;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Map<String, String> params = new HashMap<>()__        params.put("wait_for_no_initializing_shards", "true")__        params.put("timeout", "70s")__        params.put("level", "shards")__        assertOK(client().performRequest("GET", "_cluster/health/", params))__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,map,string,string,params,new,hash,map,params,put,true,params,put,timeout,70s,params,put,level,shards,assert,ok,client,perform,request,get,health,params
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1528762805;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Map<String, String> params = new HashMap<>()__        params.put("wait_for_no_initializing_shards", "true")__        params.put("timeout", "70s")__        params.put("level", "shards")__        assertOK(client().performRequest("GET", "_cluster/health/", params))__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,map,string,string,params,new,hash,map,params,put,true,params,put,timeout,70s,params,put,level,shards,assert,ok,client,perform,request,get,health,params
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1529687475;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Map<String, String> params = new HashMap<>()__        params.put("wait_for_no_initializing_shards", "true")__        params.put("timeout", "70s")__        params.put("level", "shards")__        assertOK(client().performRequest("GET", "_cluster/health/", params))__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,map,string,string,params,new,hash,map,params,put,true,params,put,timeout,70s,params,put,level,shards,assert,ok,client,perform,request,get,health,params
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1531179852;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Map<String, String> params = new HashMap<>()__        params.put("wait_for_no_initializing_shards", "true")__        params.put("timeout", "70s")__        params.put("level", "shards")__        assertOK(client().performRequest("GET", "_cluster/health/", params))__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,map,string,string,params,new,hash,map,params,put,true,params,put,timeout,70s,params,put,level,shards,assert,ok,client,perform,request,get,health,params
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1531382259;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1532456624;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1533143718;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1536187065;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1536611444;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1537300661;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1537806831;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1539796943;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1540238977;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1540313026;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1540486836;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1540503333;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1540581592;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1540583181;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1540941545;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1541690603;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1542145037;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1543368857;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1543495053;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1543514185;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1543514303;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1544448720;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1544549415;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1544575397;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1544648252;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1547479364;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1547500081;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1548866914;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1548928790;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1549310947;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1549439027;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1550083218;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureNoInitializingShards() throws IOException;1550276900;waits until all shard initialization is completed. This is a handy alternative to ensureGreen as it relates to all shards_in the cluster and doesn't require to know how many nodes/replica there are.;protected static void ensureNoInitializingShards() throws IOException {_        Request request = new Request("GET", "/_cluster/health")__        request.addParameter("wait_for_no_initializing_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };waits,until,all,shard,initialization,is,completed,this,is,a,handy,alternative,to,ensure,green,as,it,relates,to,all,shards,in,the,cluster,and,doesn,t,require,to,know,how,many,nodes,replica,there,are;protected,static,void,ensure,no,initializing,shards,throws,ioexception,request,request,new,request,get,health,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1540581592;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1540583181;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1540941545;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1541690603;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1542145037;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1543368857;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1543495053;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1543514185;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1543514303;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1544448720;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1544549415;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1544575397;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1544648252;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1547479364;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1547500081;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1548866914;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1548928790;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1549310947;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1549439027;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1550083218;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> protected boolean preserveILMPoliciesUponCompletion();1550276900;Returns whether to preserve ILM Policies of this test. Defaults to not_preserviing them. Only runs at all if xpack is installed on the cluster_being tested.;protected boolean preserveILMPoliciesUponCompletion() {_        return false__    };returns,whether,to,preserve,ilm,policies,of,this,test,defaults,to,not,preserviing,them,only,runs,at,all,if,xpack,is,installed,on,the,cluster,being,tested;protected,boolean,preserve,ilmpolicies,upon,completion,return,false
ESRestTestCase -> @Deprecated     public static RequestOptions allowTypeRemovalWarnings();1549310947;Creates RequestOptions designed to ignore [types removal] warnings but nothing else_@deprecated this method is only required while we deprecate types and can be removed in 8.0;@Deprecated_    public static RequestOptions allowTypeRemovalWarnings() {_        Builder builder = RequestOptions.DEFAULT.toBuilder()__        builder.setWarningsHandler(new WarningsHandler() {_                @Override_                public boolean warningsShouldFailRequest(List<String> warnings) {_                    for (String warning : warnings) {_                        if(warning.startsWith("[types removal]") == false) {_                            _                            return true__                        }_                    }_                    return false__                }_            })__        return builder.build()__    };creates,request,options,designed,to,ignore,types,removal,warnings,but,nothing,else,deprecated,this,method,is,only,required,while,we,deprecate,types,and,can,be,removed,in,8,0;deprecated,public,static,request,options,allow,type,removal,warnings,builder,builder,request,options,default,to,builder,builder,set,warnings,handler,new,warnings,handler,override,public,boolean,warnings,should,fail,request,list,string,warnings,for,string,warning,warnings,if,warning,starts,with,types,removal,false,return,true,return,false,return,builder,build
ESRestTestCase -> @Deprecated     public static RequestOptions allowTypeRemovalWarnings();1549439027;Creates RequestOptions designed to ignore [types removal] warnings but nothing else_@deprecated this method is only required while we deprecate types and can be removed in 8.0;@Deprecated_    public static RequestOptions allowTypeRemovalWarnings() {_        Builder builder = RequestOptions.DEFAULT.toBuilder()__        builder.setWarningsHandler(new WarningsHandler() {_                @Override_                public boolean warningsShouldFailRequest(List<String> warnings) {_                    for (String warning : warnings) {_                        if(warning.startsWith("[types removal]") == false) {_                            _                            return true__                        }_                    }_                    return false__                }_            })__        return builder.build()__    };creates,request,options,designed,to,ignore,types,removal,warnings,but,nothing,else,deprecated,this,method,is,only,required,while,we,deprecate,types,and,can,be,removed,in,8,0;deprecated,public,static,request,options,allow,type,removal,warnings,builder,builder,request,options,default,to,builder,builder,set,warnings,handler,new,warnings,handler,override,public,boolean,warnings,should,fail,request,list,string,warnings,for,string,warning,warnings,if,warning,starts,with,types,removal,false,return,true,return,false,return,builder,build
ESRestTestCase -> public Map<String, Object> entityAsMap(Response response) throws IOException;1524684173;Convert the entity from a {@link Response} into a map of maps.;public Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        try (XContentParser parser = createParser(xContentType.xContent(), response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,create,parser,x,content,type,x,content,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public Map<String, Object> entityAsMap(Response response) throws IOException;1528762805;Convert the entity from a {@link Response} into a map of maps.;public Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        try (XContentParser parser = createParser(xContentType.xContent(), response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,create,parser,x,content,type,x,content,response,get,entity,get,content,return,parser,map
ESRestTestCase -> public Map<String, Object> entityAsMap(Response response) throws IOException;1529687475;Convert the entity from a {@link Response} into a map of maps.;public Map<String, Object> entityAsMap(Response response) throws IOException {_        XContentType xContentType = XContentType.fromMediaTypeOrFormat(response.getEntity().getContentType().getValue())__        try (XContentParser parser = createParser(xContentType.xContent(), response.getEntity().getContent())) {_            return parser.map()__        }_    };convert,the,entity,from,a,link,response,into,a,map,of,maps;public,map,string,object,entity,as,map,response,response,throws,ioexception,xcontent,type,x,content,type,xcontent,type,from,media,type,or,format,response,get,entity,get,content,type,get,value,try,xcontent,parser,parser,create,parser,x,content,type,x,content,response,get,entity,get,content,return,parser,map
ESRestTestCase -> private void logIfThereAreRunningTasks() throws IOException;1547479364;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws IOException;1547500081;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws IOException;1548866914;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws IOException;1548928790;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws IOException;1549310947;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws IOException;1549439027;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws IOException;1550083218;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws IOException;1550276900;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1524684173;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()}, and_{@link #preserveSnapshotsUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,and,link,preserve,snapshots,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1528762805;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()}, and_{@link #preserveSnapshotsUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,and,link,preserve,snapshots,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1529687475;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()}, and_{@link #preserveSnapshotsUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,and,link,preserve,snapshots,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1531179852;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()}, and_{@link #preserveSnapshotsUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,and,link,preserve,snapshots,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1531382259;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()}, and_{@link #preserveSnapshotsUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,and,link,preserve,snapshots,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1532456624;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()}, and_{@link #preserveSnapshotsUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,and,link,preserve,snapshots,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1533143718;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()}, and_{@link #preserveSnapshotsUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,and,link,preserve,snapshots,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1536187065;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()}, and_{@link #preserveSnapshotsUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,and,link,preserve,snapshots,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1536611444;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()}, and_{@link #preserveSnapshotsUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,and,link,preserve,snapshots,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1537300661;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()}, and_{@link #preserveSnapshotsUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,and,link,preserve,snapshots,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1537806831;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()}, and_{@link #preserveSnapshotsUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,and,link,preserve,snapshots,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1539796943;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()}, and {@link #preserveRollupJobsUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,and,link,preserve,rollup,jobs,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1540238977;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()}, and {@link #preserveRollupJobsUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,and,link,preserve,rollup,jobs,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1540313026;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()}, and {@link #preserveRollupJobsUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,and,link,preserve,rollup,jobs,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1540486836;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()}, and {@link #preserveRollupJobsUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,and,link,preserve,rollup,jobs,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1540503333;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()}, and {@link #preserveRollupJobsUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,and,link,preserve,rollup,jobs,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1540581592;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1540583181;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1540941545;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1541690603;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1542145037;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1543368857;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1543495053;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1543514185;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1543514303;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1544448720;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1544549415;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1544575397;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1544648252;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1547479364;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1547500081;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1548866914;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1548928790;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1549310947;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1549439027;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1550083218;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveClusterUponCompletion();1550276900;Returns whether to preserve the state of the cluster upon completion of this test. Defaults to false. If true, overrides the value of_{@link #preserveIndicesUponCompletion()}, {@link #preserveTemplatesUponCompletion()}, {@link #preserveReposUponCompletion()},_{@link #preserveSnapshotsUponCompletion()},{@link #preserveRollupJobsUponCompletion()},_and {@link #preserveILMPoliciesUponCompletion()}.__@return true if the state of the cluster should be preserved;protected boolean preserveClusterUponCompletion() {_        return false__    };returns,whether,to,preserve,the,state,of,the,cluster,upon,completion,of,this,test,defaults,to,false,if,true,overrides,the,value,of,link,preserve,indices,upon,completion,link,preserve,templates,upon,completion,link,preserve,repos,upon,completion,link,preserve,snapshots,upon,completion,link,preserve,rollup,jobs,upon,completion,and,link,preserve,ilmpolicies,upon,completion,return,true,if,the,state,of,the,cluster,should,be,preserved;protected,boolean,preserve,cluster,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1524684173;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1528762805;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1529687475;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1531179852;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1531382259;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1532456624;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1533143718;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1536187065;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1536611444;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1537300661;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1537806831;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1539796943;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1540238977;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1540313026;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1540486836;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1540503333;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1540581592;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1540583181;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1540941545;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1541690603;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1542145037;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1543368857;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1543495053;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1543514185;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1543514303;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1544448720;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1544549415;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1544575397;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1544648252;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1547479364;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1547500081;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1548866914;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1548928790;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1549310947;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1549439027;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1550083218;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> protected boolean preserveTemplatesUponCompletion();1550276900;Controls whether or not to preserve templates upon completion of this test. The default implementation is to delete not preserve_templates.__@return whether or not to preserve templates;protected boolean preserveTemplatesUponCompletion() {_        return false__    };controls,whether,or,not,to,preserve,templates,upon,completion,of,this,test,the,default,implementation,is,to,delete,not,preserve,templates,return,whether,or,not,to,preserve,templates;protected,boolean,preserve,templates,upon,completion,return,false
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1524684173;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest("GET", "/_cluster/settings"))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            adminClient().performRequest("PUT", "/_cluster/settings", emptyMap(), new StringEntity(_                Strings.toString(clearCommand), ContentType.APPLICATION_JSON))__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,admin,client,perform,request,put,settings,empty,map,new,string,entity,strings,to,string,clear,command,content,type
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1528762805;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest("GET", "/_cluster/settings"))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            adminClient().performRequest("PUT", "/_cluster/settings", emptyMap(), new StringEntity(_                Strings.toString(clearCommand), ContentType.APPLICATION_JSON))__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,admin,client,perform,request,put,settings,empty,map,new,string,entity,strings,to,string,clear,command,content,type
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1529687475;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest("GET", "/_cluster/settings"))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            adminClient().performRequest("PUT", "/_cluster/settings", emptyMap(), new StringEntity(_                Strings.toString(clearCommand), ContentType.APPLICATION_JSON))__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,admin,client,perform,request,put,settings,empty,map,new,string,entity,strings,to,string,clear,command,content,type
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1531179852;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest("GET", "/_cluster/settings"))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            adminClient().performRequest("PUT", "/_cluster/settings", emptyMap(), new StringEntity(_                Strings.toString(clearCommand), ContentType.APPLICATION_JSON))__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,admin,client,perform,request,put,settings,empty,map,new,string,entity,strings,to,string,clear,command,content,type
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1531382259;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1532456624;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1533143718;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1536187065;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1536611444;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1537300661;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1537806831;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1539796943;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1540238977;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1540313026;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1540486836;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1540503333;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1540581592;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1540583181;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1540941545;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1541690603;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1542145037;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1543368857;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1543495053;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1543514185;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1543514303;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1544448720;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1544549415;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1544575397;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1544648252;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1547479364;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1547500081;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1548866914;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1548928790;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1549310947;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1549439027;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1550083218;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> private void wipeClusterSettings() throws IOException;1550276900;Remove any cluster settings.;private void wipeClusterSettings() throws IOException {_        Map<?, ?> getResponse = entityAsMap(adminClient().performRequest(new Request("GET", "/_cluster/settings")))___        boolean mustClear = false__        XContentBuilder clearCommand = JsonXContent.contentBuilder()__        clearCommand.startObject()__        for (Map.Entry<?, ?> entry : getResponse.entrySet()) {_            String type = entry.getKey().toString()__            Map<?, ?> settings = (Map<?, ?>) entry.getValue()__            if (settings.isEmpty()) {_                continue__            }_            mustClear = true__            clearCommand.startObject(type)__            for (Object key: settings.keySet()) {_                clearCommand.field(key + ".*").nullValue()__            }_            clearCommand.endObject()__        }_        clearCommand.endObject()___        if (mustClear) {_            Request request = new Request("PUT", "/_cluster/settings")__            request.setJsonEntity(Strings.toString(clearCommand))__            adminClient().performRequest(request)__        }_    };remove,any,cluster,settings;private,void,wipe,cluster,settings,throws,ioexception,map,get,response,entity,as,map,admin,client,perform,request,new,request,get,settings,boolean,must,clear,false,xcontent,builder,clear,command,json,xcontent,content,builder,clear,command,start,object,for,map,entry,entry,get,response,entry,set,string,type,entry,get,key,to,string,map,settings,map,entry,get,value,if,settings,is,empty,continue,must,clear,true,clear,command,start,object,type,for,object,key,settings,key,set,clear,command,field,key,null,value,clear,command,end,object,clear,command,end,object,if,must,clear,request,request,new,request,put,settings,request,set,json,entity,strings,to,string,clear,command,admin,client,perform,request,request
ESRestTestCase -> @Deprecated     protected boolean getStrictDeprecationMode();1544448720;Whether the used REST client should return any response containing at_least one warning header as a failure._@deprecated always run in strict mode and use_{@link RequestOptions.Builder#setWarningsHandler} to override this_behavior on individual requests;@Deprecated_    protected boolean getStrictDeprecationMode() {_        return true__    };whether,the,used,rest,client,should,return,any,response,containing,at,least,one,warning,header,as,a,failure,deprecated,always,run,in,strict,mode,and,use,link,request,options,builder,set,warnings,handler,to,override,this,behavior,on,individual,requests;deprecated,protected,boolean,get,strict,deprecation,mode,return,true
ESRestTestCase -> @Deprecated     protected boolean getStrictDeprecationMode();1544549415;Whether the used REST client should return any response containing at_least one warning header as a failure._@deprecated always run in strict mode and use_{@link RequestOptions.Builder#setWarningsHandler} to override this_behavior on individual requests;@Deprecated_    protected boolean getStrictDeprecationMode() {_        return true__    };whether,the,used,rest,client,should,return,any,response,containing,at,least,one,warning,header,as,a,failure,deprecated,always,run,in,strict,mode,and,use,link,request,options,builder,set,warnings,handler,to,override,this,behavior,on,individual,requests;deprecated,protected,boolean,get,strict,deprecation,mode,return,true
ESRestTestCase -> @Deprecated     protected boolean getStrictDeprecationMode();1544575397;Whether the used REST client should return any response containing at_least one warning header as a failure._@deprecated always run in strict mode and use_{@link RequestOptions.Builder#setWarningsHandler} to override this_behavior on individual requests;@Deprecated_    protected boolean getStrictDeprecationMode() {_        return true__    };whether,the,used,rest,client,should,return,any,response,containing,at,least,one,warning,header,as,a,failure,deprecated,always,run,in,strict,mode,and,use,link,request,options,builder,set,warnings,handler,to,override,this,behavior,on,individual,requests;deprecated,protected,boolean,get,strict,deprecation,mode,return,true
ESRestTestCase -> @Deprecated     protected boolean getStrictDeprecationMode();1544648252;Whether the used REST client should return any response containing at_least one warning header as a failure._@deprecated always run in strict mode and use_{@link RequestOptions.Builder#setWarningsHandler} to override this_behavior on individual requests;@Deprecated_    protected boolean getStrictDeprecationMode() {_        return true__    };whether,the,used,rest,client,should,return,any,response,containing,at,least,one,warning,header,as,a,failure,deprecated,always,run,in,strict,mode,and,use,link,request,options,builder,set,warnings,handler,to,override,this,behavior,on,individual,requests;deprecated,protected,boolean,get,strict,deprecation,mode,return,true
ESRestTestCase -> @Deprecated     protected boolean getStrictDeprecationMode();1547479364;Whether the used REST client should return any response containing at_least one warning header as a failure._@deprecated always run in strict mode and use_{@link RequestOptions.Builder#setWarningsHandler} to override this_behavior on individual requests;@Deprecated_    protected boolean getStrictDeprecationMode() {_        return true__    };whether,the,used,rest,client,should,return,any,response,containing,at,least,one,warning,header,as,a,failure,deprecated,always,run,in,strict,mode,and,use,link,request,options,builder,set,warnings,handler,to,override,this,behavior,on,individual,requests;deprecated,protected,boolean,get,strict,deprecation,mode,return,true
ESRestTestCase -> @Deprecated     protected boolean getStrictDeprecationMode();1547500081;Whether the used REST client should return any response containing at_least one warning header as a failure._@deprecated always run in strict mode and use_{@link RequestOptions.Builder#setWarningsHandler} to override this_behavior on individual requests;@Deprecated_    protected boolean getStrictDeprecationMode() {_        return true__    };whether,the,used,rest,client,should,return,any,response,containing,at,least,one,warning,header,as,a,failure,deprecated,always,run,in,strict,mode,and,use,link,request,options,builder,set,warnings,handler,to,override,this,behavior,on,individual,requests;deprecated,protected,boolean,get,strict,deprecation,mode,return,true
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1540238977;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1540313026;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1540486836;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1540503333;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1540581592;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1540583181;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1540941545;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1541690603;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1542145037;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1543368857;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1543495053;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1543514185;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1543514303;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1544448720;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1544549415;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1544575397;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1544648252;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1547479364;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1547500081;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1548866914;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1548928790;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1549310947;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1549439027;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1550083218;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception;1550276900;Wait for outstanding tasks to complete. The specified admin client is used to check the outstanding tasks and this is done using_{@link ESTestCase#assertBusy(CheckedRunnable)} to give a chance to any outstanding tasks to complete. The specified filter is used_to filter out outstanding tasks that are expected to be there.__@param adminClient the admin client_@param taskFilter  predicate used to filter tasks that are expected to be there_@throws Exception if an exception is thrown while checking the outstanding tasks;public static void waitForPendingTasks(final RestClient adminClient, final Predicate<String> taskFilter) throws Exception {_        assertBusy(() -> {_            try {_                final Request request = new Request("GET", "/_cat/tasks")__                request.addParameter("detailed", "true")__                final Response response = adminClient.performRequest(request)__                _                if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {_                    try (BufferedReader responseReader = new BufferedReader(_                            new InputStreamReader(response.getEntity().getContent(), StandardCharsets.UTF_8))) {_                        int activeTasks = 0__                        String line__                        final StringBuilder tasksListString = new StringBuilder()__                        while ((line = responseReader.readLine()) != null) {_                            final String taskName = line.split("\\s+")[0]__                            if (taskName.startsWith(ListTasksAction.NAME) || taskFilter.test(taskName)) {_                                continue__                            }_                            activeTasks++__                            tasksListString.append(line)__                            tasksListString.append('\n')__                        }_                        assertEquals(activeTasks + " active tasks found:\n" + tasksListString, 0, activeTasks)__                    }_                }_            } catch (final IOException e) {_                throw new AssertionError("error getting active tasks list", e)__            }_        })__    };wait,for,outstanding,tasks,to,complete,the,specified,admin,client,is,used,to,check,the,outstanding,tasks,and,this,is,done,using,link,estest,case,assert,busy,checked,runnable,to,give,a,chance,to,any,outstanding,tasks,to,complete,the,specified,filter,is,used,to,filter,out,outstanding,tasks,that,are,expected,to,be,there,param,admin,client,the,admin,client,param,task,filter,predicate,used,to,filter,tasks,that,are,expected,to,be,there,throws,exception,if,an,exception,is,thrown,while,checking,the,outstanding,tasks;public,static,void,wait,for,pending,tasks,final,rest,client,admin,client,final,predicate,string,task,filter,throws,exception,assert,busy,try,final,request,request,new,request,get,tasks,request,add,parameter,detailed,true,final,response,response,admin,client,perform,request,request,if,response,get,status,line,get,status,code,http,status,try,buffered,reader,response,reader,new,buffered,reader,new,input,stream,reader,response,get,entity,get,content,standard,charsets,int,active,tasks,0,string,line,final,string,builder,tasks,list,string,new,string,builder,while,line,response,reader,read,line,null,final,string,task,name,line,split,s,0,if,task,name,starts,with,list,tasks,action,name,task,filter,test,task,name,continue,active,tasks,tasks,list,string,append,line,tasks,list,string,append,n,assert,equals,active,tasks,active,tasks,found,n,tasks,list,string,0,active,tasks,catch,final,ioexception,e,throw,new,assertion,error,error,getting,active,tasks,list,e
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1524684173;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1528762805;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1529687475;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1531179852;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1531382259;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1532456624;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1533143718;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1536187065;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1536611444;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1537300661;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1537806831;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1539796943;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1540238977;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1540313026;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1540486836;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1540503333;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1540581592;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1540583181;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1540941545;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1541690603;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1542145037;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1543368857;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1543495053;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1543514185;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1543514303;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1544448720;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1544549415;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1544575397;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1544648252;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1547479364;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1547500081;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1548866914;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1548928790;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1549310947;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1549439027;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1550083218;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> @After     public final void cleanUpCluster() throws Exception;1550276900;Clean up after the test case.;@After_    public final void cleanUpCluster() throws Exception {_        if (preserveClusterUponCompletion() == false) {_            wipeCluster()__            waitForClusterStateUpdatesToFinish()__            logIfThereAreRunningTasks()__        }_    };clean,up,after,the,test,case;after,public,final,void,clean,up,cluster,throws,exception,if,preserve,cluster,upon,completion,false,wipe,cluster,wait,for,cluster,state,updates,to,finish,log,if,there,are,running,tasks
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void current(String... requiredWarnings);1544549415;Adds to the set of warnings that are all required in responses if the cluster_is formed from nodes all running the exact same version as the client._@param requiredWarnings a set of required warnings;public void current(String... requiredWarnings) {_            requiredSameVersionClusterWarnings.addAll(Arrays.asList(requiredWarnings))__        };adds,to,the,set,of,warnings,that,are,all,required,in,responses,if,the,cluster,is,formed,from,nodes,all,running,the,exact,same,version,as,the,client,param,required,warnings,a,set,of,required,warnings;public,void,current,string,required,warnings,required,same,version,cluster,warnings,add,all,arrays,as,list,required,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void current(String... requiredWarnings);1544575397;Adds to the set of warnings that are all required in responses if the cluster_is formed from nodes all running the exact same version as the client._@param requiredWarnings a set of required warnings;public void current(String... requiredWarnings) {_            requiredSameVersionClusterWarnings.addAll(Arrays.asList(requiredWarnings))__        };adds,to,the,set,of,warnings,that,are,all,required,in,responses,if,the,cluster,is,formed,from,nodes,all,running,the,exact,same,version,as,the,client,param,required,warnings,a,set,of,required,warnings;public,void,current,string,required,warnings,required,same,version,cluster,warnings,add,all,arrays,as,list,required,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void current(String... requiredWarnings);1544648252;Adds to the set of warnings that are all required in responses if the cluster_is formed from nodes all running the exact same version as the client._@param requiredWarnings a set of required warnings;public void current(String... requiredWarnings) {_            requiredSameVersionClusterWarnings.addAll(Arrays.asList(requiredWarnings))__        };adds,to,the,set,of,warnings,that,are,all,required,in,responses,if,the,cluster,is,formed,from,nodes,all,running,the,exact,same,version,as,the,client,param,required,warnings,a,set,of,required,warnings;public,void,current,string,required,warnings,required,same,version,cluster,warnings,add,all,arrays,as,list,required,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void current(String... requiredWarnings);1547479364;Adds to the set of warnings that are all required in responses if the cluster_is formed from nodes all running the exact same version as the client._@param requiredWarnings a set of required warnings;public void current(String... requiredWarnings) {_            requiredSameVersionClusterWarnings.addAll(Arrays.asList(requiredWarnings))__        };adds,to,the,set,of,warnings,that,are,all,required,in,responses,if,the,cluster,is,formed,from,nodes,all,running,the,exact,same,version,as,the,client,param,required,warnings,a,set,of,required,warnings;public,void,current,string,required,warnings,required,same,version,cluster,warnings,add,all,arrays,as,list,required,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void current(String... requiredWarnings);1547500081;Adds to the set of warnings that are all required in responses if the cluster_is formed from nodes all running the exact same version as the client._@param requiredWarnings a set of required warnings;public void current(String... requiredWarnings) {_            requiredSameVersionClusterWarnings.addAll(Arrays.asList(requiredWarnings))__        };adds,to,the,set,of,warnings,that,are,all,required,in,responses,if,the,cluster,is,formed,from,nodes,all,running,the,exact,same,version,as,the,client,param,required,warnings,a,set,of,required,warnings;public,void,current,string,required,warnings,required,same,version,cluster,warnings,add,all,arrays,as,list,required,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void current(String... requiredWarnings);1548866914;Adds to the set of warnings that are all required in responses if the cluster_is formed from nodes all running the exact same version as the client._@param requiredWarnings a set of required warnings;public void current(String... requiredWarnings) {_            requiredSameVersionClusterWarnings.addAll(Arrays.asList(requiredWarnings))__        };adds,to,the,set,of,warnings,that,are,all,required,in,responses,if,the,cluster,is,formed,from,nodes,all,running,the,exact,same,version,as,the,client,param,required,warnings,a,set,of,required,warnings;public,void,current,string,required,warnings,required,same,version,cluster,warnings,add,all,arrays,as,list,required,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void current(String... requiredWarnings);1548928790;Adds to the set of warnings that are all required in responses if the cluster_is formed from nodes all running the exact same version as the client._@param requiredWarnings a set of required warnings;public void current(String... requiredWarnings) {_            requiredSameVersionClusterWarnings.addAll(Arrays.asList(requiredWarnings))__        };adds,to,the,set,of,warnings,that,are,all,required,in,responses,if,the,cluster,is,formed,from,nodes,all,running,the,exact,same,version,as,the,client,param,required,warnings,a,set,of,required,warnings;public,void,current,string,required,warnings,required,same,version,cluster,warnings,add,all,arrays,as,list,required,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void current(String... requiredWarnings);1549310947;Adds to the set of warnings that are all required in responses if the cluster_is formed from nodes all running the exact same version as the client._@param requiredWarnings a set of required warnings;public void current(String... requiredWarnings) {_            requiredSameVersionClusterWarnings.addAll(Arrays.asList(requiredWarnings))__        };adds,to,the,set,of,warnings,that,are,all,required,in,responses,if,the,cluster,is,formed,from,nodes,all,running,the,exact,same,version,as,the,client,param,required,warnings,a,set,of,required,warnings;public,void,current,string,required,warnings,required,same,version,cluster,warnings,add,all,arrays,as,list,required,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void current(String... requiredWarnings);1549439027;Adds to the set of warnings that are all required in responses if the cluster_is formed from nodes all running the exact same version as the client._@param requiredWarnings a set of required warnings;public void current(String... requiredWarnings) {_            requiredSameVersionClusterWarnings.addAll(Arrays.asList(requiredWarnings))__        };adds,to,the,set,of,warnings,that,are,all,required,in,responses,if,the,cluster,is,formed,from,nodes,all,running,the,exact,same,version,as,the,client,param,required,warnings,a,set,of,required,warnings;public,void,current,string,required,warnings,required,same,version,cluster,warnings,add,all,arrays,as,list,required,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void current(String... requiredWarnings);1550083218;Adds to the set of warnings that are all required in responses if the cluster_is formed from nodes all running the exact same version as the client._@param requiredWarnings a set of required warnings;public void current(String... requiredWarnings) {_            requiredSameVersionClusterWarnings.addAll(Arrays.asList(requiredWarnings))__        };adds,to,the,set,of,warnings,that,are,all,required,in,responses,if,the,cluster,is,formed,from,nodes,all,running,the,exact,same,version,as,the,client,param,required,warnings,a,set,of,required,warnings;public,void,current,string,required,warnings,required,same,version,cluster,warnings,add,all,arrays,as,list,required,warnings
ESRestTestCase -> VersionSensitiveWarningsHandler -> public void current(String... requiredWarnings);1550276900;Adds to the set of warnings that are all required in responses if the cluster_is formed from nodes all running the exact same version as the client._@param requiredWarnings a set of required warnings;public void current(String... requiredWarnings) {_            requiredSameVersionClusterWarnings.addAll(Arrays.asList(requiredWarnings))__        };adds,to,the,set,of,warnings,that,are,all,required,in,responses,if,the,cluster,is,formed,from,nodes,all,running,the,exact,same,version,as,the,client,param,required,warnings,a,set,of,required,warnings;public,void,current,string,required,warnings,required,same,version,cluster,warnings,add,all,arrays,as,list,required,warnings
ESRestTestCase -> public static RequestOptions expectWarnings(String... warnings);1544648252;Creates request options designed to be used when making a call that can return warnings, for example a_deprecated request. The options will ensure that the given warnings are returned if all nodes are on_{@link Version#CURRENT} and will allow (but not require) the warnings if any node is running an older version.__@param warnings The expected warnings.;public static RequestOptions expectWarnings(String... warnings) {_        return expectVersionSpecificWarnings(consumer -> consumer.current(warnings))__    };creates,request,options,designed,to,be,used,when,making,a,call,that,can,return,warnings,for,example,a,deprecated,request,the,options,will,ensure,that,the,given,warnings,are,returned,if,all,nodes,are,on,link,version,current,and,will,allow,but,not,require,the,warnings,if,any,node,is,running,an,older,version,param,warnings,the,expected,warnings;public,static,request,options,expect,warnings,string,warnings,return,expect,version,specific,warnings,consumer,consumer,current,warnings
ESRestTestCase -> public static RequestOptions expectWarnings(String... warnings);1547479364;Creates request options designed to be used when making a call that can return warnings, for example a_deprecated request. The options will ensure that the given warnings are returned if all nodes are on_{@link Version#CURRENT} and will allow (but not require) the warnings if any node is running an older version.__@param warnings The expected warnings.;public static RequestOptions expectWarnings(String... warnings) {_        return expectVersionSpecificWarnings(consumer -> consumer.current(warnings))__    };creates,request,options,designed,to,be,used,when,making,a,call,that,can,return,warnings,for,example,a,deprecated,request,the,options,will,ensure,that,the,given,warnings,are,returned,if,all,nodes,are,on,link,version,current,and,will,allow,but,not,require,the,warnings,if,any,node,is,running,an,older,version,param,warnings,the,expected,warnings;public,static,request,options,expect,warnings,string,warnings,return,expect,version,specific,warnings,consumer,consumer,current,warnings
ESRestTestCase -> public static RequestOptions expectWarnings(String... warnings);1547500081;Creates request options designed to be used when making a call that can return warnings, for example a_deprecated request. The options will ensure that the given warnings are returned if all nodes are on_{@link Version#CURRENT} and will allow (but not require) the warnings if any node is running an older version.__@param warnings The expected warnings.;public static RequestOptions expectWarnings(String... warnings) {_        return expectVersionSpecificWarnings(consumer -> consumer.current(warnings))__    };creates,request,options,designed,to,be,used,when,making,a,call,that,can,return,warnings,for,example,a,deprecated,request,the,options,will,ensure,that,the,given,warnings,are,returned,if,all,nodes,are,on,link,version,current,and,will,allow,but,not,require,the,warnings,if,any,node,is,running,an,older,version,param,warnings,the,expected,warnings;public,static,request,options,expect,warnings,string,warnings,return,expect,version,specific,warnings,consumer,consumer,current,warnings
ESRestTestCase -> public static RequestOptions expectWarnings(String... warnings);1548866914;Creates request options designed to be used when making a call that can return warnings, for example a_deprecated request. The options will ensure that the given warnings are returned if all nodes are on_{@link Version#CURRENT} and will allow (but not require) the warnings if any node is running an older version.__@param warnings The expected warnings.;public static RequestOptions expectWarnings(String... warnings) {_        return expectVersionSpecificWarnings(consumer -> consumer.current(warnings))__    };creates,request,options,designed,to,be,used,when,making,a,call,that,can,return,warnings,for,example,a,deprecated,request,the,options,will,ensure,that,the,given,warnings,are,returned,if,all,nodes,are,on,link,version,current,and,will,allow,but,not,require,the,warnings,if,any,node,is,running,an,older,version,param,warnings,the,expected,warnings;public,static,request,options,expect,warnings,string,warnings,return,expect,version,specific,warnings,consumer,consumer,current,warnings
ESRestTestCase -> public static RequestOptions expectWarnings(String... warnings);1548928790;Creates request options designed to be used when making a call that can return warnings, for example a_deprecated request. The options will ensure that the given warnings are returned if all nodes are on_{@link Version#CURRENT} and will allow (but not require) the warnings if any node is running an older version.__@param warnings The expected warnings.;public static RequestOptions expectWarnings(String... warnings) {_        return expectVersionSpecificWarnings(consumer -> consumer.current(warnings))__    };creates,request,options,designed,to,be,used,when,making,a,call,that,can,return,warnings,for,example,a,deprecated,request,the,options,will,ensure,that,the,given,warnings,are,returned,if,all,nodes,are,on,link,version,current,and,will,allow,but,not,require,the,warnings,if,any,node,is,running,an,older,version,param,warnings,the,expected,warnings;public,static,request,options,expect,warnings,string,warnings,return,expect,version,specific,warnings,consumer,consumer,current,warnings
ESRestTestCase -> public static RequestOptions expectWarnings(String... warnings);1549310947;Creates request options designed to be used when making a call that can return warnings, for example a_deprecated request. The options will ensure that the given warnings are returned if all nodes are on_{@link Version#CURRENT} and will allow (but not require) the warnings if any node is running an older version.__@param warnings The expected warnings.;public static RequestOptions expectWarnings(String... warnings) {_        return expectVersionSpecificWarnings(consumer -> consumer.current(warnings))__    };creates,request,options,designed,to,be,used,when,making,a,call,that,can,return,warnings,for,example,a,deprecated,request,the,options,will,ensure,that,the,given,warnings,are,returned,if,all,nodes,are,on,link,version,current,and,will,allow,but,not,require,the,warnings,if,any,node,is,running,an,older,version,param,warnings,the,expected,warnings;public,static,request,options,expect,warnings,string,warnings,return,expect,version,specific,warnings,consumer,consumer,current,warnings
ESRestTestCase -> public static RequestOptions expectWarnings(String... warnings);1549439027;Creates request options designed to be used when making a call that can return warnings, for example a_deprecated request. The options will ensure that the given warnings are returned if all nodes are on_{@link Version#CURRENT} and will allow (but not require) the warnings if any node is running an older version.__@param warnings The expected warnings.;public static RequestOptions expectWarnings(String... warnings) {_        return expectVersionSpecificWarnings(consumer -> consumer.current(warnings))__    };creates,request,options,designed,to,be,used,when,making,a,call,that,can,return,warnings,for,example,a,deprecated,request,the,options,will,ensure,that,the,given,warnings,are,returned,if,all,nodes,are,on,link,version,current,and,will,allow,but,not,require,the,warnings,if,any,node,is,running,an,older,version,param,warnings,the,expected,warnings;public,static,request,options,expect,warnings,string,warnings,return,expect,version,specific,warnings,consumer,consumer,current,warnings
ESRestTestCase -> public static RequestOptions expectWarnings(String... warnings);1550083218;Creates request options designed to be used when making a call that can return warnings, for example a_deprecated request. The options will ensure that the given warnings are returned if all nodes are on_{@link Version#CURRENT} and will allow (but not require) the warnings if any node is running an older version.__@param warnings The expected warnings.;public static RequestOptions expectWarnings(String... warnings) {_        return expectVersionSpecificWarnings(consumer -> consumer.current(warnings))__    };creates,request,options,designed,to,be,used,when,making,a,call,that,can,return,warnings,for,example,a,deprecated,request,the,options,will,ensure,that,the,given,warnings,are,returned,if,all,nodes,are,on,link,version,current,and,will,allow,but,not,require,the,warnings,if,any,node,is,running,an,older,version,param,warnings,the,expected,warnings;public,static,request,options,expect,warnings,string,warnings,return,expect,version,specific,warnings,consumer,consumer,current,warnings
ESRestTestCase -> public static RequestOptions expectWarnings(String... warnings);1550276900;Creates request options designed to be used when making a call that can return warnings, for example a_deprecated request. The options will ensure that the given warnings are returned if all nodes are on_{@link Version#CURRENT} and will allow (but not require) the warnings if any node is running an older version.__@param warnings The expected warnings.;public static RequestOptions expectWarnings(String... warnings) {_        return expectVersionSpecificWarnings(consumer -> consumer.current(warnings))__    };creates,request,options,designed,to,be,used,when,making,a,call,that,can,return,warnings,for,example,a,deprecated,request,the,options,will,ensure,that,the,given,warnings,are,returned,if,all,nodes,are,on,link,version,current,and,will,allow,but,not,require,the,warnings,if,any,node,is,running,an,older,version,param,warnings,the,expected,warnings;public,static,request,options,expect,warnings,string,warnings,return,expect,version,specific,warnings,consumer,consumer,current,warnings
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1524684173;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest("GET", "_cluster/pending_tasks")__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1528762805;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest("GET", "_cluster/pending_tasks")__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1529687475;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest("GET", "_cluster/pending_tasks")__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1531179852;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest("GET", "_cluster/pending_tasks")__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1531382259;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1532456624;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1533143718;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1536187065;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1536611444;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1537300661;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1537806831;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1539796943;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1540238977;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1540313026;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1540486836;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1540503333;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1540581592;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1540583181;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1540941545;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1541690603;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1542145037;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1543368857;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1543495053;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1543514185;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1543514303;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1544448720;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1544549415;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1544575397;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1544648252;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1547479364;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1547500081;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1548866914;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1548928790;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1549310947;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1549439027;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1550083218;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private void waitForClusterStateUpdatesToFinish() throws Exception;1550276900;Waits for the cluster state updates to have been processed, so that no cluster_state updates are still in-progress when the next test starts.;private void waitForClusterStateUpdatesToFinish() throws Exception {_        assertBusy(() -> {_            try {_                Response response = adminClient().performRequest(new Request("GET", "/_cluster/pending_tasks"))__                List<?> tasks = (List<?>) entityAsMap(response).get("tasks")__                if (false == tasks.isEmpty()) {_                    StringBuilder message = new StringBuilder("there are still running tasks:")__                    for (Object task: tasks) {_                        message.append('\n').append(task.toString())__                    }_                    fail(message.toString())__                }_            } catch (IOException e) {_                fail("cannot get cluster's pending tasks: " + e.getMessage())__            }_        }, 30, TimeUnit.SECONDS)__    };waits,for,the,cluster,state,updates,to,have,been,processed,so,that,no,cluster,state,updates,are,still,in,progress,when,the,next,test,starts;private,void,wait,for,cluster,state,updates,to,finish,throws,exception,assert,busy,try,response,response,admin,client,perform,request,new,request,get,list,tasks,list,entity,as,map,response,get,tasks,if,false,tasks,is,empty,string,builder,message,new,string,builder,there,are,still,running,tasks,for,object,task,tasks,message,append,n,append,task,to,string,fail,message,to,string,catch,ioexception,e,fail,cannot,get,cluster,s,pending,tasks,e,get,message,30,time,unit,seconds
ESRestTestCase -> private static boolean isXPackTemplate(String name);1531179852;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch-history-")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,history,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1531382259;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch-history-")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,history,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1532456624;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch-history-")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,history,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1533143718;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch-history-")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,history,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1536187065;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch-history-")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,history,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1536611444;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch-history-")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,history,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1537300661;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch-history-")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,history,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1537806831;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1539796943;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1540238977;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1540313026;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1540486836;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1540503333;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1540581592;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1540583181;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1540941545;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1541690603;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1542145037;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1543368857;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1543495053;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1543514185;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1543514303;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1544448720;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1544549415;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1544575397;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1544648252;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1547479364;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1547500081;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1548866914;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1548928790;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1549310947;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1549439027;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1550083218;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> private static boolean isXPackTemplate(String name);1550276900;Is this template one that is automatically created by xpack?;private static boolean isXPackTemplate(String name) {_        if (name.startsWith(".monitoring-")) {_            return true__        }_        if (name.startsWith(".watch") || name.startsWith(".triggered_watches")) {_            return true__        }_        if (name.startsWith(".ml-")) {_            return true__        }_        switch (name) {_        case ".triggered_watches":_        case ".watches":_        case "logstash-index-template":_        case "security_audit_log":_            return true__        default:_            return false__        }_    };is,this,template,one,that,is,automatically,created,by,xpack;private,static,boolean,is,xpack,template,string,name,if,name,starts,with,monitoring,return,true,if,name,starts,with,watch,name,starts,with,return,true,if,name,starts,with,ml,return,true,switch,name,case,case,watches,case,logstash,index,template,case,return,true,default,return,false
ESRestTestCase -> protected String getProtocol();1524684173;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1528762805;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1529687475;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1531179852;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1531382259;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1532456624;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1533143718;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1536187065;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1536611444;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1537300661;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1537806831;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1539796943;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1540238977;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1540313026;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1540486836;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1540503333;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1540581592;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1540583181;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1540941545;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1541690603;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1542145037;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1543368857;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1543495053;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1543514185;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1543514303;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1544448720;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1544549415;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1544575397;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1544648252;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1547479364;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1547500081;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1548866914;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1548928790;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1549310947;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1549439027;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1550083218;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected String getProtocol();1550276900;Override this to switch to testing https.;protected String getProtocol() {_        return "http"__    };override,this,to,switch,to,testing,https;protected,string,get,protocol,return,http
ESRestTestCase -> protected static RestClient client();1524684173;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1528762805;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1529687475;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1531179852;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1531382259;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1532456624;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1533143718;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1536187065;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1536611444;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1537300661;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1537806831;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1539796943;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1540238977;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1540313026;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1540486836;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1540503333;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1540581592;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1540583181;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1540941545;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1541690603;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1542145037;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1543368857;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1543495053;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1543514185;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1543514303;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1544448720;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1544549415;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1544575397;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1544648252;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1547479364;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1547500081;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1548866914;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1548928790;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1549310947;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1549439027;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1550083218;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static RestClient client();1550276900;Get the client used for ordinary api calls while writing a test;protected static RestClient client() {_        return client__    };get,the,client,used,for,ordinary,api,calls,while,writing,a,test;protected,static,rest,client,client,return,client
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1524684173;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Map<String, String> params = new HashMap<>()__        params.put("wait_for_status", "green")__        params.put("wait_for_no_relocating_shards", "true")__        params.put("timeout", "70s")__        params.put("level", "shards")__        assertOK(client().performRequest("GET", "_cluster/health/" + index, params))__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,map,string,string,params,new,hash,map,params,put,green,params,put,true,params,put,timeout,70s,params,put,level,shards,assert,ok,client,perform,request,get,health,index,params
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1528762805;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Map<String, String> params = new HashMap<>()__        params.put("wait_for_status", "green")__        params.put("wait_for_no_relocating_shards", "true")__        params.put("timeout", "70s")__        params.put("level", "shards")__        assertOK(client().performRequest("GET", "_cluster/health/" + index, params))__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,map,string,string,params,new,hash,map,params,put,green,params,put,true,params,put,timeout,70s,params,put,level,shards,assert,ok,client,perform,request,get,health,index,params
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1529687475;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Map<String, String> params = new HashMap<>()__        params.put("wait_for_status", "green")__        params.put("wait_for_no_relocating_shards", "true")__        params.put("timeout", "70s")__        params.put("level", "shards")__        assertOK(client().performRequest("GET", "_cluster/health/" + index, params))__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,map,string,string,params,new,hash,map,params,put,green,params,put,true,params,put,timeout,70s,params,put,level,shards,assert,ok,client,perform,request,get,health,index,params
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1531179852;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Map<String, String> params = new HashMap<>()__        params.put("wait_for_status", "green")__        params.put("wait_for_no_relocating_shards", "true")__        params.put("timeout", "70s")__        params.put("level", "shards")__        assertOK(client().performRequest("GET", "_cluster/health/" + index, params))__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,map,string,string,params,new,hash,map,params,put,green,params,put,true,params,put,timeout,70s,params,put,level,shards,assert,ok,client,perform,request,get,health,index,params
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1531382259;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1532456624;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1533143718;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1536187065;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1536611444;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1537300661;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1537806831;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1539796943;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1540238977;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1540313026;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1540486836;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1540503333;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1540581592;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1540583181;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1540941545;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1541690603;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1542145037;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1543368857;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1543495053;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1543514185;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1543514303;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1544448720;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1544549415;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1544575397;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1544648252;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1547479364;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1547500081;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1548866914;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1548928790;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1549310947;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1549439027;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1550083218;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected static void ensureGreen(String index) throws IOException;1550276900;checks that the specific index is green. we force a selection of an index as the tests share a cluster and often leave indices_in an non green state_@param index index to test for;protected static void ensureGreen(String index) throws IOException {_        Request request = new Request("GET", "/_cluster/health/" + index)__        request.addParameter("wait_for_status", "green")__        request.addParameter("wait_for_no_relocating_shards", "true")__        request.addParameter("timeout", "70s")__        request.addParameter("level", "shards")__        client().performRequest(request)__    };checks,that,the,specific,index,is,green,we,force,a,selection,of,an,index,as,the,tests,share,a,cluster,and,often,leave,indices,in,an,non,green,state,param,index,index,to,test,for;protected,static,void,ensure,green,string,index,throws,ioexception,request,request,new,request,get,health,index,request,add,parameter,green,request,add,parameter,true,request,add,parameter,timeout,70s,request,add,parameter,level,shards,client,perform,request,request
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1524684173;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1528762805;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1529687475;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1531179852;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1531382259;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1532456624;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1533143718;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1536187065;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1536611444;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1537300661;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1537806831;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1539796943;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1540238977;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1540313026;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1540486836;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1540503333;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1540581592;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1540583181;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1540941545;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1541690603;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1542145037;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1543368857;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1543495053;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1543514185;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1543514303;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1544448720;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1544549415;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1544575397;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1544648252;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1547479364;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1547500081;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1548866914;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1548928790;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1549310947;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1549439027;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1550083218;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> protected boolean preserveIndicesUponCompletion();1550276900;Returns whether to preserve the indices created during this test on completion of this test._Defaults to {@code false}. Override this method if indices should be preserved after the test,_with the assumption that some other process or test will clean up the indices afterward._This is useful if the data directory and indices need to be preserved between test runs_(for example, when testing rolling upgrades).;protected boolean preserveIndicesUponCompletion() {_        return false__    };returns,whether,to,preserve,the,indices,created,during,this,test,on,completion,of,this,test,defaults,to,code,false,override,this,method,if,indices,should,be,preserved,after,the,test,with,the,assumption,that,some,other,process,or,test,will,clean,up,the,indices,afterward,this,is,useful,if,the,data,directory,and,indices,need,to,be,preserved,between,test,runs,for,example,when,testing,rolling,upgrades;protected,boolean,preserve,indices,upon,completion,return,false
ESRestTestCase -> public static boolean hasXPack();1547479364;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack();1547500081;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack();1548866914;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack();1548928790;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack();1549310947;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack();1549439027;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack();1550083218;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> public static boolean hasXPack();1550276900;Does any node in the cluster being tested have x-pack installed?;public static boolean hasXPack() {_        if (hasXPack == null) {_            throw new IllegalStateException("must be called inside of a rest test case test")__        }_        return hasXPack__    };does,any,node,in,the,cluster,being,tested,have,x,pack,installed;public,static,boolean,has,xpack,if,has,xpack,null,throw,new,illegal,state,exception,must,be,called,inside,of,a,rest,test,case,test,return,has,xpack
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1524684173;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest("GET", "_tasks"))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1528762805;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest("GET", "_tasks"))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1529687475;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest("GET", "_tasks"))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1531179852;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest("GET", "_tasks"))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1531382259;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1532456624;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1533143718;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1536187065;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1536611444;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1537300661;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1537806831;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1539796943;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1540238977;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1540313026;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1540486836;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1540503333;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1540581592;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1540583181;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1540941545;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1541690603;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1542145037;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1543368857;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1543495053;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1543514185;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1543514303;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1544448720;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1544549415;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1544575397;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> private void logIfThereAreRunningTasks() throws InterruptedException, IOException;1544648252;Logs a message if there are still running tasks. The reasoning is that any tasks still running are state the is trying to bleed into_other tests.;private void logIfThereAreRunningTasks() throws InterruptedException, IOException {_        Set<String> runningTasks = runningTasks(adminClient().performRequest(new Request("GET", "/_tasks")))__        _        runningTasks.remove(ListTasksAction.NAME)__        runningTasks.remove(ListTasksAction.NAME + "[n]")__        if (runningTasks.isEmpty()) {_            return__        }_        List<String> stillRunning = new ArrayList<>(runningTasks)__        sort(stillRunning)__        logger.info("There are still tasks running after this test that might break subsequent tests {}.", stillRunning)__        _    };logs,a,message,if,there,are,still,running,tasks,the,reasoning,is,that,any,tasks,still,running,are,state,the,is,trying,to,bleed,into,other,tests;private,void,log,if,there,are,running,tasks,throws,interrupted,exception,ioexception,set,string,running,tasks,running,tasks,admin,client,perform,request,new,request,get,running,tasks,remove,list,tasks,action,name,running,tasks,remove,list,tasks,action,name,n,if,running,tasks,is,empty,return,list,string,still,running,new,array,list,running,tasks,sort,still,running,logger,info,there,are,still,tasks,running,after,this,test,that,might,break,subsequent,tests,still,running
ESRestTestCase -> protected boolean preserveClusterSettings();1536611444;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1537300661;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1537806831;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1539796943;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1540238977;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1540313026;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1540486836;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1540503333;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1540581592;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1540583181;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1540941545;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1541690603;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1542145037;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1543368857;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1543495053;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1543514185;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1543514303;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1544448720;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1544549415;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1544575397;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1544648252;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1547479364;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1547500081;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1548866914;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1548928790;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1549310947;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1549439027;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1550083218;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean preserveClusterSettings();1550276900;Controls whether or not to preserve cluster settings upon completion of the test. The default implementation is to remove all cluster_settings.__@return true if cluster settings should be preserved and otherwise false;protected boolean preserveClusterSettings() {_        return false__    };controls,whether,or,not,to,preserve,cluster,settings,upon,completion,of,the,test,the,default,implementation,is,to,remove,all,cluster,settings,return,true,if,cluster,settings,should,be,preserved,and,otherwise,false;protected,boolean,preserve,cluster,settings,return,false
ESRestTestCase -> protected boolean getStrictDeprecationMode();1540486836;Whether the used REST client should return any response containing at_least one warning header as a failure.;protected boolean getStrictDeprecationMode() {_        return true__    };whether,the,used,rest,client,should,return,any,response,containing,at,least,one,warning,header,as,a,failure;protected,boolean,get,strict,deprecation,mode,return,true
ESRestTestCase -> protected boolean getStrictDeprecationMode();1540503333;Whether the used REST client should return any response containing at_least one warning header as a failure.;protected boolean getStrictDeprecationMode() {_        return true__    };whether,the,used,rest,client,should,return,any,response,containing,at,least,one,warning,header,as,a,failure;protected,boolean,get,strict,deprecation,mode,return,true
ESRestTestCase -> protected boolean getStrictDeprecationMode();1540581592;Whether the used REST client should return any response containing at_least one warning header as a failure.;protected boolean getStrictDeprecationMode() {_        return true__    };whether,the,used,rest,client,should,return,any,response,containing,at,least,one,warning,header,as,a,failure;protected,boolean,get,strict,deprecation,mode,return,true
ESRestTestCase -> protected boolean getStrictDeprecationMode();1540583181;Whether the used REST client should return any response containing at_least one warning header as a failure.;protected boolean getStrictDeprecationMode() {_        return true__    };whether,the,used,rest,client,should,return,any,response,containing,at,least,one,warning,header,as,a,failure;protected,boolean,get,strict,deprecation,mode,return,true
ESRestTestCase -> protected boolean getStrictDeprecationMode();1540941545;Whether the used REST client should return any response containing at_least one warning header as a failure.;protected boolean getStrictDeprecationMode() {_        return true__    };whether,the,used,rest,client,should,return,any,response,containing,at,least,one,warning,header,as,a,failure;protected,boolean,get,strict,deprecation,mode,return,true
ESRestTestCase -> protected boolean getStrictDeprecationMode();1541690603;Whether the used REST client should return any response containing at_least one warning header as a failure.;protected boolean getStrictDeprecationMode() {_        return true__    };whether,the,used,rest,client,should,return,any,response,containing,at,least,one,warning,header,as,a,failure;protected,boolean,get,strict,deprecation,mode,return,true
ESRestTestCase -> protected boolean getStrictDeprecationMode();1542145037;Whether the used REST client should return any response containing at_least one warning header as a failure.;protected boolean getStrictDeprecationMode() {_        return true__    };whether,the,used,rest,client,should,return,any,response,containing,at,least,one,warning,header,as,a,failure;protected,boolean,get,strict,deprecation,mode,return,true
ESRestTestCase -> protected boolean getStrictDeprecationMode();1543368857;Whether the used REST client should return any response containing at_least one warning header as a failure.;protected boolean getStrictDeprecationMode() {_        return true__    };whether,the,used,rest,client,should,return,any,response,containing,at,least,one,warning,header,as,a,failure;protected,boolean,get,strict,deprecation,mode,return,true
ESRestTestCase -> protected boolean getStrictDeprecationMode();1543495053;Whether the used REST client should return any response containing at_least one warning header as a failure.;protected boolean getStrictDeprecationMode() {_        return true__    };whether,the,used,rest,client,should,return,any,response,containing,at,least,one,warning,header,as,a,failure;protected,boolean,get,strict,deprecation,mode,return,true
ESRestTestCase -> protected boolean getStrictDeprecationMode();1543514185;Whether the used REST client should return any response containing at_least one warning header as a failure.;protected boolean getStrictDeprecationMode() {_        return true__    };whether,the,used,rest,client,should,return,any,response,containing,at,least,one,warning,header,as,a,failure;protected,boolean,get,strict,deprecation,mode,return,true
ESRestTestCase -> protected boolean getStrictDeprecationMode();1543514303;Whether the used REST client should return any response containing at_least one warning header as a failure.;protected boolean getStrictDeprecationMode() {_        return true__    };whether,the,used,rest,client,should,return,any,response,containing,at,least,one,warning,header,as,a,failure;protected,boolean,get,strict,deprecation,mode,return,true
