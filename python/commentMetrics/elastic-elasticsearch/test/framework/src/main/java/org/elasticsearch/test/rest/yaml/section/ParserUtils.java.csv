commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;7;;public static String parseField(XContentParser parser) throws IOException {     parser.nextToken().     assert parser.currentToken().isValue().     String field = parser.text().     parser.nextToken().     return field. }
false;public,static;1;14;;public static Tuple<String, Object> parseTuple(XContentParser parser) throws IOException {     parser.nextToken().     advanceToFieldName(parser).     Map<String, Object> map = parser.map().     assert parser.currentToken() == XContentParser.Token.END_OBJECT.     parser.nextToken().     if (map.size() != 1) {         throw new IllegalArgumentException("expected key value pair but found an object with " + map.size() + " fields").     }     Map.Entry<String, Object> entry = map.entrySet().iterator().next().     return Tuple.tuple(entry.getKey(), entry.getValue()). }
false;public,static;1;17;;public static void advanceToFieldName(XContentParser parser) throws IOException {     XContentParser.Token token = parser.currentToken().     // we are in the beginning, haven't called nextToken yet     if (token == null) {         token = parser.nextToken().     }     if (token == XContentParser.Token.START_ARRAY) {         token = parser.nextToken().     }     if (token == XContentParser.Token.START_OBJECT) {         token = parser.nextToken().     }     if (token != XContentParser.Token.FIELD_NAME) {         throw new IllegalArgumentException("malformed test section: field name expected but found " + token + " at " + parser.getTokenLocation()).     } }
