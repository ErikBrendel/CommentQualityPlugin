commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * returns all requests captured so far. Doesn't clear the captured request list. See {@link #clear()}  */ ;/**  * returns all requests captured so far. Doesn't clear the captured request list. See {@link #clear()}  */ public CapturedRequest[] capturedRequests() {     return capturedRequests.toArray(new CapturedRequest[0]). }
true;public;0;5;/**  * Returns all requests captured so far. This method does clear the  * captured requests list. If you do not want the captured requests  * list cleared, use {@link #capturedRequests()}.  *  * @return the captured requests  */ ;/**  * Returns all requests captured so far. This method does clear the  * captured requests list. If you do not want the captured requests  * list cleared, use {@link #capturedRequests()}.  *  * @return the captured requests  */ public CapturedRequest[] getCapturedRequestsAndClear() {     List<CapturedRequest> requests = new ArrayList<>(capturedRequests.size()).     capturedRequests.drainTo(requests).     return requests.toArray(new CapturedRequest[0]). }
false;private;1;7;;private Map<String, List<CapturedRequest>> groupRequestsByTargetNode(Collection<CapturedRequest> requests) {     Map<String, List<CapturedRequest>> result = new HashMap<>().     for (CapturedRequest request : requests) {         result.computeIfAbsent(request.node.getId(), node -> new ArrayList<>()).add(request).     }     return result. }
true;public;0;3;/**  * returns all requests captured so far, grouped by target node.  * Doesn't clear the captured request list. See {@link #clear()}  */ ;/**  * returns all requests captured so far, grouped by target node.  * Doesn't clear the captured request list. See {@link #clear()}  */ public Map<String, List<CapturedRequest>> capturedRequestsByTargetNode() {     return groupRequestsByTargetNode(capturedRequests). }
true;public;0;5;/**  * Returns all requests captured so far, grouped by target node.  * This method does clear the captured request list. If you do not  * want the captured requests list cleared, use  * {@link #capturedRequestsByTargetNode()}.  *  * @return the captured requests grouped by target node  */ ;/**  * Returns all requests captured so far, grouped by target node.  * This method does clear the captured request list. If you do not  * want the captured requests list cleared, use  * {@link #capturedRequestsByTargetNode()}.  *  * @return the captured requests grouped by target node  */ public Map<String, List<CapturedRequest>> getCapturedRequestsByTargetNodeAndClear() {     List<CapturedRequest> requests = new ArrayList<>(capturedRequests.size()).     capturedRequests.drainTo(requests).     return groupRequestsByTargetNode(requests). }
true;public;0;3;/**  * clears captured requests  */ ;/**  * clears captured requests  */ public void clear() {     capturedRequests.clear(). }
false;protected;4;3;;protected void onSendRequest(long requestId, String action, TransportRequest request, DiscoveryNode node) {     capturedRequests.add(new CapturingTransport.CapturedRequest(node, requestId, action, request)). }
