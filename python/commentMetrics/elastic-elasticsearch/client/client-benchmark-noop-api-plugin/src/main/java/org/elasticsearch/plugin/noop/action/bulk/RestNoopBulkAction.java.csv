commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "noop_bulk_action". }
false;public;2;23;;@Override public RestChannelConsumer prepareRequest(final RestRequest request, final NodeClient client) throws IOException {     BulkRequest bulkRequest = Requests.bulkRequest().     String defaultIndex = request.param("index").     String defaultType = request.param("type").     String defaultRouting = request.param("routing").     String defaultPipeline = request.param("pipeline").     String waitForActiveShards = request.param("wait_for_active_shards").     if (waitForActiveShards != null) {         bulkRequest.waitForActiveShards(ActiveShardCount.parseString(waitForActiveShards)).     }     bulkRequest.timeout(request.paramAsTime("timeout", BulkShardRequest.DEFAULT_TIMEOUT)).     bulkRequest.setRefreshPolicy(request.param("refresh")).     bulkRequest.add(request.requiredContent(), defaultIndex, defaultType, defaultRouting, null, defaultPipeline, null, true, request.getXContentType()).     // short circuit the call to the transport layer     return channel -> {         BulkRestBuilderListener listener = new BulkRestBuilderListener(channel, request).         listener.onResponse(bulkRequest).     }. }
false;public;2;13;;@Override public RestResponse buildResponse(BulkRequest bulkRequest, XContentBuilder builder) throws Exception {     builder.startObject().     builder.field(Fields.TOOK, 0).     builder.field(Fields.ERRORS, false).     builder.startArray(Fields.ITEMS).     for (int idx = 0. idx < bulkRequest.numberOfActions(). idx++) {         ITEM_RESPONSE.toXContent(builder, request).     }     builder.endArray().     builder.endObject().     return new BytesRestResponse(OK, builder). }
