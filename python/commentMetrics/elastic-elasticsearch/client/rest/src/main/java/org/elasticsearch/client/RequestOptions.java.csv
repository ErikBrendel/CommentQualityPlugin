# id;timestamp;commentText;codeText;commentWords;codeWords
RequestOptions -> public List<Header> getHeaders();1527840262;Headers to attach to the request.;public List<Header> getHeaders() {_        return headers__    };headers,to,attach,to,the,request;public,list,header,get,headers,return,headers
RequestOptions -> public List<Header> getHeaders();1528762805;Headers to attach to the request.;public List<Header> getHeaders() {_        return headers__    };headers,to,attach,to,the,request;public,list,header,get,headers,return,headers
RequestOptions -> public List<Header> getHeaders();1529687475;Headers to attach to the request.;public List<Header> getHeaders() {_        return headers__    };headers,to,attach,to,the,request;public,list,header,get,headers,return,headers
RequestOptions -> public List<Header> getHeaders();1544448720;Headers to attach to the request.;public List<Header> getHeaders() {_        return headers__    };headers,to,attach,to,the,request;public,list,header,get,headers,return,headers
RequestOptions -> Builder -> public void setHttpAsyncResponseConsumerFactory(HttpAsyncResponseConsumerFactory httpAsyncResponseConsumerFactory);1527840262;set the {@link HttpAsyncResponseConsumerFactory} used to create one_{@link HttpAsyncResponseConsumer} callback per retry. Controls how the_response body gets streamed from a non-blocking HTTP connection on the_client side.;public void setHttpAsyncResponseConsumerFactory(HttpAsyncResponseConsumerFactory httpAsyncResponseConsumerFactory) {_            this.httpAsyncResponseConsumerFactory =_                    Objects.requireNonNull(httpAsyncResponseConsumerFactory, "httpAsyncResponseConsumerFactory cannot be null")__        };set,the,link,http,async,response,consumer,factory,used,to,create,one,link,http,async,response,consumer,callback,per,retry,controls,how,the,response,body,gets,streamed,from,a,non,blocking,http,connection,on,the,client,side;public,void,set,http,async,response,consumer,factory,http,async,response,consumer,factory,http,async,response,consumer,factory,this,http,async,response,consumer,factory,objects,require,non,null,http,async,response,consumer,factory,http,async,response,consumer,factory,cannot,be,null
RequestOptions -> Builder -> public void setHttpAsyncResponseConsumerFactory(HttpAsyncResponseConsumerFactory httpAsyncResponseConsumerFactory);1528762805;Set the {@link HttpAsyncResponseConsumerFactory} used to create one_{@link HttpAsyncResponseConsumer} callback per retry. Controls how the_response body gets streamed from a non-blocking HTTP connection on the_client side.;public void setHttpAsyncResponseConsumerFactory(HttpAsyncResponseConsumerFactory httpAsyncResponseConsumerFactory) {_            this.httpAsyncResponseConsumerFactory =_                    Objects.requireNonNull(httpAsyncResponseConsumerFactory, "httpAsyncResponseConsumerFactory cannot be null")__        };set,the,link,http,async,response,consumer,factory,used,to,create,one,link,http,async,response,consumer,callback,per,retry,controls,how,the,response,body,gets,streamed,from,a,non,blocking,http,connection,on,the,client,side;public,void,set,http,async,response,consumer,factory,http,async,response,consumer,factory,http,async,response,consumer,factory,this,http,async,response,consumer,factory,objects,require,non,null,http,async,response,consumer,factory,http,async,response,consumer,factory,cannot,be,null
RequestOptions -> Builder -> public void setHttpAsyncResponseConsumerFactory(HttpAsyncResponseConsumerFactory httpAsyncResponseConsumerFactory);1529687475;Set the {@link HttpAsyncResponseConsumerFactory} used to create one_{@link HttpAsyncResponseConsumer} callback per retry. Controls how the_response body gets streamed from a non-blocking HTTP connection on the_client side.;public void setHttpAsyncResponseConsumerFactory(HttpAsyncResponseConsumerFactory httpAsyncResponseConsumerFactory) {_            this.httpAsyncResponseConsumerFactory =_                    Objects.requireNonNull(httpAsyncResponseConsumerFactory, "httpAsyncResponseConsumerFactory cannot be null")__        };set,the,link,http,async,response,consumer,factory,used,to,create,one,link,http,async,response,consumer,callback,per,retry,controls,how,the,response,body,gets,streamed,from,a,non,blocking,http,connection,on,the,client,side;public,void,set,http,async,response,consumer,factory,http,async,response,consumer,factory,http,async,response,consumer,factory,this,http,async,response,consumer,factory,objects,require,non,null,http,async,response,consumer,factory,http,async,response,consumer,factory,cannot,be,null
RequestOptions -> Builder -> public void setHttpAsyncResponseConsumerFactory(HttpAsyncResponseConsumerFactory httpAsyncResponseConsumerFactory);1544448720;Set the {@link HttpAsyncResponseConsumerFactory} used to create one_{@link HttpAsyncResponseConsumer} callback per retry. Controls how the_response body gets streamed from a non-blocking HTTP connection on the_client side.;public void setHttpAsyncResponseConsumerFactory(HttpAsyncResponseConsumerFactory httpAsyncResponseConsumerFactory) {_            this.httpAsyncResponseConsumerFactory =_                    Objects.requireNonNull(httpAsyncResponseConsumerFactory, "httpAsyncResponseConsumerFactory cannot be null")__        };set,the,link,http,async,response,consumer,factory,used,to,create,one,link,http,async,response,consumer,callback,per,retry,controls,how,the,response,body,gets,streamed,from,a,non,blocking,http,connection,on,the,client,side;public,void,set,http,async,response,consumer,factory,http,async,response,consumer,factory,http,async,response,consumer,factory,this,http,async,response,consumer,factory,objects,require,non,null,http,async,response,consumer,factory,http,async,response,consumer,factory,cannot,be,null
RequestOptions -> public HttpAsyncResponseConsumerFactory getHttpAsyncResponseConsumerFactory();1527840262;The {@link HttpAsyncResponseConsumerFactory} used to create one_{@link HttpAsyncResponseConsumer} callback per retry. Controls how the_response body gets streamed from a non-blocking HTTP connection on the_client side.;public HttpAsyncResponseConsumerFactory getHttpAsyncResponseConsumerFactory() {_        return httpAsyncResponseConsumerFactory__    };the,link,http,async,response,consumer,factory,used,to,create,one,link,http,async,response,consumer,callback,per,retry,controls,how,the,response,body,gets,streamed,from,a,non,blocking,http,connection,on,the,client,side;public,http,async,response,consumer,factory,get,http,async,response,consumer,factory,return,http,async,response,consumer,factory
RequestOptions -> public HttpAsyncResponseConsumerFactory getHttpAsyncResponseConsumerFactory();1528762805;The {@link HttpAsyncResponseConsumerFactory} used to create one_{@link HttpAsyncResponseConsumer} callback per retry. Controls how the_response body gets streamed from a non-blocking HTTP connection on the_client side.;public HttpAsyncResponseConsumerFactory getHttpAsyncResponseConsumerFactory() {_        return httpAsyncResponseConsumerFactory__    };the,link,http,async,response,consumer,factory,used,to,create,one,link,http,async,response,consumer,callback,per,retry,controls,how,the,response,body,gets,streamed,from,a,non,blocking,http,connection,on,the,client,side;public,http,async,response,consumer,factory,get,http,async,response,consumer,factory,return,http,async,response,consumer,factory
RequestOptions -> public HttpAsyncResponseConsumerFactory getHttpAsyncResponseConsumerFactory();1529687475;The {@link HttpAsyncResponseConsumerFactory} used to create one_{@link HttpAsyncResponseConsumer} callback per retry. Controls how the_response body gets streamed from a non-blocking HTTP connection on the_client side.;public HttpAsyncResponseConsumerFactory getHttpAsyncResponseConsumerFactory() {_        return httpAsyncResponseConsumerFactory__    };the,link,http,async,response,consumer,factory,used,to,create,one,link,http,async,response,consumer,callback,per,retry,controls,how,the,response,body,gets,streamed,from,a,non,blocking,http,connection,on,the,client,side;public,http,async,response,consumer,factory,get,http,async,response,consumer,factory,return,http,async,response,consumer,factory
RequestOptions -> public HttpAsyncResponseConsumerFactory getHttpAsyncResponseConsumerFactory();1544448720;The {@link HttpAsyncResponseConsumerFactory} used to create one_{@link HttpAsyncResponseConsumer} callback per retry. Controls how the_response body gets streamed from a non-blocking HTTP connection on the_client side.;public HttpAsyncResponseConsumerFactory getHttpAsyncResponseConsumerFactory() {_        return httpAsyncResponseConsumerFactory__    };the,link,http,async,response,consumer,factory,used,to,create,one,link,http,async,response,consumer,callback,per,retry,controls,how,the,response,body,gets,streamed,from,a,non,blocking,http,connection,on,the,client,side;public,http,async,response,consumer,factory,get,http,async,response,consumer,factory,return,http,async,response,consumer,factory
RequestOptions -> Builder -> public RequestOptions build();1527840262;Build the {@linkplain RequestOptions}.;public RequestOptions build() {_            return new RequestOptions(this)__        };build,the,linkplain,request,options;public,request,options,build,return,new,request,options,this
RequestOptions -> Builder -> public RequestOptions build();1528762805;Build the {@linkplain RequestOptions}.;public RequestOptions build() {_            return new RequestOptions(this)__        };build,the,linkplain,request,options;public,request,options,build,return,new,request,options,this
RequestOptions -> Builder -> public RequestOptions build();1529687475;Build the {@linkplain RequestOptions}.;public RequestOptions build() {_            return new RequestOptions(this)__        };build,the,linkplain,request,options;public,request,options,build,return,new,request,options,this
RequestOptions -> Builder -> public RequestOptions build();1544448720;Build the {@linkplain RequestOptions}.;public RequestOptions build() {_            return new RequestOptions(this)__        };build,the,linkplain,request,options;public,request,options,build,return,new,request,options,this
RequestOptions -> Builder -> public void addHeader(String name, String value);1527840262;Add the provided header to the request.;public void addHeader(String name, String value) {_            Objects.requireNonNull(name, "header name cannot be null")__            Objects.requireNonNull(value, "header value cannot be null")__            this.headers.add(new ReqHeader(name, value))__        };add,the,provided,header,to,the,request;public,void,add,header,string,name,string,value,objects,require,non,null,name,header,name,cannot,be,null,objects,require,non,null,value,header,value,cannot,be,null,this,headers,add,new,req,header,name,value
RequestOptions -> Builder -> public void addHeader(String name, String value);1528762805;Add the provided header to the request.;public void addHeader(String name, String value) {_            Objects.requireNonNull(name, "header name cannot be null")__            Objects.requireNonNull(value, "header value cannot be null")__            this.headers.add(new ReqHeader(name, value))__        };add,the,provided,header,to,the,request;public,void,add,header,string,name,string,value,objects,require,non,null,name,header,name,cannot,be,null,objects,require,non,null,value,header,value,cannot,be,null,this,headers,add,new,req,header,name,value
RequestOptions -> Builder -> public void addHeader(String name, String value);1529687475;Add the provided header to the request.;public void addHeader(String name, String value) {_            Objects.requireNonNull(name, "header name cannot be null")__            Objects.requireNonNull(value, "header value cannot be null")__            this.headers.add(new ReqHeader(name, value))__        };add,the,provided,header,to,the,request;public,void,add,header,string,name,string,value,objects,require,non,null,name,header,name,cannot,be,null,objects,require,non,null,value,header,value,cannot,be,null,this,headers,add,new,req,header,name,value
RequestOptions -> Builder -> public void addHeader(String name, String value);1544448720;Add the provided header to the request.;public void addHeader(String name, String value) {_            Objects.requireNonNull(name, "header name cannot be null")__            Objects.requireNonNull(value, "header value cannot be null")__            this.headers.add(new ReqHeader(name, value))__        };add,the,provided,header,to,the,request;public,void,add,header,string,name,string,value,objects,require,non,null,name,header,name,cannot,be,null,objects,require,non,null,value,header,value,cannot,be,null,this,headers,add,new,req,header,name,value
