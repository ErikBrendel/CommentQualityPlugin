# id;timestamp;commentText;codeText;commentWords;codeWords
Request -> public String getMethod();1525248068;The HTTP method.;public String getMethod() {_        return method__    };the,http,method;public,string,get,method,return,method
Request -> public String getMethod();1526029249;The HTTP method.;public String getMethod() {_        return method__    };the,http,method;public,string,get,method,return,method
Request -> public String getMethod();1527096592;The HTTP method.;public String getMethod() {_        return method__    };the,http,method;public,string,get,method,return,method
Request -> public String getMethod();1527840262;The HTTP method.;public String getMethod() {_        return method__    };the,http,method;public,string,get,method,return,method
Request -> public String getEndpoint();1525248068;The path of the request (without scheme, host, port, or prefix).;public String getEndpoint() {_        return endpoint__    };the,path,of,the,request,without,scheme,host,port,or,prefix;public,string,get,endpoint,return,endpoint
Request -> public String getEndpoint();1526029249;The path of the request (without scheme, host, port, or prefix).;public String getEndpoint() {_        return endpoint__    };the,path,of,the,request,without,scheme,host,port,or,prefix;public,string,get,endpoint,return,endpoint
Request -> public String getEndpoint();1527096592;The path of the request (without scheme, host, port, or prefix).;public String getEndpoint() {_        return endpoint__    };the,path,of,the,request,without,scheme,host,port,or,prefix;public,string,get,endpoint,return,endpoint
Request -> public String getEndpoint();1527840262;The path of the request (without scheme, host, port, or prefix).;public String getEndpoint() {_        return endpoint__    };the,path,of,the,request,without,scheme,host,port,or,prefix;public,string,get,endpoint,return,endpoint
Request -> public Map<String, String> getParameters();1525248068;Query string parameters. The returned map is an unmodifiable view of the_map in the request so calls to {@link #addParameter(String, String)}_will change it.;public Map<String, String> getParameters() {_        return unmodifiableMap(parameters)__    };query,string,parameters,the,returned,map,is,an,unmodifiable,view,of,the,map,in,the,request,so,calls,to,link,add,parameter,string,string,will,change,it;public,map,string,string,get,parameters,return,unmodifiable,map,parameters
Request -> public Map<String, String> getParameters();1526029249;Query string parameters. The returned map is an unmodifiable view of the_map in the request so calls to {@link #addParameter(String, String)}_will change it.;public Map<String, String> getParameters() {_        return unmodifiableMap(parameters)__    };query,string,parameters,the,returned,map,is,an,unmodifiable,view,of,the,map,in,the,request,so,calls,to,link,add,parameter,string,string,will,change,it;public,map,string,string,get,parameters,return,unmodifiable,map,parameters
Request -> public Map<String, String> getParameters();1527096592;Query string parameters. The returned map is an unmodifiable view of the_map in the request so calls to {@link #addParameter(String, String)}_will change it.;public Map<String, String> getParameters() {_        return unmodifiableMap(parameters)__    };query,string,parameters,the,returned,map,is,an,unmodifiable,view,of,the,map,in,the,request,so,calls,to,link,add,parameter,string,string,will,change,it;public,map,string,string,get,parameters,return,unmodifiable,map,parameters
Request -> public Map<String, String> getParameters();1527840262;Query string parameters. The returned map is an unmodifiable view of the_map in the request so calls to {@link #addParameter(String, String)}_will change it.;public Map<String, String> getParameters() {_        return unmodifiableMap(parameters)__    };query,string,parameters,the,returned,map,is,an,unmodifiable,view,of,the,map,in,the,request,so,calls,to,link,add,parameter,string,string,will,change,it;public,map,string,string,get,parameters,return,unmodifiable,map,parameters
Request -> public HttpEntity getEntity();1525248068;The body of the request. If {@code null} then no body_is sent with the request.;public HttpEntity getEntity() {_        return entity__    };the,body,of,the,request,if,code,null,then,no,body,is,sent,with,the,request;public,http,entity,get,entity,return,entity
Request -> public HttpEntity getEntity();1526029249;The body of the request. If {@code null} then no body_is sent with the request.;public HttpEntity getEntity() {_        return entity__    };the,body,of,the,request,if,code,null,then,no,body,is,sent,with,the,request;public,http,entity,get,entity,return,entity
Request -> public HttpEntity getEntity();1527096592;The body of the request. If {@code null} then no body_is sent with the request.;public HttpEntity getEntity() {_        return entity__    };the,body,of,the,request,if,code,null,then,no,body,is,sent,with,the,request;public,http,entity,get,entity,return,entity
Request -> public HttpEntity getEntity();1527840262;The body of the request. If {@code null} then no body_is sent with the request.;public HttpEntity getEntity() {_        return entity__    };the,body,of,the,request,if,code,null,then,no,body,is,sent,with,the,request;public,http,entity,get,entity,return,entity
Request -> public void setHeaders(Header... headers);1525248068;Set the headers to attach to the request.;public void setHeaders(Header... headers) {_        Objects.requireNonNull(headers, "headers cannot be null")__        for (Header header : headers) {_            Objects.requireNonNull(header, "header cannot be null")__        }_        this.headers = headers__    };set,the,headers,to,attach,to,the,request;public,void,set,headers,header,headers,objects,require,non,null,headers,headers,cannot,be,null,for,header,header,headers,objects,require,non,null,header,header,cannot,be,null,this,headers,headers
Request -> public void setHeaders(Header... headers);1526029249;Set the headers to attach to the request.;public void setHeaders(Header... headers) {_        Objects.requireNonNull(headers, "headers cannot be null")__        for (Header header : headers) {_            Objects.requireNonNull(header, "header cannot be null")__        }_        this.headers = headers__    };set,the,headers,to,attach,to,the,request;public,void,set,headers,header,headers,objects,require,non,null,headers,headers,cannot,be,null,for,header,header,headers,objects,require,non,null,header,header,cannot,be,null,this,headers,headers
Request -> public Request(String method, String endpoint);1525248068;Create the {@linkplain Request}._@param method the HTTP method_@param endpoint the path of the request (without scheme, host, port, or prefix);public Request(String method, String endpoint) {_        this.method = Objects.requireNonNull(method, "method cannot be null")__        this.endpoint = Objects.requireNonNull(endpoint, "endpoint cannot be null")__    };create,the,linkplain,request,param,method,the,http,method,param,endpoint,the,path,of,the,request,without,scheme,host,port,or,prefix;public,request,string,method,string,endpoint,this,method,objects,require,non,null,method,method,cannot,be,null,this,endpoint,objects,require,non,null,endpoint,endpoint,cannot,be,null
Request -> public Request(String method, String endpoint);1526029249;Create the {@linkplain Request}._@param method the HTTP method_@param endpoint the path of the request (without scheme, host, port, or prefix);public Request(String method, String endpoint) {_        this.method = Objects.requireNonNull(method, "method cannot be null")__        this.endpoint = Objects.requireNonNull(endpoint, "endpoint cannot be null")__    };create,the,linkplain,request,param,method,the,http,method,param,endpoint,the,path,of,the,request,without,scheme,host,port,or,prefix;public,request,string,method,string,endpoint,this,method,objects,require,non,null,method,method,cannot,be,null,this,endpoint,objects,require,non,null,endpoint,endpoint,cannot,be,null
Request -> public Request(String method, String endpoint);1527096592;Create the {@linkplain Request}._@param method the HTTP method_@param endpoint the path of the request (without scheme, host, port, or prefix);public Request(String method, String endpoint) {_        this.method = Objects.requireNonNull(method, "method cannot be null")__        this.endpoint = Objects.requireNonNull(endpoint, "endpoint cannot be null")__    };create,the,linkplain,request,param,method,the,http,method,param,endpoint,the,path,of,the,request,without,scheme,host,port,or,prefix;public,request,string,method,string,endpoint,this,method,objects,require,non,null,method,method,cannot,be,null,this,endpoint,objects,require,non,null,endpoint,endpoint,cannot,be,null
Request -> public Request(String method, String endpoint);1527840262;Create the {@linkplain Request}._@param method the HTTP method_@param endpoint the path of the request (without scheme, host, port, or prefix);public Request(String method, String endpoint) {_        this.method = Objects.requireNonNull(method, "method cannot be null")__        this.endpoint = Objects.requireNonNull(endpoint, "endpoint cannot be null")__    };create,the,linkplain,request,param,method,the,http,method,param,endpoint,the,path,of,the,request,without,scheme,host,port,or,prefix;public,request,string,method,string,endpoint,this,method,objects,require,non,null,method,method,cannot,be,null,this,endpoint,objects,require,non,null,endpoint,endpoint,cannot,be,null
Request -> public void setJsonEntity(String entity);1526029249;Set the body of the request to a string. If not set or set to_{@code null} then no body is sent with the request. The_{@code Content-Type} will be sent as {@code application/json}._If you need a different content type then use_{@link #setEntity(HttpEntity)}.;public void setJsonEntity(String entity) {_        setEntity(entity == null ? null : new NStringEntity(entity, ContentType.APPLICATION_JSON))__    };set,the,body,of,the,request,to,a,string,if,not,set,or,set,to,code,null,then,no,body,is,sent,with,the,request,the,code,content,type,will,be,sent,as,code,application,json,if,you,need,a,different,content,type,then,use,link,set,entity,http,entity;public,void,set,json,entity,string,entity,set,entity,entity,null,null,new,nstring,entity,entity,content,type
Request -> public void setJsonEntity(String entity);1527096592;Set the body of the request to a string. If not set or set to_{@code null} then no body is sent with the request. The_{@code Content-Type} will be sent as {@code application/json}._If you need a different content type then use_{@link #setEntity(HttpEntity)}.;public void setJsonEntity(String entity) {_        setEntity(entity == null ? null : new NStringEntity(entity, ContentType.APPLICATION_JSON))__    };set,the,body,of,the,request,to,a,string,if,not,set,or,set,to,code,null,then,no,body,is,sent,with,the,request,the,code,content,type,will,be,sent,as,code,application,json,if,you,need,a,different,content,type,then,use,link,set,entity,http,entity;public,void,set,json,entity,string,entity,set,entity,entity,null,null,new,nstring,entity,entity,content,type
Request -> public void setJsonEntity(String entity);1527840262;Set the body of the request to a string. If not set or set to_{@code null} then no body is sent with the request. The_{@code Content-Type} will be sent as {@code application/json}._If you need a different content type then use_{@link #setEntity(HttpEntity)}.;public void setJsonEntity(String entity) {_        setEntity(entity == null ? null : new NStringEntity(entity, ContentType.APPLICATION_JSON))__    };set,the,body,of,the,request,to,a,string,if,not,set,or,set,to,code,null,then,no,body,is,sent,with,the,request,the,code,content,type,will,be,sent,as,code,application,json,if,you,need,a,different,content,type,then,use,link,set,entity,http,entity;public,void,set,json,entity,string,entity,set,entity,entity,null,null,new,nstring,entity,entity,content,type
Request -> public void addParameter(String name, String value);1525248068;Add a query string parameter._@param name the name of the url parameter. Must not be null._@param value the value of the url url parameter. If {@code null} then_the parameter is sent as {@code name} rather than {@code name=value}_@throws IllegalArgumentException if a parameter with that name has_already been set;public void addParameter(String name, String value) {_        Objects.requireNonNull(name, "url parameter name cannot be null")__        _        if (parameters.containsKey(name)) {_            throw new IllegalArgumentException("url parameter [" + name + "] has already been set to [" + parameters.get(name) + "]")__        } else {_            parameters.put(name, value)__        }_    };add,a,query,string,parameter,param,name,the,name,of,the,url,parameter,must,not,be,null,param,value,the,value,of,the,url,url,parameter,if,code,null,then,the,parameter,is,sent,as,code,name,rather,than,code,name,value,throws,illegal,argument,exception,if,a,parameter,with,that,name,has,already,been,set;public,void,add,parameter,string,name,string,value,objects,require,non,null,name,url,parameter,name,cannot,be,null,if,parameters,contains,key,name,throw,new,illegal,argument,exception,url,parameter,name,has,already,been,set,to,parameters,get,name,else,parameters,put,name,value
Request -> public void addParameter(String name, String value);1526029249;Add a query string parameter._@param name the name of the url parameter. Must not be null._@param value the value of the url url parameter. If {@code null} then_the parameter is sent as {@code name} rather than {@code name=value}_@throws IllegalArgumentException if a parameter with that name has_already been set;public void addParameter(String name, String value) {_        Objects.requireNonNull(name, "url parameter name cannot be null")__        _        if (parameters.containsKey(name)) {_            throw new IllegalArgumentException("url parameter [" + name + "] has already been set to [" + parameters.get(name) + "]")__        } else {_            parameters.put(name, value)__        }_    };add,a,query,string,parameter,param,name,the,name,of,the,url,parameter,must,not,be,null,param,value,the,value,of,the,url,url,parameter,if,code,null,then,the,parameter,is,sent,as,code,name,rather,than,code,name,value,throws,illegal,argument,exception,if,a,parameter,with,that,name,has,already,been,set;public,void,add,parameter,string,name,string,value,objects,require,non,null,name,url,parameter,name,cannot,be,null,if,parameters,contains,key,name,throw,new,illegal,argument,exception,url,parameter,name,has,already,been,set,to,parameters,get,name,else,parameters,put,name,value
Request -> public void addParameter(String name, String value);1527096592;Add a query string parameter._@param name the name of the url parameter. Must not be null._@param value the value of the url url parameter. If {@code null} then_the parameter is sent as {@code name} rather than {@code name=value}_@throws IllegalArgumentException if a parameter with that name has_already been set;public void addParameter(String name, String value) {_        Objects.requireNonNull(name, "url parameter name cannot be null")__        _        if (parameters.containsKey(name)) {_            throw new IllegalArgumentException("url parameter [" + name + "] has already been set to [" + parameters.get(name) + "]")__        } else {_            parameters.put(name, value)__        }_    };add,a,query,string,parameter,param,name,the,name,of,the,url,parameter,must,not,be,null,param,value,the,value,of,the,url,url,parameter,if,code,null,then,the,parameter,is,sent,as,code,name,rather,than,code,name,value,throws,illegal,argument,exception,if,a,parameter,with,that,name,has,already,been,set;public,void,add,parameter,string,name,string,value,objects,require,non,null,name,url,parameter,name,cannot,be,null,if,parameters,contains,key,name,throw,new,illegal,argument,exception,url,parameter,name,has,already,been,set,to,parameters,get,name,else,parameters,put,name,value
Request -> public void addParameter(String name, String value);1527840262;Add a query string parameter._@param name the name of the url parameter. Must not be null._@param value the value of the url url parameter. If {@code null} then_the parameter is sent as {@code name} rather than {@code name=value}_@throws IllegalArgumentException if a parameter with that name has_already been set;public void addParameter(String name, String value) {_        Objects.requireNonNull(name, "url parameter name cannot be null")__        _        if (parameters.containsKey(name)) {_            throw new IllegalArgumentException("url parameter [" + name + "] has already been set to [" + parameters.get(name) + "]")__        } else {_            parameters.put(name, value)__        }_    };add,a,query,string,parameter,param,name,the,name,of,the,url,parameter,must,not,be,null,param,value,the,value,of,the,url,url,parameter,if,code,null,then,the,parameter,is,sent,as,code,name,rather,than,code,name,value,throws,illegal,argument,exception,if,a,parameter,with,that,name,has,already,been,set;public,void,add,parameter,string,name,string,value,objects,require,non,null,name,url,parameter,name,cannot,be,null,if,parameters,contains,key,name,throw,new,illegal,argument,exception,url,parameter,name,has,already,been,set,to,parameters,get,name,else,parameters,put,name,value
Request -> public void setEntity(HttpEntity entity);1525248068;Set the body of the request. If not set or set to {@code null} then no_body is sent with the request.;public void setEntity(HttpEntity entity) {_        this.entity = entity__    };set,the,body,of,the,request,if,not,set,or,set,to,code,null,then,no,body,is,sent,with,the,request;public,void,set,entity,http,entity,entity,this,entity,entity
Request -> public void setEntity(HttpEntity entity);1526029249;Set the body of the request. If not set or set to {@code null} then no_body is sent with the request.;public void setEntity(HttpEntity entity) {_        this.entity = entity__    };set,the,body,of,the,request,if,not,set,or,set,to,code,null,then,no,body,is,sent,with,the,request;public,void,set,entity,http,entity,entity,this,entity,entity
Request -> public void setEntity(HttpEntity entity);1527096592;Set the body of the request. If not set or set to {@code null} then no_body is sent with the request.;public void setEntity(HttpEntity entity) {_        this.entity = entity__    };set,the,body,of,the,request,if,not,set,or,set,to,code,null,then,no,body,is,sent,with,the,request;public,void,set,entity,http,entity,entity,this,entity,entity
Request -> public void setEntity(HttpEntity entity);1527840262;Set the body of the request. If not set or set to {@code null} then no_body is sent with the request.;public void setEntity(HttpEntity entity) {_        this.entity = entity__    };set,the,body,of,the,request,if,not,set,or,set,to,code,null,then,no,body,is,sent,with,the,request;public,void,set,entity,http,entity,entity,this,entity,entity
Request -> public HttpAsyncResponseConsumerFactory getHttpAsyncResponseConsumerFactory();1525248068;The {@link HttpAsyncResponseConsumerFactory} used to create one_{@link HttpAsyncResponseConsumer} callback per retry. Controls how the_response body gets streamed from a non-blocking HTTP connection on the_client side.;public HttpAsyncResponseConsumerFactory getHttpAsyncResponseConsumerFactory() {_        return httpAsyncResponseConsumerFactory__    };the,link,http,async,response,consumer,factory,used,to,create,one,link,http,async,response,consumer,callback,per,retry,controls,how,the,response,body,gets,streamed,from,a,non,blocking,http,connection,on,the,client,side;public,http,async,response,consumer,factory,get,http,async,response,consumer,factory,return,http,async,response,consumer,factory
Request -> public HttpAsyncResponseConsumerFactory getHttpAsyncResponseConsumerFactory();1526029249;The {@link HttpAsyncResponseConsumerFactory} used to create one_{@link HttpAsyncResponseConsumer} callback per retry. Controls how the_response body gets streamed from a non-blocking HTTP connection on the_client side.;public HttpAsyncResponseConsumerFactory getHttpAsyncResponseConsumerFactory() {_        return httpAsyncResponseConsumerFactory__    };the,link,http,async,response,consumer,factory,used,to,create,one,link,http,async,response,consumer,callback,per,retry,controls,how,the,response,body,gets,streamed,from,a,non,blocking,http,connection,on,the,client,side;public,http,async,response,consumer,factory,get,http,async,response,consumer,factory,return,http,async,response,consumer,factory
Request -> public HttpAsyncResponseConsumerFactory getHttpAsyncResponseConsumerFactory();1527096592;The {@link HttpAsyncResponseConsumerFactory} used to create one_{@link HttpAsyncResponseConsumer} callback per retry. Controls how the_response body gets streamed from a non-blocking HTTP connection on the_client side.;public HttpAsyncResponseConsumerFactory getHttpAsyncResponseConsumerFactory() {_        return httpAsyncResponseConsumerFactory__    };the,link,http,async,response,consumer,factory,used,to,create,one,link,http,async,response,consumer,callback,per,retry,controls,how,the,response,body,gets,streamed,from,a,non,blocking,http,connection,on,the,client,side;public,http,async,response,consumer,factory,get,http,async,response,consumer,factory,return,http,async,response,consumer,factory
Request -> public Header[] getHeaders();1525248068;Headers to attach to the request.;public Header[] getHeaders() {_        return headers__    };headers,to,attach,to,the,request;public,header,get,headers,return,headers
Request -> public Header[] getHeaders();1526029249;Headers to attach to the request.;public Header[] getHeaders() {_        return headers__    };headers,to,attach,to,the,request;public,header,get,headers,return,headers
Request -> public void setHttpAsyncResponseConsumerFactory(HttpAsyncResponseConsumerFactory httpAsyncResponseConsumerFactory);1525248068;set the {@link HttpAsyncResponseConsumerFactory} used to create one_{@link HttpAsyncResponseConsumer} callback per retry. Controls how the_response body gets streamed from a non-blocking HTTP connection on the_client side.;public void setHttpAsyncResponseConsumerFactory(HttpAsyncResponseConsumerFactory httpAsyncResponseConsumerFactory) {_        this.httpAsyncResponseConsumerFactory =_                Objects.requireNonNull(httpAsyncResponseConsumerFactory, "httpAsyncResponseConsumerFactory cannot be null")__    };set,the,link,http,async,response,consumer,factory,used,to,create,one,link,http,async,response,consumer,callback,per,retry,controls,how,the,response,body,gets,streamed,from,a,non,blocking,http,connection,on,the,client,side;public,void,set,http,async,response,consumer,factory,http,async,response,consumer,factory,http,async,response,consumer,factory,this,http,async,response,consumer,factory,objects,require,non,null,http,async,response,consumer,factory,http,async,response,consumer,factory,cannot,be,null
Request -> public void setHttpAsyncResponseConsumerFactory(HttpAsyncResponseConsumerFactory httpAsyncResponseConsumerFactory);1526029249;set the {@link HttpAsyncResponseConsumerFactory} used to create one_{@link HttpAsyncResponseConsumer} callback per retry. Controls how the_response body gets streamed from a non-blocking HTTP connection on the_client side.;public void setHttpAsyncResponseConsumerFactory(HttpAsyncResponseConsumerFactory httpAsyncResponseConsumerFactory) {_        this.httpAsyncResponseConsumerFactory =_                Objects.requireNonNull(httpAsyncResponseConsumerFactory, "httpAsyncResponseConsumerFactory cannot be null")__    };set,the,link,http,async,response,consumer,factory,used,to,create,one,link,http,async,response,consumer,callback,per,retry,controls,how,the,response,body,gets,streamed,from,a,non,blocking,http,connection,on,the,client,side;public,void,set,http,async,response,consumer,factory,http,async,response,consumer,factory,http,async,response,consumer,factory,this,http,async,response,consumer,factory,objects,require,non,null,http,async,response,consumer,factory,http,async,response,consumer,factory,cannot,be,null
Request -> public void setHttpAsyncResponseConsumerFactory(HttpAsyncResponseConsumerFactory httpAsyncResponseConsumerFactory);1527096592;set the {@link HttpAsyncResponseConsumerFactory} used to create one_{@link HttpAsyncResponseConsumer} callback per retry. Controls how the_response body gets streamed from a non-blocking HTTP connection on the_client side.;public void setHttpAsyncResponseConsumerFactory(HttpAsyncResponseConsumerFactory httpAsyncResponseConsumerFactory) {_        this.httpAsyncResponseConsumerFactory =_                Objects.requireNonNull(httpAsyncResponseConsumerFactory, "httpAsyncResponseConsumerFactory cannot be null")__    };set,the,link,http,async,response,consumer,factory,used,to,create,one,link,http,async,response,consumer,callback,per,retry,controls,how,the,response,body,gets,streamed,from,a,non,blocking,http,connection,on,the,client,side;public,void,set,http,async,response,consumer,factory,http,async,response,consumer,factory,http,async,response,consumer,factory,this,http,async,response,consumer,factory,objects,require,non,null,http,async,response,consumer,factory,http,async,response,consumer,factory,cannot,be,null
