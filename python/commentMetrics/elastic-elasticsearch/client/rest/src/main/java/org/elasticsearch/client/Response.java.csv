commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Returns the request line that generated this response  */ ;/**  * Returns the request line that generated this response  */ public RequestLine getRequestLine() {     return requestLine. }
true;public;0;3;/**  * Returns the node that returned this response  */ ;/**  * Returns the node that returned this response  */ public HttpHost getHost() {     return host. }
true;public;0;3;/**  * Returns the status line of the current response  */ ;/**  * Returns the status line of the current response  */ public StatusLine getStatusLine() {     return response.getStatusLine(). }
true;public;0;3;/**  * Returns all the response headers  */ ;/**  * Returns all the response headers  */ public Header[] getHeaders() {     return response.getAllHeaders(). }
true;public;1;7;/**  * Returns the value of the first header with a specified name of this message.  * If there is more than one matching header in the message the first element is returned.  * If there is no matching header in the message <code>null</code> is returned.  */ ;/**  * Returns the value of the first header with a specified name of this message.  * If there is more than one matching header in the message the first element is returned.  * If there is no matching header in the message <code>null</code> is returned.  */ public String getHeader(String name) {     Header header = response.getFirstHeader(name).     if (header == null) {         return null.     }     return header.getValue(). }
true;public;0;3;/**  * Returns the response body available, null otherwise  * @see HttpEntity  */ ;/**  * Returns the response body available, null otherwise  * @see HttpEntity  */ public HttpEntity getEntity() {     return response.getEntity(). }
true;public;0;13;/**  * Returns a list of all warning headers returned in the response.  */ ;// closing quote (optional, since an older version can still send a warn-date) /**  * Returns a list of all warning headers returned in the response.  */ public List<String> getWarnings() {     List<String> warnings = new ArrayList<>().     for (Header header : response.getHeaders("Warning")) {         String warning = header.getValue().         final Matcher matcher = WARNING_HEADER_PATTERN.matcher(warning).         if (matcher.matches()) {             warnings.add(matcher.group(1)).         } else {             warnings.add(warning).         }     }     return warnings. }
true;public;0;4;/**  * Returns true if there is at least one warning header returned in the  * response.  */ ;/**  * Returns true if there is at least one warning header returned in the  * response.  */ public boolean hasWarnings() {     Header[] warnings = response.getHeaders("Warning").     return warnings != null && warnings.length > 0. }
false;;0;3;;HttpResponse getHttpResponse() {     return response. }
false;public;0;8;;@Override public String toString() {     return "Response{" + "requestLine=" + requestLine + ", host=" + host + ", response=" + response.getStatusLine() + '}'. }
