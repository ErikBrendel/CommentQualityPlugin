# id;timestamp;commentText;codeText;commentWords;codeWords
RestClientMultipleHostsTests -> private Set<HttpHost> hostsSet();1528762805;Build a mutable {@link Set} containing all the {@link Node#getHost() hosts}_in use by the test.;private Set<HttpHost> hostsSet() {_        Set<HttpHost> hosts = new HashSet<>()__        for (Node node : nodes) {_            hosts.add(node.getHost())__        }_        return hosts__    };build,a,mutable,link,set,containing,all,the,link,node,get,host,hosts,in,use,by,the,test;private,set,http,host,hosts,set,set,http,host,hosts,new,hash,set,for,node,node,nodes,hosts,add,node,get,host,return,hosts
RestClientMultipleHostsTests -> private Set<HttpHost> hostsSet();1528977744;Build a mutable {@link Set} containing all the {@link Node#getHost() hosts}_in use by the test.;private Set<HttpHost> hostsSet() {_        Set<HttpHost> hosts = new HashSet<>()__        for (Node node : nodes) {_            hosts.add(node.getHost())__        }_        return hosts__    };build,a,mutable,link,set,containing,all,the,link,node,get,host,hosts,in,use,by,the,test;private,set,http,host,hosts,set,set,http,host,hosts,new,hash,set,for,node,node,nodes,hosts,add,node,get,host,return,hosts
RestClientMultipleHostsTests -> private Set<HttpHost> hostsSet();1529076503;Build a mutable {@link Set} containing all the {@link Node#getHost() hosts}_in use by the test.;private Set<HttpHost> hostsSet() {_        Set<HttpHost> hosts = new HashSet<>()__        for (Node node : nodes) {_            hosts.add(node.getHost())__        }_        return hosts__    };build,a,mutable,link,set,containing,all,the,link,node,get,host,hosts,in,use,by,the,test;private,set,http,host,hosts,set,set,http,host,hosts,new,hash,set,for,node,node,nodes,hosts,add,node,get,host,return,hosts
RestClientMultipleHostsTests -> private Set<HttpHost> hostsSet();1529687475;Build a mutable {@link Set} containing all the {@link Node#getHost() hosts}_in use by the test.;private Set<HttpHost> hostsSet() {_        Set<HttpHost> hosts = new HashSet<>()__        for (Node node : nodes) {_            hosts.add(node.getHost())__        }_        return hosts__    };build,a,mutable,link,set,containing,all,the,link,node,get,host,hosts,in,use,by,the,test;private,set,http,host,hosts,set,set,http,host,hosts,new,hash,set,for,node,node,nodes,hosts,add,node,get,host,return,hosts
RestClientMultipleHostsTests -> private Set<HttpHost> hostsSet();1538170812;Build a mutable {@link Set} containing all the {@link Node#getHost() hosts}_in use by the test.;private Set<HttpHost> hostsSet() {_        Set<HttpHost> hosts = new HashSet<>()__        for (Node node : nodes) {_            hosts.add(node.getHost())__        }_        return hosts__    };build,a,mutable,link,set,containing,all,the,link,node,get,host,hosts,in,use,by,the,test;private,set,http,host,hosts,set,set,http,host,hosts,new,hash,set,for,node,node,nodes,hosts,add,node,get,host,return,hosts
RestClientMultipleHostsTests -> private Set<HttpHost> hostsSet();1549439027;Build a mutable {@link Set} containing all the {@link Node#getHost() hosts}_in use by the test.;private Set<HttpHost> hostsSet() {_        Set<HttpHost> hosts = new HashSet<>()__        for (Node node : nodes) {_            hosts.add(node.getHost())__        }_        return hosts__    };build,a,mutable,link,set,containing,all,the,link,node,get,host,hosts,in,use,by,the,test;private,set,http,host,hosts,set,set,http,host,hosts,new,hash,set,for,node,node,nodes,hosts,add,node,get,host,return,hosts
RestClientMultipleHostsTests -> @After     public void shutdownExec();1524684173;Shutdown the executor so we don't leak threads into other test runs.;@After_    public void shutdownExec() {_        exec.shutdown()__    };shutdown,the,executor,so,we,don,t,leak,threads,into,other,test,runs;after,public,void,shutdown,exec,exec,shutdown
RestClientMultipleHostsTests -> @After     public void shutdownExec();1528762805;Shutdown the executor so we don't leak threads into other test runs.;@After_    public void shutdownExec() {_        exec.shutdown()__    };shutdown,the,executor,so,we,don,t,leak,threads,into,other,test,runs;after,public,void,shutdown,exec,exec,shutdown
RestClientMultipleHostsTests -> @After     public void shutdownExec();1528977744;Shutdown the executor so we don't leak threads into other test runs.;@After_    public void shutdownExec() {_        exec.shutdown()__    };shutdown,the,executor,so,we,don,t,leak,threads,into,other,test,runs;after,public,void,shutdown,exec,exec,shutdown
RestClientMultipleHostsTests -> @After     public void shutdownExec();1529076503;Shutdown the executor so we don't leak threads into other test runs.;@After_    public void shutdownExec() {_        exec.shutdown()__    };shutdown,the,executor,so,we,don,t,leak,threads,into,other,test,runs;after,public,void,shutdown,exec,exec,shutdown
RestClientMultipleHostsTests -> @After     public void shutdownExec();1529687475;Shutdown the executor so we don't leak threads into other test runs.;@After_    public void shutdownExec() {_        exec.shutdown()__    };shutdown,the,executor,so,we,don,t,leak,threads,into,other,test,runs;after,public,void,shutdown,exec,exec,shutdown
RestClientMultipleHostsTests -> @After     public void shutdownExec();1538170812;Shutdown the executor so we don't leak threads into other test runs.;@After_    public void shutdownExec() {_        exec.shutdown()__    };shutdown,the,executor,so,we,don,t,leak,threads,into,other,test,runs;after,public,void,shutdown,exec,exec,shutdown
RestClientMultipleHostsTests -> @After     public void shutdownExec();1549439027;Shutdown the executor so we don't leak threads into other test runs.;@After_    public void shutdownExec() {_        exec.shutdown()__    };shutdown,the,executor,so,we,don,t,leak,threads,into,other,test,runs;after,public,void,shutdown,exec,exec,shutdown
