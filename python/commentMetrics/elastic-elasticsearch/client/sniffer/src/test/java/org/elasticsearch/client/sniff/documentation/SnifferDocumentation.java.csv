commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public List<Node> sniff() throws IOException {     // <1>     return null. }
false;public;0;80;;@SuppressWarnings("unused") public void usage() throws IOException {     {         // tag::sniffer-init         RestClient restClient = RestClient.builder(new HttpHost("localhost", 9200, "http")).build().         Sniffer sniffer = Sniffer.builder(restClient).build().         // end::sniffer-init         // tag::sniffer-close         sniffer.close().         restClient.close().     // end::sniffer-close     }     {         // tag::sniffer-interval         RestClient restClient = RestClient.builder(new HttpHost("localhost", 9200, "http")).build().         Sniffer sniffer = Sniffer.builder(restClient).setSniffIntervalMillis(60000).build().     // end::sniffer-interval     }     {         // tag::sniff-on-failure         SniffOnFailureListener sniffOnFailureListener = new SniffOnFailureListener().         RestClient restClient = RestClient.builder(new HttpHost("localhost", 9200)).setFailureListener(// <1>         sniffOnFailureListener).build().         Sniffer sniffer = Sniffer.builder(restClient).setSniffAfterFailureDelayMillis(// <2>         30000).build().         // <3>         sniffOnFailureListener.setSniffer(sniffer).     // end::sniff-on-failure     }     {         // tag::sniffer-https         RestClient restClient = RestClient.builder(new HttpHost("localhost", 9200, "http")).build().         NodesSniffer nodesSniffer = new ElasticsearchNodesSniffer(restClient, ElasticsearchNodesSniffer.DEFAULT_SNIFF_REQUEST_TIMEOUT, ElasticsearchNodesSniffer.Scheme.HTTPS).         Sniffer sniffer = Sniffer.builder(restClient).setNodesSniffer(nodesSniffer).build().     // end::sniffer-https     }     {         // tag::sniff-request-timeout         RestClient restClient = RestClient.builder(new HttpHost("localhost", 9200, "http")).build().         NodesSniffer nodesSniffer = new ElasticsearchNodesSniffer(restClient, TimeUnit.SECONDS.toMillis(5), ElasticsearchNodesSniffer.Scheme.HTTP).         Sniffer sniffer = Sniffer.builder(restClient).setNodesSniffer(nodesSniffer).build().     // end::sniff-request-timeout     }     {         // tag::custom-nodes-sniffer         RestClient restClient = RestClient.builder(new HttpHost("localhost", 9200, "http")).build().         NodesSniffer nodesSniffer = new NodesSniffer() {              @Override             public List<Node> sniff() throws IOException {                 // <1>                 return null.             }         }.         Sniffer sniffer = Sniffer.builder(restClient).setNodesSniffer(nodesSniffer).build().     // end::custom-nodes-sniffer     } }
