commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;4;;public static void main(String[] args) throws Exception {     TransportClientBenchmark benchmark = new TransportClientBenchmark().     benchmark.run(args). }
false;protected;1;6;;@Override protected TransportClient client(String benchmarkTargetHost) throws Exception {     TransportClient client = new PreBuiltTransportClient(Settings.EMPTY, NoopPlugin.class).     client.addTransportAddress(new TransportAddress(InetAddress.getByName(benchmarkTargetHost), 9300)).     return client. }
false;protected;3;4;;@Override protected BulkRequestExecutor bulkRequestExecutor(TransportClient client, String indexName, String typeName) {     return new TransportBulkRequestExecutor(client, indexName, typeName). }
false;protected;2;4;;@Override protected SearchRequestExecutor searchRequestExecutor(TransportClient client, String indexName) {     return new TransportSearchRequestExecutor(client, indexName). }
false;public;1;17;;@Override public boolean bulkIndex(List<String> bulkData) {     BulkRequest bulkRequest = new BulkRequest().     for (String bulkItem : bulkData) {         bulkRequest.add(new IndexRequest(indexName, typeName).source(bulkItem.getBytes(StandardCharsets.UTF_8), XContentType.JSON)).     }     BulkResponse bulkResponse.     try {         bulkResponse = client.execute(NoopBulkAction.INSTANCE, bulkRequest).get().     } catch (InterruptedException e) {         Thread.currentThread().interrupt().         return false.     } catch (ExecutionException e) {         throw new ElasticsearchException(e).     }     return !bulkResponse.hasFailures(). }
false;public;1;17;;@Override public boolean search(String source) {     final SearchResponse response.     try {         final SearchRequest searchRequest = new SearchRequest(indexName).         SearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder().         searchRequest.source(searchSourceBuilder).         searchSourceBuilder.query(QueryBuilders.wrapperQuery(source)).         response = client.execute(NoopSearchAction.INSTANCE, searchRequest).get().         return response.status() == RestStatus.OK.     } catch (InterruptedException e) {         Thread.currentThread().interrupt().         return false.     } catch (ExecutionException e) {         throw new ElasticsearchException(e).     } }
