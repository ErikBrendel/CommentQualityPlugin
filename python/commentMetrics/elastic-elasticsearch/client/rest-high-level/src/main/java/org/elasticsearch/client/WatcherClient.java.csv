# id;timestamp;commentText;codeText;commentWords;codeWords
WatcherClient -> public ActivateWatchResponse activateWatch(ActivateWatchRequest request, RequestOptions options) throws IOException;1539615817;Activate a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ActivateWatchResponse activateWatch(ActivateWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::activateWatch, options,_            ActivateWatchResponse::fromXContent, singleton(404))__    };activate,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,activate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,activate,watch,response,activate,watch,activate,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,activate,watch,options,activate,watch,response,from,xcontent,singleton,404
WatcherClient -> public ActivateWatchResponse activateWatch(ActivateWatchRequest request, RequestOptions options) throws IOException;1540238977;Activate a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ActivateWatchResponse activateWatch(ActivateWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::activateWatch, options,_            ActivateWatchResponse::fromXContent, singleton(404))__    };activate,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,activate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,activate,watch,response,activate,watch,activate,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,activate,watch,options,activate,watch,response,from,xcontent,singleton,404
WatcherClient -> public ActivateWatchResponse activateWatch(ActivateWatchRequest request, RequestOptions options) throws IOException;1540486836;Activate a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ActivateWatchResponse activateWatch(ActivateWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::activateWatch, options,_            ActivateWatchResponse::fromXContent, singleton(404))__    };activate,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,activate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,activate,watch,response,activate,watch,activate,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,activate,watch,options,activate,watch,response,from,xcontent,singleton,404
WatcherClient -> public ActivateWatchResponse activateWatch(ActivateWatchRequest request, RequestOptions options) throws IOException;1540847035;Activate a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ActivateWatchResponse activateWatch(ActivateWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::activateWatch, options,_            ActivateWatchResponse::fromXContent, singleton(404))__    };activate,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,activate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,activate,watch,response,activate,watch,activate,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,activate,watch,options,activate,watch,response,from,xcontent,singleton,404
WatcherClient -> public ActivateWatchResponse activateWatch(ActivateWatchRequest request, RequestOptions options) throws IOException;1542120455;Activate a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ActivateWatchResponse activateWatch(ActivateWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::activateWatch, options,_            ActivateWatchResponse::fromXContent, singleton(404))__    };activate,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,activate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,activate,watch,response,activate,watch,activate,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,activate,watch,options,activate,watch,response,from,xcontent,singleton,404
WatcherClient -> public ActivateWatchResponse activateWatch(ActivateWatchRequest request, RequestOptions options) throws IOException;1543572166;Activate a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ActivateWatchResponse activateWatch(ActivateWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::activateWatch, options,_            ActivateWatchResponse::fromXContent, singleton(404))__    };activate,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,activate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,activate,watch,response,activate,watch,activate,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,activate,watch,options,activate,watch,response,from,xcontent,singleton,404
WatcherClient -> public ActivateWatchResponse activateWatch(ActivateWatchRequest request, RequestOptions options) throws IOException;1544013702;Activate a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ActivateWatchResponse activateWatch(ActivateWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::activateWatch, options,_            ActivateWatchResponse::fromXContent, singleton(404))__    };activate,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,activate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,activate,watch,response,activate,watch,activate,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,activate,watch,options,activate,watch,response,from,xcontent,singleton,404
WatcherClient -> public void ackWatchAsync(AckWatchRequest request, RequestOptions options, ActionListener<AckWatchResponse> listener);1538579488;Asynchronously acknowledges a watch._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">_the docs</a> for more information._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon completion of the request;public void ackWatchAsync(AckWatchRequest request, RequestOptions options, ActionListener<AckWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::ackWatch, options,_            AckWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,acknowledges,a,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,ack,watch,html,the,docs,a,for,more,information,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,completion,of,the,request;public,void,ack,watch,async,ack,watch,request,request,request,options,options,action,listener,ack,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,ack,watch,options,ack,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void ackWatchAsync(AckWatchRequest request, RequestOptions options, ActionListener<AckWatchResponse> listener);1539615817;Asynchronously acknowledges a watch._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">_the docs</a> for more information._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon completion of the request;public void ackWatchAsync(AckWatchRequest request, RequestOptions options, ActionListener<AckWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::ackWatch, options,_            AckWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,acknowledges,a,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,ack,watch,html,the,docs,a,for,more,information,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,completion,of,the,request;public,void,ack,watch,async,ack,watch,request,request,request,options,options,action,listener,ack,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,ack,watch,options,ack,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void ackWatchAsync(AckWatchRequest request, RequestOptions options, ActionListener<AckWatchResponse> listener);1540238977;Asynchronously acknowledges a watch._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">_the docs</a> for more information._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon completion of the request;public void ackWatchAsync(AckWatchRequest request, RequestOptions options, ActionListener<AckWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::ackWatch, options,_            AckWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,acknowledges,a,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,ack,watch,html,the,docs,a,for,more,information,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,completion,of,the,request;public,void,ack,watch,async,ack,watch,request,request,request,options,options,action,listener,ack,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,ack,watch,options,ack,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void ackWatchAsync(AckWatchRequest request, RequestOptions options, ActionListener<AckWatchResponse> listener);1540486836;Asynchronously acknowledges a watch._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">_the docs</a> for more information._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon completion of the request;public void ackWatchAsync(AckWatchRequest request, RequestOptions options, ActionListener<AckWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::ackWatch, options,_            AckWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,acknowledges,a,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,ack,watch,html,the,docs,a,for,more,information,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,completion,of,the,request;public,void,ack,watch,async,ack,watch,request,request,request,options,options,action,listener,ack,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,ack,watch,options,ack,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void ackWatchAsync(AckWatchRequest request, RequestOptions options, ActionListener<AckWatchResponse> listener);1540847035;Asynchronously acknowledges a watch._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">_the docs</a> for more information._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon completion of the request;public void ackWatchAsync(AckWatchRequest request, RequestOptions options, ActionListener<AckWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::ackWatch, options,_            AckWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,acknowledges,a,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,ack,watch,html,the,docs,a,for,more,information,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,completion,of,the,request;public,void,ack,watch,async,ack,watch,request,request,request,options,options,action,listener,ack,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,ack,watch,options,ack,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void ackWatchAsync(AckWatchRequest request, RequestOptions options, ActionListener<AckWatchResponse> listener);1542120455;Asynchronously acknowledges a watch._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">_the docs</a> for more information._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon completion of the request;public void ackWatchAsync(AckWatchRequest request, RequestOptions options, ActionListener<AckWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::ackWatch, options,_            AckWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,acknowledges,a,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,ack,watch,html,the,docs,a,for,more,information,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,completion,of,the,request;public,void,ack,watch,async,ack,watch,request,request,request,options,options,action,listener,ack,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,ack,watch,options,ack,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void ackWatchAsync(AckWatchRequest request, RequestOptions options, ActionListener<AckWatchResponse> listener);1543572166;Asynchronously acknowledges a watch._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">_the docs</a> for more information._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon completion of the request;public void ackWatchAsync(AckWatchRequest request, RequestOptions options, ActionListener<AckWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::ackWatch, options,_            AckWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,acknowledges,a,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,ack,watch,html,the,docs,a,for,more,information,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,completion,of,the,request;public,void,ack,watch,async,ack,watch,request,request,request,options,options,action,listener,ack,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,ack,watch,options,ack,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void ackWatchAsync(AckWatchRequest request, RequestOptions options, ActionListener<AckWatchResponse> listener);1544013702;Asynchronously acknowledges a watch._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">_the docs</a> for more information._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon completion of the request;public void ackWatchAsync(AckWatchRequest request, RequestOptions options, ActionListener<AckWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::ackWatch, options,_            AckWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,acknowledges,a,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,ack,watch,html,the,docs,a,for,more,information,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,completion,of,the,request;public,void,ack,watch,async,ack,watch,request,request,request,options,options,action,listener,ack,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,ack,watch,options,ack,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public AcknowledgedResponse startWatchService(StartWatchServiceRequest request, RequestOptions options) throws IOException;1540238977;Start the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startWatchService(StartWatchServiceRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_                request, WatcherRequestConverters::startWatchService, options, AcknowledgedResponse::fromXContent, emptySet())__    };start,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,watch,service,start,watch,service,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,start,watch,service,options,acknowledged,response,from,xcontent,empty,set
WatcherClient -> public AcknowledgedResponse startWatchService(StartWatchServiceRequest request, RequestOptions options) throws IOException;1540486836;Start the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startWatchService(StartWatchServiceRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_                request, WatcherRequestConverters::startWatchService, options, AcknowledgedResponse::fromXContent, emptySet())__    };start,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,watch,service,start,watch,service,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,start,watch,service,options,acknowledged,response,from,xcontent,empty,set
WatcherClient -> public AcknowledgedResponse startWatchService(StartWatchServiceRequest request, RequestOptions options) throws IOException;1540847035;Start the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startWatchService(StartWatchServiceRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_                request, WatcherRequestConverters::startWatchService, options, AcknowledgedResponse::fromXContent, emptySet())__    };start,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,watch,service,start,watch,service,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,start,watch,service,options,acknowledged,response,from,xcontent,empty,set
WatcherClient -> public AcknowledgedResponse startWatchService(StartWatchServiceRequest request, RequestOptions options) throws IOException;1542120455;Start the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startWatchService(StartWatchServiceRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_                request, WatcherRequestConverters::startWatchService, options, AcknowledgedResponse::fromXContent, emptySet())__    };start,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,watch,service,start,watch,service,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,start,watch,service,options,acknowledged,response,from,xcontent,empty,set
WatcherClient -> public AcknowledgedResponse startWatchService(StartWatchServiceRequest request, RequestOptions options) throws IOException;1543572166;Start the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startWatchService(StartWatchServiceRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_                request, WatcherRequestConverters::startWatchService, options, AcknowledgedResponse::fromXContent, emptySet())__    };start,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,watch,service,start,watch,service,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,start,watch,service,options,acknowledged,response,from,xcontent,empty,set
WatcherClient -> public AcknowledgedResponse startWatchService(StartWatchServiceRequest request, RequestOptions options) throws IOException;1544013702;Start the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startWatchService(StartWatchServiceRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_                request, WatcherRequestConverters::startWatchService, options, AcknowledgedResponse::fromXContent, emptySet())__    };start,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,watch,service,start,watch,service,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,start,watch,service,options,acknowledged,response,from,xcontent,empty,set
WatcherClient -> public void deactivateWatchAsync(DeactivateWatchRequest request, RequestOptions options,                                      ActionListener<DeactivateWatchResponse> listener);1540486836;Asynchronously deactivate an existing watch_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deactivateWatchAsync(DeactivateWatchRequest request, RequestOptions options,_                                     ActionListener<DeactivateWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::deactivateWatch, options,_            DeactivateWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,deactivate,an,existing,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,deactivate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,deactivate,watch,async,deactivate,watch,request,request,request,options,options,action,listener,deactivate,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,deactivate,watch,options,deactivate,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void deactivateWatchAsync(DeactivateWatchRequest request, RequestOptions options,                                      ActionListener<DeactivateWatchResponse> listener);1540847035;Asynchronously deactivate an existing watch_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deactivateWatchAsync(DeactivateWatchRequest request, RequestOptions options,_                                     ActionListener<DeactivateWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::deactivateWatch, options,_            DeactivateWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,deactivate,an,existing,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,deactivate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,deactivate,watch,async,deactivate,watch,request,request,request,options,options,action,listener,deactivate,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,deactivate,watch,options,deactivate,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void deactivateWatchAsync(DeactivateWatchRequest request, RequestOptions options,                                      ActionListener<DeactivateWatchResponse> listener);1542120455;Asynchronously deactivate an existing watch_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deactivateWatchAsync(DeactivateWatchRequest request, RequestOptions options,_                                     ActionListener<DeactivateWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::deactivateWatch, options,_            DeactivateWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,deactivate,an,existing,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,deactivate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,deactivate,watch,async,deactivate,watch,request,request,request,options,options,action,listener,deactivate,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,deactivate,watch,options,deactivate,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void deactivateWatchAsync(DeactivateWatchRequest request, RequestOptions options,                                      ActionListener<DeactivateWatchResponse> listener);1543572166;Asynchronously deactivate an existing watch_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deactivateWatchAsync(DeactivateWatchRequest request, RequestOptions options,_                                     ActionListener<DeactivateWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::deactivateWatch, options,_            DeactivateWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,deactivate,an,existing,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,deactivate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,deactivate,watch,async,deactivate,watch,request,request,request,options,options,action,listener,deactivate,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,deactivate,watch,options,deactivate,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void deactivateWatchAsync(DeactivateWatchRequest request, RequestOptions options,                                      ActionListener<DeactivateWatchResponse> listener);1544013702;Asynchronously deactivate an existing watch_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deactivateWatchAsync(DeactivateWatchRequest request, RequestOptions options,_                                     ActionListener<DeactivateWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::deactivateWatch, options,_            DeactivateWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,deactivate,an,existing,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,deactivate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,deactivate,watch,async,deactivate,watch,request,request,request,options,options,action,listener,deactivate,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,deactivate,watch,options,deactivate,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void stopWatchServiceAsync(StopWatchServiceRequest request, RequestOptions options,             ActionListener<AcknowledgedResponse> listener);1540238977;Asynchronously stop the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void stopWatchServiceAsync(StopWatchServiceRequest request, RequestOptions options,_            ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_                request, WatcherRequestConverters::stopWatchService, options, AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,stop,watch,service,async,stop,watch,service,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,stop,watch,service,options,acknowledged,response,from,xcontent,listener,empty,set
WatcherClient -> public void stopWatchServiceAsync(StopWatchServiceRequest request, RequestOptions options,             ActionListener<AcknowledgedResponse> listener);1540486836;Asynchronously stop the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void stopWatchServiceAsync(StopWatchServiceRequest request, RequestOptions options,_            ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_                request, WatcherRequestConverters::stopWatchService, options, AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,stop,watch,service,async,stop,watch,service,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,stop,watch,service,options,acknowledged,response,from,xcontent,listener,empty,set
WatcherClient -> public void stopWatchServiceAsync(StopWatchServiceRequest request, RequestOptions options,             ActionListener<AcknowledgedResponse> listener);1540847035;Asynchronously stop the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void stopWatchServiceAsync(StopWatchServiceRequest request, RequestOptions options,_            ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_                request, WatcherRequestConverters::stopWatchService, options, AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,stop,watch,service,async,stop,watch,service,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,stop,watch,service,options,acknowledged,response,from,xcontent,listener,empty,set
WatcherClient -> public void stopWatchServiceAsync(StopWatchServiceRequest request, RequestOptions options,             ActionListener<AcknowledgedResponse> listener);1542120455;Asynchronously stop the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void stopWatchServiceAsync(StopWatchServiceRequest request, RequestOptions options,_            ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_                request, WatcherRequestConverters::stopWatchService, options, AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,stop,watch,service,async,stop,watch,service,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,stop,watch,service,options,acknowledged,response,from,xcontent,listener,empty,set
WatcherClient -> public void stopWatchServiceAsync(StopWatchServiceRequest request, RequestOptions options,             ActionListener<AcknowledgedResponse> listener);1543572166;Asynchronously stop the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void stopWatchServiceAsync(StopWatchServiceRequest request, RequestOptions options,_            ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_                request, WatcherRequestConverters::stopWatchService, options, AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,stop,watch,service,async,stop,watch,service,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,stop,watch,service,options,acknowledged,response,from,xcontent,listener,empty,set
WatcherClient -> public void stopWatchServiceAsync(StopWatchServiceRequest request, RequestOptions options,             ActionListener<AcknowledgedResponse> listener);1544013702;Asynchronously stop the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void stopWatchServiceAsync(StopWatchServiceRequest request, RequestOptions options,_            ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_                request, WatcherRequestConverters::stopWatchService, options, AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,stop,watch,service,async,stop,watch,service,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,stop,watch,service,options,acknowledged,response,from,xcontent,listener,empty,set
WatcherClient -> public void putWatchAsync(PutWatchRequest request, RequestOptions options,                               ActionListener<PutWatchResponse> listener);1532028790;Asynchronously put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putWatchAsync(PutWatchRequest request, RequestOptions options,_                              ActionListener<PutWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::xPackWatcherPutWatch, options,_            PutWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,watch,async,put,watch,request,request,request,options,options,action,listener,put,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,x,pack,watcher,put,watch,options,put,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void putWatchAsync(PutWatchRequest request, RequestOptions options,                               ActionListener<PutWatchResponse> listener);1533063033;Asynchronously put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putWatchAsync(PutWatchRequest request, RequestOptions options,_                              ActionListener<PutWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::xPackWatcherPutWatch, options,_            PutWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,watch,async,put,watch,request,request,request,options,options,action,listener,put,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,x,pack,watcher,put,watch,options,put,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void putWatchAsync(PutWatchRequest request, RequestOptions options,                               ActionListener<PutWatchResponse> listener);1536611444;Asynchronously put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putWatchAsync(PutWatchRequest request, RequestOptions options,_                              ActionListener<PutWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::putWatch, options,_            PutWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,watch,async,put,watch,request,request,request,options,options,action,listener,put,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,put,watch,options,put,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void putWatchAsync(PutWatchRequest request, RequestOptions options,                               ActionListener<PutWatchResponse> listener);1538579488;Asynchronously put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putWatchAsync(PutWatchRequest request, RequestOptions options,_                              ActionListener<PutWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::putWatch, options,_            PutWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,watch,async,put,watch,request,request,request,options,options,action,listener,put,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,put,watch,options,put,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void putWatchAsync(PutWatchRequest request, RequestOptions options,                               ActionListener<PutWatchResponse> listener);1539615817;Asynchronously put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putWatchAsync(PutWatchRequest request, RequestOptions options,_                              ActionListener<PutWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::putWatch, options,_            PutWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,watch,async,put,watch,request,request,request,options,options,action,listener,put,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,put,watch,options,put,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void putWatchAsync(PutWatchRequest request, RequestOptions options,                               ActionListener<PutWatchResponse> listener);1540238977;Asynchronously put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putWatchAsync(PutWatchRequest request, RequestOptions options,_                              ActionListener<PutWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::putWatch, options,_            PutWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,watch,async,put,watch,request,request,request,options,options,action,listener,put,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,put,watch,options,put,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void putWatchAsync(PutWatchRequest request, RequestOptions options,                               ActionListener<PutWatchResponse> listener);1540486836;Asynchronously put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putWatchAsync(PutWatchRequest request, RequestOptions options,_                              ActionListener<PutWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::putWatch, options,_            PutWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,watch,async,put,watch,request,request,request,options,options,action,listener,put,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,put,watch,options,put,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void putWatchAsync(PutWatchRequest request, RequestOptions options,                               ActionListener<PutWatchResponse> listener);1540847035;Asynchronously put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putWatchAsync(PutWatchRequest request, RequestOptions options,_                              ActionListener<PutWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::putWatch, options,_            PutWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,watch,async,put,watch,request,request,request,options,options,action,listener,put,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,put,watch,options,put,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void putWatchAsync(PutWatchRequest request, RequestOptions options,                               ActionListener<PutWatchResponse> listener);1542120455;Asynchronously put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putWatchAsync(PutWatchRequest request, RequestOptions options,_                              ActionListener<PutWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::putWatch, options,_            PutWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,watch,async,put,watch,request,request,request,options,options,action,listener,put,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,put,watch,options,put,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void putWatchAsync(PutWatchRequest request, RequestOptions options,                               ActionListener<PutWatchResponse> listener);1543572166;Asynchronously put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putWatchAsync(PutWatchRequest request, RequestOptions options,_                              ActionListener<PutWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::putWatch, options,_            PutWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,watch,async,put,watch,request,request,request,options,options,action,listener,put,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,put,watch,options,put,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void putWatchAsync(PutWatchRequest request, RequestOptions options,                               ActionListener<PutWatchResponse> listener);1544013702;Asynchronously put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putWatchAsync(PutWatchRequest request, RequestOptions options,_                              ActionListener<PutWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::putWatch, options,_            PutWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,watch,async,put,watch,request,request,request,options,options,action,listener,put,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,put,watch,options,put,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void watcherStatsAsync(WatcherStatsRequest request, RequestOptions options, ActionListener<WatcherStatsResponse> listener);1542120455;Asynchronously get the watcher stats_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void watcherStatsAsync(WatcherStatsRequest request, RequestOptions options, ActionListener<WatcherStatsResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::watcherStats, options,_            WatcherStatsResponse::fromXContent, listener, emptySet())__    };asynchronously,get,the,watcher,stats,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,stats,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,watcher,stats,async,watcher,stats,request,request,request,options,options,action,listener,watcher,stats,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,watcher,stats,options,watcher,stats,response,from,xcontent,listener,empty,set
WatcherClient -> public void watcherStatsAsync(WatcherStatsRequest request, RequestOptions options, ActionListener<WatcherStatsResponse> listener);1543572166;Asynchronously get the watcher stats_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void watcherStatsAsync(WatcherStatsRequest request, RequestOptions options, ActionListener<WatcherStatsResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::watcherStats, options,_            WatcherStatsResponse::fromXContent, listener, emptySet())__    };asynchronously,get,the,watcher,stats,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,stats,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,watcher,stats,async,watcher,stats,request,request,request,options,options,action,listener,watcher,stats,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,watcher,stats,options,watcher,stats,response,from,xcontent,listener,empty,set
WatcherClient -> public void watcherStatsAsync(WatcherStatsRequest request, RequestOptions options, ActionListener<WatcherStatsResponse> listener);1544013702;Asynchronously get the watcher stats_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void watcherStatsAsync(WatcherStatsRequest request, RequestOptions options, ActionListener<WatcherStatsResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::watcherStats, options,_            WatcherStatsResponse::fromXContent, listener, emptySet())__    };asynchronously,get,the,watcher,stats,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,stats,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,watcher,stats,async,watcher,stats,request,request,request,options,options,action,listener,watcher,stats,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,watcher,stats,options,watcher,stats,response,from,xcontent,listener,empty,set
WatcherClient -> public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException;1532028790;Put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::xPackWatcherPutWatch, options,_            PutWatchResponse::fromXContent, emptySet())__    };put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,watch,response,put,watch,put,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,x,pack,watcher,put,watch,options,put,watch,response,from,xcontent,empty,set
WatcherClient -> public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException;1533063033;Put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::xPackWatcherPutWatch, options,_            PutWatchResponse::fromXContent, emptySet())__    };put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,watch,response,put,watch,put,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,x,pack,watcher,put,watch,options,put,watch,response,from,xcontent,empty,set
WatcherClient -> public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException;1536611444;Put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::putWatch, options,_            PutWatchResponse::fromXContent, emptySet())__    };put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,watch,response,put,watch,put,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,put,watch,options,put,watch,response,from,xcontent,empty,set
WatcherClient -> public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException;1538579488;Put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::putWatch, options,_            PutWatchResponse::fromXContent, emptySet())__    };put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,watch,response,put,watch,put,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,put,watch,options,put,watch,response,from,xcontent,empty,set
WatcherClient -> public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException;1539615817;Put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::putWatch, options,_            PutWatchResponse::fromXContent, emptySet())__    };put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,watch,response,put,watch,put,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,put,watch,options,put,watch,response,from,xcontent,empty,set
WatcherClient -> public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException;1540238977;Put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::putWatch, options,_            PutWatchResponse::fromXContent, emptySet())__    };put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,watch,response,put,watch,put,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,put,watch,options,put,watch,response,from,xcontent,empty,set
WatcherClient -> public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException;1540486836;Put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::putWatch, options,_            PutWatchResponse::fromXContent, emptySet())__    };put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,watch,response,put,watch,put,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,put,watch,options,put,watch,response,from,xcontent,empty,set
WatcherClient -> public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException;1540847035;Put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::putWatch, options,_            PutWatchResponse::fromXContent, emptySet())__    };put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,watch,response,put,watch,put,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,put,watch,options,put,watch,response,from,xcontent,empty,set
WatcherClient -> public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException;1542120455;Put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::putWatch, options,_            PutWatchResponse::fromXContent, emptySet())__    };put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,watch,response,put,watch,put,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,put,watch,options,put,watch,response,from,xcontent,empty,set
WatcherClient -> public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException;1543572166;Put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::putWatch, options,_            PutWatchResponse::fromXContent, emptySet())__    };put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,watch,response,put,watch,put,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,put,watch,options,put,watch,response,from,xcontent,empty,set
WatcherClient -> public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException;1544013702;Put a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutWatchResponse putWatch(PutWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::putWatch, options,_            PutWatchResponse::fromXContent, emptySet())__    };put,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,put,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,watch,response,put,watch,put,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,put,watch,options,put,watch,response,from,xcontent,empty,set
WatcherClient -> public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException;1533063033;Deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::xPackWatcherDeleteWatch, options,_            DeleteWatchResponse::fromXContent, singleton(404))__    };deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,watch,response,delete,watch,delete,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,x,pack,watcher,delete,watch,options,delete,watch,response,from,xcontent,singleton,404
WatcherClient -> public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException;1536611444;Deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::deleteWatch, options,_            DeleteWatchResponse::fromXContent, singleton(404))__    };deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,watch,response,delete,watch,delete,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,delete,watch,options,delete,watch,response,from,xcontent,singleton,404
WatcherClient -> public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException;1538579488;Deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::deleteWatch, options,_            DeleteWatchResponse::fromXContent, singleton(404))__    };deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,watch,response,delete,watch,delete,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,delete,watch,options,delete,watch,response,from,xcontent,singleton,404
WatcherClient -> public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException;1539615817;Deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::deleteWatch, options,_            DeleteWatchResponse::fromXContent, singleton(404))__    };deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,watch,response,delete,watch,delete,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,delete,watch,options,delete,watch,response,from,xcontent,singleton,404
WatcherClient -> public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException;1540238977;Deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::deleteWatch, options,_            DeleteWatchResponse::fromXContent, singleton(404))__    };deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,watch,response,delete,watch,delete,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,delete,watch,options,delete,watch,response,from,xcontent,singleton,404
WatcherClient -> public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException;1540486836;Deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::deleteWatch, options,_            DeleteWatchResponse::fromXContent, singleton(404))__    };deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,watch,response,delete,watch,delete,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,delete,watch,options,delete,watch,response,from,xcontent,singleton,404
WatcherClient -> public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException;1540847035;Deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::deleteWatch, options,_            DeleteWatchResponse::fromXContent, singleton(404))__    };deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,watch,response,delete,watch,delete,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,delete,watch,options,delete,watch,response,from,xcontent,singleton,404
WatcherClient -> public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException;1542120455;Deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::deleteWatch, options,_            DeleteWatchResponse::fromXContent, singleton(404))__    };deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,watch,response,delete,watch,delete,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,delete,watch,options,delete,watch,response,from,xcontent,singleton,404
WatcherClient -> public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException;1543572166;Deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::deleteWatch, options,_            DeleteWatchResponse::fromXContent, singleton(404))__    };deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,watch,response,delete,watch,delete,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,delete,watch,options,delete,watch,response,from,xcontent,singleton,404
WatcherClient -> public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException;1544013702;Deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteWatchResponse deleteWatch(DeleteWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::deleteWatch, options,_            DeleteWatchResponse::fromXContent, singleton(404))__    };deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,watch,response,delete,watch,delete,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,delete,watch,options,delete,watch,response,from,xcontent,singleton,404
WatcherClient -> public void activateWatchAsync(ActivateWatchRequest request, RequestOptions options, ActionListener<ActivateWatchResponse> listener);1539615817;Asynchronously activates a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void activateWatchAsync(ActivateWatchRequest request, RequestOptions options, ActionListener<ActivateWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::activateWatch, options,_            ActivateWatchResponse::fromXContent, listener, singleton(404))__    };asynchronously,activates,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,activate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,activate,watch,async,activate,watch,request,request,request,options,options,action,listener,activate,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,activate,watch,options,activate,watch,response,from,xcontent,listener,singleton,404
WatcherClient -> public void activateWatchAsync(ActivateWatchRequest request, RequestOptions options, ActionListener<ActivateWatchResponse> listener);1540238977;Asynchronously activates a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void activateWatchAsync(ActivateWatchRequest request, RequestOptions options, ActionListener<ActivateWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::activateWatch, options,_            ActivateWatchResponse::fromXContent, listener, singleton(404))__    };asynchronously,activates,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,activate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,activate,watch,async,activate,watch,request,request,request,options,options,action,listener,activate,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,activate,watch,options,activate,watch,response,from,xcontent,listener,singleton,404
WatcherClient -> public void activateWatchAsync(ActivateWatchRequest request, RequestOptions options, ActionListener<ActivateWatchResponse> listener);1540486836;Asynchronously activates a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void activateWatchAsync(ActivateWatchRequest request, RequestOptions options, ActionListener<ActivateWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::activateWatch, options,_            ActivateWatchResponse::fromXContent, listener, singleton(404))__    };asynchronously,activates,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,activate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,activate,watch,async,activate,watch,request,request,request,options,options,action,listener,activate,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,activate,watch,options,activate,watch,response,from,xcontent,listener,singleton,404
WatcherClient -> public void activateWatchAsync(ActivateWatchRequest request, RequestOptions options, ActionListener<ActivateWatchResponse> listener);1540847035;Asynchronously activates a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void activateWatchAsync(ActivateWatchRequest request, RequestOptions options, ActionListener<ActivateWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::activateWatch, options,_            ActivateWatchResponse::fromXContent, listener, singleton(404))__    };asynchronously,activates,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,activate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,activate,watch,async,activate,watch,request,request,request,options,options,action,listener,activate,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,activate,watch,options,activate,watch,response,from,xcontent,listener,singleton,404
WatcherClient -> public void activateWatchAsync(ActivateWatchRequest request, RequestOptions options, ActionListener<ActivateWatchResponse> listener);1542120455;Asynchronously activates a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void activateWatchAsync(ActivateWatchRequest request, RequestOptions options, ActionListener<ActivateWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::activateWatch, options,_            ActivateWatchResponse::fromXContent, listener, singleton(404))__    };asynchronously,activates,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,activate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,activate,watch,async,activate,watch,request,request,request,options,options,action,listener,activate,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,activate,watch,options,activate,watch,response,from,xcontent,listener,singleton,404
WatcherClient -> public void activateWatchAsync(ActivateWatchRequest request, RequestOptions options, ActionListener<ActivateWatchResponse> listener);1543572166;Asynchronously activates a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void activateWatchAsync(ActivateWatchRequest request, RequestOptions options, ActionListener<ActivateWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::activateWatch, options,_            ActivateWatchResponse::fromXContent, listener, singleton(404))__    };asynchronously,activates,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,activate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,activate,watch,async,activate,watch,request,request,request,options,options,action,listener,activate,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,activate,watch,options,activate,watch,response,from,xcontent,listener,singleton,404
WatcherClient -> public void activateWatchAsync(ActivateWatchRequest request, RequestOptions options, ActionListener<ActivateWatchResponse> listener);1544013702;Asynchronously activates a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void activateWatchAsync(ActivateWatchRequest request, RequestOptions options, ActionListener<ActivateWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::activateWatch, options,_            ActivateWatchResponse::fromXContent, listener, singleton(404))__    };asynchronously,activates,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,activate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,activate,watch,async,activate,watch,request,request,request,options,options,action,listener,activate,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,activate,watch,options,activate,watch,response,from,xcontent,listener,singleton,404
WatcherClient -> public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener);1533063033;Asynchronously deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::xPackWatcherDeleteWatch, options,_            DeleteWatchResponse::fromXContent, listener, singleton(404))__    };asynchronously,deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,watch,async,delete,watch,request,request,request,options,options,action,listener,delete,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,x,pack,watcher,delete,watch,options,delete,watch,response,from,xcontent,listener,singleton,404
WatcherClient -> public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener);1536611444;Asynchronously deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::deleteWatch, options,_            DeleteWatchResponse::fromXContent, listener, singleton(404))__    };asynchronously,deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,watch,async,delete,watch,request,request,request,options,options,action,listener,delete,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,delete,watch,options,delete,watch,response,from,xcontent,listener,singleton,404
WatcherClient -> public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener);1538579488;Asynchronously deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::deleteWatch, options,_            DeleteWatchResponse::fromXContent, listener, singleton(404))__    };asynchronously,deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,watch,async,delete,watch,request,request,request,options,options,action,listener,delete,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,delete,watch,options,delete,watch,response,from,xcontent,listener,singleton,404
WatcherClient -> public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener);1539615817;Asynchronously deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::deleteWatch, options,_            DeleteWatchResponse::fromXContent, listener, singleton(404))__    };asynchronously,deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,watch,async,delete,watch,request,request,request,options,options,action,listener,delete,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,delete,watch,options,delete,watch,response,from,xcontent,listener,singleton,404
WatcherClient -> public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener);1540238977;Asynchronously deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::deleteWatch, options,_            DeleteWatchResponse::fromXContent, listener, singleton(404))__    };asynchronously,deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,watch,async,delete,watch,request,request,request,options,options,action,listener,delete,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,delete,watch,options,delete,watch,response,from,xcontent,listener,singleton,404
WatcherClient -> public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener);1540486836;Asynchronously deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::deleteWatch, options,_            DeleteWatchResponse::fromXContent, listener, singleton(404))__    };asynchronously,deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,watch,async,delete,watch,request,request,request,options,options,action,listener,delete,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,delete,watch,options,delete,watch,response,from,xcontent,listener,singleton,404
WatcherClient -> public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener);1540847035;Asynchronously deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::deleteWatch, options,_            DeleteWatchResponse::fromXContent, listener, singleton(404))__    };asynchronously,deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,watch,async,delete,watch,request,request,request,options,options,action,listener,delete,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,delete,watch,options,delete,watch,response,from,xcontent,listener,singleton,404
WatcherClient -> public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener);1542120455;Asynchronously deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::deleteWatch, options,_            DeleteWatchResponse::fromXContent, listener, singleton(404))__    };asynchronously,deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,watch,async,delete,watch,request,request,request,options,options,action,listener,delete,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,delete,watch,options,delete,watch,response,from,xcontent,listener,singleton,404
WatcherClient -> public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener);1543572166;Asynchronously deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::deleteWatch, options,_            DeleteWatchResponse::fromXContent, listener, singleton(404))__    };asynchronously,deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,watch,async,delete,watch,request,request,request,options,options,action,listener,delete,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,delete,watch,options,delete,watch,response,from,xcontent,listener,singleton,404
WatcherClient -> public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener);1544013702;Asynchronously deletes a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteWatchAsync(DeleteWatchRequest request, RequestOptions options, ActionListener<DeleteWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::deleteWatch, options,_            DeleteWatchResponse::fromXContent, listener, singleton(404))__    };asynchronously,deletes,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,delete,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,watch,async,delete,watch,request,request,request,options,options,action,listener,delete,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,delete,watch,options,delete,watch,response,from,xcontent,listener,singleton,404
WatcherClient -> public AckWatchResponse ackWatch(AckWatchRequest request, RequestOptions options) throws IOException;1538579488;Acknowledges a watch._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">_the docs</a> for more information._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException if there is a problem sending the request or parsing back the response;public AckWatchResponse ackWatch(AckWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::ackWatch, options,_            AckWatchResponse::fromXContent, emptySet())__    };acknowledges,a,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,ack,watch,html,the,docs,a,for,more,information,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,if,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,ack,watch,response,ack,watch,ack,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,ack,watch,options,ack,watch,response,from,xcontent,empty,set
WatcherClient -> public AckWatchResponse ackWatch(AckWatchRequest request, RequestOptions options) throws IOException;1539615817;Acknowledges a watch._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">_the docs</a> for more information._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException if there is a problem sending the request or parsing back the response;public AckWatchResponse ackWatch(AckWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::ackWatch, options,_            AckWatchResponse::fromXContent, emptySet())__    };acknowledges,a,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,ack,watch,html,the,docs,a,for,more,information,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,if,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,ack,watch,response,ack,watch,ack,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,ack,watch,options,ack,watch,response,from,xcontent,empty,set
WatcherClient -> public AckWatchResponse ackWatch(AckWatchRequest request, RequestOptions options) throws IOException;1540238977;Acknowledges a watch._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">_the docs</a> for more information._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException if there is a problem sending the request or parsing back the response;public AckWatchResponse ackWatch(AckWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::ackWatch, options,_            AckWatchResponse::fromXContent, emptySet())__    };acknowledges,a,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,ack,watch,html,the,docs,a,for,more,information,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,if,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,ack,watch,response,ack,watch,ack,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,ack,watch,options,ack,watch,response,from,xcontent,empty,set
WatcherClient -> public AckWatchResponse ackWatch(AckWatchRequest request, RequestOptions options) throws IOException;1540486836;Acknowledges a watch._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">_the docs</a> for more information._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException if there is a problem sending the request or parsing back the response;public AckWatchResponse ackWatch(AckWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::ackWatch, options,_            AckWatchResponse::fromXContent, emptySet())__    };acknowledges,a,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,ack,watch,html,the,docs,a,for,more,information,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,if,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,ack,watch,response,ack,watch,ack,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,ack,watch,options,ack,watch,response,from,xcontent,empty,set
WatcherClient -> public AckWatchResponse ackWatch(AckWatchRequest request, RequestOptions options) throws IOException;1540847035;Acknowledges a watch._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">_the docs</a> for more information._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException if there is a problem sending the request or parsing back the response;public AckWatchResponse ackWatch(AckWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::ackWatch, options,_            AckWatchResponse::fromXContent, emptySet())__    };acknowledges,a,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,ack,watch,html,the,docs,a,for,more,information,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,if,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,ack,watch,response,ack,watch,ack,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,ack,watch,options,ack,watch,response,from,xcontent,empty,set
WatcherClient -> public AckWatchResponse ackWatch(AckWatchRequest request, RequestOptions options) throws IOException;1542120455;Acknowledges a watch._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">_the docs</a> for more information._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException if there is a problem sending the request or parsing back the response;public AckWatchResponse ackWatch(AckWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::ackWatch, options,_            AckWatchResponse::fromXContent, emptySet())__    };acknowledges,a,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,ack,watch,html,the,docs,a,for,more,information,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,if,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,ack,watch,response,ack,watch,ack,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,ack,watch,options,ack,watch,response,from,xcontent,empty,set
WatcherClient -> public AckWatchResponse ackWatch(AckWatchRequest request, RequestOptions options) throws IOException;1543572166;Acknowledges a watch._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">_the docs</a> for more information._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException if there is a problem sending the request or parsing back the response;public AckWatchResponse ackWatch(AckWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::ackWatch, options,_            AckWatchResponse::fromXContent, emptySet())__    };acknowledges,a,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,ack,watch,html,the,docs,a,for,more,information,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,if,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,ack,watch,response,ack,watch,ack,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,ack,watch,options,ack,watch,response,from,xcontent,empty,set
WatcherClient -> public AckWatchResponse ackWatch(AckWatchRequest request, RequestOptions options) throws IOException;1544013702;Acknowledges a watch._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html">_the docs</a> for more information._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException if there is a problem sending the request or parsing back the response;public AckWatchResponse ackWatch(AckWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::ackWatch, options,_            AckWatchResponse::fromXContent, emptySet())__    };acknowledges,a,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,ack,watch,html,the,docs,a,for,more,information,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,if,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,ack,watch,response,ack,watch,ack,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,ack,watch,options,ack,watch,response,from,xcontent,empty,set
WatcherClient -> public GetWatchResponse getWatch(GetWatchRequest request, RequestOptions options) throws IOException;1543572166;Gets a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetWatchResponse getWatch(GetWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::getWatch, options,_            GetWatchResponse::fromXContent, emptySet())__    };gets,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,get,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,watch,response,get,watch,get,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,get,watch,options,get,watch,response,from,xcontent,empty,set
WatcherClient -> public GetWatchResponse getWatch(GetWatchRequest request, RequestOptions options) throws IOException;1544013702;Gets a watch from the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetWatchResponse getWatch(GetWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::getWatch, options,_            GetWatchResponse::fromXContent, emptySet())__    };gets,a,watch,from,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,get,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,watch,response,get,watch,get,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,get,watch,options,get,watch,response,from,xcontent,empty,set
WatcherClient -> public WatcherStatsResponse watcherStats(WatcherStatsRequest request, RequestOptions options) throws IOException;1542120455;Get the watcher stats_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public WatcherStatsResponse watcherStats(WatcherStatsRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::watcherStats, options,_            WatcherStatsResponse::fromXContent, emptySet())__    };get,the,watcher,stats,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,stats,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,watcher,stats,response,watcher,stats,watcher,stats,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,watcher,stats,options,watcher,stats,response,from,xcontent,empty,set
WatcherClient -> public WatcherStatsResponse watcherStats(WatcherStatsRequest request, RequestOptions options) throws IOException;1543572166;Get the watcher stats_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public WatcherStatsResponse watcherStats(WatcherStatsRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::watcherStats, options,_            WatcherStatsResponse::fromXContent, emptySet())__    };get,the,watcher,stats,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,stats,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,watcher,stats,response,watcher,stats,watcher,stats,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,watcher,stats,options,watcher,stats,response,from,xcontent,empty,set
WatcherClient -> public WatcherStatsResponse watcherStats(WatcherStatsRequest request, RequestOptions options) throws IOException;1544013702;Get the watcher stats_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public WatcherStatsResponse watcherStats(WatcherStatsRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::watcherStats, options,_            WatcherStatsResponse::fromXContent, emptySet())__    };get,the,watcher,stats,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,stats,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,watcher,stats,response,watcher,stats,watcher,stats,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,watcher,stats,options,watcher,stats,response,from,xcontent,empty,set
WatcherClient -> public AcknowledgedResponse stopWatchService(StopWatchServiceRequest request, RequestOptions options) throws IOException;1540238977;Stop the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopWatchService(StopWatchServiceRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_                request, WatcherRequestConverters::stopWatchService, options, AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,watch,service,stop,watch,service,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,stop,watch,service,options,acknowledged,response,from,xcontent,empty,set
WatcherClient -> public AcknowledgedResponse stopWatchService(StopWatchServiceRequest request, RequestOptions options) throws IOException;1540486836;Stop the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopWatchService(StopWatchServiceRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_                request, WatcherRequestConverters::stopWatchService, options, AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,watch,service,stop,watch,service,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,stop,watch,service,options,acknowledged,response,from,xcontent,empty,set
WatcherClient -> public AcknowledgedResponse stopWatchService(StopWatchServiceRequest request, RequestOptions options) throws IOException;1540847035;Stop the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopWatchService(StopWatchServiceRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_                request, WatcherRequestConverters::stopWatchService, options, AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,watch,service,stop,watch,service,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,stop,watch,service,options,acknowledged,response,from,xcontent,empty,set
WatcherClient -> public AcknowledgedResponse stopWatchService(StopWatchServiceRequest request, RequestOptions options) throws IOException;1542120455;Stop the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopWatchService(StopWatchServiceRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_                request, WatcherRequestConverters::stopWatchService, options, AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,watch,service,stop,watch,service,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,stop,watch,service,options,acknowledged,response,from,xcontent,empty,set
WatcherClient -> public AcknowledgedResponse stopWatchService(StopWatchServiceRequest request, RequestOptions options) throws IOException;1543572166;Stop the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopWatchService(StopWatchServiceRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_                request, WatcherRequestConverters::stopWatchService, options, AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,watch,service,stop,watch,service,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,stop,watch,service,options,acknowledged,response,from,xcontent,empty,set
WatcherClient -> public AcknowledgedResponse stopWatchService(StopWatchServiceRequest request, RequestOptions options) throws IOException;1544013702;Stop the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopWatchService(StopWatchServiceRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_                request, WatcherRequestConverters::stopWatchService, options, AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,watch,service,stop,watch,service,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,stop,watch,service,options,acknowledged,response,from,xcontent,empty,set
WatcherClient -> public void getWatchAsync(GetWatchRequest request, RequestOptions options,                               ActionListener<GetWatchResponse> listener);1543572166;Asynchronously gets a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getWatchAsync(GetWatchRequest request, RequestOptions options,_                              ActionListener<GetWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::getWatch, options,_            GetWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,gets,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,get,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,watch,async,get,watch,request,request,request,options,options,action,listener,get,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,get,watch,options,get,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public void getWatchAsync(GetWatchRequest request, RequestOptions options,                               ActionListener<GetWatchResponse> listener);1544013702;Asynchronously gets a watch into the cluster_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getWatchAsync(GetWatchRequest request, RequestOptions options,_                              ActionListener<GetWatchResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, WatcherRequestConverters::getWatch, options,_            GetWatchResponse::fromXContent, listener, emptySet())__    };asynchronously,gets,a,watch,into,the,cluster,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,get,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,watch,async,get,watch,request,request,request,options,options,action,listener,get,watch,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,get,watch,options,get,watch,response,from,xcontent,listener,empty,set
WatcherClient -> public DeactivateWatchResponse deactivateWatch(DeactivateWatchRequest request, RequestOptions options) throws IOException;1540486836;Deactivate an existing watch_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeactivateWatchResponse deactivateWatch(DeactivateWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::deactivateWatch, options,_            DeactivateWatchResponse::fromXContent, emptySet())__    };deactivate,an,existing,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,deactivate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,deactivate,watch,response,deactivate,watch,deactivate,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,deactivate,watch,options,deactivate,watch,response,from,xcontent,empty,set
WatcherClient -> public DeactivateWatchResponse deactivateWatch(DeactivateWatchRequest request, RequestOptions options) throws IOException;1540847035;Deactivate an existing watch_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeactivateWatchResponse deactivateWatch(DeactivateWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::deactivateWatch, options,_            DeactivateWatchResponse::fromXContent, emptySet())__    };deactivate,an,existing,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,deactivate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,deactivate,watch,response,deactivate,watch,deactivate,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,deactivate,watch,options,deactivate,watch,response,from,xcontent,empty,set
WatcherClient -> public DeactivateWatchResponse deactivateWatch(DeactivateWatchRequest request, RequestOptions options) throws IOException;1542120455;Deactivate an existing watch_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeactivateWatchResponse deactivateWatch(DeactivateWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::deactivateWatch, options,_            DeactivateWatchResponse::fromXContent, emptySet())__    };deactivate,an,existing,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,deactivate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,deactivate,watch,response,deactivate,watch,deactivate,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,deactivate,watch,options,deactivate,watch,response,from,xcontent,empty,set
WatcherClient -> public DeactivateWatchResponse deactivateWatch(DeactivateWatchRequest request, RequestOptions options) throws IOException;1543572166;Deactivate an existing watch_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeactivateWatchResponse deactivateWatch(DeactivateWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::deactivateWatch, options,_            DeactivateWatchResponse::fromXContent, emptySet())__    };deactivate,an,existing,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,deactivate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,deactivate,watch,response,deactivate,watch,deactivate,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,deactivate,watch,options,deactivate,watch,response,from,xcontent,empty,set
WatcherClient -> public DeactivateWatchResponse deactivateWatch(DeactivateWatchRequest request, RequestOptions options) throws IOException;1544013702;Deactivate an existing watch_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeactivateWatchResponse deactivateWatch(DeactivateWatchRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, WatcherRequestConverters::deactivateWatch, options,_            DeactivateWatchResponse::fromXContent, emptySet())__    };deactivate,an,existing,watch,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,deactivate,watch,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,deactivate,watch,response,deactivate,watch,deactivate,watch,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,watcher,request,converters,deactivate,watch,options,deactivate,watch,response,from,xcontent,empty,set
WatcherClient -> public void startWatchServiceAsync(StartWatchServiceRequest request, RequestOptions options,             ActionListener<AcknowledgedResponse> listener);1540238977;Asynchronously start the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void startWatchServiceAsync(StartWatchServiceRequest request, RequestOptions options,_            ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_                request, WatcherRequestConverters::startWatchService, options, AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,start,watch,service,async,start,watch,service,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,start,watch,service,options,acknowledged,response,from,xcontent,listener,empty,set
WatcherClient -> public void startWatchServiceAsync(StartWatchServiceRequest request, RequestOptions options,             ActionListener<AcknowledgedResponse> listener);1540486836;Asynchronously start the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void startWatchServiceAsync(StartWatchServiceRequest request, RequestOptions options,_            ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_                request, WatcherRequestConverters::startWatchService, options, AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,start,watch,service,async,start,watch,service,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,start,watch,service,options,acknowledged,response,from,xcontent,listener,empty,set
WatcherClient -> public void startWatchServiceAsync(StartWatchServiceRequest request, RequestOptions options,             ActionListener<AcknowledgedResponse> listener);1540847035;Asynchronously start the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void startWatchServiceAsync(StartWatchServiceRequest request, RequestOptions options,_            ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_                request, WatcherRequestConverters::startWatchService, options, AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,start,watch,service,async,start,watch,service,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,start,watch,service,options,acknowledged,response,from,xcontent,listener,empty,set
WatcherClient -> public void startWatchServiceAsync(StartWatchServiceRequest request, RequestOptions options,             ActionListener<AcknowledgedResponse> listener);1542120455;Asynchronously start the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void startWatchServiceAsync(StartWatchServiceRequest request, RequestOptions options,_            ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_                request, WatcherRequestConverters::startWatchService, options, AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,start,watch,service,async,start,watch,service,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,start,watch,service,options,acknowledged,response,from,xcontent,listener,empty,set
WatcherClient -> public void startWatchServiceAsync(StartWatchServiceRequest request, RequestOptions options,             ActionListener<AcknowledgedResponse> listener);1543572166;Asynchronously start the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void startWatchServiceAsync(StartWatchServiceRequest request, RequestOptions options,_            ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_                request, WatcherRequestConverters::startWatchService, options, AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,start,watch,service,async,start,watch,service,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,start,watch,service,options,acknowledged,response,from,xcontent,listener,empty,set
WatcherClient -> public void startWatchServiceAsync(StartWatchServiceRequest request, RequestOptions options,             ActionListener<AcknowledgedResponse> listener);1544013702;Asynchronously start the watch service_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html">_the docs</a> for more._@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void startWatchServiceAsync(StartWatchServiceRequest request, RequestOptions options,_            ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_                request, WatcherRequestConverters::startWatchService, options, AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,watch,service,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,watcher,api,start,html,the,docs,a,for,more,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,start,watch,service,async,start,watch,service,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,watcher,request,converters,start,watch,service,options,acknowledged,response,from,xcontent,listener,empty,set
