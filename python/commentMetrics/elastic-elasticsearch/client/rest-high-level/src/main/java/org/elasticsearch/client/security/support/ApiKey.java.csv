commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String getId() {     return id. }
false;public;0;3;;public String getName() {     return name. }
true;public;0;3;/**  * @return a instance of {@link Instant} when this API key was created.  */ ;/**  * @return a instance of {@link Instant} when this API key was created.  */ public Instant getCreation() {     return creation. }
true;public;0;3;/**  * @return a instance of {@link Instant} when this API key will expire. In case the API key does not expire then will return  * {@code null}  */ ;/**  * @return a instance of {@link Instant} when this API key will expire. In case the API key does not expire then will return  * {@code null}  */ public Instant getExpiration() {     return expiration. }
true;public;0;3;/**  * @return {@code true} if this API key has been invalidated else returns {@code false}  */ ;/**  * @return {@code true} if this API key has been invalidated else returns {@code false}  */ public boolean isInvalidated() {     return invalidated. }
true;public;0;3;/**  * @return the username for which this API key was created.  */ ;/**  * @return the username for which this API key was created.  */ public String getUsername() {     return username. }
true;public;0;3;/**  * @return the realm name of the user for which this API key was created.  */ ;/**  * @return the realm name of the user for which this API key was created.  */ public String getRealm() {     return realm. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(name, id, creation, expiration, invalidated, username, realm). }
false;public;1;20;;@Override public boolean equals(Object obj) {     if (this == obj) {         return true.     }     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     ApiKey other = (ApiKey) obj.     return Objects.equals(name, other.name) && Objects.equals(id, other.id) && Objects.equals(creation, other.creation) && Objects.equals(expiration, other.expiration) && Objects.equals(invalidated, other.invalidated) && Objects.equals(username, other.username) && Objects.equals(realm, other.realm). }
false;public,static;1;3;;public static ApiKey fromXContent(XContentParser parser) throws IOException {     return PARSER.parse(parser, null). }
false;public;0;5;;@Override public String toString() {     return "ApiKey [name=" + name + ", id=" + id + ", creation=" + creation + ", expiration=" + expiration + ", invalidated=" + invalidated + ", username=" + username + ", realm=" + realm + "]". }
