commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String getJobId() {     return jobId. }
false;public;0;3;;public PageParams getPageParams() {     return pageParams. }
false;public;0;3;;public Long getCategoryId() {     return categoryId. }
true;public;1;3;/**  * Sets the category id  * @param categoryId the category id  */ ;/**  * Sets the category id  * @param categoryId the category id  */ public void setCategoryId(Long categoryId) {     this.categoryId = categoryId. }
true;public;1;3;/**  * Sets the paging parameters  * @param pageParams the paging parameters  */ ;/**  * Sets the paging parameters  * @param pageParams the paging parameters  */ public void setPageParams(PageParams pageParams) {     this.pageParams = pageParams. }
false;public;0;4;;@Override public ActionRequestValidationException validate() {     return null. }
false;public;2;13;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(Job.ID.getPreferredName(), jobId).     if (categoryId != null) {         builder.field(CATEGORY_ID.getPreferredName(), categoryId).     }     if (pageParams != null) {         builder.field(PageParams.PAGE.getPreferredName(), pageParams).     }     builder.endObject().     return builder. }
false;public;1;13;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     GetCategoriesRequest request = (GetCategoriesRequest) obj.     return Objects.equals(jobId, request.jobId) && Objects.equals(categoryId, request.categoryId) && Objects.equals(pageParams, request.pageParams). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(jobId, categoryId, pageParams). }
