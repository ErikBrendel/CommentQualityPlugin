commented;modifiers;parameterAmount;loc;comment;code
false;public;2;9;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(APPLIES_TO_FIELD.getPreferredName(), appliesTo).     builder.field(Operator.OPERATOR_FIELD.getPreferredName(), operator).     builder.field(VALUE_FIELD.getPreferredName(), value).     builder.endObject().     return builder. }
false;public;0;3;;public AppliesTo getAppliesTo() {     return appliesTo. }
false;public;0;3;;public Operator getOperator() {     return operator. }
false;public;0;3;;public double getValue() {     return value. }
false;public;1;13;;@Override public boolean equals(Object obj) {     if (this == obj) {         return true.     }     if (obj instanceof RuleCondition == false) {         return false.     }     RuleCondition other = (RuleCondition) obj.     return appliesTo == other.appliesTo && operator == other.operator && value == other.value. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(appliesTo, operator, value). }
false;public,static;2;3;;public static RuleCondition createTime(Operator operator, long epochSeconds) {     return new RuleCondition(AppliesTo.TIME, operator, epochSeconds). }
false;public,static;1;3;;public static AppliesTo fromString(String value) {     return valueOf(value.toUpperCase(Locale.ROOT)). }
false;public;0;4;;@Override public String toString() {     return name().toLowerCase(Locale.ROOT). }
