commented;modifiers;parameterAmount;loc;comment;code
true;public;2;4;/**  * Fetch information about X-Pack from the cluster.  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ ;/**  * Fetch information about X-Pack from the cluster.  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ public XPackInfoResponse info(XPackInfoRequest request, RequestOptions options) throws IOException {     return restHighLevelClient.performRequestAndParseEntity(request, XPackRequestConverters::info, options, XPackInfoResponse::fromXContent, emptySet()). }
true;public;3;5;/**  * Asynchronously fetch information about X-Pack from the cluster.  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @param listener the listener to be notified upon request completion  */ ;/**  * Asynchronously fetch information about X-Pack from the cluster.  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @param listener the listener to be notified upon request completion  */ public void infoAsync(XPackInfoRequest request, RequestOptions options, ActionListener<XPackInfoResponse> listener) {     restHighLevelClient.performRequestAsyncAndParseEntity(request, XPackRequestConverters::info, options, XPackInfoResponse::fromXContent, listener, emptySet()). }
true;public;2;4;/**  * Fetch usage information about X-Pack features from the cluster.  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ ;/**  * Fetch usage information about X-Pack features from the cluster.  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ public XPackUsageResponse usage(XPackUsageRequest request, RequestOptions options) throws IOException {     return restHighLevelClient.performRequestAndParseEntity(request, XPackRequestConverters::usage, options, XPackUsageResponse::fromXContent, emptySet()). }
true;public;3;4;/**  * Asynchronously fetch usage information about X-Pack features from the cluster.  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @param listener the listener to be notified upon request completion  */ ;/**  * Asynchronously fetch usage information about X-Pack features from the cluster.  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @param listener the listener to be notified upon request completion  */ public void usageAsync(XPackUsageRequest request, RequestOptions options, ActionListener<XPackUsageResponse> listener) {     restHighLevelClient.performRequestAsyncAndParseEntity(request, XPackRequestConverters::usage, options, XPackUsageResponse::fromXContent, listener, emptySet()). }
