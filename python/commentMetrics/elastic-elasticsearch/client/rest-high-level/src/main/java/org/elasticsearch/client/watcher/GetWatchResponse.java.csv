commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String getId() {     return id. }
false;public;0;3;;public long getVersion() {     return version. }
false;public;0;3;;public long getSeqNo() {     return seqNo. }
false;public;0;3;;public long getPrimaryTerm() {     return primaryTerm. }
false;public;0;3;;public boolean isFound() {     return version != Versions.NOT_FOUND. }
false;public;0;3;;public WatchStatus getStatus() {     return status. }
true;public;0;3;/**  * Returns the {@link XContentType} of the source  */ ;/**  * Returns the {@link XContentType} of the source  */ public XContentType getContentType() {     return xContentType. }
true;public;0;3;/**  * Returns the serialized watch  */ ;/**  * Returns the serialized watch  */ public BytesReference getSource() {     return source. }
true;public;0;3;/**  * Returns the source as a map  */ ;/**  * Returns the source as a map  */ public Map<String, Object> getSourceAsMap() {     return source == null ? null : XContentHelper.convertToMap(source, false, getContentType()).v2(). }
false;public;1;11;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     GetWatchResponse that = (GetWatchResponse) o.     return version == that.version && Objects.equals(id, that.id) && Objects.equals(status, that.status) && Objects.equals(xContentType, that.xContentType) && Objects.equals(source, that.source). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(id, status, source, version). }
false;public,static;1;3;;public static GetWatchResponse fromXContent(XContentParser parser) throws IOException {     return PARSER.parse(parser, null). }
