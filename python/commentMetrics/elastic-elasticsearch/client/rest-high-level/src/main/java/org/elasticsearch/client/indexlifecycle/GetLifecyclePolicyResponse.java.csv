commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public ImmutableOpenMap<String, LifecyclePolicyMetadata> getPolicies() {     return policies. }
false;public;2;9;;@Override public XContentBuilder toXContent(XContentBuilder builder, ToXContent.Params params) throws IOException {     builder.startObject().     for (ObjectObjectCursor<String, LifecyclePolicyMetadata> stringLifecyclePolicyObjectObjectCursor : policies) {         builder.field(stringLifecyclePolicyObjectObjectCursor.key, stringLifecyclePolicyObjectObjectCursor.value).     }     builder.endObject().     return builder. }
false;public,static;1;21;;public static GetLifecyclePolicyResponse fromXContent(XContentParser parser) throws IOException {     ImmutableOpenMap.Builder<String, LifecyclePolicyMetadata> policies = ImmutableOpenMap.builder().     if (parser.currentToken() == null) {         parser.nextToken().     }     ensureExpectedToken(XContentParser.Token.START_OBJECT, parser.currentToken(), parser::getTokenLocation).     parser.nextToken().     while (!parser.isClosed()) {         if (parser.currentToken() == XContentParser.Token.START_OBJECT) {             String policyName = parser.currentName().             LifecyclePolicyMetadata policyDefinion = LifecyclePolicyMetadata.parse(parser, policyName).             policies.put(policyName, policyDefinion).         } else {             parser.nextToken().         }     }     return new GetLifecyclePolicyResponse(policies.build()). }
false;public;1;7;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     GetLifecyclePolicyResponse that = (GetLifecyclePolicyResponse) o.     return Objects.equals(getPolicies(), that.getPolicies()). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(getPolicies()). }
