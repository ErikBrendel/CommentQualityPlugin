commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * @return the status of the requested watch. If an action was  * successfully acknowledged, this will be reflected in its status.  */ ;/**  * @return the status of the requested watch. If an action was  * successfully acknowledged, this will be reflected in its status.  */ public WatcherMetaData getWatcherMetaData() {     return watcherMetaData. }
true;public;0;3;/**  * returns a list of nodes that returned stats  */ ;/**  * returns a list of nodes that returned stats  */ public List<Node> getNodes() {     return nodes. }
true;public;0;3;/**  * Gets information about the number of total, successful and failed nodes the request was run on.  * Also includes exceptions if relevant.  */ ;/**  * Gets information about the number of total, successful and failed nodes the request was run on.  * Also includes exceptions if relevant.  */ public NodesResponseHeader getHeader() {     return header. }
true;public;0;3;/**  * Get the cluster name associated with all of the nodes.  *  * @return Never {@code null}.  */ ;/**  * Get the cluster name associated with all of the nodes.  *  * @return Never {@code null}.  */ public String getClusterName() {     return clusterName. }
false;public,static;1;3;;public static WatcherStatsResponse fromXContent(XContentParser parser) throws IOException {     return PARSER.parse(parser, null). }
false;public;1;10;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     WatcherStatsResponse that = (WatcherStatsResponse) o.     return Objects.equals(nodes, that.nodes) && Objects.equals(header, that.header) && Objects.equals(clusterName, that.clusterName) && Objects.equals(watcherMetaData, that.watcherMetaData). }
false;public;0;5;;@Override public int hashCode() {     return Objects.hash(nodes, header, clusterName, watcherMetaData). }
false;public;0;3;;public String getNodeId() {     return nodeId. }
false;public;0;3;;public long getWatchesCount() {     return watchesCount. }
false;public;0;3;;public WatcherState getWatcherState() {     return watcherState. }
false;public;0;3;;public long getThreadPoolQueueSize() {     return threadPoolQueueSize. }
false;public;0;3;;public long getThreadPoolMaxSize() {     return threadPoolMaxSize. }
false;public;0;3;;public List<WatchExecutionSnapshot> getSnapshots() {     return snapshots. }
false;public;0;3;;public List<QueuedWatch> getQueuedWatches() {     return queuedWatches. }
false;public;0;3;;public Map<String, Object> getStats() {     return stats. }
false;public;1;14;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     Node node = (Node) o.     return watchesCount == node.watchesCount && threadPoolQueueSize == node.threadPoolQueueSize && threadPoolMaxSize == node.threadPoolMaxSize && Objects.equals(nodeId, node.nodeId) && watcherState == node.watcherState && Objects.equals(snapshots, node.snapshots) && Objects.equals(queuedWatches, node.queuedWatches) && Objects.equals(stats, node.stats). }
false;public;0;5;;@Override public int hashCode() {     return Objects.hash(nodeId, watcherState, watchesCount, threadPoolQueueSize, threadPoolMaxSize, snapshots, queuedWatches, stats). }
