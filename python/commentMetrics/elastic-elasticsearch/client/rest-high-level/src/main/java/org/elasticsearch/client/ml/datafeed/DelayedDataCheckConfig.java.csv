commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;3;/**  * This creates a new DelayedDataCheckConfig that has a check_window of the passed `timeValue`  *  * We query the index to the latest finalized bucket from this TimeValue in the past looking to see if any data has been indexed  * since the data was read with the Datafeed.  *  * The window must be larger than the {@link org.elasticsearch.client.ml.job.config.AnalysisConfig#bucketSpan}, less than  * 24 hours, and span less than 10,000x buckets.  *  * @param timeValue The time length in the past from the latest finalized bucket to look for latent data.  *                  If `null` is provided, the appropriate window is calculated when it is used  */ ;/**  * This creates a new DelayedDataCheckConfig that has a check_window of the passed `timeValue`  *  * We query the index to the latest finalized bucket from this TimeValue in the past looking to see if any data has been indexed  * since the data was read with the Datafeed.  *  * The window must be larger than the {@link org.elasticsearch.client.ml.job.config.AnalysisConfig#bucketSpan}, less than  * 24 hours, and span less than 10,000x buckets.  *  * @param timeValue The time length in the past from the latest finalized bucket to look for latent data.  *                  If `null` is provided, the appropriate window is calculated when it is used  */ public static DelayedDataCheckConfig enabledDelayedDataCheckConfig(TimeValue timeValue) {     return new DelayedDataCheckConfig(true, timeValue). }
true;public,static;0;3;/**  * This creates a new DelayedDataCheckConfig that disables the data check.  */ ;/**  * This creates a new DelayedDataCheckConfig that disables the data check.  */ public static DelayedDataCheckConfig disabledDelayedDataCheckConfig() {     return new DelayedDataCheckConfig(false, null). }
false;public;0;3;;public boolean isEnabled() {     return enabled. }
false;public;0;4;;@Nullable public TimeValue getCheckWindow() {     return checkWindow. }
false;public;2;10;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(ENABLED.getPreferredName(), enabled).     if (checkWindow != null) {         builder.field(CHECK_WINDOW.getPreferredName(), checkWindow.getStringRep()).     }     builder.endObject().     return builder. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(enabled, checkWindow). }
false;public;1;12;;@Override public boolean equals(Object obj) {     if (this == obj) {         return true.     }     if (obj == null || getClass() != obj.getClass()) {         return false.     }     DelayedDataCheckConfig other = (DelayedDataCheckConfig) obj.     return Objects.equals(this.enabled, other.enabled) && Objects.equals(this.checkWindow, other.checkWindow). }
