commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;3;;public static InvalidateApiKeyResponse emptyResponse() {     return new InvalidateApiKeyResponse(Collections.emptyList(), Collections.emptyList(), Collections.emptyList()). }
false;public;0;3;;public List<String> getInvalidatedApiKeys() {     return invalidatedApiKeys. }
false;public;0;3;;public List<String> getPreviouslyInvalidatedApiKeys() {     return previouslyInvalidatedApiKeys. }
false;public;0;3;;public List<ElasticsearchException> getErrors() {     return errors. }
false;public,static;1;3;;public static InvalidateApiKeyResponse fromXContent(XContentParser parser) throws IOException {     return PARSER.parse(parser, null). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(invalidatedApiKeys, previouslyInvalidatedApiKeys, errors). }
false;public;1;16;;@Override public boolean equals(Object obj) {     if (this == obj) {         return true.     }     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     InvalidateApiKeyResponse other = (InvalidateApiKeyResponse) obj.     return Objects.equals(invalidatedApiKeys, other.invalidatedApiKeys) && Objects.equals(previouslyInvalidatedApiKeys, other.previouslyInvalidatedApiKeys) && Objects.equals(errors, other.errors). }
false;public;0;5;;@Override public String toString() {     return "ApiKeysInvalidationResult [invalidatedApiKeys=" + invalidatedApiKeys + ", previouslyInvalidatedApiKeys=" + previouslyInvalidatedApiKeys + ", errors=" + errors + "]". }
