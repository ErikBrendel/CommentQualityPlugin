# id;timestamp;commentText;codeText;commentWords;codeWords
CloseJobRequest -> public static CloseJobRequest closeAllJobsRequest();1535552903;Explicitly close all jobs__@return a {@link CloseJobRequest} for all existing jobs;public static CloseJobRequest closeAllJobsRequest(){_        return new CloseJobRequest(ALL_JOBS)__    };explicitly,close,all,jobs,return,a,link,close,job,request,for,all,existing,jobs;public,static,close,job,request,close,all,jobs,request,return,new,close,job,request
CloseJobRequest -> public static CloseJobRequest closeAllJobsRequest();1537202470;Explicitly close all jobs__@return a {@link CloseJobRequest} for all existing jobs;public static CloseJobRequest closeAllJobsRequest(){_        return new CloseJobRequest(ALL_JOBS)__    };explicitly,close,all,jobs,return,a,link,close,job,request,for,all,existing,jobs;public,static,close,job,request,close,all,jobs,request,return,new,close,job,request
CloseJobRequest -> public static CloseJobRequest closeAllJobsRequest();1540238977;Explicitly close all jobs__@return a {@link CloseJobRequest} for all existing jobs;public static CloseJobRequest closeAllJobsRequest(){_        return new CloseJobRequest(ALL_JOBS)__    };explicitly,close,all,jobs,return,a,link,close,job,request,for,all,existing,jobs;public,static,close,job,request,close,all,jobs,request,return,new,close,job,request
CloseJobRequest -> public void setTimeout(TimeValue timeout);1535552903;How long to wait for the close request to complete before timing out.__@param timeout Default value: 30 minutes;public void setTimeout(TimeValue timeout) {_        this.timeout = timeout__    };how,long,to,wait,for,the,close,request,to,complete,before,timing,out,param,timeout,default,value,30,minutes;public,void,set,timeout,time,value,timeout,this,timeout,timeout
CloseJobRequest -> public void setTimeout(TimeValue timeout);1537202470;How long to wait for the close request to complete before timing out.__@param timeout Default value: 30 minutes;public void setTimeout(TimeValue timeout) {_        this.timeout = timeout__    };how,long,to,wait,for,the,close,request,to,complete,before,timing,out,param,timeout,default,value,30,minutes;public,void,set,timeout,time,value,timeout,this,timeout,timeout
CloseJobRequest -> public void setTimeout(TimeValue timeout);1540238977;How long to wait for the close request to complete before timing out.__@param timeout Default value: 30 minutes;public void setTimeout(TimeValue timeout) {_        this.timeout = timeout__    };how,long,to,wait,for,the,close,request,to,complete,before,timing,out,param,timeout,default,value,30,minutes;public,void,set,timeout,time,value,timeout,this,timeout,timeout
CloseJobRequest -> public CloseJobRequest(String... jobIds);1535552903;Close the specified Jobs via their unique jobIds__@param jobIds must be non-null and non-empty and each jobId must be non-null;public CloseJobRequest(String... jobIds) {_        this(Arrays.asList(jobIds))__    };close,the,specified,jobs,via,their,unique,job,ids,param,job,ids,must,be,non,null,and,non,empty,and,each,job,id,must,be,non,null;public,close,job,request,string,job,ids,this,arrays,as,list,job,ids
CloseJobRequest -> public CloseJobRequest(String... jobIds);1537202470;Close the specified Jobs via their unique jobIds__@param jobIds must be non-null and non-empty and each jobId must be non-null;public CloseJobRequest(String... jobIds) {_        this(Arrays.asList(jobIds))__    };close,the,specified,jobs,via,their,unique,job,ids,param,job,ids,must,be,non,null,and,non,empty,and,each,job,id,must,be,non,null;public,close,job,request,string,job,ids,this,arrays,as,list,job,ids
CloseJobRequest -> public CloseJobRequest(String... jobIds);1540238977;Close the specified Jobs via their unique jobIds__@param jobIds must be non-null and non-empty and each jobId must be non-null;public CloseJobRequest(String... jobIds) {_        this(Arrays.asList(jobIds))__    };close,the,specified,jobs,via,their,unique,job,ids,param,job,ids,must,be,non,null,and,non,empty,and,each,job,id,must,be,non,null;public,close,job,request,string,job,ids,this,arrays,as,list,job,ids
CloseJobRequest -> public List<String> getJobIds();1535552903;All the jobIds to be closed;public List<String> getJobIds() {_        return jobIds__    };all,the,job,ids,to,be,closed;public,list,string,get,job,ids,return,job,ids
CloseJobRequest -> public List<String> getJobIds();1537202470;All the jobIds to be closed;public List<String> getJobIds() {_        return jobIds__    };all,the,job,ids,to,be,closed;public,list,string,get,job,ids,return,job,ids
CloseJobRequest -> public List<String> getJobIds();1540238977;All the jobIds to be closed;public List<String> getJobIds() {_        return jobIds__    };all,the,job,ids,to,be,closed;public,list,string,get,job,ids,return,job,ids
CloseJobRequest -> public void setAllowNoJobs(boolean allowNoJobs);1535552903;Whether to ignore if a wildcard expression matches no jobs.__This includes `_all` string or when no jobs have been specified__@param allowNoJobs When {@code true} ignore if wildcard or `_all` matches no jobs. Defaults to {@code true};public void setAllowNoJobs(boolean allowNoJobs) {_        this.allowNoJobs = allowNoJobs__    };whether,to,ignore,if,a,wildcard,expression,matches,no,jobs,this,includes,string,or,when,no,jobs,have,been,specified,param,allow,no,jobs,when,code,true,ignore,if,wildcard,or,matches,no,jobs,defaults,to,code,true;public,void,set,allow,no,jobs,boolean,allow,no,jobs,this,allow,no,jobs,allow,no,jobs
CloseJobRequest -> public void setAllowNoJobs(boolean allowNoJobs);1537202470;Whether to ignore if a wildcard expression matches no jobs.__This includes {@code _all} string or when no jobs have been specified__@param allowNoJobs When {@code true} ignore if wildcard or {@code _all} matches no jobs. Defaults to {@code true};public void setAllowNoJobs(boolean allowNoJobs) {_        this.allowNoJobs = allowNoJobs__    };whether,to,ignore,if,a,wildcard,expression,matches,no,jobs,this,includes,code,string,or,when,no,jobs,have,been,specified,param,allow,no,jobs,when,code,true,ignore,if,wildcard,or,code,matches,no,jobs,defaults,to,code,true;public,void,set,allow,no,jobs,boolean,allow,no,jobs,this,allow,no,jobs,allow,no,jobs
CloseJobRequest -> public void setAllowNoJobs(boolean allowNoJobs);1540238977;Whether to ignore if a wildcard expression matches no jobs.__This includes {@code _all} string or when no jobs have been specified__@param allowNoJobs When {@code true} ignore if wildcard or {@code _all} matches no jobs. Defaults to {@code true};public void setAllowNoJobs(boolean allowNoJobs) {_        this.allowNoJobs = allowNoJobs__    };whether,to,ignore,if,a,wildcard,expression,matches,no,jobs,this,includes,code,string,or,when,no,jobs,have,been,specified,param,allow,no,jobs,when,code,true,ignore,if,wildcard,or,code,matches,no,jobs,defaults,to,code,true;public,void,set,allow,no,jobs,boolean,allow,no,jobs,this,allow,no,jobs,allow,no,jobs
CloseJobRequest -> public void setForce(boolean force);1535552903;Should the closing be forced.__Use to close a failed job, or to forcefully close a job which has not responded to its initial close request.__@param force When {@code true} forcefully close the job. Defaults to {@code false};public void setForce(boolean force) {_        this.force = force__    };should,the,closing,be,forced,use,to,close,a,failed,job,or,to,forcefully,close,a,job,which,has,not,responded,to,its,initial,close,request,param,force,when,code,true,forcefully,close,the,job,defaults,to,code,false;public,void,set,force,boolean,force,this,force,force
CloseJobRequest -> public void setForce(boolean force);1537202470;Should the closing be forced.__Use to close a failed job, or to forcefully close a job which has not responded to its initial close request.__@param force When {@code true} forcefully close the job. Defaults to {@code false};public void setForce(boolean force) {_        this.force = force__    };should,the,closing,be,forced,use,to,close,a,failed,job,or,to,forcefully,close,a,job,which,has,not,responded,to,its,initial,close,request,param,force,when,code,true,forcefully,close,the,job,defaults,to,code,false;public,void,set,force,boolean,force,this,force,force
CloseJobRequest -> public void setForce(boolean force);1540238977;Should the closing be forced.__Use to close a failed job, or to forcefully close a job which has not responded to its initial close request.__@param force When {@code true} forcefully close the job. Defaults to {@code false};public void setForce(boolean force) {_        this.force = force__    };should,the,closing,be,forced,use,to,close,a,failed,job,or,to,forcefully,close,a,job,which,has,not,responded,to,its,initial,close,request,param,force,when,code,true,forcefully,close,the,job,defaults,to,code,false;public,void,set,force,boolean,force,this,force,force
