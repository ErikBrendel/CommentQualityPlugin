commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;3;;public static UpdateModelSnapshotResponse fromXContent(XContentParser parser) throws IOException {     return PARSER.parse(parser, null). }
true;public;0;3;/**  * Get the action acknowledgement  * @return  a {@code boolean} that indicates whether the model snapshot was updated successfully.  */ ;/**  * Get the action acknowledgement  * @return  a {@code boolean} that indicates whether the model snapshot was updated successfully.  */ public Boolean getAcknowledged() {     return acknowledged. }
true;public;0;3;/**  * Get the updated snapshot of the model  * @return the updated model snapshot.  */ ;/**  * Get the updated snapshot of the model  * @return the updated model snapshot.  */ public ModelSnapshot getModel() {     return model. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(acknowledged, model). }
false;public;2;12;;@Override public XContentBuilder toXContent(XContentBuilder builder, ToXContent.Params params) throws IOException {     builder.startObject().     if (acknowledged != null) {         builder.field(ACKNOWLEDGED.getPreferredName(), acknowledged).     }     if (model != null) {         builder.field(MODEL.getPreferredName(), model).     }     builder.endObject().     return builder. }
false;public;1;12;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     UpdateModelSnapshotResponse request = (UpdateModelSnapshotResponse) obj.     return Objects.equals(acknowledged, request.acknowledged) && Objects.equals(model, request.model). }
