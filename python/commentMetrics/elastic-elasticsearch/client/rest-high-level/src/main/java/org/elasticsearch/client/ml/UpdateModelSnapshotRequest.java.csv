commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String getJobId() {     return jobId. }
false;public;0;3;;public String getSnapshotId() {     return snapshotId. }
false;public;0;3;;public String getDescription() {     return description. }
true;public;1;3;/**  * The new description of the snapshot.  * @param description the updated snapshot description  */ ;/**  * The new description of the snapshot.  * @param description the updated snapshot description  */ public void setDescription(String description) {     this.description = description. }
false;public;0;3;;public Boolean getRetain() {     return retain. }
true;public;1;3;/**  * The new value of the "retain" property of the snapshot  * @param retain the updated retain property  */ ;/**  * The new value of the "retain" property of the snapshot  * @param retain the updated retain property  */ public void setRetain(boolean retain) {     this.retain = retain. }
false;public;0;4;;@Override public ActionRequestValidationException validate() {     return null. }
false;public;2;14;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(Job.ID.getPreferredName(), jobId).     builder.field(ModelSnapshot.SNAPSHOT_ID.getPreferredName(), snapshotId).     if (description != null) {         builder.field(ModelSnapshot.DESCRIPTION.getPreferredName(), description).     }     if (retain != null) {         builder.field(ModelSnapshot.RETAIN.getPreferredName(), retain).     }     builder.endObject().     return builder. }
false;public;1;14;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     UpdateModelSnapshotRequest request = (UpdateModelSnapshotRequest) obj.     return Objects.equals(jobId, request.jobId) && Objects.equals(snapshotId, request.snapshotId) && Objects.equals(description, request.description) && Objects.equals(retain, request.retain). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(jobId, snapshotId, description, retain). }
