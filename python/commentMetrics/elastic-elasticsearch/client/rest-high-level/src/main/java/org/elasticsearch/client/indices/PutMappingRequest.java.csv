commented;modifiers;parameterAmount;loc;comment;code
true;public;0;4;/**  * The indices into which the mappings will be put.  */ ;/**  * The indices into which the mappings will be put.  */ @Override public String[] indices() {     return indices. }
false;public;0;4;;@Override public IndicesOptions indicesOptions() {     return indicesOptions. }
false;public;1;4;;public PutMappingRequest indicesOptions(IndicesOptions indicesOptions) {     this.indicesOptions = indicesOptions.     return this. }
true;public;0;3;/**  * The mapping source definition.  */ ;/**  * The mapping source definition.  */ public BytesReference source() {     return source. }
true;public;0;3;/**  * The {@link XContentType} of the mapping source.  */ ;/**  * The {@link XContentType} of the mapping source.  */ public XContentType xContentType() {     return xContentType. }
true;public;1;9;/**  * The mapping source definition.  *  * Note that the definition should *not* be nested under a type name.  */ ;/**  * The mapping source definition.  *  * Note that the definition should *not* be nested under a type name.  */ public PutMappingRequest source(Map<String, ?> mappingSource) {     try {         XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON).         builder.map(mappingSource).         return source(builder).     } catch (IOException e) {         throw new ElasticsearchGenerationException("Failed to generate [" + mappingSource + "]", e).     } }
true;public;2;5;/**  * The mapping source definition.  *  * Note that the definition should *not* be nested under a type name.  */ ;/**  * The mapping source definition.  *  * Note that the definition should *not* be nested under a type name.  */ public PutMappingRequest source(String mappingSource, XContentType xContentType) {     this.source = new BytesArray(mappingSource).     this.xContentType = xContentType.     return this. }
true;public;1;5;/**  * The mapping source definition.  *  * Note that the definition should *not* be nested under a type name.  */ ;/**  * The mapping source definition.  *  * Note that the definition should *not* be nested under a type name.  */ public PutMappingRequest source(XContentBuilder builder) {     this.source = BytesReference.bytes(builder).     this.xContentType = builder.contentType().     return this. }
true;public;2;5;/**  * The mapping source definition.  *  * Note that the definition should *not* be nested under a type name.  */ ;/**  * The mapping source definition.  *  * Note that the definition should *not* be nested under a type name.  */ public PutMappingRequest source(BytesReference source, XContentType xContentType) {     this.source = source.     this.xContentType = xContentType.     return this. }
false;public;2;11;;@Override public XContentBuilder toXContent(XContentBuilder builder, ToXContent.Params params) throws IOException {     if (source != null) {         try (InputStream stream = source.streamInput()) {             builder.rawValue(stream, xContentType).         }     } else {         builder.startObject().endObject().     }     return builder. }
