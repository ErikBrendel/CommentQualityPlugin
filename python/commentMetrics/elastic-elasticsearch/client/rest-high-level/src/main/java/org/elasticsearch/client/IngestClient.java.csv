# id;timestamp;commentText;codeText;commentWords;codeWords
IngestClient -> public AcknowledgedResponse deletePipeline(DeletePipelineRequest request, RequestOptions options) throws IOException;1533815246;Delete an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-pipeline-api.html">_Delete Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deletePipeline(DeletePipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, RequestConverters::deletePipeline, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };delete,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,delete,pipeline,api,html,delete,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,pipeline,delete,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,delete,pipeline,options,acknowledged,response,from,xcontent,empty,set
IngestClient -> public AcknowledgedResponse deletePipeline(DeletePipelineRequest request, RequestOptions options) throws IOException;1536611444;Delete an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-pipeline-api.html">_Delete Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deletePipeline(DeletePipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, IngestRequestConverters::deletePipeline, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };delete,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,delete,pipeline,api,html,delete,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,pipeline,delete,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ingest,request,converters,delete,pipeline,options,acknowledged,response,from,xcontent,empty,set
IngestClient -> public AcknowledgedResponse deletePipeline(DeletePipelineRequest request, RequestOptions options) throws IOException;1539615817;Delete an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-pipeline-api.html">_Delete Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deletePipeline(DeletePipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, IngestRequestConverters::deletePipeline, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };delete,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,delete,pipeline,api,html,delete,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,pipeline,delete,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ingest,request,converters,delete,pipeline,options,acknowledged,response,from,xcontent,empty,set
IngestClient -> public void putPipelineAsync(PutPipelineRequest request, RequestOptions options, ActionListener<WritePipelineResponse> listener);1528706846;Asynchronously add a pipeline or update an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/put-pipeline-api.html"> Put Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putPipelineAsync(PutPipelineRequest request, RequestOptions options, ActionListener<WritePipelineResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, RequestConverters::putPipeline, options,_            WritePipelineResponse::fromXContent, listener, emptySet())__    };asynchronously,add,a,pipeline,or,update,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,put,pipeline,api,html,put,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,pipeline,async,put,pipeline,request,request,request,options,options,action,listener,write,pipeline,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,put,pipeline,options,write,pipeline,response,from,xcontent,listener,empty,set
IngestClient -> public void putPipelineAsync(PutPipelineRequest request, RequestOptions options, ActionListener<WritePipelineResponse> listener);1529658035;Asynchronously add a pipeline or update an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/put-pipeline-api.html"> Put Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putPipelineAsync(PutPipelineRequest request, RequestOptions options, ActionListener<WritePipelineResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, RequestConverters::putPipeline, options,_            WritePipelineResponse::fromXContent, listener, emptySet())__    };asynchronously,add,a,pipeline,or,update,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,put,pipeline,api,html,put,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,pipeline,async,put,pipeline,request,request,request,options,options,action,listener,write,pipeline,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,put,pipeline,options,write,pipeline,response,from,xcontent,listener,empty,set
IngestClient -> public void putPipelineAsync(PutPipelineRequest request, RequestOptions options, ActionListener<WritePipelineResponse> listener);1531910483;Asynchronously add a pipeline or update an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/put-pipeline-api.html"> Put Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putPipelineAsync(PutPipelineRequest request, RequestOptions options, ActionListener<WritePipelineResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, RequestConverters::putPipeline, options,_            WritePipelineResponse::fromXContent, listener, emptySet())__    };asynchronously,add,a,pipeline,or,update,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,put,pipeline,api,html,put,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,pipeline,async,put,pipeline,request,request,request,options,options,action,listener,write,pipeline,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,put,pipeline,options,write,pipeline,response,from,xcontent,listener,empty,set
IngestClient -> public void deletePipelineAsync(DeletePipelineRequest request, RequestOptions options, ActionListener<WritePipelineResponse> listener);1528706846;Asynchronously delete an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-pipeline-api.html">_Delete Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deletePipelineAsync(DeletePipelineRequest request, RequestOptions options, ActionListener<WritePipelineResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, RequestConverters::deletePipeline, options,_            WritePipelineResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,delete,pipeline,api,html,delete,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,pipeline,async,delete,pipeline,request,request,request,options,options,action,listener,write,pipeline,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,delete,pipeline,options,write,pipeline,response,from,xcontent,listener,empty,set
IngestClient -> public void deletePipelineAsync(DeletePipelineRequest request, RequestOptions options, ActionListener<WritePipelineResponse> listener);1529658035;Asynchronously delete an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-pipeline-api.html">_Delete Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deletePipelineAsync(DeletePipelineRequest request, RequestOptions options, ActionListener<WritePipelineResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, RequestConverters::deletePipeline, options,_            WritePipelineResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,delete,pipeline,api,html,delete,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,pipeline,async,delete,pipeline,request,request,request,options,options,action,listener,write,pipeline,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,delete,pipeline,options,write,pipeline,response,from,xcontent,listener,empty,set
IngestClient -> public void deletePipelineAsync(DeletePipelineRequest request, RequestOptions options, ActionListener<WritePipelineResponse> listener);1531910483;Asynchronously delete an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-pipeline-api.html">_Delete Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deletePipelineAsync(DeletePipelineRequest request, RequestOptions options, ActionListener<WritePipelineResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, RequestConverters::deletePipeline, options,_            WritePipelineResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,delete,pipeline,api,html,delete,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,pipeline,async,delete,pipeline,request,request,request,options,options,action,listener,write,pipeline,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,delete,pipeline,options,write,pipeline,response,from,xcontent,listener,empty,set
IngestClient -> public void getPipelineAsync(GetPipelineRequest request, RequestOptions options, ActionListener<GetPipelineResponse> listener);1528706846;Asynchronously get an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html"> Get Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getPipelineAsync(GetPipelineRequest request, RequestOptions options, ActionListener<GetPipelineResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, RequestConverters::getPipeline, options,_            GetPipelineResponse::fromXContent, listener, emptySet())__    };asynchronously,get,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,master,get,pipeline,api,html,get,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,pipeline,async,get,pipeline,request,request,request,options,options,action,listener,get,pipeline,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,get,pipeline,options,get,pipeline,response,from,xcontent,listener,empty,set
IngestClient -> public void getPipelineAsync(GetPipelineRequest request, RequestOptions options, ActionListener<GetPipelineResponse> listener);1529658035;Asynchronously get an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html"> Get Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getPipelineAsync(GetPipelineRequest request, RequestOptions options, ActionListener<GetPipelineResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, RequestConverters::getPipeline, options,_            GetPipelineResponse::fromXContent, listener, emptySet())__    };asynchronously,get,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,master,get,pipeline,api,html,get,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,pipeline,async,get,pipeline,request,request,request,options,options,action,listener,get,pipeline,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,get,pipeline,options,get,pipeline,response,from,xcontent,listener,empty,set
IngestClient -> public void getPipelineAsync(GetPipelineRequest request, RequestOptions options, ActionListener<GetPipelineResponse> listener);1531910483;Asynchronously get an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html"> Get Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getPipelineAsync(GetPipelineRequest request, RequestOptions options, ActionListener<GetPipelineResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, RequestConverters::getPipeline, options,_            GetPipelineResponse::fromXContent, listener, emptySet())__    };asynchronously,get,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,master,get,pipeline,api,html,get,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,pipeline,async,get,pipeline,request,request,request,options,options,action,listener,get,pipeline,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,get,pipeline,options,get,pipeline,response,from,xcontent,listener,empty,set
IngestClient -> public void getPipelineAsync(GetPipelineRequest request, RequestOptions options, ActionListener<GetPipelineResponse> listener);1533815246;Asynchronously get an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html"> Get Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getPipelineAsync(GetPipelineRequest request, RequestOptions options, ActionListener<GetPipelineResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, RequestConverters::getPipeline, options,_            GetPipelineResponse::fromXContent, listener, emptySet())__    };asynchronously,get,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,master,get,pipeline,api,html,get,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,pipeline,async,get,pipeline,request,request,request,options,options,action,listener,get,pipeline,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,get,pipeline,options,get,pipeline,response,from,xcontent,listener,empty,set
IngestClient -> public void getPipelineAsync(GetPipelineRequest request, RequestOptions options, ActionListener<GetPipelineResponse> listener);1536611444;Asynchronously get an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html"> Get Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getPipelineAsync(GetPipelineRequest request, RequestOptions options, ActionListener<GetPipelineResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, IngestRequestConverters::getPipeline, options,_            GetPipelineResponse::fromXContent, listener, emptySet())__    };asynchronously,get,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,master,get,pipeline,api,html,get,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,pipeline,async,get,pipeline,request,request,request,options,options,action,listener,get,pipeline,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ingest,request,converters,get,pipeline,options,get,pipeline,response,from,xcontent,listener,empty,set
IngestClient -> public void getPipelineAsync(GetPipelineRequest request, RequestOptions options, ActionListener<GetPipelineResponse> listener);1539615817;Asynchronously get an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/get-pipeline-api.html"> Get Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getPipelineAsync(GetPipelineRequest request, RequestOptions options, ActionListener<GetPipelineResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, IngestRequestConverters::getPipeline, options,_            GetPipelineResponse::fromXContent, listener, Collections.singleton(404))__    };asynchronously,get,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,master,get,pipeline,api,html,get,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,pipeline,async,get,pipeline,request,request,request,options,options,action,listener,get,pipeline,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ingest,request,converters,get,pipeline,options,get,pipeline,response,from,xcontent,listener,collections,singleton,404
IngestClient -> public void simulateAsync(SimulatePipelineRequest request,                               RequestOptions options,                               ActionListener<SimulatePipelineResponse> listener);1531910483;Asynchronously simulate a pipeline on a set of documents provided in the request_<p>_See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html">_Simulate Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void simulateAsync(SimulatePipelineRequest request,_                              RequestOptions options,_                              ActionListener<SimulatePipelineResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, RequestConverters::simulatePipeline, options,_            SimulatePipelineResponse::fromXContent, listener, emptySet())__    };asynchronously,simulate,a,pipeline,on,a,set,of,documents,provided,in,the,request,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,master,simulate,pipeline,api,html,simulate,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,simulate,async,simulate,pipeline,request,request,request,options,options,action,listener,simulate,pipeline,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,simulate,pipeline,options,simulate,pipeline,response,from,xcontent,listener,empty,set
IngestClient -> public void simulateAsync(SimulatePipelineRequest request,                               RequestOptions options,                               ActionListener<SimulatePipelineResponse> listener);1533815246;Asynchronously simulate a pipeline on a set of documents provided in the request_<p>_See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html">_Simulate Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void simulateAsync(SimulatePipelineRequest request,_                              RequestOptions options,_                              ActionListener<SimulatePipelineResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, RequestConverters::simulatePipeline, options,_            SimulatePipelineResponse::fromXContent, listener, emptySet())__    };asynchronously,simulate,a,pipeline,on,a,set,of,documents,provided,in,the,request,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,master,simulate,pipeline,api,html,simulate,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,simulate,async,simulate,pipeline,request,request,request,options,options,action,listener,simulate,pipeline,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,simulate,pipeline,options,simulate,pipeline,response,from,xcontent,listener,empty,set
IngestClient -> public void simulateAsync(SimulatePipelineRequest request,                               RequestOptions options,                               ActionListener<SimulatePipelineResponse> listener);1536611444;Asynchronously simulate a pipeline on a set of documents provided in the request_<p>_See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html">_Simulate Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void simulateAsync(SimulatePipelineRequest request,_                              RequestOptions options,_                              ActionListener<SimulatePipelineResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, IngestRequestConverters::simulatePipeline, options,_            SimulatePipelineResponse::fromXContent, listener, emptySet())__    };asynchronously,simulate,a,pipeline,on,a,set,of,documents,provided,in,the,request,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,master,simulate,pipeline,api,html,simulate,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,simulate,async,simulate,pipeline,request,request,request,options,options,action,listener,simulate,pipeline,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ingest,request,converters,simulate,pipeline,options,simulate,pipeline,response,from,xcontent,listener,empty,set
IngestClient -> public void simulateAsync(SimulatePipelineRequest request,                               RequestOptions options,                               ActionListener<SimulatePipelineResponse> listener);1539615817;Asynchronously simulate a pipeline on a set of documents provided in the request_<p>_See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html">_Simulate Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void simulateAsync(SimulatePipelineRequest request,_                              RequestOptions options,_                              ActionListener<SimulatePipelineResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, IngestRequestConverters::simulatePipeline, options,_            SimulatePipelineResponse::fromXContent, listener, emptySet())__    };asynchronously,simulate,a,pipeline,on,a,set,of,documents,provided,in,the,request,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,master,simulate,pipeline,api,html,simulate,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,simulate,async,simulate,pipeline,request,request,request,options,options,action,listener,simulate,pipeline,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ingest,request,converters,simulate,pipeline,options,simulate,pipeline,response,from,xcontent,listener,empty,set
IngestClient -> public AcknowledgedResponse putPipeline(PutPipelineRequest request, RequestOptions options) throws IOException;1533815246;Add a pipeline or update an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/put-pipeline-api.html"> Put Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putPipeline(PutPipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, RequestConverters::putPipeline, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };add,a,pipeline,or,update,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,put,pipeline,api,html,put,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,pipeline,put,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,put,pipeline,options,acknowledged,response,from,xcontent,empty,set
IngestClient -> public AcknowledgedResponse putPipeline(PutPipelineRequest request, RequestOptions options) throws IOException;1536611444;Add a pipeline or update an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/put-pipeline-api.html"> Put Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putPipeline(PutPipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, IngestRequestConverters::putPipeline, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };add,a,pipeline,or,update,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,put,pipeline,api,html,put,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,pipeline,put,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ingest,request,converters,put,pipeline,options,acknowledged,response,from,xcontent,empty,set
IngestClient -> public AcknowledgedResponse putPipeline(PutPipelineRequest request, RequestOptions options) throws IOException;1539615817;Add a pipeline or update an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/put-pipeline-api.html"> Put Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putPipeline(PutPipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, IngestRequestConverters::putPipeline, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };add,a,pipeline,or,update,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,put,pipeline,api,html,put,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,pipeline,put,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ingest,request,converters,put,pipeline,options,acknowledged,response,from,xcontent,empty,set
IngestClient -> public SimulatePipelineResponse simulate(SimulatePipelineRequest request, RequestOptions options) throws IOException;1531910483;Simulate a pipeline on a set of documents provided in the request_<p>_See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html">_Simulate Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SimulatePipelineResponse simulate(SimulatePipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, RequestConverters::simulatePipeline, options,_            SimulatePipelineResponse::fromXContent, emptySet())__    };simulate,a,pipeline,on,a,set,of,documents,provided,in,the,request,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,master,simulate,pipeline,api,html,simulate,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,simulate,pipeline,response,simulate,simulate,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,simulate,pipeline,options,simulate,pipeline,response,from,xcontent,empty,set
IngestClient -> public SimulatePipelineResponse simulate(SimulatePipelineRequest request, RequestOptions options) throws IOException;1533815246;Simulate a pipeline on a set of documents provided in the request_<p>_See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html">_Simulate Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SimulatePipelineResponse simulate(SimulatePipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, RequestConverters::simulatePipeline, options,_            SimulatePipelineResponse::fromXContent, emptySet())__    };simulate,a,pipeline,on,a,set,of,documents,provided,in,the,request,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,master,simulate,pipeline,api,html,simulate,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,simulate,pipeline,response,simulate,simulate,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,simulate,pipeline,options,simulate,pipeline,response,from,xcontent,empty,set
IngestClient -> public SimulatePipelineResponse simulate(SimulatePipelineRequest request, RequestOptions options) throws IOException;1536611444;Simulate a pipeline on a set of documents provided in the request_<p>_See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html">_Simulate Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SimulatePipelineResponse simulate(SimulatePipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, IngestRequestConverters::simulatePipeline, options,_            SimulatePipelineResponse::fromXContent, emptySet())__    };simulate,a,pipeline,on,a,set,of,documents,provided,in,the,request,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,master,simulate,pipeline,api,html,simulate,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,simulate,pipeline,response,simulate,simulate,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ingest,request,converters,simulate,pipeline,options,simulate,pipeline,response,from,xcontent,empty,set
IngestClient -> public SimulatePipelineResponse simulate(SimulatePipelineRequest request, RequestOptions options) throws IOException;1539615817;Simulate a pipeline on a set of documents provided in the request_<p>_See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/simulate-pipeline-api.html">_Simulate Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SimulatePipelineResponse simulate(SimulatePipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, IngestRequestConverters::simulatePipeline, options,_            SimulatePipelineResponse::fromXContent, emptySet())__    };simulate,a,pipeline,on,a,set,of,documents,provided,in,the,request,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,master,simulate,pipeline,api,html,simulate,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,simulate,pipeline,response,simulate,simulate,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ingest,request,converters,simulate,pipeline,options,simulate,pipeline,response,from,xcontent,empty,set
IngestClient -> public void deletePipelineAsync(DeletePipelineRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1533815246;Asynchronously delete an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-pipeline-api.html">_Delete Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deletePipelineAsync(DeletePipelineRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, RequestConverters::deletePipeline, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,delete,pipeline,api,html,delete,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,pipeline,async,delete,pipeline,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,delete,pipeline,options,acknowledged,response,from,xcontent,listener,empty,set
IngestClient -> public void deletePipelineAsync(DeletePipelineRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1536611444;Asynchronously delete an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-pipeline-api.html">_Delete Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deletePipelineAsync(DeletePipelineRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, IngestRequestConverters::deletePipeline, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,delete,pipeline,api,html,delete,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,pipeline,async,delete,pipeline,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ingest,request,converters,delete,pipeline,options,acknowledged,response,from,xcontent,listener,empty,set
IngestClient -> public void deletePipelineAsync(DeletePipelineRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1539615817;Asynchronously delete an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-pipeline-api.html">_Delete Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deletePipelineAsync(DeletePipelineRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, IngestRequestConverters::deletePipeline, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,delete,pipeline,api,html,delete,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,pipeline,async,delete,pipeline,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ingest,request,converters,delete,pipeline,options,acknowledged,response,from,xcontent,listener,empty,set
IngestClient -> public GetPipelineResponse getPipeline(GetPipelineRequest request, RequestOptions options) throws IOException;1528706846;Get an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/get-pipeline-api.html"> Get Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetPipelineResponse getPipeline(GetPipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, RequestConverters::getPipeline, options,_            GetPipelineResponse::fromXContent, emptySet())__    };get,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,get,pipeline,api,html,get,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,pipeline,response,get,pipeline,get,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,get,pipeline,options,get,pipeline,response,from,xcontent,empty,set
IngestClient -> public GetPipelineResponse getPipeline(GetPipelineRequest request, RequestOptions options) throws IOException;1529658035;Get an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/get-pipeline-api.html"> Get Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetPipelineResponse getPipeline(GetPipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, RequestConverters::getPipeline, options,_            GetPipelineResponse::fromXContent, emptySet())__    };get,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,get,pipeline,api,html,get,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,pipeline,response,get,pipeline,get,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,get,pipeline,options,get,pipeline,response,from,xcontent,empty,set
IngestClient -> public GetPipelineResponse getPipeline(GetPipelineRequest request, RequestOptions options) throws IOException;1531910483;Get an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/get-pipeline-api.html"> Get Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetPipelineResponse getPipeline(GetPipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, RequestConverters::getPipeline, options,_            GetPipelineResponse::fromXContent, emptySet())__    };get,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,get,pipeline,api,html,get,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,pipeline,response,get,pipeline,get,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,get,pipeline,options,get,pipeline,response,from,xcontent,empty,set
IngestClient -> public GetPipelineResponse getPipeline(GetPipelineRequest request, RequestOptions options) throws IOException;1533815246;Get an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/get-pipeline-api.html"> Get Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetPipelineResponse getPipeline(GetPipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, RequestConverters::getPipeline, options,_            GetPipelineResponse::fromXContent, emptySet())__    };get,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,get,pipeline,api,html,get,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,pipeline,response,get,pipeline,get,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,get,pipeline,options,get,pipeline,response,from,xcontent,empty,set
IngestClient -> public GetPipelineResponse getPipeline(GetPipelineRequest request, RequestOptions options) throws IOException;1536611444;Get an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/get-pipeline-api.html"> Get Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetPipelineResponse getPipeline(GetPipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, IngestRequestConverters::getPipeline, options,_            GetPipelineResponse::fromXContent, emptySet())__    };get,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,get,pipeline,api,html,get,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,pipeline,response,get,pipeline,get,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ingest,request,converters,get,pipeline,options,get,pipeline,response,from,xcontent,empty,set
IngestClient -> public GetPipelineResponse getPipeline(GetPipelineRequest request, RequestOptions options) throws IOException;1539615817;Get an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/get-pipeline-api.html"> Get Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetPipelineResponse getPipeline(GetPipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, IngestRequestConverters::getPipeline, options,_            GetPipelineResponse::fromXContent, Collections.singleton(404))__    };get,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,get,pipeline,api,html,get,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,pipeline,response,get,pipeline,get,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ingest,request,converters,get,pipeline,options,get,pipeline,response,from,xcontent,collections,singleton,404
IngestClient -> public void putPipelineAsync(PutPipelineRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1533815246;Asynchronously add a pipeline or update an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/put-pipeline-api.html"> Put Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putPipelineAsync(PutPipelineRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, RequestConverters::putPipeline, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,add,a,pipeline,or,update,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,put,pipeline,api,html,put,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,pipeline,async,put,pipeline,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,put,pipeline,options,acknowledged,response,from,xcontent,listener,empty,set
IngestClient -> public void putPipelineAsync(PutPipelineRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1536611444;Asynchronously add a pipeline or update an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/put-pipeline-api.html"> Put Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putPipelineAsync(PutPipelineRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, IngestRequestConverters::putPipeline, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,add,a,pipeline,or,update,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,put,pipeline,api,html,put,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,pipeline,async,put,pipeline,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ingest,request,converters,put,pipeline,options,acknowledged,response,from,xcontent,listener,empty,set
IngestClient -> public void putPipelineAsync(PutPipelineRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1539615817;Asynchronously add a pipeline or update an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/put-pipeline-api.html"> Put Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putPipelineAsync(PutPipelineRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity( request, IngestRequestConverters::putPipeline, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,add,a,pipeline,or,update,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,put,pipeline,api,html,put,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,pipeline,async,put,pipeline,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ingest,request,converters,put,pipeline,options,acknowledged,response,from,xcontent,listener,empty,set
IngestClient -> public WritePipelineResponse deletePipeline(DeletePipelineRequest request, RequestOptions options) throws IOException;1528706846;Delete an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-pipeline-api.html">_Delete Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public WritePipelineResponse deletePipeline(DeletePipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, RequestConverters::deletePipeline, options,_            WritePipelineResponse::fromXContent, emptySet())__    };delete,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,delete,pipeline,api,html,delete,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,write,pipeline,response,delete,pipeline,delete,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,delete,pipeline,options,write,pipeline,response,from,xcontent,empty,set
IngestClient -> public WritePipelineResponse deletePipeline(DeletePipelineRequest request, RequestOptions options) throws IOException;1529658035;Delete an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-pipeline-api.html">_Delete Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public WritePipelineResponse deletePipeline(DeletePipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, RequestConverters::deletePipeline, options,_            WritePipelineResponse::fromXContent, emptySet())__    };delete,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,delete,pipeline,api,html,delete,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,write,pipeline,response,delete,pipeline,delete,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,delete,pipeline,options,write,pipeline,response,from,xcontent,empty,set
IngestClient -> public WritePipelineResponse deletePipeline(DeletePipelineRequest request, RequestOptions options) throws IOException;1531910483;Delete an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-pipeline-api.html">_Delete Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public WritePipelineResponse deletePipeline(DeletePipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, RequestConverters::deletePipeline, options,_            WritePipelineResponse::fromXContent, emptySet())__    };delete,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,delete,pipeline,api,html,delete,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,write,pipeline,response,delete,pipeline,delete,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,delete,pipeline,options,write,pipeline,response,from,xcontent,empty,set
IngestClient -> public WritePipelineResponse putPipeline(PutPipelineRequest request, RequestOptions options) throws IOException;1528706846;Add a pipeline or update an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/put-pipeline-api.html"> Put Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public WritePipelineResponse putPipeline(PutPipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, RequestConverters::putPipeline, options,_            WritePipelineResponse::fromXContent, emptySet())__    };add,a,pipeline,or,update,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,put,pipeline,api,html,put,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,write,pipeline,response,put,pipeline,put,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,put,pipeline,options,write,pipeline,response,from,xcontent,empty,set
IngestClient -> public WritePipelineResponse putPipeline(PutPipelineRequest request, RequestOptions options) throws IOException;1529658035;Add a pipeline or update an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/put-pipeline-api.html"> Put Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public WritePipelineResponse putPipeline(PutPipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, RequestConverters::putPipeline, options,_            WritePipelineResponse::fromXContent, emptySet())__    };add,a,pipeline,or,update,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,put,pipeline,api,html,put,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,write,pipeline,response,put,pipeline,put,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,put,pipeline,options,write,pipeline,response,from,xcontent,empty,set
IngestClient -> public WritePipelineResponse putPipeline(PutPipelineRequest request, RequestOptions options) throws IOException;1531910483;Add a pipeline or update an existing pipeline._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/put-pipeline-api.html"> Put Pipeline API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public WritePipelineResponse putPipeline(PutPipelineRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity( request, RequestConverters::putPipeline, options,_            WritePipelineResponse::fromXContent, emptySet())__    };add,a,pipeline,or,update,an,existing,pipeline,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,put,pipeline,api,html,put,pipeline,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,write,pipeline,response,put,pipeline,put,pipeline,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,put,pipeline,options,write,pipeline,response,from,xcontent,empty,set
