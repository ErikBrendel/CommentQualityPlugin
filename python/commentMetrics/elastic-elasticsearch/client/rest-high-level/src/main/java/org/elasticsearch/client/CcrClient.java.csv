# id;timestamp;commentText;codeText;commentWords;codeWords
CcrClient -> public PutFollowResponse putFollow(PutFollowRequest request, RequestOptions options) throws IOException;1542111769;Executes the put follow api, which creates a follower index and then the follower index starts following_the leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutFollowResponse putFollow(PutFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::putFollow,_            options,_            PutFollowResponse::fromXContent,_            Collections.emptySet()_        )__    };executes,the,put,follow,api,which,creates,a,follower,index,and,then,the,follower,index,starts,following,the,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,follow,response,put,follow,put,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,put,follow,options,put,follow,response,from,xcontent,collections,empty,set
CcrClient -> public PutFollowResponse putFollow(PutFollowRequest request, RequestOptions options) throws IOException;1542782909;Executes the put follow api, which creates a follower index and then the follower index starts following_the leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutFollowResponse putFollow(PutFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::putFollow,_            options,_            PutFollowResponse::fromXContent,_            Collections.emptySet()_        )__    };executes,the,put,follow,api,which,creates,a,follower,index,and,then,the,follower,index,starts,following,the,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,follow,response,put,follow,put,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,put,follow,options,put,follow,response,from,xcontent,collections,empty,set
CcrClient -> public PutFollowResponse putFollow(PutFollowRequest request, RequestOptions options) throws IOException;1542793923;Executes the put follow api, which creates a follower index and then the follower index starts following_the leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutFollowResponse putFollow(PutFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::putFollow,_            options,_            PutFollowResponse::fromXContent,_            Collections.emptySet()_        )__    };executes,the,put,follow,api,which,creates,a,follower,index,and,then,the,follower,index,starts,following,the,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,follow,response,put,follow,put,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,put,follow,options,put,follow,response,from,xcontent,collections,empty,set
CcrClient -> public PutFollowResponse putFollow(PutFollowRequest request, RequestOptions options) throws IOException;1543305202;Executes the put follow api, which creates a follower index and then the follower index starts following_the leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutFollowResponse putFollow(PutFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::putFollow,_            options,_            PutFollowResponse::fromXContent,_            Collections.emptySet()_        )__    };executes,the,put,follow,api,which,creates,a,follower,index,and,then,the,follower,index,starts,following,the,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,follow,response,put,follow,put,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,put,follow,options,put,follow,response,from,xcontent,collections,empty,set
CcrClient -> public PutFollowResponse putFollow(PutFollowRequest request, RequestOptions options) throws IOException;1543475191;Executes the put follow api, which creates a follower index and then the follower index starts following_the leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutFollowResponse putFollow(PutFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::putFollow,_            options,_            PutFollowResponse::fromXContent,_            Collections.emptySet()_        )__    };executes,the,put,follow,api,which,creates,a,follower,index,and,then,the,follower,index,starts,following,the,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,follow,response,put,follow,put,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,put,follow,options,put,follow,response,from,xcontent,collections,empty,set
CcrClient -> public PutFollowResponse putFollow(PutFollowRequest request, RequestOptions options) throws IOException;1543905689;Executes the put follow api, which creates a follower index and then the follower index starts following_the leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutFollowResponse putFollow(PutFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::putFollow,_            options,_            PutFollowResponse::fromXContent,_            Collections.emptySet()_        )__    };executes,the,put,follow,api,which,creates,a,follower,index,and,then,the,follower,index,starts,following,the,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,follow,response,put,follow,put,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,put,follow,options,put,follow,response,from,xcontent,collections,empty,set
CcrClient -> public PutFollowResponse putFollow(PutFollowRequest request, RequestOptions options) throws IOException;1544012091;Executes the put follow api, which creates a follower index and then the follower index starts following_the leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutFollowResponse putFollow(PutFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::putFollow,_            options,_            PutFollowResponse::fromXContent,_            Collections.emptySet()_        )__    };executes,the,put,follow,api,which,creates,a,follower,index,and,then,the,follower,index,starts,following,the,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,follow,response,put,follow,put,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,put,follow,options,put,follow,response,from,xcontent,collections,empty,set
CcrClient -> public PutFollowResponse putFollow(PutFollowRequest request, RequestOptions options) throws IOException;1544381948;Executes the put follow api, which creates a follower index and then the follower index starts following_the leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutFollowResponse putFollow(PutFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::putFollow,_            options,_            PutFollowResponse::fromXContent,_            Collections.emptySet()_        )__    };executes,the,put,follow,api,which,creates,a,follower,index,and,then,the,follower,index,starts,following,the,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,follow,response,put,follow,put,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,put,follow,options,put,follow,response,from,xcontent,collections,empty,set
CcrClient -> public PutFollowResponse putFollow(PutFollowRequest request, RequestOptions options) throws IOException;1550673460;Executes the put follow api, which creates a follower index and then the follower index starts following_the leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutFollowResponse putFollow(PutFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::putFollow,_            options,_            PutFollowResponse::fromXContent,_            Collections.emptySet()_        )__    };executes,the,put,follow,api,which,creates,a,follower,index,and,then,the,follower,index,starts,following,the,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,follow,response,put,follow,put,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,put,follow,options,put,follow,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse deleteAutoFollowPattern(DeleteAutoFollowPatternRequest request,                                                         RequestOptions options) throws IOException;1543475191;Deletes an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteAutoFollowPattern(DeleteAutoFollowPatternRequest request,_                                                        RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::deleteAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };deletes,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,delete,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,auto,follow,pattern,delete,auto,follow,pattern,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,delete,auto,follow,pattern,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse deleteAutoFollowPattern(DeleteAutoFollowPatternRequest request,                                                         RequestOptions options) throws IOException;1543905689;Deletes an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteAutoFollowPattern(DeleteAutoFollowPatternRequest request,_                                                        RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::deleteAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };deletes,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,delete,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,auto,follow,pattern,delete,auto,follow,pattern,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,delete,auto,follow,pattern,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse deleteAutoFollowPattern(DeleteAutoFollowPatternRequest request,                                                         RequestOptions options) throws IOException;1544012091;Deletes an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteAutoFollowPattern(DeleteAutoFollowPatternRequest request,_                                                        RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::deleteAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };deletes,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,delete,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,auto,follow,pattern,delete,auto,follow,pattern,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,delete,auto,follow,pattern,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse deleteAutoFollowPattern(DeleteAutoFollowPatternRequest request,                                                         RequestOptions options) throws IOException;1544381948;Deletes an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteAutoFollowPattern(DeleteAutoFollowPatternRequest request,_                                                        RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::deleteAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };deletes,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,delete,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,auto,follow,pattern,delete,auto,follow,pattern,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,delete,auto,follow,pattern,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse deleteAutoFollowPattern(DeleteAutoFollowPatternRequest request,                                                         RequestOptions options) throws IOException;1550673460;Deletes an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteAutoFollowPattern(DeleteAutoFollowPatternRequest request,_                                                        RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::deleteAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };deletes,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,delete,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,auto,follow,pattern,delete,auto,follow,pattern,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,delete,auto,follow,pattern,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public void deleteAutoFollowPatternAsync(DeleteAutoFollowPatternRequest request,                                              RequestOptions options,                                              ActionListener<AcknowledgedResponse> listener);1543475191;Deletes an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteAutoFollowPatternAsync(DeleteAutoFollowPatternRequest request,_                                             RequestOptions options,_                                             ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::deleteAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };deletes,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,delete,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,auto,follow,pattern,async,delete,auto,follow,pattern,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,delete,auto,follow,pattern,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void deleteAutoFollowPatternAsync(DeleteAutoFollowPatternRequest request,                                              RequestOptions options,                                              ActionListener<AcknowledgedResponse> listener);1543905689;Asynchronously deletes an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteAutoFollowPatternAsync(DeleteAutoFollowPatternRequest request,_                                             RequestOptions options,_                                             ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::deleteAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,deletes,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,delete,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,auto,follow,pattern,async,delete,auto,follow,pattern,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,delete,auto,follow,pattern,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void deleteAutoFollowPatternAsync(DeleteAutoFollowPatternRequest request,                                              RequestOptions options,                                              ActionListener<AcknowledgedResponse> listener);1544012091;Asynchronously deletes an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteAutoFollowPatternAsync(DeleteAutoFollowPatternRequest request,_                                             RequestOptions options,_                                             ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::deleteAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,deletes,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,delete,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,auto,follow,pattern,async,delete,auto,follow,pattern,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,delete,auto,follow,pattern,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void deleteAutoFollowPatternAsync(DeleteAutoFollowPatternRequest request,                                              RequestOptions options,                                              ActionListener<AcknowledgedResponse> listener);1544381948;Asynchronously deletes an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteAutoFollowPatternAsync(DeleteAutoFollowPatternRequest request,_                                             RequestOptions options,_                                             ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::deleteAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,deletes,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,delete,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,auto,follow,pattern,async,delete,auto,follow,pattern,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,delete,auto,follow,pattern,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void deleteAutoFollowPatternAsync(DeleteAutoFollowPatternRequest request,                                              RequestOptions options,                                              ActionListener<AcknowledgedResponse> listener);1550673460;Asynchronously deletes an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-delete-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteAutoFollowPatternAsync(DeleteAutoFollowPatternRequest request,_                                             RequestOptions options,_                                             ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::deleteAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,deletes,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,delete,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,auto,follow,pattern,async,delete,auto,follow,pattern,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,delete,auto,follow,pattern,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void pauseFollowAsync(PauseFollowRequest request,                                  RequestOptions options,                                  ActionListener<AcknowledgedResponse> listener);1541606915;Asynchronously instruct a follower index the pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void pauseFollowAsync(PauseFollowRequest request,_                                 RequestOptions options,_                                 ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,instruct,a,follower,index,the,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,pause,follow,async,pause,follow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void pauseFollowAsync(PauseFollowRequest request,                                  RequestOptions options,                                  ActionListener<AcknowledgedResponse> listener);1542111769;Asynchronously instruct a follower index the pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void pauseFollowAsync(PauseFollowRequest request,_                                 RequestOptions options,_                                 ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,instruct,a,follower,index,the,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,pause,follow,async,pause,follow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void pauseFollowAsync(PauseFollowRequest request,                                  RequestOptions options,                                  ActionListener<AcknowledgedResponse> listener);1542782909;Asynchronously instruct a follower index the pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void pauseFollowAsync(PauseFollowRequest request,_                                 RequestOptions options,_                                 ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,instruct,a,follower,index,the,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,pause,follow,async,pause,follow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void pauseFollowAsync(PauseFollowRequest request,                                  RequestOptions options,                                  ActionListener<AcknowledgedResponse> listener);1542793923;Asynchronously instruct a follower index to pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void pauseFollowAsync(PauseFollowRequest request,_                                 RequestOptions options,_                                 ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,instruct,a,follower,index,to,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,pause,follow,async,pause,follow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void pauseFollowAsync(PauseFollowRequest request,                                  RequestOptions options,                                  ActionListener<AcknowledgedResponse> listener);1543305202;Asynchronously instruct a follower index to pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void pauseFollowAsync(PauseFollowRequest request,_                                 RequestOptions options,_                                 ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,instruct,a,follower,index,to,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,pause,follow,async,pause,follow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void pauseFollowAsync(PauseFollowRequest request,                                  RequestOptions options,                                  ActionListener<AcknowledgedResponse> listener);1543475191;Asynchronously instruct a follower index to pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void pauseFollowAsync(PauseFollowRequest request,_                                 RequestOptions options,_                                 ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,instruct,a,follower,index,to,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,pause,follow,async,pause,follow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void pauseFollowAsync(PauseFollowRequest request,                                  RequestOptions options,                                  ActionListener<AcknowledgedResponse> listener);1543905689;Asynchronously instruct a follower index to pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void pauseFollowAsync(PauseFollowRequest request,_                                 RequestOptions options,_                                 ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,instruct,a,follower,index,to,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,pause,follow,async,pause,follow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void pauseFollowAsync(PauseFollowRequest request,                                  RequestOptions options,                                  ActionListener<AcknowledgedResponse> listener);1544012091;Asynchronously instruct a follower index to pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void pauseFollowAsync(PauseFollowRequest request,_                                 RequestOptions options,_                                 ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,instruct,a,follower,index,to,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,pause,follow,async,pause,follow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void pauseFollowAsync(PauseFollowRequest request,                                  RequestOptions options,                                  ActionListener<AcknowledgedResponse> listener);1544381948;Asynchronously instruct a follower index to pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void pauseFollowAsync(PauseFollowRequest request,_                                 RequestOptions options,_                                 ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,instruct,a,follower,index,to,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,pause,follow,async,pause,follow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void pauseFollowAsync(PauseFollowRequest request,                                  RequestOptions options,                                  ActionListener<AcknowledgedResponse> listener);1550673460;Asynchronously instruct a follower index to pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void pauseFollowAsync(PauseFollowRequest request,_                                 RequestOptions options,_                                 ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,instruct,a,follower,index,to,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,pause,follow,async,pause,follow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public CcrStatsResponse getCcrStats(CcrStatsRequest request,                                         RequestOptions options) throws IOException;1544012091;Gets all CCR stats.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-stats.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public CcrStatsResponse getCcrStats(CcrStatsRequest request,_                                        RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::getCcrStats,_            options,_            CcrStatsResponse::fromXContent,_            Collections.emptySet()_        )__    };gets,all,ccr,stats,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,get,stats,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,ccr,stats,response,get,ccr,stats,ccr,stats,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,get,ccr,stats,options,ccr,stats,response,from,xcontent,collections,empty,set
CcrClient -> public CcrStatsResponse getCcrStats(CcrStatsRequest request,                                         RequestOptions options) throws IOException;1544381948;Gets all CCR stats.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-stats.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public CcrStatsResponse getCcrStats(CcrStatsRequest request,_                                        RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::getCcrStats,_            options,_            CcrStatsResponse::fromXContent,_            Collections.emptySet()_        )__    };gets,all,ccr,stats,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,get,stats,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,ccr,stats,response,get,ccr,stats,ccr,stats,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,get,ccr,stats,options,ccr,stats,response,from,xcontent,collections,empty,set
CcrClient -> public CcrStatsResponse getCcrStats(CcrStatsRequest request,                                         RequestOptions options) throws IOException;1550673460;Gets all CCR stats.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-stats.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public CcrStatsResponse getCcrStats(CcrStatsRequest request,_                                        RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::getCcrStats,_            options,_            CcrStatsResponse::fromXContent,_            Collections.emptySet()_        )__    };gets,all,ccr,stats,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,get,stats,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,ccr,stats,response,get,ccr,stats,ccr,stats,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,get,ccr,stats,options,ccr,stats,response,from,xcontent,collections,empty,set
CcrClient -> public void getFollowStatsAsync(FollowStatsRequest request,                                     RequestOptions options,                                     ActionListener<FollowStatsResponse> listener);1544381948;Asynchronously gets follow stats for specific indices.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-stats.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void getFollowStatsAsync(FollowStatsRequest request,_                                    RequestOptions options,_                                    ActionListener<FollowStatsResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::getFollowStats,_            options,_            FollowStatsResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,gets,follow,stats,for,specific,indices,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,get,follow,stats,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,get,follow,stats,async,follow,stats,request,request,request,options,options,action,listener,follow,stats,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,get,follow,stats,options,follow,stats,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void getFollowStatsAsync(FollowStatsRequest request,                                     RequestOptions options,                                     ActionListener<FollowStatsResponse> listener);1550673460;Asynchronously gets follow stats for specific indices.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-stats.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void getFollowStatsAsync(FollowStatsRequest request,_                                    RequestOptions options,_                                    ActionListener<FollowStatsResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::getFollowStats,_            options,_            FollowStatsResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,gets,follow,stats,for,specific,indices,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,get,follow,stats,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,get,follow,stats,async,follow,stats,request,request,request,options,options,action,listener,follow,stats,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,get,follow,stats,options,follow,stats,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void unfollowAsync(UnfollowRequest request,                               RequestOptions options,                               ActionListener<AcknowledgedResponse> listener);1542782909;Asynchronously instructs a follower index to unfollow and become a regular index._Note that index following needs to be paused and the follower index needs to be closed.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void unfollowAsync(UnfollowRequest request,_                              RequestOptions options,_                              ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::unfollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,instructs,a,follower,index,to,unfollow,and,become,a,regular,index,note,that,index,following,needs,to,be,paused,and,the,follower,index,needs,to,be,closed,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,unfollow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,unfollow,async,unfollow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,unfollow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void unfollowAsync(UnfollowRequest request,                               RequestOptions options,                               ActionListener<AcknowledgedResponse> listener);1542793923;Asynchronously instructs a follower index to unfollow and become a regular index._Note that index following needs to be paused and the follower index needs to be closed.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void unfollowAsync(UnfollowRequest request,_                              RequestOptions options,_                              ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::unfollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,instructs,a,follower,index,to,unfollow,and,become,a,regular,index,note,that,index,following,needs,to,be,paused,and,the,follower,index,needs,to,be,closed,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,unfollow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,unfollow,async,unfollow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,unfollow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void unfollowAsync(UnfollowRequest request,                               RequestOptions options,                               ActionListener<AcknowledgedResponse> listener);1543305202;Asynchronously instructs a follower index to unfollow and become a regular index._Note that index following needs to be paused and the follower index needs to be closed.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void unfollowAsync(UnfollowRequest request,_                              RequestOptions options,_                              ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::unfollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,instructs,a,follower,index,to,unfollow,and,become,a,regular,index,note,that,index,following,needs,to,be,paused,and,the,follower,index,needs,to,be,closed,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,unfollow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,unfollow,async,unfollow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,unfollow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void unfollowAsync(UnfollowRequest request,                               RequestOptions options,                               ActionListener<AcknowledgedResponse> listener);1543475191;Asynchronously instructs a follower index to unfollow and become a regular index._Note that index following needs to be paused and the follower index needs to be closed.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void unfollowAsync(UnfollowRequest request,_                              RequestOptions options,_                              ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::unfollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,instructs,a,follower,index,to,unfollow,and,become,a,regular,index,note,that,index,following,needs,to,be,paused,and,the,follower,index,needs,to,be,closed,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,unfollow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,unfollow,async,unfollow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,unfollow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void unfollowAsync(UnfollowRequest request,                               RequestOptions options,                               ActionListener<AcknowledgedResponse> listener);1543905689;Asynchronously instructs a follower index to unfollow and become a regular index._Note that index following needs to be paused and the follower index needs to be closed.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void unfollowAsync(UnfollowRequest request,_                              RequestOptions options,_                              ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::unfollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,instructs,a,follower,index,to,unfollow,and,become,a,regular,index,note,that,index,following,needs,to,be,paused,and,the,follower,index,needs,to,be,closed,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,unfollow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,unfollow,async,unfollow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,unfollow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void unfollowAsync(UnfollowRequest request,                               RequestOptions options,                               ActionListener<AcknowledgedResponse> listener);1544012091;Asynchronously instructs a follower index to unfollow and become a regular index._Note that index following needs to be paused and the follower index needs to be closed.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void unfollowAsync(UnfollowRequest request,_                              RequestOptions options,_                              ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::unfollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,instructs,a,follower,index,to,unfollow,and,become,a,regular,index,note,that,index,following,needs,to,be,paused,and,the,follower,index,needs,to,be,closed,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,unfollow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,unfollow,async,unfollow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,unfollow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void unfollowAsync(UnfollowRequest request,                               RequestOptions options,                               ActionListener<AcknowledgedResponse> listener);1544381948;Asynchronously instructs a follower index to unfollow and become a regular index._Note that index following needs to be paused and the follower index needs to be closed.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void unfollowAsync(UnfollowRequest request,_                              RequestOptions options,_                              ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::unfollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,instructs,a,follower,index,to,unfollow,and,become,a,regular,index,note,that,index,following,needs,to,be,paused,and,the,follower,index,needs,to,be,closed,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,unfollow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,unfollow,async,unfollow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,unfollow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void unfollowAsync(UnfollowRequest request,                               RequestOptions options,                               ActionListener<AcknowledgedResponse> listener);1550673460;Asynchronously instructs a follower index to unfollow and become a regular index._Note that index following needs to be paused and the follower index needs to be closed.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void unfollowAsync(UnfollowRequest request,_                              RequestOptions options,_                              ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::unfollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,instructs,a,follower,index,to,unfollow,and,become,a,regular,index,note,that,index,following,needs,to,be,paused,and,the,follower,index,needs,to,be,closed,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,unfollow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,unfollow,async,unfollow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,unfollow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public AcknowledgedResponse unfollow(UnfollowRequest request, RequestOptions options) throws IOException;1542782909;Instructs a follower index to unfollow and become a regular index._Note that index following needs to be paused and the follower index needs to be closed.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse unfollow(UnfollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::unfollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,unfollow,and,become,a,regular,index,note,that,index,following,needs,to,be,paused,and,the,follower,index,needs,to,be,closed,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,unfollow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,unfollow,unfollow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,unfollow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse unfollow(UnfollowRequest request, RequestOptions options) throws IOException;1542793923;Instructs a follower index to unfollow and become a regular index._Note that index following needs to be paused and the follower index needs to be closed.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse unfollow(UnfollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::unfollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,unfollow,and,become,a,regular,index,note,that,index,following,needs,to,be,paused,and,the,follower,index,needs,to,be,closed,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,unfollow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,unfollow,unfollow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,unfollow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse unfollow(UnfollowRequest request, RequestOptions options) throws IOException;1543305202;Instructs a follower index to unfollow and become a regular index._Note that index following needs to be paused and the follower index needs to be closed.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse unfollow(UnfollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::unfollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,unfollow,and,become,a,regular,index,note,that,index,following,needs,to,be,paused,and,the,follower,index,needs,to,be,closed,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,unfollow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,unfollow,unfollow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,unfollow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse unfollow(UnfollowRequest request, RequestOptions options) throws IOException;1543475191;Instructs a follower index to unfollow and become a regular index._Note that index following needs to be paused and the follower index needs to be closed.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse unfollow(UnfollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::unfollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,unfollow,and,become,a,regular,index,note,that,index,following,needs,to,be,paused,and,the,follower,index,needs,to,be,closed,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,unfollow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,unfollow,unfollow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,unfollow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse unfollow(UnfollowRequest request, RequestOptions options) throws IOException;1543905689;Instructs a follower index to unfollow and become a regular index._Note that index following needs to be paused and the follower index needs to be closed.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse unfollow(UnfollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::unfollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,unfollow,and,become,a,regular,index,note,that,index,following,needs,to,be,paused,and,the,follower,index,needs,to,be,closed,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,unfollow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,unfollow,unfollow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,unfollow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse unfollow(UnfollowRequest request, RequestOptions options) throws IOException;1544012091;Instructs a follower index to unfollow and become a regular index._Note that index following needs to be paused and the follower index needs to be closed.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse unfollow(UnfollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::unfollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,unfollow,and,become,a,regular,index,note,that,index,following,needs,to,be,paused,and,the,follower,index,needs,to,be,closed,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,unfollow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,unfollow,unfollow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,unfollow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse unfollow(UnfollowRequest request, RequestOptions options) throws IOException;1544381948;Instructs a follower index to unfollow and become a regular index._Note that index following needs to be paused and the follower index needs to be closed.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse unfollow(UnfollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::unfollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,unfollow,and,become,a,regular,index,note,that,index,following,needs,to,be,paused,and,the,follower,index,needs,to,be,closed,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,unfollow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,unfollow,unfollow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,unfollow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse unfollow(UnfollowRequest request, RequestOptions options) throws IOException;1550673460;Instructs a follower index to unfollow and become a regular index._Note that index following needs to be paused and the follower index needs to be closed.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-unfollow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse unfollow(UnfollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::unfollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,unfollow,and,become,a,regular,index,note,that,index,following,needs,to,be,paused,and,the,follower,index,needs,to,be,closed,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,unfollow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,unfollow,unfollow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,unfollow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public FollowStatsResponse getFollowStats(FollowStatsRequest request,                                               RequestOptions options) throws IOException;1544381948;Gets follow stats for specific indices.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-stats.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public FollowStatsResponse getFollowStats(FollowStatsRequest request,_                                              RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::getFollowStats,_            options,_            FollowStatsResponse::fromXContent,_            Collections.emptySet()_        )__    };gets,follow,stats,for,specific,indices,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,get,follow,stats,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,follow,stats,response,get,follow,stats,follow,stats,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,get,follow,stats,options,follow,stats,response,from,xcontent,collections,empty,set
CcrClient -> public FollowStatsResponse getFollowStats(FollowStatsRequest request,                                               RequestOptions options) throws IOException;1550673460;Gets follow stats for specific indices.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-follow-stats.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public FollowStatsResponse getFollowStats(FollowStatsRequest request,_                                              RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::getFollowStats,_            options,_            FollowStatsResponse::fromXContent,_            Collections.emptySet()_        )__    };gets,follow,stats,for,specific,indices,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,get,follow,stats,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,follow,stats,response,get,follow,stats,follow,stats,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,get,follow,stats,options,follow,stats,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException;1541606915;Instructs a follower index the pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,the,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,pause,follow,pause,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException;1542111769;Instructs a follower index the pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,the,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,pause,follow,pause,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException;1542782909;Instructs a follower index the pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,the,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,pause,follow,pause,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException;1542793923;Instructs a follower index to pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,pause,follow,pause,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException;1543305202;Instructs a follower index to pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,pause,follow,pause,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException;1543475191;Instructs a follower index to pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,pause,follow,pause,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException;1543905689;Instructs a follower index to pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,pause,follow,pause,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException;1544012091;Instructs a follower index to pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,pause,follow,pause,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException;1544381948;Instructs a follower index to pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,pause,follow,pause,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException;1550673460;Instructs a follower index to pause the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-pause-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse pauseFollow(PauseFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::pauseFollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,pause,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,pause,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,pause,follow,pause,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,pause,follow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse resumeFollow(ResumeFollowRequest request, RequestOptions options) throws IOException;1542793923;Instructs a follower index to resume the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-resume-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse resumeFollow(ResumeFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::resumeFollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,resume,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,resume,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,resume,follow,resume,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,resume,follow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse resumeFollow(ResumeFollowRequest request, RequestOptions options) throws IOException;1543305202;Instructs a follower index to resume the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-resume-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse resumeFollow(ResumeFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::resumeFollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,resume,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,resume,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,resume,follow,resume,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,resume,follow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse resumeFollow(ResumeFollowRequest request, RequestOptions options) throws IOException;1543475191;Instructs a follower index to resume the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-resume-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse resumeFollow(ResumeFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::resumeFollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,resume,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,resume,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,resume,follow,resume,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,resume,follow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse resumeFollow(ResumeFollowRequest request, RequestOptions options) throws IOException;1543905689;Instructs a follower index to resume the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-resume-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse resumeFollow(ResumeFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::resumeFollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,resume,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,resume,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,resume,follow,resume,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,resume,follow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse resumeFollow(ResumeFollowRequest request, RequestOptions options) throws IOException;1544012091;Instructs a follower index to resume the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-resume-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse resumeFollow(ResumeFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::resumeFollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,resume,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,resume,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,resume,follow,resume,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,resume,follow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse resumeFollow(ResumeFollowRequest request, RequestOptions options) throws IOException;1544381948;Instructs a follower index to resume the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-resume-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse resumeFollow(ResumeFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::resumeFollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,resume,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,resume,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,resume,follow,resume,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,resume,follow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse resumeFollow(ResumeFollowRequest request, RequestOptions options) throws IOException;1550673460;Instructs a follower index to resume the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-resume-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse resumeFollow(ResumeFollowRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::resumeFollow,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };instructs,a,follower,index,to,resume,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,resume,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,resume,follow,resume,follow,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,resume,follow,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public void resumeFollowAsync(ResumeFollowRequest request,                                   RequestOptions options,                                   ActionListener<AcknowledgedResponse> listener);1542793923;Asynchronously instruct a follower index to resume the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-resume-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void resumeFollowAsync(ResumeFollowRequest request,_                                  RequestOptions options,_                                  ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::resumeFollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,instruct,a,follower,index,to,resume,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,resume,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,resume,follow,async,resume,follow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,resume,follow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void resumeFollowAsync(ResumeFollowRequest request,                                   RequestOptions options,                                   ActionListener<AcknowledgedResponse> listener);1543305202;Asynchronously instruct a follower index to resume the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-resume-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void resumeFollowAsync(ResumeFollowRequest request,_                                  RequestOptions options,_                                  ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::resumeFollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,instruct,a,follower,index,to,resume,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,resume,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,resume,follow,async,resume,follow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,resume,follow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void resumeFollowAsync(ResumeFollowRequest request,                                   RequestOptions options,                                   ActionListener<AcknowledgedResponse> listener);1543475191;Asynchronously instruct a follower index to resume the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-resume-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void resumeFollowAsync(ResumeFollowRequest request,_                                  RequestOptions options,_                                  ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::resumeFollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,instruct,a,follower,index,to,resume,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,resume,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,resume,follow,async,resume,follow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,resume,follow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void resumeFollowAsync(ResumeFollowRequest request,                                   RequestOptions options,                                   ActionListener<AcknowledgedResponse> listener);1543905689;Asynchronously instruct a follower index to resume the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-resume-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void resumeFollowAsync(ResumeFollowRequest request,_                                  RequestOptions options,_                                  ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::resumeFollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,instruct,a,follower,index,to,resume,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,resume,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,resume,follow,async,resume,follow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,resume,follow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void resumeFollowAsync(ResumeFollowRequest request,                                   RequestOptions options,                                   ActionListener<AcknowledgedResponse> listener);1544012091;Asynchronously instruct a follower index to resume the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-resume-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void resumeFollowAsync(ResumeFollowRequest request,_                                  RequestOptions options,_                                  ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::resumeFollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,instruct,a,follower,index,to,resume,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,resume,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,resume,follow,async,resume,follow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,resume,follow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void resumeFollowAsync(ResumeFollowRequest request,                                   RequestOptions options,                                   ActionListener<AcknowledgedResponse> listener);1544381948;Asynchronously instruct a follower index to resume the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-resume-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void resumeFollowAsync(ResumeFollowRequest request,_                                  RequestOptions options,_                                  ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::resumeFollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,instruct,a,follower,index,to,resume,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,resume,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,resume,follow,async,resume,follow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,resume,follow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void resumeFollowAsync(ResumeFollowRequest request,                                   RequestOptions options,                                   ActionListener<AcknowledgedResponse> listener);1550673460;Asynchronously instruct a follower index to resume the following of a leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-resume-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void resumeFollowAsync(ResumeFollowRequest request,_                                  RequestOptions options,_                                  ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::resumeFollow,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,instruct,a,follower,index,to,resume,the,following,of,a,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,resume,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,resume,follow,async,resume,follow,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,resume,follow,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void putAutoFollowPatternAsync(PutAutoFollowPatternRequest request,                                           RequestOptions options,                                           ActionListener<AcknowledgedResponse> listener);1543305202;Asynchronously stores an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void putAutoFollowPatternAsync(PutAutoFollowPatternRequest request,_                                          RequestOptions options,_                                          ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::putAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,stores,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,put,auto,follow,pattern,async,put,auto,follow,pattern,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,put,auto,follow,pattern,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void putAutoFollowPatternAsync(PutAutoFollowPatternRequest request,                                           RequestOptions options,                                           ActionListener<AcknowledgedResponse> listener);1543475191;Asynchronously stores an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putAutoFollowPatternAsync(PutAutoFollowPatternRequest request,_                                          RequestOptions options,_                                          ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::putAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,stores,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,auto,follow,pattern,async,put,auto,follow,pattern,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,put,auto,follow,pattern,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void putAutoFollowPatternAsync(PutAutoFollowPatternRequest request,                                           RequestOptions options,                                           ActionListener<AcknowledgedResponse> listener);1543905689;Asynchronously stores an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putAutoFollowPatternAsync(PutAutoFollowPatternRequest request,_                                          RequestOptions options,_                                          ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::putAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,stores,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,auto,follow,pattern,async,put,auto,follow,pattern,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,put,auto,follow,pattern,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void putAutoFollowPatternAsync(PutAutoFollowPatternRequest request,                                           RequestOptions options,                                           ActionListener<AcknowledgedResponse> listener);1544012091;Asynchronously stores an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putAutoFollowPatternAsync(PutAutoFollowPatternRequest request,_                                          RequestOptions options,_                                          ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::putAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,stores,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,auto,follow,pattern,async,put,auto,follow,pattern,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,put,auto,follow,pattern,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void putAutoFollowPatternAsync(PutAutoFollowPatternRequest request,                                           RequestOptions options,                                           ActionListener<AcknowledgedResponse> listener);1544381948;Asynchronously stores an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putAutoFollowPatternAsync(PutAutoFollowPatternRequest request,_                                          RequestOptions options,_                                          ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::putAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,stores,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,auto,follow,pattern,async,put,auto,follow,pattern,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,put,auto,follow,pattern,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void putAutoFollowPatternAsync(PutAutoFollowPatternRequest request,                                           RequestOptions options,                                           ActionListener<AcknowledgedResponse> listener);1550673460;Asynchronously stores an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putAutoFollowPatternAsync(PutAutoFollowPatternRequest request,_                                          RequestOptions options,_                                          ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::putAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            listener,_            Collections.emptySet())__    };asynchronously,stores,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,auto,follow,pattern,async,put,auto,follow,pattern,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,put,auto,follow,pattern,options,acknowledged,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void getCcrStatsAsync(CcrStatsRequest request,                                  RequestOptions options,                                  ActionListener<CcrStatsResponse> listener);1544012091;Gets all CCR stats.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-stats.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void getCcrStatsAsync(CcrStatsRequest request,_                                 RequestOptions options,_                                 ActionListener<CcrStatsResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::getCcrStats,_            options,_            CcrStatsResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };gets,all,ccr,stats,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,get,stats,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,get,ccr,stats,async,ccr,stats,request,request,request,options,options,action,listener,ccr,stats,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,get,ccr,stats,options,ccr,stats,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void getCcrStatsAsync(CcrStatsRequest request,                                  RequestOptions options,                                  ActionListener<CcrStatsResponse> listener);1544381948;Asynchronously gets all CCR stats.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-stats.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void getCcrStatsAsync(CcrStatsRequest request,_                                 RequestOptions options,_                                 ActionListener<CcrStatsResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::getCcrStats,_            options,_            CcrStatsResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,gets,all,ccr,stats,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,get,stats,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,get,ccr,stats,async,ccr,stats,request,request,request,options,options,action,listener,ccr,stats,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,get,ccr,stats,options,ccr,stats,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void getCcrStatsAsync(CcrStatsRequest request,                                  RequestOptions options,                                  ActionListener<CcrStatsResponse> listener);1550673460;Asynchronously gets all CCR stats.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-stats.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void getCcrStatsAsync(CcrStatsRequest request,_                                 RequestOptions options,_                                 ActionListener<CcrStatsResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::getCcrStats,_            options,_            CcrStatsResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,gets,all,ccr,stats,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,get,stats,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,get,ccr,stats,async,ccr,stats,request,request,request,options,options,action,listener,ccr,stats,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,get,ccr,stats,options,ccr,stats,response,from,xcontent,listener,collections,empty,set
CcrClient -> public GetAutoFollowPatternResponse getAutoFollowPattern(GetAutoFollowPatternRequest request,                                                              RequestOptions options) throws IOException;1543905689;Gets an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetAutoFollowPatternResponse getAutoFollowPattern(GetAutoFollowPatternRequest request,_                                                             RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::getAutoFollowPattern,_            options,_            GetAutoFollowPatternResponse::fromXContent,_            Collections.emptySet()_        )__    };gets,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,get,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,auto,follow,pattern,response,get,auto,follow,pattern,get,auto,follow,pattern,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,get,auto,follow,pattern,options,get,auto,follow,pattern,response,from,xcontent,collections,empty,set
CcrClient -> public GetAutoFollowPatternResponse getAutoFollowPattern(GetAutoFollowPatternRequest request,                                                              RequestOptions options) throws IOException;1544012091;Gets an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetAutoFollowPatternResponse getAutoFollowPattern(GetAutoFollowPatternRequest request,_                                                             RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::getAutoFollowPattern,_            options,_            GetAutoFollowPatternResponse::fromXContent,_            Collections.emptySet()_        )__    };gets,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,get,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,auto,follow,pattern,response,get,auto,follow,pattern,get,auto,follow,pattern,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,get,auto,follow,pattern,options,get,auto,follow,pattern,response,from,xcontent,collections,empty,set
CcrClient -> public GetAutoFollowPatternResponse getAutoFollowPattern(GetAutoFollowPatternRequest request,                                                              RequestOptions options) throws IOException;1544381948;Gets an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetAutoFollowPatternResponse getAutoFollowPattern(GetAutoFollowPatternRequest request,_                                                             RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::getAutoFollowPattern,_            options,_            GetAutoFollowPatternResponse::fromXContent,_            Collections.emptySet()_        )__    };gets,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,get,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,auto,follow,pattern,response,get,auto,follow,pattern,get,auto,follow,pattern,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,get,auto,follow,pattern,options,get,auto,follow,pattern,response,from,xcontent,collections,empty,set
CcrClient -> public GetAutoFollowPatternResponse getAutoFollowPattern(GetAutoFollowPatternRequest request,                                                              RequestOptions options) throws IOException;1550673460;Gets an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetAutoFollowPatternResponse getAutoFollowPattern(GetAutoFollowPatternRequest request,_                                                             RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::getAutoFollowPattern,_            options,_            GetAutoFollowPatternResponse::fromXContent,_            Collections.emptySet()_        )__    };gets,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,get,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,auto,follow,pattern,response,get,auto,follow,pattern,get,auto,follow,pattern,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,get,auto,follow,pattern,options,get,auto,follow,pattern,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse putAutoFollowPattern(PutAutoFollowPatternRequest request, RequestOptions options) throws IOException;1543305202;Stores an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putAutoFollowPattern(PutAutoFollowPatternRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::putAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };stores,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,auto,follow,pattern,put,auto,follow,pattern,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,put,auto,follow,pattern,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse putAutoFollowPattern(PutAutoFollowPatternRequest request, RequestOptions options) throws IOException;1543475191;Stores an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putAutoFollowPattern(PutAutoFollowPatternRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::putAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };stores,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,auto,follow,pattern,put,auto,follow,pattern,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,put,auto,follow,pattern,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse putAutoFollowPattern(PutAutoFollowPatternRequest request, RequestOptions options) throws IOException;1543905689;Stores an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putAutoFollowPattern(PutAutoFollowPatternRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::putAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };stores,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,auto,follow,pattern,put,auto,follow,pattern,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,put,auto,follow,pattern,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse putAutoFollowPattern(PutAutoFollowPatternRequest request, RequestOptions options) throws IOException;1544012091;Stores an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putAutoFollowPattern(PutAutoFollowPatternRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::putAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };stores,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,auto,follow,pattern,put,auto,follow,pattern,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,put,auto,follow,pattern,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse putAutoFollowPattern(PutAutoFollowPatternRequest request, RequestOptions options) throws IOException;1544381948;Stores an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putAutoFollowPattern(PutAutoFollowPatternRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::putAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };stores,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,auto,follow,pattern,put,auto,follow,pattern,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,put,auto,follow,pattern,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public AcknowledgedResponse putAutoFollowPattern(PutAutoFollowPatternRequest request, RequestOptions options) throws IOException;1550673460;Stores an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putAutoFollowPattern(PutAutoFollowPatternRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            request,_            CcrRequestConverters::putAutoFollowPattern,_            options,_            AcknowledgedResponse::fromXContent,_            Collections.emptySet()_        )__    };stores,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,auto,follow,pattern,put,auto,follow,pattern,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,ccr,request,converters,put,auto,follow,pattern,options,acknowledged,response,from,xcontent,collections,empty,set
CcrClient -> public void getAutoFollowPatternAsync(GetAutoFollowPatternRequest request,                                           RequestOptions options,                                           ActionListener<GetAutoFollowPatternResponse> listener);1543905689;Asynchronously gets an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getAutoFollowPatternAsync(GetAutoFollowPatternRequest request,_                                          RequestOptions options,_                                          ActionListener<GetAutoFollowPatternResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::getAutoFollowPattern,_            options,_            GetAutoFollowPatternResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,gets,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,get,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,auto,follow,pattern,async,get,auto,follow,pattern,request,request,request,options,options,action,listener,get,auto,follow,pattern,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,get,auto,follow,pattern,options,get,auto,follow,pattern,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void getAutoFollowPatternAsync(GetAutoFollowPatternRequest request,                                           RequestOptions options,                                           ActionListener<GetAutoFollowPatternResponse> listener);1544012091;Asynchronously gets an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getAutoFollowPatternAsync(GetAutoFollowPatternRequest request,_                                          RequestOptions options,_                                          ActionListener<GetAutoFollowPatternResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::getAutoFollowPattern,_            options,_            GetAutoFollowPatternResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,gets,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,get,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,auto,follow,pattern,async,get,auto,follow,pattern,request,request,request,options,options,action,listener,get,auto,follow,pattern,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,get,auto,follow,pattern,options,get,auto,follow,pattern,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void getAutoFollowPatternAsync(GetAutoFollowPatternRequest request,                                           RequestOptions options,                                           ActionListener<GetAutoFollowPatternResponse> listener);1544381948;Asynchronously gets an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getAutoFollowPatternAsync(GetAutoFollowPatternRequest request,_                                          RequestOptions options,_                                          ActionListener<GetAutoFollowPatternResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::getAutoFollowPattern,_            options,_            GetAutoFollowPatternResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,gets,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,get,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,auto,follow,pattern,async,get,auto,follow,pattern,request,request,request,options,options,action,listener,get,auto,follow,pattern,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,get,auto,follow,pattern,options,get,auto,follow,pattern,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void getAutoFollowPatternAsync(GetAutoFollowPatternRequest request,                                           RequestOptions options,                                           ActionListener<GetAutoFollowPatternResponse> listener);1550673460;Asynchronously gets an auto follow pattern.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-get-auto-follow-pattern.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getAutoFollowPatternAsync(GetAutoFollowPatternRequest request,_                                          RequestOptions options,_                                          ActionListener<GetAutoFollowPatternResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::getAutoFollowPattern,_            options,_            GetAutoFollowPatternResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,gets,an,auto,follow,pattern,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,get,auto,follow,pattern,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,auto,follow,pattern,async,get,auto,follow,pattern,request,request,request,options,options,action,listener,get,auto,follow,pattern,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,get,auto,follow,pattern,options,get,auto,follow,pattern,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void putFollowAsync(PutFollowRequest request,                                RequestOptions options,                                ActionListener<PutFollowResponse> listener);1542111769;Asynchronously executes the put follow api, which creates a follower index and then the follower index starts_following the leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void putFollowAsync(PutFollowRequest request,_                               RequestOptions options,_                               ActionListener<PutFollowResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::putFollow,_            options,_            PutFollowResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,executes,the,put,follow,api,which,creates,a,follower,index,and,then,the,follower,index,starts,following,the,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,put,follow,async,put,follow,request,request,request,options,options,action,listener,put,follow,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,put,follow,options,put,follow,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void putFollowAsync(PutFollowRequest request,                                RequestOptions options,                                ActionListener<PutFollowResponse> listener);1542782909;Asynchronously executes the put follow api, which creates a follower index and then the follower index starts_following the leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void putFollowAsync(PutFollowRequest request,_                               RequestOptions options,_                               ActionListener<PutFollowResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::putFollow,_            options,_            PutFollowResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,executes,the,put,follow,api,which,creates,a,follower,index,and,then,the,follower,index,starts,following,the,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,put,follow,async,put,follow,request,request,request,options,options,action,listener,put,follow,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,put,follow,options,put,follow,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void putFollowAsync(PutFollowRequest request,                                RequestOptions options,                                ActionListener<PutFollowResponse> listener);1542793923;Asynchronously executes the put follow api, which creates a follower index and then the follower index starts_following the leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void putFollowAsync(PutFollowRequest request,_                               RequestOptions options,_                               ActionListener<PutFollowResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::putFollow,_            options,_            PutFollowResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,executes,the,put,follow,api,which,creates,a,follower,index,and,then,the,follower,index,starts,following,the,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,put,follow,async,put,follow,request,request,request,options,options,action,listener,put,follow,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,put,follow,options,put,follow,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void putFollowAsync(PutFollowRequest request,                                RequestOptions options,                                ActionListener<PutFollowResponse> listener);1543305202;Asynchronously executes the put follow api, which creates a follower index and then the follower index starts_following the leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public void putFollowAsync(PutFollowRequest request,_                               RequestOptions options,_                               ActionListener<PutFollowResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::putFollow,_            options,_            PutFollowResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,executes,the,put,follow,api,which,creates,a,follower,index,and,then,the,follower,index,starts,following,the,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,void,put,follow,async,put,follow,request,request,request,options,options,action,listener,put,follow,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,put,follow,options,put,follow,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void putFollowAsync(PutFollowRequest request,                                RequestOptions options,                                ActionListener<PutFollowResponse> listener);1543475191;Asynchronously executes the put follow api, which creates a follower index and then the follower index starts_following the leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putFollowAsync(PutFollowRequest request,_                               RequestOptions options,_                               ActionListener<PutFollowResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::putFollow,_            options,_            PutFollowResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,executes,the,put,follow,api,which,creates,a,follower,index,and,then,the,follower,index,starts,following,the,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,follow,async,put,follow,request,request,request,options,options,action,listener,put,follow,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,put,follow,options,put,follow,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void putFollowAsync(PutFollowRequest request,                                RequestOptions options,                                ActionListener<PutFollowResponse> listener);1543905689;Asynchronously executes the put follow api, which creates a follower index and then the follower index starts_following the leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putFollowAsync(PutFollowRequest request,_                               RequestOptions options,_                               ActionListener<PutFollowResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::putFollow,_            options,_            PutFollowResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,executes,the,put,follow,api,which,creates,a,follower,index,and,then,the,follower,index,starts,following,the,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,follow,async,put,follow,request,request,request,options,options,action,listener,put,follow,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,put,follow,options,put,follow,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void putFollowAsync(PutFollowRequest request,                                RequestOptions options,                                ActionListener<PutFollowResponse> listener);1544012091;Asynchronously executes the put follow api, which creates a follower index and then the follower index starts_following the leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putFollowAsync(PutFollowRequest request,_                               RequestOptions options,_                               ActionListener<PutFollowResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::putFollow,_            options,_            PutFollowResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,executes,the,put,follow,api,which,creates,a,follower,index,and,then,the,follower,index,starts,following,the,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,follow,async,put,follow,request,request,request,options,options,action,listener,put,follow,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,put,follow,options,put,follow,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void putFollowAsync(PutFollowRequest request,                                RequestOptions options,                                ActionListener<PutFollowResponse> listener);1544381948;Asynchronously executes the put follow api, which creates a follower index and then the follower index starts_following the leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putFollowAsync(PutFollowRequest request,_                               RequestOptions options,_                               ActionListener<PutFollowResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::putFollow,_            options,_            PutFollowResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,executes,the,put,follow,api,which,creates,a,follower,index,and,then,the,follower,index,starts,following,the,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,follow,async,put,follow,request,request,request,options,options,action,listener,put,follow,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,put,follow,options,put,follow,response,from,xcontent,listener,collections,empty,set
CcrClient -> public void putFollowAsync(PutFollowRequest request,                                RequestOptions options,                                ActionListener<PutFollowResponse> listener);1550673460;Asynchronously executes the put follow api, which creates a follower index and then the follower index starts_following the leader index.__See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/ccr-put-follow.html">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putFollowAsync(PutFollowRequest request,_                               RequestOptions options,_                               ActionListener<PutFollowResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            request,_            CcrRequestConverters::putFollow,_            options,_            PutFollowResponse::fromXContent,_            listener,_            Collections.emptySet()_        )__    };asynchronously,executes,the,put,follow,api,which,creates,a,follower,index,and,then,the,follower,index,starts,following,the,leader,index,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,ccr,put,follow,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,follow,async,put,follow,request,request,request,options,options,action,listener,put,follow,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,ccr,request,converters,put,follow,options,put,follow,response,from,xcontent,listener,collections,empty,set
