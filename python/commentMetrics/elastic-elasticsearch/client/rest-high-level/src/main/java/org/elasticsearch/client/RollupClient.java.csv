commented;modifiers;parameterAmount;loc;comment;code
true;public;2;7;/**  * Put a rollup job into the cluster  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-put-job.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ ;/**  * Put a rollup job into the cluster  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-put-job.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ public AcknowledgedResponse putRollupJob(PutRollupJobRequest request, RequestOptions options) throws IOException {     return restHighLevelClient.performRequestAndParseEntity(request, RollupRequestConverters::putJob, options, AcknowledgedResponse::fromXContent, Collections.emptySet()). }
true;public;3;7;/**  * Asynchronously put a rollup job into the cluster  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-put-job.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @param listener the listener to be notified upon request completion  */ ;/**  * Asynchronously put a rollup job into the cluster  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-put-job.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @param listener the listener to be notified upon request completion  */ public void putRollupJobAsync(PutRollupJobRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {     restHighLevelClient.performRequestAsyncAndParseEntity(request, RollupRequestConverters::putJob, options, AcknowledgedResponse::fromXContent, listener, Collections.emptySet()). }
true;public;2;7;/**  * Start a rollup job  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-start-job.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ ;/**  * Start a rollup job  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-start-job.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ public StartRollupJobResponse startRollupJob(StartRollupJobRequest request, RequestOptions options) throws IOException {     return restHighLevelClient.performRequestAndParseEntity(request, RollupRequestConverters::startJob, options, StartRollupJobResponse::fromXContent, Collections.emptySet()). }
true;public;3;8;/**  * Asynchronously start a rollup job  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-start-job.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @param listener the listener to be notified upon request completion  */ ;/**  * Asynchronously start a rollup job  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-start-job.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @param listener the listener to be notified upon request completion  */ public void startRollupJobAsync(StartRollupJobRequest request, RequestOptions options, ActionListener<StartRollupJobResponse> listener) {     restHighLevelClient.performRequestAsyncAndParseEntity(request, RollupRequestConverters::startJob, options, StartRollupJobResponse::fromXContent, listener, Collections.emptySet()). }
true;public;2;7;/**  * Stop a rollup job  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-stop-job.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ ;/**  * Stop a rollup job  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-stop-job.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ public StopRollupJobResponse stopRollupJob(StopRollupJobRequest request, RequestOptions options) throws IOException {     return restHighLevelClient.performRequestAndParseEntity(request, RollupRequestConverters::stopJob, options, StopRollupJobResponse::fromXContent, Collections.emptySet()). }
true;public;3;8;/**  * Asynchronously stop a rollup job  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-stop-job.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @param listener the listener to be notified upon request completion  */ ;/**  * Asynchronously stop a rollup job  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-stop-job.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @param listener the listener to be notified upon request completion  */ public void stopRollupJobAsync(StopRollupJobRequest request, RequestOptions options, ActionListener<StopRollupJobResponse> listener) {     restHighLevelClient.performRequestAsyncAndParseEntity(request, RollupRequestConverters::stopJob, options, StopRollupJobResponse::fromXContent, listener, Collections.emptySet()). }
true;public;2;7;/**  * Delete a rollup job from the cluster  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-delete-job.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ ;/**  * Delete a rollup job from the cluster  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-delete-job.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ public AcknowledgedResponse deleteRollupJob(DeleteRollupJobRequest request, RequestOptions options) throws IOException {     return restHighLevelClient.performRequestAndParseEntity(request, RollupRequestConverters::deleteJob, options, AcknowledgedResponse::fromXContent, Collections.emptySet()). }
true;public;3;9;/**  * Asynchronously delete a rollup job from the cluster  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-delete-job.html">  *     The docs</a> for details.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @param listener the listener to be notified upon request completion  */ ;/**  * Asynchronously delete a rollup job from the cluster  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-delete-job.html">  *     The docs</a> for details.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @param listener the listener to be notified upon request completion  */ public void deleteRollupJobAsync(DeleteRollupJobRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {     restHighLevelClient.performRequestAsyncAndParseEntity(request, RollupRequestConverters::deleteJob, options, AcknowledgedResponse::fromXContent, listener, Collections.emptySet()). }
true;public;2;7;/**  * Get a rollup job from the cluster.  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-put-job.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ ;/**  * Get a rollup job from the cluster.  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-put-job.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ public GetRollupJobResponse getRollupJob(GetRollupJobRequest request, RequestOptions options) throws IOException {     return restHighLevelClient.performRequestAndParseEntity(request, RollupRequestConverters::getJob, options, GetRollupJobResponse::fromXContent, Collections.emptySet()). }
false;public;3;7;;/**  * Asynchronously get a rollup job from the cluster.  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-put-job.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @param listener the listener to be notified upon request completion  */ public void getRollupJobAsync(GetRollupJobRequest request, RequestOptions options, ActionListener<GetRollupJobResponse> listener) {     restHighLevelClient.performRequestAsyncAndParseEntity(request, RollupRequestConverters::getJob, options, GetRollupJobResponse::fromXContent, listener, Collections.emptySet()). }
true;public;2;8;/**  * Perform a rollup search.  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-search.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ ;/**  * Perform a rollup search.  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-search.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ public SearchResponse search(SearchRequest request, RequestOptions options) throws IOException {     return restHighLevelClient.performRequestAndParseEntity(request, RollupRequestConverters::search, options, SearchResponse::fromXContent, Collections.emptySet()). }
true;public;3;9;/**  * Perform a rollup search.  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-search.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @param listener the listener to be notified upon request completion  */ ;/**  * Perform a rollup search.  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-search.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @param listener the listener to be notified upon request completion  */ public void searchAsync(SearchRequest request, RequestOptions options, ActionListener<SearchResponse> listener) {     restHighLevelClient.performRequestAsyncAndParseEntity(request, RollupRequestConverters::search, options, SearchResponse::fromXContent, listener, Collections.emptySet()). }
true;public;2;7;/**  * Get the Rollup Capabilities of a target (non-rollup) index or pattern  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-get-rollup-caps.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ ;/**  * Get the Rollup Capabilities of a target (non-rollup) index or pattern  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-get-rollup-caps.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ public GetRollupCapsResponse getRollupCapabilities(GetRollupCapsRequest request, RequestOptions options) throws IOException {     return restHighLevelClient.performRequestAndParseEntity(request, RollupRequestConverters::getRollupCaps, options, GetRollupCapsResponse::fromXContent, Collections.emptySet()). }
true;public;3;9;/**  * Asynchronously Get the Rollup Capabilities of a target (non-rollup) index or pattern  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-put-job.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @param listener the listener to be notified upon request completion  */ ;/**  * Asynchronously Get the Rollup Capabilities of a target (non-rollup) index or pattern  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-put-job.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @param listener the listener to be notified upon request completion  */ public void getRollupCapabilitiesAsync(GetRollupCapsRequest request, RequestOptions options, ActionListener<GetRollupCapsResponse> listener) {     restHighLevelClient.performRequestAsyncAndParseEntity(request, RollupRequestConverters::getRollupCaps, options, GetRollupCapsResponse::fromXContent, listener, Collections.emptySet()). }
true;public;2;8;/**  * Get the Rollup Index Capabilities of a rollup index or pattern  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-get-rollup-index-caps.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ ;/**  * Get the Rollup Index Capabilities of a rollup index or pattern  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-get-rollup-index-caps.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @return the response  * @throws IOException in case there is a problem sending the request or parsing back the response  */ public GetRollupIndexCapsResponse getRollupIndexCapabilities(GetRollupIndexCapsRequest request, RequestOptions options) throws IOException {     return restHighLevelClient.performRequestAndParseEntity(request, RollupRequestConverters::getRollupIndexCaps, options, GetRollupIndexCapsResponse::fromXContent, Collections.emptySet()). }
true;public;3;9;/**  * Asynchronously Get the Rollup Index Capabilities of a rollup index or pattern  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-get-rollup-index-caps.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @param listener the listener to be notified upon request completion  */ ;/**  * Asynchronously Get the Rollup Index Capabilities of a rollup index or pattern  * See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/rollup-get-rollup-index-caps.html">  * the docs</a> for more.  * @param request the request  * @param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized  * @param listener the listener to be notified upon request completion  */ public void getRollupIndexCapabilitiesAsync(GetRollupIndexCapsRequest request, RequestOptions options, ActionListener<GetRollupIndexCapsResponse> listener) {     restHighLevelClient.performRequestAsyncAndParseEntity(request, RollupRequestConverters::getRollupIndexCaps, options, GetRollupIndexCapsResponse::fromXContent, listener, Collections.emptySet()). }
