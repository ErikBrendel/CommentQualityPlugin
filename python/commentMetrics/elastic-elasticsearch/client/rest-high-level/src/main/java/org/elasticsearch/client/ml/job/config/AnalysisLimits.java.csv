commented;modifiers;parameterAmount;loc;comment;code
true;public;0;4;/**  * Maximum size of the model in MB before the anomaly detector  * will drop new samples to prevent the model using any more  * memory.  *  * @return The set memory limit or <code>null</code> if not set  */ ;/**  * Maximum size of the model in MB before the anomaly detector  * will drop new samples to prevent the model using any more  * memory.  *  * @return The set memory limit or <code>null</code> if not set  */ @Nullable public Long getModelMemoryLimit() {     return modelMemoryLimit. }
true;public;0;4;/**  * Gets the limit to the number of examples that are stored per category  *  * @return the limit or <code>null</code> if not set  */ ;/**  * Gets the limit to the number of examples that are stored per category  *  * @return the limit or <code>null</code> if not set  */ @Nullable public Long getCategorizationExamplesLimit() {     return categorizationExamplesLimit. }
false;public;2;12;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     if (modelMemoryLimit != null) {         builder.field(MODEL_MEMORY_LIMIT.getPreferredName(), modelMemoryLimit + "mb").     }     if (categorizationExamplesLimit != null) {         builder.field(CATEGORIZATION_EXAMPLES_LIMIT.getPreferredName(), categorizationExamplesLimit).     }     builder.endObject().     return builder. }
true;public;1;14;/**  * Overridden equality test  */ ;/**  * Overridden equality test  */ @Override public boolean equals(Object other) {     if (this == other) {         return true.     }     if (other instanceof AnalysisLimits == false) {         return false.     }     AnalysisLimits that = (AnalysisLimits) other.     return Objects.equals(this.modelMemoryLimit, that.modelMemoryLimit) && Objects.equals(this.categorizationExamplesLimit, that.categorizationExamplesLimit). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(modelMemoryLimit, categorizationExamplesLimit). }
