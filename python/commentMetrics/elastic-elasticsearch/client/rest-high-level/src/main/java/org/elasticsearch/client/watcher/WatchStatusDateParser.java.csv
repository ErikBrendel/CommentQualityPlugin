commented;modifiers;parameterAmount;loc;comment;code
false;public,static;2;15;;public static ZonedDateTime parseDate(String fieldName, XContentParser parser) throws IOException {     XContentParser.Token token = parser.currentToken().     if (token == XContentParser.Token.VALUE_NUMBER) {         return Instant.ofEpochMilli(parser.longValue()).atZone(ZoneOffset.UTC).     }     if (token == XContentParser.Token.VALUE_STRING) {         ZonedDateTime dateTime = parseDate(parser.text()).         return dateTime.withZoneSameInstant(ZoneOffset.UTC).     }     if (token == XContentParser.Token.VALUE_NULL) {         return null.     }     throw new ElasticsearchParseException("could not parse date/time. expected date field [{}] " + "to be either a number or a string but found [{}] instead", fieldName, token). }
false;public,static;1;3;;public static ZonedDateTime parseDate(String text) {     return DateFormatters.from(FORMATTER.parse(text)). }
