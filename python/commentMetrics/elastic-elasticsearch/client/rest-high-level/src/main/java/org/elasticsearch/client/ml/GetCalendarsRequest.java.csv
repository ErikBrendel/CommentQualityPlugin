commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String getCalendarId() {     return calendarId. }
false;public;1;3;;public void setCalendarId(String calendarId) {     this.calendarId = calendarId. }
false;public;0;3;;public PageParams getPageParams() {     return pageParams. }
false;public;1;3;;public void setPageParams(PageParams pageParams) {     this.pageParams = pageParams. }
false;public;0;4;;@Override public ActionRequestValidationException validate() {     return null. }
false;public;2;12;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     if (calendarId != null) {         builder.field(Calendar.ID.getPreferredName(), calendarId).     }     if (pageParams != null) {         builder.field(PageParams.PAGE.getPreferredName(), pageParams).     }     builder.endObject().     return builder. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(calendarId, pageParams). }
false;public;1;11;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     GetCalendarsRequest other = (GetCalendarsRequest) obj.     return Objects.equals(calendarId, other.calendarId) && Objects.equals(pageParams, other.pageParams). }
