# id;timestamp;commentText;codeText;commentWords;codeWords
TasksClient -> public ListTasksResponse list(ListTasksRequest request, RequestOptions options) throws IOException;1528706846;Get current tasks using the Task Management API._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html"> Task Management API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ListTasksResponse list(ListTasksRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::listTasks, options,_                ListTasksResponse::fromXContent, emptySet())__    };get,current,tasks,using,the,task,management,api,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,tasks,html,task,management,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,list,tasks,response,list,list,tasks,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,list,tasks,options,list,tasks,response,from,xcontent,empty,set
TasksClient -> public ListTasksResponse list(ListTasksRequest request, RequestOptions options) throws IOException;1528893677;Get current tasks using the Task Management API._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html"> Task Management API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ListTasksResponse list(ListTasksRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::listTasks, options,_                ListTasksResponse::fromXContent, emptySet())__    };get,current,tasks,using,the,task,management,api,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,tasks,html,task,management,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,list,tasks,response,list,list,tasks,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,list,tasks,options,list,tasks,response,from,xcontent,empty,set
TasksClient -> public ListTasksResponse list(ListTasksRequest request, RequestOptions options) throws IOException;1536314350;Get current tasks using the Task Management API._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html"> Task Management API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ListTasksResponse list(ListTasksRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, TasksRequestConverters::listTasks, options,_                ListTasksResponse::fromXContent, emptySet())__    };get,current,tasks,using,the,task,management,api,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,tasks,html,task,management,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,list,tasks,response,list,list,tasks,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,tasks,request,converters,list,tasks,options,list,tasks,response,from,xcontent,empty,set
TasksClient -> public ListTasksResponse list(ListTasksRequest request, RequestOptions options) throws IOException;1542042438;Get current tasks using the Task Management API._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html"> Task Management API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ListTasksResponse list(ListTasksRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, TasksRequestConverters::listTasks, options,_                ListTasksResponse::fromXContent, emptySet())__    };get,current,tasks,using,the,task,management,api,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,tasks,html,task,management,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,list,tasks,response,list,list,tasks,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,tasks,request,converters,list,tasks,options,list,tasks,response,from,xcontent,empty,set
TasksClient -> public CancelTasksResponse cancel(CancelTasksRequest cancelTasksRequest, RequestOptions options ) throws IOException;1528706846;Cancel one or more cluster tasks using the Task Management API.__See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html"> Task Management API on elastic.co</a>_@param cancelTasksRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public CancelTasksResponse cancel(CancelTasksRequest cancelTasksRequest, RequestOptions options ) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            cancelTasksRequest,_            RequestConverters::cancelTasks,_            options,_            parser -> CancelTasksResponse.fromXContent(parser),_            emptySet()_        )__    };cancel,one,or,more,cluster,tasks,using,the,task,management,api,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,tasks,html,task,management,api,on,elastic,co,a,param,cancel,tasks,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,cancel,tasks,response,cancel,cancel,tasks,request,cancel,tasks,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,cancel,tasks,request,request,converters,cancel,tasks,options,parser,cancel,tasks,response,from,xcontent,parser,empty,set
TasksClient -> public CancelTasksResponse cancel(CancelTasksRequest cancelTasksRequest, RequestOptions options ) throws IOException;1528893677;Cancel one or more cluster tasks using the Task Management API.__See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html"> Task Management API on elastic.co</a>_@param cancelTasksRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public CancelTasksResponse cancel(CancelTasksRequest cancelTasksRequest, RequestOptions options ) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            cancelTasksRequest,_            RequestConverters::cancelTasks,_            options,_            CancelTasksResponse::fromXContent,_            emptySet()_        )__    };cancel,one,or,more,cluster,tasks,using,the,task,management,api,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,tasks,html,task,management,api,on,elastic,co,a,param,cancel,tasks,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,cancel,tasks,response,cancel,cancel,tasks,request,cancel,tasks,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,cancel,tasks,request,request,converters,cancel,tasks,options,cancel,tasks,response,from,xcontent,empty,set
TasksClient -> public CancelTasksResponse cancel(CancelTasksRequest cancelTasksRequest, RequestOptions options ) throws IOException;1536314350;Cancel one or more cluster tasks using the Task Management API.__See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html"> Task Management API on elastic.co</a>_@param cancelTasksRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public CancelTasksResponse cancel(CancelTasksRequest cancelTasksRequest, RequestOptions options ) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            cancelTasksRequest,_            TasksRequestConverters::cancelTasks,_            options,_            CancelTasksResponse::fromXContent,_            emptySet()_        )__    };cancel,one,or,more,cluster,tasks,using,the,task,management,api,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,tasks,html,task,management,api,on,elastic,co,a,param,cancel,tasks,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,cancel,tasks,response,cancel,cancel,tasks,request,cancel,tasks,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,cancel,tasks,request,tasks,request,converters,cancel,tasks,options,cancel,tasks,response,from,xcontent,empty,set
TasksClient -> public CancelTasksResponse cancel(CancelTasksRequest cancelTasksRequest, RequestOptions options ) throws IOException;1542042438;Cancel one or more cluster tasks using the Task Management API.__See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html"> Task Management API on elastic.co</a>_@param cancelTasksRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public CancelTasksResponse cancel(CancelTasksRequest cancelTasksRequest, RequestOptions options ) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(_            cancelTasksRequest,_            TasksRequestConverters::cancelTasks,_            options,_            CancelTasksResponse::fromXContent,_            emptySet()_        )__    };cancel,one,or,more,cluster,tasks,using,the,task,management,api,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,tasks,html,task,management,api,on,elastic,co,a,param,cancel,tasks,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,cancel,tasks,response,cancel,cancel,tasks,request,cancel,tasks,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,cancel,tasks,request,tasks,request,converters,cancel,tasks,options,cancel,tasks,response,from,xcontent,empty,set
TasksClient -> public void cancelAsync(CancelTasksRequest cancelTasksRequest, RequestOptions options, ActionListener<CancelTasksResponse> listener);1528706846;Asynchronously cancel one or more cluster tasks using the Task Management API.__See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html"> Task Management API on elastic.co</a>_@param cancelTasksRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void cancelAsync(CancelTasksRequest cancelTasksRequest, RequestOptions options, ActionListener<CancelTasksResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            cancelTasksRequest,_            RequestConverters::cancelTasks,_            options,_            parser -> CancelTasksResponse.fromXContent(parser),_            listener,_            emptySet()_        )__    };asynchronously,cancel,one,or,more,cluster,tasks,using,the,task,management,api,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,tasks,html,task,management,api,on,elastic,co,a,param,cancel,tasks,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,cancel,async,cancel,tasks,request,cancel,tasks,request,request,options,options,action,listener,cancel,tasks,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,cancel,tasks,request,request,converters,cancel,tasks,options,parser,cancel,tasks,response,from,xcontent,parser,listener,empty,set
TasksClient -> public void cancelAsync(CancelTasksRequest cancelTasksRequest, RequestOptions options, ActionListener<CancelTasksResponse> listener);1528893677;Asynchronously cancel one or more cluster tasks using the Task Management API.__See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html"> Task Management API on elastic.co</a>_@param cancelTasksRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void cancelAsync(CancelTasksRequest cancelTasksRequest, RequestOptions options, ActionListener<CancelTasksResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            cancelTasksRequest,_            RequestConverters::cancelTasks,_            options,_            CancelTasksResponse::fromXContent,_            listener,_            emptySet()_        )__    };asynchronously,cancel,one,or,more,cluster,tasks,using,the,task,management,api,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,tasks,html,task,management,api,on,elastic,co,a,param,cancel,tasks,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,cancel,async,cancel,tasks,request,cancel,tasks,request,request,options,options,action,listener,cancel,tasks,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,cancel,tasks,request,request,converters,cancel,tasks,options,cancel,tasks,response,from,xcontent,listener,empty,set
TasksClient -> public void cancelAsync(CancelTasksRequest cancelTasksRequest, RequestOptions options, ActionListener<CancelTasksResponse> listener);1536314350;Asynchronously cancel one or more cluster tasks using the Task Management API.__See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html"> Task Management API on elastic.co</a>_@param cancelTasksRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void cancelAsync(CancelTasksRequest cancelTasksRequest, RequestOptions options, ActionListener<CancelTasksResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            cancelTasksRequest,_            TasksRequestConverters::cancelTasks,_            options,_            CancelTasksResponse::fromXContent,_            listener,_            emptySet()_        )__    };asynchronously,cancel,one,or,more,cluster,tasks,using,the,task,management,api,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,tasks,html,task,management,api,on,elastic,co,a,param,cancel,tasks,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,cancel,async,cancel,tasks,request,cancel,tasks,request,request,options,options,action,listener,cancel,tasks,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,cancel,tasks,request,tasks,request,converters,cancel,tasks,options,cancel,tasks,response,from,xcontent,listener,empty,set
TasksClient -> public void cancelAsync(CancelTasksRequest cancelTasksRequest, RequestOptions options, ActionListener<CancelTasksResponse> listener);1542042438;Asynchronously cancel one or more cluster tasks using the Task Management API.__See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html"> Task Management API on elastic.co</a>_@param cancelTasksRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void cancelAsync(CancelTasksRequest cancelTasksRequest, RequestOptions options, ActionListener<CancelTasksResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(_            cancelTasksRequest,_            TasksRequestConverters::cancelTasks,_            options,_            CancelTasksResponse::fromXContent,_            listener,_            emptySet()_        )__    };asynchronously,cancel,one,or,more,cluster,tasks,using,the,task,management,api,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,tasks,html,task,management,api,on,elastic,co,a,param,cancel,tasks,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,cancel,async,cancel,tasks,request,cancel,tasks,request,request,options,options,action,listener,cancel,tasks,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,cancel,tasks,request,tasks,request,converters,cancel,tasks,options,cancel,tasks,response,from,xcontent,listener,empty,set
TasksClient -> public void listAsync(ListTasksRequest request, RequestOptions options, ActionListener<ListTasksResponse> listener);1528706846;Asynchronously get current tasks using the Task Management API._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html"> Task Management API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void listAsync(ListTasksRequest request, RequestOptions options, ActionListener<ListTasksResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::listTasks, options,_                ListTasksResponse::fromXContent, listener, emptySet())__    };asynchronously,get,current,tasks,using,the,task,management,api,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,tasks,html,task,management,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,list,async,list,tasks,request,request,request,options,options,action,listener,list,tasks,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,list,tasks,options,list,tasks,response,from,xcontent,listener,empty,set
TasksClient -> public void listAsync(ListTasksRequest request, RequestOptions options, ActionListener<ListTasksResponse> listener);1528893677;Asynchronously get current tasks using the Task Management API._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html"> Task Management API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void listAsync(ListTasksRequest request, RequestOptions options, ActionListener<ListTasksResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::listTasks, options,_                ListTasksResponse::fromXContent, listener, emptySet())__    };asynchronously,get,current,tasks,using,the,task,management,api,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,tasks,html,task,management,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,list,async,list,tasks,request,request,request,options,options,action,listener,list,tasks,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,list,tasks,options,list,tasks,response,from,xcontent,listener,empty,set
TasksClient -> public void listAsync(ListTasksRequest request, RequestOptions options, ActionListener<ListTasksResponse> listener);1536314350;Asynchronously get current tasks using the Task Management API._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html"> Task Management API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void listAsync(ListTasksRequest request, RequestOptions options, ActionListener<ListTasksResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, TasksRequestConverters::listTasks, options,_                ListTasksResponse::fromXContent, listener, emptySet())__    };asynchronously,get,current,tasks,using,the,task,management,api,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,tasks,html,task,management,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,list,async,list,tasks,request,request,request,options,options,action,listener,list,tasks,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,tasks,request,converters,list,tasks,options,list,tasks,response,from,xcontent,listener,empty,set
TasksClient -> public void listAsync(ListTasksRequest request, RequestOptions options, ActionListener<ListTasksResponse> listener);1542042438;Asynchronously get current tasks using the Task Management API._See_<a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/tasks.html"> Task Management API on elastic.co</a>_@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void listAsync(ListTasksRequest request, RequestOptions options, ActionListener<ListTasksResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, TasksRequestConverters::listTasks, options,_                ListTasksResponse::fromXContent, listener, emptySet())__    };asynchronously,get,current,tasks,using,the,task,management,api,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,tasks,html,task,management,api,on,elastic,co,a,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,list,async,list,tasks,request,request,request,options,options,action,listener,list,tasks,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,tasks,request,converters,list,tasks,options,list,tasks,response,from,xcontent,listener,empty,set
