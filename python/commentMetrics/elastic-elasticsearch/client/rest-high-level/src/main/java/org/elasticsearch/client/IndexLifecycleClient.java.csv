# id;timestamp;commentText;codeText;commentWords;codeWords
IndexLifecycleClient -> public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,                                                ActionListener<LifecycleManagementStatusResponse> listener);1536181401;Asynchronously get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request  the request_@param options  the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,_                                               ActionListener<LifecycleManagementStatusResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::lifecycleManagementStatus, options,_            LifecycleManagementStatusResponse::fromXContent, listener, emptySet())__    };asynchronously,get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,lifecycle,management,status,async,lifecycle,management,status,request,request,request,options,options,action,listener,lifecycle,management,status,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,                                                ActionListener<LifecycleManagementStatusResponse> listener);1536357842;Asynchronously get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request  the request_@param options  the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,_                                               ActionListener<LifecycleManagementStatusResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::lifecycleManagementStatus, options,_            LifecycleManagementStatusResponse::fromXContent, listener, emptySet())__    };asynchronously,get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,lifecycle,management,status,async,lifecycle,management,status,request,request,request,options,options,action,listener,lifecycle,management,status,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,                                                ActionListener<LifecycleManagementStatusResponse> listener);1536363694;Asynchronously get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request  the request_@param options  the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,_                                               ActionListener<LifecycleManagementStatusResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::lifecycleManagementStatus, options,_            LifecycleManagementStatusResponse::fromXContent, listener, emptySet())__    };asynchronously,get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,lifecycle,management,status,async,lifecycle,management,status,request,request,request,options,options,action,listener,lifecycle,management,status,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,                                                ActionListener<LifecycleManagementStatusResponse> listener);1539702726;Asynchronously get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request  the request_@param options  the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,_                                               ActionListener<LifecycleManagementStatusResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::lifecycleManagementStatus, options,_            LifecycleManagementStatusResponse::fromXContent, listener, emptySet())__    };asynchronously,get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,lifecycle,management,status,async,lifecycle,management,status,request,request,request,options,options,action,listener,lifecycle,management,status,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,                                                ActionListener<LifecycleManagementStatusResponse> listener);1539954289;Asynchronously get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request  the request_@param options  the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,_                                               ActionListener<LifecycleManagementStatusResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::lifecycleManagementStatus, options,_            LifecycleManagementStatusResponse::fromXContent, listener, emptySet())__    };asynchronously,get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,lifecycle,management,status,async,lifecycle,management,status,request,request,request,options,options,action,listener,lifecycle,management,status,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,                                                ActionListener<LifecycleManagementStatusResponse> listener);1540394099;Asynchronously get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request  the request_@param options  the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,_                                               ActionListener<LifecycleManagementStatusResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::lifecycleManagementStatus, options,_            LifecycleManagementStatusResponse::fromXContent, listener, emptySet())__    };asynchronously,get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,lifecycle,management,status,async,lifecycle,management,status,request,request,request,options,options,action,listener,lifecycle,management,status,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,                                                ActionListener<LifecycleManagementStatusResponse> listener);1540485349;Asynchronously get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request  the request_@param options  the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,_                                               ActionListener<LifecycleManagementStatusResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::lifecycleManagementStatus, options,_            LifecycleManagementStatusResponse::fromXContent, listener, emptySet())__    };asynchronously,get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,lifecycle,management,status,async,lifecycle,management,status,request,request,request,options,options,action,listener,lifecycle,management,status,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,                                                ActionListener<LifecycleManagementStatusResponse> listener);1542128576;Asynchronously get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request  the request_@param options  the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,_                                               ActionListener<LifecycleManagementStatusResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::lifecycleManagementStatus, options,_            LifecycleManagementStatusResponse::fromXContent, listener, emptySet())__    };asynchronously,get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,lifecycle,management,status,async,lifecycle,management,status,request,request,request,options,options,action,listener,lifecycle,management,status,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,                                                ActionListener<LifecycleManagementStatusResponse> listener);1542141653;Asynchronously get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request  the request_@param options  the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,_                                               ActionListener<LifecycleManagementStatusResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::lifecycleManagementStatus, options,_            LifecycleManagementStatusResponse::fromXContent, listener, emptySet())__    };asynchronously,get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,lifecycle,management,status,async,lifecycle,management,status,request,request,request,options,options,action,listener,lifecycle,management,status,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,                                                ActionListener<LifecycleManagementStatusResponse> listener);1542417390;Asynchronously get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request  the request_@param options  the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,_                                               ActionListener<LifecycleManagementStatusResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::lifecycleManagementStatus, options,_            LifecycleManagementStatusResponse::fromXContent, listener, emptySet())__    };asynchronously,get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,lifecycle,management,status,async,lifecycle,management,status,request,request,request,options,options,action,listener,lifecycle,management,status,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,                                                ActionListener<LifecycleManagementStatusResponse> listener);1542670232;Asynchronously get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request  the request_@param options  the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,_                                               ActionListener<LifecycleManagementStatusResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::lifecycleManagementStatus, options,_            LifecycleManagementStatusResponse::fromXContent, listener, emptySet())__    };asynchronously,get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,lifecycle,management,status,async,lifecycle,management,status,request,request,request,options,options,action,listener,lifecycle,management,status,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,                                                ActionListener<LifecycleManagementStatusResponse> listener);1542726327;Asynchronously get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request  the request_@param options  the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void lifecycleManagementStatusAsync(LifecycleManagementStatusRequest request, RequestOptions options,_                                               ActionListener<LifecycleManagementStatusResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::lifecycleManagementStatus, options,_            LifecycleManagementStatusResponse::fromXContent, listener, emptySet())__    };asynchronously,get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,lifecycle,management,status,async,lifecycle,management,status,request,request,request,options,options,action,listener,lifecycle,management,status,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<GetLifecyclePolicyResponse> listener);1536363694;Asynchronously retrieve one or more lifecycle policy definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<GetLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,lifecycle,policy,async,get,lifecycle,policy,request,request,request,options,options,action,listener,get,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<GetLifecyclePolicyResponse> listener);1539702726;Asynchronously retrieve one or more lifecycle policy definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<GetLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,lifecycle,policy,async,get,lifecycle,policy,request,request,request,options,options,action,listener,get,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<GetLifecyclePolicyResponse> listener);1539954289;Asynchronously retrieve one or more lifecycle policy definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<GetLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,lifecycle,policy,async,get,lifecycle,policy,request,request,request,options,options,action,listener,get,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<GetLifecyclePolicyResponse> listener);1540394099;Asynchronously retrieve one or more lifecycle policy definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<GetLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,lifecycle,policy,async,get,lifecycle,policy,request,request,request,options,options,action,listener,get,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<GetLifecyclePolicyResponse> listener);1540485349;Asynchronously retrieve one or more lifecycle policy definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<GetLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,lifecycle,policy,async,get,lifecycle,policy,request,request,request,options,options,action,listener,get,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<GetLifecyclePolicyResponse> listener);1542128576;Asynchronously retrieve one or more lifecycle policy definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<GetLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,lifecycle,policy,async,get,lifecycle,policy,request,request,request,options,options,action,listener,get,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<GetLifecyclePolicyResponse> listener);1542141653;Asynchronously retrieve one or more lifecycle policy definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<GetLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,lifecycle,policy,async,get,lifecycle,policy,request,request,request,options,options,action,listener,get,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<GetLifecyclePolicyResponse> listener);1542417390;Asynchronously retrieve one or more lifecycle policy definition. See_<a href="https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high-ilm-ilm-get-lifecycle-policy.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<GetLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,www,elastic,co,guide,en,elasticsearch,client,java,rest,current,java,rest,high,ilm,ilm,get,lifecycle,policy,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,lifecycle,policy,async,get,lifecycle,policy,request,request,request,options,options,action,listener,get,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<GetLifecyclePolicyResponse> listener);1542670232;Asynchronously retrieve one or more lifecycle policy definition. See_<a href="https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high-ilm-ilm-get-lifecycle-policy.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<GetLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,www,elastic,co,guide,en,elasticsearch,client,java,rest,current,java,rest,high,ilm,ilm,get,lifecycle,policy,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,lifecycle,policy,async,get,lifecycle,policy,request,request,request,options,options,action,listener,get,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<GetLifecyclePolicyResponse> listener);1542726327;Asynchronously retrieve one or more lifecycle policy definition. See_<a href="https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high-ilm-ilm-get-lifecycle-policy.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getLifecyclePolicyAsync(GetLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<GetLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,www,elastic,co,guide,en,elasticsearch,client,java,rest,current,java,rest,high,ilm,ilm,get,lifecycle,policy,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,lifecycle,policy,async,get,lifecycle,policy,request,request,request,options,options,action,listener,get,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public AcknowledgedResponse retryLifecycleStep(RetryLifecyclePolicyRequest request, RequestOptions options) throws IOException;1539954289;Retry lifecycle step for given indices_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse retryLifecycleStep(RetryLifecyclePolicyRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::retryLifecycle, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };retry,lifecycle,step,for,given,indices,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,retry,lifecycle,step,retry,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,retry,lifecycle,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse retryLifecycleStep(RetryLifecyclePolicyRequest request, RequestOptions options) throws IOException;1540394099;Retry lifecycle step for given indices_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse retryLifecycleStep(RetryLifecyclePolicyRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::retryLifecycle, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };retry,lifecycle,step,for,given,indices,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,retry,lifecycle,step,retry,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,retry,lifecycle,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse retryLifecycleStep(RetryLifecyclePolicyRequest request, RequestOptions options) throws IOException;1540485349;Retry lifecycle step for given indices_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse retryLifecycleStep(RetryLifecyclePolicyRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::retryLifecycle, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };retry,lifecycle,step,for,given,indices,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,retry,lifecycle,step,retry,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,retry,lifecycle,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse retryLifecycleStep(RetryLifecyclePolicyRequest request, RequestOptions options) throws IOException;1542128576;Retry lifecycle step for given indices_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse retryLifecycleStep(RetryLifecyclePolicyRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::retryLifecycle, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };retry,lifecycle,step,for,given,indices,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,retry,lifecycle,step,retry,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,retry,lifecycle,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse retryLifecycleStep(RetryLifecyclePolicyRequest request, RequestOptions options) throws IOException;1542141653;Retry lifecycle step for given indices_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse retryLifecycleStep(RetryLifecyclePolicyRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::retryLifecycle, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };retry,lifecycle,step,for,given,indices,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,retry,lifecycle,step,retry,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,retry,lifecycle,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse retryLifecycleStep(RetryLifecyclePolicyRequest request, RequestOptions options) throws IOException;1542417390;Retry lifecycle step for given indices_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse retryLifecycleStep(RetryLifecyclePolicyRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::retryLifecycle, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };retry,lifecycle,step,for,given,indices,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,retry,lifecycle,step,retry,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,retry,lifecycle,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse retryLifecycleStep(RetryLifecyclePolicyRequest request, RequestOptions options) throws IOException;1542670232;Retry lifecycle step for given indices_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse retryLifecycleStep(RetryLifecyclePolicyRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::retryLifecycle, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };retry,lifecycle,step,for,given,indices,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,retry,lifecycle,step,retry,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,retry,lifecycle,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public RemoveIndexLifecyclePolicyResponse removeIndexLifecyclePolicy(RemoveIndexLifecyclePolicyRequest request,             RequestOptions options) throws IOException;1539702726;Remove the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public RemoveIndexLifecyclePolicyResponse removeIndexLifecyclePolicy(RemoveIndexLifecyclePolicyRequest request,_            RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::removeIndexLifecyclePolicy, options,_                RemoveIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };remove,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,remove,index,lifecycle,policy,response,remove,index,lifecycle,policy,remove,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,remove,index,lifecycle,policy,options,remove,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public RemoveIndexLifecyclePolicyResponse removeIndexLifecyclePolicy(RemoveIndexLifecyclePolicyRequest request,             RequestOptions options) throws IOException;1539954289;Remove the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public RemoveIndexLifecyclePolicyResponse removeIndexLifecyclePolicy(RemoveIndexLifecyclePolicyRequest request,_            RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::removeIndexLifecyclePolicy, options,_                RemoveIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };remove,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,remove,index,lifecycle,policy,response,remove,index,lifecycle,policy,remove,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,remove,index,lifecycle,policy,options,remove,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public RemoveIndexLifecyclePolicyResponse removeIndexLifecyclePolicy(RemoveIndexLifecyclePolicyRequest request,             RequestOptions options) throws IOException;1540394099;Remove the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public RemoveIndexLifecyclePolicyResponse removeIndexLifecyclePolicy(RemoveIndexLifecyclePolicyRequest request,_            RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::removeIndexLifecyclePolicy, options,_                RemoveIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };remove,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,remove,index,lifecycle,policy,response,remove,index,lifecycle,policy,remove,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,remove,index,lifecycle,policy,options,remove,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public RemoveIndexLifecyclePolicyResponse removeIndexLifecyclePolicy(RemoveIndexLifecyclePolicyRequest request,             RequestOptions options) throws IOException;1540485349;Remove the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public RemoveIndexLifecyclePolicyResponse removeIndexLifecyclePolicy(RemoveIndexLifecyclePolicyRequest request,_            RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::removeIndexLifecyclePolicy,_            options, RemoveIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };remove,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,remove,index,lifecycle,policy,response,remove,index,lifecycle,policy,remove,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,remove,index,lifecycle,policy,options,remove,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public RemoveIndexLifecyclePolicyResponse removeIndexLifecyclePolicy(RemoveIndexLifecyclePolicyRequest request,             RequestOptions options) throws IOException;1542128576;Remove the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public RemoveIndexLifecyclePolicyResponse removeIndexLifecyclePolicy(RemoveIndexLifecyclePolicyRequest request,_            RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::removeIndexLifecyclePolicy,_            options, RemoveIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };remove,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,remove,index,lifecycle,policy,response,remove,index,lifecycle,policy,remove,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,remove,index,lifecycle,policy,options,remove,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public RemoveIndexLifecyclePolicyResponse removeIndexLifecyclePolicy(RemoveIndexLifecyclePolicyRequest request,             RequestOptions options) throws IOException;1542141653;Remove the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public RemoveIndexLifecyclePolicyResponse removeIndexLifecyclePolicy(RemoveIndexLifecyclePolicyRequest request,_            RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::removeIndexLifecyclePolicy,_            options, RemoveIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };remove,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,remove,index,lifecycle,policy,response,remove,index,lifecycle,policy,remove,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,remove,index,lifecycle,policy,options,remove,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public RemoveIndexLifecyclePolicyResponse removeIndexLifecyclePolicy(RemoveIndexLifecyclePolicyRequest request,             RequestOptions options) throws IOException;1542417390;Remove the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public RemoveIndexLifecyclePolicyResponse removeIndexLifecyclePolicy(RemoveIndexLifecyclePolicyRequest request,_            RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::removeIndexLifecyclePolicy,_            options, RemoveIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };remove,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,remove,index,lifecycle,policy,response,remove,index,lifecycle,policy,remove,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,remove,index,lifecycle,policy,options,remove,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public RemoveIndexLifecyclePolicyResponse removeIndexLifecyclePolicy(RemoveIndexLifecyclePolicyRequest request,             RequestOptions options) throws IOException;1542670232;Remove the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public RemoveIndexLifecyclePolicyResponse removeIndexLifecyclePolicy(RemoveIndexLifecyclePolicyRequest request,_            RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::removeIndexLifecyclePolicy,_            options, RemoveIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };remove,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,remove,index,lifecycle,policy,response,remove,index,lifecycle,policy,remove,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,remove,index,lifecycle,policy,options,remove,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public RemoveIndexLifecyclePolicyResponse removeIndexLifecyclePolicy(RemoveIndexLifecyclePolicyRequest request,             RequestOptions options) throws IOException;1542726327;Remove the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public RemoveIndexLifecyclePolicyResponse removeIndexLifecyclePolicy(RemoveIndexLifecyclePolicyRequest request,_            RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::removeIndexLifecyclePolicy,_            options, RemoveIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };remove,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,remove,index,lifecycle,policy,response,remove,index,lifecycle,policy,remove,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,remove,index,lifecycle,policy,options,remove,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,                                                    RequestOptions options) throws IOException;1535665876;Create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,_                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,lifecycle,policy,put,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,                                                    RequestOptions options) throws IOException;1536181401;Create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,_                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,lifecycle,policy,put,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,                                                    RequestOptions options) throws IOException;1536357842;Create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,_                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,lifecycle,policy,put,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,                                                    RequestOptions options) throws IOException;1536363694;Create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,_                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,lifecycle,policy,put,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,                                                    RequestOptions options) throws IOException;1539702726;Create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,_                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,lifecycle,policy,put,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,                                                    RequestOptions options) throws IOException;1539954289;Create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,_                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,lifecycle,policy,put,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,                                                    RequestOptions options) throws IOException;1540394099;Create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,_                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,lifecycle,policy,put,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,                                                    RequestOptions options) throws IOException;1540485349;Create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,_                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,lifecycle,policy,put,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,                                                    RequestOptions options) throws IOException;1542128576;Create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,_                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,lifecycle,policy,put,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,                                                    RequestOptions options) throws IOException;1542141653;Create or modify a lifecycle definition See <a href=_"https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high-ilm-ilm-put-lifecycle-policy.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,_                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };create,or,modify,a,lifecycle,definition,see,a,href,https,www,elastic,co,guide,en,elasticsearch,client,java,rest,current,java,rest,high,ilm,ilm,put,lifecycle,policy,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,lifecycle,policy,put,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,                                                    RequestOptions options) throws IOException;1542417390;Create or modify a lifecycle definition See <a href=_"https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high-ilm-ilm-put-lifecycle-policy.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,_                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };create,or,modify,a,lifecycle,definition,see,a,href,https,www,elastic,co,guide,en,elasticsearch,client,java,rest,current,java,rest,high,ilm,ilm,put,lifecycle,policy,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,lifecycle,policy,put,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,                                                    RequestOptions options) throws IOException;1542670232;Create or modify a lifecycle definition. See <a href=_"https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high-ilm-ilm-put-lifecycle-policy.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,_                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };create,or,modify,a,lifecycle,definition,see,a,href,https,www,elastic,co,guide,en,elasticsearch,client,java,rest,current,java,rest,high,ilm,ilm,put,lifecycle,policy,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,lifecycle,policy,put,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,                                                    RequestOptions options) throws IOException;1542726327;Create or modify a lifecycle definition. See <a href=_"https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high-ilm-ilm-put-lifecycle-policy.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse putLifecyclePolicy(PutLifecyclePolicyRequest request,_                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };create,or,modify,a,lifecycle,definition,see,a,href,https,www,elastic,co,guide,en,elasticsearch,client,java,rest,current,java,rest,high,ilm,ilm,put,lifecycle,policy,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,put,lifecycle,policy,put,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)         throws IOException;1536181401;Get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::lifecycleManagementStatus, options,_            LifecycleManagementStatusResponse::fromXContent, emptySet())__    };get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,lifecycle,management,status,response,lifecycle,management,status,lifecycle,management,status,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,empty,set
IndexLifecycleClient -> public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)         throws IOException;1536357842;Get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::lifecycleManagementStatus, options,_            LifecycleManagementStatusResponse::fromXContent, emptySet())__    };get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,lifecycle,management,status,response,lifecycle,management,status,lifecycle,management,status,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,empty,set
IndexLifecycleClient -> public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)         throws IOException;1536363694;Get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::lifecycleManagementStatus, options,_            LifecycleManagementStatusResponse::fromXContent, emptySet())__    };get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,lifecycle,management,status,response,lifecycle,management,status,lifecycle,management,status,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,empty,set
IndexLifecycleClient -> public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)         throws IOException;1539702726;Get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::lifecycleManagementStatus, options,_            LifecycleManagementStatusResponse::fromXContent, emptySet())__    };get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,lifecycle,management,status,response,lifecycle,management,status,lifecycle,management,status,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,empty,set
IndexLifecycleClient -> public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)         throws IOException;1539954289;Get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::lifecycleManagementStatus, options,_            LifecycleManagementStatusResponse::fromXContent, emptySet())__    };get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,lifecycle,management,status,response,lifecycle,management,status,lifecycle,management,status,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,empty,set
IndexLifecycleClient -> public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)         throws IOException;1540394099;Get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::lifecycleManagementStatus, options,_            LifecycleManagementStatusResponse::fromXContent, emptySet())__    };get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,lifecycle,management,status,response,lifecycle,management,status,lifecycle,management,status,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,empty,set
IndexLifecycleClient -> public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)         throws IOException;1540485349;Get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::lifecycleManagementStatus,_            options, LifecycleManagementStatusResponse::fromXContent, emptySet())__    };get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,lifecycle,management,status,response,lifecycle,management,status,lifecycle,management,status,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,empty,set
IndexLifecycleClient -> public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)         throws IOException;1542128576;Get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::lifecycleManagementStatus,_            options, LifecycleManagementStatusResponse::fromXContent, emptySet())__    };get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,lifecycle,management,status,response,lifecycle,management,status,lifecycle,management,status,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,empty,set
IndexLifecycleClient -> public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)         throws IOException;1542141653;Get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::lifecycleManagementStatus,_            options, LifecycleManagementStatusResponse::fromXContent, emptySet())__    };get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,lifecycle,management,status,response,lifecycle,management,status,lifecycle,management,status,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,empty,set
IndexLifecycleClient -> public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)         throws IOException;1542417390;Get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::lifecycleManagementStatus,_            options, LifecycleManagementStatusResponse::fromXContent, emptySet())__    };get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,lifecycle,management,status,response,lifecycle,management,status,lifecycle,management,status,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,empty,set
IndexLifecycleClient -> public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)         throws IOException;1542670232;Get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::lifecycleManagementStatus,_            options, LifecycleManagementStatusResponse::fromXContent, emptySet())__    };get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,lifecycle,management,status,response,lifecycle,management,status,lifecycle,management,status,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,empty,set
IndexLifecycleClient -> public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)         throws IOException;1542726327;Get the status of index lifecycle management_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more.__@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized;public LifecycleManagementStatusResponse lifecycleManagementStatus(LifecycleManagementStatusRequest request, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::lifecycleManagementStatus,_            options, LifecycleManagementStatusResponse::fromXContent, emptySet())__    };get,the,status,of,index,lifecycle,management,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized;public,lifecycle,management,status,response,lifecycle,management,status,lifecycle,management,status,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,lifecycle,management,status,options,lifecycle,management,status,response,from,xcontent,empty,set
IndexLifecycleClient -> public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1533843546;Asynchronously stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,stop,ilmasync,stop,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1535570086;Asynchronously stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,stop,ilmasync,stop,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1535654284;Asynchronously stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,stop,ilmasync,stop,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1535654812;Asynchronously stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,stop,ilmasync,stop,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1535665876;Asynchronously stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,stop,ilmasync,stop,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1536181401;Asynchronously stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,stop,ilmasync,stop,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1536357842;Asynchronously stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,stop,ilmasync,stop,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1536363694;Asynchronously stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,stop,ilmasync,stop,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1539702726;Asynchronously stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,stop,ilmasync,stop,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1539954289;Asynchronously stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,stop,ilmasync,stop,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1540394099;Asynchronously stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,stop,ilmasync,stop,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1540485349;Asynchronously stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,stop,ilmasync,stop,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1542128576;Asynchronously stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,stop,ilmasync,stop,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1542141653;Asynchronously stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,stop,ilmasync,stop,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1542417390;Asynchronously stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,stop,ilmasync,stop,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1542670232;Asynchronously stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,stop,ilmasync,stop,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1542726327;Asynchronously stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void stopILMAsync(StopILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,stop,ilmasync,stop,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,                                       ActionListener<ExplainLifecycleResponse> listener);1533806325;Asynchronously explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,_                                      ActionListener<ExplainLifecycleResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::explainLifecycle, options,_                ExplainLifecycleResponse::fromXContent, listener, emptySet())__    };asynchronously,explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,explain,lifecycle,async,explain,lifecycle,request,request,request,options,options,action,listener,explain,lifecycle,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,                                       ActionListener<ExplainLifecycleResponse> listener);1533843546;Asynchronously explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,_                                      ActionListener<ExplainLifecycleResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::explainLifecycle, options,_                ExplainLifecycleResponse::fromXContent, listener, emptySet())__    };asynchronously,explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,explain,lifecycle,async,explain,lifecycle,request,request,request,options,options,action,listener,explain,lifecycle,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,                                       ActionListener<ExplainLifecycleResponse> listener);1535570086;Asynchronously explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,_                                      ActionListener<ExplainLifecycleResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::explainLifecycle, options,_                ExplainLifecycleResponse::fromXContent, listener, emptySet())__    };asynchronously,explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,explain,lifecycle,async,explain,lifecycle,request,request,request,options,options,action,listener,explain,lifecycle,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,                                       ActionListener<ExplainLifecycleResponse> listener);1535654284;Asynchronously explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,_                                      ActionListener<ExplainLifecycleResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::explainLifecycle, options,_                ExplainLifecycleResponse::fromXContent, listener, emptySet())__    };asynchronously,explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,explain,lifecycle,async,explain,lifecycle,request,request,request,options,options,action,listener,explain,lifecycle,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,                                       ActionListener<ExplainLifecycleResponse> listener);1535654812;Asynchronously explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,_                                      ActionListener<ExplainLifecycleResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::explainLifecycle, options,_                ExplainLifecycleResponse::fromXContent, listener, emptySet())__    };asynchronously,explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,explain,lifecycle,async,explain,lifecycle,request,request,request,options,options,action,listener,explain,lifecycle,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,                                       ActionListener<ExplainLifecycleResponse> listener);1535665876;Asynchronously explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,_                                      ActionListener<ExplainLifecycleResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::explainLifecycle, options,_                ExplainLifecycleResponse::fromXContent, listener, emptySet())__    };asynchronously,explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,explain,lifecycle,async,explain,lifecycle,request,request,request,options,options,action,listener,explain,lifecycle,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,                                       ActionListener<ExplainLifecycleResponse> listener);1536181401;Asynchronously explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,_                                      ActionListener<ExplainLifecycleResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::explainLifecycle, options,_                ExplainLifecycleResponse::fromXContent, listener, emptySet())__    };asynchronously,explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,explain,lifecycle,async,explain,lifecycle,request,request,request,options,options,action,listener,explain,lifecycle,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,                                       ActionListener<ExplainLifecycleResponse> listener);1536357842;Asynchronously explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,_                                      ActionListener<ExplainLifecycleResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::explainLifecycle, options,_                ExplainLifecycleResponse::fromXContent, listener, emptySet())__    };asynchronously,explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,explain,lifecycle,async,explain,lifecycle,request,request,request,options,options,action,listener,explain,lifecycle,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,                                       ActionListener<ExplainLifecycleResponse> listener);1536363694;Asynchronously explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,_                                      ActionListener<ExplainLifecycleResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::explainLifecycle, options,_                ExplainLifecycleResponse::fromXContent, listener, emptySet())__    };asynchronously,explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,explain,lifecycle,async,explain,lifecycle,request,request,request,options,options,action,listener,explain,lifecycle,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,                                       ActionListener<ExplainLifecycleResponse> listener);1539702726;Asynchronously explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,_                                      ActionListener<ExplainLifecycleResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::explainLifecycle, options,_                ExplainLifecycleResponse::fromXContent, listener, emptySet())__    };asynchronously,explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,explain,lifecycle,async,explain,lifecycle,request,request,request,options,options,action,listener,explain,lifecycle,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,                                       ActionListener<ExplainLifecycleResponse> listener);1539954289;Asynchronously explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,_                                      ActionListener<ExplainLifecycleResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::explainLifecycle, options,_                ExplainLifecycleResponse::fromXContent, listener, emptySet())__    };asynchronously,explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,explain,lifecycle,async,explain,lifecycle,request,request,request,options,options,action,listener,explain,lifecycle,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,                                       ActionListener<ExplainLifecycleResponse> listener);1540394099;Asynchronously explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,_                                      ActionListener<ExplainLifecycleResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::explainLifecycle, options,_                ExplainLifecycleResponse::fromXContent, listener, emptySet())__    };asynchronously,explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,explain,lifecycle,async,explain,lifecycle,request,request,request,options,options,action,listener,explain,lifecycle,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,                                       ActionListener<ExplainLifecycleResponse> listener);1540485349;Asynchronously explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,_                                      ActionListener<ExplainLifecycleResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::explainLifecycle, options,_                ExplainLifecycleResponse::fromXContent, listener, emptySet())__    };asynchronously,explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,explain,lifecycle,async,explain,lifecycle,request,request,request,options,options,action,listener,explain,lifecycle,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,                                       ActionListener<ExplainLifecycleResponse> listener);1542128576;Asynchronously explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,_                                      ActionListener<ExplainLifecycleResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::explainLifecycle, options,_                ExplainLifecycleResponse::fromXContent, listener, emptySet())__    };asynchronously,explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,explain,lifecycle,async,explain,lifecycle,request,request,request,options,options,action,listener,explain,lifecycle,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,                                       ActionListener<ExplainLifecycleResponse> listener);1542141653;Asynchronously explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,_                                      ActionListener<ExplainLifecycleResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::explainLifecycle, options,_                ExplainLifecycleResponse::fromXContent, listener, emptySet())__    };asynchronously,explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,explain,lifecycle,async,explain,lifecycle,request,request,request,options,options,action,listener,explain,lifecycle,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,                                       ActionListener<ExplainLifecycleResponse> listener);1542417390;Asynchronously explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,_                                      ActionListener<ExplainLifecycleResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::explainLifecycle, options,_                ExplainLifecycleResponse::fromXContent, listener, emptySet())__    };asynchronously,explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,explain,lifecycle,async,explain,lifecycle,request,request,request,options,options,action,listener,explain,lifecycle,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,                                       ActionListener<ExplainLifecycleResponse> listener);1542670232;Asynchronously explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,_                                      ActionListener<ExplainLifecycleResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::explainLifecycle, options,_                ExplainLifecycleResponse::fromXContent, listener, emptySet())__    };asynchronously,explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,explain,lifecycle,async,explain,lifecycle,request,request,request,options,options,action,listener,explain,lifecycle,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,                                       ActionListener<ExplainLifecycleResponse> listener);1542726327;Asynchronously explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void explainLifecycleAsync(ExplainLifecycleRequest request, RequestOptions options,_                                      ActionListener<ExplainLifecycleResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::explainLifecycle, options,_                ExplainLifecycleResponse::fromXContent, listener, emptySet())__    };asynchronously,explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,explain,lifecycle,async,explain,lifecycle,request,request,request,options,options,action,listener,explain,lifecycle,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void retryLifecycleStepAsync(RetryLifecyclePolicyRequest request, RequestOptions options,         ActionListener<AcknowledgedResponse> listener);1539954289;Asynchronously retry the lifecycle step for given indices_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void retryLifecycleStepAsync(RetryLifecyclePolicyRequest request, RequestOptions options,_        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::retryLifecycle, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,retry,the,lifecycle,step,for,given,indices,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,retry,lifecycle,step,async,retry,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,retry,lifecycle,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void retryLifecycleStepAsync(RetryLifecyclePolicyRequest request, RequestOptions options,         ActionListener<AcknowledgedResponse> listener);1540394099;Asynchronously retry the lifecycle step for given indices_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void retryLifecycleStepAsync(RetryLifecyclePolicyRequest request, RequestOptions options,_        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::retryLifecycle, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,retry,the,lifecycle,step,for,given,indices,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,retry,lifecycle,step,async,retry,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,retry,lifecycle,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void retryLifecycleStepAsync(RetryLifecyclePolicyRequest request, RequestOptions options,         ActionListener<AcknowledgedResponse> listener);1540485349;Asynchronously retry the lifecycle step for given indices_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void retryLifecycleStepAsync(RetryLifecyclePolicyRequest request, RequestOptions options,_        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::retryLifecycle, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,retry,the,lifecycle,step,for,given,indices,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,retry,lifecycle,step,async,retry,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,retry,lifecycle,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void retryLifecycleStepAsync(RetryLifecyclePolicyRequest request, RequestOptions options,         ActionListener<AcknowledgedResponse> listener);1542128576;Asynchronously retry the lifecycle step for given indices_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void retryLifecycleStepAsync(RetryLifecyclePolicyRequest request, RequestOptions options,_        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::retryLifecycle, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,retry,the,lifecycle,step,for,given,indices,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,retry,lifecycle,step,async,retry,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,retry,lifecycle,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void retryLifecycleStepAsync(RetryLifecyclePolicyRequest request, RequestOptions options,         ActionListener<AcknowledgedResponse> listener);1542141653;Asynchronously retry the lifecycle step for given indices_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void retryLifecycleStepAsync(RetryLifecyclePolicyRequest request, RequestOptions options,_        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::retryLifecycle, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,retry,the,lifecycle,step,for,given,indices,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,retry,lifecycle,step,async,retry,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,retry,lifecycle,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void retryLifecycleStepAsync(RetryLifecyclePolicyRequest request, RequestOptions options,         ActionListener<AcknowledgedResponse> listener);1542417390;Asynchronously retry the lifecycle step for given indices_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void retryLifecycleStepAsync(RetryLifecyclePolicyRequest request, RequestOptions options,_        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::retryLifecycle, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,retry,the,lifecycle,step,for,given,indices,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,retry,lifecycle,step,async,retry,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,retry,lifecycle,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void retryLifecycleStepAsync(RetryLifecyclePolicyRequest request, RequestOptions options,         ActionListener<AcknowledgedResponse> listener);1542670232;Asynchronously retry the lifecycle step for given indices_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void retryLifecycleStepAsync(RetryLifecyclePolicyRequest request, RequestOptions options,_        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::retryLifecycle, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,retry,the,lifecycle,step,for,given,indices,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,retry,lifecycle,step,async,retry,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,retry,lifecycle,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1533843546;Asynchronously start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,start,ilmasync,start,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1535570086;Asynchronously start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,start,ilmasync,start,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1535654284;Asynchronously start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,start,ilmasync,start,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1535654812;Asynchronously start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,start,ilmasync,start,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1535665876;Asynchronously start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,start,ilmasync,start,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1536181401;Asynchronously start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,start,ilmasync,start,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1536357842;Asynchronously start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,start,ilmasync,start,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1536363694;Asynchronously start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,start,ilmasync,start,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1539702726;Asynchronously start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,start,ilmasync,start,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1539954289;Asynchronously start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,start,ilmasync,start,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1540394099;Asynchronously start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,start,ilmasync,start,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1540485349;Asynchronously start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,start,ilmasync,start,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,start,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1542128576;Asynchronously start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,start,ilmasync,start,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,start,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1542141653;Asynchronously start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,start,ilmasync,start,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,start,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1542417390;Asynchronously start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,start,ilmasync,start,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,start,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1542670232;Asynchronously start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,start,ilmasync,start,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,start,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener);1542726327;Asynchronously start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void startILMAsync(StartILMRequest request, RequestOptions options, ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,start,ilmasync,start,ilmrequest,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,start,ilm,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException;1533843546;Stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,ilm,stop,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException;1535570086;Stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,ilm,stop,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException;1535654284;Stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,ilm,stop,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException;1535654812;Stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,ilm,stop,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException;1535665876;Stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,ilm,stop,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException;1536181401;Stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,ilm,stop,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException;1536357842;Stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,ilm,stop,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException;1536363694;Stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,ilm,stop,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException;1539702726;Stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,ilm,stop,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException;1539954289;Stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,ilm,stop,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException;1540394099;Stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,ilm,stop,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException;1540485349;Stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,ilm,stop,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException;1542128576;Stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,ilm,stop,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException;1542141653;Stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,ilm,stop,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException;1542417390;Stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,ilm,stop,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException;1542670232;Stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,ilm,stop,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException;1542726327;Stop the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse stopILM(StopILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::stopILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };stop,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,stop,ilm,stop,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,stop,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,                                                       RequestOptions options) throws IOException;1535570086;Delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,_                                                      RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,lifecycle,policy,delete,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,                                                       RequestOptions options) throws IOException;1535654284;Delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,_                                                      RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,lifecycle,policy,delete,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,                                                       RequestOptions options) throws IOException;1535654812;Delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,_                                                      RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,lifecycle,policy,delete,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,                                                       RequestOptions options) throws IOException;1535665876;Delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,_                                                      RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,lifecycle,policy,delete,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,                                                       RequestOptions options) throws IOException;1536181401;Delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,_                                                      RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,lifecycle,policy,delete,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,                                                       RequestOptions options) throws IOException;1536357842;Delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,_                                                      RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,lifecycle,policy,delete,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,                                                       RequestOptions options) throws IOException;1536363694;Delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,_                                                      RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,lifecycle,policy,delete,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,                                                       RequestOptions options) throws IOException;1539702726;Delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,_                                                      RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,lifecycle,policy,delete,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,                                                       RequestOptions options) throws IOException;1539954289;Delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,_                                                      RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,lifecycle,policy,delete,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,                                                       RequestOptions options) throws IOException;1540394099;Delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,_                                                      RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,lifecycle,policy,delete,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,                                                       RequestOptions options) throws IOException;1540485349;Delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,_                                                      RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,lifecycle,policy,delete,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,                                                       RequestOptions options) throws IOException;1542128576;Delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,_                                                      RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,lifecycle,policy,delete,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,                                                       RequestOptions options) throws IOException;1542141653;Delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,_                                                      RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,lifecycle,policy,delete,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,                                                       RequestOptions options) throws IOException;1542417390;Delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,_                                                      RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,lifecycle,policy,delete,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,                                                       RequestOptions options) throws IOException;1542670232;Delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,_                                                      RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,lifecycle,policy,delete,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,                                                       RequestOptions options) throws IOException;1542726327;Delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request,_                                                      RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,lifecycle,policy,delete,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException;1533806325;Explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::explainLifecycle, options,_            ExplainLifecycleResponse::fromXContent, emptySet())__    };explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,explain,lifecycle,response,explain,lifecycle,explain,lifecycle,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,empty,set
IndexLifecycleClient -> public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException;1533843546;Explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::explainLifecycle, options,_            ExplainLifecycleResponse::fromXContent, emptySet())__    };explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,explain,lifecycle,response,explain,lifecycle,explain,lifecycle,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,empty,set
IndexLifecycleClient -> public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException;1535570086;Explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::explainLifecycle, options,_            ExplainLifecycleResponse::fromXContent, emptySet())__    };explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,explain,lifecycle,response,explain,lifecycle,explain,lifecycle,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,empty,set
IndexLifecycleClient -> public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException;1535654284;Explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::explainLifecycle, options,_            ExplainLifecycleResponse::fromXContent, emptySet())__    };explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,explain,lifecycle,response,explain,lifecycle,explain,lifecycle,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,empty,set
IndexLifecycleClient -> public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException;1535654812;Explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::explainLifecycle, options,_            ExplainLifecycleResponse::fromXContent, emptySet())__    };explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,explain,lifecycle,response,explain,lifecycle,explain,lifecycle,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,empty,set
IndexLifecycleClient -> public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException;1535665876;Explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::explainLifecycle, options,_            ExplainLifecycleResponse::fromXContent, emptySet())__    };explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,explain,lifecycle,response,explain,lifecycle,explain,lifecycle,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,empty,set
IndexLifecycleClient -> public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException;1536181401;Explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::explainLifecycle, options,_            ExplainLifecycleResponse::fromXContent, emptySet())__    };explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,explain,lifecycle,response,explain,lifecycle,explain,lifecycle,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,empty,set
IndexLifecycleClient -> public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException;1536357842;Explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::explainLifecycle, options,_            ExplainLifecycleResponse::fromXContent, emptySet())__    };explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,explain,lifecycle,response,explain,lifecycle,explain,lifecycle,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,empty,set
IndexLifecycleClient -> public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException;1536363694;Explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::explainLifecycle, options,_            ExplainLifecycleResponse::fromXContent, emptySet())__    };explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,explain,lifecycle,response,explain,lifecycle,explain,lifecycle,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,empty,set
IndexLifecycleClient -> public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException;1539702726;Explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::explainLifecycle, options,_            ExplainLifecycleResponse::fromXContent, emptySet())__    };explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,explain,lifecycle,response,explain,lifecycle,explain,lifecycle,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,empty,set
IndexLifecycleClient -> public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException;1539954289;Explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::explainLifecycle, options,_            ExplainLifecycleResponse::fromXContent, emptySet())__    };explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,explain,lifecycle,response,explain,lifecycle,explain,lifecycle,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,empty,set
IndexLifecycleClient -> public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException;1540394099;Explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::explainLifecycle, options,_            ExplainLifecycleResponse::fromXContent, emptySet())__    };explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,explain,lifecycle,response,explain,lifecycle,explain,lifecycle,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,empty,set
IndexLifecycleClient -> public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException;1540485349;Explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::explainLifecycle, options,_            ExplainLifecycleResponse::fromXContent, emptySet())__    };explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,explain,lifecycle,response,explain,lifecycle,explain,lifecycle,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,empty,set
IndexLifecycleClient -> public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException;1542128576;Explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::explainLifecycle, options,_            ExplainLifecycleResponse::fromXContent, emptySet())__    };explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,explain,lifecycle,response,explain,lifecycle,explain,lifecycle,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,empty,set
IndexLifecycleClient -> public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException;1542141653;Explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::explainLifecycle, options,_            ExplainLifecycleResponse::fromXContent, emptySet())__    };explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,explain,lifecycle,response,explain,lifecycle,explain,lifecycle,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,empty,set
IndexLifecycleClient -> public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException;1542417390;Explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::explainLifecycle, options,_            ExplainLifecycleResponse::fromXContent, emptySet())__    };explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,explain,lifecycle,response,explain,lifecycle,explain,lifecycle,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,empty,set
IndexLifecycleClient -> public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException;1542670232;Explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::explainLifecycle, options,_            ExplainLifecycleResponse::fromXContent, emptySet())__    };explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,explain,lifecycle,response,explain,lifecycle,explain,lifecycle,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,empty,set
IndexLifecycleClient -> public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException;1542726327;Explain the lifecycle state for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public ExplainLifecycleResponse explainLifecycle(ExplainLifecycleRequest request,RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::explainLifecycle, options,_            ExplainLifecycleResponse::fromXContent, emptySet())__    };explain,the,lifecycle,state,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,explain,lifecycle,response,explain,lifecycle,explain,lifecycle,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,explain,lifecycle,options,explain,lifecycle,response,from,xcontent,empty,set
IndexLifecycleClient -> public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,                                                          RequestOptions options) throws IOException;1536363694;Retrieve one or more lifecycle policy definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,_                                                         RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, emptySet())__    };retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,lifecycle,policy,response,get,lifecycle,policy,get,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,                                                          RequestOptions options) throws IOException;1539702726;Retrieve one or more lifecycle policy definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,_                                                         RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, emptySet())__    };retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,lifecycle,policy,response,get,lifecycle,policy,get,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,                                                          RequestOptions options) throws IOException;1539954289;Retrieve one or more lifecycle policy definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,_                                                         RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, emptySet())__    };retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,lifecycle,policy,response,get,lifecycle,policy,get,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,                                                          RequestOptions options) throws IOException;1540394099;Retrieve one or more lifecycle policy definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,_                                                         RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, emptySet())__    };retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,lifecycle,policy,response,get,lifecycle,policy,get,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,                                                          RequestOptions options) throws IOException;1540485349;Retrieve one or more lifecycle policy definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,_                                                         RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, emptySet())__    };retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,lifecycle,policy,response,get,lifecycle,policy,get,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,                                                          RequestOptions options) throws IOException;1542128576;Retrieve one or more lifecycle policy definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,_                                                         RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, emptySet())__    };retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,lifecycle,policy,response,get,lifecycle,policy,get,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,                                                          RequestOptions options) throws IOException;1542141653;Retrieve one or more lifecycle policy definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,_                                                         RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, emptySet())__    };retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,lifecycle,policy,response,get,lifecycle,policy,get,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,                                                          RequestOptions options) throws IOException;1542417390;Retrieve one or more lifecycle policy definition. See_<a href="https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high-ilm-ilm-get-lifecycle-policy.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,_                                                         RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, emptySet())__    };retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,www,elastic,co,guide,en,elasticsearch,client,java,rest,current,java,rest,high,ilm,ilm,get,lifecycle,policy,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,lifecycle,policy,response,get,lifecycle,policy,get,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,                                                          RequestOptions options) throws IOException;1542670232;Retrieve one or more lifecycle policy definition. See_<a href="https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high-ilm-ilm-get-lifecycle-policy.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,_                                                         RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, emptySet())__    };retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,www,elastic,co,guide,en,elasticsearch,client,java,rest,current,java,rest,high,ilm,ilm,get,lifecycle,policy,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,lifecycle,policy,response,get,lifecycle,policy,get,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,                                                          RequestOptions options) throws IOException;1542726327;Retrieve one or more lifecycle policy definition. See_<a href="https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high-ilm-ilm-get-lifecycle-policy.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetLifecyclePolicyResponse getLifecyclePolicy(GetLifecyclePolicyRequest request,_                                                         RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::getLifecyclePolicy, options,_            GetLifecyclePolicyResponse::fromXContent, emptySet())__    };retrieve,one,or,more,lifecycle,policy,definition,see,a,href,https,www,elastic,co,guide,en,elasticsearch,client,java,rest,current,java,rest,high,ilm,ilm,get,lifecycle,policy,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,lifecycle,policy,response,get,lifecycle,policy,get,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,get,lifecycle,policy,options,get,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,                                              ActionListener<SetIndexLifecyclePolicyResponse> listener);1532991445;Asynchronously set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,_                                             ActionListener<SetIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,set,index,lifecycle,policy,async,set,index,lifecycle,policy,request,request,request,options,options,action,listener,set,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,                                              ActionListener<SetIndexLifecyclePolicyResponse> listener);1533806325;Asynchronously set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,_                                             ActionListener<SetIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,set,index,lifecycle,policy,async,set,index,lifecycle,policy,request,request,request,options,options,action,listener,set,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,                                              ActionListener<SetIndexLifecyclePolicyResponse> listener);1533843546;Asynchronously set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,_                                             ActionListener<SetIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,set,index,lifecycle,policy,async,set,index,lifecycle,policy,request,request,request,options,options,action,listener,set,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,                                              ActionListener<SetIndexLifecyclePolicyResponse> listener);1535570086;Asynchronously set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,_                                             ActionListener<SetIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,set,index,lifecycle,policy,async,set,index,lifecycle,policy,request,request,request,options,options,action,listener,set,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,                                              ActionListener<SetIndexLifecyclePolicyResponse> listener);1535654284;Asynchronously set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,_                                             ActionListener<SetIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,set,index,lifecycle,policy,async,set,index,lifecycle,policy,request,request,request,options,options,action,listener,set,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,                                              ActionListener<SetIndexLifecyclePolicyResponse> listener);1535654812;Asynchronously set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,_                                             ActionListener<SetIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,set,index,lifecycle,policy,async,set,index,lifecycle,policy,request,request,request,options,options,action,listener,set,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,                                              ActionListener<SetIndexLifecyclePolicyResponse> listener);1535665876;Asynchronously set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,_                                             ActionListener<SetIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,set,index,lifecycle,policy,async,set,index,lifecycle,policy,request,request,request,options,options,action,listener,set,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,                                              ActionListener<SetIndexLifecyclePolicyResponse> listener);1536181401;Asynchronously set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,_                                             ActionListener<SetIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,set,index,lifecycle,policy,async,set,index,lifecycle,policy,request,request,request,options,options,action,listener,set,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,                                              ActionListener<SetIndexLifecyclePolicyResponse> listener);1536357842;Asynchronously set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,_                                             ActionListener<SetIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,set,index,lifecycle,policy,async,set,index,lifecycle,policy,request,request,request,options,options,action,listener,set,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,                                              ActionListener<SetIndexLifecyclePolicyResponse> listener);1536363694;Asynchronously set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,_                                             ActionListener<SetIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,set,index,lifecycle,policy,async,set,index,lifecycle,policy,request,request,request,options,options,action,listener,set,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,                                              ActionListener<SetIndexLifecyclePolicyResponse> listener);1539702726;Asynchronously set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,_                                             ActionListener<SetIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,set,index,lifecycle,policy,async,set,index,lifecycle,policy,request,request,request,options,options,action,listener,set,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,                                              ActionListener<SetIndexLifecyclePolicyResponse> listener);1539954289;Asynchronously set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void setIndexLifecyclePolicyAsync(SetIndexLifecyclePolicyRequest request, RequestOptions options,_                                             ActionListener<SetIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,set,index,lifecycle,policy,async,set,index,lifecycle,policy,request,request,request,options,options,action,listener,set,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException;1533843546;Start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,ilm,start,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException;1535570086;Start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,ilm,start,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException;1535654284;Start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,ilm,start,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException;1535654812;Start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,ilm,start,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException;1535665876;Start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,ilm,start,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException;1536181401;Start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,ilm,start,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException;1536357842;Start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,ilm,start,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException;1536363694;Start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,ilm,start,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException;1539702726;Start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,ilm,start,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException;1539954289;Start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,ilm,start,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException;1540394099;Start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,ilm,start,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,start,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException;1540485349;Start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,ilm,start,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,start,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException;1542128576;Start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,ilm,start,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,start,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException;1542141653;Start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,ilm,start,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,start,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException;1542417390;Start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,ilm,start,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,start,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException;1542670232;Start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,ilm,start,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,start,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException;1542726327;Start the Index Lifecycle Management feature._See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse startILM(StartILMRequest request, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, IndexLifecycleRequestConverters::startILM, options,_                AcknowledgedResponse::fromXContent, emptySet())__    };start,the,index,lifecycle,management,feature,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,start,ilm,start,ilmrequest,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,index,lifecycle,request,converters,start,ilm,options,acknowledged,response,from,xcontent,empty,set
IndexLifecycleClient -> public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,                                            ActionListener<AcknowledgedResponse> listener);1535570086;Asynchronously delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,_                                           ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,lifecycle,policy,async,delete,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,                                            ActionListener<AcknowledgedResponse> listener);1535654284;Asynchronously delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,_                                           ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,lifecycle,policy,async,delete,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,                                            ActionListener<AcknowledgedResponse> listener);1535654812;Asynchronously delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,_                                           ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,lifecycle,policy,async,delete,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,                                            ActionListener<AcknowledgedResponse> listener);1535665876;Asynchronously delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,_                                           ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,lifecycle,policy,async,delete,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,                                            ActionListener<AcknowledgedResponse> listener);1536181401;Asynchronously delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,_                                           ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,lifecycle,policy,async,delete,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,                                            ActionListener<AcknowledgedResponse> listener);1536357842;Asynchronously delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,_                                           ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,lifecycle,policy,async,delete,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,                                            ActionListener<AcknowledgedResponse> listener);1536363694;Asynchronously delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,_                                           ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,lifecycle,policy,async,delete,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,                                            ActionListener<AcknowledgedResponse> listener);1539702726;Asynchronously delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,_                                           ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,lifecycle,policy,async,delete,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,                                            ActionListener<AcknowledgedResponse> listener);1539954289;Asynchronously delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,_                                           ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,lifecycle,policy,async,delete,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,                                            ActionListener<AcknowledgedResponse> listener);1540394099;Asynchronously delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,_                                           ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,lifecycle,policy,async,delete,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,                                            ActionListener<AcknowledgedResponse> listener);1540485349;Asynchronously delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,_                                           ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,lifecycle,policy,async,delete,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,                                            ActionListener<AcknowledgedResponse> listener);1542128576;Asynchronously delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,_                                           ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,lifecycle,policy,async,delete,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,                                            ActionListener<AcknowledgedResponse> listener);1542141653;Asynchronously delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,_                                           ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,lifecycle,policy,async,delete,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,                                            ActionListener<AcknowledgedResponse> listener);1542417390;Asynchronously delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,_                                           ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,lifecycle,policy,async,delete,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,                                            ActionListener<AcknowledgedResponse> listener);1542670232;Asynchronously delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,_                                           ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,lifecycle,policy,async,delete,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,                                            ActionListener<AcknowledgedResponse> listener);1542726327;Asynchronously delete a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteLifecyclePolicyAsync(DeleteLifecyclePolicyRequest request, RequestOptions options,_                                           ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::deleteLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,delete,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,lifecycle,policy,async,delete,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,delete,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<AcknowledgedResponse> listener);1535665876;Asynchronously create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,lifecycle,policy,async,put,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<AcknowledgedResponse> listener);1536181401;Asynchronously create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,lifecycle,policy,async,put,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<AcknowledgedResponse> listener);1536357842;Asynchronously create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,lifecycle,policy,async,put,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<AcknowledgedResponse> listener);1536363694;Asynchronously create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,lifecycle,policy,async,put,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<AcknowledgedResponse> listener);1539702726;Asynchronously create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,lifecycle,policy,async,put,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<AcknowledgedResponse> listener);1539954289;Asynchronously create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,lifecycle,policy,async,put,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<AcknowledgedResponse> listener);1540394099;Asynchronously create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,lifecycle,policy,async,put,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<AcknowledgedResponse> listener);1540485349;Asynchronously create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,lifecycle,policy,async,put,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<AcknowledgedResponse> listener);1542128576;Asynchronously create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,lifecycle,policy,async,put,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<AcknowledgedResponse> listener);1542141653;Asynchronously create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,lifecycle,policy,async,put,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<AcknowledgedResponse> listener);1542417390;Asynchronously create or modify a lifecycle definition_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,create,or,modify,a,lifecycle,definition,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,lifecycle,policy,async,put,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<AcknowledgedResponse> listener);1542670232;Asynchronously create or modify a lifecycle definition. See <a href=_"https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high-ilm-ilm-put-lifecycle-policy.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,create,or,modify,a,lifecycle,definition,see,a,href,https,www,elastic,co,guide,en,elasticsearch,client,java,rest,current,java,rest,high,ilm,ilm,put,lifecycle,policy,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,lifecycle,policy,async,put,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,                                         ActionListener<AcknowledgedResponse> listener);1542726327;Asynchronously create or modify a lifecycle definition. See <a href=_"https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high-ilm-ilm-put-lifecycle-policy.html">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void putLifecyclePolicyAsync(PutLifecyclePolicyRequest request, RequestOptions options,_                                        ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::putLifecyclePolicy, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,create,or,modify,a,lifecycle,definition,see,a,href,https,www,elastic,co,guide,en,elasticsearch,client,java,rest,current,java,rest,high,ilm,ilm,put,lifecycle,policy,html,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,put,lifecycle,policy,async,put,lifecycle,policy,request,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,put,lifecycle,policy,options,acknowledged,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void removeIndexLifecyclePolicyAsync(RemoveIndexLifecyclePolicyRequest request, RequestOptions options,             ActionListener<RemoveIndexLifecyclePolicyResponse> listener);1539702726;Asynchronously remove the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void removeIndexLifecyclePolicyAsync(RemoveIndexLifecyclePolicyRequest request, RequestOptions options,_            ActionListener<RemoveIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::removeIndexLifecyclePolicy, options,_                RemoveIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,remove,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,remove,index,lifecycle,policy,async,remove,index,lifecycle,policy,request,request,request,options,options,action,listener,remove,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,remove,index,lifecycle,policy,options,remove,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void removeIndexLifecyclePolicyAsync(RemoveIndexLifecyclePolicyRequest request, RequestOptions options,             ActionListener<RemoveIndexLifecyclePolicyResponse> listener);1539954289;Asynchronously remove the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void removeIndexLifecyclePolicyAsync(RemoveIndexLifecyclePolicyRequest request, RequestOptions options,_            ActionListener<RemoveIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::removeIndexLifecyclePolicy, options,_                RemoveIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,remove,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,remove,index,lifecycle,policy,async,remove,index,lifecycle,policy,request,request,request,options,options,action,listener,remove,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,remove,index,lifecycle,policy,options,remove,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void removeIndexLifecyclePolicyAsync(RemoveIndexLifecyclePolicyRequest request, RequestOptions options,             ActionListener<RemoveIndexLifecyclePolicyResponse> listener);1540394099;Asynchronously remove the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void removeIndexLifecyclePolicyAsync(RemoveIndexLifecyclePolicyRequest request, RequestOptions options,_            ActionListener<RemoveIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, RequestConverters::removeIndexLifecyclePolicy, options,_                RemoveIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,remove,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,remove,index,lifecycle,policy,async,remove,index,lifecycle,policy,request,request,request,options,options,action,listener,remove,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,request,converters,remove,index,lifecycle,policy,options,remove,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void removeIndexLifecyclePolicyAsync(RemoveIndexLifecyclePolicyRequest request, RequestOptions options,             ActionListener<RemoveIndexLifecyclePolicyResponse> listener);1540485349;Asynchronously remove the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void removeIndexLifecyclePolicyAsync(RemoveIndexLifecyclePolicyRequest request, RequestOptions options,_            ActionListener<RemoveIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::removeIndexLifecyclePolicy, options,_                RemoveIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,remove,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,remove,index,lifecycle,policy,async,remove,index,lifecycle,policy,request,request,request,options,options,action,listener,remove,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,remove,index,lifecycle,policy,options,remove,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void removeIndexLifecyclePolicyAsync(RemoveIndexLifecyclePolicyRequest request, RequestOptions options,             ActionListener<RemoveIndexLifecyclePolicyResponse> listener);1542128576;Asynchronously remove the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void removeIndexLifecyclePolicyAsync(RemoveIndexLifecyclePolicyRequest request, RequestOptions options,_            ActionListener<RemoveIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::removeIndexLifecyclePolicy, options,_                RemoveIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,remove,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,remove,index,lifecycle,policy,async,remove,index,lifecycle,policy,request,request,request,options,options,action,listener,remove,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,remove,index,lifecycle,policy,options,remove,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void removeIndexLifecyclePolicyAsync(RemoveIndexLifecyclePolicyRequest request, RequestOptions options,             ActionListener<RemoveIndexLifecyclePolicyResponse> listener);1542141653;Asynchronously remove the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void removeIndexLifecyclePolicyAsync(RemoveIndexLifecyclePolicyRequest request, RequestOptions options,_            ActionListener<RemoveIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::removeIndexLifecyclePolicy, options,_                RemoveIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,remove,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,remove,index,lifecycle,policy,async,remove,index,lifecycle,policy,request,request,request,options,options,action,listener,remove,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,remove,index,lifecycle,policy,options,remove,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void removeIndexLifecyclePolicyAsync(RemoveIndexLifecyclePolicyRequest request, RequestOptions options,             ActionListener<RemoveIndexLifecyclePolicyResponse> listener);1542417390;Asynchronously remove the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void removeIndexLifecyclePolicyAsync(RemoveIndexLifecyclePolicyRequest request, RequestOptions options,_            ActionListener<RemoveIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::removeIndexLifecyclePolicy, options,_                RemoveIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,remove,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,remove,index,lifecycle,policy,async,remove,index,lifecycle,policy,request,request,request,options,options,action,listener,remove,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,remove,index,lifecycle,policy,options,remove,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void removeIndexLifecyclePolicyAsync(RemoveIndexLifecyclePolicyRequest request, RequestOptions options,             ActionListener<RemoveIndexLifecyclePolicyResponse> listener);1542670232;Asynchronously remove the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void removeIndexLifecyclePolicyAsync(RemoveIndexLifecyclePolicyRequest request, RequestOptions options,_            ActionListener<RemoveIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::removeIndexLifecyclePolicy, options,_                RemoveIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,remove,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,remove,index,lifecycle,policy,async,remove,index,lifecycle,policy,request,request,request,options,options,action,listener,remove,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,remove,index,lifecycle,policy,options,remove,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public void removeIndexLifecyclePolicyAsync(RemoveIndexLifecyclePolicyRequest request, RequestOptions options,             ActionListener<RemoveIndexLifecyclePolicyResponse> listener);1542726327;Asynchronously remove the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void removeIndexLifecyclePolicyAsync(RemoveIndexLifecyclePolicyRequest request, RequestOptions options,_            ActionListener<RemoveIndexLifecyclePolicyResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(request, IndexLifecycleRequestConverters::removeIndexLifecyclePolicy, options,_                RemoveIndexLifecyclePolicyResponse::fromXContent, listener, emptySet())__    };asynchronously,remove,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,remove,index,lifecycle,policy,async,remove,index,lifecycle,policy,request,request,request,options,options,action,listener,remove,index,lifecycle,policy,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,request,index,lifecycle,request,converters,remove,index,lifecycle,policy,options,remove,index,lifecycle,policy,response,from,xcontent,listener,empty,set
IndexLifecycleClient -> public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,                                                                    RequestOptions options) throws IOException;1532991445;Set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,_                                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,set,index,lifecycle,policy,response,set,index,lifecycle,policy,set,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,                                                                    RequestOptions options) throws IOException;1533806325;Set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,_                                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,set,index,lifecycle,policy,response,set,index,lifecycle,policy,set,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,                                                                    RequestOptions options) throws IOException;1533843546;Set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,_                                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,set,index,lifecycle,policy,response,set,index,lifecycle,policy,set,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,                                                                    RequestOptions options) throws IOException;1535570086;Set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,_                                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,set,index,lifecycle,policy,response,set,index,lifecycle,policy,set,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,                                                                    RequestOptions options) throws IOException;1535654284;Set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,_                                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,set,index,lifecycle,policy,response,set,index,lifecycle,policy,set,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,                                                                    RequestOptions options) throws IOException;1535654812;Set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,_                                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,set,index,lifecycle,policy,response,set,index,lifecycle,policy,set,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,                                                                    RequestOptions options) throws IOException;1535665876;Set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,_                                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,set,index,lifecycle,policy,response,set,index,lifecycle,policy,set,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,                                                                    RequestOptions options) throws IOException;1536181401;Set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,_                                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,set,index,lifecycle,policy,response,set,index,lifecycle,policy,set,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,                                                                    RequestOptions options) throws IOException;1536357842;Set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,_                                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,set,index,lifecycle,policy,response,set,index,lifecycle,policy,set,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,                                                                    RequestOptions options) throws IOException;1536363694;Set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,_                                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,set,index,lifecycle,policy,response,set,index,lifecycle,policy,set,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,                                                                    RequestOptions options) throws IOException;1539702726;Set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,_                                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,set,index,lifecycle,policy,response,set,index,lifecycle,policy,set,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,empty,set
IndexLifecycleClient -> public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,                                                                    RequestOptions options) throws IOException;1539954289;Set the index lifecycle policy for an index_See <a href="https://fix-me-when-we-have-docs.com">_the docs</a> for more._@param request the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SetIndexLifecyclePolicyResponse setIndexLifecyclePolicy(SetIndexLifecyclePolicyRequest request,_                                                                   RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(request, RequestConverters::setIndexLifecyclePolicy, options,_            SetIndexLifecyclePolicyResponse::fromXContent, emptySet())__    };set,the,index,lifecycle,policy,for,an,index,see,a,href,https,fix,me,when,we,have,docs,com,the,docs,a,for,more,param,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,set,index,lifecycle,policy,response,set,index,lifecycle,policy,set,index,lifecycle,policy,request,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,request,request,converters,set,index,lifecycle,policy,options,set,index,lifecycle,policy,response,from,xcontent,empty,set
