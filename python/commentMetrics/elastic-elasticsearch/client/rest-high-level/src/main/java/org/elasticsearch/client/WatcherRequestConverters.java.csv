commented;modifiers;parameterAmount;loc;comment;code
false;static;1;8;;static Request startWatchService(StartWatchServiceRequest startWatchServiceRequest) {     String endpoint = new RequestConverters.EndpointBuilder().addPathPartAsIs("_watcher").addPathPartAsIs("_start").build().     return new Request(HttpPost.METHOD_NAME, endpoint). }
false;static;1;8;;static Request stopWatchService(StopWatchServiceRequest stopWatchServiceRequest) {     String endpoint = new RequestConverters.EndpointBuilder().addPathPartAsIs("_watcher").addPathPartAsIs("_stop").build().     return new Request(HttpPost.METHOD_NAME, endpoint). }
false;static;1;18;;static Request putWatch(PutWatchRequest putWatchRequest) {     String endpoint = new RequestConverters.EndpointBuilder().addPathPartAsIs("_watcher", "watch").addPathPart(putWatchRequest.getId()).build().     Request request = new Request(HttpPut.METHOD_NAME, endpoint).     RequestConverters.Params params = new RequestConverters.Params(request).withIfSeqNo(putWatchRequest.ifSeqNo()).withIfPrimaryTerm(putWatchRequest.ifPrimaryTerm()).     if (putWatchRequest.isActive() == false) {         params.putParam("active", "false").     }     ContentType contentType = RequestConverters.createContentType(putWatchRequest.xContentType()).     BytesReference source = putWatchRequest.getSource().     request.setEntity(new NByteArrayEntity(source.toBytesRef().bytes, 0, source.length(), contentType)).     return request. }
false;static;1;8;;static Request getWatch(GetWatchRequest getWatchRequest) {     String endpoint = new RequestConverters.EndpointBuilder().addPathPartAsIs("_watcher", "watch").addPathPart(getWatchRequest.getId()).build().     return new Request(HttpGet.METHOD_NAME, endpoint). }
false;static;1;9;;static Request deactivateWatch(DeactivateWatchRequest deactivateWatchRequest) {     String endpoint = new RequestConverters.EndpointBuilder().addPathPartAsIs("_watcher").addPathPartAsIs("watch").addPathPart(deactivateWatchRequest.getWatchId()).addPathPartAsIs("_deactivate").build().     return new Request(HttpPut.METHOD_NAME, endpoint). }
false;static;1;9;;static Request deleteWatch(DeleteWatchRequest deleteWatchRequest) {     String endpoint = new RequestConverters.EndpointBuilder().addPathPartAsIs("_watcher", "watch").addPathPart(deleteWatchRequest.getId()).build().     Request request = new Request(HttpDelete.METHOD_NAME, endpoint).     return request. }
false;static;1;21;;static Request executeWatch(ExecuteWatchRequest executeWatchRequest) throws IOException {     String endpoint = new RequestConverters.EndpointBuilder().addPathPartAsIs("_watcher", "watch").addPathPart(// will ignore if ID is null     executeWatchRequest.getId()).addPathPartAsIs("_execute").build().     Request request = new Request(HttpPost.METHOD_NAME, endpoint).     RequestConverters.Params params = new RequestConverters.Params(request).     if (executeWatchRequest.isDebug()) {         params.putParam("debug", "true").     }     if (executeWatchRequest.ignoreCondition()) {         params.putParam("ignore_condition", "true").     }     if (executeWatchRequest.recordExecution()) {         params.putParam("record_execution", "true").     }     request.setEntity(RequestConverters.createEntity(executeWatchRequest, XContentType.JSON)).     return request. }
false;public,static;1;10;;public static Request ackWatch(AckWatchRequest ackWatchRequest) {     String endpoint = new RequestConverters.EndpointBuilder().addPathPartAsIs("_watcher", "watch").addPathPart(ackWatchRequest.getWatchId()).addPathPartAsIs("_ack").addCommaSeparatedPathParts(ackWatchRequest.getActionIds()).build().     Request request = new Request(HttpPut.METHOD_NAME, endpoint).     return request. }
false;static;1;9;;static Request activateWatch(ActivateWatchRequest activateWatchRequest) {     String endpoint = new RequestConverters.EndpointBuilder().addPathPartAsIs("_watcher", "watch").addPathPart(activateWatchRequest.getWatchId()).addPathPartAsIs("_activate").build().     Request request = new Request(HttpPut.METHOD_NAME, endpoint).     return request. }
false;static;1;20;;static Request watcherStats(WatcherStatsRequest watcherStatsRequest) {     RequestConverters.EndpointBuilder builder = new RequestConverters.EndpointBuilder().addPathPartAsIs("_watcher", "stats").     String endpoint = builder.build().     Request request = new Request(HttpGet.METHOD_NAME, endpoint).     RequestConverters.Params parameters = new RequestConverters.Params(request).     StringBuilder metric = new StringBuilder().     if (watcherStatsRequest.includeCurrentWatches()) {         metric.append("current_watches").     }     if (watcherStatsRequest.includeQueuedWatches()) {         if (metric.length() > 0) {             metric.append(",").         }         metric.append("queued_watches").     }     if (metric.length() > 0) {         parameters.putParam("metric", metric.toString()).     }     return request. }
