commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;3;;public static FlushJobResponse fromXContent(XContentParser parser) throws IOException {     return PARSER.parse(parser, null). }
true;public;0;3;/**  * Was the job successfully flushed or not  */ ;/**  * Was the job successfully flushed or not  */ public boolean isFlushed() {     return flushed. }
true;public;0;4;/**  * Provides the timestamp (in milliseconds-since-the-epoch) of the end of the last bucket that was processed.  */ ;/**  * Provides the timestamp (in milliseconds-since-the-epoch) of the end of the last bucket that was processed.  */ @Nullable public Date getLastFinalizedBucketEnd() {     return lastFinalizedBucketEnd. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(flushed, lastFinalizedBucketEnd). }
false;public;1;13;;@Override public boolean equals(Object other) {     if (this == other) {         return true.     }     if (other == null || getClass() != other.getClass()) {         return false.     }     FlushJobResponse that = (FlushJobResponse) other.     return that.flushed == flushed && Objects.equals(lastFinalizedBucketEnd, that.lastFinalizedBucketEnd). }
false;public;2;11;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(FLUSHED.getPreferredName(), flushed).     if (lastFinalizedBucketEnd != null) {         builder.timeField(LAST_FINALIZED_BUCKET_END.getPreferredName(), LAST_FINALIZED_BUCKET_END.getPreferredName() + "_string", lastFinalizedBucketEnd.getTime()).     }     builder.endObject().     return builder. }
