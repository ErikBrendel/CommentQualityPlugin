# id;timestamp;commentText;codeText;commentWords;codeWords
SnapshotClient -> public void deleteAsync(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options,                             ActionListener<DeleteSnapshotResponse> listener);1529508649;Asynchronously deletes a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param deleteSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteAsync(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options,_                            ActionListener<DeleteSnapshotResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(deleteSnapshotRequest, RequestConverters::deleteSnapshot, options,_            DeleteSnapshotResponse::fromXContent, listener, emptySet())__    };asynchronously,deletes,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,async,delete,snapshot,request,delete,snapshot,request,request,options,options,action,listener,delete,snapshot,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,delete,snapshot,request,request,converters,delete,snapshot,options,delete,snapshot,response,from,xcontent,listener,empty,set
SnapshotClient -> public void deleteAsync(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options,                             ActionListener<DeleteSnapshotResponse> listener);1531179852;Asynchronously deletes a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param deleteSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteAsync(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options,_                            ActionListener<DeleteSnapshotResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(deleteSnapshotRequest, RequestConverters::deleteSnapshot, options,_            DeleteSnapshotResponse::fromXContent, listener, emptySet())__    };asynchronously,deletes,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,async,delete,snapshot,request,delete,snapshot,request,request,options,options,action,listener,delete,snapshot,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,delete,snapshot,request,request,converters,delete,snapshot,options,delete,snapshot,response,from,xcontent,listener,empty,set
SnapshotClient -> public void deleteAsync(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options,                             ActionListener<DeleteSnapshotResponse> listener);1531382259;Asynchronously deletes a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param deleteSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteAsync(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options,_                            ActionListener<DeleteSnapshotResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(deleteSnapshotRequest, RequestConverters::deleteSnapshot, options,_            DeleteSnapshotResponse::fromXContent, listener, emptySet())__    };asynchronously,deletes,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,async,delete,snapshot,request,delete,snapshot,request,request,options,options,action,listener,delete,snapshot,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,delete,snapshot,request,request,converters,delete,snapshot,options,delete,snapshot,response,from,xcontent,listener,empty,set
SnapshotClient -> public void deleteAsync(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options,                             ActionListener<DeleteSnapshotResponse> listener);1531729807;Asynchronously deletes a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param deleteSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteAsync(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options,_                            ActionListener<DeleteSnapshotResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(deleteSnapshotRequest, RequestConverters::deleteSnapshot, options,_            DeleteSnapshotResponse::fromXContent, listener, emptySet())__    };asynchronously,deletes,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,async,delete,snapshot,request,delete,snapshot,request,request,options,options,action,listener,delete,snapshot,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,delete,snapshot,request,request,converters,delete,snapshot,options,delete,snapshot,response,from,xcontent,listener,empty,set
SnapshotClient -> public void deleteAsync(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options,                             ActionListener<DeleteSnapshotResponse> listener);1531910483;Asynchronously deletes a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param deleteSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteAsync(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options,_                            ActionListener<DeleteSnapshotResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(deleteSnapshotRequest, RequestConverters::deleteSnapshot, options,_            DeleteSnapshotResponse::fromXContent, listener, emptySet())__    };asynchronously,deletes,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,async,delete,snapshot,request,delete,snapshot,request,request,options,options,action,listener,delete,snapshot,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,delete,snapshot,request,request,converters,delete,snapshot,options,delete,snapshot,response,from,xcontent,listener,empty,set
SnapshotClient -> public void deleteAsync(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options,                             ActionListener<DeleteSnapshotResponse> listener);1532456624;Asynchronously deletes a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param deleteSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteAsync(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options,_                            ActionListener<DeleteSnapshotResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(deleteSnapshotRequest, RequestConverters::deleteSnapshot, options,_            DeleteSnapshotResponse::fromXContent, listener, emptySet())__    };asynchronously,deletes,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,async,delete,snapshot,request,delete,snapshot,request,request,options,options,action,listener,delete,snapshot,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,delete,snapshot,request,request,converters,delete,snapshot,options,delete,snapshot,response,from,xcontent,listener,empty,set
SnapshotClient -> public DeleteSnapshotResponse delete(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options) throws IOException;1529508649;Deletes a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param deleteSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteSnapshotResponse delete(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(deleteSnapshotRequest, RequestConverters::deleteSnapshot, options,_            DeleteSnapshotResponse::fromXContent, emptySet())__    };deletes,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,snapshot,response,delete,delete,snapshot,request,delete,snapshot,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,delete,snapshot,request,request,converters,delete,snapshot,options,delete,snapshot,response,from,xcontent,empty,set
SnapshotClient -> public DeleteSnapshotResponse delete(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options) throws IOException;1531179852;Deletes a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param deleteSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteSnapshotResponse delete(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(deleteSnapshotRequest, RequestConverters::deleteSnapshot, options,_            DeleteSnapshotResponse::fromXContent, emptySet())__    };deletes,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,snapshot,response,delete,delete,snapshot,request,delete,snapshot,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,delete,snapshot,request,request,converters,delete,snapshot,options,delete,snapshot,response,from,xcontent,empty,set
SnapshotClient -> public DeleteSnapshotResponse delete(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options) throws IOException;1531382259;Deletes a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param deleteSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteSnapshotResponse delete(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(deleteSnapshotRequest, RequestConverters::deleteSnapshot, options,_            DeleteSnapshotResponse::fromXContent, emptySet())__    };deletes,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,snapshot,response,delete,delete,snapshot,request,delete,snapshot,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,delete,snapshot,request,request,converters,delete,snapshot,options,delete,snapshot,response,from,xcontent,empty,set
SnapshotClient -> public DeleteSnapshotResponse delete(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options) throws IOException;1531729807;Deletes a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param deleteSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteSnapshotResponse delete(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(deleteSnapshotRequest, RequestConverters::deleteSnapshot, options,_            DeleteSnapshotResponse::fromXContent, emptySet())__    };deletes,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,snapshot,response,delete,delete,snapshot,request,delete,snapshot,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,delete,snapshot,request,request,converters,delete,snapshot,options,delete,snapshot,response,from,xcontent,empty,set
SnapshotClient -> public DeleteSnapshotResponse delete(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options) throws IOException;1531910483;Deletes a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param deleteSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteSnapshotResponse delete(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(deleteSnapshotRequest, RequestConverters::deleteSnapshot, options,_            DeleteSnapshotResponse::fromXContent, emptySet())__    };deletes,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,snapshot,response,delete,delete,snapshot,request,delete,snapshot,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,delete,snapshot,request,request,converters,delete,snapshot,options,delete,snapshot,response,from,xcontent,empty,set
SnapshotClient -> public DeleteSnapshotResponse delete(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options) throws IOException;1532456624;Deletes a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param deleteSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteSnapshotResponse delete(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(deleteSnapshotRequest, RequestConverters::deleteSnapshot, options,_            DeleteSnapshotResponse::fromXContent, emptySet())__    };deletes,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,snapshot,response,delete,delete,snapshot,request,delete,snapshot,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,delete,snapshot,request,request,converters,delete,snapshot,options,delete,snapshot,response,from,xcontent,empty,set
SnapshotClient -> public DeleteRepositoryResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options)         throws IOException;1528706846;Deletes a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param deleteRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteRepositoryResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository, options,_            DeleteRepositoryResponse::fromXContent, emptySet())__    };deletes,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,repository,response,delete,repository,delete,repository,request,delete,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,delete,repository,request,request,converters,delete,repository,options,delete,repository,response,from,xcontent,empty,set
SnapshotClient -> public DeleteRepositoryResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options)         throws IOException;1529508649;Deletes a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param deleteRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteRepositoryResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository, options,_            DeleteRepositoryResponse::fromXContent, emptySet())__    };deletes,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,repository,response,delete,repository,delete,repository,request,delete,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,delete,repository,request,request,converters,delete,repository,options,delete,repository,response,from,xcontent,empty,set
SnapshotClient -> public DeleteRepositoryResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options)         throws IOException;1531179852;Deletes a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param deleteRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteRepositoryResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository, options,_            DeleteRepositoryResponse::fromXContent, emptySet())__    };deletes,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,repository,response,delete,repository,delete,repository,request,delete,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,delete,repository,request,request,converters,delete,repository,options,delete,repository,response,from,xcontent,empty,set
SnapshotClient -> public DeleteRepositoryResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options)         throws IOException;1531382259;Deletes a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param deleteRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteRepositoryResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository, options,_            DeleteRepositoryResponse::fromXContent, emptySet())__    };deletes,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,repository,response,delete,repository,delete,repository,request,delete,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,delete,repository,request,request,converters,delete,repository,options,delete,repository,response,from,xcontent,empty,set
SnapshotClient -> public DeleteRepositoryResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options)         throws IOException;1531729807;Deletes a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param deleteRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteRepositoryResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository, options,_            DeleteRepositoryResponse::fromXContent, emptySet())__    };deletes,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,repository,response,delete,repository,delete,repository,request,delete,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,delete,repository,request,request,converters,delete,repository,options,delete,repository,response,from,xcontent,empty,set
SnapshotClient -> public DeleteRepositoryResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options)         throws IOException;1531910483;Deletes a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param deleteRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteRepositoryResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository, options,_            DeleteRepositoryResponse::fromXContent, emptySet())__    };deletes,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,repository,response,delete,repository,delete,repository,request,delete,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,delete,repository,request,request,converters,delete,repository,options,delete,repository,response,from,xcontent,empty,set
SnapshotClient -> public DeleteRepositoryResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options)         throws IOException;1532456624;Deletes a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param deleteRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public DeleteRepositoryResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository, options,_            DeleteRepositoryResponse::fromXContent, emptySet())__    };deletes,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,delete,repository,response,delete,repository,delete,repository,request,delete,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,delete,repository,request,request,converters,delete,repository,options,delete,repository,response,from,xcontent,empty,set
SnapshotClient -> public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, Header... headers) throws IOException;1526449283;Creates a snapshot repository._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, Header... headers) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(putRepositoryRequest, RequestConverters::createRepository,_            PutRepositoryResponse::fromXContent, emptySet(), headers)__    };creates,a,snapshot,repository,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,put,repository,response,create,repository,put,repository,request,put,repository,request,header,headers,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,put,repository,request,request,converters,create,repository,put,repository,response,from,xcontent,empty,set,headers
SnapshotClient -> public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, Header... headers) throws IOException;1526981569;Creates a snapshot repository._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, Header... headers) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(putRepositoryRequest, RequestConverters::createRepository,_            PutRepositoryResponse::fromXContent, emptySet(), headers)__    };creates,a,snapshot,repository,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,put,repository,response,create,repository,put,repository,request,put,repository,request,header,headers,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,put,repository,request,request,converters,create,repository,put,repository,response,from,xcontent,empty,set,headers
SnapshotClient -> public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, Header... headers) throws IOException;1527773340;Creates a snapshot repository._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, Header... headers) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(putRepositoryRequest, RequestConverters::createRepository,_            PutRepositoryResponse::fromXContent, emptySet(), headers)__    };creates,a,snapshot,repository,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,put,repository,response,create,repository,put,repository,request,put,repository,request,header,headers,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,put,repository,request,request,converters,create,repository,put,repository,response,from,xcontent,empty,set,headers
SnapshotClient -> public void getRepositoriesAsync(GetRepositoriesRequest getRepositoriesRequest,                                      ActionListener<GetRepositoriesResponse> listener, Header... headers);1526029249;Asynchronously gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public void getRepositoriesAsync(GetRepositoriesRequest getRepositoriesRequest,_                                     ActionListener<GetRepositoriesResponse> listener, Header... headers) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories,_            GetRepositoriesResponse::fromXContent, listener, emptySet(), headers)__    };asynchronously,gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,void,get,repositories,async,get,repositories,request,get,repositories,request,action,listener,get,repositories,response,listener,header,headers,rest,high,level,client,perform,request,async,and,parse,entity,get,repositories,request,request,converters,get,repositories,get,repositories,response,from,xcontent,listener,empty,set,headers
SnapshotClient -> public void getRepositoriesAsync(GetRepositoriesRequest getRepositoriesRequest,                                      ActionListener<GetRepositoriesResponse> listener, Header... headers);1526449283;Asynchronously gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public void getRepositoriesAsync(GetRepositoriesRequest getRepositoriesRequest,_                                     ActionListener<GetRepositoriesResponse> listener, Header... headers) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories,_            GetRepositoriesResponse::fromXContent, listener, emptySet(), headers)__    };asynchronously,gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,void,get,repositories,async,get,repositories,request,get,repositories,request,action,listener,get,repositories,response,listener,header,headers,rest,high,level,client,perform,request,async,and,parse,entity,get,repositories,request,request,converters,get,repositories,get,repositories,response,from,xcontent,listener,empty,set,headers
SnapshotClient -> public void getRepositoriesAsync(GetRepositoriesRequest getRepositoriesRequest,                                      ActionListener<GetRepositoriesResponse> listener, Header... headers);1526981569;Asynchronously gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public void getRepositoriesAsync(GetRepositoriesRequest getRepositoriesRequest,_                                     ActionListener<GetRepositoriesResponse> listener, Header... headers) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories,_            GetRepositoriesResponse::fromXContent, listener, emptySet(), headers)__    };asynchronously,gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,void,get,repositories,async,get,repositories,request,get,repositories,request,action,listener,get,repositories,response,listener,header,headers,rest,high,level,client,perform,request,async,and,parse,entity,get,repositories,request,request,converters,get,repositories,get,repositories,response,from,xcontent,listener,empty,set,headers
SnapshotClient -> public void getRepositoriesAsync(GetRepositoriesRequest getRepositoriesRequest,                                      ActionListener<GetRepositoriesResponse> listener, Header... headers);1527773340;Asynchronously gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public void getRepositoriesAsync(GetRepositoriesRequest getRepositoriesRequest,_                                     ActionListener<GetRepositoriesResponse> listener, Header... headers) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories,_            GetRepositoriesResponse::fromXContent, listener, emptySet(), headers)__    };asynchronously,gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,void,get,repositories,async,get,repositories,request,get,repositories,request,action,listener,get,repositories,response,listener,header,headers,rest,high,level,client,perform,request,async,and,parse,entity,get,repositories,request,request,converters,get,repositories,get,repositories,response,from,xcontent,listener,empty,set,headers
SnapshotClient -> public void restoreAsync(RestoreSnapshotRequest restoreSnapshotRequest, RequestOptions options,                             ActionListener<RestoreSnapshotResponse> listener);1532456624;Asynchronously restores a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param restoreSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void restoreAsync(RestoreSnapshotRequest restoreSnapshotRequest, RequestOptions options,_                            ActionListener<RestoreSnapshotResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(restoreSnapshotRequest, RequestConverters::restoreSnapshot, options,_            RestoreSnapshotResponse::fromXContent, listener, emptySet())__    };asynchronously,restores,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,restore,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,restore,async,restore,snapshot,request,restore,snapshot,request,request,options,options,action,listener,restore,snapshot,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,restore,snapshot,request,request,converters,restore,snapshot,options,restore,snapshot,response,from,xcontent,listener,empty,set
SnapshotClient -> public void restoreAsync(RestoreSnapshotRequest restoreSnapshotRequest, RequestOptions options,                             ActionListener<RestoreSnapshotResponse> listener);1534362961;Asynchronously restores a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param restoreSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void restoreAsync(RestoreSnapshotRequest restoreSnapshotRequest, RequestOptions options,_                            ActionListener<RestoreSnapshotResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(restoreSnapshotRequest, RequestConverters::restoreSnapshot, options,_            RestoreSnapshotResponse::fromXContent, listener, emptySet())__    };asynchronously,restores,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,restore,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,restore,async,restore,snapshot,request,restore,snapshot,request,request,options,options,action,listener,restore,snapshot,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,restore,snapshot,request,request,converters,restore,snapshot,options,restore,snapshot,response,from,xcontent,listener,empty,set
SnapshotClient -> public void restoreAsync(RestoreSnapshotRequest restoreSnapshotRequest, RequestOptions options,                             ActionListener<RestoreSnapshotResponse> listener);1536611444;Asynchronously restores a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param restoreSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void restoreAsync(RestoreSnapshotRequest restoreSnapshotRequest, RequestOptions options,_                            ActionListener<RestoreSnapshotResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(restoreSnapshotRequest, SnapshotRequestConverters::restoreSnapshot, options,_            RestoreSnapshotResponse::fromXContent, listener, emptySet())__    };asynchronously,restores,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,restore,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,restore,async,restore,snapshot,request,restore,snapshot,request,request,options,options,action,listener,restore,snapshot,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,restore,snapshot,request,snapshot,request,converters,restore,snapshot,options,restore,snapshot,response,from,xcontent,listener,empty,set
SnapshotClient -> public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest, RequestOptions options,                                       ActionListener<AcknowledgedResponse> listener);1534362961;Asynchronously creates a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param putRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest, RequestOptions options,_                                      ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(putRepositoryRequest, RequestConverters::createRepository, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,creates,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,put,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,create,repository,async,put,repository,request,put,repository,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,put,repository,request,request,converters,create,repository,options,acknowledged,response,from,xcontent,listener,empty,set
SnapshotClient -> public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest, RequestOptions options,                                       ActionListener<AcknowledgedResponse> listener);1536611444;Asynchronously creates a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param putRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest, RequestOptions options,_                                      ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(putRepositoryRequest, SnapshotRequestConverters::createRepository, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,creates,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,put,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,create,repository,async,put,repository,request,put,repository,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,put,repository,request,snapshot,request,converters,create,repository,options,acknowledged,response,from,xcontent,listener,empty,set
SnapshotClient -> public AcknowledgedResponse delete(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options) throws IOException;1534362961;Deletes a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param deleteSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse delete(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(deleteSnapshotRequest, RequestConverters::deleteSnapshot, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };deletes,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,delete,snapshot,request,delete,snapshot,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,delete,snapshot,request,request,converters,delete,snapshot,options,acknowledged,response,from,xcontent,empty,set
SnapshotClient -> public AcknowledgedResponse delete(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options) throws IOException;1536611444;Deletes a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param deleteSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse delete(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(deleteSnapshotRequest, SnapshotRequestConverters::deleteSnapshot, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };deletes,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,delete,snapshot,request,delete,snapshot,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,delete,snapshot,request,snapshot,request,converters,delete,snapshot,options,acknowledged,response,from,xcontent,empty,set
SnapshotClient -> public GetRepositoriesResponse getRepositories(GetRepositoriesRequest getRepositoriesRequest, Header... headers)         throws IOException;1526029249;Gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public GetRepositoriesResponse getRepositories(GetRepositoriesRequest getRepositoriesRequest, Header... headers)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories,_            GetRepositoriesResponse::fromXContent, emptySet(), headers)__    };gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,get,repositories,response,get,repositories,get,repositories,request,get,repositories,request,header,headers,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,repositories,request,request,converters,get,repositories,get,repositories,response,from,xcontent,empty,set,headers
SnapshotClient -> public GetRepositoriesResponse getRepositories(GetRepositoriesRequest getRepositoriesRequest, Header... headers)         throws IOException;1526449283;Gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public GetRepositoriesResponse getRepositories(GetRepositoriesRequest getRepositoriesRequest, Header... headers)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories,_            GetRepositoriesResponse::fromXContent, emptySet(), headers)__    };gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,get,repositories,response,get,repositories,get,repositories,request,get,repositories,request,header,headers,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,repositories,request,request,converters,get,repositories,get,repositories,response,from,xcontent,empty,set,headers
SnapshotClient -> public GetRepositoriesResponse getRepositories(GetRepositoriesRequest getRepositoriesRequest, Header... headers)         throws IOException;1526981569;Gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public GetRepositoriesResponse getRepositories(GetRepositoriesRequest getRepositoriesRequest, Header... headers)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories,_            GetRepositoriesResponse::fromXContent, emptySet(), headers)__    };gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,get,repositories,response,get,repositories,get,repositories,request,get,repositories,request,header,headers,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,repositories,request,request,converters,get,repositories,get,repositories,response,from,xcontent,empty,set,headers
SnapshotClient -> public GetRepositoriesResponse getRepositories(GetRepositoriesRequest getRepositoriesRequest, Header... headers)         throws IOException;1527773340;Gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public GetRepositoriesResponse getRepositories(GetRepositoriesRequest getRepositoriesRequest, Header... headers)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories,_            GetRepositoriesResponse::fromXContent, emptySet(), headers)__    };gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,get,repositories,response,get,repositories,get,repositories,request,get,repositories,request,header,headers,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,repositories,request,request,converters,get,repositories,get,repositories,response,from,xcontent,empty,set,headers
SnapshotClient -> public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, RequestOptions options) throws IOException;1528706846;Creates a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param putRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(putRepositoryRequest, RequestConverters::createRepository, options,_            PutRepositoryResponse::fromXContent, emptySet())__    };creates,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,put,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,repository,response,create,repository,put,repository,request,put,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,put,repository,request,request,converters,create,repository,options,put,repository,response,from,xcontent,empty,set
SnapshotClient -> public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, RequestOptions options) throws IOException;1529508649;Creates a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param putRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(putRepositoryRequest, RequestConverters::createRepository, options,_            PutRepositoryResponse::fromXContent, emptySet())__    };creates,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,put,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,repository,response,create,repository,put,repository,request,put,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,put,repository,request,request,converters,create,repository,options,put,repository,response,from,xcontent,empty,set
SnapshotClient -> public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, RequestOptions options) throws IOException;1531179852;Creates a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param putRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(putRepositoryRequest, RequestConverters::createRepository, options,_            PutRepositoryResponse::fromXContent, emptySet())__    };creates,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,put,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,repository,response,create,repository,put,repository,request,put,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,put,repository,request,request,converters,create,repository,options,put,repository,response,from,xcontent,empty,set
SnapshotClient -> public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, RequestOptions options) throws IOException;1531382259;Creates a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param putRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(putRepositoryRequest, RequestConverters::createRepository, options,_            PutRepositoryResponse::fromXContent, emptySet())__    };creates,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,put,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,repository,response,create,repository,put,repository,request,put,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,put,repository,request,request,converters,create,repository,options,put,repository,response,from,xcontent,empty,set
SnapshotClient -> public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, RequestOptions options) throws IOException;1531729807;Creates a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param putRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(putRepositoryRequest, RequestConverters::createRepository, options,_            PutRepositoryResponse::fromXContent, emptySet())__    };creates,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,put,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,repository,response,create,repository,put,repository,request,put,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,put,repository,request,request,converters,create,repository,options,put,repository,response,from,xcontent,empty,set
SnapshotClient -> public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, RequestOptions options) throws IOException;1531910483;Creates a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param putRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(putRepositoryRequest, RequestConverters::createRepository, options,_            PutRepositoryResponse::fromXContent, emptySet())__    };creates,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,put,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,repository,response,create,repository,put,repository,request,put,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,put,repository,request,request,converters,create,repository,options,put,repository,response,from,xcontent,empty,set
SnapshotClient -> public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, RequestOptions options) throws IOException;1532456624;Creates a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param putRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public PutRepositoryResponse createRepository(PutRepositoryRequest putRepositoryRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(putRepositoryRequest, RequestConverters::createRepository, options,_            PutRepositoryResponse::fromXContent, emptySet())__    };creates,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,put,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,put,repository,response,create,repository,put,repository,request,put,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,put,repository,request,request,converters,create,repository,options,put,repository,response,from,xcontent,empty,set
SnapshotClient -> public void statusAsync(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options,                             ActionListener<SnapshotsStatusResponse> listener);1531382259;Asynchronously gets the status of requested snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param snapshotsStatusRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void statusAsync(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options,_                            ActionListener<SnapshotsStatusResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(snapshotsStatusRequest, RequestConverters::snapshotsStatus, options,_            SnapshotsStatusResponse::fromXContent, listener, emptySet())__    };asynchronously,gets,the,status,of,requested,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,snapshots,status,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,status,async,snapshots,status,request,snapshots,status,request,request,options,options,action,listener,snapshots,status,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,snapshots,status,request,request,converters,snapshots,status,options,snapshots,status,response,from,xcontent,listener,empty,set
SnapshotClient -> public void statusAsync(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options,                             ActionListener<SnapshotsStatusResponse> listener);1531729807;Asynchronously gets the status of requested snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param snapshotsStatusRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void statusAsync(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options,_                            ActionListener<SnapshotsStatusResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(snapshotsStatusRequest, RequestConverters::snapshotsStatus, options,_            SnapshotsStatusResponse::fromXContent, listener, emptySet())__    };asynchronously,gets,the,status,of,requested,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,snapshots,status,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,status,async,snapshots,status,request,snapshots,status,request,request,options,options,action,listener,snapshots,status,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,snapshots,status,request,request,converters,snapshots,status,options,snapshots,status,response,from,xcontent,listener,empty,set
SnapshotClient -> public void statusAsync(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options,                             ActionListener<SnapshotsStatusResponse> listener);1531910483;Asynchronously gets the status of requested snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param snapshotsStatusRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void statusAsync(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options,_                            ActionListener<SnapshotsStatusResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(snapshotsStatusRequest, RequestConverters::snapshotsStatus, options,_            SnapshotsStatusResponse::fromXContent, listener, emptySet())__    };asynchronously,gets,the,status,of,requested,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,snapshots,status,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,status,async,snapshots,status,request,snapshots,status,request,request,options,options,action,listener,snapshots,status,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,snapshots,status,request,request,converters,snapshots,status,options,snapshots,status,response,from,xcontent,listener,empty,set
SnapshotClient -> public void statusAsync(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options,                             ActionListener<SnapshotsStatusResponse> listener);1532456624;Asynchronously gets the status of requested snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param snapshotsStatusRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void statusAsync(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options,_                            ActionListener<SnapshotsStatusResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(snapshotsStatusRequest, RequestConverters::snapshotsStatus, options,_            SnapshotsStatusResponse::fromXContent, listener, emptySet())__    };asynchronously,gets,the,status,of,requested,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,snapshots,status,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,status,async,snapshots,status,request,snapshots,status,request,request,options,options,action,listener,snapshots,status,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,snapshots,status,request,request,converters,snapshots,status,options,snapshots,status,response,from,xcontent,listener,empty,set
SnapshotClient -> public void statusAsync(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options,                             ActionListener<SnapshotsStatusResponse> listener);1534362961;Asynchronously gets the status of requested snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param snapshotsStatusRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void statusAsync(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options,_                            ActionListener<SnapshotsStatusResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(snapshotsStatusRequest, RequestConverters::snapshotsStatus, options,_            SnapshotsStatusResponse::fromXContent, listener, emptySet())__    };asynchronously,gets,the,status,of,requested,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,snapshots,status,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,status,async,snapshots,status,request,snapshots,status,request,request,options,options,action,listener,snapshots,status,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,snapshots,status,request,request,converters,snapshots,status,options,snapshots,status,response,from,xcontent,listener,empty,set
SnapshotClient -> public void statusAsync(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options,                             ActionListener<SnapshotsStatusResponse> listener);1536611444;Asynchronously gets the status of requested snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param snapshotsStatusRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void statusAsync(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options,_                            ActionListener<SnapshotsStatusResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(snapshotsStatusRequest, SnapshotRequestConverters::snapshotsStatus, options,_            SnapshotsStatusResponse::fromXContent, listener, emptySet())__    };asynchronously,gets,the,status,of,requested,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,snapshots,status,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,status,async,snapshots,status,request,snapshots,status,request,request,options,options,action,listener,snapshots,status,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,snapshots,status,request,snapshot,request,converters,snapshots,status,options,snapshots,status,response,from,xcontent,listener,empty,set
SnapshotClient -> public void getRepositoriesAsync(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options,                                      ActionListener<GetRepositoriesResponse> listener);1528706846;Asynchronously gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param getRepositoriesRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getRepositoriesAsync(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options,_                                     ActionListener<GetRepositoriesResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories, options,_            GetRepositoriesResponse::fromXContent, listener, emptySet())__    };asynchronously,gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,repositories,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,repositories,async,get,repositories,request,get,repositories,request,request,options,options,action,listener,get,repositories,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,get,repositories,request,request,converters,get,repositories,options,get,repositories,response,from,xcontent,listener,empty,set
SnapshotClient -> public void getRepositoriesAsync(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options,                                      ActionListener<GetRepositoriesResponse> listener);1529508649;Asynchronously gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param getRepositoriesRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getRepositoriesAsync(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options,_                                     ActionListener<GetRepositoriesResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories, options,_            GetRepositoriesResponse::fromXContent, listener, emptySet())__    };asynchronously,gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,repositories,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,repositories,async,get,repositories,request,get,repositories,request,request,options,options,action,listener,get,repositories,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,get,repositories,request,request,converters,get,repositories,options,get,repositories,response,from,xcontent,listener,empty,set
SnapshotClient -> public void getRepositoriesAsync(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options,                                      ActionListener<GetRepositoriesResponse> listener);1531179852;Asynchronously gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param getRepositoriesRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getRepositoriesAsync(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options,_                                     ActionListener<GetRepositoriesResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories, options,_            GetRepositoriesResponse::fromXContent, listener, emptySet())__    };asynchronously,gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,repositories,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,repositories,async,get,repositories,request,get,repositories,request,request,options,options,action,listener,get,repositories,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,get,repositories,request,request,converters,get,repositories,options,get,repositories,response,from,xcontent,listener,empty,set
SnapshotClient -> public void getRepositoriesAsync(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options,                                      ActionListener<GetRepositoriesResponse> listener);1531382259;Asynchronously gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param getRepositoriesRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getRepositoriesAsync(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options,_                                     ActionListener<GetRepositoriesResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories, options,_            GetRepositoriesResponse::fromXContent, listener, emptySet())__    };asynchronously,gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,repositories,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,repositories,async,get,repositories,request,get,repositories,request,request,options,options,action,listener,get,repositories,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,get,repositories,request,request,converters,get,repositories,options,get,repositories,response,from,xcontent,listener,empty,set
SnapshotClient -> public void getRepositoriesAsync(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options,                                      ActionListener<GetRepositoriesResponse> listener);1531729807;Asynchronously gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param getRepositoriesRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getRepositoriesAsync(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options,_                                     ActionListener<GetRepositoriesResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories, options,_            GetRepositoriesResponse::fromXContent, listener, emptySet())__    };asynchronously,gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,repositories,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,repositories,async,get,repositories,request,get,repositories,request,request,options,options,action,listener,get,repositories,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,get,repositories,request,request,converters,get,repositories,options,get,repositories,response,from,xcontent,listener,empty,set
SnapshotClient -> public CreateSnapshotResponse createSnapshot(CreateSnapshotRequest createSnapshotRequest, RequestOptions options)         throws IOException;1531179852;Creates a snapshot._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public CreateSnapshotResponse createSnapshot(CreateSnapshotRequest createSnapshotRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(createSnapshotRequest, RequestConverters::createSnapshot, options,_            CreateSnapshotResponse::fromXContent, emptySet())__    };creates,a,snapshot,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,create,snapshot,response,create,snapshot,create,snapshot,request,create,snapshot,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,create,snapshot,request,request,converters,create,snapshot,options,create,snapshot,response,from,xcontent,empty,set
SnapshotClient -> public CreateSnapshotResponse createSnapshot(CreateSnapshotRequest createSnapshotRequest, RequestOptions options)         throws IOException;1531382259;Creates a snapshot._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public CreateSnapshotResponse createSnapshot(CreateSnapshotRequest createSnapshotRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(createSnapshotRequest, RequestConverters::createSnapshot, options,_            CreateSnapshotResponse::fromXContent, emptySet())__    };creates,a,snapshot,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,create,snapshot,response,create,snapshot,create,snapshot,request,create,snapshot,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,create,snapshot,request,request,converters,create,snapshot,options,create,snapshot,response,from,xcontent,empty,set
SnapshotClient -> public GetSnapshotsResponse get(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options) throws IOException;1531179852;Get snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param getSnapshotsRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetSnapshotsResponse get(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getSnapshotsRequest, RequestConverters::getSnapshots, options,_            GetSnapshotsResponse::fromXContent, emptySet())__    };get,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,snapshots,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,snapshots,response,get,get,snapshots,request,get,snapshots,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,snapshots,request,request,converters,get,snapshots,options,get,snapshots,response,from,xcontent,empty,set
SnapshotClient -> public GetSnapshotsResponse get(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options) throws IOException;1531382259;Get snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param getSnapshotsRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetSnapshotsResponse get(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getSnapshotsRequest, RequestConverters::getSnapshots, options,_            GetSnapshotsResponse::fromXContent, emptySet())__    };get,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,snapshots,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,snapshots,response,get,get,snapshots,request,get,snapshots,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,snapshots,request,request,converters,get,snapshots,options,get,snapshots,response,from,xcontent,empty,set
SnapshotClient -> public GetSnapshotsResponse get(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options) throws IOException;1531729807;Get snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param getSnapshotsRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetSnapshotsResponse get(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getSnapshotsRequest, RequestConverters::getSnapshots, options,_            GetSnapshotsResponse::fromXContent, emptySet())__    };get,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,snapshots,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,snapshots,response,get,get,snapshots,request,get,snapshots,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,snapshots,request,request,converters,get,snapshots,options,get,snapshots,response,from,xcontent,empty,set
SnapshotClient -> public GetSnapshotsResponse get(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options) throws IOException;1531910483;Get snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param getSnapshotsRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetSnapshotsResponse get(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getSnapshotsRequest, RequestConverters::getSnapshots, options,_            GetSnapshotsResponse::fromXContent, emptySet())__    };get,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,snapshots,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,snapshots,response,get,get,snapshots,request,get,snapshots,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,snapshots,request,request,converters,get,snapshots,options,get,snapshots,response,from,xcontent,empty,set
SnapshotClient -> public GetSnapshotsResponse get(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options) throws IOException;1532456624;Get snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param getSnapshotsRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetSnapshotsResponse get(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getSnapshotsRequest, RequestConverters::getSnapshots, options,_            GetSnapshotsResponse::fromXContent, emptySet())__    };get,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,snapshots,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,snapshots,response,get,get,snapshots,request,get,snapshots,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,snapshots,request,request,converters,get,snapshots,options,get,snapshots,response,from,xcontent,empty,set
SnapshotClient -> public GetSnapshotsResponse get(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options) throws IOException;1534362961;Get snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param getSnapshotsRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetSnapshotsResponse get(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getSnapshotsRequest, RequestConverters::getSnapshots, options,_            GetSnapshotsResponse::fromXContent, emptySet())__    };get,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,snapshots,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,snapshots,response,get,get,snapshots,request,get,snapshots,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,snapshots,request,request,converters,get,snapshots,options,get,snapshots,response,from,xcontent,empty,set
SnapshotClient -> public GetSnapshotsResponse get(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options) throws IOException;1536611444;Get snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param getSnapshotsRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetSnapshotsResponse get(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getSnapshotsRequest, SnapshotRequestConverters::getSnapshots, options,_            GetSnapshotsResponse::fromXContent, emptySet())__    };get,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,snapshots,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,snapshots,response,get,get,snapshots,request,get,snapshots,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,snapshots,request,snapshot,request,converters,get,snapshots,options,get,snapshots,response,from,xcontent,empty,set
SnapshotClient -> public GetRepositoriesResponse getRepositories(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options)         throws IOException;1528706846;Gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param getRepositoriesRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetRepositoriesResponse getRepositories(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories, options,_            GetRepositoriesResponse::fromXContent, emptySet())__    };gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,repositories,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,repositories,response,get,repositories,get,repositories,request,get,repositories,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,repositories,request,request,converters,get,repositories,options,get,repositories,response,from,xcontent,empty,set
SnapshotClient -> public GetRepositoriesResponse getRepositories(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options)         throws IOException;1529508649;Gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param getRepositoriesRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetRepositoriesResponse getRepositories(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories, options,_            GetRepositoriesResponse::fromXContent, emptySet())__    };gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,repositories,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,repositories,response,get,repositories,get,repositories,request,get,repositories,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,repositories,request,request,converters,get,repositories,options,get,repositories,response,from,xcontent,empty,set
SnapshotClient -> public GetRepositoriesResponse getRepositories(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options)         throws IOException;1531179852;Gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param getRepositoriesRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetRepositoriesResponse getRepositories(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories, options,_            GetRepositoriesResponse::fromXContent, emptySet())__    };gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,repositories,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,repositories,response,get,repositories,get,repositories,request,get,repositories,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,repositories,request,request,converters,get,repositories,options,get,repositories,response,from,xcontent,empty,set
SnapshotClient -> public GetRepositoriesResponse getRepositories(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options)         throws IOException;1531382259;Gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param getRepositoriesRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetRepositoriesResponse getRepositories(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories, options,_            GetRepositoriesResponse::fromXContent, emptySet())__    };gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,repositories,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,repositories,response,get,repositories,get,repositories,request,get,repositories,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,repositories,request,request,converters,get,repositories,options,get,repositories,response,from,xcontent,empty,set
SnapshotClient -> public GetRepositoriesResponse getRepositories(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options)         throws IOException;1531729807;Gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param getRepositoriesRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetRepositoriesResponse getRepositories(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories, options,_            GetRepositoriesResponse::fromXContent, emptySet())__    };gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,repositories,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,repositories,response,get,repositories,get,repositories,request,get,repositories,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,repositories,request,request,converters,get,repositories,options,get,repositories,response,from,xcontent,empty,set
SnapshotClient -> public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options,                                       ActionListener<AcknowledgedResponse> listener);1534362961;Asynchronously deletes a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param deleteRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options,_                                      ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,deletes,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,repository,async,delete,repository,request,delete,repository,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,delete,repository,request,request,converters,delete,repository,options,acknowledged,response,from,xcontent,listener,empty,set
SnapshotClient -> public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options,                                       ActionListener<AcknowledgedResponse> listener);1536611444;Asynchronously deletes a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param deleteRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options,_                                      ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(deleteRepositoryRequest, SnapshotRequestConverters::deleteRepository, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,deletes,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,repository,async,delete,repository,request,delete,repository,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,delete,repository,request,snapshot,request,converters,delete,repository,options,acknowledged,response,from,xcontent,listener,empty,set
SnapshotClient -> public AcknowledgedResponse createRepository(PutRepositoryRequest putRepositoryRequest, RequestOptions options) throws IOException;1534362961;Creates a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param putRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse createRepository(PutRepositoryRequest putRepositoryRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(putRepositoryRequest, RequestConverters::createRepository, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };creates,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,put,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,create,repository,put,repository,request,put,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,put,repository,request,request,converters,create,repository,options,acknowledged,response,from,xcontent,empty,set
SnapshotClient -> public AcknowledgedResponse createRepository(PutRepositoryRequest putRepositoryRequest, RequestOptions options) throws IOException;1536611444;Creates a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param putRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse createRepository(PutRepositoryRequest putRepositoryRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(putRepositoryRequest, SnapshotRequestConverters::createRepository, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };creates,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,put,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,create,repository,put,repository,request,put,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,put,repository,request,snapshot,request,converters,create,repository,options,acknowledged,response,from,xcontent,empty,set
SnapshotClient -> public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest,                                       ActionListener<PutRepositoryResponse> listener, Header... headers);1526449283;Asynchronously creates a snapshot repository._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest,_                                      ActionListener<PutRepositoryResponse> listener, Header... headers) {_        restHighLevelClient.performRequestAsyncAndParseEntity(putRepositoryRequest, RequestConverters::createRepository,_            PutRepositoryResponse::fromXContent, listener, emptySet(), headers)__    };asynchronously,creates,a,snapshot,repository,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,void,create,repository,async,put,repository,request,put,repository,request,action,listener,put,repository,response,listener,header,headers,rest,high,level,client,perform,request,async,and,parse,entity,put,repository,request,request,converters,create,repository,put,repository,response,from,xcontent,listener,empty,set,headers
SnapshotClient -> public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest,                                       ActionListener<PutRepositoryResponse> listener, Header... headers);1526981569;Asynchronously creates a snapshot repository._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest,_                                      ActionListener<PutRepositoryResponse> listener, Header... headers) {_        restHighLevelClient.performRequestAsyncAndParseEntity(putRepositoryRequest, RequestConverters::createRepository,_            PutRepositoryResponse::fromXContent, listener, emptySet(), headers)__    };asynchronously,creates,a,snapshot,repository,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,void,create,repository,async,put,repository,request,put,repository,request,action,listener,put,repository,response,listener,header,headers,rest,high,level,client,perform,request,async,and,parse,entity,put,repository,request,request,converters,create,repository,put,repository,response,from,xcontent,listener,empty,set,headers
SnapshotClient -> public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest,                                       ActionListener<PutRepositoryResponse> listener, Header... headers);1527773340;Asynchronously creates a snapshot repository._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest,_                                      ActionListener<PutRepositoryResponse> listener, Header... headers) {_        restHighLevelClient.performRequestAsyncAndParseEntity(putRepositoryRequest, RequestConverters::createRepository,_            PutRepositoryResponse::fromXContent, listener, emptySet(), headers)__    };asynchronously,creates,a,snapshot,repository,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,void,create,repository,async,put,repository,request,put,repository,request,action,listener,put,repository,response,listener,header,headers,rest,high,level,client,perform,request,async,and,parse,entity,put,repository,request,request,converters,create,repository,put,repository,response,from,xcontent,listener,empty,set,headers
SnapshotClient -> public void getAsync(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options, ActionListener<GetSnapshotsResponse> listener);1531179852;Asynchronously get snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param getSnapshotsRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getAsync(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options, ActionListener<GetSnapshotsResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getSnapshotsRequest, RequestConverters::getSnapshots, options,_            GetSnapshotsResponse::fromXContent, listener, emptySet())__    };asynchronously,get,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,snapshots,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,async,get,snapshots,request,get,snapshots,request,request,options,options,action,listener,get,snapshots,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,get,snapshots,request,request,converters,get,snapshots,options,get,snapshots,response,from,xcontent,listener,empty,set
SnapshotClient -> public void getAsync(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options, ActionListener<GetSnapshotsResponse> listener);1531382259;Asynchronously get snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param getSnapshotsRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getAsync(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options, ActionListener<GetSnapshotsResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getSnapshotsRequest, RequestConverters::getSnapshots, options,_            GetSnapshotsResponse::fromXContent, listener, emptySet())__    };asynchronously,get,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,snapshots,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,async,get,snapshots,request,get,snapshots,request,request,options,options,action,listener,get,snapshots,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,get,snapshots,request,request,converters,get,snapshots,options,get,snapshots,response,from,xcontent,listener,empty,set
SnapshotClient -> public void getAsync(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options, ActionListener<GetSnapshotsResponse> listener);1531729807;Asynchronously get snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param getSnapshotsRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getAsync(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options, ActionListener<GetSnapshotsResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getSnapshotsRequest, RequestConverters::getSnapshots, options,_            GetSnapshotsResponse::fromXContent, listener, emptySet())__    };asynchronously,get,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,snapshots,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,async,get,snapshots,request,get,snapshots,request,request,options,options,action,listener,get,snapshots,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,get,snapshots,request,request,converters,get,snapshots,options,get,snapshots,response,from,xcontent,listener,empty,set
SnapshotClient -> public void getAsync(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options, ActionListener<GetSnapshotsResponse> listener);1531910483;Asynchronously get snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param getSnapshotsRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getAsync(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options, ActionListener<GetSnapshotsResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getSnapshotsRequest, RequestConverters::getSnapshots, options,_            GetSnapshotsResponse::fromXContent, listener, emptySet())__    };asynchronously,get,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,snapshots,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,async,get,snapshots,request,get,snapshots,request,request,options,options,action,listener,get,snapshots,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,get,snapshots,request,request,converters,get,snapshots,options,get,snapshots,response,from,xcontent,listener,empty,set
SnapshotClient -> public void getAsync(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options, ActionListener<GetSnapshotsResponse> listener);1532456624;Asynchronously get snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param getSnapshotsRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getAsync(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options, ActionListener<GetSnapshotsResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getSnapshotsRequest, RequestConverters::getSnapshots, options,_            GetSnapshotsResponse::fromXContent, listener, emptySet())__    };asynchronously,get,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,snapshots,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,async,get,snapshots,request,get,snapshots,request,request,options,options,action,listener,get,snapshots,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,get,snapshots,request,request,converters,get,snapshots,options,get,snapshots,response,from,xcontent,listener,empty,set
SnapshotClient -> public void getAsync(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options, ActionListener<GetSnapshotsResponse> listener);1534362961;Asynchronously get snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param getSnapshotsRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getAsync(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options, ActionListener<GetSnapshotsResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getSnapshotsRequest, RequestConverters::getSnapshots, options,_            GetSnapshotsResponse::fromXContent, listener, emptySet())__    };asynchronously,get,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,snapshots,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,async,get,snapshots,request,get,snapshots,request,request,options,options,action,listener,get,snapshots,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,get,snapshots,request,request,converters,get,snapshots,options,get,snapshots,response,from,xcontent,listener,empty,set
SnapshotClient -> public void getAsync(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options, ActionListener<GetSnapshotsResponse> listener);1536611444;Asynchronously get snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param getSnapshotsRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getAsync(GetSnapshotsRequest getSnapshotsRequest, RequestOptions options, ActionListener<GetSnapshotsResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getSnapshotsRequest, SnapshotRequestConverters::getSnapshots, options,_            GetSnapshotsResponse::fromXContent, listener, emptySet())__    };asynchronously,get,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,snapshots,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,async,get,snapshots,request,get,snapshots,request,request,options,options,action,listener,get,snapshots,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,get,snapshots,request,snapshot,request,converters,get,snapshots,options,get,snapshots,response,from,xcontent,listener,empty,set
SnapshotClient -> public GetRepositoriesResponse getRepository(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options)         throws IOException;1531910483;Gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param getRepositoriesRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetRepositoriesResponse getRepository(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories, options,_            GetRepositoriesResponse::fromXContent, emptySet())__    };gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,repositories,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,repositories,response,get,repository,get,repositories,request,get,repositories,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,repositories,request,request,converters,get,repositories,options,get,repositories,response,from,xcontent,empty,set
SnapshotClient -> public GetRepositoriesResponse getRepository(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options)         throws IOException;1532456624;Gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param getRepositoriesRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetRepositoriesResponse getRepository(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories, options,_            GetRepositoriesResponse::fromXContent, emptySet())__    };gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,repositories,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,repositories,response,get,repository,get,repositories,request,get,repositories,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,repositories,request,request,converters,get,repositories,options,get,repositories,response,from,xcontent,empty,set
SnapshotClient -> public GetRepositoriesResponse getRepository(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options)         throws IOException;1534362961;Gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param getRepositoriesRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetRepositoriesResponse getRepository(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories, options,_            GetRepositoriesResponse::fromXContent, emptySet())__    };gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,repositories,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,repositories,response,get,repository,get,repositories,request,get,repositories,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,repositories,request,request,converters,get,repositories,options,get,repositories,response,from,xcontent,empty,set
SnapshotClient -> public GetRepositoriesResponse getRepository(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options)         throws IOException;1536611444;Gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param getRepositoriesRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public GetRepositoriesResponse getRepository(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(getRepositoriesRequest, SnapshotRequestConverters::getRepositories, options,_            GetRepositoriesResponse::fromXContent, emptySet())__    };gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,repositories,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,get,repositories,response,get,repository,get,repositories,request,get,repositories,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,get,repositories,request,snapshot,request,converters,get,repositories,options,get,repositories,response,from,xcontent,empty,set
SnapshotClient -> public SnapshotsStatusResponse status(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options)         throws IOException;1531382259;Gets the status of requested snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param snapshotsStatusRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SnapshotsStatusResponse status(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(snapshotsStatusRequest, RequestConverters::snapshotsStatus, options,_            SnapshotsStatusResponse::fromXContent, emptySet())__    };gets,the,status,of,requested,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,snapshots,status,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,snapshots,status,response,status,snapshots,status,request,snapshots,status,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,snapshots,status,request,request,converters,snapshots,status,options,snapshots,status,response,from,xcontent,empty,set
SnapshotClient -> public SnapshotsStatusResponse status(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options)         throws IOException;1531729807;Gets the status of requested snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param snapshotsStatusRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SnapshotsStatusResponse status(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(snapshotsStatusRequest, RequestConverters::snapshotsStatus, options,_            SnapshotsStatusResponse::fromXContent, emptySet())__    };gets,the,status,of,requested,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,snapshots,status,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,snapshots,status,response,status,snapshots,status,request,snapshots,status,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,snapshots,status,request,request,converters,snapshots,status,options,snapshots,status,response,from,xcontent,empty,set
SnapshotClient -> public SnapshotsStatusResponse status(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options)         throws IOException;1531910483;Gets the status of requested snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param snapshotsStatusRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SnapshotsStatusResponse status(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(snapshotsStatusRequest, RequestConverters::snapshotsStatus, options,_            SnapshotsStatusResponse::fromXContent, emptySet())__    };gets,the,status,of,requested,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,snapshots,status,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,snapshots,status,response,status,snapshots,status,request,snapshots,status,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,snapshots,status,request,request,converters,snapshots,status,options,snapshots,status,response,from,xcontent,empty,set
SnapshotClient -> public SnapshotsStatusResponse status(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options)         throws IOException;1532456624;Gets the status of requested snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param snapshotsStatusRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SnapshotsStatusResponse status(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(snapshotsStatusRequest, RequestConverters::snapshotsStatus, options,_            SnapshotsStatusResponse::fromXContent, emptySet())__    };gets,the,status,of,requested,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,snapshots,status,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,snapshots,status,response,status,snapshots,status,request,snapshots,status,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,snapshots,status,request,request,converters,snapshots,status,options,snapshots,status,response,from,xcontent,empty,set
SnapshotClient -> public SnapshotsStatusResponse status(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options)         throws IOException;1534362961;Gets the status of requested snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param snapshotsStatusRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SnapshotsStatusResponse status(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(snapshotsStatusRequest, RequestConverters::snapshotsStatus, options,_            SnapshotsStatusResponse::fromXContent, emptySet())__    };gets,the,status,of,requested,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,snapshots,status,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,snapshots,status,response,status,snapshots,status,request,snapshots,status,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,snapshots,status,request,request,converters,snapshots,status,options,snapshots,status,response,from,xcontent,empty,set
SnapshotClient -> public SnapshotsStatusResponse status(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options)         throws IOException;1536611444;Gets the status of requested snapshots._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param snapshotsStatusRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public SnapshotsStatusResponse status(SnapshotsStatusRequest snapshotsStatusRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(snapshotsStatusRequest, SnapshotRequestConverters::snapshotsStatus, options,_            SnapshotsStatusResponse::fromXContent, emptySet())__    };gets,the,status,of,requested,snapshots,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,snapshots,status,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,snapshots,status,response,status,snapshots,status,request,snapshots,status,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,snapshots,status,request,snapshot,request,converters,snapshots,status,options,snapshots,status,response,from,xcontent,empty,set
SnapshotClient -> public RestoreSnapshotResponse restore(RestoreSnapshotRequest restoreSnapshotRequest, RequestOptions options) throws IOException;1532456624;Restores a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param restoreSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public RestoreSnapshotResponse restore(RestoreSnapshotRequest restoreSnapshotRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(restoreSnapshotRequest, RequestConverters::restoreSnapshot, options,_            RestoreSnapshotResponse::fromXContent, emptySet())__    };restores,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,restore,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,restore,snapshot,response,restore,restore,snapshot,request,restore,snapshot,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,restore,snapshot,request,request,converters,restore,snapshot,options,restore,snapshot,response,from,xcontent,empty,set
SnapshotClient -> public RestoreSnapshotResponse restore(RestoreSnapshotRequest restoreSnapshotRequest, RequestOptions options) throws IOException;1534362961;Restores a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param restoreSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public RestoreSnapshotResponse restore(RestoreSnapshotRequest restoreSnapshotRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(restoreSnapshotRequest, RequestConverters::restoreSnapshot, options,_            RestoreSnapshotResponse::fromXContent, emptySet())__    };restores,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,restore,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,restore,snapshot,response,restore,restore,snapshot,request,restore,snapshot,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,restore,snapshot,request,request,converters,restore,snapshot,options,restore,snapshot,response,from,xcontent,empty,set
SnapshotClient -> public RestoreSnapshotResponse restore(RestoreSnapshotRequest restoreSnapshotRequest, RequestOptions options) throws IOException;1536611444;Restores a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param restoreSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public RestoreSnapshotResponse restore(RestoreSnapshotRequest restoreSnapshotRequest, RequestOptions options) throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(restoreSnapshotRequest, SnapshotRequestConverters::restoreSnapshot, options,_            RestoreSnapshotResponse::fromXContent, emptySet())__    };restores,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,restore,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,restore,snapshot,response,restore,restore,snapshot,request,restore,snapshot,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,restore,snapshot,request,snapshot,request,converters,restore,snapshot,options,restore,snapshot,response,from,xcontent,empty,set
SnapshotClient -> public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options,                                       ActionListener<DeleteRepositoryResponse> listener);1528706846;Asynchronously deletes a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param deleteRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options,_                                      ActionListener<DeleteRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository, options,_            DeleteRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,deletes,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,repository,async,delete,repository,request,delete,repository,request,request,options,options,action,listener,delete,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,delete,repository,request,request,converters,delete,repository,options,delete,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options,                                       ActionListener<DeleteRepositoryResponse> listener);1529508649;Asynchronously deletes a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param deleteRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options,_                                      ActionListener<DeleteRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository, options,_            DeleteRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,deletes,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,repository,async,delete,repository,request,delete,repository,request,request,options,options,action,listener,delete,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,delete,repository,request,request,converters,delete,repository,options,delete,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options,                                       ActionListener<DeleteRepositoryResponse> listener);1531179852;Asynchronously deletes a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param deleteRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options,_                                      ActionListener<DeleteRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository, options,_            DeleteRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,deletes,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,repository,async,delete,repository,request,delete,repository,request,request,options,options,action,listener,delete,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,delete,repository,request,request,converters,delete,repository,options,delete,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options,                                       ActionListener<DeleteRepositoryResponse> listener);1531382259;Asynchronously deletes a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param deleteRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options,_                                      ActionListener<DeleteRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository, options,_            DeleteRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,deletes,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,repository,async,delete,repository,request,delete,repository,request,request,options,options,action,listener,delete,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,delete,repository,request,request,converters,delete,repository,options,delete,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options,                                       ActionListener<DeleteRepositoryResponse> listener);1531729807;Asynchronously deletes a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param deleteRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options,_                                      ActionListener<DeleteRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository, options,_            DeleteRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,deletes,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,repository,async,delete,repository,request,delete,repository,request,request,options,options,action,listener,delete,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,delete,repository,request,request,converters,delete,repository,options,delete,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options,                                       ActionListener<DeleteRepositoryResponse> listener);1531910483;Asynchronously deletes a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param deleteRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options,_                                      ActionListener<DeleteRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository, options,_            DeleteRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,deletes,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,repository,async,delete,repository,request,delete,repository,request,request,options,options,action,listener,delete,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,delete,repository,request,request,converters,delete,repository,options,delete,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options,                                       ActionListener<DeleteRepositoryResponse> listener);1532456624;Asynchronously deletes a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param deleteRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options,_                                      ActionListener<DeleteRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository, options,_            DeleteRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,deletes,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,repository,async,delete,repository,request,delete,repository,request,request,options,options,action,listener,delete,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,delete,repository,request,request,converters,delete,repository,options,delete,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest,                                       ActionListener<DeleteRepositoryResponse> listener, Header... headers);1526981569;Asynchronously deletes a snapshot repository._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest,_                                      ActionListener<DeleteRepositoryResponse> listener, Header... headers) {_        restHighLevelClient.performRequestAsyncAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository,_            DeleteRepositoryResponse::fromXContent, listener, emptySet(), headers)__    };asynchronously,deletes,a,snapshot,repository,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,void,delete,repository,async,delete,repository,request,delete,repository,request,action,listener,delete,repository,response,listener,header,headers,rest,high,level,client,perform,request,async,and,parse,entity,delete,repository,request,request,converters,delete,repository,delete,repository,response,from,xcontent,listener,empty,set,headers
SnapshotClient -> public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest,                                       ActionListener<DeleteRepositoryResponse> listener, Header... headers);1527773340;Asynchronously deletes a snapshot repository._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public void deleteRepositoryAsync(DeleteRepositoryRequest deleteRepositoryRequest,_                                      ActionListener<DeleteRepositoryResponse> listener, Header... headers) {_        restHighLevelClient.performRequestAsyncAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository,_            DeleteRepositoryResponse::fromXContent, listener, emptySet(), headers)__    };asynchronously,deletes,a,snapshot,repository,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,void,delete,repository,async,delete,repository,request,delete,repository,request,action,listener,delete,repository,response,listener,header,headers,rest,high,level,client,perform,request,async,and,parse,entity,delete,repository,request,request,converters,delete,repository,delete,repository,response,from,xcontent,listener,empty,set,headers
SnapshotClient -> public VerifyRepositoryResponse verifyRepository(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options)         throws IOException;1528706846;Verifies a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param verifyRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public VerifyRepositoryResponse verifyRepository(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(verifyRepositoryRequest, RequestConverters::verifyRepository, options,_            VerifyRepositoryResponse::fromXContent, emptySet())__    };verifies,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,verify,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,verify,repository,response,verify,repository,verify,repository,request,verify,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,verify,repository,request,request,converters,verify,repository,options,verify,repository,response,from,xcontent,empty,set
SnapshotClient -> public VerifyRepositoryResponse verifyRepository(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options)         throws IOException;1529508649;Verifies a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param verifyRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public VerifyRepositoryResponse verifyRepository(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(verifyRepositoryRequest, RequestConverters::verifyRepository, options,_            VerifyRepositoryResponse::fromXContent, emptySet())__    };verifies,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,verify,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,verify,repository,response,verify,repository,verify,repository,request,verify,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,verify,repository,request,request,converters,verify,repository,options,verify,repository,response,from,xcontent,empty,set
SnapshotClient -> public VerifyRepositoryResponse verifyRepository(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options)         throws IOException;1531179852;Verifies a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param verifyRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public VerifyRepositoryResponse verifyRepository(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(verifyRepositoryRequest, RequestConverters::verifyRepository, options,_            VerifyRepositoryResponse::fromXContent, emptySet())__    };verifies,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,verify,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,verify,repository,response,verify,repository,verify,repository,request,verify,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,verify,repository,request,request,converters,verify,repository,options,verify,repository,response,from,xcontent,empty,set
SnapshotClient -> public VerifyRepositoryResponse verifyRepository(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options)         throws IOException;1531382259;Verifies a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param verifyRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public VerifyRepositoryResponse verifyRepository(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(verifyRepositoryRequest, RequestConverters::verifyRepository, options,_            VerifyRepositoryResponse::fromXContent, emptySet())__    };verifies,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,verify,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,verify,repository,response,verify,repository,verify,repository,request,verify,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,verify,repository,request,request,converters,verify,repository,options,verify,repository,response,from,xcontent,empty,set
SnapshotClient -> public VerifyRepositoryResponse verifyRepository(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options)         throws IOException;1531729807;Verifies a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param verifyRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public VerifyRepositoryResponse verifyRepository(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(verifyRepositoryRequest, RequestConverters::verifyRepository, options,_            VerifyRepositoryResponse::fromXContent, emptySet())__    };verifies,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,verify,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,verify,repository,response,verify,repository,verify,repository,request,verify,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,verify,repository,request,request,converters,verify,repository,options,verify,repository,response,from,xcontent,empty,set
SnapshotClient -> public VerifyRepositoryResponse verifyRepository(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options)         throws IOException;1531910483;Verifies a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param verifyRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public VerifyRepositoryResponse verifyRepository(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(verifyRepositoryRequest, RequestConverters::verifyRepository, options,_            VerifyRepositoryResponse::fromXContent, emptySet())__    };verifies,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,verify,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,verify,repository,response,verify,repository,verify,repository,request,verify,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,verify,repository,request,request,converters,verify,repository,options,verify,repository,response,from,xcontent,empty,set
SnapshotClient -> public VerifyRepositoryResponse verifyRepository(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options)         throws IOException;1532456624;Verifies a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param verifyRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public VerifyRepositoryResponse verifyRepository(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(verifyRepositoryRequest, RequestConverters::verifyRepository, options,_            VerifyRepositoryResponse::fromXContent, emptySet())__    };verifies,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,verify,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,verify,repository,response,verify,repository,verify,repository,request,verify,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,verify,repository,request,request,converters,verify,repository,options,verify,repository,response,from,xcontent,empty,set
SnapshotClient -> public VerifyRepositoryResponse verifyRepository(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options)         throws IOException;1534362961;Verifies a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param verifyRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public VerifyRepositoryResponse verifyRepository(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(verifyRepositoryRequest, RequestConverters::verifyRepository, options,_            VerifyRepositoryResponse::fromXContent, emptySet())__    };verifies,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,verify,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,verify,repository,response,verify,repository,verify,repository,request,verify,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,verify,repository,request,request,converters,verify,repository,options,verify,repository,response,from,xcontent,empty,set
SnapshotClient -> public VerifyRepositoryResponse verifyRepository(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options)         throws IOException;1536611444;Verifies a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param verifyRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public VerifyRepositoryResponse verifyRepository(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(verifyRepositoryRequest, SnapshotRequestConverters::verifyRepository,_            options, VerifyRepositoryResponse::fromXContent, emptySet())__    };verifies,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,verify,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,verify,repository,response,verify,repository,verify,repository,request,verify,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,verify,repository,request,snapshot,request,converters,verify,repository,options,verify,repository,response,from,xcontent,empty,set
SnapshotClient -> public void createAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,                                     ActionListener<CreateSnapshotResponse> listener);1531729807;Asynchronously creates a snapshot._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public void createAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,_                                    ActionListener<CreateSnapshotResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(createSnapshotRequest, RequestConverters::createSnapshot, options,_            CreateSnapshotResponse::fromXContent, listener, emptySet())__    };asynchronously,creates,a,snapshot,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,void,create,async,create,snapshot,request,create,snapshot,request,request,options,options,action,listener,create,snapshot,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,create,snapshot,request,request,converters,create,snapshot,options,create,snapshot,response,from,xcontent,listener,empty,set
SnapshotClient -> public void createAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,                                     ActionListener<CreateSnapshotResponse> listener);1531910483;Asynchronously creates a snapshot._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public void createAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,_                                    ActionListener<CreateSnapshotResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(createSnapshotRequest, RequestConverters::createSnapshot, options,_            CreateSnapshotResponse::fromXContent, listener, emptySet())__    };asynchronously,creates,a,snapshot,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,void,create,async,create,snapshot,request,create,snapshot,request,request,options,options,action,listener,create,snapshot,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,create,snapshot,request,request,converters,create,snapshot,options,create,snapshot,response,from,xcontent,listener,empty,set
SnapshotClient -> public void createAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,                                     ActionListener<CreateSnapshotResponse> listener);1532456624;Asynchronously creates a snapshot._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public void createAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,_                                    ActionListener<CreateSnapshotResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(createSnapshotRequest, RequestConverters::createSnapshot, options,_            CreateSnapshotResponse::fromXContent, listener, emptySet())__    };asynchronously,creates,a,snapshot,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,void,create,async,create,snapshot,request,create,snapshot,request,request,options,options,action,listener,create,snapshot,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,create,snapshot,request,request,converters,create,snapshot,options,create,snapshot,response,from,xcontent,listener,empty,set
SnapshotClient -> public void createAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,                                     ActionListener<CreateSnapshotResponse> listener);1534362961;Asynchronously creates a snapshot._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public void createAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,_                                    ActionListener<CreateSnapshotResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(createSnapshotRequest, RequestConverters::createSnapshot, options,_            CreateSnapshotResponse::fromXContent, listener, emptySet())__    };asynchronously,creates,a,snapshot,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,void,create,async,create,snapshot,request,create,snapshot,request,request,options,options,action,listener,create,snapshot,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,create,snapshot,request,request,converters,create,snapshot,options,create,snapshot,response,from,xcontent,listener,empty,set
SnapshotClient -> public void createAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,                                     ActionListener<CreateSnapshotResponse> listener);1536611444;Asynchronously creates a snapshot._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public void createAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,_                                    ActionListener<CreateSnapshotResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(createSnapshotRequest, SnapshotRequestConverters::createSnapshot, options,_            CreateSnapshotResponse::fromXContent, listener, emptySet())__    };asynchronously,creates,a,snapshot,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,void,create,async,create,snapshot,request,create,snapshot,request,request,options,options,action,listener,create,snapshot,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,create,snapshot,request,snapshot,request,converters,create,snapshot,options,create,snapshot,response,from,xcontent,listener,empty,set
SnapshotClient -> public void getRepositoryAsync(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options,                                    ActionListener<GetRepositoriesResponse> listener);1531910483;Asynchronously gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param getRepositoriesRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getRepositoryAsync(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options,_                                   ActionListener<GetRepositoriesResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories, options,_            GetRepositoriesResponse::fromXContent, listener, emptySet())__    };asynchronously,gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,repositories,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,repository,async,get,repositories,request,get,repositories,request,request,options,options,action,listener,get,repositories,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,get,repositories,request,request,converters,get,repositories,options,get,repositories,response,from,xcontent,listener,empty,set
SnapshotClient -> public void getRepositoryAsync(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options,                                    ActionListener<GetRepositoriesResponse> listener);1532456624;Asynchronously gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param getRepositoriesRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getRepositoryAsync(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options,_                                   ActionListener<GetRepositoriesResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories, options,_            GetRepositoriesResponse::fromXContent, listener, emptySet())__    };asynchronously,gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,repositories,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,repository,async,get,repositories,request,get,repositories,request,request,options,options,action,listener,get,repositories,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,get,repositories,request,request,converters,get,repositories,options,get,repositories,response,from,xcontent,listener,empty,set
SnapshotClient -> public void getRepositoryAsync(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options,                                    ActionListener<GetRepositoriesResponse> listener);1534362961;Asynchronously gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param getRepositoriesRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getRepositoryAsync(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options,_                                   ActionListener<GetRepositoriesResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getRepositoriesRequest, RequestConverters::getRepositories, options,_            GetRepositoriesResponse::fromXContent, listener, emptySet())__    };asynchronously,gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,repositories,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,repository,async,get,repositories,request,get,repositories,request,request,options,options,action,listener,get,repositories,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,get,repositories,request,request,converters,get,repositories,options,get,repositories,response,from,xcontent,listener,empty,set
SnapshotClient -> public void getRepositoryAsync(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options,                                    ActionListener<GetRepositoriesResponse> listener);1536611444;Asynchronously gets a list of snapshot repositories. If the list of repositories is empty or it contains a single element "_all", all_registered repositories are returned._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param getRepositoriesRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void getRepositoryAsync(GetRepositoriesRequest getRepositoriesRequest, RequestOptions options,_                                   ActionListener<GetRepositoriesResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(getRepositoriesRequest, SnapshotRequestConverters::getRepositories, options,_            GetRepositoriesResponse::fromXContent, listener, emptySet())__    };asynchronously,gets,a,list,of,snapshot,repositories,if,the,list,of,repositories,is,empty,or,it,contains,a,single,element,all,registered,repositories,are,returned,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,get,repositories,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,get,repository,async,get,repositories,request,get,repositories,request,request,options,options,action,listener,get,repositories,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,get,repositories,request,snapshot,request,converters,get,repositories,options,get,repositories,response,from,xcontent,listener,empty,set
SnapshotClient -> public void createSnapshotAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,                                     ActionListener<CreateSnapshotResponse> listener);1531179852;Asynchronously creates a snapshot._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public void createSnapshotAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,_                                    ActionListener<CreateSnapshotResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(createSnapshotRequest, RequestConverters::createSnapshot, options,_            CreateSnapshotResponse::fromXContent, listener, emptySet())__    };asynchronously,creates,a,snapshot,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,void,create,snapshot,async,create,snapshot,request,create,snapshot,request,request,options,options,action,listener,create,snapshot,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,create,snapshot,request,request,converters,create,snapshot,options,create,snapshot,response,from,xcontent,listener,empty,set
SnapshotClient -> public void createSnapshotAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,                                     ActionListener<CreateSnapshotResponse> listener);1531382259;Asynchronously creates a snapshot._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public void createSnapshotAsync(CreateSnapshotRequest createSnapshotRequest, RequestOptions options,_                                    ActionListener<CreateSnapshotResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(createSnapshotRequest, RequestConverters::createSnapshot, options,_            CreateSnapshotResponse::fromXContent, listener, emptySet())__    };asynchronously,creates,a,snapshot,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,void,create,snapshot,async,create,snapshot,request,create,snapshot,request,request,options,options,action,listener,create,snapshot,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,create,snapshot,request,request,converters,create,snapshot,options,create,snapshot,response,from,xcontent,listener,empty,set
SnapshotClient -> public DeleteRepositoryResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, Header... headers)         throws IOException;1526981569;Deletes a snapshot repository._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public DeleteRepositoryResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, Header... headers)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository,_            DeleteRepositoryResponse::fromXContent, emptySet(), headers)__    };deletes,a,snapshot,repository,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,delete,repository,response,delete,repository,delete,repository,request,delete,repository,request,header,headers,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,delete,repository,request,request,converters,delete,repository,delete,repository,response,from,xcontent,empty,set,headers
SnapshotClient -> public DeleteRepositoryResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, Header... headers)         throws IOException;1527773340;Deletes a snapshot repository._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public DeleteRepositoryResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, Header... headers)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository,_            DeleteRepositoryResponse::fromXContent, emptySet(), headers)__    };deletes,a,snapshot,repository,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,delete,repository,response,delete,repository,delete,repository,request,delete,repository,request,header,headers,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,delete,repository,request,request,converters,delete,repository,delete,repository,response,from,xcontent,empty,set,headers
SnapshotClient -> public AcknowledgedResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options)         throws IOException;1534362961;Deletes a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param deleteRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(deleteRepositoryRequest, RequestConverters::deleteRepository, options,_            AcknowledgedResponse::fromXContent, emptySet())__    };deletes,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,repository,delete,repository,request,delete,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,delete,repository,request,request,converters,delete,repository,options,acknowledged,response,from,xcontent,empty,set
SnapshotClient -> public AcknowledgedResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options)         throws IOException;1536611444;Deletes a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param deleteRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@return the response_@throws IOException in case there is a problem sending the request or parsing back the response;public AcknowledgedResponse deleteRepository(DeleteRepositoryRequest deleteRepositoryRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(deleteRepositoryRequest, SnapshotRequestConverters::deleteRepository,_            options, AcknowledgedResponse::fromXContent, emptySet())__    };deletes,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,return,the,response,throws,ioexception,in,case,there,is,a,problem,sending,the,request,or,parsing,back,the,response;public,acknowledged,response,delete,repository,delete,repository,request,delete,repository,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,delete,repository,request,snapshot,request,converters,delete,repository,options,acknowledged,response,from,xcontent,empty,set
SnapshotClient -> public void deleteAsync(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options,                             ActionListener<AcknowledgedResponse> listener);1534362961;Asynchronously deletes a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param deleteSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteAsync(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options,_                            ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(deleteSnapshotRequest, RequestConverters::deleteSnapshot, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,deletes,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,async,delete,snapshot,request,delete,snapshot,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,delete,snapshot,request,request,converters,delete,snapshot,options,acknowledged,response,from,xcontent,listener,empty,set
SnapshotClient -> public void deleteAsync(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options,                             ActionListener<AcknowledgedResponse> listener);1536611444;Asynchronously deletes a snapshot._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>__@param deleteSnapshotRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void deleteAsync(DeleteSnapshotRequest deleteSnapshotRequest, RequestOptions options,_                            ActionListener<AcknowledgedResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(deleteSnapshotRequest, SnapshotRequestConverters::deleteSnapshot, options,_            AcknowledgedResponse::fromXContent, listener, emptySet())__    };asynchronously,deletes,a,snapshot,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,delete,snapshot,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,delete,async,delete,snapshot,request,delete,snapshot,request,request,options,options,action,listener,acknowledged,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,delete,snapshot,request,snapshot,request,converters,delete,snapshot,options,acknowledged,response,from,xcontent,listener,empty,set
SnapshotClient -> public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest, RequestOptions options,                                       ActionListener<PutRepositoryResponse> listener);1528706846;Asynchronously creates a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param putRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest, RequestOptions options,_                                      ActionListener<PutRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(putRepositoryRequest, RequestConverters::createRepository, options,_            PutRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,creates,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,put,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,create,repository,async,put,repository,request,put,repository,request,request,options,options,action,listener,put,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,put,repository,request,request,converters,create,repository,options,put,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest, RequestOptions options,                                       ActionListener<PutRepositoryResponse> listener);1529508649;Asynchronously creates a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param putRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest, RequestOptions options,_                                      ActionListener<PutRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(putRepositoryRequest, RequestConverters::createRepository, options,_            PutRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,creates,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,put,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,create,repository,async,put,repository,request,put,repository,request,request,options,options,action,listener,put,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,put,repository,request,request,converters,create,repository,options,put,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest, RequestOptions options,                                       ActionListener<PutRepositoryResponse> listener);1531179852;Asynchronously creates a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param putRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest, RequestOptions options,_                                      ActionListener<PutRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(putRepositoryRequest, RequestConverters::createRepository, options,_            PutRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,creates,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,put,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,create,repository,async,put,repository,request,put,repository,request,request,options,options,action,listener,put,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,put,repository,request,request,converters,create,repository,options,put,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest, RequestOptions options,                                       ActionListener<PutRepositoryResponse> listener);1531382259;Asynchronously creates a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param putRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest, RequestOptions options,_                                      ActionListener<PutRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(putRepositoryRequest, RequestConverters::createRepository, options,_            PutRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,creates,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,put,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,create,repository,async,put,repository,request,put,repository,request,request,options,options,action,listener,put,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,put,repository,request,request,converters,create,repository,options,put,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest, RequestOptions options,                                       ActionListener<PutRepositoryResponse> listener);1531729807;Asynchronously creates a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param putRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest, RequestOptions options,_                                      ActionListener<PutRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(putRepositoryRequest, RequestConverters::createRepository, options,_            PutRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,creates,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,put,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,create,repository,async,put,repository,request,put,repository,request,request,options,options,action,listener,put,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,put,repository,request,request,converters,create,repository,options,put,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest, RequestOptions options,                                       ActionListener<PutRepositoryResponse> listener);1531910483;Asynchronously creates a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param putRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest, RequestOptions options,_                                      ActionListener<PutRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(putRepositoryRequest, RequestConverters::createRepository, options,_            PutRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,creates,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,put,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,create,repository,async,put,repository,request,put,repository,request,request,options,options,action,listener,put,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,put,repository,request,request,converters,create,repository,options,put,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest, RequestOptions options,                                       ActionListener<PutRepositoryResponse> listener);1532456624;Asynchronously creates a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param putRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void createRepositoryAsync(PutRepositoryRequest putRepositoryRequest, RequestOptions options,_                                      ActionListener<PutRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(putRepositoryRequest, RequestConverters::createRepository, options,_            PutRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,creates,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,put,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,create,repository,async,put,repository,request,put,repository,request,request,options,options,action,listener,put,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,put,repository,request,request,converters,create,repository,options,put,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void verifyRepositoryAsync(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options,                                       ActionListener<VerifyRepositoryResponse> listener);1528706846;Asynchronously verifies a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param verifyRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void verifyRepositoryAsync(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options,_                                      ActionListener<VerifyRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(verifyRepositoryRequest, RequestConverters::verifyRepository, options,_            VerifyRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,verifies,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,verify,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,verify,repository,async,verify,repository,request,verify,repository,request,request,options,options,action,listener,verify,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,verify,repository,request,request,converters,verify,repository,options,verify,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void verifyRepositoryAsync(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options,                                       ActionListener<VerifyRepositoryResponse> listener);1529508649;Asynchronously verifies a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param verifyRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void verifyRepositoryAsync(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options,_                                      ActionListener<VerifyRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(verifyRepositoryRequest, RequestConverters::verifyRepository, options,_            VerifyRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,verifies,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,verify,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,verify,repository,async,verify,repository,request,verify,repository,request,request,options,options,action,listener,verify,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,verify,repository,request,request,converters,verify,repository,options,verify,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void verifyRepositoryAsync(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options,                                       ActionListener<VerifyRepositoryResponse> listener);1531179852;Asynchronously verifies a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param verifyRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void verifyRepositoryAsync(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options,_                                      ActionListener<VerifyRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(verifyRepositoryRequest, RequestConverters::verifyRepository, options,_            VerifyRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,verifies,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,verify,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,verify,repository,async,verify,repository,request,verify,repository,request,request,options,options,action,listener,verify,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,verify,repository,request,request,converters,verify,repository,options,verify,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void verifyRepositoryAsync(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options,                                       ActionListener<VerifyRepositoryResponse> listener);1531382259;Asynchronously verifies a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param verifyRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void verifyRepositoryAsync(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options,_                                      ActionListener<VerifyRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(verifyRepositoryRequest, RequestConverters::verifyRepository, options,_            VerifyRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,verifies,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,verify,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,verify,repository,async,verify,repository,request,verify,repository,request,request,options,options,action,listener,verify,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,verify,repository,request,request,converters,verify,repository,options,verify,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void verifyRepositoryAsync(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options,                                       ActionListener<VerifyRepositoryResponse> listener);1531729807;Asynchronously verifies a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param verifyRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void verifyRepositoryAsync(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options,_                                      ActionListener<VerifyRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(verifyRepositoryRequest, RequestConverters::verifyRepository, options,_            VerifyRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,verifies,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,verify,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,verify,repository,async,verify,repository,request,verify,repository,request,request,options,options,action,listener,verify,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,verify,repository,request,request,converters,verify,repository,options,verify,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void verifyRepositoryAsync(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options,                                       ActionListener<VerifyRepositoryResponse> listener);1531910483;Asynchronously verifies a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param verifyRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void verifyRepositoryAsync(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options,_                                      ActionListener<VerifyRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(verifyRepositoryRequest, RequestConverters::verifyRepository, options,_            VerifyRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,verifies,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,verify,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,verify,repository,async,verify,repository,request,verify,repository,request,request,options,options,action,listener,verify,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,verify,repository,request,request,converters,verify,repository,options,verify,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void verifyRepositoryAsync(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options,                                       ActionListener<VerifyRepositoryResponse> listener);1532456624;Asynchronously verifies a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param verifyRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void verifyRepositoryAsync(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options,_                                      ActionListener<VerifyRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(verifyRepositoryRequest, RequestConverters::verifyRepository, options,_            VerifyRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,verifies,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,verify,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,verify,repository,async,verify,repository,request,verify,repository,request,request,options,options,action,listener,verify,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,verify,repository,request,request,converters,verify,repository,options,verify,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void verifyRepositoryAsync(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options,                                       ActionListener<VerifyRepositoryResponse> listener);1534362961;Asynchronously verifies a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param verifyRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void verifyRepositoryAsync(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options,_                                      ActionListener<VerifyRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(verifyRepositoryRequest, RequestConverters::verifyRepository, options,_            VerifyRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,verifies,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,verify,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,verify,repository,async,verify,repository,request,verify,repository,request,request,options,options,action,listener,verify,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,verify,repository,request,request,converters,verify,repository,options,verify,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public void verifyRepositoryAsync(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options,                                       ActionListener<VerifyRepositoryResponse> listener);1536611444;Asynchronously verifies a snapshot repository._See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>_@param verifyRepositoryRequest the request_@param options the request options (e.g. headers), use {@link RequestOptions#DEFAULT} if nothing needs to be customized_@param listener the listener to be notified upon request completion;public void verifyRepositoryAsync(VerifyRepositoryRequest verifyRepositoryRequest, RequestOptions options,_                                      ActionListener<VerifyRepositoryResponse> listener) {_        restHighLevelClient.performRequestAsyncAndParseEntity(verifyRepositoryRequest, SnapshotRequestConverters::verifyRepository, options,_            VerifyRepositoryResponse::fromXContent, listener, emptySet())__    };asynchronously,verifies,a,snapshot,repository,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a,param,verify,repository,request,the,request,param,options,the,request,options,e,g,headers,use,link,request,options,default,if,nothing,needs,to,be,customized,param,listener,the,listener,to,be,notified,upon,request,completion;public,void,verify,repository,async,verify,repository,request,verify,repository,request,request,options,options,action,listener,verify,repository,response,listener,rest,high,level,client,perform,request,async,and,parse,entity,verify,repository,request,snapshot,request,converters,verify,repository,options,verify,repository,response,from,xcontent,listener,empty,set
SnapshotClient -> public CreateSnapshotResponse create(CreateSnapshotRequest createSnapshotRequest, RequestOptions options)         throws IOException;1531729807;Creates a snapshot._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public CreateSnapshotResponse create(CreateSnapshotRequest createSnapshotRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(createSnapshotRequest, RequestConverters::createSnapshot, options,_            CreateSnapshotResponse::fromXContent, emptySet())__    };creates,a,snapshot,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,create,snapshot,response,create,create,snapshot,request,create,snapshot,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,create,snapshot,request,request,converters,create,snapshot,options,create,snapshot,response,from,xcontent,empty,set
SnapshotClient -> public CreateSnapshotResponse create(CreateSnapshotRequest createSnapshotRequest, RequestOptions options)         throws IOException;1531910483;Creates a snapshot._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public CreateSnapshotResponse create(CreateSnapshotRequest createSnapshotRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(createSnapshotRequest, RequestConverters::createSnapshot, options,_            CreateSnapshotResponse::fromXContent, emptySet())__    };creates,a,snapshot,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,create,snapshot,response,create,create,snapshot,request,create,snapshot,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,create,snapshot,request,request,converters,create,snapshot,options,create,snapshot,response,from,xcontent,empty,set
SnapshotClient -> public CreateSnapshotResponse create(CreateSnapshotRequest createSnapshotRequest, RequestOptions options)         throws IOException;1532456624;Creates a snapshot._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public CreateSnapshotResponse create(CreateSnapshotRequest createSnapshotRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(createSnapshotRequest, RequestConverters::createSnapshot, options,_            CreateSnapshotResponse::fromXContent, emptySet())__    };creates,a,snapshot,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,create,snapshot,response,create,create,snapshot,request,create,snapshot,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,create,snapshot,request,request,converters,create,snapshot,options,create,snapshot,response,from,xcontent,empty,set
SnapshotClient -> public CreateSnapshotResponse create(CreateSnapshotRequest createSnapshotRequest, RequestOptions options)         throws IOException;1534362961;Creates a snapshot._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public CreateSnapshotResponse create(CreateSnapshotRequest createSnapshotRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(createSnapshotRequest, RequestConverters::createSnapshot, options,_            CreateSnapshotResponse::fromXContent, emptySet())__    };creates,a,snapshot,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,create,snapshot,response,create,create,snapshot,request,create,snapshot,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,create,snapshot,request,request,converters,create,snapshot,options,create,snapshot,response,from,xcontent,empty,set
SnapshotClient -> public CreateSnapshotResponse create(CreateSnapshotRequest createSnapshotRequest, RequestOptions options)         throws IOException;1536611444;Creates a snapshot._<p>_See <a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-snapshots.html"> Snapshot and Restore_API on elastic.co</a>;public CreateSnapshotResponse create(CreateSnapshotRequest createSnapshotRequest, RequestOptions options)_        throws IOException {_        return restHighLevelClient.performRequestAndParseEntity(createSnapshotRequest, SnapshotRequestConverters::createSnapshot, options,_            CreateSnapshotResponse::fromXContent, emptySet())__    };creates,a,snapshot,p,see,a,href,https,www,elastic,co,guide,en,elasticsearch,reference,current,modules,snapshots,html,snapshot,and,restore,api,on,elastic,co,a;public,create,snapshot,response,create,create,snapshot,request,create,snapshot,request,request,options,options,throws,ioexception,return,rest,high,level,client,perform,request,and,parse,entity,create,snapshot,request,snapshot,request,converters,create,snapshot,options,create,snapshot,response,from,xcontent,empty,set
