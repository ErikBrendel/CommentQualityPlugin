commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Map<String, MappingMetaData> mappings() {     return mappings. }
false;public,static;1;25;;public static GetMappingsResponse fromXContent(XContentParser parser) throws IOException {     if (parser.currentToken() == null) {         parser.nextToken().     }     XContentParserUtils.ensureExpectedToken(parser.currentToken(), XContentParser.Token.START_OBJECT, parser::getTokenLocation).     Map<String, Object> parts = parser.map().     Map<String, MappingMetaData> mappings = new HashMap<>().     for (Map.Entry<String, Object> entry : parts.entrySet()) {         String indexName = entry.getKey().         assert entry.getValue() instanceof Map : "expected a map as type mapping, but got: " + entry.getValue().getClass().         @SuppressWarnings("unchecked")         final Map<String, Object> fieldMappings = (Map<String, Object>) ((Map<String, ?>) entry.getValue()).get(MAPPINGS.getPreferredName()).         mappings.put(indexName, new MappingMetaData(MapperService.SINGLE_MAPPING_NAME, fieldMappings)).     }     return new GetMappingsResponse(mappings). }
