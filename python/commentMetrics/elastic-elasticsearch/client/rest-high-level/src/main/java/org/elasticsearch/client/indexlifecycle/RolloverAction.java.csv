commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;3;;public static RolloverAction parse(XContentParser parser) {     return PARSER.apply(parser, null). }
false;public;0;3;;public ByteSizeValue getMaxSize() {     return maxSize. }
false;public;0;3;;public TimeValue getMaxAge() {     return maxAge. }
false;public;0;3;;public Long getMaxDocs() {     return maxDocs. }
false;public;0;4;;@Override public String getName() {     return NAME. }
false;public;2;15;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     if (maxSize != null) {         builder.field(MAX_SIZE_FIELD.getPreferredName(), maxSize.getStringRep()).     }     if (maxAge != null) {         builder.field(MAX_AGE_FIELD.getPreferredName(), maxAge.getStringRep()).     }     if (maxDocs != null) {         builder.field(MAX_DOCS_FIELD.getPreferredName(), maxDocs).     }     builder.endObject().     return builder. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(maxSize, maxAge, maxDocs). }
false;public;1;13;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (obj.getClass() != getClass()) {         return false.     }     RolloverAction other = (RolloverAction) obj.     return Objects.equals(maxSize, other.maxSize) && Objects.equals(maxAge, other.maxAge) && Objects.equals(maxDocs, other.maxDocs). }
false;public;0;4;;@Override public String toString() {     return Strings.toString(this). }
