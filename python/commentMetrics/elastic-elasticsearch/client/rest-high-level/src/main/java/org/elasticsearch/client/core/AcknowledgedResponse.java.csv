commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public boolean isAcknowledged() {     return acknowledged. }
false;protected,static;3;5;;protected static <T> ConstructingObjectParser<T, Void> generateParser(String name, Function<Boolean, T> ctor, String parseField) {     ConstructingObjectParser<T, Void> p = new ConstructingObjectParser<>(name, true, args -> ctor.apply((boolean) args[0])).     p.declareBoolean(constructorArg(), new ParseField(parseField)).     return p. }
false;public,static;1;3;;public static AcknowledgedResponse fromXContent(final XContentParser parser) throws IOException {     return PARSER.parse(parser, null). }
false;public;1;11;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     final AcknowledgedResponse that = (AcknowledgedResponse) o.     return isAcknowledged() == that.isAcknowledged(). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(acknowledged). }
true;protected;0;3;/**  * @return the field name this response uses to output the acknowledged flag  */ ;/**  * @return the field name this response uses to output the acknowledged flag  */ protected String getFieldName() {     return PARSE_FIELD_NAME. }
