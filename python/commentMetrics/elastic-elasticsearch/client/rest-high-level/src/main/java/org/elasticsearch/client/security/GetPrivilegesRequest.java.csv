commented;modifiers;parameterAmount;loc;comment;code
true;public,static;0;3;/**  * Constructs a {@link GetPrivilegesRequest} to request all the privileges defined for all applications  */ ;/**  * Constructs a {@link GetPrivilegesRequest} to request all the privileges defined for all applications  */ public static GetPrivilegesRequest getAllPrivileges() {     return new GetPrivilegesRequest(null). }
true;public,static;1;6;/**  * Constructs a {@link GetPrivilegesRequest} to request all the privileges defined for the specified {@code applicationName}  *  * @param applicationName the name of the application for which the privileges are requested  */ ;/**  * Constructs a {@link GetPrivilegesRequest} to request all the privileges defined for the specified {@code applicationName}  *  * @param applicationName the name of the application for which the privileges are requested  */ public static GetPrivilegesRequest getApplicationPrivileges(String applicationName) {     if (Strings.isNullOrEmpty(applicationName)) {         throw new IllegalArgumentException("application name is required").     }     return new GetPrivilegesRequest(applicationName). }
true;public;0;3;/**  * @return the name of the application for which to return certain privileges  */ ;/**  * @return the name of the application for which to return certain privileges  */ public String getApplicationName() {     return applicationName. }
true;public;0;3;/**  * @return an array of privilege names to return or null if all should be returned  */ ;/**  * @return an array of privilege names to return or null if all should be returned  */ public String[] getPrivilegeNames() {     return privilegeNames. }
false;public;1;8;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     GetPrivilegesRequest that = (GetPrivilegesRequest) o.     return Objects.equals(applicationName, that.applicationName) && Arrays.equals(privilegeNames, that.privilegeNames). }
false;public;0;6;;@Override public int hashCode() {     int result = Objects.hash(applicationName).     result = 31 * result + Arrays.hashCode(privilegeNames).     return result. }
