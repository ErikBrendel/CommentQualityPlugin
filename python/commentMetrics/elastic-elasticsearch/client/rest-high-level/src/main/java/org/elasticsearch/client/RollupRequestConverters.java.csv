commented;modifiers;parameterAmount;loc;comment;code
false;static;1;9;;static Request putJob(final PutRollupJobRequest putRollupJobRequest) throws IOException {     String endpoint = new RequestConverters.EndpointBuilder().addPathPartAsIs("_rollup", "job").addPathPart(putRollupJobRequest.getConfig().getId()).build().     Request request = new Request(HttpPut.METHOD_NAME, endpoint).     request.setEntity(createEntity(putRollupJobRequest, REQUEST_BODY_CONTENT_TYPE)).     return request. }
false;static;1;8;;static Request startJob(final StartRollupJobRequest startRollupJobRequest) throws IOException {     String endpoint = new RequestConverters.EndpointBuilder().addPathPartAsIs("_rollup", "job").addPathPart(startRollupJobRequest.getJobId()).addPathPartAsIs("_start").build().     return new Request(HttpPost.METHOD_NAME, endpoint). }
false;static;1;15;;static Request stopJob(final StopRollupJobRequest stopRollupJobRequest) throws IOException {     String endpoint = new RequestConverters.EndpointBuilder().addPathPartAsIs("_rollup", "job").addPathPart(stopRollupJobRequest.getJobId()).addPathPartAsIs("_stop").build().     Request request = new Request(HttpPost.METHOD_NAME, endpoint).     RequestConverters.Params parameters = new RequestConverters.Params(request).     parameters.withTimeout(stopRollupJobRequest.timeout()).     if (stopRollupJobRequest.waitForCompletion() != null) {         parameters.withWaitForCompletion(stopRollupJobRequest.waitForCompletion()).     }     return request. }
false;static;1;7;;static Request getJob(final GetRollupJobRequest getRollupJobRequest) {     String endpoint = new RequestConverters.EndpointBuilder().addPathPartAsIs("_rollup", "job").addPathPart(getRollupJobRequest.getJobId()).build().     return new Request(HttpGet.METHOD_NAME, endpoint). }
false;static;1;9;;static Request deleteJob(final DeleteRollupJobRequest deleteRollupJobRequest) throws IOException {     String endpoint = new RequestConverters.EndpointBuilder().addPathPartAsIs("_rollup", "job").addPathPart(deleteRollupJobRequest.getId()).build().     Request request = new Request(HttpDelete.METHOD_NAME, endpoint).     request.setEntity(createEntity(deleteRollupJobRequest, REQUEST_BODY_CONTENT_TYPE)).     return request. }
false;static;1;13;;static Request search(final SearchRequest request) throws IOException {     if (request.types().length > 0) {         /*              * Ideally we'd check this with the standard validation framework              * but we don't have a special request for rollup search so that'd              * be difficult.               */         ValidationException ve = new ValidationException().         ve.addValidationError("types are not allowed in rollup search").         throw ve.     }     return RequestConverters.search(request, "_rollup_search"). }
false;static;1;9;;static Request getRollupCaps(final GetRollupCapsRequest getRollupCapsRequest) throws IOException {     String endpoint = new RequestConverters.EndpointBuilder().addPathPartAsIs("_rollup", "data").addPathPart(getRollupCapsRequest.getIndexPattern()).build().     Request request = new Request(HttpGet.METHOD_NAME, endpoint).     request.setEntity(createEntity(getRollupCapsRequest, REQUEST_BODY_CONTENT_TYPE)).     return request. }
false;static;1;9;;static Request getRollupIndexCaps(final GetRollupIndexCapsRequest getRollupIndexCapsRequest) throws IOException {     String endpoint = new RequestConverters.EndpointBuilder().addCommaSeparatedPathParts(getRollupIndexCapsRequest.indices()).addPathPartAsIs("_rollup", "data").build().     Request request = new Request(HttpGet.METHOD_NAME, endpoint).     request.setEntity(createEntity(getRollupIndexCapsRequest, REQUEST_BODY_CONTENT_TYPE)).     return request. }
