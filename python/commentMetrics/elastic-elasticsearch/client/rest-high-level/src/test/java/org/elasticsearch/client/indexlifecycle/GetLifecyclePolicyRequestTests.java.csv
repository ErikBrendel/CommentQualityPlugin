commented;modifiers;parameterAmount;loc;comment;code
false;private;0;8;;private GetLifecyclePolicyRequest createTestInstance() {     int numPolicies = randomIntBetween(0, 10).     String[] policyNames = new String[numPolicies].     for (int i = 0. i < numPolicies. i++) {         policyNames[i] = "policy-" + randomAlphaOfLengthBetween(2, 5).     }     return new GetLifecyclePolicyRequest(policyNames). }
false;public;0;4;;public void testValidation() {     GetLifecyclePolicyRequest request = createTestInstance().     assertFalse(request.validate().isPresent()). }
false;public;0;4;;public void testNullPolicyNameShouldFail() {     expectThrows(IllegalArgumentException.class, () -> new GetLifecyclePolicyRequest(randomAlphaOfLengthBetween(2, 20), null, randomAlphaOfLengthBetween(2, 20))). }
