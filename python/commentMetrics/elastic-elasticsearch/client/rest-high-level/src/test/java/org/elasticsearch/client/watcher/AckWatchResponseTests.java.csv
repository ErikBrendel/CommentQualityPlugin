commented;modifiers;parameterAmount;loc;comment;code
false;public;0;16;;public void testBasicParsing() throws IOException {     XContentType contentType = randomFrom(XContentType.values()).     XContentBuilder builder = XContentFactory.contentBuilder(contentType).startObject().startObject("status").field("version", 42).field("execution_state", ExecutionState.ACKNOWLEDGED).endObject().endObject().     BytesReference bytes = BytesReference.bytes(builder).     AckWatchResponse response = parse(builder.contentType(), bytes).     WatchStatus status = response.getStatus().     assertNotNull(status).     assertEquals(42, status.version()).     assertEquals(ExecutionState.ACKNOWLEDGED, status.getExecutionState()). }
false;public;0;7;;public void testParsingWithMissingStatus() throws IOException {     XContentType contentType = randomFrom(XContentType.values()).     XContentBuilder builder = XContentFactory.contentBuilder(contentType).startObject().endObject().     BytesReference bytes = BytesReference.bytes(builder).     expectThrows(IllegalArgumentException.class, () -> parse(builder.contentType(), bytes)). }
false;public;0;9;;public void testParsingWithNullStatus() throws IOException {     XContentType contentType = randomFrom(XContentType.values()).     XContentBuilder builder = XContentFactory.contentBuilder(contentType).startObject().nullField("status").endObject().     BytesReference bytes = BytesReference.bytes(builder).     expectThrows(XContentParseException.class, () -> parse(builder.contentType(), bytes)). }
false;public;0;20;;public void testParsingWithUnknownKeys() throws IOException {     XContentType contentType = randomFrom(XContentType.values()).     XContentBuilder builder = XContentFactory.contentBuilder(contentType).startObject().startObject("status").field("version", 42).field("execution_state", ExecutionState.ACKNOWLEDGED).endObject().endObject().     BytesReference bytes = BytesReference.bytes(builder).     Predicate<String> excludeFilter = field -> field.equals("status.actions").     BytesReference bytesWithRandomFields = XContentTestUtils.insertRandomFields(builder.contentType(), bytes, excludeFilter, random()).     AckWatchResponse response = parse(builder.contentType(), bytesWithRandomFields).     WatchStatus status = response.getStatus().     assertNotNull(status).     assertEquals(42, status.version()).     assertEquals(ExecutionState.ACKNOWLEDGED, status.getExecutionState()). }
false;private;2;6;;private AckWatchResponse parse(XContentType contentType, BytesReference bytes) throws IOException {     XContentParser parser = XContentFactory.xContent(contentType).createParser(NamedXContentRegistry.EMPTY, null, bytes.streamInput()).     parser.nextToken().     return AckWatchResponse.fromXContent(parser). }
