commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;public void testIsValidChange() {     assertFalse(OperationMode.RUNNING.isValidChange(OperationMode.RUNNING)).     assertTrue(OperationMode.RUNNING.isValidChange(OperationMode.STOPPING)).     assertFalse(OperationMode.RUNNING.isValidChange(OperationMode.STOPPED)).     assertTrue(OperationMode.STOPPING.isValidChange(OperationMode.RUNNING)).     assertFalse(OperationMode.STOPPING.isValidChange(OperationMode.STOPPING)).     assertTrue(OperationMode.STOPPING.isValidChange(OperationMode.STOPPED)).     assertTrue(OperationMode.STOPPED.isValidChange(OperationMode.RUNNING)).     assertFalse(OperationMode.STOPPED.isValidChange(OperationMode.STOPPING)).     assertFalse(OperationMode.STOPPED.isValidChange(OperationMode.STOPPED)). }
false;public;0;3;;public void testFromName() {     EnumSet.allOf(OperationMode.class).forEach(e -> assertEquals(OperationMode.fromString(e.name()), e)). }
false;public;0;5;;public void testFromNameInvalid() {     String invalidName = randomAlphaOfLength(10).     Exception e = expectThrows(IllegalArgumentException.class, () -> OperationMode.fromString(invalidName)).     assertThat(e.getMessage(), CoreMatchers.containsString(invalidName + " is not a valid operation_mode")). }
