commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;public void testAcknowledgeWatchInvalidWatchId() {     ValidationException e = expectThrows(ValidationException.class, () -> new AckWatchRequest("id with whitespaces")).     assertThat(e.validationErrors(), hasItem("watch id contains whitespace")). }
false;public;0;5;;public void testAcknowledgeWatchInvalidActionId() {     ValidationException e = expectThrows(ValidationException.class, () -> new AckWatchRequest("_id", "action id with whitespaces")).     assertThat(e.validationErrors(), hasItem("action id [action id with whitespaces] contains whitespace")). }
false;public;0;6;;public void testAcknowledgeWatchNullActionArray() {     // need this to prevent some compilation errors, i.e. in 1.8.0_91     String[] nullArray = null.     Optional<ValidationException> e = new AckWatchRequest("_id", nullArray).validate().     assertFalse(e.isPresent()). }
false;public;0;5;;public void testAcknowledgeWatchNullActionId() {     ValidationException e = expectThrows(ValidationException.class, () -> new AckWatchRequest("_id", new String[] { null })).     assertThat(e.validationErrors(), hasItem("action id may not be null")). }
false;public;0;5;;public void testDeleteWatchInvalidWatchId() {     final IllegalArgumentException exception = expectThrows(IllegalArgumentException.class, () -> new DeleteWatchRequest("id with whitespaces")).     assertThat(exception.getMessage(), is("watch id contains whitespace")). }
false;public;0;5;;public void testDeleteWatchNullId() {     final NullPointerException exception = expectThrows(NullPointerException.class, () -> new DeleteWatchRequest(null)).     assertThat(exception.getMessage(), is("watch id is missing")). }
false;public;0;5;;public void testPutWatchInvalidWatchId() {     final IllegalArgumentException exception = expectThrows(IllegalArgumentException.class, () -> new PutWatchRequest("id with whitespaces", BytesArray.EMPTY, XContentType.JSON)).     assertThat(exception.getMessage(), is("watch id contains whitespace")). }
false;public;0;5;;public void testPutWatchNullId() {     final NullPointerException exception = expectThrows(NullPointerException.class, () -> new PutWatchRequest(null, BytesArray.EMPTY, XContentType.JSON)).     assertThat(exception.getMessage(), is("watch id is missing")). }
false;public;0;5;;public void testPutWatchSourceNull() {     final NullPointerException exception = expectThrows(NullPointerException.class, () -> new PutWatchRequest("foo", null, XContentType.JSON)).     assertThat(exception.getMessage(), is("watch source is missing")). }
false;public;0;5;;public void testPutWatchContentNull() {     final NullPointerException exception = expectThrows(NullPointerException.class, () -> new PutWatchRequest("foo", BytesArray.EMPTY, null)).     assertThat(exception.getMessage(), is("request body is missing")). }
false;public;0;5;;public void testGetWatchInvalidWatchId() {     ValidationException e = expectThrows(ValidationException.class, () -> new GetWatchRequest("id with whitespaces")).     assertThat(e.validationErrors(), hasItem("watch id contains whitespace")). }
