commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;public void testPutJob() throws IOException {     String job = randomAlphaOfLength(5).     RollupJobConfig config = RollupJobConfigTests.randomRollupJobConfig(job).     PutRollupJobRequest put = new PutRollupJobRequest(config).     Request request = RollupRequestConverters.putJob(put).     assertThat(request.getEndpoint(), equalTo("/_rollup/job/" + job)).     assertThat(HttpPut.METHOD_NAME, equalTo(request.getMethod())).     assertThat(request.getParameters().keySet(), empty()).     RequestConvertersTests.assertToXContentBody(put, request.getEntity()). }
false;public;0;11;;public void testStartJob() throws IOException {     String jobId = randomAlphaOfLength(5).     StartRollupJobRequest startJob = new StartRollupJobRequest(jobId).     Request request = RollupRequestConverters.startJob(startJob).     assertThat(request.getEndpoint(), equalTo("/_rollup/job/" + jobId + "/_start")).     assertThat(HttpPost.METHOD_NAME, equalTo(request.getMethod())).     assertThat(request.getParameters().keySet(), empty()).     assertThat(request.getEntity(), nullValue()). }
false;public;0;25;;public void testStopJob() throws IOException {     String jobId = randomAlphaOfLength(5).     StopRollupJobRequest stopJob = new StopRollupJobRequest(jobId).     String expectedTimeOutString = null.     String expectedWaitForCompletion = null.     int expectedParameters = 0.     if (randomBoolean()) {         stopJob.timeout(TimeValue.parseTimeValue(randomPositiveTimeValue(), "timeout")).         expectedTimeOutString = stopJob.timeout().getStringRep().         expectedParameters++.     }     if (randomBoolean()) {         stopJob.waitForCompletion(randomBoolean()).         expectedWaitForCompletion = stopJob.waitForCompletion().toString().         expectedParameters++.     }     Request request = RollupRequestConverters.stopJob(stopJob).     assertThat(request.getEndpoint(), equalTo("/_rollup/job/" + jobId + "/_stop")).     assertThat(HttpPost.METHOD_NAME, equalTo(request.getMethod())).     assertThat(request.getParameters().keySet().size(), equalTo(expectedParameters)).     assertThat(request.getParameters().get("timeout"), equalTo(expectedTimeOutString)).     assertThat(request.getParameters().get("wait_for_completion"), equalTo(expectedWaitForCompletion)).     assertNull(request.getEntity()). }
false;public;0;11;;public void testGetJob() {     boolean getAll = randomBoolean().     String job = getAll ? "_all" : RequestConvertersTests.randomIndicesNames(1, 1)[0].     GetRollupJobRequest get = getAll ? new GetRollupJobRequest() : new GetRollupJobRequest(job).     Request request = RollupRequestConverters.getJob(get).     assertThat(request.getEndpoint(), equalTo("/_rollup/job/" + job)).     assertThat(HttpGet.METHOD_NAME, equalTo(request.getMethod())).     assertThat(request.getParameters().keySet(), empty()).     assertThat(request.getEntity(), nullValue()). }
