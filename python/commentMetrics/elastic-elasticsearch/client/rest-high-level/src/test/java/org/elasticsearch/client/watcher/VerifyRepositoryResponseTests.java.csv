commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;public void testFromXContent() throws IOException {     xContentTester(this::createParser, VerifyRepositoryResponseTests::createTestInstance, VerifyRepositoryResponseTests::toXContent, VerifyRepositoryResponse::fromXContent).supportsUnknownFields(true).shuffleFieldsExceptions(// do not mix up the order of nodes, it will cause the tests to fail     new String[] { "nodes" }).randomFieldsExcludeFilter(// everything in nodes needs to be a particular parseable object     (f) -> f.equals("nodes")).assertToXContentEquivalence(false).test(). }
false;private,static;0;8;;private static VerifyRepositoryResponse createTestInstance() {     List<VerifyRepositoryResponse.NodeView> nodes = new ArrayList<>().     for (int i = 0. i < randomIntBetween(0, 2). i++) {         nodes.add(new VerifyRepositoryResponse.NodeView(randomAlphaOfLength(5), randomAlphaOfLength(5))).     }     return new VerifyRepositoryResponse(nodes). }
false;private,static;2;3;;private static XContentBuilder toXContent(VerifyRepositoryResponse response, XContentBuilder builder) throws IOException {     return response.toXContent(builder, ToXContent.EMPTY_PARAMS). }
