commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;public void testFromXContent() throws IOException {     xContentTester(this::createParser, FollowConfigTests::createTestInstance, (followConfig, xContentBuilder) -> {         xContentBuilder.startObject().         followConfig.toXContentFragment(xContentBuilder, ToXContent.EMPTY_PARAMS).         xContentBuilder.endObject().     }, FollowConfig::fromXContent).supportsUnknownFields(true).test(). }
false;static;0;34;;static FollowConfig createTestInstance() {     FollowConfig followConfig = new FollowConfig().     if (randomBoolean()) {         followConfig.setMaxOutstandingReadRequests(randomIntBetween(0, Integer.MAX_VALUE)).     }     if (randomBoolean()) {         followConfig.setMaxOutstandingWriteRequests(randomIntBetween(0, Integer.MAX_VALUE)).     }     if (randomBoolean()) {         followConfig.setMaxReadRequestOperationCount(randomIntBetween(0, Integer.MAX_VALUE)).     }     if (randomBoolean()) {         followConfig.setMaxReadRequestSize(new ByteSizeValue(randomNonNegativeLong())).     }     if (randomBoolean()) {         followConfig.setMaxWriteBufferCount(randomIntBetween(0, Integer.MAX_VALUE)).     }     if (randomBoolean()) {         followConfig.setMaxWriteBufferSize(new ByteSizeValue(randomNonNegativeLong())).     }     if (randomBoolean()) {         followConfig.setMaxWriteRequestOperationCount(randomIntBetween(0, Integer.MAX_VALUE)).     }     if (randomBoolean()) {         followConfig.setMaxWriteRequestSize(new ByteSizeValue(randomNonNegativeLong())).     }     if (randomBoolean()) {         followConfig.setMaxRetryDelay(new TimeValue(randomNonNegativeLong())).     }     if (randomBoolean()) {         followConfig.setReadPollTimeout(new TimeValue(randomNonNegativeLong())).     }     return followConfig. }
