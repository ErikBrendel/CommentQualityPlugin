commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;5;;@Override protected PutRoleRequest createTestInstance() {     final Role role = randomRole(roleName).     return new PutRoleRequest(role, null). }
false;protected;1;6;;@Override protected PutRoleRequest doParseInstance(XContentParser parser) throws IOException {     final Tuple<Role, Map<String, Object>> roleAndTransientMetadata = Role.fromXContent(parser, roleName).     assertThat(roleAndTransientMetadata.v2().entrySet(), is(empty())).     return new PutRoleRequest(roleAndTransientMetadata.v1(), null). }
false;protected;0;4;;@Override protected boolean supportsUnknownFields() {     return false. }
false;private,static;1;21;;private static Role randomRole(String roleName) {     final Role.Builder roleBuilder = Role.builder().name(roleName).clusterPrivileges(randomSubsetOf(randomInt(3), Role.ClusterPrivilegeName.ALL_ARRAY)).indicesPrivileges(randomArray(3, IndicesPrivileges[]::new, () -> IndicesPrivilegesTests.createNewRandom(randomAlphaOfLength(3)))).applicationResourcePrivileges(randomArray(3, ApplicationResourcePrivileges[]::new, () -> ApplicationResourcePrivilegesTests.createNewRandom(randomAlphaOfLength(3).toLowerCase(Locale.ROOT)))).runAsPrivilege(randomArray(3, String[]::new, () -> randomAlphaOfLength(3))).     if (randomBoolean()) {         roleBuilder.globalApplicationPrivileges(new GlobalPrivileges(Arrays.asList(randomArray(1, 3, GlobalOperationPrivilege[]::new, () -> GlobalPrivilegesTests.buildRandomGlobalScopedPrivilege())))).     }     if (randomBoolean()) {         final Map<String, Object> metadata = new HashMap<>().         for (int i = 0. i < randomInt(3). i++) {             metadata.put(randomAlphaOfLength(3), randomAlphaOfLength(3)).         }         roleBuilder.metadata(metadata).     }     return roleBuilder.build(). }
