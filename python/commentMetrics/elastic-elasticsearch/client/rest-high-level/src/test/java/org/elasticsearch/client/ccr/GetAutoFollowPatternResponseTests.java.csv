commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;public void testFromXContent() throws IOException {     xContentTester(this::createParser, this::createTestInstance, GetAutoFollowPatternResponseTests::toXContent, GetAutoFollowPatternResponse::fromXContent).supportsUnknownFields(true).test(). }
false;private;0;40;;private GetAutoFollowPatternResponse createTestInstance() {     int numPatterns = randomIntBetween(0, 16).     NavigableMap<String, GetAutoFollowPatternResponse.Pattern> patterns = new TreeMap<>().     for (int i = 0. i < numPatterns. i++) {         GetAutoFollowPatternResponse.Pattern pattern = new GetAutoFollowPatternResponse.Pattern(randomAlphaOfLength(4), Collections.singletonList(randomAlphaOfLength(4)), randomAlphaOfLength(4)).         if (randomBoolean()) {             pattern.setMaxOutstandingReadRequests(randomIntBetween(0, Integer.MAX_VALUE)).         }         if (randomBoolean()) {             pattern.setMaxOutstandingWriteRequests(randomIntBetween(0, Integer.MAX_VALUE)).         }         if (randomBoolean()) {             pattern.setMaxReadRequestOperationCount(randomIntBetween(0, Integer.MAX_VALUE)).         }         if (randomBoolean()) {             pattern.setMaxReadRequestSize(new ByteSizeValue(randomNonNegativeLong())).         }         if (randomBoolean()) {             pattern.setMaxWriteBufferCount(randomIntBetween(0, Integer.MAX_VALUE)).         }         if (randomBoolean()) {             pattern.setMaxWriteBufferSize(new ByteSizeValue(randomNonNegativeLong())).         }         if (randomBoolean()) {             pattern.setMaxWriteRequestOperationCount(randomIntBetween(0, Integer.MAX_VALUE)).         }         if (randomBoolean()) {             pattern.setMaxWriteRequestSize(new ByteSizeValue(randomNonNegativeLong())).         }         if (randomBoolean()) {             pattern.setMaxRetryDelay(new TimeValue(randomNonNegativeLong())).         }         if (randomBoolean()) {             pattern.setReadPollTimeout(new TimeValue(randomNonNegativeLong())).         }         patterns.put(randomAlphaOfLength(4), pattern).     }     return new GetAutoFollowPatternResponse(patterns). }
false;public,static;2;26;;public static void toXContent(GetAutoFollowPatternResponse response, XContentBuilder builder) throws IOException {     builder.startObject().     {         builder.startArray(GetAutoFollowPatternResponse.PATTERNS_FIELD.getPreferredName()).         for (Map.Entry<String, GetAutoFollowPatternResponse.Pattern> entry : response.getPatterns().entrySet()) {             builder.startObject().             {                 builder.field(GetAutoFollowPatternResponse.NAME_FIELD.getPreferredName(), entry.getKey()).                 builder.startObject(GetAutoFollowPatternResponse.PATTERN_FIELD.getPreferredName()).                 {                     GetAutoFollowPatternResponse.Pattern pattern = entry.getValue().                     builder.field(REMOTE_CLUSTER_FIELD.getPreferredName(), pattern.getRemoteCluster()).                     builder.field(LEADER_PATTERNS_FIELD.getPreferredName(), pattern.getLeaderIndexPatterns()).                     if (pattern.getFollowIndexNamePattern() != null) {                         builder.field(FOLLOW_PATTERN_FIELD.getPreferredName(), pattern.getFollowIndexNamePattern()).                     }                     entry.getValue().toXContentFragment(builder, ToXContent.EMPTY_PARAMS).                 }                 builder.endObject().             }             builder.endObject().         }         builder.endArray().     }     builder.endObject(). }
