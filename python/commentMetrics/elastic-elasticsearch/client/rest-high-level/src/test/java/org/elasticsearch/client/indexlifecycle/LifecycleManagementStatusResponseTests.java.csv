commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;public void testFromXContent() throws IOException {     xContentTester(this::createParser, LifecycleManagementStatusResponseTests::createTestInstance, LifecycleManagementStatusResponseTests::toXContent, LifecycleManagementStatusResponse::fromXContent).supportsUnknownFields(true).assertToXContentEquivalence(false).test(). }
false;private,static;2;6;;private static XContentBuilder toXContent(LifecycleManagementStatusResponse response, XContentBuilder builder) throws IOException {     builder.startObject().     builder.field("operation_mode", response.getOperationMode()).     builder.endObject().     return builder. }
false;private,static;0;3;;private static LifecycleManagementStatusResponse createTestInstance() {     return new LifecycleManagementStatusResponse(randomFrom(OperationMode.values()).name()). }
false;public;0;4;;public void testAllValidStatuses() {     EnumSet.allOf(OperationMode.class).forEach(e -> assertEquals(new LifecycleManagementStatusResponse(e.name()).getOperationMode(), e)). }
false;public;0;8;;public void testXContent() throws IOException {     XContentType xContentType = XContentType.JSON.     String mode = randomFrom(EnumSet.allOf(OperationMode.class).stream().map(Enum::name).collect(Collectors.toList())).     XContentParser parser = xContentType.xContent().createParser(NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION, "{\"operation_mode\" : \"" + mode + "\"}").     assertEquals(LifecycleManagementStatusResponse.fromXContent(parser).getOperationMode(), OperationMode.fromString(mode)). }
false;public;0;8;;public void testXContentInvalid() throws IOException {     XContentType xContentType = XContentType.JSON.     String mode = randomAlphaOfLength(10).     XContentParser parser = xContentType.xContent().createParser(NamedXContentRegistry.EMPTY, DeprecationHandler.THROW_UNSUPPORTED_OPERATION, "{\"operation_mode\" : \"" + mode + "\"}").     Exception e = expectThrows(IllegalArgumentException.class, () -> LifecycleManagementStatusResponse.fromXContent(parser)).     assertThat(e.getMessage(), CoreMatchers.containsString("failed to parse field [operation_mode]")). }
