# id;timestamp;commentText;codeText;commentWords;codeWords
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1525248068;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1525645056;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1526029249;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1526449283;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1526510804;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1526981569;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1527207653;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1527773340;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1527840262;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1527878678;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1528167589;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1528706846;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1528762805;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1528804324;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1528893677;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1528904315;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1529341607;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1529433467;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1529508649;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1529658035;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1529916083;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1531179852;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1531382259;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1532028790;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1532456624;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1532991445;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1533063033;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1533245222;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1533806325;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1533843546;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1534176840;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1534362961;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1534434117;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1534539448;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1535046779;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1535552903;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1535570086;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1535654284;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1535654812;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1535665876;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1535965276;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1536137328;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1536177418;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1536181401;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1536314350;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1536357842;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1536363694;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1536611444;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1537300661;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1537806831;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1538579488;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1538602761;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1539702726;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1539723533;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1539733136;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1539954289;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1540394099;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1540485349;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1540486836;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_include", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_exclude", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1540847035;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1540912197;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1541164879;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1541493930;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1541661567;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1542648271;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1544120595;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1544211598;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1544499913;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1544639882;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1544813247;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1545091062;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1545141229;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1545261620;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1546960318;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1547156119;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1548943934;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1549334465;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1549386356;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
RequestConvertersTests -> private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams);1549396415;Randomize the {@link FetchSourceContext} request parameters.;private static void randomizeFetchSourceContextParams(Consumer<FetchSourceContext> consumer, Map<String, String> expectedParams) {_        if (randomBoolean()) {_            if (randomBoolean()) {_                boolean fetchSource = randomBoolean()__                consumer.accept(new FetchSourceContext(fetchSource))__                if (fetchSource == false) {_                    expectedParams.put("_source", "false")__                }_            } else {_                int numIncludes = randomIntBetween(0, 5)__                String[] includes = new String[numIncludes]__                String includesParam = randomFields(includes)__                if (numIncludes > 0) {_                    expectedParams.put("_source_includes", includesParam)__                }_                int numExcludes = randomIntBetween(0, 5)__                String[] excludes = new String[numExcludes]__                String excludesParam = randomFields(excludes)__                if (numExcludes > 0) {_                    expectedParams.put("_source_excludes", excludesParam)__                }_                consumer.accept(new FetchSourceContext(true, includes, excludes))__            }_        }_    };randomize,the,link,fetch,source,context,request,parameters;private,static,void,randomize,fetch,source,context,params,consumer,fetch,source,context,consumer,map,string,string,expected,params,if,random,boolean,if,random,boolean,boolean,fetch,source,random,boolean,consumer,accept,new,fetch,source,context,fetch,source,if,fetch,source,false,expected,params,put,false,else,int,num,includes,random,int,between,0,5,string,includes,new,string,num,includes,string,includes,param,random,fields,includes,if,num,includes,0,expected,params,put,includes,param,int,num,excludes,random,int,between,0,5,string,excludes,new,string,num,excludes,string,excludes,param,random,fields,excludes,if,num,excludes,0,expected,params,put,excludes,param,consumer,accept,new,fetch,source,context,true,includes,excludes
