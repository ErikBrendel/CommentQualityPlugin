commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;15;;public static IndicesPrivileges createNewRandom(String query) {     final IndicesPrivileges.Builder indicesPrivilegesBuilder = IndicesPrivileges.builder().indices(generateRandomStringArray(4, 4, false, false)).privileges(randomSubsetOf(randomIntBetween(1, 4), Role.IndexPrivilegeName.ALL_ARRAY)).allowRestrictedIndices(randomBoolean()).query(query).     if (randomBoolean()) {         final List<String> fields = Arrays.asList(generateRandomStringArray(4, 4, false)).         indicesPrivilegesBuilder.grantedFields(fields).         if (randomBoolean()) {             indicesPrivilegesBuilder.deniedFields(randomSubsetOf(fields)).         }     }     return indicesPrivilegesBuilder.build(). }
false;public;0;6;;public void testToXContentWithNullFieldSecurity() {     final IndicesPrivileges privileges = IndicesPrivileges.builder().indices("abc").privileges("all").allowRestrictedIndices(randomBoolean()).build().     final String json = Strings.toString(privileges).     assertThat(json, not(containsString("field_security"))). }
false;public;0;12;;public void testToXContentWithEmptyFieldSecurity() {     final IndicesPrivileges privileges = IndicesPrivileges.builder().indices("abc").privileges("all").grantedFields(Collections.emptyList()).deniedFields(Collections.emptyList()).allowRestrictedIndices(randomBoolean()).build().     final String json = Strings.toString(privileges).     assertThat(json, containsString("field_security")).     assertThat(json, containsString("\"field_security\":{\"grant\":[],\"except\":[]}")). }
false;public;0;11;;public void testToXContentWithDeniedFieldsOnly() {     final IndicesPrivileges privileges = IndicesPrivileges.builder().indices("abc").privileges("all").deniedFields("secret.*").allowRestrictedIndices(randomBoolean()).build().     final String json = Strings.toString(privileges).     assertThat(json, containsString("field_security")).     assertThat(json, containsString("\"field_security\":{\"grant\":[\"*\"],\"except\":[\"secret.*\"]}")). }
false;protected;0;5;;@Override protected IndicesPrivileges createTestInstance() {     return createNewRandom(randomBoolean() ? null : "{ " + randomAlphaOfLengthBetween(1, 4) + " : " + randomAlphaOfLengthBetween(1, 4) + " }"). }
false;protected;1;4;;@Override protected IndicesPrivileges doParseInstance(XContentParser parser) throws IOException {     return IndicesPrivileges.fromXContent(parser). }
false;protected;0;4;;@Override protected boolean supportsUnknownFields() {     return false. }
