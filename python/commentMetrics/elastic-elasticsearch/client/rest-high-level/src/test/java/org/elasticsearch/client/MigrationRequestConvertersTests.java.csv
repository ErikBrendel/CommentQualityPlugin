commented;modifiers;parameterAmount;loc;comment;code
false;public;0;17;;public void testGetMigrationAssistance() {     IndexUpgradeInfoRequest upgradeInfoRequest = new IndexUpgradeInfoRequest().     String expectedEndpoint = "/_migration/assistance".     if (randomBoolean()) {         String[] indices = RequestConvertersTests.randomIndicesNames(1, 5).         upgradeInfoRequest.indices(indices).         expectedEndpoint += "/" + String.join(",", indices).     }     Map<String, String> expectedParams = new HashMap<>().     RequestConvertersTests.setRandomIndicesOptions(upgradeInfoRequest::indicesOptions, upgradeInfoRequest::indicesOptions, expectedParams).     Request request = MigrationRequestConverters.getMigrationAssistance(upgradeInfoRequest).     assertEquals(HttpGet.METHOD_NAME, request.getMethod()).     assertEquals(expectedEndpoint, request.getEndpoint()).     assertNull(request.getEntity()).     assertEquals(expectedParams, request.getParameters()). }
false;public;0;15;;public void testUpgradeRequest() {     String[] indices = RequestConvertersTests.randomIndicesNames(1, 1).     IndexUpgradeRequest upgradeInfoRequest = new IndexUpgradeRequest(indices[0]).     String expectedEndpoint = "/_migration/upgrade/" + indices[0].     Map<String, String> expectedParams = new HashMap<>().     expectedParams.put("wait_for_completion", Boolean.TRUE.toString()).     Request request = MigrationRequestConverters.migrate(upgradeInfoRequest).     assertEquals(HttpPost.METHOD_NAME, request.getMethod()).     assertEquals(expectedEndpoint, request.getEndpoint()).     assertNull(request.getEntity()).     assertEquals(expectedParams, request.getParameters()). }
