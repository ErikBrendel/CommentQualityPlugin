commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public void testEqualsAndHashcode() {     EqualsHashCodeTestUtils.checkEqualsAndHashCode(createTestInstance(), this::copy, this::mutateInstance). }
false;public;0;4;;public void testEmptyIndices() {     IllegalArgumentException exception = expectThrows(IllegalArgumentException.class, ExplainLifecycleRequest::new).     assertThat(exception.getMessage(), equalTo("Must at least specify one index to explain")). }
false;private;0;9;;private ExplainLifecycleRequest createTestInstance() {     ExplainLifecycleRequest request = new ExplainLifecycleRequest(generateRandomStringArray(20, 20, false, false)).     if (randomBoolean()) {         IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean()).         request.indicesOptions(indicesOptions).     }     return request. }
false;private;1;19;;private ExplainLifecycleRequest mutateInstance(ExplainLifecycleRequest instance) {     String[] indices = instance.getIndices().     IndicesOptions indicesOptions = instance.indicesOptions().     switch(between(0, 1)) {         case 0:             indices = randomValueOtherThanMany(i -> Arrays.equals(i, instance.getIndices()), () -> generateRandomStringArray(20, 10, false, false)).             break.         case 1:             indicesOptions = randomValueOtherThan(indicesOptions, () -> IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean())).             break.         default:             throw new AssertionError("Illegal randomisation branch").     }     ExplainLifecycleRequest newRequest = new ExplainLifecycleRequest(indices).     newRequest.indicesOptions(indicesOptions).     return newRequest. }
false;private;1;5;;private ExplainLifecycleRequest copy(ExplainLifecycleRequest original) {     ExplainLifecycleRequest copy = new ExplainLifecycleRequest(original.getIndices()).     copy.indicesOptions(original.indicesOptions()).     return copy. }
