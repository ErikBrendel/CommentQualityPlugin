# id;timestamp;commentText;codeText;commentWords;codeWords
ESRestHighLevelClientTestCase -> protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,                                        AsyncMethod<Req, Resp> asyncMethod, Header... headers) throws IOException;1524684173;Executes the provided request using either the sync method or its async variant, both provided as functions;protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,_                                       AsyncMethod<Req, Resp> asyncMethod, Header... headers) throws IOException {_        if (randomBoolean()) {_            return syncMethod.execute(request, headers)__        } else {_            PlainActionFuture<Resp> future = PlainActionFuture.newFuture()__            asyncMethod.execute(request, future, headers)__            return future.actionGet()__        }_    };executes,the,provided,request,using,either,the,sync,method,or,its,async,variant,both,provided,as,functions;protected,static,req,resp,resp,execute,req,request,sync,method,req,resp,sync,method,async,method,req,resp,async,method,header,headers,throws,ioexception,if,random,boolean,return,sync,method,execute,request,headers,else,plain,action,future,resp,future,plain,action,future,new,future,async,method,execute,request,future,headers,return,future,action,get
ESRestHighLevelClientTestCase -> protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,                                        AsyncMethod<Req, Resp> asyncMethod, Header... headers) throws IOException;1527840262;Executes the provided request using either the sync method or its async variant, both provided as functions;protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,_                                       AsyncMethod<Req, Resp> asyncMethod, Header... headers) throws IOException {_        if (randomBoolean()) {_            return syncMethod.execute(request, headers)__        } else {_            PlainActionFuture<Resp> future = PlainActionFuture.newFuture()__            asyncMethod.execute(request, future, headers)__            return future.actionGet()__        }_    };executes,the,provided,request,using,either,the,sync,method,or,its,async,variant,both,provided,as,functions;protected,static,req,resp,resp,execute,req,request,sync,method,req,resp,sync,method,async,method,req,resp,async,method,header,headers,throws,ioexception,if,random,boolean,return,sync,method,execute,request,headers,else,plain,action,future,resp,future,plain,action,future,new,future,async,method,execute,request,future,headers,return,future,action,get
ESRestHighLevelClientTestCase -> protected static <Resp> Resp execute(SyncMethodNoRequest<Resp> syncMethodNoRequest, AsyncMethodNoRequest<Resp> asyncMethodNoRequest,             RequestOptions requestOptions) throws IOException;1541008027;Executes the provided request using either the sync method or its async_variant, both provided as functions. This variant is used when the call does_not have a request object (only headers and the request path).;protected static <Resp> Resp execute(SyncMethodNoRequest<Resp> syncMethodNoRequest, AsyncMethodNoRequest<Resp> asyncMethodNoRequest,_            RequestOptions requestOptions) throws IOException {_        if (randomBoolean()) {_            return syncMethodNoRequest.execute(requestOptions)__        } else {_            PlainActionFuture<Resp> future = PlainActionFuture.newFuture()__            asyncMethodNoRequest.execute(requestOptions, future)__            return future.actionGet()__        }_    };executes,the,provided,request,using,either,the,sync,method,or,its,async,variant,both,provided,as,functions,this,variant,is,used,when,the,call,does,not,have,a,request,object,only,headers,and,the,request,path;protected,static,resp,resp,execute,sync,method,no,request,resp,sync,method,no,request,async,method,no,request,resp,async,method,no,request,request,options,request,options,throws,ioexception,if,random,boolean,return,sync,method,no,request,execute,request,options,else,plain,action,future,resp,future,plain,action,future,new,future,async,method,no,request,execute,request,options,future,return,future,action,get
ESRestHighLevelClientTestCase -> protected static <Resp> Resp execute(SyncMethodNoRequest<Resp> syncMethodNoRequest, AsyncMethodNoRequest<Resp> asyncMethodNoRequest,             RequestOptions requestOptions) throws IOException;1544549415;Executes the provided request using either the sync method or its async_variant, both provided as functions. This variant is used when the call does_not have a request object (only headers and the request path).;protected static <Resp> Resp execute(SyncMethodNoRequest<Resp> syncMethodNoRequest, AsyncMethodNoRequest<Resp> asyncMethodNoRequest,_            RequestOptions requestOptions) throws IOException {_        if (randomBoolean()) {_            return syncMethodNoRequest.execute(requestOptions)__        } else {_            PlainActionFuture<Resp> future = PlainActionFuture.newFuture()__            asyncMethodNoRequest.execute(requestOptions, future)__            return future.actionGet()__        }_    };executes,the,provided,request,using,either,the,sync,method,or,its,async,variant,both,provided,as,functions,this,variant,is,used,when,the,call,does,not,have,a,request,object,only,headers,and,the,request,path;protected,static,resp,resp,execute,sync,method,no,request,resp,sync,method,no,request,async,method,no,request,resp,async,method,no,request,request,options,request,options,throws,ioexception,if,random,boolean,return,sync,method,no,request,execute,request,options,else,plain,action,future,resp,future,plain,action,future,new,future,async,method,no,request,execute,request,options,future,return,future,action,get
ESRestHighLevelClientTestCase -> protected static <Resp> Resp execute(SyncMethodNoRequest<Resp> syncMethodNoRequest, AsyncMethodNoRequest<Resp> asyncMethodNoRequest,             RequestOptions requestOptions) throws IOException;1548364667;Executes the provided request using either the sync method or its async_variant, both provided as functions. This variant is used when the call does_not have a request object (only headers and the request path).;protected static <Resp> Resp execute(SyncMethodNoRequest<Resp> syncMethodNoRequest, AsyncMethodNoRequest<Resp> asyncMethodNoRequest,_            RequestOptions requestOptions) throws IOException {_        if (randomBoolean()) {_            return syncMethodNoRequest.execute(requestOptions)__        } else {_            PlainActionFuture<Resp> future = PlainActionFuture.newFuture()__            asyncMethodNoRequest.execute(requestOptions, future)__            return future.actionGet()__        }_    };executes,the,provided,request,using,either,the,sync,method,or,its,async,variant,both,provided,as,functions,this,variant,is,used,when,the,call,does,not,have,a,request,object,only,headers,and,the,request,path;protected,static,resp,resp,execute,sync,method,no,request,resp,sync,method,no,request,async,method,no,request,resp,async,method,no,request,request,options,request,options,throws,ioexception,if,random,boolean,return,sync,method,no,request,execute,request,options,else,plain,action,future,resp,future,plain,action,future,new,future,async,method,no,request,execute,request,options,future,return,future,action,get
ESRestHighLevelClientTestCase -> protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,                                        AsyncMethod<Req, Resp> asyncMethod, RequestOptions options) throws IOException;1544549415;Executes the provided request using either the sync method or its async variant, both provided as functions;protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,_                                       AsyncMethod<Req, Resp> asyncMethod, RequestOptions options) throws IOException {_        if (randomBoolean()) {_            return syncMethod.execute(request, options)__        } else {_            PlainActionFuture<Resp> future = PlainActionFuture.newFuture()__            asyncMethod.execute(request, options, future)__            return future.actionGet()__        }_    };executes,the,provided,request,using,either,the,sync,method,or,its,async,variant,both,provided,as,functions;protected,static,req,resp,resp,execute,req,request,sync,method,req,resp,sync,method,async,method,req,resp,async,method,request,options,options,throws,ioexception,if,random,boolean,return,sync,method,execute,request,options,else,plain,action,future,resp,future,plain,action,future,new,future,async,method,execute,request,options,future,return,future,action,get
ESRestHighLevelClientTestCase -> protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,                                        AsyncMethod<Req, Resp> asyncMethod, RequestOptions options) throws IOException;1548364667;Executes the provided request using either the sync method or its async variant, both provided as functions;protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,_                                       AsyncMethod<Req, Resp> asyncMethod, RequestOptions options) throws IOException {_        if (randomBoolean()) {_            return syncMethod.execute(request, options)__        } else {_            PlainActionFuture<Resp> future = PlainActionFuture.newFuture()__            asyncMethod.execute(request, options, future)__            return future.actionGet()__        }_    };executes,the,provided,request,using,either,the,sync,method,or,its,async,variant,both,provided,as,functions;protected,static,req,resp,resp,execute,req,request,sync,method,req,resp,sync,method,async,method,req,resp,async,method,request,options,options,throws,ioexception,if,random,boolean,return,sync,method,execute,request,options,else,plain,action,future,resp,future,plain,action,future,new,future,async,method,execute,request,options,future,return,future,action,get
ESRestHighLevelClientTestCase -> protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,                                        AsyncMethod<Req, Resp> asyncMethod) throws IOException;1528706846;Executes the provided request using either the sync method or its async variant, both provided as functions;protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,_                                       AsyncMethod<Req, Resp> asyncMethod) throws IOException {_        if (randomBoolean()) {_            return syncMethod.execute(request, RequestOptions.DEFAULT)__        } else {_            PlainActionFuture<Resp> future = PlainActionFuture.newFuture()__            asyncMethod.execute(request, RequestOptions.DEFAULT, future)__            return future.actionGet()__        }_    };executes,the,provided,request,using,either,the,sync,method,or,its,async,variant,both,provided,as,functions;protected,static,req,resp,resp,execute,req,request,sync,method,req,resp,sync,method,async,method,req,resp,async,method,throws,ioexception,if,random,boolean,return,sync,method,execute,request,request,options,default,else,plain,action,future,resp,future,plain,action,future,new,future,async,method,execute,request,request,options,default,future,return,future,action,get
ESRestHighLevelClientTestCase -> protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,                                        AsyncMethod<Req, Resp> asyncMethod) throws IOException;1528893677;Executes the provided request using either the sync method or its async variant, both provided as functions;protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,_                                       AsyncMethod<Req, Resp> asyncMethod) throws IOException {_        if (randomBoolean()) {_            return syncMethod.execute(request, RequestOptions.DEFAULT)__        } else {_            PlainActionFuture<Resp> future = PlainActionFuture.newFuture()__            asyncMethod.execute(request, RequestOptions.DEFAULT, future)__            return future.actionGet()__        }_    };executes,the,provided,request,using,either,the,sync,method,or,its,async,variant,both,provided,as,functions;protected,static,req,resp,resp,execute,req,request,sync,method,req,resp,sync,method,async,method,req,resp,async,method,throws,ioexception,if,random,boolean,return,sync,method,execute,request,request,options,default,else,plain,action,future,resp,future,plain,action,future,new,future,async,method,execute,request,request,options,default,future,return,future,action,get
ESRestHighLevelClientTestCase -> protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,                                        AsyncMethod<Req, Resp> asyncMethod) throws IOException;1529658035;Executes the provided request using either the sync method or its async variant, both provided as functions;protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,_                                       AsyncMethod<Req, Resp> asyncMethod) throws IOException {_        if (randomBoolean()) {_            return syncMethod.execute(request, RequestOptions.DEFAULT)__        } else {_            PlainActionFuture<Resp> future = PlainActionFuture.newFuture()__            asyncMethod.execute(request, RequestOptions.DEFAULT, future)__            return future.actionGet()__        }_    };executes,the,provided,request,using,either,the,sync,method,or,its,async,variant,both,provided,as,functions;protected,static,req,resp,resp,execute,req,request,sync,method,req,resp,sync,method,async,method,req,resp,async,method,throws,ioexception,if,random,boolean,return,sync,method,execute,request,request,options,default,else,plain,action,future,resp,future,plain,action,future,new,future,async,method,execute,request,request,options,default,future,return,future,action,get
ESRestHighLevelClientTestCase -> protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,                                        AsyncMethod<Req, Resp> asyncMethod) throws IOException;1531179852;Executes the provided request using either the sync method or its async variant, both provided as functions;protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,_                                       AsyncMethod<Req, Resp> asyncMethod) throws IOException {_        if (randomBoolean()) {_            return syncMethod.execute(request, RequestOptions.DEFAULT)__        } else {_            PlainActionFuture<Resp> future = PlainActionFuture.newFuture()__            asyncMethod.execute(request, RequestOptions.DEFAULT, future)__            return future.actionGet()__        }_    };executes,the,provided,request,using,either,the,sync,method,or,its,async,variant,both,provided,as,functions;protected,static,req,resp,resp,execute,req,request,sync,method,req,resp,sync,method,async,method,req,resp,async,method,throws,ioexception,if,random,boolean,return,sync,method,execute,request,request,options,default,else,plain,action,future,resp,future,plain,action,future,new,future,async,method,execute,request,request,options,default,future,return,future,action,get
ESRestHighLevelClientTestCase -> protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,                                        AsyncMethod<Req, Resp> asyncMethod) throws IOException;1536177418;Executes the provided request using either the sync method or its async variant, both provided as functions;protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,_                                       AsyncMethod<Req, Resp> asyncMethod) throws IOException {_        if (randomBoolean()) {_            return syncMethod.execute(request, RequestOptions.DEFAULT)__        } else {_            PlainActionFuture<Resp> future = PlainActionFuture.newFuture()__            asyncMethod.execute(request, RequestOptions.DEFAULT, future)__            return future.actionGet()__        }_    };executes,the,provided,request,using,either,the,sync,method,or,its,async,variant,both,provided,as,functions;protected,static,req,resp,resp,execute,req,request,sync,method,req,resp,sync,method,async,method,req,resp,async,method,throws,ioexception,if,random,boolean,return,sync,method,execute,request,request,options,default,else,plain,action,future,resp,future,plain,action,future,new,future,async,method,execute,request,request,options,default,future,return,future,action,get
ESRestHighLevelClientTestCase -> protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,                                        AsyncMethod<Req, Resp> asyncMethod) throws IOException;1536611444;Executes the provided request using either the sync method or its async variant, both provided as functions;protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,_                                       AsyncMethod<Req, Resp> asyncMethod) throws IOException {_        if (randomBoolean()) {_            return syncMethod.execute(request, RequestOptions.DEFAULT)__        } else {_            PlainActionFuture<Resp> future = PlainActionFuture.newFuture()__            asyncMethod.execute(request, RequestOptions.DEFAULT, future)__            return future.actionGet()__        }_    };executes,the,provided,request,using,either,the,sync,method,or,its,async,variant,both,provided,as,functions;protected,static,req,resp,resp,execute,req,request,sync,method,req,resp,sync,method,async,method,req,resp,async,method,throws,ioexception,if,random,boolean,return,sync,method,execute,request,request,options,default,else,plain,action,future,resp,future,plain,action,future,new,future,async,method,execute,request,request,options,default,future,return,future,action,get
ESRestHighLevelClientTestCase -> protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,                                        AsyncMethod<Req, Resp> asyncMethod) throws IOException;1539951844;Executes the provided request using either the sync method or its async variant, both provided as functions;protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,_                                       AsyncMethod<Req, Resp> asyncMethod) throws IOException {_        if (randomBoolean()) {_            return syncMethod.execute(request, RequestOptions.DEFAULT)__        } else {_            PlainActionFuture<Resp> future = PlainActionFuture.newFuture()__            asyncMethod.execute(request, RequestOptions.DEFAULT, future)__            return future.actionGet()__        }_    };executes,the,provided,request,using,either,the,sync,method,or,its,async,variant,both,provided,as,functions;protected,static,req,resp,resp,execute,req,request,sync,method,req,resp,sync,method,async,method,req,resp,async,method,throws,ioexception,if,random,boolean,return,sync,method,execute,request,request,options,default,else,plain,action,future,resp,future,plain,action,future,new,future,async,method,execute,request,request,options,default,future,return,future,action,get
ESRestHighLevelClientTestCase -> protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,                                        AsyncMethod<Req, Resp> asyncMethod) throws IOException;1540912197;Executes the provided request using either the sync method or its async variant, both provided as functions;protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,_                                       AsyncMethod<Req, Resp> asyncMethod) throws IOException {_        if (randomBoolean()) {_            return syncMethod.execute(request, RequestOptions.DEFAULT)__        } else {_            PlainActionFuture<Resp> future = PlainActionFuture.newFuture()__            asyncMethod.execute(request, RequestOptions.DEFAULT, future)__            return future.actionGet()__        }_    };executes,the,provided,request,using,either,the,sync,method,or,its,async,variant,both,provided,as,functions;protected,static,req,resp,resp,execute,req,request,sync,method,req,resp,sync,method,async,method,req,resp,async,method,throws,ioexception,if,random,boolean,return,sync,method,execute,request,request,options,default,else,plain,action,future,resp,future,plain,action,future,new,future,async,method,execute,request,request,options,default,future,return,future,action,get
ESRestHighLevelClientTestCase -> protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,                                        AsyncMethod<Req, Resp> asyncMethod) throws IOException;1541008027;Executes the provided request using either the sync method or its async variant, both provided as functions;protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,_                                       AsyncMethod<Req, Resp> asyncMethod) throws IOException {_        if (randomBoolean()) {_            return syncMethod.execute(request, RequestOptions.DEFAULT)__        } else {_            PlainActionFuture<Resp> future = PlainActionFuture.newFuture()__            asyncMethod.execute(request, RequestOptions.DEFAULT, future)__            return future.actionGet()__        }_    };executes,the,provided,request,using,either,the,sync,method,or,its,async,variant,both,provided,as,functions;protected,static,req,resp,resp,execute,req,request,sync,method,req,resp,sync,method,async,method,req,resp,async,method,throws,ioexception,if,random,boolean,return,sync,method,execute,request,request,options,default,else,plain,action,future,resp,future,plain,action,future,new,future,async,method,execute,request,request,options,default,future,return,future,action,get
ESRestHighLevelClientTestCase -> protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,                                        AsyncMethod<Req, Resp> asyncMethod) throws IOException;1544549415;Executes the provided request using either the sync method or its async variant, both provided as functions;protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,_                                       AsyncMethod<Req, Resp> asyncMethod) throws IOException {_        return execute(request, syncMethod, asyncMethod, RequestOptions.DEFAULT)__    };executes,the,provided,request,using,either,the,sync,method,or,its,async,variant,both,provided,as,functions;protected,static,req,resp,resp,execute,req,request,sync,method,req,resp,sync,method,async,method,req,resp,async,method,throws,ioexception,return,execute,request,sync,method,async,method,request,options,default
ESRestHighLevelClientTestCase -> protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,                                        AsyncMethod<Req, Resp> asyncMethod) throws IOException;1548364667;Executes the provided request using either the sync method or its async variant, both provided as functions;protected static <Req, Resp> Resp execute(Req request, SyncMethod<Req, Resp> syncMethod,_                                       AsyncMethod<Req, Resp> asyncMethod) throws IOException {_        return execute(request, syncMethod, asyncMethod, RequestOptions.DEFAULT)__    };executes,the,provided,request,using,either,the,sync,method,or,its,async,variant,both,provided,as,functions;protected,static,req,resp,resp,execute,req,request,sync,method,req,resp,sync,method,async,method,req,resp,async,method,throws,ioexception,return,execute,request,sync,method,async,method,request,options,default
