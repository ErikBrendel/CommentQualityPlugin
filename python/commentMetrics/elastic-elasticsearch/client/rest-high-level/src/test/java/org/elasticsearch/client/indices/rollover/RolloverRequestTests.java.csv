commented;modifiers;parameterAmount;loc;comment;code
false;public;0;22;;public void testConstructorAndFieldAssignments() {     // test constructor     String alias = randomAlphaOfLength(5).     String newIndexName = null.     if (randomBoolean()) {         newIndexName = randomAlphaOfLength(8).     }     RolloverRequest rolloverRequest = new RolloverRequest(alias, newIndexName).     assertEquals(alias, rolloverRequest.getAlias()).     assertEquals(newIndexName, rolloverRequest.getNewIndexName()).     // test assignment of conditions     MaxAgeCondition maxAgeCondition = new MaxAgeCondition(new TimeValue(10)).     MaxSizeCondition maxSizeCondition = new MaxSizeCondition(new ByteSizeValue(2000)).     MaxDocsCondition maxDocsCondition = new MaxDocsCondition(10000L).     Condition<?>[] expectedConditions = new Condition<?>[] { maxAgeCondition, maxSizeCondition, maxDocsCondition }.     rolloverRequest.addMaxIndexAgeCondition(maxAgeCondition.value()).     rolloverRequest.addMaxIndexSizeCondition(maxSizeCondition.value()).     rolloverRequest.addMaxIndexDocsCondition(maxDocsCondition.value()).     List<Condition<?>> requestConditions = new ArrayList<>(rolloverRequest.getConditions().values()).     assertThat(requestConditions, containsInAnyOrder(expectedConditions)). }
false;public;0;5;;public void testValidation() {     IllegalArgumentException exception = expectThrows(IllegalArgumentException.class, () -> new RolloverRequest(null, null)).     assertEquals("The index alias cannot be null!", exception.getMessage()). }
