commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void createComponents() {     transformsConfigManager = new DataFrameTransformsConfigManager(client(), xContentRegistry()). }
false;public;0;23;;public void testGetMissingTransform() throws InterruptedException {     // the index does not exist yet     assertAsync(listener -> transformsConfigManager.getTransformConfiguration("not_there", listener), (DataFrameTransformConfig) null, null, e -> {         assertEquals(ResourceNotFoundException.class, e.getClass()).         assertEquals(DataFrameMessages.getMessage(DataFrameMessages.REST_DATA_FRAME_UNKNOWN_TRANSFORM, "not_there"), e.getMessage()).     }).     // create one transform and test with an existing index     assertAsync(listener -> transformsConfigManager.putTransformConfiguration(DataFrameTransformConfigTests.randomDataFrameTransformConfig(), listener), true, null, null).     // same test, but different code path     assertAsync(listener -> transformsConfigManager.getTransformConfiguration("not_there", listener), (DataFrameTransformConfig) null, null, e -> {         assertEquals(ResourceNotFoundException.class, e.getClass()).         assertEquals(DataFrameMessages.getMessage(DataFrameMessages.REST_DATA_FRAME_UNKNOWN_TRANSFORM, "not_there"), e.getMessage()).     }). }
false;public;0;19;;public void testDeleteMissingTransform() throws InterruptedException {     // the index does not exist yet     assertAsync(listener -> transformsConfigManager.deleteTransformConfiguration("not_there", listener), (Boolean) null, null, e -> {         assertEquals(ResourceNotFoundException.class, e.getClass()).         assertEquals(DataFrameMessages.getMessage(DataFrameMessages.REST_DATA_FRAME_UNKNOWN_TRANSFORM, "not_there"), e.getMessage()).     }).     // create one transform and test with an existing index     assertAsync(listener -> transformsConfigManager.putTransformConfiguration(DataFrameTransformConfigTests.randomDataFrameTransformConfig(), listener), true, null, null).     // same test, but different code path     assertAsync(listener -> transformsConfigManager.deleteTransformConfiguration("not_there", listener), (Boolean) null, null, e -> {         assertEquals(ResourceNotFoundException.class, e.getClass()).         assertEquals(DataFrameMessages.getMessage(DataFrameMessages.REST_DATA_FRAME_UNKNOWN_TRANSFORM, "not_there"), e.getMessage()).     }). }
false;public;0;36;;public void testCreateReadDelete() throws InterruptedException {     DataFrameTransformConfig transformConfig = DataFrameTransformConfigTests.randomDataFrameTransformConfig().     // create transform     assertAsync(listener -> transformsConfigManager.putTransformConfiguration(transformConfig, listener), true, null, null).     // read transform     assertAsync(listener -> transformsConfigManager.getTransformConfiguration(transformConfig.getId(), listener), transformConfig, null, null).     // try to create again     assertAsync(listener -> transformsConfigManager.putTransformConfiguration(transformConfig, listener), (Boolean) null, null, e -> {         assertEquals(ResourceAlreadyExistsException.class, e.getClass()).         assertEquals(DataFrameMessages.getMessage(DataFrameMessages.REST_PUT_DATA_FRAME_TRANSFORM_EXISTS, transformConfig.getId()), e.getMessage()).     }).     // delete transform     assertAsync(listener -> transformsConfigManager.deleteTransformConfiguration(transformConfig.getId(), listener), true, null, null).     // delete again     assertAsync(listener -> transformsConfigManager.deleteTransformConfiguration(transformConfig.getId(), listener), (Boolean) null, null, e -> {         assertEquals(ResourceNotFoundException.class, e.getClass()).         assertEquals(DataFrameMessages.getMessage(DataFrameMessages.REST_DATA_FRAME_UNKNOWN_TRANSFORM, transformConfig.getId()), e.getMessage()).     }).     // try to get deleted transform     assertAsync(listener -> transformsConfigManager.getTransformConfiguration(transformConfig.getId(), listener), (DataFrameTransformConfig) null, null, e -> {         assertEquals(ResourceNotFoundException.class, e.getClass()).         assertEquals(DataFrameMessages.getMessage(DataFrameMessages.REST_DATA_FRAME_UNKNOWN_TRANSFORM, transformConfig.getId()), e.getMessage()).     }). }
