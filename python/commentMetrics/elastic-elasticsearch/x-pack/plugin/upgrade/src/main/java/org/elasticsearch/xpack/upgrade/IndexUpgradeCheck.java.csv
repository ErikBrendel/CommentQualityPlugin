commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Returns the name of the check  */ ;/**  * Returns the name of the check  */ public String getName() {     return name. }
true;public;1;3;/**  * This method is called by Upgrade API to verify if upgrade or reindex for this index is required  *  * @param indexMetaData index metadata  * @return required action or UpgradeActionRequired.NOT_APPLICABLE if this check cannot be performed on the index  */ ;/**  * This method is called by Upgrade API to verify if upgrade or reindex for this index is required  *  * @param indexMetaData index metadata  * @return required action or UpgradeActionRequired.NOT_APPLICABLE if this check cannot be performed on the index  */ public UpgradeActionRequired actionRequired(IndexMetaData indexMetaData) {     return actionRequired.apply(indexMetaData). }
true;public;4;4;/**  * Perform the index upgrade  *  * @param task          the task that executes the upgrade operation  * @param indexMetaData index metadata  * @param state         current cluster state  * @param listener      the listener that should be called upon completion of the upgrade  */ ;/**  * Perform the index upgrade  *  * @param task          the task that executes the upgrade operation  * @param indexMetaData index metadata  * @param state         current cluster state  * @param listener      the listener that should be called upon completion of the upgrade  */ public void upgrade(TaskId task, IndexMetaData indexMetaData, ClusterState state, ActionListener<BulkByScrollResponse> listener) {     reindexer.upgrade(task, indexMetaData.getIndex().getName(), state, listener). }
