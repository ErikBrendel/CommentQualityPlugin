# id;timestamp;commentText;codeText;commentWords;codeWords
SecuritySingleNodeTestCase -> protected boolean transportSSLEnabled();1524684173;Allows to control whether ssl key information is auto generated or not on the transport layer;protected boolean transportSSLEnabled() {_        return randomBoolean()__    };allows,to,control,whether,ssl,key,information,is,auto,generated,or,not,on,the,transport,layer;protected,boolean,transport,sslenabled,return,random,boolean
SecuritySingleNodeTestCase -> protected boolean transportSSLEnabled();1527096592;Allows to control whether ssl key information is auto generated or not on the transport layer;protected boolean transportSSLEnabled() {_        return randomBoolean()__    };allows,to,control,whether,ssl,key,information,is,auto,generated,or,not,on,the,transport,layer;protected,boolean,transport,sslenabled,return,random,boolean
SecuritySingleNodeTestCase -> protected boolean transportSSLEnabled();1528762805;Allows to control whether ssl key information is auto generated or not on the transport layer;protected boolean transportSSLEnabled() {_        return randomBoolean()__    };allows,to,control,whether,ssl,key,information,is,auto,generated,or,not,on,the,transport,layer;protected,boolean,transport,sslenabled,return,random,boolean
SecuritySingleNodeTestCase -> protected boolean transportSSLEnabled();1528893677;Allows to control whether ssl key information is auto generated or not on the transport layer;protected boolean transportSSLEnabled() {_        return randomBoolean()__    };allows,to,control,whether,ssl,key,information,is,auto,generated,or,not,on,the,transport,layer;protected,boolean,transport,sslenabled,return,random,boolean
SecuritySingleNodeTestCase -> protected boolean transportSSLEnabled();1539723533;Allows to control whether ssl key information is auto generated or not on the transport layer;protected boolean transportSSLEnabled() {_        return randomBoolean()__    };allows,to,control,whether,ssl,key,information,is,auto,generated,or,not,on,the,transport,layer;protected,boolean,transport,sslenabled,return,random,boolean
SecuritySingleNodeTestCase -> protected boolean transportSSLEnabled();1544081506;Allows to control whether ssl key information is auto generated or not on the transport layer;protected boolean transportSSLEnabled() {_        return randomBoolean()__    };allows,to,control,whether,ssl,key,information,is,auto,generated,or,not,on,the,transport,layer;protected,boolean,transport,sslenabled,return,random,boolean
SecuritySingleNodeTestCase -> protected String configRoles();1524684173;Allows to override the roles config file;protected String configRoles() {_        return SECURITY_DEFAULT_SETTINGS.configRoles()__    };allows,to,override,the,roles,config,file;protected,string,config,roles,return,config,roles
SecuritySingleNodeTestCase -> protected String configRoles();1527096592;Allows to override the roles config file;protected String configRoles() {_        return SECURITY_DEFAULT_SETTINGS.configRoles()__    };allows,to,override,the,roles,config,file;protected,string,config,roles,return,config,roles
SecuritySingleNodeTestCase -> protected String configRoles();1528762805;Allows to override the roles config file;protected String configRoles() {_        return SECURITY_DEFAULT_SETTINGS.configRoles()__    };allows,to,override,the,roles,config,file;protected,string,config,roles,return,config,roles
SecuritySingleNodeTestCase -> protected String configRoles();1528893677;Allows to override the roles config file;protected String configRoles() {_        return SECURITY_DEFAULT_SETTINGS.configRoles()__    };allows,to,override,the,roles,config,file;protected,string,config,roles,return,config,roles
SecuritySingleNodeTestCase -> protected String configRoles();1539723533;Allows to override the roles config file;protected String configRoles() {_        return SECURITY_DEFAULT_SETTINGS.configRoles()__    };allows,to,override,the,roles,config,file;protected,string,config,roles,return,config,roles
SecuritySingleNodeTestCase -> protected String configRoles();1544081506;Allows to override the roles config file;protected String configRoles() {_        return SECURITY_DEFAULT_SETTINGS.configRoles()__    };allows,to,override,the,roles,config,file;protected,string,config,roles,return,config,roles
SecuritySingleNodeTestCase -> protected RestClient getRestClient();1524684173;Returns an instance of {@link RestClient} pointing to the current node._Creates a new client if the method is invoked for the first time in the context of the current test scope._The returned client gets automatically closed when needed, it shouldn't be closed as part of tests otherwise_it cannot be reused by other tests anymore.;protected RestClient getRestClient() {_        return getRestClient(client())__    };returns,an,instance,of,link,rest,client,pointing,to,the,current,node,creates,a,new,client,if,the,method,is,invoked,for,the,first,time,in,the,context,of,the,current,test,scope,the,returned,client,gets,automatically,closed,when,needed,it,shouldn,t,be,closed,as,part,of,tests,otherwise,it,cannot,be,reused,by,other,tests,anymore;protected,rest,client,get,rest,client,return,get,rest,client,client
SecuritySingleNodeTestCase -> protected RestClient getRestClient();1527096592;Returns an instance of {@link RestClient} pointing to the current node._Creates a new client if the method is invoked for the first time in the context of the current test scope._The returned client gets automatically closed when needed, it shouldn't be closed as part of tests otherwise_it cannot be reused by other tests anymore.;protected RestClient getRestClient() {_        return getRestClient(client())__    };returns,an,instance,of,link,rest,client,pointing,to,the,current,node,creates,a,new,client,if,the,method,is,invoked,for,the,first,time,in,the,context,of,the,current,test,scope,the,returned,client,gets,automatically,closed,when,needed,it,shouldn,t,be,closed,as,part,of,tests,otherwise,it,cannot,be,reused,by,other,tests,anymore;protected,rest,client,get,rest,client,return,get,rest,client,client
SecuritySingleNodeTestCase -> protected RestClient getRestClient();1528762805;Returns an instance of {@link RestClient} pointing to the current node._Creates a new client if the method is invoked for the first time in the context of the current test scope._The returned client gets automatically closed when needed, it shouldn't be closed as part of tests otherwise_it cannot be reused by other tests anymore.;protected RestClient getRestClient() {_        return getRestClient(client())__    };returns,an,instance,of,link,rest,client,pointing,to,the,current,node,creates,a,new,client,if,the,method,is,invoked,for,the,first,time,in,the,context,of,the,current,test,scope,the,returned,client,gets,automatically,closed,when,needed,it,shouldn,t,be,closed,as,part,of,tests,otherwise,it,cannot,be,reused,by,other,tests,anymore;protected,rest,client,get,rest,client,return,get,rest,client,client
SecuritySingleNodeTestCase -> protected RestClient getRestClient();1528893677;Returns an instance of {@link RestClient} pointing to the current node._Creates a new client if the method is invoked for the first time in the context of the current test scope._The returned client gets automatically closed when needed, it shouldn't be closed as part of tests otherwise_it cannot be reused by other tests anymore.;protected RestClient getRestClient() {_        return getRestClient(client())__    };returns,an,instance,of,link,rest,client,pointing,to,the,current,node,creates,a,new,client,if,the,method,is,invoked,for,the,first,time,in,the,context,of,the,current,test,scope,the,returned,client,gets,automatically,closed,when,needed,it,shouldn,t,be,closed,as,part,of,tests,otherwise,it,cannot,be,reused,by,other,tests,anymore;protected,rest,client,get,rest,client,return,get,rest,client,client
SecuritySingleNodeTestCase -> protected RestClient getRestClient();1539723533;Returns an instance of {@link RestClient} pointing to the current node._Creates a new client if the method is invoked for the first time in the context of the current test scope._The returned client gets automatically closed when needed, it shouldn't be closed as part of tests otherwise_it cannot be reused by other tests anymore.;protected RestClient getRestClient() {_        return getRestClient(client())__    };returns,an,instance,of,link,rest,client,pointing,to,the,current,node,creates,a,new,client,if,the,method,is,invoked,for,the,first,time,in,the,context,of,the,current,test,scope,the,returned,client,gets,automatically,closed,when,needed,it,shouldn,t,be,closed,as,part,of,tests,otherwise,it,cannot,be,reused,by,other,tests,anymore;protected,rest,client,get,rest,client,return,get,rest,client,client
SecuritySingleNodeTestCase -> protected RestClient getRestClient();1544081506;Returns an instance of {@link RestClient} pointing to the current node._Creates a new client if the method is invoked for the first time in the context of the current test scope._The returned client gets automatically closed when needed, it shouldn't be closed as part of tests otherwise_it cannot be reused by other tests anymore.;protected RestClient getRestClient() {_        return getRestClient(client())__    };returns,an,instance,of,link,rest,client,pointing,to,the,current,node,creates,a,new,client,if,the,method,is,invoked,for,the,first,time,in,the,context,of,the,current,test,scope,the,returned,client,gets,automatically,closed,when,needed,it,shouldn,t,be,closed,as,part,of,tests,otherwise,it,cannot,be,reused,by,other,tests,anymore;protected,rest,client,get,rest,client,return,get,rest,client,client
SecuritySingleNodeTestCase -> protected String configUsers();1524684173;Allows to override the users config file;protected String configUsers() {_        return SECURITY_DEFAULT_SETTINGS.configUsers()__    };allows,to,override,the,users,config,file;protected,string,config,users,return,config,users
SecuritySingleNodeTestCase -> protected String configUsers();1527096592;Allows to override the users config file;protected String configUsers() {_        return SECURITY_DEFAULT_SETTINGS.configUsers()__    };allows,to,override,the,users,config,file;protected,string,config,users,return,config,users
SecuritySingleNodeTestCase -> protected String configUsers();1528762805;Allows to override the users config file;protected String configUsers() {_        return SECURITY_DEFAULT_SETTINGS.configUsers()__    };allows,to,override,the,users,config,file;protected,string,config,users,return,config,users
SecuritySingleNodeTestCase -> protected String configUsers();1528893677;Allows to override the users config file;protected String configUsers() {_        return SECURITY_DEFAULT_SETTINGS.configUsers()__    };allows,to,override,the,users,config,file;protected,string,config,users,return,config,users
SecuritySingleNodeTestCase -> protected String configUsers();1539723533;Allows to override the users config file;protected String configUsers() {_        return SECURITY_DEFAULT_SETTINGS.configUsers()__    };allows,to,override,the,users,config,file;protected,string,config,users,return,config,users
SecuritySingleNodeTestCase -> protected String configUsers();1544081506;Allows to override the users config file;protected String configUsers() {_        return SECURITY_DEFAULT_SETTINGS.configUsers()__    };allows,to,override,the,users,config,file;protected,string,config,users,return,config,users
SecuritySingleNodeTestCase -> protected String configUsersRoles();1524684173;Allows to override the users_roles config file;protected String configUsersRoles() {_        return SECURITY_DEFAULT_SETTINGS.configUsersRoles()__    };allows,to,override,the,config,file;protected,string,config,users,roles,return,config,users,roles
SecuritySingleNodeTestCase -> protected String configUsersRoles();1527096592;Allows to override the users_roles config file;protected String configUsersRoles() {_        return SECURITY_DEFAULT_SETTINGS.configUsersRoles()__    };allows,to,override,the,config,file;protected,string,config,users,roles,return,config,users,roles
SecuritySingleNodeTestCase -> protected String configUsersRoles();1528762805;Allows to override the users_roles config file;protected String configUsersRoles() {_        return SECURITY_DEFAULT_SETTINGS.configUsersRoles()__    };allows,to,override,the,config,file;protected,string,config,users,roles,return,config,users,roles
SecuritySingleNodeTestCase -> protected String configUsersRoles();1528893677;Allows to override the users_roles config file;protected String configUsersRoles() {_        return SECURITY_DEFAULT_SETTINGS.configUsersRoles()__    };allows,to,override,the,config,file;protected,string,config,users,roles,return,config,users,roles
SecuritySingleNodeTestCase -> protected String configUsersRoles();1539723533;Allows to override the users_roles config file;protected String configUsersRoles() {_        return SECURITY_DEFAULT_SETTINGS.configUsersRoles()__    };allows,to,override,the,config,file;protected,string,config,users,roles,return,config,users,roles
SecuritySingleNodeTestCase -> protected String configUsersRoles();1544081506;Allows to override the users_roles config file;protected String configUsersRoles() {_        return SECURITY_DEFAULT_SETTINGS.configUsersRoles()__    };allows,to,override,the,config,file;protected,string,config,users,roles,return,config,users,roles
SecuritySingleNodeTestCase -> protected String nodeClientUsername();1524684173;Allows to override the node client username;protected String nodeClientUsername() {_        return SECURITY_DEFAULT_SETTINGS.nodeClientUsername()__    };allows,to,override,the,node,client,username;protected,string,node,client,username,return,node,client,username
SecuritySingleNodeTestCase -> protected String nodeClientUsername();1527096592;Allows to override the node client username;protected String nodeClientUsername() {_        return SECURITY_DEFAULT_SETTINGS.nodeClientUsername()__    };allows,to,override,the,node,client,username;protected,string,node,client,username,return,node,client,username
SecuritySingleNodeTestCase -> protected String nodeClientUsername();1528762805;Allows to override the node client username;protected String nodeClientUsername() {_        return SECURITY_DEFAULT_SETTINGS.nodeClientUsername()__    };allows,to,override,the,node,client,username;protected,string,node,client,username,return,node,client,username
SecuritySingleNodeTestCase -> protected String nodeClientUsername();1528893677;Allows to override the node client username;protected String nodeClientUsername() {_        return SECURITY_DEFAULT_SETTINGS.nodeClientUsername()__    };allows,to,override,the,node,client,username;protected,string,node,client,username,return,node,client,username
SecuritySingleNodeTestCase -> protected String nodeClientUsername();1539723533;Allows to override the node client username;protected String nodeClientUsername() {_        return SECURITY_DEFAULT_SETTINGS.nodeClientUsername()__    };allows,to,override,the,node,client,username;protected,string,node,client,username,return,node,client,username
SecuritySingleNodeTestCase -> protected String nodeClientUsername();1544081506;Allows to override the node client username;protected String nodeClientUsername() {_        return SECURITY_DEFAULT_SETTINGS.nodeClientUsername()__    };allows,to,override,the,node,client,username;protected,string,node,client,username,return,node,client,username
SecuritySingleNodeTestCase -> @AfterClass     public static void destroyDefaultSettings();1524684173;Set the static default settings to null to prevent a memory leak. The test framework also checks for memory leaks_and computes the size, this can cause issues when running with the security manager as it tries to do reflection_into protected sun packages.;@AfterClass_    public static void destroyDefaultSettings() {_        SECURITY_DEFAULT_SETTINGS = null__        customSecuritySettingsSource = null__        if (BOOTSTRAP_PASSWORD != null) {_            BOOTSTRAP_PASSWORD.close()__            BOOTSTRAP_PASSWORD = null__        }_        tearDownRestClient()__    };set,the,static,default,settings,to,null,to,prevent,a,memory,leak,the,test,framework,also,checks,for,memory,leaks,and,computes,the,size,this,can,cause,issues,when,running,with,the,security,manager,as,it,tries,to,do,reflection,into,protected,sun,packages;after,class,public,static,void,destroy,default,settings,null,custom,security,settings,source,null,if,null,close,null,tear,down,rest,client
SecuritySingleNodeTestCase -> @AfterClass     public static void destroyDefaultSettings();1527096592;Set the static default settings to null to prevent a memory leak. The test framework also checks for memory leaks_and computes the size, this can cause issues when running with the security manager as it tries to do reflection_into protected sun packages.;@AfterClass_    public static void destroyDefaultSettings() {_        SECURITY_DEFAULT_SETTINGS = null__        customSecuritySettingsSource = null__        if (BOOTSTRAP_PASSWORD != null) {_            BOOTSTRAP_PASSWORD.close()__            BOOTSTRAP_PASSWORD = null__        }_        tearDownRestClient()__    };set,the,static,default,settings,to,null,to,prevent,a,memory,leak,the,test,framework,also,checks,for,memory,leaks,and,computes,the,size,this,can,cause,issues,when,running,with,the,security,manager,as,it,tries,to,do,reflection,into,protected,sun,packages;after,class,public,static,void,destroy,default,settings,null,custom,security,settings,source,null,if,null,close,null,tear,down,rest,client
SecuritySingleNodeTestCase -> @AfterClass     public static void destroyDefaultSettings();1528762805;Set the static default settings to null to prevent a memory leak. The test framework also checks for memory leaks_and computes the size, this can cause issues when running with the security manager as it tries to do reflection_into protected sun packages.;@AfterClass_    public static void destroyDefaultSettings() {_        SECURITY_DEFAULT_SETTINGS = null__        customSecuritySettingsSource = null__        if (BOOTSTRAP_PASSWORD != null) {_            BOOTSTRAP_PASSWORD.close()__            BOOTSTRAP_PASSWORD = null__        }_        tearDownRestClient()__    };set,the,static,default,settings,to,null,to,prevent,a,memory,leak,the,test,framework,also,checks,for,memory,leaks,and,computes,the,size,this,can,cause,issues,when,running,with,the,security,manager,as,it,tries,to,do,reflection,into,protected,sun,packages;after,class,public,static,void,destroy,default,settings,null,custom,security,settings,source,null,if,null,close,null,tear,down,rest,client
SecuritySingleNodeTestCase -> @AfterClass     public static void destroyDefaultSettings();1528893677;Set the static default settings to null to prevent a memory leak. The test framework also checks for memory leaks_and computes the size, this can cause issues when running with the security manager as it tries to do reflection_into protected sun packages.;@AfterClass_    public static void destroyDefaultSettings() {_        SECURITY_DEFAULT_SETTINGS = null__        customSecuritySettingsSource = null__        if (BOOTSTRAP_PASSWORD != null) {_            BOOTSTRAP_PASSWORD.close()__            BOOTSTRAP_PASSWORD = null__        }_        tearDownRestClient()__    };set,the,static,default,settings,to,null,to,prevent,a,memory,leak,the,test,framework,also,checks,for,memory,leaks,and,computes,the,size,this,can,cause,issues,when,running,with,the,security,manager,as,it,tries,to,do,reflection,into,protected,sun,packages;after,class,public,static,void,destroy,default,settings,null,custom,security,settings,source,null,if,null,close,null,tear,down,rest,client
SecuritySingleNodeTestCase -> @AfterClass     public static void destroyDefaultSettings();1539723533;Set the static default settings to null to prevent a memory leak. The test framework also checks for memory leaks_and computes the size, this can cause issues when running with the security manager as it tries to do reflection_into protected sun packages.;@AfterClass_    public static void destroyDefaultSettings() {_        SECURITY_DEFAULT_SETTINGS = null__        customSecuritySettingsSource = null__        if (BOOTSTRAP_PASSWORD != null) {_            BOOTSTRAP_PASSWORD.close()__            BOOTSTRAP_PASSWORD = null__        }_        tearDownRestClient()__    };set,the,static,default,settings,to,null,to,prevent,a,memory,leak,the,test,framework,also,checks,for,memory,leaks,and,computes,the,size,this,can,cause,issues,when,running,with,the,security,manager,as,it,tries,to,do,reflection,into,protected,sun,packages;after,class,public,static,void,destroy,default,settings,null,custom,security,settings,source,null,if,null,close,null,tear,down,rest,client
SecuritySingleNodeTestCase -> @AfterClass     public static void destroyDefaultSettings();1544081506;Set the static default settings to null to prevent a memory leak. The test framework also checks for memory leaks_and computes the size, this can cause issues when running with the security manager as it tries to do reflection_into protected sun packages.;@AfterClass_    public static void destroyDefaultSettings() {_        SECURITY_DEFAULT_SETTINGS = null__        customSecuritySettingsSource = null__        if (BOOTSTRAP_PASSWORD != null) {_            BOOTSTRAP_PASSWORD.close()__            BOOTSTRAP_PASSWORD = null__        }_        tearDownRestClient()__    };set,the,static,default,settings,to,null,to,prevent,a,memory,leak,the,test,framework,also,checks,for,memory,leaks,and,computes,the,size,this,can,cause,issues,when,running,with,the,security,manager,as,it,tries,to,do,reflection,into,protected,sun,packages;after,class,public,static,void,destroy,default,settings,null,custom,security,settings,source,null,if,null,close,null,tear,down,rest,client
SecuritySingleNodeTestCase -> protected SecureString nodeClientPassword();1524684173;Allows to override the node client password (used while sending requests to the test node);protected SecureString nodeClientPassword() {_        return SECURITY_DEFAULT_SETTINGS.nodeClientPassword()__    };allows,to,override,the,node,client,password,used,while,sending,requests,to,the,test,node;protected,secure,string,node,client,password,return,node,client,password
SecuritySingleNodeTestCase -> protected SecureString nodeClientPassword();1527096592;Allows to override the node client password (used while sending requests to the test node);protected SecureString nodeClientPassword() {_        return SECURITY_DEFAULT_SETTINGS.nodeClientPassword()__    };allows,to,override,the,node,client,password,used,while,sending,requests,to,the,test,node;protected,secure,string,node,client,password,return,node,client,password
SecuritySingleNodeTestCase -> protected SecureString nodeClientPassword();1528762805;Allows to override the node client password (used while sending requests to the test node);protected SecureString nodeClientPassword() {_        return SECURITY_DEFAULT_SETTINGS.nodeClientPassword()__    };allows,to,override,the,node,client,password,used,while,sending,requests,to,the,test,node;protected,secure,string,node,client,password,return,node,client,password
SecuritySingleNodeTestCase -> protected SecureString nodeClientPassword();1528893677;Allows to override the node client password (used while sending requests to the test node);protected SecureString nodeClientPassword() {_        return SECURITY_DEFAULT_SETTINGS.nodeClientPassword()__    };allows,to,override,the,node,client,password,used,while,sending,requests,to,the,test,node;protected,secure,string,node,client,password,return,node,client,password
SecuritySingleNodeTestCase -> protected SecureString nodeClientPassword();1539723533;Allows to override the node client password (used while sending requests to the test node);protected SecureString nodeClientPassword() {_        return SECURITY_DEFAULT_SETTINGS.nodeClientPassword()__    };allows,to,override,the,node,client,password,used,while,sending,requests,to,the,test,node;protected,secure,string,node,client,password,return,node,client,password
SecuritySingleNodeTestCase -> protected SecureString nodeClientPassword();1544081506;Allows to override the node client password (used while sending requests to the test node);protected SecureString nodeClientPassword() {_        return SECURITY_DEFAULT_SETTINGS.nodeClientPassword()__    };allows,to,override,the,node,client,password,used,while,sending,requests,to,the,test,node;protected,secure,string,node,client,password,return,node,client,password
