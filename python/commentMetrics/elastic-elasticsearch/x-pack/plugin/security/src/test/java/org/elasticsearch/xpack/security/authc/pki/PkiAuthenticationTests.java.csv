# id;timestamp;commentText;codeText;commentWords;codeWords
PkiAuthenticationTests -> public void testTransportClientAuthenticationFailure();1524684173;Test uses the testclient cert which is trusted by the SSL layer BUT it is not trusted by the PKI authentication_realm;public void testTransportClientAuthenticationFailure() {_        try (TransportClient client = createTransportClient(Settings.EMPTY)) {_            client.addTransportAddress(randomFrom(node().injector().getInstance(Transport.class).boundAddress().boundAddresses()))__            client.prepareIndex("foo", "bar").setSource("pki", "auth").get()__            fail("transport client should not have been able to authenticate")__        } catch (NoNodeAvailableException e) {_            assertThat(e.getMessage(), containsString("None of the configured nodes are available: [{#transport#"))__        }_    };test,uses,the,testclient,cert,which,is,trusted,by,the,ssl,layer,but,it,is,not,trusted,by,the,pki,authentication,realm;public,void,test,transport,client,authentication,failure,try,transport,client,client,create,transport,client,settings,empty,client,add,transport,address,random,from,node,injector,get,instance,transport,class,bound,address,bound,addresses,client,prepare,index,foo,bar,set,source,pki,auth,get,fail,transport,client,should,not,have,been,able,to,authenticate,catch,no,node,available,exception,e,assert,that,e,get,message,contains,string,none,of,the,configured,nodes,are,available,transport
PkiAuthenticationTests -> public void testTransportClientAuthenticationFailure();1525334055;Test uses the testclient cert which is trusted by the SSL layer BUT it is not trusted by the PKI authentication_realm;public void testTransportClientAuthenticationFailure() {_        try (TransportClient client = createTransportClient(Settings.EMPTY)) {_            client.addTransportAddress(randomFrom(node().injector().getInstance(Transport.class).boundAddress().boundAddresses()))__            client.prepareIndex("foo", "bar").setSource("pki", "auth").get()__            fail("transport client should not have been able to authenticate")__        } catch (NoNodeAvailableException e) {_            assertThat(e.getMessage(), containsString("None of the configured nodes are available: [{#transport#"))__        }_    };test,uses,the,testclient,cert,which,is,trusted,by,the,ssl,layer,but,it,is,not,trusted,by,the,pki,authentication,realm;public,void,test,transport,client,authentication,failure,try,transport,client,client,create,transport,client,settings,empty,client,add,transport,address,random,from,node,injector,get,instance,transport,class,bound,address,bound,addresses,client,prepare,index,foo,bar,set,source,pki,auth,get,fail,transport,client,should,not,have,been,able,to,authenticate,catch,no,node,available,exception,e,assert,that,e,get,message,contains,string,none,of,the,configured,nodes,are,available,transport
PkiAuthenticationTests -> public void testTransportClientAuthenticationFailure();1528762805;Test uses the testclient cert which is trusted by the SSL layer BUT it is not trusted by the PKI authentication_realm;public void testTransportClientAuthenticationFailure() {_        try (TransportClient client = createTransportClient(Settings.EMPTY)) {_            client.addTransportAddress(randomFrom(node().injector().getInstance(Transport.class).boundAddress().boundAddresses()))__            client.prepareIndex("foo", "bar").setSource("pki", "auth").get()__            fail("transport client should not have been able to authenticate")__        } catch (NoNodeAvailableException e) {_            assertThat(e.getMessage(), containsString("None of the configured nodes are available: [{#transport#"))__        }_    };test,uses,the,testclient,cert,which,is,trusted,by,the,ssl,layer,but,it,is,not,trusted,by,the,pki,authentication,realm;public,void,test,transport,client,authentication,failure,try,transport,client,client,create,transport,client,settings,empty,client,add,transport,address,random,from,node,injector,get,instance,transport,class,bound,address,bound,addresses,client,prepare,index,foo,bar,set,source,pki,auth,get,fail,transport,client,should,not,have,been,able,to,authenticate,catch,no,node,available,exception,e,assert,that,e,get,message,contains,string,none,of,the,configured,nodes,are,available,transport
PkiAuthenticationTests -> public void testTransportClientAuthenticationFailure();1531910483;Test uses the testclient cert which is trusted by the SSL layer BUT it is not trusted by the PKI authentication_realm;public void testTransportClientAuthenticationFailure() {_        try (TransportClient client = createTransportClient(Settings.EMPTY)) {_            client.addTransportAddress(randomFrom(node().injector().getInstance(Transport.class).boundAddress().boundAddresses()))__            client.prepareIndex("foo", "bar").setSource("pki", "auth").get()__            fail("transport client should not have been able to authenticate")__        } catch (NoNodeAvailableException e) {_            assertThat(e.getMessage(), containsString("None of the configured nodes are available: [{#transport#"))__        }_    };test,uses,the,testclient,cert,which,is,trusted,by,the,ssl,layer,but,it,is,not,trusted,by,the,pki,authentication,realm;public,void,test,transport,client,authentication,failure,try,transport,client,client,create,transport,client,settings,empty,client,add,transport,address,random,from,node,injector,get,instance,transport,class,bound,address,bound,addresses,client,prepare,index,foo,bar,set,source,pki,auth,get,fail,transport,client,should,not,have,been,able,to,authenticate,catch,no,node,available,exception,e,assert,that,e,get,message,contains,string,none,of,the,configured,nodes,are,available,transport
PkiAuthenticationTests -> public void testTransportClientAuthenticationFailure();1541476610;Test uses the testclient cert which is trusted by the SSL layer BUT it is not trusted by the PKI authentication_realm;public void testTransportClientAuthenticationFailure() {_        try (TransportClient client = createTransportClient(Settings.EMPTY)) {_            client.addTransportAddress(randomFrom(node().injector().getInstance(Transport.class).boundAddress().boundAddresses()))__            client.prepareIndex("foo", "bar").setSource("pki", "auth").get()__            fail("transport client should not have been able to authenticate")__        } catch (NoNodeAvailableException e) {_            assertThat(e.getMessage(), containsString("None of the configured nodes are available: [{#transport#"))__        }_    };test,uses,the,testclient,cert,which,is,trusted,by,the,ssl,layer,but,it,is,not,trusted,by,the,pki,authentication,realm;public,void,test,transport,client,authentication,failure,try,transport,client,client,create,transport,client,settings,empty,client,add,transport,address,random,from,node,injector,get,instance,transport,class,bound,address,bound,addresses,client,prepare,index,foo,bar,set,source,pki,auth,get,fail,transport,client,should,not,have,been,able,to,authenticate,catch,no,node,available,exception,e,assert,that,e,get,message,contains,string,none,of,the,configured,nodes,are,available,transport
PkiAuthenticationTests -> public void testTransportClientAuthenticationFailure();1547499982;Test uses the testclient cert which is trusted by the SSL layer BUT it is not trusted by the PKI authentication_realm;public void testTransportClientAuthenticationFailure() {_        try (TransportClient client = createTransportClient(Settings.EMPTY)) {_            client.addTransportAddress(randomFrom(node().injector().getInstance(Transport.class).boundAddress().boundAddresses()))__            client.prepareIndex("foo", "bar").setSource("pki", "auth").get()__            fail("transport client should not have been able to authenticate")__        } catch (NoNodeAvailableException e) {_            assertThat(e.getMessage(), containsString("None of the configured nodes are available: [{#transport#"))__        }_    };test,uses,the,testclient,cert,which,is,trusted,by,the,ssl,layer,but,it,is,not,trusted,by,the,pki,authentication,realm;public,void,test,transport,client,authentication,failure,try,transport,client,client,create,transport,client,settings,empty,client,add,transport,address,random,from,node,injector,get,instance,transport,class,bound,address,bound,addresses,client,prepare,index,foo,bar,set,source,pki,auth,get,fail,transport,client,should,not,have,been,able,to,authenticate,catch,no,node,available,exception,e,assert,that,e,get,message,contains,string,none,of,the,configured,nodes,are,available,transport
