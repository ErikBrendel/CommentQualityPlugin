commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;public void testXPackUserCanAccessNonSecurityIndices() {     final String action = randomFrom(GetAction.NAME, SearchAction.NAME, IndexAction.NAME).     final Predicate<String> predicate = XPackUser.ROLE.indices().allowedIndicesMatcher(action).     final String index = randomBoolean() ? randomAlphaOfLengthBetween(3, 12) : "." + randomAlphaOfLength(8).     assertThat(predicate.test(index), Matchers.is(true)). }
false;public;0;9;;public void testXPackUserCannotAccessRestrictedIndices() {     final String action = randomFrom(GetAction.NAME, SearchAction.NAME, IndexAction.NAME).     final Predicate<String> predicate = XPackUser.ROLE.indices().allowedIndicesMatcher(action).     assertThat(predicate.test(SecurityIndexManager.SECURITY_INDEX_NAME), Matchers.is(false)).     assertThat(predicate.test(SecurityIndexManager.INTERNAL_SECURITY_INDEX), Matchers.is(false)).     for (String index : RestrictedIndicesNames.RESTRICTED_NAMES) {         assertThat(predicate.test(index), Matchers.is(false)).     } }
false;public;0;5;;public void testXPackUserCanReadAuditTrail() {     final String action = randomFrom(GetAction.NAME, SearchAction.NAME).     final Predicate<String> predicate = XPackUser.ROLE.indices().allowedIndicesMatcher(action).     assertThat(predicate.test(getAuditLogName()), Matchers.is(true)). }
false;public;0;5;;public void testXPackUserCannotWriteToAuditTrail() {     final String action = randomFrom(IndexAction.NAME, UpdateAction.NAME).     final Predicate<String> predicate = XPackUser.ROLE.indices().allowedIndicesMatcher(action).     assertThat(predicate.test(getAuditLogName()), Matchers.is(false)). }
false;private;0;5;;private String getAuditLogName() {     final DateTime date = new DateTime().plusDays(randomIntBetween(1, 360)).     final IndexNameResolver.Rollover rollover = randomFrom(IndexNameResolver.Rollover.values()).     return IndexNameResolver.resolve(IndexAuditTrailField.INDEX_NAME_PREFIX, date, rollover). }
