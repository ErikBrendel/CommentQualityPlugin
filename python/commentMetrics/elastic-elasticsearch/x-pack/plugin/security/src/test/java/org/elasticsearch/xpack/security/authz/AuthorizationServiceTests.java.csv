# id;timestamp;commentText;codeText;commentWords;codeWords
AuthorizationServiceTests -> public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes();1524684173;Verifies that the behaviour tested in {@link #testUserWithNoRolesCanPerformRemoteSearch}_does not work for requests that are not remote-index-capable.;public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() {_        DeleteIndexRequest request = new DeleteIndexRequest()__        request.indices("other_cluster:index1", "other_cluster:index2")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_                () -> authorize(authentication, DeleteIndexAction.NAME, request),_                DeleteIndexAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, DeleteIndexAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };verifies,that,the,behaviour,tested,in,link,test,user,with,no,roles,can,perform,remote,search,does,not,work,for,requests,that,are,not,remote,index,capable;public,void,test,remote,indices,only,work,with,applicable,request,types,delete,index,request,request,new,delete,index,request,request,indices,index1,index2,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,delete,index,action,name,request,delete,index,action,name,test,user,verify,audit,trail,access,denied,authentication,delete,index,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes();1526449283;Verifies that the behaviour tested in {@link #testUserWithNoRolesCanPerformRemoteSearch}_does not work for requests that are not remote-index-capable.;public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() {_        DeleteIndexRequest request = new DeleteIndexRequest()__        request.indices("other_cluster:index1", "other_cluster:index2")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_                () -> authorize(authentication, DeleteIndexAction.NAME, request),_                DeleteIndexAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, DeleteIndexAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };verifies,that,the,behaviour,tested,in,link,test,user,with,no,roles,can,perform,remote,search,does,not,work,for,requests,that,are,not,remote,index,capable;public,void,test,remote,indices,only,work,with,applicable,request,types,delete,index,request,request,new,delete,index,request,request,indices,index1,index2,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,delete,index,action,name,request,delete,index,action,name,test,user,verify,audit,trail,access,denied,authentication,delete,index,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes();1531179852;Verifies that the behaviour tested in {@link #testUserWithNoRolesCanPerformRemoteSearch}_does not work for requests that are not remote-index-capable.;public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() {_        DeleteIndexRequest request = new DeleteIndexRequest()__        request.indices("other_cluster:index1", "other_cluster:index2")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_                () -> authorize(authentication, DeleteIndexAction.NAME, request),_                DeleteIndexAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, DeleteIndexAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };verifies,that,the,behaviour,tested,in,link,test,user,with,no,roles,can,perform,remote,search,does,not,work,for,requests,that,are,not,remote,index,capable;public,void,test,remote,indices,only,work,with,applicable,request,types,delete,index,request,request,new,delete,index,request,request,indices,index1,index2,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,delete,index,action,name,request,delete,index,action,name,test,user,verify,audit,trail,access,denied,authentication,delete,index,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes();1532456624;Verifies that the behaviour tested in {@link #testUserWithNoRolesCanPerformRemoteSearch}_does not work for requests that are not remote-index-capable.;public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() {_        DeleteIndexRequest request = new DeleteIndexRequest()__        request.indices("other_cluster:index1", "other_cluster:index2")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, DeleteIndexAction.NAME, request),_            DeleteIndexAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, DeleteIndexAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };verifies,that,the,behaviour,tested,in,link,test,user,with,no,roles,can,perform,remote,search,does,not,work,for,requests,that,are,not,remote,index,capable;public,void,test,remote,indices,only,work,with,applicable,request,types,delete,index,request,request,new,delete,index,request,request,indices,index1,index2,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,delete,index,action,name,request,delete,index,action,name,test,user,verify,audit,trail,access,denied,authentication,delete,index,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes();1533295538;Verifies that the behaviour tested in {@link #testUserWithNoRolesCanPerformRemoteSearch}_does not work for requests that are not remote-index-capable.;public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() {_        DeleteIndexRequest request = new DeleteIndexRequest()__        request.indices("other_cluster:index1", "other_cluster:index2")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, DeleteIndexAction.NAME, request),_            DeleteIndexAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, DeleteIndexAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };verifies,that,the,behaviour,tested,in,link,test,user,with,no,roles,can,perform,remote,search,does,not,work,for,requests,that,are,not,remote,index,capable;public,void,test,remote,indices,only,work,with,applicable,request,types,delete,index,request,request,new,delete,index,request,request,indices,index1,index2,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,delete,index,action,name,request,delete,index,action,name,test,user,verify,audit,trail,access,denied,authentication,delete,index,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes();1535552903;Verifies that the behaviour tested in {@link #testUserWithNoRolesCanPerformRemoteSearch}_does not work for requests that are not remote-index-capable.;public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() {_        DeleteIndexRequest request = new DeleteIndexRequest()__        request.indices("other_cluster:index1", "other_cluster:index2")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, DeleteIndexAction.NAME, request),_            DeleteIndexAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, DeleteIndexAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };verifies,that,the,behaviour,tested,in,link,test,user,with,no,roles,can,perform,remote,search,does,not,work,for,requests,that,are,not,remote,index,capable;public,void,test,remote,indices,only,work,with,applicable,request,types,delete,index,request,request,new,delete,index,request,request,indices,index1,index2,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,delete,index,action,name,request,delete,index,action,name,test,user,verify,audit,trail,access,denied,authentication,delete,index,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes();1536218260;Verifies that the behaviour tested in {@link #testUserWithNoRolesCanPerformRemoteSearch}_does not work for requests that are not remote-index-capable.;public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() {_        DeleteIndexRequest request = new DeleteIndexRequest()__        request.indices("other_cluster:index1", "other_cluster:index2")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, DeleteIndexAction.NAME, request),_            DeleteIndexAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, DeleteIndexAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };verifies,that,the,behaviour,tested,in,link,test,user,with,no,roles,can,perform,remote,search,does,not,work,for,requests,that,are,not,remote,index,capable;public,void,test,remote,indices,only,work,with,applicable,request,types,delete,index,request,request,new,delete,index,request,request,indices,index1,index2,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,delete,index,action,name,request,delete,index,action,name,test,user,verify,audit,trail,access,denied,authentication,delete,index,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes();1539615817;Verifies that the behaviour tested in {@link #testUserWithNoRolesCanPerformRemoteSearch}_does not work for requests that are not remote-index-capable.;public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() {_        DeleteIndexRequest request = new DeleteIndexRequest()__        request.indices("other_cluster:index1", "other_cluster:index2")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, DeleteIndexAction.NAME, request),_            DeleteIndexAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, DeleteIndexAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };verifies,that,the,behaviour,tested,in,link,test,user,with,no,roles,can,perform,remote,search,does,not,work,for,requests,that,are,not,remote,index,capable;public,void,test,remote,indices,only,work,with,applicable,request,types,delete,index,request,request,new,delete,index,request,request,indices,index1,index2,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,delete,index,action,name,request,delete,index,action,name,test,user,verify,audit,trail,access,denied,authentication,delete,index,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes();1540313026;Verifies that the behaviour tested in {@link #testUserWithNoRolesCanPerformRemoteSearch}_does not work for requests that are not remote-index-capable.;public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() {_        DeleteIndexRequest request = new DeleteIndexRequest()__        request.indices("other_cluster:index1", "other_cluster:index2")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, DeleteIndexAction.NAME, request),_            DeleteIndexAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, DeleteIndexAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };verifies,that,the,behaviour,tested,in,link,test,user,with,no,roles,can,perform,remote,search,does,not,work,for,requests,that,are,not,remote,index,capable;public,void,test,remote,indices,only,work,with,applicable,request,types,delete,index,request,request,new,delete,index,request,request,indices,index1,index2,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,delete,index,action,name,request,delete,index,action,name,test,user,verify,audit,trail,access,denied,authentication,delete,index,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes();1542240273;Verifies that the behaviour tested in {@link #testUserWithNoRolesCanPerformRemoteSearch}_does not work for requests that are not remote-index-capable.;public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() {_        DeleteIndexRequest request = new DeleteIndexRequest()__        request.indices("other_cluster:index1", "other_cluster:index2")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, DeleteIndexAction.NAME, request),_            DeleteIndexAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, DeleteIndexAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };verifies,that,the,behaviour,tested,in,link,test,user,with,no,roles,can,perform,remote,search,does,not,work,for,requests,that,are,not,remote,index,capable;public,void,test,remote,indices,only,work,with,applicable,request,types,delete,index,request,request,new,delete,index,request,request,indices,index1,index2,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,delete,index,action,name,request,delete,index,action,name,test,user,verify,audit,trail,access,denied,authentication,delete,index,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes();1543292387;Verifies that the behaviour tested in {@link #testUserWithNoRolesCanPerformRemoteSearch}_does not work for requests that are not remote-index-capable.;public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() {_        DeleteIndexRequest request = new DeleteIndexRequest()__        request.indices("other_cluster:index1", "other_cluster:index2")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, DeleteIndexAction.NAME, request),_            DeleteIndexAction.NAME, "test user")__        verify(auditTrail).accessDenied(requestId, authentication, DeleteIndexAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };verifies,that,the,behaviour,tested,in,link,test,user,with,no,roles,can,perform,remote,search,does,not,work,for,requests,that,are,not,remote,index,capable;public,void,test,remote,indices,only,work,with,applicable,request,types,delete,index,request,request,new,delete,index,request,request,indices,index1,index2,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,delete,index,action,name,request,delete,index,action,name,test,user,verify,audit,trail,access,denied,request,id,authentication,delete,index,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes();1548593396;Verifies that the behaviour tested in {@link #testUserWithNoRolesCanPerformRemoteSearch}_does not work for requests that are not remote-index-capable.;public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() {_        DeleteIndexRequest request = new DeleteIndexRequest()__        request.indices("other_cluster:index1", "other_cluster:index2")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, DeleteIndexAction.NAME, request),_            DeleteIndexAction.NAME, "test user")__        verify(auditTrail).accessDenied(requestId, authentication, DeleteIndexAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };verifies,that,the,behaviour,tested,in,link,test,user,with,no,roles,can,perform,remote,search,does,not,work,for,requests,that,are,not,remote,index,capable;public,void,test,remote,indices,only,work,with,applicable,request,types,delete,index,request,request,new,delete,index,request,request,indices,index1,index2,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,delete,index,action,name,request,delete,index,action,name,test,user,verify,audit,trail,access,denied,request,id,authentication,delete,index,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes();1548789003;Verifies that the behaviour tested in {@link #testUserWithNoRolesCanPerformRemoteSearch}_does not work for requests that are not remote-index-capable.;public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() {_        DeleteIndexRequest request = new DeleteIndexRequest()__        request.indices("other_cluster:index1", "other_cluster:index2")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, DeleteIndexAction.NAME, request),_            DeleteIndexAction.NAME, "test user")__        verify(auditTrail).accessDenied(requestId, authentication, DeleteIndexAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };verifies,that,the,behaviour,tested,in,link,test,user,with,no,roles,can,perform,remote,search,does,not,work,for,requests,that,are,not,remote,index,capable;public,void,test,remote,indices,only,work,with,applicable,request,types,delete,index,request,request,new,delete,index,request,request,indices,index1,index2,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,delete,index,action,name,request,delete,index,action,name,test,user,verify,audit,trail,access,denied,request,id,authentication,delete,index,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes();1549294529;Verifies that the behaviour tested in {@link #testUserWithNoRolesCanPerformRemoteSearch}_does not work for requests that are not remote-index-capable.;public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() {_        DeleteIndexRequest request = new DeleteIndexRequest()__        request.indices("other_cluster:index1", "other_cluster:index2")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, DeleteIndexAction.NAME, request),_            DeleteIndexAction.NAME, "test user")__        verify(auditTrail).accessDenied(requestId, authentication, DeleteIndexAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };verifies,that,the,behaviour,tested,in,link,test,user,with,no,roles,can,perform,remote,search,does,not,work,for,requests,that,are,not,remote,index,capable;public,void,test,remote,indices,only,work,with,applicable,request,types,delete,index,request,request,new,delete,index,request,request,indices,index1,index2,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,delete,index,action,name,request,delete,index,action,name,test,user,verify,audit,trail,access,denied,request,id,authentication,delete,index,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCannotPerformLocalSearch() throws IOException;1549336917;This test mimics {@link #testUserWithNoRolesCanPerformRemoteSearch()} except that_while the referenced index _looks_ like a remote index, the remote cluster name has not_been defined, so it is actually a local index and access should be denied;public void testUserWithNoRolesCannotPerformLocalSearch() throws IOException {_        SearchRequest request = new SearchRequest()__        request.indices("no_such_cluster:index")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(requestId, authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,can,perform,remote,search,except,that,while,the,referenced,index,like,a,remote,index,the,remote,cluster,name,has,not,been,defined,so,it,is,actually,a,local,index,and,access,should,be,denied;public,void,test,user,with,no,roles,cannot,perform,local,search,throws,ioexception,search,request,request,new,search,request,request,indices,index,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,request,id,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCannotPerformLocalSearch() throws IOException;1549399169;This test mimics {@link #testUserWithNoRolesCanPerformRemoteSearch()} except that_while the referenced index _looks_ like a remote index, the remote cluster name has not_been defined, so it is actually a local index and access should be denied;public void testUserWithNoRolesCannotPerformLocalSearch() throws IOException {_        SearchRequest request = new SearchRequest()__        request.indices("no_such_cluster:index")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(eq(requestId), eq(authentication), eq(SearchAction.NAME), eq(request),_            authzInfoRoles(Role.EMPTY.names()))__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,can,perform,remote,search,except,that,while,the,referenced,index,like,a,remote,index,the,remote,cluster,name,has,not,been,defined,so,it,is,actually,a,local,index,and,access,should,be,denied;public,void,test,user,with,no,roles,cannot,perform,local,search,throws,ioexception,search,request,request,new,search,request,request,indices,index,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,eq,request,id,eq,authentication,eq,search,action,name,eq,request,authz,info,roles,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCannotPerformLocalSearch() throws IOException;1550348884;This test mimics {@link #testUserWithNoRolesCanPerformRemoteSearch()} except that_while the referenced index _looks_ like a remote index, the remote cluster name has not_been defined, so it is actually a local index and access should be denied;public void testUserWithNoRolesCannotPerformLocalSearch() throws IOException {_        SearchRequest request = new SearchRequest()__        request.indices("no_such_cluster:index")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(eq(requestId), eq(authentication), eq(SearchAction.NAME), eq(request),_            authzInfoRoles(Role.EMPTY.names()))__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,can,perform,remote,search,except,that,while,the,referenced,index,like,a,remote,index,the,remote,cluster,name,has,not,been,defined,so,it,is,actually,a,local,index,and,access,should,be,denied;public,void,test,user,with,no,roles,cannot,perform,local,search,throws,ioexception,search,request,request,new,search,request,request,indices,index,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,eq,request,id,eq,authentication,eq,search,action,name,eq,request,authz,info,roles,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCannotPerformLocalSearch() throws IOException;1550664347;This test mimics {@link #testUserWithNoRolesCanPerformRemoteSearch()} except that_while the referenced index _looks_ like a remote index, the remote cluster name has not_been defined, so it is actually a local index and access should be denied;public void testUserWithNoRolesCannotPerformLocalSearch() throws IOException {_        SearchRequest request = new SearchRequest()__        request.indices("no_such_cluster:index")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(eq(requestId), eq(authentication), eq(SearchAction.NAME), eq(request),_            authzInfoRoles(Role.EMPTY.names()))__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,can,perform,remote,search,except,that,while,the,referenced,index,like,a,remote,index,the,remote,cluster,name,has,not,been,defined,so,it,is,actually,a,local,index,and,access,should,be,denied;public,void,test,user,with,no,roles,cannot,perform,local,search,throws,ioexception,search,request,request,new,search,request,request,indices,index,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,eq,request,id,eq,authentication,eq,search,action,name,eq,request,authz,info,roles,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCannotPerformLocalSearch();1524684173;This test mimics {@link #testUserWithNoRolesCanPerformRemoteSearch()} except that_while the referenced index _looks_ like a remote index, the remote cluster name has not_been defined, so it is actually a local index and access should be denied;public void testUserWithNoRolesCannotPerformLocalSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("no_such_cluster:index")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_                () -> authorize(authentication, SearchAction.NAME, request),_                SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,can,perform,remote,search,except,that,while,the,referenced,index,like,a,remote,index,the,remote,cluster,name,has,not,been,defined,so,it,is,actually,a,local,index,and,access,should,be,denied;public,void,test,user,with,no,roles,cannot,perform,local,search,search,request,request,new,search,request,request,indices,index,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCannotPerformLocalSearch();1526449283;This test mimics {@link #testUserWithNoRolesCanPerformRemoteSearch()} except that_while the referenced index _looks_ like a remote index, the remote cluster name has not_been defined, so it is actually a local index and access should be denied;public void testUserWithNoRolesCannotPerformLocalSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("no_such_cluster:index")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_                () -> authorize(authentication, SearchAction.NAME, request),_                SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,can,perform,remote,search,except,that,while,the,referenced,index,like,a,remote,index,the,remote,cluster,name,has,not,been,defined,so,it,is,actually,a,local,index,and,access,should,be,denied;public,void,test,user,with,no,roles,cannot,perform,local,search,search,request,request,new,search,request,request,indices,index,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCannotPerformLocalSearch();1531179852;This test mimics {@link #testUserWithNoRolesCanPerformRemoteSearch()} except that_while the referenced index _looks_ like a remote index, the remote cluster name has not_been defined, so it is actually a local index and access should be denied;public void testUserWithNoRolesCannotPerformLocalSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("no_such_cluster:index")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_                () -> authorize(authentication, SearchAction.NAME, request),_                SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,can,perform,remote,search,except,that,while,the,referenced,index,like,a,remote,index,the,remote,cluster,name,has,not,been,defined,so,it,is,actually,a,local,index,and,access,should,be,denied;public,void,test,user,with,no,roles,cannot,perform,local,search,search,request,request,new,search,request,request,indices,index,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCannotPerformLocalSearch();1532456624;This test mimics {@link #testUserWithNoRolesCanPerformRemoteSearch()} except that_while the referenced index _looks_ like a remote index, the remote cluster name has not_been defined, so it is actually a local index and access should be denied;public void testUserWithNoRolesCannotPerformLocalSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("no_such_cluster:index")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,can,perform,remote,search,except,that,while,the,referenced,index,like,a,remote,index,the,remote,cluster,name,has,not,been,defined,so,it,is,actually,a,local,index,and,access,should,be,denied;public,void,test,user,with,no,roles,cannot,perform,local,search,search,request,request,new,search,request,request,indices,index,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCannotPerformLocalSearch();1533295538;This test mimics {@link #testUserWithNoRolesCanPerformRemoteSearch()} except that_while the referenced index _looks_ like a remote index, the remote cluster name has not_been defined, so it is actually a local index and access should be denied;public void testUserWithNoRolesCannotPerformLocalSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("no_such_cluster:index")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,can,perform,remote,search,except,that,while,the,referenced,index,like,a,remote,index,the,remote,cluster,name,has,not,been,defined,so,it,is,actually,a,local,index,and,access,should,be,denied;public,void,test,user,with,no,roles,cannot,perform,local,search,search,request,request,new,search,request,request,indices,index,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCannotPerformLocalSearch();1535552903;This test mimics {@link #testUserWithNoRolesCanPerformRemoteSearch()} except that_while the referenced index _looks_ like a remote index, the remote cluster name has not_been defined, so it is actually a local index and access should be denied;public void testUserWithNoRolesCannotPerformLocalSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("no_such_cluster:index")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,can,perform,remote,search,except,that,while,the,referenced,index,like,a,remote,index,the,remote,cluster,name,has,not,been,defined,so,it,is,actually,a,local,index,and,access,should,be,denied;public,void,test,user,with,no,roles,cannot,perform,local,search,search,request,request,new,search,request,request,indices,index,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCannotPerformLocalSearch();1536218260;This test mimics {@link #testUserWithNoRolesCanPerformRemoteSearch()} except that_while the referenced index _looks_ like a remote index, the remote cluster name has not_been defined, so it is actually a local index and access should be denied;public void testUserWithNoRolesCannotPerformLocalSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("no_such_cluster:index")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,can,perform,remote,search,except,that,while,the,referenced,index,like,a,remote,index,the,remote,cluster,name,has,not,been,defined,so,it,is,actually,a,local,index,and,access,should,be,denied;public,void,test,user,with,no,roles,cannot,perform,local,search,search,request,request,new,search,request,request,indices,index,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCannotPerformLocalSearch();1539615817;This test mimics {@link #testUserWithNoRolesCanPerformRemoteSearch()} except that_while the referenced index _looks_ like a remote index, the remote cluster name has not_been defined, so it is actually a local index and access should be denied;public void testUserWithNoRolesCannotPerformLocalSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("no_such_cluster:index")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,can,perform,remote,search,except,that,while,the,referenced,index,like,a,remote,index,the,remote,cluster,name,has,not,been,defined,so,it,is,actually,a,local,index,and,access,should,be,denied;public,void,test,user,with,no,roles,cannot,perform,local,search,search,request,request,new,search,request,request,indices,index,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCannotPerformLocalSearch();1540313026;This test mimics {@link #testUserWithNoRolesCanPerformRemoteSearch()} except that_while the referenced index _looks_ like a remote index, the remote cluster name has not_been defined, so it is actually a local index and access should be denied;public void testUserWithNoRolesCannotPerformLocalSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("no_such_cluster:index")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,can,perform,remote,search,except,that,while,the,referenced,index,like,a,remote,index,the,remote,cluster,name,has,not,been,defined,so,it,is,actually,a,local,index,and,access,should,be,denied;public,void,test,user,with,no,roles,cannot,perform,local,search,search,request,request,new,search,request,request,indices,index,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCannotPerformLocalSearch();1542240273;This test mimics {@link #testUserWithNoRolesCanPerformRemoteSearch()} except that_while the referenced index _looks_ like a remote index, the remote cluster name has not_been defined, so it is actually a local index and access should be denied;public void testUserWithNoRolesCannotPerformLocalSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("no_such_cluster:index")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,can,perform,remote,search,except,that,while,the,referenced,index,like,a,remote,index,the,remote,cluster,name,has,not,been,defined,so,it,is,actually,a,local,index,and,access,should,be,denied;public,void,test,user,with,no,roles,cannot,perform,local,search,search,request,request,new,search,request,request,indices,index,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCannotPerformLocalSearch();1543292387;This test mimics {@link #testUserWithNoRolesCanPerformRemoteSearch()} except that_while the referenced index _looks_ like a remote index, the remote cluster name has not_been defined, so it is actually a local index and access should be denied;public void testUserWithNoRolesCannotPerformLocalSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("no_such_cluster:index")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(requestId, authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,can,perform,remote,search,except,that,while,the,referenced,index,like,a,remote,index,the,remote,cluster,name,has,not,been,defined,so,it,is,actually,a,local,index,and,access,should,be,denied;public,void,test,user,with,no,roles,cannot,perform,local,search,search,request,request,new,search,request,request,indices,index,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,request,id,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCannotPerformLocalSearch();1548593396;This test mimics {@link #testUserWithNoRolesCanPerformRemoteSearch()} except that_while the referenced index _looks_ like a remote index, the remote cluster name has not_been defined, so it is actually a local index and access should be denied;public void testUserWithNoRolesCannotPerformLocalSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("no_such_cluster:index")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(requestId, authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,can,perform,remote,search,except,that,while,the,referenced,index,like,a,remote,index,the,remote,cluster,name,has,not,been,defined,so,it,is,actually,a,local,index,and,access,should,be,denied;public,void,test,user,with,no,roles,cannot,perform,local,search,search,request,request,new,search,request,request,indices,index,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,request,id,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCannotPerformLocalSearch();1548789003;This test mimics {@link #testUserWithNoRolesCanPerformRemoteSearch()} except that_while the referenced index _looks_ like a remote index, the remote cluster name has not_been defined, so it is actually a local index and access should be denied;public void testUserWithNoRolesCannotPerformLocalSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("no_such_cluster:index")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(requestId, authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,can,perform,remote,search,except,that,while,the,referenced,index,like,a,remote,index,the,remote,cluster,name,has,not,been,defined,so,it,is,actually,a,local,index,and,access,should,be,denied;public,void,test,user,with,no,roles,cannot,perform,local,search,search,request,request,new,search,request,request,indices,index,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,request,id,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCannotPerformLocalSearch();1549294529;This test mimics {@link #testUserWithNoRolesCanPerformRemoteSearch()} except that_while the referenced index _looks_ like a remote index, the remote cluster name has not_been defined, so it is actually a local index and access should be denied;public void testUserWithNoRolesCannotPerformLocalSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("no_such_cluster:index")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(requestId, authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,can,perform,remote,search,except,that,while,the,referenced,index,like,a,remote,index,the,remote,cluster,name,has,not,been,defined,so,it,is,actually,a,local,index,and,access,should,be,denied;public,void,test,user,with,no,roles,cannot,perform,local,search,search,request,request,new,search,request,request,indices,index,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,request,id,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCanPerformMultiClusterSearch();1524684173;This test mimics {@link #testUserWithNoRolesCannotPerformLocalSearch()} but includes_both local and remote indices, including wildcards;public void testUserWithNoRolesCanPerformMultiClusterSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("local_index", "wildcard_*", "other_cluster:remote_index", "*:foo?")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_                () -> authorize(authentication, SearchAction.NAME, request),_                SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,cannot,perform,local,search,but,includes,both,local,and,remote,indices,including,wildcards;public,void,test,user,with,no,roles,can,perform,multi,cluster,search,search,request,request,new,search,request,request,indices,foo,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCanPerformMultiClusterSearch();1526449283;This test mimics {@link #testUserWithNoRolesCannotPerformLocalSearch()} but includes_both local and remote indices, including wildcards;public void testUserWithNoRolesCanPerformMultiClusterSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("local_index", "wildcard_*", "other_cluster:remote_index", "*:foo?")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_                () -> authorize(authentication, SearchAction.NAME, request),_                SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,cannot,perform,local,search,but,includes,both,local,and,remote,indices,including,wildcards;public,void,test,user,with,no,roles,can,perform,multi,cluster,search,search,request,request,new,search,request,request,indices,foo,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCanPerformMultiClusterSearch();1531179852;This test mimics {@link #testUserWithNoRolesCannotPerformLocalSearch()} but includes_both local and remote indices, including wildcards;public void testUserWithNoRolesCanPerformMultiClusterSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("local_index", "wildcard_*", "other_cluster:remote_index", "*:foo?")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_                () -> authorize(authentication, SearchAction.NAME, request),_                SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,cannot,perform,local,search,but,includes,both,local,and,remote,indices,including,wildcards;public,void,test,user,with,no,roles,can,perform,multi,cluster,search,search,request,request,new,search,request,request,indices,foo,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCanPerformMultiClusterSearch();1532456624;This test mimics {@link #testUserWithNoRolesCannotPerformLocalSearch()} but includes_both local and remote indices, including wildcards;public void testUserWithNoRolesCanPerformMultiClusterSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("local_index", "wildcard_*", "other_cluster:remote_index", "*:foo?")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,cannot,perform,local,search,but,includes,both,local,and,remote,indices,including,wildcards;public,void,test,user,with,no,roles,can,perform,multi,cluster,search,search,request,request,new,search,request,request,indices,foo,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCanPerformMultiClusterSearch();1533295538;This test mimics {@link #testUserWithNoRolesCannotPerformLocalSearch()} but includes_both local and remote indices, including wildcards;public void testUserWithNoRolesCanPerformMultiClusterSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("local_index", "wildcard_*", "other_cluster:remote_index", "*:foo?")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,cannot,perform,local,search,but,includes,both,local,and,remote,indices,including,wildcards;public,void,test,user,with,no,roles,can,perform,multi,cluster,search,search,request,request,new,search,request,request,indices,foo,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCanPerformMultiClusterSearch();1535552903;This test mimics {@link #testUserWithNoRolesCannotPerformLocalSearch()} but includes_both local and remote indices, including wildcards;public void testUserWithNoRolesCanPerformMultiClusterSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("local_index", "wildcard_*", "other_cluster:remote_index", "*:foo?")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,cannot,perform,local,search,but,includes,both,local,and,remote,indices,including,wildcards;public,void,test,user,with,no,roles,can,perform,multi,cluster,search,search,request,request,new,search,request,request,indices,foo,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCanPerformMultiClusterSearch();1536218260;This test mimics {@link #testUserWithNoRolesCannotPerformLocalSearch()} but includes_both local and remote indices, including wildcards;public void testUserWithNoRolesCanPerformMultiClusterSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("local_index", "wildcard_*", "other_cluster:remote_index", "*:foo?")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,cannot,perform,local,search,but,includes,both,local,and,remote,indices,including,wildcards;public,void,test,user,with,no,roles,can,perform,multi,cluster,search,search,request,request,new,search,request,request,indices,foo,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCanPerformMultiClusterSearch();1539615817;This test mimics {@link #testUserWithNoRolesCannotPerformLocalSearch()} but includes_both local and remote indices, including wildcards;public void testUserWithNoRolesCanPerformMultiClusterSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("local_index", "wildcard_*", "other_cluster:remote_index", "*:foo?")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,cannot,perform,local,search,but,includes,both,local,and,remote,indices,including,wildcards;public,void,test,user,with,no,roles,can,perform,multi,cluster,search,search,request,request,new,search,request,request,indices,foo,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCanPerformMultiClusterSearch();1540313026;This test mimics {@link #testUserWithNoRolesCannotPerformLocalSearch()} but includes_both local and remote indices, including wildcards;public void testUserWithNoRolesCanPerformMultiClusterSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("local_index", "wildcard_*", "other_cluster:remote_index", "*:foo?")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,cannot,perform,local,search,but,includes,both,local,and,remote,indices,including,wildcards;public,void,test,user,with,no,roles,can,perform,multi,cluster,search,search,request,request,new,search,request,request,indices,foo,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCanPerformMultiClusterSearch();1542240273;This test mimics {@link #testUserWithNoRolesCannotPerformLocalSearch()} but includes_both local and remote indices, including wildcards;public void testUserWithNoRolesCanPerformMultiClusterSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("local_index", "wildcard_*", "other_cluster:remote_index", "*:foo?")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,cannot,perform,local,search,but,includes,both,local,and,remote,indices,including,wildcards;public,void,test,user,with,no,roles,can,perform,multi,cluster,search,search,request,request,new,search,request,request,indices,foo,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCanPerformMultiClusterSearch();1543292387;This test mimics {@link #testUserWithNoRolesCannotPerformLocalSearch()} but includes_both local and remote indices, including wildcards;public void testUserWithNoRolesCanPerformMultiClusterSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("local_index", "wildcard_*", "other_cluster:remote_index", "*:foo?")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(requestId, authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,cannot,perform,local,search,but,includes,both,local,and,remote,indices,including,wildcards;public,void,test,user,with,no,roles,can,perform,multi,cluster,search,search,request,request,new,search,request,request,indices,foo,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,request,id,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCanPerformMultiClusterSearch();1548593396;This test mimics {@link #testUserWithNoRolesCannotPerformLocalSearch()} but includes_both local and remote indices, including wildcards;public void testUserWithNoRolesCanPerformMultiClusterSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("local_index", "wildcard_*", "other_cluster:remote_index", "*:foo?")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(requestId, authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,cannot,perform,local,search,but,includes,both,local,and,remote,indices,including,wildcards;public,void,test,user,with,no,roles,can,perform,multi,cluster,search,search,request,request,new,search,request,request,indices,foo,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,request,id,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCanPerformMultiClusterSearch();1548789003;This test mimics {@link #testUserWithNoRolesCannotPerformLocalSearch()} but includes_both local and remote indices, including wildcards;public void testUserWithNoRolesCanPerformMultiClusterSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("local_index", "wildcard_*", "other_cluster:remote_index", "*:foo?")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(requestId, authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,cannot,perform,local,search,but,includes,both,local,and,remote,indices,including,wildcards;public,void,test,user,with,no,roles,can,perform,multi,cluster,search,search,request,request,new,search,request,request,indices,foo,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,request,id,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCanPerformMultiClusterSearch();1549294529;This test mimics {@link #testUserWithNoRolesCannotPerformLocalSearch()} but includes_both local and remote indices, including wildcards;public void testUserWithNoRolesCanPerformMultiClusterSearch() {_        SearchRequest request = new SearchRequest()__        request.indices("local_index", "wildcard_*", "other_cluster:remote_index", "*:foo?")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(requestId, authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,cannot,perform,local,search,but,includes,both,local,and,remote,indices,including,wildcards;public,void,test,user,with,no,roles,can,perform,multi,cluster,search,search,request,request,new,search,request,request,indices,foo,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,request,id,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCanPerformMultiClusterSearch() throws IOException;1549336917;This test mimics {@link #testUserWithNoRolesCannotPerformLocalSearch()} but includes_both local and remote indices, including wildcards;public void testUserWithNoRolesCanPerformMultiClusterSearch() throws IOException {_        SearchRequest request = new SearchRequest()__        request.indices("local_index", "wildcard_*", "other_cluster:remote_index", "*:foo?")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(requestId, authentication, SearchAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,cannot,perform,local,search,but,includes,both,local,and,remote,indices,including,wildcards;public,void,test,user,with,no,roles,can,perform,multi,cluster,search,throws,ioexception,search,request,request,new,search,request,request,indices,foo,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,request,id,authentication,search,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCanPerformMultiClusterSearch() throws IOException;1549399169;This test mimics {@link #testUserWithNoRolesCannotPerformLocalSearch()} but includes_both local and remote indices, including wildcards;public void testUserWithNoRolesCanPerformMultiClusterSearch() throws IOException {_        SearchRequest request = new SearchRequest()__        request.indices("local_index", "wildcard_*", "other_cluster:remote_index", "*:foo?")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(eq(requestId), eq(authentication), eq(SearchAction.NAME), eq(request),_            authzInfoRoles(Role.EMPTY.names()))__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,cannot,perform,local,search,but,includes,both,local,and,remote,indices,including,wildcards;public,void,test,user,with,no,roles,can,perform,multi,cluster,search,throws,ioexception,search,request,request,new,search,request,request,indices,foo,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,eq,request,id,eq,authentication,eq,search,action,name,eq,request,authz,info,roles,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCanPerformMultiClusterSearch() throws IOException;1550348884;This test mimics {@link #testUserWithNoRolesCannotPerformLocalSearch()} but includes_both local and remote indices, including wildcards;public void testUserWithNoRolesCanPerformMultiClusterSearch() throws IOException {_        SearchRequest request = new SearchRequest()__        request.indices("local_index", "wildcard_*", "other_cluster:remote_index", "*:foo?")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(eq(requestId), eq(authentication), eq(SearchAction.NAME), eq(request),_            authzInfoRoles(Role.EMPTY.names()))__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,cannot,perform,local,search,but,includes,both,local,and,remote,indices,including,wildcards;public,void,test,user,with,no,roles,can,perform,multi,cluster,search,throws,ioexception,search,request,request,new,search,request,request,indices,foo,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,eq,request,id,eq,authentication,eq,search,action,name,eq,request,authz,info,roles,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testUserWithNoRolesCanPerformMultiClusterSearch() throws IOException;1550664347;This test mimics {@link #testUserWithNoRolesCannotPerformLocalSearch()} but includes_both local and remote indices, including wildcards;public void testUserWithNoRolesCanPerformMultiClusterSearch() throws IOException {_        SearchRequest request = new SearchRequest()__        request.indices("local_index", "wildcard_*", "other_cluster:remote_index", "*:foo?")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, SearchAction.NAME, request),_            SearchAction.NAME, "test user")__        verify(auditTrail).accessDenied(eq(requestId), eq(authentication), eq(SearchAction.NAME), eq(request),_            authzInfoRoles(Role.EMPTY.names()))__        verifyNoMoreInteractions(auditTrail)__    };this,test,mimics,link,test,user,with,no,roles,cannot,perform,local,search,but,includes,both,local,and,remote,indices,including,wildcards;public,void,test,user,with,no,roles,can,perform,multi,cluster,search,throws,ioexception,search,request,request,new,search,request,request,indices,foo,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,search,action,name,request,search,action,name,test,user,verify,audit,trail,access,denied,eq,request,id,eq,authentication,eq,search,action,name,eq,request,authz,info,roles,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() throws IOException;1549336917;Verifies that the behaviour tested in {@link #testUserWithNoRolesCanPerformRemoteSearch}_does not work for requests that are not remote-index-capable.;public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() throws IOException {_        DeleteIndexRequest request = new DeleteIndexRequest()__        request.indices("other_cluster:index1", "other_cluster:index2")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, DeleteIndexAction.NAME, request),_            DeleteIndexAction.NAME, "test user")__        verify(auditTrail).accessDenied(requestId, authentication, DeleteIndexAction.NAME, request, Role.EMPTY.names())__        verifyNoMoreInteractions(auditTrail)__    };verifies,that,the,behaviour,tested,in,link,test,user,with,no,roles,can,perform,remote,search,does,not,work,for,requests,that,are,not,remote,index,capable;public,void,test,remote,indices,only,work,with,applicable,request,types,throws,ioexception,delete,index,request,request,new,delete,index,request,request,indices,index1,index2,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,delete,index,action,name,request,delete,index,action,name,test,user,verify,audit,trail,access,denied,request,id,authentication,delete,index,action,name,request,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() throws IOException;1549399169;Verifies that the behaviour tested in {@link #testUserWithNoRolesCanPerformRemoteSearch}_does not work for requests that are not remote-index-capable.;public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() throws IOException {_        DeleteIndexRequest request = new DeleteIndexRequest()__        request.indices("other_cluster:index1", "other_cluster:index2")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, DeleteIndexAction.NAME, request),_            DeleteIndexAction.NAME, "test user")__        verify(auditTrail).accessDenied(eq(requestId), eq(authentication), eq(DeleteIndexAction.NAME), eq(request),_            authzInfoRoles(Role.EMPTY.names()))__        verifyNoMoreInteractions(auditTrail)__    };verifies,that,the,behaviour,tested,in,link,test,user,with,no,roles,can,perform,remote,search,does,not,work,for,requests,that,are,not,remote,index,capable;public,void,test,remote,indices,only,work,with,applicable,request,types,throws,ioexception,delete,index,request,request,new,delete,index,request,request,indices,index1,index2,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,delete,index,action,name,request,delete,index,action,name,test,user,verify,audit,trail,access,denied,eq,request,id,eq,authentication,eq,delete,index,action,name,eq,request,authz,info,roles,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() throws IOException;1550348884;Verifies that the behaviour tested in {@link #testUserWithNoRolesCanPerformRemoteSearch}_does not work for requests that are not remote-index-capable.;public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() throws IOException {_        DeleteIndexRequest request = new DeleteIndexRequest()__        request.indices("other_cluster:index1", "other_cluster:index2")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, DeleteIndexAction.NAME, request),_            DeleteIndexAction.NAME, "test user")__        verify(auditTrail).accessDenied(eq(requestId), eq(authentication), eq(DeleteIndexAction.NAME), eq(request),_            authzInfoRoles(Role.EMPTY.names()))__        verifyNoMoreInteractions(auditTrail)__    };verifies,that,the,behaviour,tested,in,link,test,user,with,no,roles,can,perform,remote,search,does,not,work,for,requests,that,are,not,remote,index,capable;public,void,test,remote,indices,only,work,with,applicable,request,types,throws,ioexception,delete,index,request,request,new,delete,index,request,request,indices,index1,index2,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,delete,index,action,name,request,delete,index,action,name,test,user,verify,audit,trail,access,denied,eq,request,id,eq,authentication,eq,delete,index,action,name,eq,request,authz,info,roles,role,empty,names,verify,no,more,interactions,audit,trail
AuthorizationServiceTests -> public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() throws IOException;1550664347;Verifies that the behaviour tested in {@link #testUserWithNoRolesCanPerformRemoteSearch}_does not work for requests that are not remote-index-capable.;public void testRemoteIndicesOnlyWorkWithApplicableRequestTypes() throws IOException {_        DeleteIndexRequest request = new DeleteIndexRequest()__        request.indices("other_cluster:index1", "other_cluster:index2")__        final Authentication authentication = createAuthentication(new User("test user"))__        mockEmptyMetaData()__        final String requestId = AuditUtil.getOrGenerateRequestId(threadContext)__        assertThrowsAuthorizationException(_            () -> authorize(authentication, DeleteIndexAction.NAME, request),_            DeleteIndexAction.NAME, "test user")__        verify(auditTrail).accessDenied(eq(requestId), eq(authentication), eq(DeleteIndexAction.NAME), eq(request),_            authzInfoRoles(Role.EMPTY.names()))__        verifyNoMoreInteractions(auditTrail)__    };verifies,that,the,behaviour,tested,in,link,test,user,with,no,roles,can,perform,remote,search,does,not,work,for,requests,that,are,not,remote,index,capable;public,void,test,remote,indices,only,work,with,applicable,request,types,throws,ioexception,delete,index,request,request,new,delete,index,request,request,indices,index1,index2,final,authentication,authentication,create,authentication,new,user,test,user,mock,empty,meta,data,final,string,request,id,audit,util,get,or,generate,request,id,thread,context,assert,throws,authorization,exception,authorize,authentication,delete,index,action,name,request,delete,index,action,name,test,user,verify,audit,trail,access,denied,eq,request,id,eq,authentication,eq,delete,index,action,name,eq,request,authz,info,roles,role,empty,names,verify,no,more,interactions,audit,trail
