# id;timestamp;commentText;codeText;commentWords;codeWords
SearchGroupsResolverInMemoryTests -> public void testSearchTimeoutIsFailure() throws Exception;1524684173;Tests that a client-side timeout in the asynchronous LDAP SDK is treated as a failure, rather_than simply returning no results.;public void testSearchTimeoutIsFailure() throws Exception {_        ldapServers[0].setProcessingDelayMillis(100)___        final LDAPConnectionOptions options = new LDAPConnectionOptions()__        options.setConnectTimeoutMillis(500)__        options.setResponseTimeoutMillis(5)__        connect(options)___        final Settings settings = Settings.builder()_                .put("group_search.base_dn", "ou=groups,o=sevenSeas")_                .put("group_search.scope", LdapSearchScope.SUB_TREE)_                .build()__        final SearchGroupsResolver resolver = new SearchGroupsResolver(settings)__        final PlainActionFuture<List<String>> future = new PlainActionFuture<>()__        resolver.resolve(connection, WILLIAM_BUSH, TimeValue.timeValueSeconds(30), logger, null, future)___        final ExecutionException exception = expectThrows(ExecutionException.class, future::get)__        final Throwable cause = exception.getCause()__        assertThat(cause, instanceOf(LDAPException.class))__        assertThat(((LDAPException) cause).getResultCode(), is(ResultCode.TIMEOUT))__    };tests,that,a,client,side,timeout,in,the,asynchronous,ldap,sdk,is,treated,as,a,failure,rather,than,simply,returning,no,results;public,void,test,search,timeout,is,failure,throws,exception,ldap,servers,0,set,processing,delay,millis,100,final,ldapconnection,options,options,new,ldapconnection,options,options,set,connect,timeout,millis,500,options,set,response,timeout,millis,5,connect,options,final,settings,settings,settings,builder,put,ou,groups,o,seven,seas,put,scope,ldap,search,scope,build,final,search,groups,resolver,resolver,new,search,groups,resolver,settings,final,plain,action,future,list,string,future,new,plain,action,future,resolver,resolve,connection,time,value,time,value,seconds,30,logger,null,future,final,execution,exception,exception,expect,throws,execution,exception,class,future,get,final,throwable,cause,exception,get,cause,assert,that,cause,instance,of,ldapexception,class,assert,that,ldapexception,cause,get,result,code,is,result,code,timeout
SearchGroupsResolverInMemoryTests -> public void testSearchTimeoutIsFailure() throws Exception;1537806831;Tests that a client-side timeout in the asynchronous LDAP SDK is treated as a failure, rather_than simply returning no results.;public void testSearchTimeoutIsFailure() throws Exception {_        ldapServers[0].setProcessingDelayMillis(500)___        final LDAPConnectionOptions options = new LDAPConnectionOptions()__        options.setConnectTimeoutMillis(1500)__        options.setResponseTimeoutMillis(5)__        connect(options)___        final Settings settings = Settings.builder()_                .put("group_search.base_dn", "ou=groups,o=sevenSeas")_                .put("group_search.scope", LdapSearchScope.SUB_TREE)_                .build()__        final SearchGroupsResolver resolver = new SearchGroupsResolver(settings)__        final PlainActionFuture<List<String>> future = new PlainActionFuture<>()__        resolver.resolve(connection, WILLIAM_BUSH, TimeValue.timeValueSeconds(30), logger, null, future)___        final ExecutionException exception = expectThrows(ExecutionException.class, future::get)__        final Throwable cause = exception.getCause()__        assertThat(cause, instanceOf(LDAPException.class))__        assertThat(((LDAPException) cause).getResultCode(), is(ResultCode.TIMEOUT))__    };tests,that,a,client,side,timeout,in,the,asynchronous,ldap,sdk,is,treated,as,a,failure,rather,than,simply,returning,no,results;public,void,test,search,timeout,is,failure,throws,exception,ldap,servers,0,set,processing,delay,millis,500,final,ldapconnection,options,options,new,ldapconnection,options,options,set,connect,timeout,millis,1500,options,set,response,timeout,millis,5,connect,options,final,settings,settings,settings,builder,put,ou,groups,o,seven,seas,put,scope,ldap,search,scope,build,final,search,groups,resolver,resolver,new,search,groups,resolver,settings,final,plain,action,future,list,string,future,new,plain,action,future,resolver,resolve,connection,time,value,time,value,seconds,30,logger,null,future,final,execution,exception,exception,expect,throws,execution,exception,class,future,get,final,throwable,cause,exception,get,cause,assert,that,cause,instance,of,ldapexception,class,assert,that,ldapexception,cause,get,result,code,is,result,code,timeout
SearchGroupsResolverInMemoryTests -> public void testSearchTimeoutIsFailure() throws Exception;1541476610;Tests that a client-side timeout in the asynchronous LDAP SDK is treated as a failure, rather_than simply returning no results.;public void testSearchTimeoutIsFailure() throws Exception {_        ldapServers[0].setProcessingDelayMillis(500)___        final LDAPConnectionOptions options = new LDAPConnectionOptions()__        options.setConnectTimeoutMillis(1500)__        options.setResponseTimeoutMillis(5)__        connect(options)___        final Settings settings = Settings.builder()_                .put(getFullSettingKey(REALM_IDENTIFIER, SearchGroupsResolverSettings.BASE_DN), "ou=groups,o=sevenSeas")_                .put(getFullSettingKey(REALM_IDENTIFIER, SearchGroupsResolverSettings.SCOPE), LdapSearchScope.SUB_TREE)_                .build()__        final SearchGroupsResolver resolver = new SearchGroupsResolver(getConfig(settings))__        final PlainActionFuture<List<String>> future = new PlainActionFuture<>()__        resolver.resolve(connection, WILLIAM_BUSH, TimeValue.timeValueSeconds(30), logger, null, future)___        final ExecutionException exception = expectThrows(ExecutionException.class, future::get)__        final Throwable cause = exception.getCause()__        assertThat(cause, instanceOf(LDAPException.class))__        assertThat(((LDAPException) cause).getResultCode(), is(ResultCode.TIMEOUT))__    };tests,that,a,client,side,timeout,in,the,asynchronous,ldap,sdk,is,treated,as,a,failure,rather,than,simply,returning,no,results;public,void,test,search,timeout,is,failure,throws,exception,ldap,servers,0,set,processing,delay,millis,500,final,ldapconnection,options,options,new,ldapconnection,options,options,set,connect,timeout,millis,1500,options,set,response,timeout,millis,5,connect,options,final,settings,settings,settings,builder,put,get,full,setting,key,search,groups,resolver,settings,ou,groups,o,seven,seas,put,get,full,setting,key,search,groups,resolver,settings,scope,ldap,search,scope,build,final,search,groups,resolver,resolver,new,search,groups,resolver,get,config,settings,final,plain,action,future,list,string,future,new,plain,action,future,resolver,resolve,connection,time,value,time,value,seconds,30,logger,null,future,final,execution,exception,exception,expect,throws,execution,exception,class,future,get,final,throwable,cause,exception,get,cause,assert,that,cause,instance,of,ldapexception,class,assert,that,ldapexception,cause,get,result,code,is,result,code,timeout
SearchGroupsResolverInMemoryTests -> public void testResolveWithDefaultUserAttribute() throws Exception;1524684173;Tests searching for groups when the "user_attribute" field is not set;public void testResolveWithDefaultUserAttribute() throws Exception {_        connect(new LDAPConnectionOptions())___        Settings settings = Settings.builder()_                .put("group_search.base_dn", "ou=groups,o=sevenSeas")_                .put("group_search.scope", LdapSearchScope.SUB_TREE)_                .build()___        final List<String> groups = resolveGroups(settings, WILLIAM_BUSH)__        assertThat(groups, iterableWithSize(1))__        assertThat(groups.get(0), containsString("HMS Lydia"))__    };tests,searching,for,groups,when,the,field,is,not,set;public,void,test,resolve,with,default,user,attribute,throws,exception,connect,new,ldapconnection,options,settings,settings,settings,builder,put,ou,groups,o,seven,seas,put,scope,ldap,search,scope,build,final,list,string,groups,resolve,groups,settings,assert,that,groups,iterable,with,size,1,assert,that,groups,get,0,contains,string,hms,lydia
SearchGroupsResolverInMemoryTests -> public void testResolveWithDefaultUserAttribute() throws Exception;1537806831;Tests searching for groups when the "user_attribute" field is not set;public void testResolveWithDefaultUserAttribute() throws Exception {_        connect(new LDAPConnectionOptions())___        Settings settings = Settings.builder()_                .put("group_search.base_dn", "ou=groups,o=sevenSeas")_                .put("group_search.scope", LdapSearchScope.SUB_TREE)_                .build()___        final List<String> groups = resolveGroups(settings, WILLIAM_BUSH)__        assertThat(groups, iterableWithSize(1))__        assertThat(groups.get(0), containsString("HMS Lydia"))__    };tests,searching,for,groups,when,the,field,is,not,set;public,void,test,resolve,with,default,user,attribute,throws,exception,connect,new,ldapconnection,options,settings,settings,settings,builder,put,ou,groups,o,seven,seas,put,scope,ldap,search,scope,build,final,list,string,groups,resolve,groups,settings,assert,that,groups,iterable,with,size,1,assert,that,groups,get,0,contains,string,hms,lydia
SearchGroupsResolverInMemoryTests -> public void testResolveWithDefaultUserAttribute() throws Exception;1541476610;Tests searching for groups when the "user_attribute" field is not set;public void testResolveWithDefaultUserAttribute() throws Exception {_        connect(new LDAPConnectionOptions())___        Settings settings = Settings.builder()_                .put(getFullSettingKey(REALM_IDENTIFIER, SearchGroupsResolverSettings.BASE_DN), "ou=groups,o=sevenSeas")_                .put(getFullSettingKey(REALM_IDENTIFIER, SearchGroupsResolverSettings.SCOPE), LdapSearchScope.SUB_TREE)_                .build()___        final List<String> groups = resolveGroups(settings, WILLIAM_BUSH)__        assertThat(groups, iterableWithSize(1))__        assertThat(groups.get(0), containsString("HMS Lydia"))__    };tests,searching,for,groups,when,the,field,is,not,set;public,void,test,resolve,with,default,user,attribute,throws,exception,connect,new,ldapconnection,options,settings,settings,settings,builder,put,get,full,setting,key,search,groups,resolver,settings,ou,groups,o,seven,seas,put,get,full,setting,key,search,groups,resolver,settings,scope,ldap,search,scope,build,final,list,string,groups,resolve,groups,settings,assert,that,groups,iterable,with,size,1,assert,that,groups,get,0,contains,string,hms,lydia
SearchGroupsResolverInMemoryTests -> public void testResolveWithExplicitDnAttribute() throws Exception;1524684173;Tests searching for groups when the "user_attribute" field is set to "dn" (which is special);public void testResolveWithExplicitDnAttribute() throws Exception {_        connect(new LDAPConnectionOptions())___        Settings settings = Settings.builder()_                .put("group_search.base_dn", "ou=groups,o=sevenSeas")_                .put("group_search.user_attribute", "dn")_                .build()___        final List<String> groups = resolveGroups(settings, WILLIAM_BUSH)__        assertThat(groups, iterableWithSize(1))__        assertThat(groups.get(0), containsString("HMS Lydia"))__    };tests,searching,for,groups,when,the,field,is,set,to,dn,which,is,special;public,void,test,resolve,with,explicit,dn,attribute,throws,exception,connect,new,ldapconnection,options,settings,settings,settings,builder,put,ou,groups,o,seven,seas,put,dn,build,final,list,string,groups,resolve,groups,settings,assert,that,groups,iterable,with,size,1,assert,that,groups,get,0,contains,string,hms,lydia
SearchGroupsResolverInMemoryTests -> public void testResolveWithExplicitDnAttribute() throws Exception;1537806831;Tests searching for groups when the "user_attribute" field is set to "dn" (which is special);public void testResolveWithExplicitDnAttribute() throws Exception {_        connect(new LDAPConnectionOptions())___        Settings settings = Settings.builder()_                .put("group_search.base_dn", "ou=groups,o=sevenSeas")_                .put("group_search.user_attribute", "dn")_                .build()___        final List<String> groups = resolveGroups(settings, WILLIAM_BUSH)__        assertThat(groups, iterableWithSize(1))__        assertThat(groups.get(0), containsString("HMS Lydia"))__    };tests,searching,for,groups,when,the,field,is,set,to,dn,which,is,special;public,void,test,resolve,with,explicit,dn,attribute,throws,exception,connect,new,ldapconnection,options,settings,settings,settings,builder,put,ou,groups,o,seven,seas,put,dn,build,final,list,string,groups,resolve,groups,settings,assert,that,groups,iterable,with,size,1,assert,that,groups,get,0,contains,string,hms,lydia
SearchGroupsResolverInMemoryTests -> public void testResolveWithExplicitDnAttribute() throws Exception;1541476610;Tests searching for groups when the "user_attribute" field is set to "dn" (which is special);public void testResolveWithExplicitDnAttribute() throws Exception {_        connect(new LDAPConnectionOptions())___        Settings settings = Settings.builder()_                .put(getFullSettingKey(REALM_IDENTIFIER, SearchGroupsResolverSettings.BASE_DN), "ou=groups,o=sevenSeas")_                .put(getFullSettingKey(REALM_IDENTIFIER.getName(), SearchGroupsResolverSettings.USER_ATTRIBUTE), "dn")_                .build()___        final List<String> groups = resolveGroups(settings, WILLIAM_BUSH)__        assertThat(groups, iterableWithSize(1))__        assertThat(groups.get(0), containsString("HMS Lydia"))__    };tests,searching,for,groups,when,the,field,is,set,to,dn,which,is,special;public,void,test,resolve,with,explicit,dn,attribute,throws,exception,connect,new,ldapconnection,options,settings,settings,settings,builder,put,get,full,setting,key,search,groups,resolver,settings,ou,groups,o,seven,seas,put,get,full,setting,key,get,name,search,groups,resolver,settings,dn,build,final,list,string,groups,resolve,groups,settings,assert,that,groups,iterable,with,size,1,assert,that,groups,get,0,contains,string,hms,lydia
SearchGroupsResolverInMemoryTests -> public void testResolveWithMissingAttribute() throws Exception;1524684173;Tests searching for groups when the "user_attribute" field is set to a missing value;public void testResolveWithMissingAttribute() throws Exception {_        connect(new LDAPConnectionOptions())___        Settings settings = Settings.builder()_                .put("group_search.base_dn", "ou=groups,o=sevenSeas")_                .put("group_search.user_attribute", "no-such-attribute")_                .build()___        final List<String> groups = resolveGroups(settings, WILLIAM_BUSH)__        assertThat(groups, iterableWithSize(0))__    };tests,searching,for,groups,when,the,field,is,set,to,a,missing,value;public,void,test,resolve,with,missing,attribute,throws,exception,connect,new,ldapconnection,options,settings,settings,settings,builder,put,ou,groups,o,seven,seas,put,no,such,attribute,build,final,list,string,groups,resolve,groups,settings,assert,that,groups,iterable,with,size,0
SearchGroupsResolverInMemoryTests -> public void testResolveWithMissingAttribute() throws Exception;1537806831;Tests searching for groups when the "user_attribute" field is set to a missing value;public void testResolveWithMissingAttribute() throws Exception {_        connect(new LDAPConnectionOptions())___        Settings settings = Settings.builder()_                .put("group_search.base_dn", "ou=groups,o=sevenSeas")_                .put("group_search.user_attribute", "no-such-attribute")_                .build()___        final List<String> groups = resolveGroups(settings, WILLIAM_BUSH)__        assertThat(groups, iterableWithSize(0))__    };tests,searching,for,groups,when,the,field,is,set,to,a,missing,value;public,void,test,resolve,with,missing,attribute,throws,exception,connect,new,ldapconnection,options,settings,settings,settings,builder,put,ou,groups,o,seven,seas,put,no,such,attribute,build,final,list,string,groups,resolve,groups,settings,assert,that,groups,iterable,with,size,0
SearchGroupsResolverInMemoryTests -> public void testResolveWithMissingAttribute() throws Exception;1541476610;Tests searching for groups when the "user_attribute" field is set to a missing value;public void testResolveWithMissingAttribute() throws Exception {_        connect(new LDAPConnectionOptions())___        Settings settings = Settings.builder()_                .put(getFullSettingKey(REALM_IDENTIFIER, SearchGroupsResolverSettings.BASE_DN), "ou=groups,o=sevenSeas")_                .put(getFullSettingKey(REALM_IDENTIFIER.getName(), SearchGroupsResolverSettings.USER_ATTRIBUTE), "no-such-attribute")_                .build()___        final List<String> groups = resolveGroups(settings, WILLIAM_BUSH)__        assertThat(groups, iterableWithSize(0))__    };tests,searching,for,groups,when,the,field,is,set,to,a,missing,value;public,void,test,resolve,with,missing,attribute,throws,exception,connect,new,ldapconnection,options,settings,settings,settings,builder,put,get,full,setting,key,search,groups,resolver,settings,ou,groups,o,seven,seas,put,get,full,setting,key,get,name,search,groups,resolver,settings,no,such,attribute,build,final,list,string,groups,resolve,groups,settings,assert,that,groups,iterable,with,size,0
