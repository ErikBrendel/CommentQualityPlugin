commented;modifiers;parameterAmount;loc;comment;code
false;private;1;3;;private SecurityIndexManager.State dummyState(ClusterHealthStatus indexStatus) {     return new SecurityIndexManager.State(true, true, true, true, null, concreteSecurityIndexName, indexStatus). }
false;;0;4;;@Override void clearCache() {     numInvalidation.incrementAndGet(). }
false;public;0;47;;public void testCacheClearOnIndexHealthChange() {     final ThreadPool threadPool = mock(ThreadPool.class).     final ThreadContext threadContext = new ThreadContext(Settings.EMPTY).     when(threadPool.getThreadContext()).thenReturn(threadContext).     final AtomicInteger numInvalidation = new AtomicInteger(0).     int expectedInvalidation = 0.     Settings settings = Settings.builder().put("path.home", createTempDir()).build().     RealmConfig.RealmIdentifier realmId = new RealmConfig.RealmIdentifier("native", "native").     RealmConfig config = new RealmConfig(realmId, settings, TestEnvironment.newEnvironment(settings), new ThreadContext(settings)).     final NativeRealm nativeRealm = new NativeRealm(config, mock(NativeUsersStore.class), threadPool) {          @Override         void clearCache() {             numInvalidation.incrementAndGet().         }     }.     // existing to no longer present     SecurityIndexManager.State previousState = dummyState(randomFrom(ClusterHealthStatus.GREEN, ClusterHealthStatus.YELLOW)).     SecurityIndexManager.State currentState = dummyState(null).     nativeRealm.onSecurityIndexStateChange(previousState, currentState).     assertEquals(++expectedInvalidation, numInvalidation.get()).     // doesn't exist to exists     previousState = dummyState(null).     currentState = dummyState(randomFrom(ClusterHealthStatus.GREEN, ClusterHealthStatus.YELLOW)).     nativeRealm.onSecurityIndexStateChange(previousState, currentState).     assertEquals(++expectedInvalidation, numInvalidation.get()).     // green or yellow to red     previousState = dummyState(randomFrom(ClusterHealthStatus.GREEN, ClusterHealthStatus.YELLOW)).     currentState = dummyState(ClusterHealthStatus.RED).     nativeRealm.onSecurityIndexStateChange(previousState, currentState).     assertEquals(expectedInvalidation, numInvalidation.get()).     // red to non red     previousState = dummyState(ClusterHealthStatus.RED).     currentState = dummyState(randomFrom(ClusterHealthStatus.GREEN, ClusterHealthStatus.YELLOW)).     nativeRealm.onSecurityIndexStateChange(previousState, currentState).     assertEquals(++expectedInvalidation, numInvalidation.get()).     // green to yellow or yellow to green     previousState = dummyState(randomFrom(ClusterHealthStatus.GREEN, ClusterHealthStatus.YELLOW)).     currentState = dummyState(previousState.indexStatus == ClusterHealthStatus.GREEN ? ClusterHealthStatus.YELLOW : ClusterHealthStatus.GREEN).     nativeRealm.onSecurityIndexStateChange(previousState, currentState).     assertEquals(expectedInvalidation, numInvalidation.get()). }
