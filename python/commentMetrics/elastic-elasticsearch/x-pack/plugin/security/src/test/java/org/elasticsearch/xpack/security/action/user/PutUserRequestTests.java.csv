commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;public void testValidateReturnsNullForCorrectData() throws Exception {     final PutUserRequest request = new PutUserRequest().     request.username("foo").     request.roles("bar").     request.metadata(Collections.singletonMap("created", new Date())).     final ActionRequestValidationException validation = request.validate().     assertThat(validation, is(nullValue())). }
false;public;0;9;;public void testValidateRejectsNullUserName() throws Exception {     final PutUserRequest request = new PutUserRequest().     request.username(null).     request.roles("bar").     final ActionRequestValidationException validation = request.validate().     assertThat(validation, is(notNullValue())).     assertThat(validation.validationErrors(), contains(is("user is missing"))).     assertThat(validation.validationErrors().size(), is(1)). }
false;public;0;10;;public void testValidateRejectsMetaDataWithLeadingUnderscore() throws Exception {     final PutUserRequest request = new PutUserRequest().     request.username("foo").     request.roles("bar").     request.metadata(Collections.singletonMap("_created", new Date())).     final ActionRequestValidationException validation = request.validate().     assertThat(validation, is(notNullValue())).     assertThat(validation.validationErrors(), contains(containsString("metadata keys"))).     assertThat(validation.validationErrors().size(), is(1)). }
