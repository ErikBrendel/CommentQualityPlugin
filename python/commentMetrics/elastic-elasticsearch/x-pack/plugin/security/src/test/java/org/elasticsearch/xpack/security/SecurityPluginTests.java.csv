commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected boolean addMockHttpTransport() {     // enable http     return false. }
false;public;0;19;;public void testThatPluginIsLoaded() throws IOException {     try {         logger.info("executing unauthorized request to /_xpack info").         getRestClient().performRequest(new Request("GET", "/_xpack")).         fail("request should have failed").     } catch (ResponseException e) {         assertThat(e.getResponse().getStatusLine().getStatusCode(), is(UNAUTHORIZED.getStatus())).     }     logger.info("executing authorized request to /_xpack infos").     Request request = new Request("GET", "/_xpack").     RequestOptions.Builder options = request.getOptions().toBuilder().     options.addHeader("Authorization", basicAuthHeaderValue(SecuritySettingsSource.TEST_USER_NAME, new SecureString(SecuritySettingsSourceField.TEST_PASSWORD.toCharArray()))).     request.setOptions(options).     Response response = getRestClient().performRequest(request).     assertThat(response.getStatusLine().getStatusCode(), is(OK.getStatus())). }
