# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractPrivilegeTestCase -> protected void assertBodyHasAccessIsDenied(String user, String method, String uri, String body,                                                Map<String, String> params) throws IOException;1524684173;Like {@code assertAcessIsDenied}, but for _bulk requests since the entire_request will not be failed, just the individual ones;protected void assertBodyHasAccessIsDenied(String user, String method, String uri, String body,_                                               Map<String, String> params) throws IOException {_        Response resp = getRestClient().performRequest(method, uri, params, entityOrNull(body),_                new BasicHeader(UsernamePasswordToken.BASIC_AUTH_HEADER,_                        UsernamePasswordToken.basicAuthHeaderValue(user, new SecureString("passwd".toCharArray()))))__        StatusLine statusLine = resp.getStatusLine()__        assertThat(statusLine.getStatusCode(), is(200))__        HttpEntity bodyEntity = resp.getEntity()__        String bodyStr = EntityUtils.toString(bodyEntity)__        assertThat(bodyStr, containsString("unauthorized for user [" + user + "]"))__    };like,code,assert,acess,is,denied,but,for,requests,since,the,entire,request,will,not,be,failed,just,the,individual,ones;protected,void,assert,body,has,access,is,denied,string,user,string,method,string,uri,string,body,map,string,string,params,throws,ioexception,response,resp,get,rest,client,perform,request,method,uri,params,entity,or,null,body,new,basic,header,username,password,token,username,password,token,basic,auth,header,value,user,new,secure,string,passwd,to,char,array,status,line,status,line,resp,get,status,line,assert,that,status,line,get,status,code,is,200,http,entity,body,entity,resp,get,entity,string,body,str,entity,utils,to,string,body,entity,assert,that,body,str,contains,string,unauthorized,for,user,user
AbstractPrivilegeTestCase -> protected void assertBodyHasAccessIsDenied(String user, String method, String uri, String body,                                                Map<String, String> params) throws IOException;1531179852;Like {@code assertAcessIsDenied}, but for _bulk requests since the entire_request will not be failed, just the individual ones;protected void assertBodyHasAccessIsDenied(String user, String method, String uri, String body,_                                               Map<String, String> params) throws IOException {_        Response resp = getRestClient().performRequest(method, uri, params, entityOrNull(body),_                new BasicHeader(UsernamePasswordToken.BASIC_AUTH_HEADER,_                        UsernamePasswordToken.basicAuthHeaderValue(user, new SecureString("passwd".toCharArray()))))__        StatusLine statusLine = resp.getStatusLine()__        assertThat(statusLine.getStatusCode(), is(200))__        HttpEntity bodyEntity = resp.getEntity()__        String bodyStr = EntityUtils.toString(bodyEntity)__        assertThat(bodyStr, containsString("unauthorized for user [" + user + "]"))__    };like,code,assert,acess,is,denied,but,for,requests,since,the,entire,request,will,not,be,failed,just,the,individual,ones;protected,void,assert,body,has,access,is,denied,string,user,string,method,string,uri,string,body,map,string,string,params,throws,ioexception,response,resp,get,rest,client,perform,request,method,uri,params,entity,or,null,body,new,basic,header,username,password,token,username,password,token,basic,auth,header,value,user,new,secure,string,passwd,to,char,array,status,line,status,line,resp,get,status,line,assert,that,status,line,get,status,code,is,200,http,entity,body,entity,resp,get,entity,string,body,str,entity,utils,to,string,body,entity,assert,that,body,str,contains,string,unauthorized,for,user,user
