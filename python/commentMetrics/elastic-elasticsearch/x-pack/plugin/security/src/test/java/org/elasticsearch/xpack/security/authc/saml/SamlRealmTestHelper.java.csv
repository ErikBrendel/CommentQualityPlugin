commented;modifiers;parameterAmount;loc;comment;code
false;public,static;2;14;;public static SamlRealm buildRealm(RealmConfig realmConfig, @Nullable X509Credential credential) throws Exception {     EntityDescriptor idpDescriptor = SamlUtils.buildObject(EntityDescriptor.class, EntityDescriptor.DEFAULT_ELEMENT_NAME).     final IDPSSODescriptor role = SamlUtils.buildObject(IDPSSODescriptor.class, IDPSSODescriptor.DEFAULT_ELEMENT_NAME).     final SingleLogoutService slo = SamlUtils.buildObject(SingleLogoutService.class, SingleLogoutService.DEFAULT_ELEMENT_NAME).     idpDescriptor.getRoleDescriptors().add(role).     role.getSingleLogoutServices().add(slo).     slo.setBinding(SAMLConstants.SAML2_REDIRECT_BINDING_URI).     slo.setLocation(IDP_LOGOUT_URL).     final SpConfiguration spConfiguration = new SpConfiguration(SP_ENTITY_ID, SP_ACS_URL, SP_LOGOUT_URL, new SigningConfiguration(Collections.singleton("*"), credential), Arrays.asList(credential), Collections.emptyList()).     return new SamlRealm(realmConfig, mock(UserRoleMapper.class), mock(SamlAuthenticator.class), mock(SamlLogoutRequestHandler.class), () -> idpDescriptor, spConfiguration). }
false;public,static;2;10;;public static void writeIdpMetaData(Path path, String idpEntityId) throws IOException {     Files.write(path, Arrays.asList("<?xml version=\"1.0\"?>", "<md:EntityDescriptor xmlns:md='urn:oasis:names:tc:SAML:2.0:metadata' entityID='" + idpEntityId + "'>", "<md:IDPSSODescriptor protocolSupportEnumeration='urn:oasis:names:tc:SAML:2.0:protocol'>", "<md:SingleSignOnService Binding='urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect' Location='http://localhost/sso/' />", "</md:IDPSSODescriptor>", "</md:EntityDescriptor>")). }
