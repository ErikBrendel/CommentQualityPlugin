commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;8;;@Override protected String configUsers() {     final String usersPasswdHashed = new String(getFastStoredHashAlgoForTests().hash(new SecureString("test123".toCharArray()))).     return super.configUsers() + "analyze_indices:" + usersPasswdHashed + "\n" + "analyze_cluster:" + usersPasswdHashed + "\n". }
false;protected;0;6;;@Override protected String configUsersRoles() {     return super.configUsersRoles() + "analyze_indices:analyze_indices\n" + "analyze_cluster:analyze_cluster\n". }
false;protected;0;12;;@Override protected String configRoles() {     return super.configRoles() + "\n" + // role that has analyze indices privileges only     "analyze_indices:\n" + "  indices:\n" + "    - names: 'test_*'\n" + "      privileges: [ 'indices:admin/analyze' ]\n" + "analyze_cluster:\n" + "  cluster:\n" + "    - cluster:admin/analyze\n". }
false;public;0;24;;public void testAnalyzeWithIndices() {     // this test tries to execute different analyze api variants from a user that has analyze privileges only on a specific index     // namespace     createIndex("test_1").     ensureGreen().     // ok: user has permissions for analyze on test_*     SecureString passwd = new SecureString("test123".toCharArray()).     client().filterWithHeader(Collections.singletonMap(BASIC_AUTH_HEADER, basicAuthHeaderValue("analyze_indices", passwd))).admin().indices().prepareAnalyze("this is my text").setIndex("test_1").setAnalyzer("standard").get().     // fails: user doesn't have permissions for analyze on index non_authorized     assertThrowsAuthorizationException(client().filterWithHeader(Collections.singletonMap(BASIC_AUTH_HEADER, basicAuthHeaderValue("analyze_indices", passwd))).admin().indices().prepareAnalyze("this is my text").setIndex("non_authorized").setAnalyzer("standard")::get, AnalyzeAction.NAME, "analyze_indices").     // fails: user doesn't have permissions for cluster level analyze     assertThrowsAuthorizationException(client().filterWithHeader(Collections.singletonMap(BASIC_AUTH_HEADER, basicAuthHeaderValue("analyze_indices", passwd))).admin().indices().prepareAnalyze("this is my text").setAnalyzer("standard")::get, "cluster:admin/analyze", "analyze_indices"). }
false;public;0;13;;public void testAnalyzeWithoutIndices() {     // this test tries to execute different analyze api variants from a user that has analyze privileges only at cluster level     SecureString passwd = new SecureString("test123".toCharArray()).     // fails: user doesn't have permissions for analyze on index test_1     assertThrowsAuthorizationException(client().filterWithHeader(Collections.singletonMap(BASIC_AUTH_HEADER, basicAuthHeaderValue("analyze_cluster", passwd))).admin().indices().prepareAnalyze("this is my text").setIndex("test_1").setAnalyzer("standard")::get, AnalyzeAction.NAME, "analyze_cluster").     client().filterWithHeader(Collections.singletonMap(BASIC_AUTH_HEADER, basicAuthHeaderValue("analyze_cluster", passwd))).admin().indices().prepareAnalyze("this is my text").setAnalyzer("standard").get(). }
