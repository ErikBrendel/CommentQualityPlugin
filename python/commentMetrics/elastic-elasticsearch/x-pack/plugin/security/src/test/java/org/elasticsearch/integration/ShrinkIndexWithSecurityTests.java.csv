commented;modifiers;parameterAmount;loc;comment;code
false;protected,final;0;4;;@Override protected final boolean ignoreExternalCluster() {     return true. }
false;protected;0;4;;@Override protected int minimumNumberOfShards() {     return 2. }
false;public;0;30;;public void testShrinkIndex() throws Exception {     final int randomNumberOfDocs = scaledRandomIntBetween(2, 12).     for (int i = 0. i < randomNumberOfDocs. i++) {         client().prepareIndex("bigindex", "type").setSource("foo", "bar").get().     }     ImmutableOpenMap<String, DiscoveryNode> dataNodes = client().admin().cluster().prepareState().get().getState().nodes().getDataNodes().     DiscoveryNode[] discoveryNodes = dataNodes.values().toArray(DiscoveryNode.class).     final String mergeNode = discoveryNodes[0].getName().     ensureGreen().     // relocate all shards to one node such that we can merge it.     client().admin().indices().prepareUpdateSettings("bigindex").setSettings(Settings.builder().put("index.routing.allocation.require._name", mergeNode).put("index.blocks.write", true)).get().     // wait for green and then shrink     ensureGreen().     assertAcked(client().admin().indices().prepareResizeIndex("bigindex", "shrunk_bigindex").setSettings(Settings.builder().put("index.number_of_replicas", 0).put("index.number_of_shards", 1).build())).     // verify all docs     ensureGreen().     assertHitCount(client().prepareSearch("shrunk_bigindex").setSize(100).setQuery(new TermsQueryBuilder("foo", "bar")).get(), randomNumberOfDocs). }
