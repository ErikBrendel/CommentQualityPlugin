# id;timestamp;commentText;codeText;commentWords;codeWords
SSLTrustRestrictionsTests -> private void runResourceWatcher();1540847035;Force the file watch to be updated._Ideally we'd just left the service do its thing, but that means waiting for 5sec_We can drop the 5s down, but then we run into resource contention issues._This method just tells the {@link ResourceWatcherService} to run its check at a time that suits the tests. In all other respects_it works just like normal - the usual file checks apply for detecting it as "changed", and only the previously configured files_are checked.;private void runResourceWatcher() {_        final InternalTestCluster cluster = internalCluster()__        if (cluster.size() > 0) {_            final ResourceWatcherService service = cluster.getInstance(ResourceWatcherService.class)__            logger.info("Triggering a reload of watched resources")__            service.notifyNow(ResourceWatcherService.Frequency.HIGH)__        }_    };force,the,file,watch,to,be,updated,ideally,we,d,just,left,the,service,do,its,thing,but,that,means,waiting,for,5sec,we,can,drop,the,5s,down,but,then,we,run,into,resource,contention,issues,this,method,just,tells,the,link,resource,watcher,service,to,run,its,check,at,a,time,that,suits,the,tests,in,all,other,respects,it,works,just,like,normal,the,usual,file,checks,apply,for,detecting,it,as,changed,and,only,the,previously,configured,files,are,checked;private,void,run,resource,watcher,final,internal,test,cluster,cluster,internal,cluster,if,cluster,size,0,final,resource,watcher,service,service,cluster,get,instance,resource,watcher,service,class,logger,info,triggering,a,reload,of,watched,resources,service,notify,now,resource,watcher,service,frequency,high
SSLTrustRestrictionsTests -> private void runResourceWatcher();1547499982;Force the file watch to be updated._Ideally we'd just left the service do its thing, but that means waiting for 5sec_We can drop the 5s down, but then we run into resource contention issues._This method just tells the {@link ResourceWatcherService} to run its check at a time that suits the tests. In all other respects_it works just like normal - the usual file checks apply for detecting it as "changed", and only the previously configured files_are checked.;private void runResourceWatcher() {_        final InternalTestCluster cluster = internalCluster()__        if (cluster.size() > 0) {_            final ResourceWatcherService service = cluster.getInstance(ResourceWatcherService.class)__            logger.info("Triggering a reload of watched resources")__            service.notifyNow(ResourceWatcherService.Frequency.HIGH)__        }_    };force,the,file,watch,to,be,updated,ideally,we,d,just,left,the,service,do,its,thing,but,that,means,waiting,for,5sec,we,can,drop,the,5s,down,but,then,we,run,into,resource,contention,issues,this,method,just,tells,the,link,resource,watcher,service,to,run,its,check,at,a,time,that,suits,the,tests,in,all,other,respects,it,works,just,like,normal,the,usual,file,checks,apply,for,detecting,it,as,changed,and,only,the,previously,configured,files,are,checked;private,void,run,resource,watcher,final,internal,test,cluster,cluster,internal,cluster,if,cluster,size,0,final,resource,watcher,service,service,cluster,get,instance,resource,watcher,service,class,logger,info,triggering,a,reload,of,watched,resources,service,notify,now,resource,watcher,service,frequency,high
