commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "security_get_privileges_action". }
false;public;2;23;;@Override public RestResponse buildResponse(GetPrivilegesResponse response, XContentBuilder builder) throws Exception {     final Map<String, Set<ApplicationPrivilegeDescriptor>> privsByApp = groupByApplicationName(response.privileges()).     builder.startObject().     for (String app : privsByApp.keySet()) {         builder.startObject(app).         for (ApplicationPrivilegeDescriptor privilege : privsByApp.get(app)) {             builder.field(privilege.getName(), privilege).         }         builder.endObject().     }     builder.endObject().     // we'll return an empty result and 404 status code     if (privileges.length != 0 && response.privileges().length == 0) {         return new BytesRestResponse(RestStatus.NOT_FOUND, builder).     }     // was found     return new BytesRestResponse(RestStatus.OK, builder). }
false;public;2;32;;@Override public RestChannelConsumer innerPrepareRequest(RestRequest request, NodeClient client) throws IOException {     final String application = request.param("application").     final String[] privileges = request.paramAsStringArray("privilege", Strings.EMPTY_ARRAY).     return channel -> new SecurityClient(client).prepareGetPrivileges(application, privileges).execute(new RestBuilderListener<GetPrivilegesResponse>(channel) {          @Override         public RestResponse buildResponse(GetPrivilegesResponse response, XContentBuilder builder) throws Exception {             final Map<String, Set<ApplicationPrivilegeDescriptor>> privsByApp = groupByApplicationName(response.privileges()).             builder.startObject().             for (String app : privsByApp.keySet()) {                 builder.startObject(app).                 for (ApplicationPrivilegeDescriptor privilege : privsByApp.get(app)) {                     builder.field(privilege.getName(), privilege).                 }                 builder.endObject().             }             builder.endObject().             // we'll return an empty result and 404 status code             if (privileges.length != 0 && response.privileges().length == 0) {                 return new BytesRestResponse(RestStatus.NOT_FOUND, builder).             }             // was found             return new BytesRestResponse(RestStatus.OK, builder).         }     }). }
false;static;1;7;;static Map<String, Set<ApplicationPrivilegeDescriptor>> groupByApplicationName(ApplicationPrivilegeDescriptor[] privileges) {     return Arrays.stream(privileges).collect(Collectors.toMap(ApplicationPrivilegeDescriptor::getApplication, Collections::singleton, Sets::union)). }
