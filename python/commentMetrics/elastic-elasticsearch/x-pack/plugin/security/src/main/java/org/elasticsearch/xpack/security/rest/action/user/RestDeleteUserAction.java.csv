commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "security_delete_user_action". }
false;public;2;7;;@Override public RestResponse buildResponse(DeleteUserResponse response, XContentBuilder builder) throws Exception {     return new BytesRestResponse(response.found() ? RestStatus.OK : RestStatus.NOT_FOUND, builder.startObject().field("found", response.found()).endObject()). }
false;public;2;16;;@Override public RestChannelConsumer innerPrepareRequest(RestRequest request, NodeClient client) throws IOException {     final String username = request.param("username").     final String refresh = request.param("refresh").     return channel -> new SecurityClient(client).prepareDeleteUser(username).setRefreshPolicy(refresh).execute(new RestBuilderListener<DeleteUserResponse>(channel) {          @Override         public RestResponse buildResponse(DeleteUserResponse response, XContentBuilder builder) throws Exception {             return new BytesRestResponse(response.found() ? RestStatus.OK : RestStatus.NOT_FOUND, builder.startObject().field("found", response.found()).endObject()).         }     }). }
