commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;17;;protected String getIdentityProviderEndpoint(String binding, Function<IDPSSODescriptor, ? extends Collection<? extends Endpoint>> selector) {     final List<String> locations = identityProvider.getRoleDescriptors(IDPSSODescriptor.DEFAULT_ELEMENT_NAME).stream().map(rd -> (IDPSSODescriptor) rd).flatMap(idp -> selector.apply(idp).stream()).filter(endp -> binding.equals(endp.getBinding())).map(sso -> sso.getLocation()).collect(Collectors.toList()).     if (locations.isEmpty()) {         return null.     }     if (locations.size() > 1) {         throw new ElasticsearchException("Found multiple locations for binding [{}] in descriptor [{}] - [{}]", binding, identityProvider.getID(), locations).     }     return locations.get(0). }
false;protected;0;3;;protected DateTime now() {     return new DateTime(clock.millis(), DateTimeZone.UTC). }
false;protected;0;5;;protected Issuer buildIssuer() {     Issuer issuer = SamlUtils.buildObject(Issuer.class, Issuer.DEFAULT_ELEMENT_NAME).     issuer.setValue(this.serviceProvider.getEntityId()).     return issuer. }
false;protected;0;4;;protected String buildId() {     // 20 bytes (160 bits) of randomness as recommended by the SAML spec     return SamlUtils.generateSecureNCName(20). }
