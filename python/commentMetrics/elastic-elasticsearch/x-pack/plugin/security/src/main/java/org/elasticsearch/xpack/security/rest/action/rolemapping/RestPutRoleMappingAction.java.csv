commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "security_put_role_mappings_action". }
false;public;2;4;;@Override public RestResponse buildResponse(PutRoleMappingResponse response, XContentBuilder builder) throws Exception {     return new BytesRestResponse(RestStatus.OK, builder.startObject().field("role_mapping", response).endObject()). }
false;public;2;14;;@Override public RestChannelConsumer innerPrepareRequest(RestRequest request, NodeClient client) throws IOException {     final String name = request.param("name").     PutRoleMappingRequestBuilder requestBuilder = new SecurityClient(client).preparePutRoleMapping(name, request.requiredContent(), request.getXContentType()).setRefreshPolicy(request.param("refresh")).     return channel -> requestBuilder.execute(new RestBuilderListener<PutRoleMappingResponse>(channel) {          @Override         public RestResponse buildResponse(PutRoleMappingResponse response, XContentBuilder builder) throws Exception {             return new BytesRestResponse(RestStatus.OK, builder.startObject().field("role_mapping", response).endObject()).         }     }). }
