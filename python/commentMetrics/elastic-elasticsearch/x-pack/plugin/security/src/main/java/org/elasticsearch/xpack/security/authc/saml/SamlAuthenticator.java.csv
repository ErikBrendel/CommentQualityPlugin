# id;timestamp;commentText;codeText;commentWords;codeWords
SamlAuthenticator -> SamlAttributes authenticate(SamlToken token);1524684173;Processes the provided SAML response within the provided token and, if valid, extracts the relevant attributes from it.__@throws org.elasticsearch.ElasticsearchSecurityException If the SAML is invalid for this realm/configuration;SamlAttributes authenticate(SamlToken token) {_        final Element root = parseSamlMessage(token.getContent())__        if (RESPONSE_TAG_NAME.equals(root.getLocalName()) && SAML_NAMESPACE.equals(root.getNamespaceURI())) {_            try {_                return authenticateResponse(root, token.getAllowedSamlRequestIds())__            } catch (ElasticsearchSecurityException e) {_                logger.trace("Rejecting SAML response {} because {}", SamlUtils.toString(root), e.getMessage())__                throw e__            }_        } else {_            throw samlException("SAML content [{}] should have a root element of Namespace=[{}] Tag=[{}]",_                    root, SAML_NAMESPACE, RESPONSE_TAG_NAME)__        }_    };processes,the,provided,saml,response,within,the,provided,token,and,if,valid,extracts,the,relevant,attributes,from,it,throws,org,elasticsearch,elasticsearch,security,exception,if,the,saml,is,invalid,for,this,realm,configuration;saml,attributes,authenticate,saml,token,token,final,element,root,parse,saml,message,token,get,content,if,equals,root,get,local,name,equals,root,get,namespace,uri,try,return,authenticate,response,root,token,get,allowed,saml,request,ids,catch,elasticsearch,security,exception,e,logger,trace,rejecting,saml,response,because,saml,utils,to,string,root,e,get,message,throw,e,else,throw,saml,exception,saml,content,should,have,a,root,element,of,namespace,tag,root
SamlAuthenticator -> SamlAttributes authenticate(SamlToken token);1526029249;Processes the provided SAML response within the provided token and, if valid, extracts the relevant attributes from it.__@throws org.elasticsearch.ElasticsearchSecurityException If the SAML is invalid for this realm/configuration;SamlAttributes authenticate(SamlToken token) {_        final Element root = parseSamlMessage(token.getContent())__        if (RESPONSE_TAG_NAME.equals(root.getLocalName()) && SAML_NAMESPACE.equals(root.getNamespaceURI())) {_            try {_                return authenticateResponse(root, token.getAllowedSamlRequestIds())__            } catch (ElasticsearchSecurityException e) {_                logger.trace("Rejecting SAML response {} because {}", SamlUtils.toString(root), e.getMessage())__                throw e__            }_        } else {_            throw samlException("SAML content [{}] should have a root element of Namespace=[{}] Tag=[{}]",_                    root, SAML_NAMESPACE, RESPONSE_TAG_NAME)__        }_    };processes,the,provided,saml,response,within,the,provided,token,and,if,valid,extracts,the,relevant,attributes,from,it,throws,org,elasticsearch,elasticsearch,security,exception,if,the,saml,is,invalid,for,this,realm,configuration;saml,attributes,authenticate,saml,token,token,final,element,root,parse,saml,message,token,get,content,if,equals,root,get,local,name,equals,root,get,namespace,uri,try,return,authenticate,response,root,token,get,allowed,saml,request,ids,catch,elasticsearch,security,exception,e,logger,trace,rejecting,saml,response,because,saml,utils,to,string,root,e,get,message,throw,e,else,throw,saml,exception,saml,content,should,have,a,root,element,of,namespace,tag,root
SamlAuthenticator -> SamlAttributes authenticate(SamlToken token);1528706846;Processes the provided SAML response within the provided token and, if valid, extracts the relevant attributes from it.__@throws org.elasticsearch.ElasticsearchSecurityException If the SAML is invalid for this realm/configuration;SamlAttributes authenticate(SamlToken token) {_        final Element root = parseSamlMessage(token.getContent())__        if (RESPONSE_TAG_NAME.equals(root.getLocalName()) && SAML_NAMESPACE.equals(root.getNamespaceURI())) {_            try {_                return authenticateResponse(root, token.getAllowedSamlRequestIds())__            } catch (ElasticsearchSecurityException e) {_                logger.trace("Rejecting SAML response {} because {}", SamlUtils.toString(root), e.getMessage())__                throw e__            }_        } else {_            throw samlException("SAML content [{}] should have a root element of Namespace=[{}] Tag=[{}]",_                    root, SAML_NAMESPACE, RESPONSE_TAG_NAME)__        }_    };processes,the,provided,saml,response,within,the,provided,token,and,if,valid,extracts,the,relevant,attributes,from,it,throws,org,elasticsearch,elasticsearch,security,exception,if,the,saml,is,invalid,for,this,realm,configuration;saml,attributes,authenticate,saml,token,token,final,element,root,parse,saml,message,token,get,content,if,equals,root,get,local,name,equals,root,get,namespace,uri,try,return,authenticate,response,root,token,get,allowed,saml,request,ids,catch,elasticsearch,security,exception,e,logger,trace,rejecting,saml,response,because,saml,utils,to,string,root,e,get,message,throw,e,else,throw,saml,exception,saml,content,should,have,a,root,element,of,namespace,tag,root
SamlAuthenticator -> SamlAttributes authenticate(SamlToken token);1528804324;Processes the provided SAML response within the provided token and, if valid, extracts the relevant attributes from it.__@throws org.elasticsearch.ElasticsearchSecurityException If the SAML is invalid for this realm/configuration;SamlAttributes authenticate(SamlToken token) {_        final Element root = parseSamlMessage(token.getContent())__        if (RESPONSE_TAG_NAME.equals(root.getLocalName()) && SAML_NAMESPACE.equals(root.getNamespaceURI())) {_            try {_                return authenticateResponse(root, token.getAllowedSamlRequestIds())__            } catch (ElasticsearchSecurityException e) {_                logger.trace("Rejecting SAML response {} because {}", SamlUtils.toString(root), e.getMessage())__                throw e__            }_        } else {_            throw samlException("SAML content [{}] should have a root element of Namespace=[{}] Tag=[{}]",_                    root, SAML_NAMESPACE, RESPONSE_TAG_NAME)__        }_    };processes,the,provided,saml,response,within,the,provided,token,and,if,valid,extracts,the,relevant,attributes,from,it,throws,org,elasticsearch,elasticsearch,security,exception,if,the,saml,is,invalid,for,this,realm,configuration;saml,attributes,authenticate,saml,token,token,final,element,root,parse,saml,message,token,get,content,if,equals,root,get,local,name,equals,root,get,namespace,uri,try,return,authenticate,response,root,token,get,allowed,saml,request,ids,catch,elasticsearch,security,exception,e,logger,trace,rejecting,saml,response,because,saml,utils,to,string,root,e,get,message,throw,e,else,throw,saml,exception,saml,content,should,have,a,root,element,of,namespace,tag,root
SamlAuthenticator -> SamlAttributes authenticate(SamlToken token);1538170812;Processes the provided SAML response within the provided token and, if valid, extracts the relevant attributes from it.__@throws org.elasticsearch.ElasticsearchSecurityException If the SAML is invalid for this realm/configuration;SamlAttributes authenticate(SamlToken token) {_        final Element root = parseSamlMessage(token.getContent())__        if (RESPONSE_TAG_NAME.equals(root.getLocalName()) && SAML_NAMESPACE.equals(root.getNamespaceURI())) {_            try {_                return authenticateResponse(root, token.getAllowedSamlRequestIds())__            } catch (ElasticsearchSecurityException e) {_                logger.trace("Rejecting SAML response {} because {}", SamlUtils.toString(root), e.getMessage())__                throw e__            }_        } else {_            throw samlException("SAML content [{}] should have a root element of Namespace=[{}] Tag=[{}]",_                    root, SAML_NAMESPACE, RESPONSE_TAG_NAME)__        }_    };processes,the,provided,saml,response,within,the,provided,token,and,if,valid,extracts,the,relevant,attributes,from,it,throws,org,elasticsearch,elasticsearch,security,exception,if,the,saml,is,invalid,for,this,realm,configuration;saml,attributes,authenticate,saml,token,token,final,element,root,parse,saml,message,token,get,content,if,equals,root,get,local,name,equals,root,get,namespace,uri,try,return,authenticate,response,root,token,get,allowed,saml,request,ids,catch,elasticsearch,security,exception,e,logger,trace,rejecting,saml,response,because,saml,utils,to,string,root,e,get,message,throw,e,else,throw,saml,exception,saml,content,should,have,a,root,element,of,namespace,tag,root
SamlAuthenticator -> SamlAttributes authenticate(SamlToken token);1549878221;Processes the provided SAML response within the provided token and, if valid, extracts the relevant attributes from it.__@throws org.elasticsearch.ElasticsearchSecurityException If the SAML is invalid for this realm/configuration;SamlAttributes authenticate(SamlToken token) {_        final Element root = parseSamlMessage(token.getContent())__        if (RESPONSE_TAG_NAME.equals(root.getLocalName()) && SAML_NAMESPACE.equals(root.getNamespaceURI())) {_            try {_                return authenticateResponse(root, token.getAllowedSamlRequestIds())__            } catch (ElasticsearchSecurityException e) {_                logger.trace("Rejecting SAML response {} because {}", SamlUtils.toString(root), e.getMessage())__                throw e__            }_        } else {_            throw samlException("SAML content [{}] should have a root element of Namespace=[{}] Tag=[{}]",_                    root, SAML_NAMESPACE, RESPONSE_TAG_NAME)__        }_    };processes,the,provided,saml,response,within,the,provided,token,and,if,valid,extracts,the,relevant,attributes,from,it,throws,org,elasticsearch,elasticsearch,security,exception,if,the,saml,is,invalid,for,this,realm,configuration;saml,attributes,authenticate,saml,token,token,final,element,root,parse,saml,message,token,get,content,if,equals,root,get,local,name,equals,root,get,namespace,uri,try,return,authenticate,response,root,token,get,allowed,saml,request,ids,catch,elasticsearch,security,exception,e,logger,trace,rejecting,saml,response,because,saml,utils,to,string,root,e,get,message,throw,e,else,throw,saml,exception,saml,content,should,have,a,root,element,of,namespace,tag,root
