# id;timestamp;commentText;codeText;commentWords;codeWords
SessionFactory -> public void unauthenticatedSession(String username, ActionListener<LdapSession> listener);1524684173;Returns an {@link LdapSession} for the user identified by the String parameter__@param username the identifier for the user_@param listener the listener to call on a failure or result;public void unauthenticatedSession(String username, ActionListener<LdapSession> listener) {_        throw new UnsupportedOperationException("unauthenticated sessions are not supported")__    };returns,an,link,ldap,session,for,the,user,identified,by,the,string,parameter,param,username,the,identifier,for,the,user,param,listener,the,listener,to,call,on,a,failure,or,result;public,void,unauthenticated,session,string,username,action,listener,ldap,session,listener,throw,new,unsupported,operation,exception,unauthenticated,sessions,are,not,supported
SessionFactory -> public void unauthenticatedSession(String username, ActionListener<LdapSession> listener);1531729807;Returns an {@link LdapSession} for the user identified by the String parameter__@param username the identifier for the user_@param listener the listener to call on a failure or result;public void unauthenticatedSession(String username, ActionListener<LdapSession> listener) {_        throw new UnsupportedOperationException("unauthenticated sessions are not supported")__    };returns,an,link,ldap,session,for,the,user,identified,by,the,string,parameter,param,username,the,identifier,for,the,user,param,listener,the,listener,to,call,on,a,failure,or,result;public,void,unauthenticated,session,string,username,action,listener,ldap,session,listener,throw,new,unsupported,operation,exception,unauthenticated,sessions,are,not,supported
SessionFactory -> public void unauthenticatedSession(String username, ActionListener<LdapSession> listener);1538170812;Returns an {@link LdapSession} for the user identified by the String parameter__@param username the identifier for the user_@param listener the listener to call on a failure or result;public void unauthenticatedSession(String username, ActionListener<LdapSession> listener) {_        throw new UnsupportedOperationException("unauthenticated sessions are not supported")__    };returns,an,link,ldap,session,for,the,user,identified,by,the,string,parameter,param,username,the,identifier,for,the,user,param,listener,the,listener,to,call,on,a,failure,or,result;public,void,unauthenticated,session,string,username,action,listener,ldap,session,listener,throw,new,unsupported,operation,exception,unauthenticated,sessions,are,not,supported
SessionFactory -> public void unauthenticatedSession(String username, ActionListener<LdapSession> listener);1541476610;Returns an {@link LdapSession} for the user identified by the String parameter__@param username the identifier for the user_@param listener the listener to call on a failure or result;public void unauthenticatedSession(String username, ActionListener<LdapSession> listener) {_        throw new UnsupportedOperationException("unauthenticated sessions are not supported")__    };returns,an,link,ldap,session,for,the,user,identified,by,the,string,parameter,param,username,the,identifier,for,the,user,param,listener,the,listener,to,call,on,a,failure,or,result;public,void,unauthenticated,session,string,username,action,listener,ldap,session,listener,throw,new,unsupported,operation,exception,unauthenticated,sessions,are,not,supported
SessionFactory -> public abstract void session(String user, SecureString password,                                  ActionListener<LdapSession> listener)_;1524684173;Authenticates the given user and opens a new connection that bound to it (meaning, all_operations under the returned connection will be executed on behalf of the authenticated_user.__@param user     The name of the user to authenticate the connection with._@param password The password of the user_@param listener the listener to call on a failure or result;public abstract void session(String user, SecureString password,_                                 ActionListener<LdapSession> listener)_;authenticates,the,given,user,and,opens,a,new,connection,that,bound,to,it,meaning,all,operations,under,the,returned,connection,will,be,executed,on,behalf,of,the,authenticated,user,param,user,the,name,of,the,user,to,authenticate,the,connection,with,param,password,the,password,of,the,user,param,listener,the,listener,to,call,on,a,failure,or,result;public,abstract,void,session,string,user,secure,string,password,action,listener,ldap,session,listener
SessionFactory -> public abstract void session(String user, SecureString password,                                  ActionListener<LdapSession> listener)_;1531729807;Authenticates the given user and opens a new connection that bound to it (meaning, all_operations under the returned connection will be executed on behalf of the authenticated_user.__@param user     The name of the user to authenticate the connection with._@param password The password of the user_@param listener the listener to call on a failure or result;public abstract void session(String user, SecureString password,_                                 ActionListener<LdapSession> listener)_;authenticates,the,given,user,and,opens,a,new,connection,that,bound,to,it,meaning,all,operations,under,the,returned,connection,will,be,executed,on,behalf,of,the,authenticated,user,param,user,the,name,of,the,user,to,authenticate,the,connection,with,param,password,the,password,of,the,user,param,listener,the,listener,to,call,on,a,failure,or,result;public,abstract,void,session,string,user,secure,string,password,action,listener,ldap,session,listener
SessionFactory -> public abstract void session(String user, SecureString password,                                  ActionListener<LdapSession> listener)_;1538170812;Authenticates the given user and opens a new connection that bound to it (meaning, all_operations under the returned connection will be executed on behalf of the authenticated_user.__@param user     The name of the user to authenticate the connection with._@param password The password of the user_@param listener the listener to call on a failure or result;public abstract void session(String user, SecureString password,_                                 ActionListener<LdapSession> listener)_;authenticates,the,given,user,and,opens,a,new,connection,that,bound,to,it,meaning,all,operations,under,the,returned,connection,will,be,executed,on,behalf,of,the,authenticated,user,param,user,the,name,of,the,user,to,authenticate,the,connection,with,param,password,the,password,of,the,user,param,listener,the,listener,to,call,on,a,failure,or,result;public,abstract,void,session,string,user,secure,string,password,action,listener,ldap,session,listener
SessionFactory -> public abstract void session(String user, SecureString password,                                  ActionListener<LdapSession> listener)_;1541476610;Authenticates the given user and opens a new connection that bound to it (meaning, all_operations under the returned connection will be executed on behalf of the authenticated_user.__@param user     The name of the user to authenticate the connection with._@param password The password of the user_@param listener the listener to call on a failure or result;public abstract void session(String user, SecureString password,_                                 ActionListener<LdapSession> listener)_;authenticates,the,given,user,and,opens,a,new,connection,that,bound,to,it,meaning,all,operations,under,the,returned,connection,will,be,executed,on,behalf,of,the,authenticated,user,param,user,the,name,of,the,user,to,authenticate,the,connection,with,param,password,the,password,of,the,user,param,listener,the,listener,to,call,on,a,failure,or,result;public,abstract,void,session,string,user,secure,string,password,action,listener,ldap,session,listener
SessionFactory -> public boolean supportsUnauthenticatedSession();1524684173;Returns a flag to indicate if this session factory supports unauthenticated sessions._This means that a session can be established without providing any credentials in a call to_{@link #unauthenticatedSession(String, ActionListener)}__@return true if the factory supports unauthenticated sessions;public boolean supportsUnauthenticatedSession() {_        return false__    };returns,a,flag,to,indicate,if,this,session,factory,supports,unauthenticated,sessions,this,means,that,a,session,can,be,established,without,providing,any,credentials,in,a,call,to,link,unauthenticated,session,string,action,listener,return,true,if,the,factory,supports,unauthenticated,sessions;public,boolean,supports,unauthenticated,session,return,false
SessionFactory -> public boolean supportsUnauthenticatedSession();1531729807;Returns a flag to indicate if this session factory supports unauthenticated sessions._This means that a session can be established without providing any credentials in a call to_{@link #unauthenticatedSession(String, ActionListener)}__@return true if the factory supports unauthenticated sessions;public boolean supportsUnauthenticatedSession() {_        return false__    };returns,a,flag,to,indicate,if,this,session,factory,supports,unauthenticated,sessions,this,means,that,a,session,can,be,established,without,providing,any,credentials,in,a,call,to,link,unauthenticated,session,string,action,listener,return,true,if,the,factory,supports,unauthenticated,sessions;public,boolean,supports,unauthenticated,session,return,false
SessionFactory -> public boolean supportsUnauthenticatedSession();1538170812;Returns a flag to indicate if this session factory supports unauthenticated sessions._This means that a session can be established without providing any credentials in a call to_{@link #unauthenticatedSession(String, ActionListener)}__@return true if the factory supports unauthenticated sessions;public boolean supportsUnauthenticatedSession() {_        return false__    };returns,a,flag,to,indicate,if,this,session,factory,supports,unauthenticated,sessions,this,means,that,a,session,can,be,established,without,providing,any,credentials,in,a,call,to,link,unauthenticated,session,string,action,listener,return,true,if,the,factory,supports,unauthenticated,sessions;public,boolean,supports,unauthenticated,session,return,false
SessionFactory -> public boolean supportsUnauthenticatedSession();1541476610;Returns a flag to indicate if this session factory supports unauthenticated sessions._This means that a session can be established without providing any credentials in a call to_{@link #unauthenticatedSession(String, ActionListener)}__@return true if the factory supports unauthenticated sessions;public boolean supportsUnauthenticatedSession() {_        return false__    };returns,a,flag,to,indicate,if,this,session,factory,supports,unauthenticated,sessions,this,means,that,a,session,can,be,established,without,providing,any,credentials,in,a,call,to,link,unauthenticated,session,string,action,listener,return,true,if,the,factory,supports,unauthenticated,sessions;public,boolean,supports,unauthenticated,session,return,false
SessionFactory -> LDAPServers -> private boolean secureUrls(String[] ldapUrls);1524684173;@param ldapUrls URLS in the form of "ldap://..." or "ldaps://...";private boolean secureUrls(String[] ldapUrls) {_            if (ldapUrls.length == 0) {_                return true__            }__            final boolean allSecure = Arrays.stream(ldapUrls)_                    .allMatch(s -> STARTS_WITH_LDAPS.matcher(s).find())__            final boolean allClear = Arrays.stream(ldapUrls)_                    .allMatch(s -> STARTS_WITH_LDAP.matcher(s).find())___            if (!allSecure && !allClear) {_                _                throw new IllegalArgumentException(_                        "configured LDAP protocols are not all equal (ldaps://.. and ldap://..): ["_                                +  Strings.arrayToCommaDelimitedString(ldapUrls) + "]")__            }__            return allSecure__        };param,ldap,urls,urls,in,the,form,of,ldap,or,ldaps;private,boolean,secure,urls,string,ldap,urls,if,ldap,urls,length,0,return,true,final,boolean,all,secure,arrays,stream,ldap,urls,all,match,s,matcher,s,find,final,boolean,all,clear,arrays,stream,ldap,urls,all,match,s,matcher,s,find,if,all,secure,all,clear,throw,new,illegal,argument,exception,configured,ldap,protocols,are,not,all,equal,ldaps,and,ldap,strings,array,to,comma,delimited,string,ldap,urls,return,all,secure
SessionFactory -> LDAPServers -> private boolean secureUrls(String[] ldapUrls);1531729807;@param ldapUrls URLS in the form of "ldap://..." or "ldaps://...";private boolean secureUrls(String[] ldapUrls) {_            if (ldapUrls.length == 0) {_                return true__            }__            final boolean allSecure = Arrays.stream(ldapUrls)_                    .allMatch(s -> STARTS_WITH_LDAPS.matcher(s).find())__            final boolean allClear = Arrays.stream(ldapUrls)_                    .allMatch(s -> STARTS_WITH_LDAP.matcher(s).find())___            if (!allSecure && !allClear) {_                _                throw new IllegalArgumentException(_                        "configured LDAP protocols are not all equal (ldaps://.. and ldap://..): ["_                                +  Strings.arrayToCommaDelimitedString(ldapUrls) + "]")__            }__            return allSecure__        };param,ldap,urls,urls,in,the,form,of,ldap,or,ldaps;private,boolean,secure,urls,string,ldap,urls,if,ldap,urls,length,0,return,true,final,boolean,all,secure,arrays,stream,ldap,urls,all,match,s,matcher,s,find,final,boolean,all,clear,arrays,stream,ldap,urls,all,match,s,matcher,s,find,if,all,secure,all,clear,throw,new,illegal,argument,exception,configured,ldap,protocols,are,not,all,equal,ldaps,and,ldap,strings,array,to,comma,delimited,string,ldap,urls,return,all,secure
SessionFactory -> LDAPServers -> private boolean secureUrls(String[] ldapUrls);1538170812;@param ldapUrls URLS in the form of "ldap://..." or "ldaps://...";private boolean secureUrls(String[] ldapUrls) {_            if (ldapUrls.length == 0) {_                return true__            }__            final boolean allSecure = Arrays.stream(ldapUrls)_                    .allMatch(s -> STARTS_WITH_LDAPS.matcher(s).find())__            final boolean allClear = Arrays.stream(ldapUrls)_                    .allMatch(s -> STARTS_WITH_LDAP.matcher(s).find())___            if (!allSecure && !allClear) {_                _                throw new IllegalArgumentException(_                        "configured LDAP protocols are not all equal (ldaps://.. and ldap://..): ["_                                +  Strings.arrayToCommaDelimitedString(ldapUrls) + "]")__            }__            return allSecure__        };param,ldap,urls,urls,in,the,form,of,ldap,or,ldaps;private,boolean,secure,urls,string,ldap,urls,if,ldap,urls,length,0,return,true,final,boolean,all,secure,arrays,stream,ldap,urls,all,match,s,matcher,s,find,final,boolean,all,clear,arrays,stream,ldap,urls,all,match,s,matcher,s,find,if,all,secure,all,clear,throw,new,illegal,argument,exception,configured,ldap,protocols,are,not,all,equal,ldaps,and,ldap,strings,array,to,comma,delimited,string,ldap,urls,return,all,secure
SessionFactory -> LDAPServers -> private boolean secureUrls(String[] ldapUrls);1541476610;@param ldapUrls URLS in the form of "ldap://..." or "ldaps://...";private boolean secureUrls(String[] ldapUrls) {_            if (ldapUrls.length == 0) {_                return true__            }__            final boolean allSecure = Arrays.stream(ldapUrls)_                    .allMatch(s -> STARTS_WITH_LDAPS.matcher(s).find())__            final boolean allClear = Arrays.stream(ldapUrls)_                    .allMatch(s -> STARTS_WITH_LDAP.matcher(s).find())___            if (!allSecure && !allClear) {_                _                throw new IllegalArgumentException(_                        "configured LDAP protocols are not all equal (ldaps://.. and ldap://..): ["_                                + Strings.arrayToCommaDelimitedString(ldapUrls) + "]")__            }__            return allSecure__        };param,ldap,urls,urls,in,the,form,of,ldap,or,ldaps;private,boolean,secure,urls,string,ldap,urls,if,ldap,urls,length,0,return,true,final,boolean,all,secure,arrays,stream,ldap,urls,all,match,s,matcher,s,find,final,boolean,all,clear,arrays,stream,ldap,urls,all,match,s,matcher,s,find,if,all,secure,all,clear,throw,new,illegal,argument,exception,configured,ldap,protocols,are,not,all,equal,ldaps,and,ldap,strings,array,to,comma,delimited,string,ldap,urls,return,all,secure
