commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "security_user_privileges_action". }
false;public;2;10;;@Override public RestChannelConsumer innerPrepareRequest(RestRequest request, NodeClient client) throws IOException {     final User user = securityContext.getUser().     if (user == null) {         return restChannel -> {             throw new ElasticsearchSecurityException("there is no authenticated user").         }.     }     final String username = user.principal().     final GetUserPrivilegesRequestBuilder requestBuilder = new SecurityClient(client).prepareGetUserPrivileges(username).     return channel -> requestBuilder.execute(new RestListener(channel)). }
false;public;2;18;;@Override public RestResponse buildResponse(GetUserPrivilegesResponse response, XContentBuilder builder) throws Exception {     builder.startObject().     builder.field(RoleDescriptor.Fields.CLUSTER.getPreferredName(), response.getClusterPrivileges()).     builder.startArray(RoleDescriptor.Fields.GLOBAL.getPreferredName()).     for (ConditionalClusterPrivilege ccp : response.getConditionalClusterPrivileges()) {         ConditionalClusterPrivileges.toXContent(builder, ToXContent.EMPTY_PARAMS, Collections.singleton(ccp)).     }     builder.endArray().     builder.field(RoleDescriptor.Fields.INDICES.getPreferredName(), response.getIndexPrivileges()).     builder.field(RoleDescriptor.Fields.APPLICATIONS.getPreferredName(), response.getApplicationPrivileges()).     builder.field(RoleDescriptor.Fields.RUN_AS.getPreferredName(), response.getRunAs()).     builder.endObject().     return new BytesRestResponse(RestStatus.OK, builder). }
