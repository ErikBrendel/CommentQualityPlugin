# id;timestamp;commentText;codeText;commentWords;codeWords
InternalRealms -> static boolean isStandardRealm(String type);1524684173;Determines whether <code>type</code> is an internal realm-type that is provided by x-pack,_excluding the {@link ReservedRealm} and realms that have extensive interaction with_third party sources;static boolean isStandardRealm(String type) {_        return STANDARD_TYPES.contains(type)__    };determines,whether,code,type,code,is,an,internal,realm,type,that,is,provided,by,x,pack,excluding,the,link,reserved,realm,and,realms,that,have,extensive,interaction,with,third,party,sources;static,boolean,is,standard,realm,string,type,return,contains,type
InternalRealms -> static boolean isStandardRealm(String type);1525859433;Determines whether <code>type</code> is an internal realm-type that is provided by x-pack,_excluding the {@link ReservedRealm} and realms that have extensive interaction with_third party sources;static boolean isStandardRealm(String type) {_        return STANDARD_TYPES.contains(type)__    };determines,whether,code,type,code,is,an,internal,realm,type,that,is,provided,by,x,pack,excluding,the,link,reserved,realm,and,realms,that,have,extensive,interaction,with,third,party,sources;static,boolean,is,standard,realm,string,type,return,contains,type
InternalRealms -> static boolean isStandardRealm(String type);1526029249;Determines whether <code>type</code> is an internal realm-type that is provided by x-pack,_excluding the {@link ReservedRealm} and realms that have extensive interaction with_third party sources;static boolean isStandardRealm(String type) {_        return STANDARD_TYPES.contains(type)__    };determines,whether,code,type,code,is,an,internal,realm,type,that,is,provided,by,x,pack,excluding,the,link,reserved,realm,and,realms,that,have,extensive,interaction,with,third,party,sources;static,boolean,is,standard,realm,string,type,return,contains,type
InternalRealms -> static boolean isStandardRealm(String type);1526449283;Determines whether <code>type</code> is an internal realm-type that is provided by x-pack,_excluding the {@link ReservedRealm} and realms that have extensive interaction with_third party sources;static boolean isStandardRealm(String type) {_        return STANDARD_TYPES.contains(type)__    };determines,whether,code,type,code,is,an,internal,realm,type,that,is,provided,by,x,pack,excluding,the,link,reserved,realm,and,realms,that,have,extensive,interaction,with,third,party,sources;static,boolean,is,standard,realm,string,type,return,contains,type
InternalRealms -> static boolean isStandardRealm(String type);1527207653;Determines whether <code>type</code> is an internal realm-type that is provided by x-pack,_excluding the {@link ReservedRealm} and realms that have extensive interaction with_third party sources;static boolean isStandardRealm(String type) {_        return STANDARD_TYPES.contains(type)__    };determines,whether,code,type,code,is,an,internal,realm,type,that,is,provided,by,x,pack,excluding,the,link,reserved,realm,and,realms,that,have,extensive,interaction,with,third,party,sources;static,boolean,is,standard,realm,string,type,return,contains,type
InternalRealms -> static boolean isStandardRealm(String type);1532456624;Determines whether <code>type</code> is an internal realm-type that is provided by x-pack,_excluding the {@link ReservedRealm} and realms that have extensive interaction with_third party sources;static boolean isStandardRealm(String type) {_        return STANDARD_TYPES.contains(type)__    };determines,whether,code,type,code,is,an,internal,realm,type,that,is,provided,by,x,pack,excluding,the,link,reserved,realm,and,realms,that,have,extensive,interaction,with,third,party,sources;static,boolean,is,standard,realm,string,type,return,contains,type
InternalRealms -> static boolean isStandardRealm(String type);1541476610;Determines whether <code>type</code> is an internal realm-type that is provided by x-pack,_excluding the {@link ReservedRealm} and realms that have extensive interaction with_third party sources;static boolean isStandardRealm(String type) {_        return STANDARD_TYPES.contains(type)__    };determines,whether,code,type,code,is,an,internal,realm,type,that,is,provided,by,x,pack,excluding,the,link,reserved,realm,and,realms,that,have,extensive,interaction,with,third,party,sources;static,boolean,is,standard,realm,string,type,return,contains,type
InternalRealms -> static boolean isStandardRealm(String type);1543475212;Determines whether <code>type</code> is an internal realm-type that is provided by x-pack,_excluding the {@link ReservedRealm} and realms that have extensive interaction with_third party sources;static boolean isStandardRealm(String type) {_        return STANDARD_TYPES.contains(type)__    };determines,whether,code,type,code,is,an,internal,realm,type,that,is,provided,by,x,pack,excluding,the,link,reserved,realm,and,realms,that,have,extensive,interaction,with,third,party,sources;static,boolean,is,standard,realm,string,type,return,contains,type
InternalRealms -> public static Map<String, Realm.Factory> getFactories(ThreadPool threadPool, ResourceWatcherService resourceWatcherService,                                                           SSLService sslService, NativeUsersStore nativeUsersStore,                                                           NativeRoleMappingStore nativeRoleMappingStore,                                                           SecurityLifecycleService securityLifecycleService);1524684173;Creates {@link Realm.Factory factories} for each <em>internal</em> realm type._This excludes the {@link ReservedRealm}, as it cannot be created dynamically._@return A map from <em>realm-type</em> to <code>Factory</code>;public static Map<String, Realm.Factory> getFactories(ThreadPool threadPool, ResourceWatcherService resourceWatcherService,_                                                          SSLService sslService, NativeUsersStore nativeUsersStore,_                                                          NativeRoleMappingStore nativeRoleMappingStore,_                                                          SecurityLifecycleService securityLifecycleService) {__        Map<String, Realm.Factory> map = new HashMap<>()__        map.put(FileRealmSettings.TYPE, config -> new FileRealm(config, resourceWatcherService))__        map.put(NativeRealmSettings.TYPE, config -> {_            final NativeRealm nativeRealm = new NativeRealm(config, nativeUsersStore)__            securityLifecycleService.addSecurityIndexHealthChangeListener(nativeRealm::onSecurityIndexHealthChange)__            return nativeRealm__        })__        map.put(LdapRealmSettings.AD_TYPE, config -> new LdapRealm(LdapRealmSettings.AD_TYPE, config, sslService,_                resourceWatcherService, nativeRoleMappingStore, threadPool))__        map.put(LdapRealmSettings.LDAP_TYPE, config -> new LdapRealm(LdapRealmSettings.LDAP_TYPE, config,_                sslService, resourceWatcherService, nativeRoleMappingStore, threadPool))__        map.put(PkiRealmSettings.TYPE, config -> new PkiRealm(config, resourceWatcherService, nativeRoleMappingStore))__        map.put(SamlRealmSettings.TYPE, config -> SamlRealm.create(config, sslService, resourceWatcherService, nativeRoleMappingStore))__        return Collections.unmodifiableMap(map)__    };creates,link,realm,factory,factories,for,each,em,internal,em,realm,type,this,excludes,the,link,reserved,realm,as,it,cannot,be,created,dynamically,return,a,map,from,em,realm,type,em,to,code,factory,code;public,static,map,string,realm,factory,get,factories,thread,pool,thread,pool,resource,watcher,service,resource,watcher,service,sslservice,ssl,service,native,users,store,native,users,store,native,role,mapping,store,native,role,mapping,store,security,lifecycle,service,security,lifecycle,service,map,string,realm,factory,map,new,hash,map,map,put,file,realm,settings,type,config,new,file,realm,config,resource,watcher,service,map,put,native,realm,settings,type,config,final,native,realm,native,realm,new,native,realm,config,native,users,store,security,lifecycle,service,add,security,index,health,change,listener,native,realm,on,security,index,health,change,return,native,realm,map,put,ldap,realm,settings,config,new,ldap,realm,ldap,realm,settings,config,ssl,service,resource,watcher,service,native,role,mapping,store,thread,pool,map,put,ldap,realm,settings,config,new,ldap,realm,ldap,realm,settings,config,ssl,service,resource,watcher,service,native,role,mapping,store,thread,pool,map,put,pki,realm,settings,type,config,new,pki,realm,config,resource,watcher,service,native,role,mapping,store,map,put,saml,realm,settings,type,config,saml,realm,create,config,ssl,service,resource,watcher,service,native,role,mapping,store,return,collections,unmodifiable,map,map
InternalRealms -> public static Map<String, Realm.Factory> getFactories(ThreadPool threadPool, ResourceWatcherService resourceWatcherService,                                                           SSLService sslService, NativeUsersStore nativeUsersStore,                                                           NativeRoleMappingStore nativeRoleMappingStore,                                                           SecurityLifecycleService securityLifecycleService);1525859433;Creates {@link Realm.Factory factories} for each <em>internal</em> realm type._This excludes the {@link ReservedRealm}, as it cannot be created dynamically._@return A map from <em>realm-type</em> to <code>Factory</code>;public static Map<String, Realm.Factory> getFactories(ThreadPool threadPool, ResourceWatcherService resourceWatcherService,_                                                          SSLService sslService, NativeUsersStore nativeUsersStore,_                                                          NativeRoleMappingStore nativeRoleMappingStore,_                                                          SecurityLifecycleService securityLifecycleService) {__        Map<String, Realm.Factory> map = new HashMap<>()__        map.put(FileRealmSettings.TYPE, config -> new FileRealm(config, resourceWatcherService))__        map.put(NativeRealmSettings.TYPE, config -> {_            final NativeRealm nativeRealm = new NativeRealm(config, nativeUsersStore)__            securityLifecycleService.securityIndex().addIndexHealthChangeListener(nativeRealm::onSecurityIndexHealthChange)__            return nativeRealm__        })__        map.put(LdapRealmSettings.AD_TYPE, config -> new LdapRealm(LdapRealmSettings.AD_TYPE, config, sslService,_                resourceWatcherService, nativeRoleMappingStore, threadPool))__        map.put(LdapRealmSettings.LDAP_TYPE, config -> new LdapRealm(LdapRealmSettings.LDAP_TYPE, config,_                sslService, resourceWatcherService, nativeRoleMappingStore, threadPool))__        map.put(PkiRealmSettings.TYPE, config -> new PkiRealm(config, resourceWatcherService, nativeRoleMappingStore))__        map.put(SamlRealmSettings.TYPE, config -> SamlRealm.create(config, sslService, resourceWatcherService, nativeRoleMappingStore))__        return Collections.unmodifiableMap(map)__    };creates,link,realm,factory,factories,for,each,em,internal,em,realm,type,this,excludes,the,link,reserved,realm,as,it,cannot,be,created,dynamically,return,a,map,from,em,realm,type,em,to,code,factory,code;public,static,map,string,realm,factory,get,factories,thread,pool,thread,pool,resource,watcher,service,resource,watcher,service,sslservice,ssl,service,native,users,store,native,users,store,native,role,mapping,store,native,role,mapping,store,security,lifecycle,service,security,lifecycle,service,map,string,realm,factory,map,new,hash,map,map,put,file,realm,settings,type,config,new,file,realm,config,resource,watcher,service,map,put,native,realm,settings,type,config,final,native,realm,native,realm,new,native,realm,config,native,users,store,security,lifecycle,service,security,index,add,index,health,change,listener,native,realm,on,security,index,health,change,return,native,realm,map,put,ldap,realm,settings,config,new,ldap,realm,ldap,realm,settings,config,ssl,service,resource,watcher,service,native,role,mapping,store,thread,pool,map,put,ldap,realm,settings,config,new,ldap,realm,ldap,realm,settings,config,ssl,service,resource,watcher,service,native,role,mapping,store,thread,pool,map,put,pki,realm,settings,type,config,new,pki,realm,config,resource,watcher,service,native,role,mapping,store,map,put,saml,realm,settings,type,config,saml,realm,create,config,ssl,service,resource,watcher,service,native,role,mapping,store,return,collections,unmodifiable,map,map
InternalRealms -> public static Map<String, Realm.Factory> getFactories(ThreadPool threadPool, ResourceWatcherService resourceWatcherService,                                                           SSLService sslService, NativeUsersStore nativeUsersStore,                                                           NativeRoleMappingStore nativeRoleMappingStore,                                                           SecurityLifecycleService securityLifecycleService);1526029249;Creates {@link Realm.Factory factories} for each <em>internal</em> realm type._This excludes the {@link ReservedRealm}, as it cannot be created dynamically._@return A map from <em>realm-type</em> to <code>Factory</code>;public static Map<String, Realm.Factory> getFactories(ThreadPool threadPool, ResourceWatcherService resourceWatcherService,_                                                          SSLService sslService, NativeUsersStore nativeUsersStore,_                                                          NativeRoleMappingStore nativeRoleMappingStore,_                                                          SecurityLifecycleService securityLifecycleService) {__        Map<String, Realm.Factory> map = new HashMap<>()__        map.put(FileRealmSettings.TYPE, config -> new FileRealm(config, resourceWatcherService))__        map.put(NativeRealmSettings.TYPE, config -> {_            final NativeRealm nativeRealm = new NativeRealm(config, nativeUsersStore)__            securityLifecycleService.securityIndex().addIndexStateListener(nativeRealm::onSecurityIndexStateChange)__            return nativeRealm__        })__        map.put(LdapRealmSettings.AD_TYPE, config -> new LdapRealm(LdapRealmSettings.AD_TYPE, config, sslService,_                resourceWatcherService, nativeRoleMappingStore, threadPool))__        map.put(LdapRealmSettings.LDAP_TYPE, config -> new LdapRealm(LdapRealmSettings.LDAP_TYPE, config,_                sslService, resourceWatcherService, nativeRoleMappingStore, threadPool))__        map.put(PkiRealmSettings.TYPE, config -> new PkiRealm(config, resourceWatcherService, nativeRoleMappingStore))__        map.put(SamlRealmSettings.TYPE, config -> SamlRealm.create(config, sslService, resourceWatcherService, nativeRoleMappingStore))__        return Collections.unmodifiableMap(map)__    };creates,link,realm,factory,factories,for,each,em,internal,em,realm,type,this,excludes,the,link,reserved,realm,as,it,cannot,be,created,dynamically,return,a,map,from,em,realm,type,em,to,code,factory,code;public,static,map,string,realm,factory,get,factories,thread,pool,thread,pool,resource,watcher,service,resource,watcher,service,sslservice,ssl,service,native,users,store,native,users,store,native,role,mapping,store,native,role,mapping,store,security,lifecycle,service,security,lifecycle,service,map,string,realm,factory,map,new,hash,map,map,put,file,realm,settings,type,config,new,file,realm,config,resource,watcher,service,map,put,native,realm,settings,type,config,final,native,realm,native,realm,new,native,realm,config,native,users,store,security,lifecycle,service,security,index,add,index,state,listener,native,realm,on,security,index,state,change,return,native,realm,map,put,ldap,realm,settings,config,new,ldap,realm,ldap,realm,settings,config,ssl,service,resource,watcher,service,native,role,mapping,store,thread,pool,map,put,ldap,realm,settings,config,new,ldap,realm,ldap,realm,settings,config,ssl,service,resource,watcher,service,native,role,mapping,store,thread,pool,map,put,pki,realm,settings,type,config,new,pki,realm,config,resource,watcher,service,native,role,mapping,store,map,put,saml,realm,settings,type,config,saml,realm,create,config,ssl,service,resource,watcher,service,native,role,mapping,store,return,collections,unmodifiable,map,map
InternalRealms -> static boolean isXPackRealm(String type);1524684173;Determines whether <code>type</code> is an internal realm-type that is provided by x-pack,_including the {@link ReservedRealm};static boolean isXPackRealm(String type) {_        if (XPACK_TYPES.contains(type)) {_            return true__        }_        return ReservedRealm.TYPE.equals(type)__    };determines,whether,code,type,code,is,an,internal,realm,type,that,is,provided,by,x,pack,including,the,link,reserved,realm;static,boolean,is,xpack,realm,string,type,if,contains,type,return,true,return,reserved,realm,type,equals,type
InternalRealms -> static boolean isXPackRealm(String type);1525859433;Determines whether <code>type</code> is an internal realm-type that is provided by x-pack,_including the {@link ReservedRealm};static boolean isXPackRealm(String type) {_        if (XPACK_TYPES.contains(type)) {_            return true__        }_        return ReservedRealm.TYPE.equals(type)__    };determines,whether,code,type,code,is,an,internal,realm,type,that,is,provided,by,x,pack,including,the,link,reserved,realm;static,boolean,is,xpack,realm,string,type,if,contains,type,return,true,return,reserved,realm,type,equals,type
InternalRealms -> static boolean isXPackRealm(String type);1526029249;Determines whether <code>type</code> is an internal realm-type that is provided by x-pack,_including the {@link ReservedRealm};static boolean isXPackRealm(String type) {_        if (XPACK_TYPES.contains(type)) {_            return true__        }_        return ReservedRealm.TYPE.equals(type)__    };determines,whether,code,type,code,is,an,internal,realm,type,that,is,provided,by,x,pack,including,the,link,reserved,realm;static,boolean,is,xpack,realm,string,type,if,contains,type,return,true,return,reserved,realm,type,equals,type
InternalRealms -> static boolean isXPackRealm(String type);1526449283;Determines whether <code>type</code> is an internal realm-type that is provided by x-pack,_including the {@link ReservedRealm};static boolean isXPackRealm(String type) {_        if (XPACK_TYPES.contains(type)) {_            return true__        }_        return ReservedRealm.TYPE.equals(type)__    };determines,whether,code,type,code,is,an,internal,realm,type,that,is,provided,by,x,pack,including,the,link,reserved,realm;static,boolean,is,xpack,realm,string,type,if,contains,type,return,true,return,reserved,realm,type,equals,type
InternalRealms -> static boolean isXPackRealm(String type);1527207653;Determines whether <code>type</code> is an internal realm-type that is provided by x-pack,_including the {@link ReservedRealm};static boolean isXPackRealm(String type) {_        if (XPACK_TYPES.contains(type)) {_            return true__        }_        return ReservedRealm.TYPE.equals(type)__    };determines,whether,code,type,code,is,an,internal,realm,type,that,is,provided,by,x,pack,including,the,link,reserved,realm;static,boolean,is,xpack,realm,string,type,if,contains,type,return,true,return,reserved,realm,type,equals,type
InternalRealms -> static boolean isXPackRealm(String type);1532456624;Determines whether <code>type</code> is an internal realm-type that is provided by x-pack,_including the {@link ReservedRealm};static boolean isXPackRealm(String type) {_        if (XPACK_TYPES.contains(type)) {_            return true__        }_        return ReservedRealm.TYPE.equals(type)__    };determines,whether,code,type,code,is,an,internal,realm,type,that,is,provided,by,x,pack,including,the,link,reserved,realm;static,boolean,is,xpack,realm,string,type,if,contains,type,return,true,return,reserved,realm,type,equals,type
InternalRealms -> static boolean isXPackRealm(String type);1541476610;Determines whether <code>type</code> is an internal realm-type that is provided by x-pack,_including the {@link ReservedRealm};static boolean isXPackRealm(String type) {_        if (XPACK_TYPES.contains(type)) {_            return true__        }_        return ReservedRealm.TYPE.equals(type)__    };determines,whether,code,type,code,is,an,internal,realm,type,that,is,provided,by,x,pack,including,the,link,reserved,realm;static,boolean,is,xpack,realm,string,type,if,contains,type,return,true,return,reserved,realm,type,equals,type
InternalRealms -> static boolean isXPackRealm(String type);1543475212;Determines whether <code>type</code> is an internal realm-type that is provided by x-pack,_including the {@link ReservedRealm};static boolean isXPackRealm(String type) {_        if (XPACK_TYPES.contains(type)) {_            return true__        }_        return ReservedRealm.TYPE.equals(type)__    };determines,whether,code,type,code,is,an,internal,realm,type,that,is,provided,by,x,pack,including,the,link,reserved,realm;static,boolean,is,xpack,realm,string,type,if,contains,type,return,true,return,reserved,realm,type,equals,type
InternalRealms -> public static Map<String, Realm.Factory> getFactories(ThreadPool threadPool, ResourceWatcherService resourceWatcherService,                                                           SSLService sslService, NativeUsersStore nativeUsersStore,                                                           NativeRoleMappingStore nativeRoleMappingStore,                                                           SecurityIndexManager securityIndex);1526449283;Creates {@link Realm.Factory factories} for each <em>internal</em> realm type._This excludes the {@link ReservedRealm}, as it cannot be created dynamically._@return A map from <em>realm-type</em> to <code>Factory</code>;public static Map<String, Realm.Factory> getFactories(ThreadPool threadPool, ResourceWatcherService resourceWatcherService,_                                                          SSLService sslService, NativeUsersStore nativeUsersStore,_                                                          NativeRoleMappingStore nativeRoleMappingStore,_                                                          SecurityIndexManager securityIndex) {__        Map<String, Realm.Factory> map = new HashMap<>()__        map.put(FileRealmSettings.TYPE, config -> new FileRealm(config, resourceWatcherService))__        map.put(NativeRealmSettings.TYPE, config -> {_            final NativeRealm nativeRealm = new NativeRealm(config, nativeUsersStore)__            securityIndex.addIndexStateListener(nativeRealm::onSecurityIndexStateChange)__            return nativeRealm__        })__        map.put(LdapRealmSettings.AD_TYPE, config -> new LdapRealm(LdapRealmSettings.AD_TYPE, config, sslService,_                resourceWatcherService, nativeRoleMappingStore, threadPool))__        map.put(LdapRealmSettings.LDAP_TYPE, config -> new LdapRealm(LdapRealmSettings.LDAP_TYPE, config,_                sslService, resourceWatcherService, nativeRoleMappingStore, threadPool))__        map.put(PkiRealmSettings.TYPE, config -> new PkiRealm(config, resourceWatcherService, nativeRoleMappingStore))__        map.put(SamlRealmSettings.TYPE, config -> SamlRealm.create(config, sslService, resourceWatcherService, nativeRoleMappingStore))__        return Collections.unmodifiableMap(map)__    };creates,link,realm,factory,factories,for,each,em,internal,em,realm,type,this,excludes,the,link,reserved,realm,as,it,cannot,be,created,dynamically,return,a,map,from,em,realm,type,em,to,code,factory,code;public,static,map,string,realm,factory,get,factories,thread,pool,thread,pool,resource,watcher,service,resource,watcher,service,sslservice,ssl,service,native,users,store,native,users,store,native,role,mapping,store,native,role,mapping,store,security,index,manager,security,index,map,string,realm,factory,map,new,hash,map,map,put,file,realm,settings,type,config,new,file,realm,config,resource,watcher,service,map,put,native,realm,settings,type,config,final,native,realm,native,realm,new,native,realm,config,native,users,store,security,index,add,index,state,listener,native,realm,on,security,index,state,change,return,native,realm,map,put,ldap,realm,settings,config,new,ldap,realm,ldap,realm,settings,config,ssl,service,resource,watcher,service,native,role,mapping,store,thread,pool,map,put,ldap,realm,settings,config,new,ldap,realm,ldap,realm,settings,config,ssl,service,resource,watcher,service,native,role,mapping,store,thread,pool,map,put,pki,realm,settings,type,config,new,pki,realm,config,resource,watcher,service,native,role,mapping,store,map,put,saml,realm,settings,type,config,saml,realm,create,config,ssl,service,resource,watcher,service,native,role,mapping,store,return,collections,unmodifiable,map,map
InternalRealms -> public static Map<String, Realm.Factory> getFactories(ThreadPool threadPool, ResourceWatcherService resourceWatcherService,                                                           SSLService sslService, NativeUsersStore nativeUsersStore,                                                           NativeRoleMappingStore nativeRoleMappingStore,                                                           SecurityIndexManager securityIndex);1527207653;Creates {@link Realm.Factory factories} for each <em>internal</em> realm type._This excludes the {@link ReservedRealm}, as it cannot be created dynamically._@return A map from <em>realm-type</em> to <code>Factory</code>;public static Map<String, Realm.Factory> getFactories(ThreadPool threadPool, ResourceWatcherService resourceWatcherService,_                                                          SSLService sslService, NativeUsersStore nativeUsersStore,_                                                          NativeRoleMappingStore nativeRoleMappingStore,_                                                          SecurityIndexManager securityIndex) {__        Map<String, Realm.Factory> map = new HashMap<>()__        map.put(FileRealmSettings.TYPE, config -> new FileRealm(config, resourceWatcherService, threadPool))__        map.put(NativeRealmSettings.TYPE, config -> {_            final NativeRealm nativeRealm = new NativeRealm(config, nativeUsersStore, threadPool)__            securityIndex.addIndexStateListener(nativeRealm::onSecurityIndexStateChange)__            return nativeRealm__        })__        map.put(LdapRealmSettings.AD_TYPE, config -> new LdapRealm(LdapRealmSettings.AD_TYPE, config, sslService,_                resourceWatcherService, nativeRoleMappingStore, threadPool))__        map.put(LdapRealmSettings.LDAP_TYPE, config -> new LdapRealm(LdapRealmSettings.LDAP_TYPE, config,_                sslService, resourceWatcherService, nativeRoleMappingStore, threadPool))__        map.put(PkiRealmSettings.TYPE, config -> new PkiRealm(config, resourceWatcherService, nativeRoleMappingStore))__        map.put(SamlRealmSettings.TYPE, config -> SamlRealm.create(config, sslService, resourceWatcherService, nativeRoleMappingStore))__        return Collections.unmodifiableMap(map)__    };creates,link,realm,factory,factories,for,each,em,internal,em,realm,type,this,excludes,the,link,reserved,realm,as,it,cannot,be,created,dynamically,return,a,map,from,em,realm,type,em,to,code,factory,code;public,static,map,string,realm,factory,get,factories,thread,pool,thread,pool,resource,watcher,service,resource,watcher,service,sslservice,ssl,service,native,users,store,native,users,store,native,role,mapping,store,native,role,mapping,store,security,index,manager,security,index,map,string,realm,factory,map,new,hash,map,map,put,file,realm,settings,type,config,new,file,realm,config,resource,watcher,service,thread,pool,map,put,native,realm,settings,type,config,final,native,realm,native,realm,new,native,realm,config,native,users,store,thread,pool,security,index,add,index,state,listener,native,realm,on,security,index,state,change,return,native,realm,map,put,ldap,realm,settings,config,new,ldap,realm,ldap,realm,settings,config,ssl,service,resource,watcher,service,native,role,mapping,store,thread,pool,map,put,ldap,realm,settings,config,new,ldap,realm,ldap,realm,settings,config,ssl,service,resource,watcher,service,native,role,mapping,store,thread,pool,map,put,pki,realm,settings,type,config,new,pki,realm,config,resource,watcher,service,native,role,mapping,store,map,put,saml,realm,settings,type,config,saml,realm,create,config,ssl,service,resource,watcher,service,native,role,mapping,store,return,collections,unmodifiable,map,map
InternalRealms -> public static Map<String, Realm.Factory> getFactories(ThreadPool threadPool, ResourceWatcherService resourceWatcherService,                                                           SSLService sslService, NativeUsersStore nativeUsersStore,                                                           NativeRoleMappingStore nativeRoleMappingStore,                                                           SecurityIndexManager securityIndex);1532456624;Creates {@link Realm.Factory factories} for each <em>internal</em> realm type._This excludes the {@link ReservedRealm}, as it cannot be created dynamically._@return A map from <em>realm-type</em> to <code>Factory</code>;public static Map<String, Realm.Factory> getFactories(ThreadPool threadPool, ResourceWatcherService resourceWatcherService,_                                                          SSLService sslService, NativeUsersStore nativeUsersStore,_                                                          NativeRoleMappingStore nativeRoleMappingStore,_                                                          SecurityIndexManager securityIndex) {__        Map<String, Realm.Factory> map = new HashMap<>()__        map.put(FileRealmSettings.TYPE, config -> new FileRealm(config, resourceWatcherService, threadPool))__        map.put(NativeRealmSettings.TYPE, config -> {_            final NativeRealm nativeRealm = new NativeRealm(config, nativeUsersStore, threadPool)__            securityIndex.addIndexStateListener(nativeRealm::onSecurityIndexStateChange)__            return nativeRealm__        })__        map.put(LdapRealmSettings.AD_TYPE, config -> new LdapRealm(LdapRealmSettings.AD_TYPE, config, sslService,_                resourceWatcherService, nativeRoleMappingStore, threadPool))__        map.put(LdapRealmSettings.LDAP_TYPE, config -> new LdapRealm(LdapRealmSettings.LDAP_TYPE, config,_                sslService, resourceWatcherService, nativeRoleMappingStore, threadPool))__        map.put(PkiRealmSettings.TYPE, config -> new PkiRealm(config, resourceWatcherService, nativeRoleMappingStore))__        map.put(SamlRealmSettings.TYPE, config -> SamlRealm.create(config, sslService, resourceWatcherService, nativeRoleMappingStore))__        map.put(KerberosRealmSettings.TYPE, config -> new KerberosRealm(config, nativeRoleMappingStore, threadPool))__        return Collections.unmodifiableMap(map)__    };creates,link,realm,factory,factories,for,each,em,internal,em,realm,type,this,excludes,the,link,reserved,realm,as,it,cannot,be,created,dynamically,return,a,map,from,em,realm,type,em,to,code,factory,code;public,static,map,string,realm,factory,get,factories,thread,pool,thread,pool,resource,watcher,service,resource,watcher,service,sslservice,ssl,service,native,users,store,native,users,store,native,role,mapping,store,native,role,mapping,store,security,index,manager,security,index,map,string,realm,factory,map,new,hash,map,map,put,file,realm,settings,type,config,new,file,realm,config,resource,watcher,service,thread,pool,map,put,native,realm,settings,type,config,final,native,realm,native,realm,new,native,realm,config,native,users,store,thread,pool,security,index,add,index,state,listener,native,realm,on,security,index,state,change,return,native,realm,map,put,ldap,realm,settings,config,new,ldap,realm,ldap,realm,settings,config,ssl,service,resource,watcher,service,native,role,mapping,store,thread,pool,map,put,ldap,realm,settings,config,new,ldap,realm,ldap,realm,settings,config,ssl,service,resource,watcher,service,native,role,mapping,store,thread,pool,map,put,pki,realm,settings,type,config,new,pki,realm,config,resource,watcher,service,native,role,mapping,store,map,put,saml,realm,settings,type,config,saml,realm,create,config,ssl,service,resource,watcher,service,native,role,mapping,store,map,put,kerberos,realm,settings,type,config,new,kerberos,realm,config,native,role,mapping,store,thread,pool,return,collections,unmodifiable,map,map
InternalRealms -> public static Map<String, Realm.Factory> getFactories(ThreadPool threadPool, ResourceWatcherService resourceWatcherService,                                                           SSLService sslService, NativeUsersStore nativeUsersStore,                                                           NativeRoleMappingStore nativeRoleMappingStore,                                                           SecurityIndexManager securityIndex);1541476610;Creates {@link Realm.Factory factories} for each <em>internal</em> realm type._This excludes the {@link ReservedRealm}, as it cannot be created dynamically._@return A map from <em>realm-type</em> to <code>Factory</code>;public static Map<String, Realm.Factory> getFactories(ThreadPool threadPool, ResourceWatcherService resourceWatcherService,_                                                          SSLService sslService, NativeUsersStore nativeUsersStore,_                                                          NativeRoleMappingStore nativeRoleMappingStore,_                                                          SecurityIndexManager securityIndex) {__        Map<String, Realm.Factory> map = new HashMap<>()__        map.put(FileRealmSettings.TYPE, config -> new FileRealm(config, resourceWatcherService, threadPool))__        map.put(NativeRealmSettings.TYPE, config -> {_            final NativeRealm nativeRealm = new NativeRealm(config, nativeUsersStore, threadPool)__            securityIndex.addIndexStateListener(nativeRealm::onSecurityIndexStateChange)__            return nativeRealm__        })__        map.put(LdapRealmSettings.AD_TYPE, config -> new LdapRealm(config, sslService,_                resourceWatcherService, nativeRoleMappingStore, threadPool))__        map.put(LdapRealmSettings.LDAP_TYPE, config -> new LdapRealm(config,_                sslService, resourceWatcherService, nativeRoleMappingStore, threadPool))__        map.put(PkiRealmSettings.TYPE, config -> new PkiRealm(config, resourceWatcherService, nativeRoleMappingStore))__        map.put(SamlRealmSettings.TYPE, config -> SamlRealm.create(config, sslService, resourceWatcherService, nativeRoleMappingStore))__        map.put(KerberosRealmSettings.TYPE, config -> new KerberosRealm(config, nativeRoleMappingStore, threadPool))__        return Collections.unmodifiableMap(map)__    };creates,link,realm,factory,factories,for,each,em,internal,em,realm,type,this,excludes,the,link,reserved,realm,as,it,cannot,be,created,dynamically,return,a,map,from,em,realm,type,em,to,code,factory,code;public,static,map,string,realm,factory,get,factories,thread,pool,thread,pool,resource,watcher,service,resource,watcher,service,sslservice,ssl,service,native,users,store,native,users,store,native,role,mapping,store,native,role,mapping,store,security,index,manager,security,index,map,string,realm,factory,map,new,hash,map,map,put,file,realm,settings,type,config,new,file,realm,config,resource,watcher,service,thread,pool,map,put,native,realm,settings,type,config,final,native,realm,native,realm,new,native,realm,config,native,users,store,thread,pool,security,index,add,index,state,listener,native,realm,on,security,index,state,change,return,native,realm,map,put,ldap,realm,settings,config,new,ldap,realm,config,ssl,service,resource,watcher,service,native,role,mapping,store,thread,pool,map,put,ldap,realm,settings,config,new,ldap,realm,config,ssl,service,resource,watcher,service,native,role,mapping,store,thread,pool,map,put,pki,realm,settings,type,config,new,pki,realm,config,resource,watcher,service,native,role,mapping,store,map,put,saml,realm,settings,type,config,saml,realm,create,config,ssl,service,resource,watcher,service,native,role,mapping,store,map,put,kerberos,realm,settings,type,config,new,kerberos,realm,config,native,role,mapping,store,thread,pool,return,collections,unmodifiable,map,map
InternalRealms -> public static Map<String, Realm.Factory> getFactories(ThreadPool threadPool, ResourceWatcherService resourceWatcherService,                                                           SSLService sslService, NativeUsersStore nativeUsersStore,                                                           NativeRoleMappingStore nativeRoleMappingStore,                                                           SecurityIndexManager securityIndex);1543475212;Creates {@link Realm.Factory factories} for each <em>internal</em> realm type._This excludes the {@link ReservedRealm}, as it cannot be created dynamically._@return A map from <em>realm-type</em> to <code>Factory</code>;public static Map<String, Realm.Factory> getFactories(ThreadPool threadPool, ResourceWatcherService resourceWatcherService,_                                                          SSLService sslService, NativeUsersStore nativeUsersStore,_                                                          NativeRoleMappingStore nativeRoleMappingStore,_                                                          SecurityIndexManager securityIndex) {__        Map<String, Realm.Factory> map = new HashMap<>()__        map.put(FileRealmSettings.TYPE, config -> new FileRealm(config, resourceWatcherService, threadPool))__        map.put(NativeRealmSettings.TYPE, config -> {_            final NativeRealm nativeRealm = new NativeRealm(config, nativeUsersStore, threadPool)__            securityIndex.addIndexStateListener(nativeRealm::onSecurityIndexStateChange)__            return nativeRealm__        })__        map.put(LdapRealmSettings.AD_TYPE, config -> new LdapRealm(config, sslService,_                resourceWatcherService, nativeRoleMappingStore, threadPool))__        map.put(LdapRealmSettings.LDAP_TYPE, config -> new LdapRealm(config,_                sslService, resourceWatcherService, nativeRoleMappingStore, threadPool))__        map.put(PkiRealmSettings.TYPE, config -> new PkiRealm(config, resourceWatcherService, nativeRoleMappingStore))__        map.put(SamlRealmSettings.TYPE, config -> SamlRealm.create(config, sslService, resourceWatcherService, nativeRoleMappingStore))__        map.put(KerberosRealmSettings.TYPE, config -> new KerberosRealm(config, nativeRoleMappingStore, threadPool))__        return Collections.unmodifiableMap(map)__    };creates,link,realm,factory,factories,for,each,em,internal,em,realm,type,this,excludes,the,link,reserved,realm,as,it,cannot,be,created,dynamically,return,a,map,from,em,realm,type,em,to,code,factory,code;public,static,map,string,realm,factory,get,factories,thread,pool,thread,pool,resource,watcher,service,resource,watcher,service,sslservice,ssl,service,native,users,store,native,users,store,native,role,mapping,store,native,role,mapping,store,security,index,manager,security,index,map,string,realm,factory,map,new,hash,map,map,put,file,realm,settings,type,config,new,file,realm,config,resource,watcher,service,thread,pool,map,put,native,realm,settings,type,config,final,native,realm,native,realm,new,native,realm,config,native,users,store,thread,pool,security,index,add,index,state,listener,native,realm,on,security,index,state,change,return,native,realm,map,put,ldap,realm,settings,config,new,ldap,realm,config,ssl,service,resource,watcher,service,native,role,mapping,store,thread,pool,map,put,ldap,realm,settings,config,new,ldap,realm,config,ssl,service,resource,watcher,service,native,role,mapping,store,thread,pool,map,put,pki,realm,settings,type,config,new,pki,realm,config,resource,watcher,service,native,role,mapping,store,map,put,saml,realm,settings,type,config,saml,realm,create,config,ssl,service,resource,watcher,service,native,role,mapping,store,map,put,kerberos,realm,settings,type,config,new,kerberos,realm,config,native,role,mapping,store,thread,pool,return,collections,unmodifiable,map,map
