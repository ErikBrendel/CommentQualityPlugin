commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;5;;@Override protected ClearRealmCacheResponse newResponse(ClearRealmCacheRequest request, List<ClearRealmCacheResponse.Node> responses, List<FailedNodeException> failures) {     return new ClearRealmCacheResponse(clusterService.getClusterName(), responses, failures). }
false;protected;2;4;;@Override protected ClearRealmCacheRequest.Node newNodeRequest(String nodeId, ClearRealmCacheRequest request) {     return new ClearRealmCacheRequest.Node(request, nodeId). }
false;protected;0;4;;@Override protected ClearRealmCacheResponse.Node newNodeResponse() {     return new ClearRealmCacheResponse.Node(). }
false;protected;1;19;;@Override protected ClearRealmCacheResponse.Node nodeOperation(ClearRealmCacheRequest.Node nodeRequest) throws ElasticsearchException {     if (nodeRequest.getRealms() == null || nodeRequest.getRealms().length == 0) {         for (Realm realm : realms) {             clearCache(realm, nodeRequest.getUsernames()).         }         return new ClearRealmCacheResponse.Node(clusterService.localNode()).     }     for (String realmName : nodeRequest.getRealms()) {         Realm realm = realms.realm(realmName).         if (realm == null) {             throw new IllegalArgumentException("could not find active realm [" + realmName + "]").         }         clearCache(realm, nodeRequest.getUsernames()).     }     clearAuthenticationServiceCache(nodeRequest.getUsernames()).     return new ClearRealmCacheResponse.Node(clusterService.localNode()). }
false;private;1;12;;private void clearAuthenticationServiceCache(String[] usernames) {     // entries that referenced the specific realm     if (usernames != null && usernames.length != 0) {         for (String username : usernames) {             authenticationService.expire(username).         }     } else {         authenticationService.expireAll().     } }
false;private;2;14;;private void clearCache(Realm realm, String[] usernames) {     if (!(realm instanceof CachingRealm)) {         return.     }     CachingRealm cachingRealm = (CachingRealm) realm.     if (usernames != null && usernames.length != 0) {         for (String username : usernames) {             cachingRealm.expire(username).         }     } else {         cachingRealm.expireAll().     } }
