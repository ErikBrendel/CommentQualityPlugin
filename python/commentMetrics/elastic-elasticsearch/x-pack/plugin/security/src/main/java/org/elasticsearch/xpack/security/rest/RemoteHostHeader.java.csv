commented;modifiers;parameterAmount;loc;comment;code
true;public,static;2;3;/**  * Extracts the remote address from the given rest request and puts in the request context. This will  * then be copied to the subsequent action requests.  */ ;/**  * Extracts the remote address from the given rest request and puts in the request context. This will  * then be copied to the subsequent action requests.  */ public static void process(RestRequest request, ThreadContext threadContext) {     threadContext.putTransient(KEY, request.getHttpChannel().getRemoteAddress()). }
true;public,static;1;7;/**  * Extracts the rest remote address from the message context. If not found, returns {@code null}. transport  * messages that were created by rest handlers, should have this in their context.  */ ;/**  * Extracts the rest remote address from the message context. If not found, returns {@code null}. transport  * messages that were created by rest handlers, should have this in their context.  */ public static InetSocketAddress restRemoteAddress(ThreadContext threadContext) {     SocketAddress address = threadContext.getTransient(KEY).     if (address != null && address instanceof InetSocketAddress) {         return (InetSocketAddress) address.     }     return null. }
false;public,static;2;3;;public static void putRestRemoteAddress(ThreadContext threadContext, SocketAddress address) {     threadContext.putTransient(KEY, address). }
