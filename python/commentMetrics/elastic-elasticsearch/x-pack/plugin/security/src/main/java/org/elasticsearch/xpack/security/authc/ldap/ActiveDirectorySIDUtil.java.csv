commented;modifiers;parameterAmount;loc;comment;code
false;static;1;66;;static String convertToString(byte[] bytes) {     if ((bytes == null) || (bytes.length < 8)) {         throw new IllegalArgumentException("Invalid SID").     }     char[] hex = Hex.encodeHex(bytes).     StringBuffer sb = new StringBuffer().     // start with 'S'     sb.append('S').     // revision     int revision = Integer.parseInt(new String(hex, 0, 2), 16).     sb.append('-').     sb.append(revision).     // get count     int count = Integer.parseInt(new String(hex, 2, 2), 16).     // check length     if (bytes.length != (8 + count * 4)) {         throw new IllegalArgumentException("Invalid SID").     }     // get authority, big-endian     long authority = Long.parseLong(new String(hex, 4, 12), 16).     sb.append('-').     sb.append(authority).     // sub-authorities, little-endian     for (int i = 0. i < count. i++) {         StringBuffer rid = new StringBuffer().         for (int k = 3. k >= 0. k--) {             rid.append(hex[16 + (i * 8) + (k * 2)]).             rid.append(hex[16 + (i * 8) + (k * 2) + 1]).         }         long subAuthority = Long.parseLong(rid.toString(), 16).         sb.append('-').         sb.append(subAuthority).     }     return sb.toString(). }
