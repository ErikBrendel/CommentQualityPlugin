# id;timestamp;commentText;codeText;commentWords;codeWords
FIPS140PasswordHashingAlgorithmBootstrapCheck -> @Override     public BootstrapCheckResult check(final BootstrapContext context);1532598597;Test if the node fails the check.__@param context the bootstrap context_@return the result of the bootstrap check;@Override_    public BootstrapCheckResult check(final BootstrapContext context) {_        if (fipsModeEnabled) {_            final String selectedAlgorithm = XPackSettings.PASSWORD_HASHING_ALGORITHM.get(context.settings)__            if (selectedAlgorithm.toLowerCase(Locale.ROOT).startsWith("pbkdf2") == false) {_                return BootstrapCheckResult.failure("Only PBKDF2 is allowed for password hashing in a FIPS-140 JVM. Please set the " +_                        "appropriate value for [ " + XPackSettings.PASSWORD_HASHING_ALGORITHM.getKey() + " ] setting.")__            }_        }_        return BootstrapCheckResult.success()__    };test,if,the,node,fails,the,check,param,context,the,bootstrap,context,return,the,result,of,the,bootstrap,check;override,public,bootstrap,check,result,check,final,bootstrap,context,context,if,fips,mode,enabled,final,string,selected,algorithm,xpack,settings,get,context,settings,if,selected,algorithm,to,lower,case,locale,root,starts,with,pbkdf2,false,return,bootstrap,check,result,failure,only,pbkdf2,is,allowed,for,password,hashing,in,a,fips,140,jvm,please,set,the,appropriate,value,for,xpack,settings,get,key,setting,return,bootstrap,check,result,success
FIPS140PasswordHashingAlgorithmBootstrapCheck -> @Override     public BootstrapCheckResult check(final BootstrapContext context);1533063033;Test if the node fails the check.__@param context the bootstrap context_@return the result of the bootstrap check;@Override_    public BootstrapCheckResult check(final BootstrapContext context) {_        if (fipsModeEnabled) {_            final String selectedAlgorithm = XPackSettings.PASSWORD_HASHING_ALGORITHM.get(context.settings)__            if (selectedAlgorithm.toLowerCase(Locale.ROOT).startsWith("pbkdf2") == false) {_                return BootstrapCheckResult.failure("Only PBKDF2 is allowed for password hashing in a FIPS-140 JVM. Please set the " +_                        "appropriate value for [ " + XPackSettings.PASSWORD_HASHING_ALGORITHM.getKey() + " ] setting.")__            }_        }_        return BootstrapCheckResult.success()__    };test,if,the,node,fails,the,check,param,context,the,bootstrap,context,return,the,result,of,the,bootstrap,check;override,public,bootstrap,check,result,check,final,bootstrap,context,context,if,fips,mode,enabled,final,string,selected,algorithm,xpack,settings,get,context,settings,if,selected,algorithm,to,lower,case,locale,root,starts,with,pbkdf2,false,return,bootstrap,check,result,failure,only,pbkdf2,is,allowed,for,password,hashing,in,a,fips,140,jvm,please,set,the,appropriate,value,for,xpack,settings,get,key,setting,return,bootstrap,check,result,success
FIPS140PasswordHashingAlgorithmBootstrapCheck -> @Override     public BootstrapCheckResult check(final BootstrapContext context);1534848846;Test if the node fails the check.__@param context the bootstrap context_@return the result of the bootstrap check;@Override_    public BootstrapCheckResult check(final BootstrapContext context) {_        if (XPackSettings.FIPS_MODE_ENABLED.get(context.settings)) {_            final String selectedAlgorithm = XPackSettings.PASSWORD_HASHING_ALGORITHM.get(context.settings)__            if (selectedAlgorithm.toLowerCase(Locale.ROOT).startsWith("pbkdf2") == false) {_                return BootstrapCheckResult.failure("Only PBKDF2 is allowed for password hashing in a FIPS-140 JVM. Please set the " +_                        "appropriate value for [ " + XPackSettings.PASSWORD_HASHING_ALGORITHM.getKey() + " ] setting.")__            }_        }_        return BootstrapCheckResult.success()__    };test,if,the,node,fails,the,check,param,context,the,bootstrap,context,return,the,result,of,the,bootstrap,check;override,public,bootstrap,check,result,check,final,bootstrap,context,context,if,xpack,settings,get,context,settings,final,string,selected,algorithm,xpack,settings,get,context,settings,if,selected,algorithm,to,lower,case,locale,root,starts,with,pbkdf2,false,return,bootstrap,check,result,failure,only,pbkdf2,is,allowed,for,password,hashing,in,a,fips,140,jvm,please,set,the,appropriate,value,for,xpack,settings,get,key,setting,return,bootstrap,check,result,success
FIPS140PasswordHashingAlgorithmBootstrapCheck -> @Override     public BootstrapCheckResult check(final BootstrapContext context);1544677641;Test if the node fails the check.__@param context the bootstrap context_@return the result of the bootstrap check;@Override_    public BootstrapCheckResult check(final BootstrapContext context) {_        if (XPackSettings.FIPS_MODE_ENABLED.get(context.settings())) {_            final String selectedAlgorithm = XPackSettings.PASSWORD_HASHING_ALGORITHM.get(context.settings())__            if (selectedAlgorithm.toLowerCase(Locale.ROOT).startsWith("pbkdf2") == false) {_                return BootstrapCheckResult.failure("Only PBKDF2 is allowed for password hashing in a FIPS-140 JVM. Please set the " +_                        "appropriate value for [ " + XPackSettings.PASSWORD_HASHING_ALGORITHM.getKey() + " ] setting.")__            }_        }_        return BootstrapCheckResult.success()__    };test,if,the,node,fails,the,check,param,context,the,bootstrap,context,return,the,result,of,the,bootstrap,check;override,public,bootstrap,check,result,check,final,bootstrap,context,context,if,xpack,settings,get,context,settings,final,string,selected,algorithm,xpack,settings,get,context,settings,if,selected,algorithm,to,lower,case,locale,root,starts,with,pbkdf2,false,return,bootstrap,check,result,failure,only,pbkdf2,is,allowed,for,password,hashing,in,a,fips,140,jvm,please,set,the,appropriate,value,for,xpack,settings,get,key,setting,return,bootstrap,check,result,success
