commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "security_get_role_mappings_action". }
false;public;2;15;;@Override public RestResponse buildResponse(GetRoleMappingsResponse response, XContentBuilder builder) throws Exception {     builder.startObject().     for (ExpressionRoleMapping mapping : response.mappings()) {         builder.field(mapping.getName(), mapping).     }     builder.endObject().     // if the request specified mapping names, but nothing was found then return a 404 result     if (names.length != 0 && response.mappings().length == 0) {         return new BytesRestResponse(RestStatus.NOT_FOUND, builder).     } else {         return new BytesRestResponse(RestStatus.OK, builder).     } }
false;public;2;22;;@Override public RestChannelConsumer innerPrepareRequest(RestRequest request, NodeClient client) throws IOException {     final String[] names = request.paramAsStringArrayOrEmptyIfAll("name").     return channel -> new SecurityClient(client).prepareGetRoleMappings(names).execute(new RestBuilderListener<GetRoleMappingsResponse>(channel) {          @Override         public RestResponse buildResponse(GetRoleMappingsResponse response, XContentBuilder builder) throws Exception {             builder.startObject().             for (ExpressionRoleMapping mapping : response.mappings()) {                 builder.field(mapping.getName(), mapping).             }             builder.endObject().             // if the request specified mapping names, but nothing was found then return a 404 result             if (names.length != 0 && response.mappings().length == 0) {                 return new BytesRestResponse(RestStatus.NOT_FOUND, builder).             } else {                 return new BytesRestResponse(RestStatus.OK, builder).             }         }     }). }
