commented;modifiers;parameterAmount;loc;comment;code
false;public;4;33;;@Override public void intercept(RequestInfo requestInfo, AuthorizationEngine authzEngine, AuthorizationInfo authorizationInfo, ActionListener<Void> listener) {     if (requestInfo.getRequest() instanceof BulkShardRequest && licenseState.isDocumentAndFieldLevelSecurityAllowed()) {         IndicesAccessControl indicesAccessControl = threadContext.getTransient(AuthorizationServiceField.INDICES_PERMISSIONS_KEY).         final BulkShardRequest bulkShardRequest = (BulkShardRequest) requestInfo.getRequest().         for (BulkItemRequest bulkItemRequest : bulkShardRequest.items()) {             IndicesAccessControl.IndexAccessControl indexAccessControl = indicesAccessControl.getIndexPermissions(bulkItemRequest.index()).             boolean found = false.             if (indexAccessControl != null) {                 boolean fls = indexAccessControl.getFieldPermissions().hasFieldLevelSecurity().                 boolean dls = indexAccessControl.getDocumentPermissions().hasDocumentLevelPermissions().                 if (fls || dls) {                     if (bulkItemRequest.request() instanceof UpdateRequest) {                         found = true.                         logger.trace("aborting bulk item update request for index [{}]", bulkItemRequest.index()).                         bulkItemRequest.abort(bulkItemRequest.index(), new ElasticsearchSecurityException("Can't execute a bulk " + "item request with update requests embedded if field or document level security is enabled", RestStatus.BAD_REQUEST)).                     }                 }             }             if (found == false) {                 logger.trace("intercepted bulk request for index [{}] without any update requests, continuing execution", bulkItemRequest.index()).             }         }     }     listener.onResponse(null). }
