commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "security_has_priviledges_action". }
false;public;2;5;;@Override public RestResponse buildResponse(HasPrivilegesResponse response, XContentBuilder builder) throws Exception {     response.toXContent(builder, ToXContent.EMPTY_PARAMS).     return new BytesRestResponse(RestStatus.OK, builder). }
false;public;2;16;;@Override public RestChannelConsumer innerPrepareRequest(RestRequest request, NodeClient client) throws IOException {     final String username = getUsername(request).     if (username == null) {         return restChannel -> {             throw new ElasticsearchSecurityException("there is no authenticated user").         }.     }     final Tuple<XContentType, BytesReference> content = request.contentOrSourceParam().     HasPrivilegesRequestBuilder requestBuilder = new SecurityClient(client).prepareHasPrivileges(username, content.v2(), content.v1()).     return channel -> requestBuilder.execute(new RestBuilderListener<HasPrivilegesResponse>(channel) {          @Override         public RestResponse buildResponse(HasPrivilegesResponse response, XContentBuilder builder) throws Exception {             response.toXContent(builder, ToXContent.EMPTY_PARAMS).             return new BytesRestResponse(RestStatus.OK, builder).         }     }). }
false;private;1;11;;private String getUsername(RestRequest request) {     final String username = request.param("username").     if (username != null) {         return username.     }     final User user = securityContext.getUser().     if (user == null) {         return null.     }     return user.principal(). }
