commented;modifiers;parameterAmount;loc;comment;code
false;;0;21;;LogoutResponse build() {     final String destination = getLogoutUrl().     if (Strings.isNullOrEmpty(destination)) {         throw samlException("Cannot send LogoutResponse because the IDP {} does not provide a logout service", identityProvider.getEntityID()).     }     final LogoutResponse res = SamlUtils.buildObject(LogoutResponse.class, LogoutResponse.DEFAULT_ELEMENT_NAME).     res.setID(buildId()).     res.setIssueInstant(now()).     res.setDestination(destination).     res.setIssuer(buildIssuer()).     res.setInResponseTo(inResponseTo).     final Status status = SamlUtils.buildObject(Status.class, Status.DEFAULT_ELEMENT_NAME).     final StatusCode statusCode = SamlUtils.buildObject(StatusCode.class, StatusCode.DEFAULT_ELEMENT_NAME).     statusCode.setValue(this.statusValue).     status.setStatusCode(statusCode).     res.setStatus(status).     return res. }
false;protected;0;3;;protected String getLogoutUrl() {     return getIdentityProviderEndpoint(SAMLConstants.SAML2_REDIRECT_BINDING_URI, SSODescriptor::getSingleLogoutServices). }
