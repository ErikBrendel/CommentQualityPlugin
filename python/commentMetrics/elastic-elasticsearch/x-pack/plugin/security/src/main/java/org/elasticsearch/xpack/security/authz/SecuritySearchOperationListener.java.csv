# id;timestamp;commentText;codeText;commentWords;codeWords
SecuritySearchOperationListener -> @Override     public void onNewScrollContext(SearchContext searchContext);1524684173;Adds the {@link Authentication} to the {@link ScrollContext};@Override_    public void onNewScrollContext(SearchContext searchContext) {_        if (licenseState.isSecurityEnabled() && licenseState.isAuthAllowed()) {_            searchContext.scrollContext().putInContext(AuthenticationField.AUTHENTICATION_KEY,_                    Authentication.getAuthentication(threadContext))__        }_    };adds,the,link,authentication,to,the,link,scroll,context;override,public,void,on,new,scroll,context,search,context,search,context,if,license,state,is,security,enabled,license,state,is,auth,allowed,search,context,scroll,context,put,in,context,authentication,field,authentication,get,authentication,thread,context
SecuritySearchOperationListener -> @Override     public void onNewScrollContext(SearchContext searchContext);1536828374;Adds the {@link Authentication} to the {@link ScrollContext};@Override_    public void onNewScrollContext(SearchContext searchContext) {_        if (licenseState.isAuthAllowed()) {_            searchContext.scrollContext().putInContext(AuthenticationField.AUTHENTICATION_KEY,_                    Authentication.getAuthentication(threadContext))__        }_    };adds,the,link,authentication,to,the,link,scroll,context;override,public,void,on,new,scroll,context,search,context,search,context,if,license,state,is,auth,allowed,search,context,scroll,context,put,in,context,authentication,field,authentication,get,authentication,thread,context
SecuritySearchOperationListener -> @Override     public void onNewScrollContext(SearchContext searchContext);1543292387;Adds the {@link Authentication} to the {@link ScrollContext};@Override_    public void onNewScrollContext(SearchContext searchContext) {_        if (licenseState.isAuthAllowed()) {_            searchContext.scrollContext().putInContext(AuthenticationField.AUTHENTICATION_KEY,_                    Authentication.getAuthentication(threadContext))__        }_    };adds,the,link,authentication,to,the,link,scroll,context;override,public,void,on,new,scroll,context,search,context,search,context,if,license,state,is,auth,allowed,search,context,scroll,context,put,in,context,authentication,field,authentication,get,authentication,thread,context
SecuritySearchOperationListener -> @Override     public void onNewScrollContext(SearchContext searchContext);1549399169;Adds the {@link Authentication} to the {@link ScrollContext};@Override_    public void onNewScrollContext(SearchContext searchContext) {_        if (licenseState.isAuthAllowed()) {_            searchContext.scrollContext().putInContext(AuthenticationField.AUTHENTICATION_KEY,_                    Authentication.getAuthentication(threadContext))__        }_    };adds,the,link,authentication,to,the,link,scroll,context;override,public,void,on,new,scroll,context,search,context,search,context,if,license,state,is,auth,allowed,search,context,scroll,context,put,in,context,authentication,field,authentication,get,authentication,thread,context
SecuritySearchOperationListener -> static void ensureAuthenticatedUserIsSame(Authentication original, Authentication current, AuditTrailService auditTrailService,                                               long id, String action, TransportRequest request, String[] roleNames);1524684173;Compares the {@link Authentication} that was stored in the {@link ScrollContext} with the_current authentication. We cannot guarantee that all of the details of the authentication will_be the same. Some things that could differ include the roles, the name of the authenticating_(or lookup) realm. To work around this we compare the username and the originating realm type.;static void ensureAuthenticatedUserIsSame(Authentication original, Authentication current, AuditTrailService auditTrailService,_                                              long id, String action, TransportRequest request, String[] roleNames) {_        _        _        final boolean samePrincipal = original.getUser().principal().equals(current.getUser().principal())__        final boolean sameRealmType__        if (original.getUser().isRunAs()) {_            if (current.getUser().isRunAs()) {_                sameRealmType = original.getLookedUpBy().getType().equals(current.getLookedUpBy().getType())__            }  else {_                sameRealmType = original.getLookedUpBy().getType().equals(current.getAuthenticatedBy().getType())__            }_        } else if (current.getUser().isRunAs()) {_            sameRealmType = original.getAuthenticatedBy().getType().equals(current.getLookedUpBy().getType())__        } else {_            sameRealmType = original.getAuthenticatedBy().getType().equals(current.getAuthenticatedBy().getType())__        }__        final boolean sameUser = samePrincipal && sameRealmType__        if (sameUser == false) {_            auditTrailService.accessDenied(current, action, request, roleNames)__            throw new SearchContextMissingException(id)__        }_    };compares,the,link,authentication,that,was,stored,in,the,link,scroll,context,with,the,current,authentication,we,cannot,guarantee,that,all,of,the,details,of,the,authentication,will,be,the,same,some,things,that,could,differ,include,the,roles,the,name,of,the,authenticating,or,lookup,realm,to,work,around,this,we,compare,the,username,and,the,originating,realm,type;static,void,ensure,authenticated,user,is,same,authentication,original,authentication,current,audit,trail,service,audit,trail,service,long,id,string,action,transport,request,request,string,role,names,final,boolean,same,principal,original,get,user,principal,equals,current,get,user,principal,final,boolean,same,realm,type,if,original,get,user,is,run,as,if,current,get,user,is,run,as,same,realm,type,original,get,looked,up,by,get,type,equals,current,get,looked,up,by,get,type,else,same,realm,type,original,get,looked,up,by,get,type,equals,current,get,authenticated,by,get,type,else,if,current,get,user,is,run,as,same,realm,type,original,get,authenticated,by,get,type,equals,current,get,looked,up,by,get,type,else,same,realm,type,original,get,authenticated,by,get,type,equals,current,get,authenticated,by,get,type,final,boolean,same,user,same,principal,same,realm,type,if,same,user,false,audit,trail,service,access,denied,current,action,request,role,names,throw,new,search,context,missing,exception,id
SecuritySearchOperationListener -> static void ensureAuthenticatedUserIsSame(Authentication original, Authentication current, AuditTrailService auditTrailService,                                               long id, String action, TransportRequest request, String[] roleNames);1536828374;Compares the {@link Authentication} that was stored in the {@link ScrollContext} with the_current authentication. We cannot guarantee that all of the details of the authentication will_be the same. Some things that could differ include the roles, the name of the authenticating_(or lookup) realm. To work around this we compare the username and the originating realm type.;static void ensureAuthenticatedUserIsSame(Authentication original, Authentication current, AuditTrailService auditTrailService,_                                              long id, String action, TransportRequest request, String[] roleNames) {_        _        _        final boolean samePrincipal = original.getUser().principal().equals(current.getUser().principal())__        final boolean sameRealmType__        if (original.getUser().isRunAs()) {_            if (current.getUser().isRunAs()) {_                sameRealmType = original.getLookedUpBy().getType().equals(current.getLookedUpBy().getType())__            }  else {_                sameRealmType = original.getLookedUpBy().getType().equals(current.getAuthenticatedBy().getType())__            }_        } else if (current.getUser().isRunAs()) {_            sameRealmType = original.getAuthenticatedBy().getType().equals(current.getLookedUpBy().getType())__        } else {_            sameRealmType = original.getAuthenticatedBy().getType().equals(current.getAuthenticatedBy().getType())__        }__        final boolean sameUser = samePrincipal && sameRealmType__        if (sameUser == false) {_            auditTrailService.accessDenied(current, action, request, roleNames)__            throw new SearchContextMissingException(id)__        }_    };compares,the,link,authentication,that,was,stored,in,the,link,scroll,context,with,the,current,authentication,we,cannot,guarantee,that,all,of,the,details,of,the,authentication,will,be,the,same,some,things,that,could,differ,include,the,roles,the,name,of,the,authenticating,or,lookup,realm,to,work,around,this,we,compare,the,username,and,the,originating,realm,type;static,void,ensure,authenticated,user,is,same,authentication,original,authentication,current,audit,trail,service,audit,trail,service,long,id,string,action,transport,request,request,string,role,names,final,boolean,same,principal,original,get,user,principal,equals,current,get,user,principal,final,boolean,same,realm,type,if,original,get,user,is,run,as,if,current,get,user,is,run,as,same,realm,type,original,get,looked,up,by,get,type,equals,current,get,looked,up,by,get,type,else,same,realm,type,original,get,looked,up,by,get,type,equals,current,get,authenticated,by,get,type,else,if,current,get,user,is,run,as,same,realm,type,original,get,authenticated,by,get,type,equals,current,get,looked,up,by,get,type,else,same,realm,type,original,get,authenticated,by,get,type,equals,current,get,authenticated,by,get,type,final,boolean,same,user,same,principal,same,realm,type,if,same,user,false,audit,trail,service,access,denied,current,action,request,role,names,throw,new,search,context,missing,exception,id
SecuritySearchOperationListener -> @Override     public void validateSearchContext(SearchContext searchContext, TransportRequest request);1524684173;Checks for the {@link ScrollContext} if it exists and compares the {@link Authentication}_object from the scroll context with the current authentication context;@Override_    public void validateSearchContext(SearchContext searchContext, TransportRequest request) {_        if (licenseState.isSecurityEnabled() && licenseState.isAuthAllowed()) {_            if (searchContext.scrollContext() != null) {_                final Authentication originalAuth = searchContext.scrollContext().getFromContext(AuthenticationField.AUTHENTICATION_KEY)__                final Authentication current = Authentication.getAuthentication(threadContext)__                final String action = threadContext.getTransient(ORIGINATING_ACTION_KEY)__                ensureAuthenticatedUserIsSame(originalAuth, current, auditTrailService, searchContext.id(), action, request,_                        threadContext.getTransient(ROLE_NAMES_KEY))__            }_        }_    };checks,for,the,link,scroll,context,if,it,exists,and,compares,the,link,authentication,object,from,the,scroll,context,with,the,current,authentication,context;override,public,void,validate,search,context,search,context,search,context,transport,request,request,if,license,state,is,security,enabled,license,state,is,auth,allowed,if,search,context,scroll,context,null,final,authentication,original,auth,search,context,scroll,context,get,from,context,authentication,field,final,authentication,current,authentication,get,authentication,thread,context,final,string,action,thread,context,get,transient,ensure,authenticated,user,is,same,original,auth,current,audit,trail,service,search,context,id,action,request,thread,context,get,transient
SecuritySearchOperationListener -> @Override     public void validateSearchContext(SearchContext searchContext, TransportRequest request);1536828374;Checks for the {@link ScrollContext} if it exists and compares the {@link Authentication}_object from the scroll context with the current authentication context;@Override_    public void validateSearchContext(SearchContext searchContext, TransportRequest request) {_        if (licenseState.isAuthAllowed()) {_            if (searchContext.scrollContext() != null) {_                final Authentication originalAuth = searchContext.scrollContext().getFromContext(AuthenticationField.AUTHENTICATION_KEY)__                final Authentication current = Authentication.getAuthentication(threadContext)__                final String action = threadContext.getTransient(ORIGINATING_ACTION_KEY)__                ensureAuthenticatedUserIsSame(originalAuth, current, auditTrailService, searchContext.id(), action, request,_                        threadContext.getTransient(ROLE_NAMES_KEY))__            }_        }_    };checks,for,the,link,scroll,context,if,it,exists,and,compares,the,link,authentication,object,from,the,scroll,context,with,the,current,authentication,context;override,public,void,validate,search,context,search,context,search,context,transport,request,request,if,license,state,is,auth,allowed,if,search,context,scroll,context,null,final,authentication,original,auth,search,context,scroll,context,get,from,context,authentication,field,final,authentication,current,authentication,get,authentication,thread,context,final,string,action,thread,context,get,transient,ensure,authenticated,user,is,same,original,auth,current,audit,trail,service,search,context,id,action,request,thread,context,get,transient
SecuritySearchOperationListener -> @Override     public void validateSearchContext(SearchContext searchContext, TransportRequest request);1543292387;Checks for the {@link ScrollContext} if it exists and compares the {@link Authentication}_object from the scroll context with the current authentication context;@Override_    public void validateSearchContext(SearchContext searchContext, TransportRequest request) {_        if (licenseState.isAuthAllowed()) {_            if (searchContext.scrollContext() != null) {_                final Authentication originalAuth = searchContext.scrollContext().getFromContext(AuthenticationField.AUTHENTICATION_KEY)__                final Authentication current = Authentication.getAuthentication(threadContext)__                final String action = threadContext.getTransient(ORIGINATING_ACTION_KEY)__                ensureAuthenticatedUserIsSame(originalAuth, current, auditTrailService, searchContext.id(), action, request,_                        AuditUtil.extractRequestId(threadContext), threadContext.getTransient(ROLE_NAMES_KEY))__            }_        }_    };checks,for,the,link,scroll,context,if,it,exists,and,compares,the,link,authentication,object,from,the,scroll,context,with,the,current,authentication,context;override,public,void,validate,search,context,search,context,search,context,transport,request,request,if,license,state,is,auth,allowed,if,search,context,scroll,context,null,final,authentication,original,auth,search,context,scroll,context,get,from,context,authentication,field,final,authentication,current,authentication,get,authentication,thread,context,final,string,action,thread,context,get,transient,ensure,authenticated,user,is,same,original,auth,current,audit,trail,service,search,context,id,action,request,audit,util,extract,request,id,thread,context,thread,context,get,transient
SecuritySearchOperationListener -> @Override     public void validateSearchContext(SearchContext searchContext, TransportRequest request);1549399169;Checks for the {@link ScrollContext} if it exists and compares the {@link Authentication}_object from the scroll context with the current authentication context;@Override_    public void validateSearchContext(SearchContext searchContext, TransportRequest request) {_        if (licenseState.isAuthAllowed()) {_            if (searchContext.scrollContext() != null) {_                final Authentication originalAuth = searchContext.scrollContext().getFromContext(AuthenticationField.AUTHENTICATION_KEY)__                final Authentication current = Authentication.getAuthentication(threadContext)__                final String action = threadContext.getTransient(ORIGINATING_ACTION_KEY)__                ensureAuthenticatedUserIsSame(originalAuth, current, auditTrailService, searchContext.id(), action, request,_                        AuditUtil.extractRequestId(threadContext), threadContext.getTransient(AUTHORIZATION_INFO_KEY))__            }_        }_    };checks,for,the,link,scroll,context,if,it,exists,and,compares,the,link,authentication,object,from,the,scroll,context,with,the,current,authentication,context;override,public,void,validate,search,context,search,context,search,context,transport,request,request,if,license,state,is,auth,allowed,if,search,context,scroll,context,null,final,authentication,original,auth,search,context,scroll,context,get,from,context,authentication,field,final,authentication,current,authentication,get,authentication,thread,context,final,string,action,thread,context,get,transient,ensure,authenticated,user,is,same,original,auth,current,audit,trail,service,search,context,id,action,request,audit,util,extract,request,id,thread,context,thread,context,get,transient
