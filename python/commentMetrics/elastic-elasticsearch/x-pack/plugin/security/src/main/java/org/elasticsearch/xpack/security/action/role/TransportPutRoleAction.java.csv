commented;modifiers;parameterAmount;loc;comment;code
false;public;1;9;;@Override public void onResponse(Boolean created) {     if (created) {         logger.info("added role [{}]", request.name()).     } else {         logger.info("updated role [{}]", request.name()).     }     listener.onResponse(new PutRoleResponse(created)). }
false;public;1;4;;@Override public void onFailure(Exception t) {     listener.onFailure(t). }
false;protected;3;25;;@Override protected void doExecute(Task task, final PutRoleRequest request, final ActionListener<PutRoleResponse> listener) {     final String name = request.roleDescriptor().getName().     if (ReservedRolesStore.isReserved(name)) {         listener.onFailure(new IllegalArgumentException("role [" + name + "] is reserved and cannot be modified.")).         return.     }     rolesStore.putRole(request, request.roleDescriptor(), new ActionListener<Boolean>() {          @Override         public void onResponse(Boolean created) {             if (created) {                 logger.info("added role [{}]", request.name()).             } else {                 logger.info("updated role [{}]", request.name()).             }             listener.onResponse(new PutRoleResponse(created)).         }          @Override         public void onFailure(Exception t) {             listener.onFailure(t).         }     }). }
