commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "security_get_users_action". }
false;public;2;18;;@Override public RestResponse buildResponse(GetUsersResponse response, XContentBuilder builder) throws Exception {     builder.startObject().     for (User user : response.users()) {         builder.field(user.principal(), user).     }     builder.endObject().     // we'll return an empty result and 404 status code     if (usernames.length != 0 && response.users().length == 0) {         return new BytesRestResponse(RestStatus.NOT_FOUND, builder).     }     // was found     return new BytesRestResponse(RestStatus.OK, builder). }
false;public;2;25;;@Override public RestChannelConsumer innerPrepareRequest(RestRequest request, NodeClient client) throws IOException {     String[] usernames = request.paramAsStringArray("username", Strings.EMPTY_ARRAY).     return channel -> new SecurityClient(client).prepareGetUsers(usernames).execute(new RestBuilderListener<GetUsersResponse>(channel) {          @Override         public RestResponse buildResponse(GetUsersResponse response, XContentBuilder builder) throws Exception {             builder.startObject().             for (User user : response.users()) {                 builder.field(user.principal(), user).             }             builder.endObject().             // we'll return an empty result and 404 status code             if (usernames.length != 0 && response.users().length == 0) {                 return new BytesRestResponse(RestStatus.NOT_FOUND, builder).             }             // was found             return new BytesRestResponse(RestStatus.OK, builder).         }     }). }
