commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;4;;@Override protected void onException(HttpChannel channel, Exception e) {     securityExceptionHandler.accept(channel, e). }
false;protected;0;5;;@Override protected void doStart() {     super.doStart().     ipFilter.setBoundHttpTransportAddress(this.boundAddress()). }
false;public;0;4;;@Override public ChannelHandler configureServerChannelHandler() {     return new HttpSslChannelHandler(). }
false;protected;1;10;;@Override protected void initChannel(Channel ch) throws Exception {     super.initChannel(ch).     if (sslConfiguration != null) {         SSLEngine sslEngine = sslService.createSSLEngine(sslConfiguration, null, -1).         sslEngine.setUseClientMode(false).         ch.pipeline().addFirst("ssl", new SslHandler(sslEngine)).     }     ch.pipeline().addFirst("ip_filter", new IpFilterRemoteAddressFilter(ipFilter, IPFilter.HTTP_PROFILE_NAME)). }
