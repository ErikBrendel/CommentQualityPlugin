commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "security_put_user_action". }
false;public;2;5;;@Override public RestResponse buildResponse(PutUserResponse putUserResponse, XContentBuilder builder) throws Exception {     putUserResponse.toXContent(builder, request).     return new BytesRestResponse(RestStatus.OK, builder). }
false;public;2;14;;@Override public RestChannelConsumer innerPrepareRequest(RestRequest request, NodeClient client) throws IOException {     PutUserRequestBuilder requestBuilder = new SecurityClient(client).preparePutUser(request.param("username"), request.requiredContent(), request.getXContentType(), passwordHasher).setRefreshPolicy(request.param("refresh")).     return channel -> requestBuilder.execute(new RestBuilderListener<PutUserResponse>(channel) {          @Override         public RestResponse buildResponse(PutUserResponse putUserResponse, XContentBuilder builder) throws Exception {             putUserResponse.toXContent(builder, request).             return new BytesRestResponse(RestStatus.OK, builder).         }     }). }
false;public;0;4;;@Override public Set<String> getFilteredFields() {     return FILTERED_FIELDS. }
