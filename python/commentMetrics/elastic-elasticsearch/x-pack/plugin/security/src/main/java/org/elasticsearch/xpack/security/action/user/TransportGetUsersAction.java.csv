commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;54;;@Override protected void doExecute(Task task, final GetUsersRequest request, final ActionListener<GetUsersResponse> listener) {     final String[] requestedUsers = request.usernames().     final boolean specificUsersRequested = requestedUsers != null && requestedUsers.length > 0.     final List<String> usersToSearchFor = new ArrayList<>().     final List<User> users = new ArrayList<>().     final List<String> realmLookup = new ArrayList<>().     if (specificUsersRequested) {         for (String username : requestedUsers) {             if (ClientReservedRealm.isReserved(username, settings)) {                 realmLookup.add(username).             } else if (SystemUser.NAME.equals(username) || XPackUser.NAME.equals(username)) {                 listener.onFailure(new IllegalArgumentException("user [" + username + "] is internal")).                 return.             } else {                 usersToSearchFor.add(username).             }         }     }     final ActionListener<Collection<Collection<User>>> sendingListener = ActionListener.wrap((userLists) -> {         users.addAll(userLists.stream().flatMap(Collection::stream).filter(Objects::nonNull).collect(Collectors.toList())).         listener.onResponse(new GetUsersResponse(users)).     }, listener::onFailure).     final GroupedActionListener<Collection<User>> groupListener = new GroupedActionListener<>(sendingListener, 2, Collections.emptyList()).     // GroupedActionListener     if (realmLookup.isEmpty()) {         if (specificUsersRequested == false) {             // we get all users from the realm             reservedRealm.users(groupListener).         } else {             // pass an empty list to inform the group listener             groupListener.onResponse(Collections.emptyList()).         // - no real lookups necessary         }     } else {         // nested group listener action here - for each of the users we got and fetch it concurrently - once we are done we notify         // the "global" group listener.         GroupedActionListener<User> realmGroupListener = new GroupedActionListener<>(groupListener, realmLookup.size(), Collections.emptyList()).         for (String user : realmLookup) {             reservedRealm.lookupUser(user, realmGroupListener).         }     }     // user store lookups     if (specificUsersRequested && usersToSearchFor.isEmpty()) {         // no users requested notify         groupListener.onResponse(Collections.emptyList()).     } else {         // go and get all users from the users store and pass it directly on to the group listener         usersStore.getUsers(usersToSearchFor.toArray(new String[usersToSearchFor.size()]), groupListener).     } }
