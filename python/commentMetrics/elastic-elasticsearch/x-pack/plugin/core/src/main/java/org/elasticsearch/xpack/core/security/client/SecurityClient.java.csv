# id;timestamp;commentText;codeText;commentWords;codeWords
SecurityClient -> public GetRoleMappingsRequestBuilder prepareGetRoleMappings(String... names);1524684173;Role Mappings;public GetRoleMappingsRequestBuilder prepareGetRoleMappings(String... names) {_        return new GetRoleMappingsRequestBuilder(client, GetRoleMappingsAction.INSTANCE)_                .names(names)__    };role,mappings;public,get,role,mappings,request,builder,prepare,get,role,mappings,string,names,return,new,get,role,mappings,request,builder,client,get,role,mappings,action,instance,names,names
SecurityClient -> public GetRoleMappingsRequestBuilder prepareGetRoleMappings(String... names);1531179852;Role Mappings;public GetRoleMappingsRequestBuilder prepareGetRoleMappings(String... names) {_        return new GetRoleMappingsRequestBuilder(client, GetRoleMappingsAction.INSTANCE)_                .names(names)__    };role,mappings;public,get,role,mappings,request,builder,prepare,get,role,mappings,string,names,return,new,get,role,mappings,request,builder,client,get,role,mappings,action,instance,names,names
SecurityClient -> public GetRoleMappingsRequestBuilder prepareGetRoleMappings(String... names);1532353780;Role Mappings;public GetRoleMappingsRequestBuilder prepareGetRoleMappings(String... names) {_        return new GetRoleMappingsRequestBuilder(client, GetRoleMappingsAction.INSTANCE)_                .names(names)__    };role,mappings;public,get,role,mappings,request,builder,prepare,get,role,mappings,string,names,return,new,get,role,mappings,request,builder,client,get,role,mappings,action,instance,names,names
SecurityClient -> public GetRoleMappingsRequestBuilder prepareGetRoleMappings(String... names);1532456624;Role Mappings;public GetRoleMappingsRequestBuilder prepareGetRoleMappings(String... names) {_        return new GetRoleMappingsRequestBuilder(client, GetRoleMappingsAction.INSTANCE)_                .names(names)__    };role,mappings;public,get,role,mappings,request,builder,prepare,get,role,mappings,string,names,return,new,get,role,mappings,request,builder,client,get,role,mappings,action,instance,names,names
SecurityClient -> public GetRoleMappingsRequestBuilder prepareGetRoleMappings(String... names);1534539448;Role Mappings;public GetRoleMappingsRequestBuilder prepareGetRoleMappings(String... names) {_        return new GetRoleMappingsRequestBuilder(client, GetRoleMappingsAction.INSTANCE)_                .names(names)__    };role,mappings;public,get,role,mappings,request,builder,prepare,get,role,mappings,string,names,return,new,get,role,mappings,request,builder,client,get,role,mappings,action,instance,names,names
SecurityClient -> public GetRoleMappingsRequestBuilder prepareGetRoleMappings(String... names);1539951844;Role Mappings;public GetRoleMappingsRequestBuilder prepareGetRoleMappings(String... names) {_        return new GetRoleMappingsRequestBuilder(client, GetRoleMappingsAction.INSTANCE)_                .names(names)__    };role,mappings;public,get,role,mappings,request,builder,prepare,get,role,mappings,string,names,return,new,get,role,mappings,request,builder,client,get,role,mappings,action,instance,names,names
SecurityClient -> public GetRoleMappingsRequestBuilder prepareGetRoleMappings(String... names);1545120350;Role Mappings;public GetRoleMappingsRequestBuilder prepareGetRoleMappings(String... names) {_        return new GetRoleMappingsRequestBuilder(client, GetRoleMappingsAction.INSTANCE)_                .names(names)__    };role,mappings;public,get,role,mappings,request,builder,prepare,get,role,mappings,string,names,return,new,get,role,mappings,request,builder,client,get,role,mappings,action,instance,names,names
SecurityClient -> public GetRoleMappingsRequestBuilder prepareGetRoleMappings(String... names);1549336917;Role Mappings;public GetRoleMappingsRequestBuilder prepareGetRoleMappings(String... names) {_        return new GetRoleMappingsRequestBuilder(client, GetRoleMappingsAction.INSTANCE)_                .names(names)__    };role,mappings;public,get,role,mappings,request,builder,prepare,get,role,mappings,string,names,return,new,get,role,mappings,request,builder,client,get,role,mappings,action,instance,names,names
SecurityClient -> public void clearRolesCache(ClearRolesCacheRequest request, ActionListener<ClearRolesCacheResponse> listener);1524684173;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public void clearRolesCache(ClearRolesCacheRequest request, ActionListener<ClearRolesCacheResponse> listener) {_        client.execute(ClearRolesCacheAction.INSTANCE, request, listener)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,void,clear,roles,cache,clear,roles,cache,request,request,action,listener,clear,roles,cache,response,listener,client,execute,clear,roles,cache,action,instance,request,listener
SecurityClient -> public void clearRolesCache(ClearRolesCacheRequest request, ActionListener<ClearRolesCacheResponse> listener);1531179852;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public void clearRolesCache(ClearRolesCacheRequest request, ActionListener<ClearRolesCacheResponse> listener) {_        client.execute(ClearRolesCacheAction.INSTANCE, request, listener)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,void,clear,roles,cache,clear,roles,cache,request,request,action,listener,clear,roles,cache,response,listener,client,execute,clear,roles,cache,action,instance,request,listener
SecurityClient -> public void clearRolesCache(ClearRolesCacheRequest request, ActionListener<ClearRolesCacheResponse> listener);1532353780;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public void clearRolesCache(ClearRolesCacheRequest request, ActionListener<ClearRolesCacheResponse> listener) {_        client.execute(ClearRolesCacheAction.INSTANCE, request, listener)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,void,clear,roles,cache,clear,roles,cache,request,request,action,listener,clear,roles,cache,response,listener,client,execute,clear,roles,cache,action,instance,request,listener
SecurityClient -> public void clearRolesCache(ClearRolesCacheRequest request, ActionListener<ClearRolesCacheResponse> listener);1532456624;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public void clearRolesCache(ClearRolesCacheRequest request, ActionListener<ClearRolesCacheResponse> listener) {_        client.execute(ClearRolesCacheAction.INSTANCE, request, listener)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,void,clear,roles,cache,clear,roles,cache,request,request,action,listener,clear,roles,cache,response,listener,client,execute,clear,roles,cache,action,instance,request,listener
SecurityClient -> public void clearRolesCache(ClearRolesCacheRequest request, ActionListener<ClearRolesCacheResponse> listener);1534539448;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public void clearRolesCache(ClearRolesCacheRequest request, ActionListener<ClearRolesCacheResponse> listener) {_        client.execute(ClearRolesCacheAction.INSTANCE, request, listener)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,void,clear,roles,cache,clear,roles,cache,request,request,action,listener,clear,roles,cache,response,listener,client,execute,clear,roles,cache,action,instance,request,listener
SecurityClient -> public void clearRolesCache(ClearRolesCacheRequest request, ActionListener<ClearRolesCacheResponse> listener);1539951844;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public void clearRolesCache(ClearRolesCacheRequest request, ActionListener<ClearRolesCacheResponse> listener) {_        client.execute(ClearRolesCacheAction.INSTANCE, request, listener)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,void,clear,roles,cache,clear,roles,cache,request,request,action,listener,clear,roles,cache,response,listener,client,execute,clear,roles,cache,action,instance,request,listener
SecurityClient -> public void clearRolesCache(ClearRolesCacheRequest request, ActionListener<ClearRolesCacheResponse> listener);1545120350;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public void clearRolesCache(ClearRolesCacheRequest request, ActionListener<ClearRolesCacheResponse> listener) {_        client.execute(ClearRolesCacheAction.INSTANCE, request, listener)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,void,clear,roles,cache,clear,roles,cache,request,request,action,listener,clear,roles,cache,response,listener,client,execute,clear,roles,cache,action,instance,request,listener
SecurityClient -> public void clearRolesCache(ClearRolesCacheRequest request, ActionListener<ClearRolesCacheResponse> listener);1549336917;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public void clearRolesCache(ClearRolesCacheRequest request, ActionListener<ClearRolesCacheResponse> listener) {_        client.execute(ClearRolesCacheAction.INSTANCE, request, listener)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,void,clear,roles,cache,clear,roles,cache,request,request,action,listener,clear,roles,cache,response,listener,client,execute,clear,roles,cache,action,instance,request,listener
SecurityClient -> public ClearRolesCacheRequestBuilder prepareClearRolesCache();1524684173;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public ClearRolesCacheRequestBuilder prepareClearRolesCache() {_        return new ClearRolesCacheRequestBuilder(client)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,clear,roles,cache,request,builder,prepare,clear,roles,cache,return,new,clear,roles,cache,request,builder,client
SecurityClient -> public ClearRolesCacheRequestBuilder prepareClearRolesCache();1531179852;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public ClearRolesCacheRequestBuilder prepareClearRolesCache() {_        return new ClearRolesCacheRequestBuilder(client)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,clear,roles,cache,request,builder,prepare,clear,roles,cache,return,new,clear,roles,cache,request,builder,client
SecurityClient -> public ClearRolesCacheRequestBuilder prepareClearRolesCache();1532353780;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public ClearRolesCacheRequestBuilder prepareClearRolesCache() {_        return new ClearRolesCacheRequestBuilder(client)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,clear,roles,cache,request,builder,prepare,clear,roles,cache,return,new,clear,roles,cache,request,builder,client
SecurityClient -> public ClearRolesCacheRequestBuilder prepareClearRolesCache();1532456624;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public ClearRolesCacheRequestBuilder prepareClearRolesCache() {_        return new ClearRolesCacheRequestBuilder(client)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,clear,roles,cache,request,builder,prepare,clear,roles,cache,return,new,clear,roles,cache,request,builder,client
SecurityClient -> public ClearRolesCacheRequestBuilder prepareClearRolesCache();1534539448;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public ClearRolesCacheRequestBuilder prepareClearRolesCache() {_        return new ClearRolesCacheRequestBuilder(client)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,clear,roles,cache,request,builder,prepare,clear,roles,cache,return,new,clear,roles,cache,request,builder,client
SecurityClient -> public ClearRolesCacheRequestBuilder prepareClearRolesCache();1539951844;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public ClearRolesCacheRequestBuilder prepareClearRolesCache() {_        return new ClearRolesCacheRequestBuilder(client)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,clear,roles,cache,request,builder,prepare,clear,roles,cache,return,new,clear,roles,cache,request,builder,client
SecurityClient -> public ClearRolesCacheRequestBuilder prepareClearRolesCache();1545120350;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public ClearRolesCacheRequestBuilder prepareClearRolesCache() {_        return new ClearRolesCacheRequestBuilder(client)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,clear,roles,cache,request,builder,prepare,clear,roles,cache,return,new,clear,roles,cache,request,builder,client
SecurityClient -> public ClearRolesCacheRequestBuilder prepareClearRolesCache();1549336917;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public ClearRolesCacheRequestBuilder prepareClearRolesCache() {_        return new ClearRolesCacheRequestBuilder(client)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,clear,roles,cache,request,builder,prepare,clear,roles,cache,return,new,clear,roles,cache,request,builder,client
SecurityClient -> @SuppressWarnings("unchecked")     public void clearRealmCache(ClearRealmCacheRequest request, ActionListener<ClearRealmCacheResponse> listener);1524684173;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;@SuppressWarnings("unchecked")_    public void clearRealmCache(ClearRealmCacheRequest request, ActionListener<ClearRealmCacheResponse> listener) {_        client.execute(ClearRealmCacheAction.INSTANCE, request, listener)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;suppress,warnings,unchecked,public,void,clear,realm,cache,clear,realm,cache,request,request,action,listener,clear,realm,cache,response,listener,client,execute,clear,realm,cache,action,instance,request,listener
SecurityClient -> @SuppressWarnings("unchecked")     public void clearRealmCache(ClearRealmCacheRequest request, ActionListener<ClearRealmCacheResponse> listener);1531179852;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;@SuppressWarnings("unchecked")_    public void clearRealmCache(ClearRealmCacheRequest request, ActionListener<ClearRealmCacheResponse> listener) {_        client.execute(ClearRealmCacheAction.INSTANCE, request, listener)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;suppress,warnings,unchecked,public,void,clear,realm,cache,clear,realm,cache,request,request,action,listener,clear,realm,cache,response,listener,client,execute,clear,realm,cache,action,instance,request,listener
SecurityClient -> @SuppressWarnings("unchecked")     public ClearRealmCacheRequestBuilder prepareClearRealmCache();1524684173;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;@SuppressWarnings("unchecked")_    public ClearRealmCacheRequestBuilder prepareClearRealmCache() {_        return new ClearRealmCacheRequestBuilder(client)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;suppress,warnings,unchecked,public,clear,realm,cache,request,builder,prepare,clear,realm,cache,return,new,clear,realm,cache,request,builder,client
SecurityClient -> @SuppressWarnings("unchecked")     public ClearRealmCacheRequestBuilder prepareClearRealmCache();1531179852;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;@SuppressWarnings("unchecked")_    public ClearRealmCacheRequestBuilder prepareClearRealmCache() {_        return new ClearRealmCacheRequestBuilder(client)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;suppress,warnings,unchecked,public,clear,realm,cache,request,builder,prepare,clear,realm,cache,return,new,clear,realm,cache,request,builder,client
SecurityClient -> public ActionFuture<ClearRolesCacheResponse> clearRolesCache(ClearRolesCacheRequest request);1524684173;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public ActionFuture<ClearRolesCacheResponse> clearRolesCache(ClearRolesCacheRequest request) {_        return client.execute(ClearRolesCacheAction.INSTANCE, request)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,action,future,clear,roles,cache,response,clear,roles,cache,clear,roles,cache,request,request,return,client,execute,clear,roles,cache,action,instance,request
SecurityClient -> public ActionFuture<ClearRolesCacheResponse> clearRolesCache(ClearRolesCacheRequest request);1531179852;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public ActionFuture<ClearRolesCacheResponse> clearRolesCache(ClearRolesCacheRequest request) {_        return client.execute(ClearRolesCacheAction.INSTANCE, request)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,action,future,clear,roles,cache,response,clear,roles,cache,clear,roles,cache,request,request,return,client,execute,clear,roles,cache,action,instance,request
SecurityClient -> public ActionFuture<ClearRolesCacheResponse> clearRolesCache(ClearRolesCacheRequest request);1532353780;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public ActionFuture<ClearRolesCacheResponse> clearRolesCache(ClearRolesCacheRequest request) {_        return client.execute(ClearRolesCacheAction.INSTANCE, request)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,action,future,clear,roles,cache,response,clear,roles,cache,clear,roles,cache,request,request,return,client,execute,clear,roles,cache,action,instance,request
SecurityClient -> public ActionFuture<ClearRolesCacheResponse> clearRolesCache(ClearRolesCacheRequest request);1532456624;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public ActionFuture<ClearRolesCacheResponse> clearRolesCache(ClearRolesCacheRequest request) {_        return client.execute(ClearRolesCacheAction.INSTANCE, request)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,action,future,clear,roles,cache,response,clear,roles,cache,clear,roles,cache,request,request,return,client,execute,clear,roles,cache,action,instance,request
SecurityClient -> public ActionFuture<ClearRolesCacheResponse> clearRolesCache(ClearRolesCacheRequest request);1534539448;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public ActionFuture<ClearRolesCacheResponse> clearRolesCache(ClearRolesCacheRequest request) {_        return client.execute(ClearRolesCacheAction.INSTANCE, request)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,action,future,clear,roles,cache,response,clear,roles,cache,clear,roles,cache,request,request,return,client,execute,clear,roles,cache,action,instance,request
SecurityClient -> public ActionFuture<ClearRolesCacheResponse> clearRolesCache(ClearRolesCacheRequest request);1539951844;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public ActionFuture<ClearRolesCacheResponse> clearRolesCache(ClearRolesCacheRequest request) {_        return client.execute(ClearRolesCacheAction.INSTANCE, request)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,action,future,clear,roles,cache,response,clear,roles,cache,clear,roles,cache,request,request,return,client,execute,clear,roles,cache,action,instance,request
SecurityClient -> public ActionFuture<ClearRolesCacheResponse> clearRolesCache(ClearRolesCacheRequest request);1545120350;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public ActionFuture<ClearRolesCacheResponse> clearRolesCache(ClearRolesCacheRequest request) {_        return client.execute(ClearRolesCacheAction.INSTANCE, request)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,action,future,clear,roles,cache,response,clear,roles,cache,clear,roles,cache,request,request,return,client,execute,clear,roles,cache,action,instance,request
SecurityClient -> public ActionFuture<ClearRolesCacheResponse> clearRolesCache(ClearRolesCacheRequest request);1549336917;Clears the roles cache. This API only works for the naitve roles that are stored in an elasticsearch index. It is_possible to clear the cache of all roles or to specify the names of individual roles that should have their cache_cleared.;public ActionFuture<ClearRolesCacheResponse> clearRolesCache(ClearRolesCacheRequest request) {_        return client.execute(ClearRolesCacheAction.INSTANCE, request)__    };clears,the,roles,cache,this,api,only,works,for,the,naitve,roles,that,are,stored,in,an,elasticsearch,index,it,is,possible,to,clear,the,cache,of,all,roles,or,to,specify,the,names,of,individual,roles,that,should,have,their,cache,cleared;public,action,future,clear,roles,cache,response,clear,roles,cache,clear,roles,cache,request,request,return,client,execute,clear,roles,cache,action,instance,request
SecurityClient -> public ClearRealmCacheRequestBuilder prepareClearRealmCache();1532353780;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;public ClearRealmCacheRequestBuilder prepareClearRealmCache() {_        return new ClearRealmCacheRequestBuilder(client)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;public,clear,realm,cache,request,builder,prepare,clear,realm,cache,return,new,clear,realm,cache,request,builder,client
SecurityClient -> public ClearRealmCacheRequestBuilder prepareClearRealmCache();1532456624;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;public ClearRealmCacheRequestBuilder prepareClearRealmCache() {_        return new ClearRealmCacheRequestBuilder(client)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;public,clear,realm,cache,request,builder,prepare,clear,realm,cache,return,new,clear,realm,cache,request,builder,client
SecurityClient -> public ClearRealmCacheRequestBuilder prepareClearRealmCache();1534539448;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;public ClearRealmCacheRequestBuilder prepareClearRealmCache() {_        return new ClearRealmCacheRequestBuilder(client)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;public,clear,realm,cache,request,builder,prepare,clear,realm,cache,return,new,clear,realm,cache,request,builder,client
SecurityClient -> public ClearRealmCacheRequestBuilder prepareClearRealmCache();1539951844;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;public ClearRealmCacheRequestBuilder prepareClearRealmCache() {_        return new ClearRealmCacheRequestBuilder(client)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;public,clear,realm,cache,request,builder,prepare,clear,realm,cache,return,new,clear,realm,cache,request,builder,client
SecurityClient -> public ClearRealmCacheRequestBuilder prepareClearRealmCache();1545120350;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;public ClearRealmCacheRequestBuilder prepareClearRealmCache() {_        return new ClearRealmCacheRequestBuilder(client)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;public,clear,realm,cache,request,builder,prepare,clear,realm,cache,return,new,clear,realm,cache,request,builder,client
SecurityClient -> public ClearRealmCacheRequestBuilder prepareClearRealmCache();1549336917;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;public ClearRealmCacheRequestBuilder prepareClearRealmCache() {_        return new ClearRealmCacheRequestBuilder(client)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;public,clear,realm,cache,request,builder,prepare,clear,realm,cache,return,new,clear,realm,cache,request,builder,client
SecurityClient -> public GetUsersRequestBuilder prepareGetUsers(String... usernames);1524684173;User Management;public GetUsersRequestBuilder prepareGetUsers(String... usernames) {_        return new GetUsersRequestBuilder(client).usernames(usernames)__    };user,management;public,get,users,request,builder,prepare,get,users,string,usernames,return,new,get,users,request,builder,client,usernames,usernames
SecurityClient -> public GetUsersRequestBuilder prepareGetUsers(String... usernames);1531179852;User Management;public GetUsersRequestBuilder prepareGetUsers(String... usernames) {_        return new GetUsersRequestBuilder(client).usernames(usernames)__    };user,management;public,get,users,request,builder,prepare,get,users,string,usernames,return,new,get,users,request,builder,client,usernames,usernames
SecurityClient -> public GetUsersRequestBuilder prepareGetUsers(String... usernames);1532353780;User Management;public GetUsersRequestBuilder prepareGetUsers(String... usernames) {_        return new GetUsersRequestBuilder(client).usernames(usernames)__    };user,management;public,get,users,request,builder,prepare,get,users,string,usernames,return,new,get,users,request,builder,client,usernames,usernames
SecurityClient -> public GetUsersRequestBuilder prepareGetUsers(String... usernames);1532456624;User Management;public GetUsersRequestBuilder prepareGetUsers(String... usernames) {_        return new GetUsersRequestBuilder(client).usernames(usernames)__    };user,management;public,get,users,request,builder,prepare,get,users,string,usernames,return,new,get,users,request,builder,client,usernames,usernames
SecurityClient -> public GetUsersRequestBuilder prepareGetUsers(String... usernames);1534539448;User Management;public GetUsersRequestBuilder prepareGetUsers(String... usernames) {_        return new GetUsersRequestBuilder(client).usernames(usernames)__    };user,management;public,get,users,request,builder,prepare,get,users,string,usernames,return,new,get,users,request,builder,client,usernames,usernames
SecurityClient -> public GetUsersRequestBuilder prepareGetUsers(String... usernames);1539951844;User Management;public GetUsersRequestBuilder prepareGetUsers(String... usernames) {_        return new GetUsersRequestBuilder(client).usernames(usernames)__    };user,management;public,get,users,request,builder,prepare,get,users,string,usernames,return,new,get,users,request,builder,client,usernames,usernames
SecurityClient -> public GetUsersRequestBuilder prepareGetUsers(String... usernames);1545120350;User Management;public GetUsersRequestBuilder prepareGetUsers(String... usernames) {_        return new GetUsersRequestBuilder(client).usernames(usernames)__    };user,management;public,get,users,request,builder,prepare,get,users,string,usernames,return,new,get,users,request,builder,client,usernames,usernames
SecurityClient -> public GetUsersRequestBuilder prepareGetUsers(String... usernames);1549336917;User Management;public GetUsersRequestBuilder prepareGetUsers(String... usernames) {_        return new GetUsersRequestBuilder(client).usernames(usernames)__    };user,management;public,get,users,request,builder,prepare,get,users,string,usernames,return,new,get,users,request,builder,client,usernames,usernames
SecurityClient -> @SuppressWarnings("unchecked")     public ActionFuture<ClearRealmCacheResponse> clearRealmCache(ClearRealmCacheRequest request);1524684173;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;@SuppressWarnings("unchecked")_    public ActionFuture<ClearRealmCacheResponse> clearRealmCache(ClearRealmCacheRequest request) {_        return client.execute(ClearRealmCacheAction.INSTANCE, request)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;suppress,warnings,unchecked,public,action,future,clear,realm,cache,response,clear,realm,cache,clear,realm,cache,request,request,return,client,execute,clear,realm,cache,action,instance,request
SecurityClient -> @SuppressWarnings("unchecked")     public ActionFuture<ClearRealmCacheResponse> clearRealmCache(ClearRealmCacheRequest request);1531179852;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;@SuppressWarnings("unchecked")_    public ActionFuture<ClearRealmCacheResponse> clearRealmCache(ClearRealmCacheRequest request) {_        return client.execute(ClearRealmCacheAction.INSTANCE, request)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;suppress,warnings,unchecked,public,action,future,clear,realm,cache,response,clear,realm,cache,clear,realm,cache,request,request,return,client,execute,clear,realm,cache,action,instance,request
SecurityClient -> public void clearRealmCache(ClearRealmCacheRequest request, ActionListener<ClearRealmCacheResponse> listener);1532353780;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;public void clearRealmCache(ClearRealmCacheRequest request, ActionListener<ClearRealmCacheResponse> listener) {_        client.execute(ClearRealmCacheAction.INSTANCE, request, listener)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;public,void,clear,realm,cache,clear,realm,cache,request,request,action,listener,clear,realm,cache,response,listener,client,execute,clear,realm,cache,action,instance,request,listener
SecurityClient -> public void clearRealmCache(ClearRealmCacheRequest request, ActionListener<ClearRealmCacheResponse> listener);1532456624;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;public void clearRealmCache(ClearRealmCacheRequest request, ActionListener<ClearRealmCacheResponse> listener) {_        client.execute(ClearRealmCacheAction.INSTANCE, request, listener)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;public,void,clear,realm,cache,clear,realm,cache,request,request,action,listener,clear,realm,cache,response,listener,client,execute,clear,realm,cache,action,instance,request,listener
SecurityClient -> public void clearRealmCache(ClearRealmCacheRequest request, ActionListener<ClearRealmCacheResponse> listener);1534539448;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;public void clearRealmCache(ClearRealmCacheRequest request, ActionListener<ClearRealmCacheResponse> listener) {_        client.execute(ClearRealmCacheAction.INSTANCE, request, listener)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;public,void,clear,realm,cache,clear,realm,cache,request,request,action,listener,clear,realm,cache,response,listener,client,execute,clear,realm,cache,action,instance,request,listener
SecurityClient -> public void clearRealmCache(ClearRealmCacheRequest request, ActionListener<ClearRealmCacheResponse> listener);1539951844;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;public void clearRealmCache(ClearRealmCacheRequest request, ActionListener<ClearRealmCacheResponse> listener) {_        client.execute(ClearRealmCacheAction.INSTANCE, request, listener)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;public,void,clear,realm,cache,clear,realm,cache,request,request,action,listener,clear,realm,cache,response,listener,client,execute,clear,realm,cache,action,instance,request,listener
SecurityClient -> public void clearRealmCache(ClearRealmCacheRequest request, ActionListener<ClearRealmCacheResponse> listener);1545120350;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;public void clearRealmCache(ClearRealmCacheRequest request, ActionListener<ClearRealmCacheResponse> listener) {_        client.execute(ClearRealmCacheAction.INSTANCE, request, listener)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;public,void,clear,realm,cache,clear,realm,cache,request,request,action,listener,clear,realm,cache,response,listener,client,execute,clear,realm,cache,action,instance,request,listener
SecurityClient -> public void clearRealmCache(ClearRealmCacheRequest request, ActionListener<ClearRealmCacheResponse> listener);1549336917;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;public void clearRealmCache(ClearRealmCacheRequest request, ActionListener<ClearRealmCacheResponse> listener) {_        client.execute(ClearRealmCacheAction.INSTANCE, request, listener)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;public,void,clear,realm,cache,clear,realm,cache,request,request,action,listener,clear,realm,cache,response,listener,client,execute,clear,realm,cache,action,instance,request,listener
SecurityClient -> public HasPrivilegesRequestBuilder prepareHasPrivileges(String username);1524684173;Permissions / Privileges;public HasPrivilegesRequestBuilder prepareHasPrivileges(String username) {_        return new HasPrivilegesRequestBuilder(client).username(username)__    };permissions,privileges;public,has,privileges,request,builder,prepare,has,privileges,string,username,return,new,has,privileges,request,builder,client,username,username
SecurityClient -> public HasPrivilegesRequestBuilder prepareHasPrivileges(String username);1531179852;Permissions / Privileges;public HasPrivilegesRequestBuilder prepareHasPrivileges(String username) {_        return new HasPrivilegesRequestBuilder(client).username(username)__    };permissions,privileges;public,has,privileges,request,builder,prepare,has,privileges,string,username,return,new,has,privileges,request,builder,client,username,username
SecurityClient -> public HasPrivilegesRequestBuilder prepareHasPrivileges(String username);1532353780;Permissions / Privileges;public HasPrivilegesRequestBuilder prepareHasPrivileges(String username) {_        return new HasPrivilegesRequestBuilder(client).username(username)__    };permissions,privileges;public,has,privileges,request,builder,prepare,has,privileges,string,username,return,new,has,privileges,request,builder,client,username,username
SecurityClient -> public HasPrivilegesRequestBuilder prepareHasPrivileges(String username);1532456624;Permissions / Privileges;public HasPrivilegesRequestBuilder prepareHasPrivileges(String username) {_        return new HasPrivilegesRequestBuilder(client).username(username)__    };permissions,privileges;public,has,privileges,request,builder,prepare,has,privileges,string,username,return,new,has,privileges,request,builder,client,username,username
SecurityClient -> public HasPrivilegesRequestBuilder prepareHasPrivileges(String username);1534539448;Permissions / Privileges;public HasPrivilegesRequestBuilder prepareHasPrivileges(String username) {_        return new HasPrivilegesRequestBuilder(client).username(username)__    };permissions,privileges;public,has,privileges,request,builder,prepare,has,privileges,string,username,return,new,has,privileges,request,builder,client,username,username
SecurityClient -> public HasPrivilegesRequestBuilder prepareHasPrivileges(String username);1539951844;Permissions / Privileges;public HasPrivilegesRequestBuilder prepareHasPrivileges(String username) {_        return new HasPrivilegesRequestBuilder(client).username(username)__    };permissions,privileges;public,has,privileges,request,builder,prepare,has,privileges,string,username,return,new,has,privileges,request,builder,client,username,username
SecurityClient -> public HasPrivilegesRequestBuilder prepareHasPrivileges(String username);1545120350;Permissions / Privileges;public HasPrivilegesRequestBuilder prepareHasPrivileges(String username) {_        return new HasPrivilegesRequestBuilder(client).username(username)__    };permissions,privileges;public,has,privileges,request,builder,prepare,has,privileges,string,username,return,new,has,privileges,request,builder,client,username,username
SecurityClient -> public HasPrivilegesRequestBuilder prepareHasPrivileges(String username);1549336917;Permissions / Privileges;public HasPrivilegesRequestBuilder prepareHasPrivileges(String username) {_        return new HasPrivilegesRequestBuilder(client).username(username)__    };permissions,privileges;public,has,privileges,request,builder,prepare,has,privileges,string,username,return,new,has,privileges,request,builder,client,username,username
SecurityClient -> public ChangePasswordRequestBuilder prepareChangePassword(String username, char[] password, Hasher hasher);1531179852;Populates the {@link ChangePasswordRequest} with the username and password. Note: the passed in char[] will be cleared by this_method.;public ChangePasswordRequestBuilder prepareChangePassword(String username, char[] password, Hasher hasher) {_        return new ChangePasswordRequestBuilder(client).username(username).password(password, hasher)__    };populates,the,link,change,password,request,with,the,username,and,password,note,the,passed,in,char,will,be,cleared,by,this,method;public,change,password,request,builder,prepare,change,password,string,username,char,password,hasher,hasher,return,new,change,password,request,builder,client,username,username,password,password,hasher
SecurityClient -> public ChangePasswordRequestBuilder prepareChangePassword(String username, char[] password, Hasher hasher);1532353780;Populates the {@link ChangePasswordRequest} with the username and password. Note: the passed in char[] will be cleared by this_method.;public ChangePasswordRequestBuilder prepareChangePassword(String username, char[] password, Hasher hasher) {_        return new ChangePasswordRequestBuilder(client).username(username).password(password, hasher)__    };populates,the,link,change,password,request,with,the,username,and,password,note,the,passed,in,char,will,be,cleared,by,this,method;public,change,password,request,builder,prepare,change,password,string,username,char,password,hasher,hasher,return,new,change,password,request,builder,client,username,username,password,password,hasher
SecurityClient -> public ChangePasswordRequestBuilder prepareChangePassword(String username, char[] password, Hasher hasher);1532456624;Populates the {@link ChangePasswordRequest} with the username and password. Note: the passed in char[] will be cleared by this_method.;public ChangePasswordRequestBuilder prepareChangePassword(String username, char[] password, Hasher hasher) {_        return new ChangePasswordRequestBuilder(client).username(username).password(password, hasher)__    };populates,the,link,change,password,request,with,the,username,and,password,note,the,passed,in,char,will,be,cleared,by,this,method;public,change,password,request,builder,prepare,change,password,string,username,char,password,hasher,hasher,return,new,change,password,request,builder,client,username,username,password,password,hasher
SecurityClient -> public ChangePasswordRequestBuilder prepareChangePassword(String username, char[] password, Hasher hasher);1534539448;Populates the {@link ChangePasswordRequest} with the username and password. Note: the passed in char[] will be cleared by this_method.;public ChangePasswordRequestBuilder prepareChangePassword(String username, char[] password, Hasher hasher) {_        return new ChangePasswordRequestBuilder(client).username(username).password(password, hasher)__    };populates,the,link,change,password,request,with,the,username,and,password,note,the,passed,in,char,will,be,cleared,by,this,method;public,change,password,request,builder,prepare,change,password,string,username,char,password,hasher,hasher,return,new,change,password,request,builder,client,username,username,password,password,hasher
SecurityClient -> public ChangePasswordRequestBuilder prepareChangePassword(String username, char[] password, Hasher hasher);1539951844;Populates the {@link ChangePasswordRequest} with the username and password. Note: the passed in char[] will be cleared by this_method.;public ChangePasswordRequestBuilder prepareChangePassword(String username, char[] password, Hasher hasher) {_        return new ChangePasswordRequestBuilder(client).username(username).password(password, hasher)__    };populates,the,link,change,password,request,with,the,username,and,password,note,the,passed,in,char,will,be,cleared,by,this,method;public,change,password,request,builder,prepare,change,password,string,username,char,password,hasher,hasher,return,new,change,password,request,builder,client,username,username,password,password,hasher
SecurityClient -> public ChangePasswordRequestBuilder prepareChangePassword(String username, char[] password, Hasher hasher);1545120350;Populates the {@link ChangePasswordRequest} with the username and password. Note: the passed in char[] will be cleared by this_method.;public ChangePasswordRequestBuilder prepareChangePassword(String username, char[] password, Hasher hasher) {_        return new ChangePasswordRequestBuilder(client).username(username).password(password, hasher)__    };populates,the,link,change,password,request,with,the,username,and,password,note,the,passed,in,char,will,be,cleared,by,this,method;public,change,password,request,builder,prepare,change,password,string,username,char,password,hasher,hasher,return,new,change,password,request,builder,client,username,username,password,password,hasher
SecurityClient -> public ChangePasswordRequestBuilder prepareChangePassword(String username, char[] password, Hasher hasher);1549336917;Populates the {@link ChangePasswordRequest} with the username and password. Note: the passed in char[] will be cleared by this_method.;public ChangePasswordRequestBuilder prepareChangePassword(String username, char[] password, Hasher hasher) {_        return new ChangePasswordRequestBuilder(client).username(username).password(password, hasher)__    };populates,the,link,change,password,request,with,the,username,and,password,note,the,passed,in,char,will,be,cleared,by,this,method;public,change,password,request,builder,prepare,change,password,string,username,char,password,hasher,hasher,return,new,change,password,request,builder,client,username,username,password,password,hasher
SecurityClient -> public ActionFuture<ClearRealmCacheResponse> clearRealmCache(ClearRealmCacheRequest request);1532353780;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;public ActionFuture<ClearRealmCacheResponse> clearRealmCache(ClearRealmCacheRequest request) {_        return client.execute(ClearRealmCacheAction.INSTANCE, request)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;public,action,future,clear,realm,cache,response,clear,realm,cache,clear,realm,cache,request,request,return,client,execute,clear,realm,cache,action,instance,request
SecurityClient -> public ActionFuture<ClearRealmCacheResponse> clearRealmCache(ClearRealmCacheRequest request);1532456624;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;public ActionFuture<ClearRealmCacheResponse> clearRealmCache(ClearRealmCacheRequest request) {_        return client.execute(ClearRealmCacheAction.INSTANCE, request)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;public,action,future,clear,realm,cache,response,clear,realm,cache,clear,realm,cache,request,request,return,client,execute,clear,realm,cache,action,instance,request
SecurityClient -> public ActionFuture<ClearRealmCacheResponse> clearRealmCache(ClearRealmCacheRequest request);1534539448;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;public ActionFuture<ClearRealmCacheResponse> clearRealmCache(ClearRealmCacheRequest request) {_        return client.execute(ClearRealmCacheAction.INSTANCE, request)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;public,action,future,clear,realm,cache,response,clear,realm,cache,clear,realm,cache,request,request,return,client,execute,clear,realm,cache,action,instance,request
SecurityClient -> public ActionFuture<ClearRealmCacheResponse> clearRealmCache(ClearRealmCacheRequest request);1539951844;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;public ActionFuture<ClearRealmCacheResponse> clearRealmCache(ClearRealmCacheRequest request) {_        return client.execute(ClearRealmCacheAction.INSTANCE, request)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;public,action,future,clear,realm,cache,response,clear,realm,cache,clear,realm,cache,request,request,return,client,execute,clear,realm,cache,action,instance,request
SecurityClient -> public ActionFuture<ClearRealmCacheResponse> clearRealmCache(ClearRealmCacheRequest request);1545120350;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;public ActionFuture<ClearRealmCacheResponse> clearRealmCache(ClearRealmCacheRequest request) {_        return client.execute(ClearRealmCacheAction.INSTANCE, request)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;public,action,future,clear,realm,cache,response,clear,realm,cache,clear,realm,cache,request,request,return,client,execute,clear,realm,cache,action,instance,request
SecurityClient -> public ActionFuture<ClearRealmCacheResponse> clearRealmCache(ClearRealmCacheRequest request);1549336917;Clears the realm caches. It's possible to clear all user entries from all realms in the cluster or alternatively_select the realms (by their unique names) and/or users (by their usernames) that should be evicted.;public ActionFuture<ClearRealmCacheResponse> clearRealmCache(ClearRealmCacheRequest request) {_        return client.execute(ClearRealmCacheAction.INSTANCE, request)__    };clears,the,realm,caches,it,s,possible,to,clear,all,user,entries,from,all,realms,in,the,cluster,or,alternatively,select,the,realms,by,their,unique,names,and,or,users,by,their,usernames,that,should,be,evicted;public,action,future,clear,realm,cache,response,clear,realm,cache,clear,realm,cache,request,request,return,client,execute,clear,realm,cache,action,instance,request
SecurityClient -> public GetRolesRequestBuilder prepareGetRoles(String... names);1524684173;Role Management;public GetRolesRequestBuilder prepareGetRoles(String... names) {_        return new GetRolesRequestBuilder(client).names(names)__    };role,management;public,get,roles,request,builder,prepare,get,roles,string,names,return,new,get,roles,request,builder,client,names,names
SecurityClient -> public GetRolesRequestBuilder prepareGetRoles(String... names);1531179852;Role Management;public GetRolesRequestBuilder prepareGetRoles(String... names) {_        return new GetRolesRequestBuilder(client).names(names)__    };role,management;public,get,roles,request,builder,prepare,get,roles,string,names,return,new,get,roles,request,builder,client,names,names
SecurityClient -> public GetRolesRequestBuilder prepareGetRoles(String... names);1532353780;Role Management;public GetRolesRequestBuilder prepareGetRoles(String... names) {_        return new GetRolesRequestBuilder(client).names(names)__    };role,management;public,get,roles,request,builder,prepare,get,roles,string,names,return,new,get,roles,request,builder,client,names,names
SecurityClient -> public GetRolesRequestBuilder prepareGetRoles(String... names);1532456624;Role Management;public GetRolesRequestBuilder prepareGetRoles(String... names) {_        return new GetRolesRequestBuilder(client).names(names)__    };role,management;public,get,roles,request,builder,prepare,get,roles,string,names,return,new,get,roles,request,builder,client,names,names
SecurityClient -> public GetRolesRequestBuilder prepareGetRoles(String... names);1534539448;Role Management;public GetRolesRequestBuilder prepareGetRoles(String... names) {_        return new GetRolesRequestBuilder(client).names(names)__    };role,management;public,get,roles,request,builder,prepare,get,roles,string,names,return,new,get,roles,request,builder,client,names,names
SecurityClient -> public GetRolesRequestBuilder prepareGetRoles(String... names);1539951844;Role Management;public GetRolesRequestBuilder prepareGetRoles(String... names) {_        return new GetRolesRequestBuilder(client).names(names)__    };role,management;public,get,roles,request,builder,prepare,get,roles,string,names,return,new,get,roles,request,builder,client,names,names
SecurityClient -> public GetRolesRequestBuilder prepareGetRoles(String... names);1545120350;Role Management;public GetRolesRequestBuilder prepareGetRoles(String... names) {_        return new GetRolesRequestBuilder(client).names(names)__    };role,management;public,get,roles,request,builder,prepare,get,roles,string,names,return,new,get,roles,request,builder,client,names,names
SecurityClient -> public GetRolesRequestBuilder prepareGetRoles(String... names);1549336917;Role Management;public GetRolesRequestBuilder prepareGetRoles(String... names) {_        return new GetRolesRequestBuilder(client).names(names)__    };role,management;public,get,roles,request,builder,prepare,get,roles,string,names,return,new,get,roles,request,builder,client,names,names
