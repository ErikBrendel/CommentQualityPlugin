commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;3;;public static Level fromString(String value) {     return Level.valueOf(value.toUpperCase(Locale.ROOT)). }
false;public,static;1;7;;public static Level readFromStream(StreamInput in) throws IOException {     int ordinal = in.readVInt().     if (ordinal < 0 || ordinal >= values().length) {         throw new IOException("Unknown Level ordinal [" + ordinal + "]").     }     return values()[ordinal]. }
false;public;1;4;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeVInt(ordinal()). }
false;public;0;4;;@Override public String toString() {     return name().toLowerCase(Locale.ROOT). }
false;public;0;3;;public Level getLevel() {     return level. }
false;public;0;3;;public String getMessage() {     return message. }
false;public;0;3;;public String getUrl() {     return url. }
false;public;0;3;;public String getDetails() {     return details. }
false;public;1;7;;@Override public void writeTo(StreamOutput out) throws IOException {     level.writeTo(out).     out.writeString(message).     out.writeString(url).     out.writeOptionalString(details). }
false;public;2;11;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().field("level", level).field("message", message).field("url", url).     if (details != null) {         builder.field("details", details).     }     return builder.endObject(). }
false;public;1;14;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     DeprecationIssue that = (DeprecationIssue) o.     return Objects.equals(level, that.level) && Objects.equals(message, that.message) && Objects.equals(url, that.url) && Objects.equals(details, that.details). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(level, message, url, details). }
false;public;0;4;;@Override public String toString() {     return Strings.toString(this). }
