# id;timestamp;commentText;codeText;commentWords;codeWords
Phase -> public Phase(StreamInput in) throws IOException;1516783641;For Serialization;public Phase(StreamInput in) throws IOException {_        this.name = in.readString()__        this.after = new TimeValue(in)__        int size = in.readVInt()__        TreeMap<String, LifecycleAction> actions = new TreeMap<>()__        for (int i = 0_ i < size_ i++) {_            actions.put(in.readString(), in.readNamedWriteable(LifecycleAction.class))__        }_        this.actions = actions__    };for,serialization;public,phase,stream,input,in,throws,ioexception,this,name,in,read,string,this,after,new,time,value,in,int,size,in,read,vint,tree,map,string,lifecycle,action,actions,new,tree,map,for,int,i,0,i,size,i,actions,put,in,read,string,in,read,named,writeable,lifecycle,action,class,this,actions,actions
Phase -> public Phase(StreamInput in) throws IOException;1522076403;For Serialization;public Phase(StreamInput in) throws IOException {_        this.name = in.readString()__        this.after = new TimeValue(in)__        int size = in.readVInt()__        TreeMap<String, LifecycleAction> actions = new TreeMap<>()__        for (int i = 0_ i < size_ i++) {_            actions.put(in.readString(), in.readNamedWriteable(LifecycleAction.class))__        }_        this.actions = actions__    };for,serialization;public,phase,stream,input,in,throws,ioexception,this,name,in,read,string,this,after,new,time,value,in,int,size,in,read,vint,tree,map,string,lifecycle,action,actions,new,tree,map,for,int,i,0,i,size,i,actions,put,in,read,string,in,read,named,writeable,lifecycle,action,class,this,actions,actions
Phase -> public Phase(StreamInput in) throws IOException;1522112055;For Serialization;public Phase(StreamInput in) throws IOException {_        this.name = in.readString()__        this.after = new TimeValue(in)__        int size = in.readVInt()__        TreeMap<String, LifecycleAction> actions = new TreeMap<>()__        for (int i = 0_ i < size_ i++) {_            actions.put(in.readString(), in.readNamedWriteable(LifecycleAction.class))__        }_        this.actions = actions__    };for,serialization;public,phase,stream,input,in,throws,ioexception,this,name,in,read,string,this,after,new,time,value,in,int,size,in,read,vint,tree,map,string,lifecycle,action,actions,new,tree,map,for,int,i,0,i,size,i,actions,put,in,read,string,in,read,named,writeable,lifecycle,action,class,this,actions,actions
Phase -> public Phase(StreamInput in) throws IOException;1522115339;For Serialization;public Phase(StreamInput in) throws IOException {_        this.name = in.readString()__        this.after = new TimeValue(in)__        int size = in.readVInt()__        TreeMap<String, LifecycleAction> actions = new TreeMap<>()__        for (int i = 0_ i < size_ i++) {_            actions.put(in.readString(), in.readNamedWriteable(LifecycleAction.class))__        }_        this.actions = actions__    };for,serialization;public,phase,stream,input,in,throws,ioexception,this,name,in,read,string,this,after,new,time,value,in,int,size,in,read,vint,tree,map,string,lifecycle,action,actions,new,tree,map,for,int,i,0,i,size,i,actions,put,in,read,string,in,read,named,writeable,lifecycle,action,class,this,actions,actions
Phase -> public Phase(StreamInput in) throws IOException;1522802545;For Serialization;public Phase(StreamInput in) throws IOException {_        this.name = in.readString()__        this.after = new TimeValue(in)__        int size = in.readVInt()__        TreeMap<String, LifecycleAction> actions = new TreeMap<>()__        for (int i = 0_ i < size_ i++) {_            actions.put(in.readString(), in.readNamedWriteable(LifecycleAction.class))__        }_        this.actions = actions__    };for,serialization;public,phase,stream,input,in,throws,ioexception,this,name,in,read,string,this,after,new,time,value,in,int,size,in,read,vint,tree,map,string,lifecycle,action,actions,new,tree,map,for,int,i,0,i,size,i,actions,put,in,read,string,in,read,named,writeable,lifecycle,action,class,this,actions,actions
Phase -> public Phase(StreamInput in) throws IOException;1523350437;For Serialization;public Phase(StreamInput in) throws IOException {_        this.name = in.readString()__        this.after = new TimeValue(in)__        int size = in.readVInt()__        TreeMap<String, LifecycleAction> actions = new TreeMap<>()__        for (int i = 0_ i < size_ i++) {_            actions.put(in.readString(), in.readNamedWriteable(LifecycleAction.class))__        }_        this.actions = actions__    };for,serialization;public,phase,stream,input,in,throws,ioexception,this,name,in,read,string,this,after,new,time,value,in,int,size,in,read,vint,tree,map,string,lifecycle,action,actions,new,tree,map,for,int,i,0,i,size,i,actions,put,in,read,string,in,read,named,writeable,lifecycle,action,class,this,actions,actions
Phase -> public Phase(StreamInput in) throws IOException;1523531736;For Serialization;public Phase(StreamInput in) throws IOException {_        this.name = in.readString()__        this.after = in.readTimeValue()__        int size = in.readVInt()__        TreeMap<String, LifecycleAction> actions = new TreeMap<>()__        for (int i = 0_ i < size_ i++) {_            actions.put(in.readString(), in.readNamedWriteable(LifecycleAction.class))__        }_        this.actions = actions__    };for,serialization;public,phase,stream,input,in,throws,ioexception,this,name,in,read,string,this,after,in,read,time,value,int,size,in,read,vint,tree,map,string,lifecycle,action,actions,new,tree,map,for,int,i,0,i,size,i,actions,put,in,read,string,in,read,named,writeable,lifecycle,action,class,this,actions,actions
Phase -> public Phase(StreamInput in) throws IOException;1532938110;For Serialization;public Phase(StreamInput in) throws IOException {_        this.name = in.readString()__        this.after = in.readTimeValue()__        int size = in.readVInt()__        TreeMap<String, LifecycleAction> actions = new TreeMap<>()__        for (int i = 0_ i < size_ i++) {_            actions.put(in.readString(), in.readNamedWriteable(LifecycleAction.class))__        }_        this.actions = actions__    };for,serialization;public,phase,stream,input,in,throws,ioexception,this,name,in,read,string,this,after,in,read,time,value,int,size,in,read,vint,tree,map,string,lifecycle,action,actions,new,tree,map,for,int,i,0,i,size,i,actions,put,in,read,string,in,read,named,writeable,lifecycle,action,class,this,actions,actions
Phase -> public Phase(StreamInput in) throws IOException;1534779142;For Serialization;public Phase(StreamInput in) throws IOException {_        this.name = in.readString()__        this.after = in.readTimeValue()__        int size = in.readVInt()__        TreeMap<String, LifecycleAction> actions = new TreeMap<>()__        for (int i = 0_ i < size_ i++) {_            actions.put(in.readString(), in.readNamedWriteable(LifecycleAction.class))__        }_        this.actions = actions__    };for,serialization;public,phase,stream,input,in,throws,ioexception,this,name,in,read,string,this,after,in,read,time,value,int,size,in,read,vint,tree,map,string,lifecycle,action,actions,new,tree,map,for,int,i,0,i,size,i,actions,put,in,read,string,in,read,named,writeable,lifecycle,action,class,this,actions,actions
Phase -> public Phase(StreamInput in) throws IOException;1536080587;For Serialization;public Phase(StreamInput in) throws IOException {_        this.name = in.readString()__        this.after = in.readTimeValue()__        int size = in.readVInt()__        TreeMap<String, LifecycleAction> actions = new TreeMap<>()__        for (int i = 0_ i < size_ i++) {_            actions.put(in.readString(), in.readNamedWriteable(LifecycleAction.class))__        }_        this.actions = actions__    };for,serialization;public,phase,stream,input,in,throws,ioexception,this,name,in,read,string,this,after,in,read,time,value,int,size,in,read,vint,tree,map,string,lifecycle,action,actions,new,tree,map,for,int,i,0,i,size,i,actions,put,in,read,string,in,read,named,writeable,lifecycle,action,class,this,actions,actions
Phase -> public Phase(StreamInput in) throws IOException;1536464455;For Serialization;public Phase(StreamInput in) throws IOException {_        this.name = in.readString()__        this.minimumAge = in.readTimeValue()__        int size = in.readVInt()__        TreeMap<String, LifecycleAction> actions = new TreeMap<>()__        for (int i = 0_ i < size_ i++) {_            actions.put(in.readString(), in.readNamedWriteable(LifecycleAction.class))__        }_        this.actions = actions__    };for,serialization;public,phase,stream,input,in,throws,ioexception,this,name,in,read,string,this,minimum,age,in,read,time,value,int,size,in,read,vint,tree,map,string,lifecycle,action,actions,new,tree,map,for,int,i,0,i,size,i,actions,put,in,read,string,in,read,named,writeable,lifecycle,action,class,this,actions,actions
Phase -> public Phase(StreamInput in) throws IOException;1540929242;For Serialization;public Phase(StreamInput in) throws IOException {_        this.name = in.readString()__        this.minimumAge = in.readTimeValue()__        int size = in.readVInt()__        TreeMap<String, LifecycleAction> actions = new TreeMap<>()__        for (int i = 0_ i < size_ i++) {_            actions.put(in.readString(), in.readNamedWriteable(LifecycleAction.class))__        }_        this.actions = actions__    };for,serialization;public,phase,stream,input,in,throws,ioexception,this,name,in,read,string,this,minimum,age,in,read,time,value,int,size,in,read,vint,tree,map,string,lifecycle,action,actions,new,tree,map,for,int,i,0,i,size,i,actions,put,in,read,string,in,read,named,writeable,lifecycle,action,class,this,actions,actions
Phase -> public TimeValue getAfter();1516783641;@return the age of the index when the index should move to this_{@link Phase}.;public TimeValue getAfter() {_        return after__    };return,the,age,of,the,index,when,the,index,should,move,to,this,link,phase;public,time,value,get,after,return,after
Phase -> public TimeValue getAfter();1522076403;@return the age of the index when the index should move to this_{@link Phase}.;public TimeValue getAfter() {_        return after__    };return,the,age,of,the,index,when,the,index,should,move,to,this,link,phase;public,time,value,get,after,return,after
Phase -> public TimeValue getAfter();1522112055;@return the age of the index when the index should move to this_{@link Phase}.;public TimeValue getAfter() {_        return after__    };return,the,age,of,the,index,when,the,index,should,move,to,this,link,phase;public,time,value,get,after,return,after
Phase -> public TimeValue getAfter();1522115339;@return the age of the index when the index should move to this_{@link Phase}.;public TimeValue getAfter() {_        return after__    };return,the,age,of,the,index,when,the,index,should,move,to,this,link,phase;public,time,value,get,after,return,after
Phase -> public TimeValue getAfter();1522802545;@return the age of the index when the index should move to this_{@link Phase}.;public TimeValue getAfter() {_        return after__    };return,the,age,of,the,index,when,the,index,should,move,to,this,link,phase;public,time,value,get,after,return,after
Phase -> public TimeValue getAfter();1523350437;@return the age of the index when the index should move to this_{@link Phase}.;public TimeValue getAfter() {_        return after__    };return,the,age,of,the,index,when,the,index,should,move,to,this,link,phase;public,time,value,get,after,return,after
Phase -> public TimeValue getAfter();1523531736;@return the age of the index when the index should move to this_{@link Phase}.;public TimeValue getAfter() {_        return after__    };return,the,age,of,the,index,when,the,index,should,move,to,this,link,phase;public,time,value,get,after,return,after
Phase -> public TimeValue getAfter();1532938110;@return the age of the index when the index should move to this_{@link Phase}.;public TimeValue getAfter() {_        return after__    };return,the,age,of,the,index,when,the,index,should,move,to,this,link,phase;public,time,value,get,after,return,after
Phase -> public TimeValue getAfter();1534779142;@return the age of the index when the index should move to this_{@link Phase}.;public TimeValue getAfter() {_        return after__    };return,the,age,of,the,index,when,the,index,should,move,to,this,link,phase;public,time,value,get,after,return,after
Phase -> public TimeValue getAfter();1536080587;@return the age of the index when the index should move to this_{@link Phase}.;public TimeValue getAfter() {_        return after__    };return,the,age,of,the,index,when,the,index,should,move,to,this,link,phase;public,time,value,get,after,return,after
Phase -> public Map<String, LifecycleAction> getActions();1516783641;@return a {@link Map} of the {@link LifecycleAction}s to run when during_his {@link Phase}.;public Map<String, LifecycleAction> getActions() {_        return actions__    };return,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase;public,map,string,lifecycle,action,get,actions,return,actions
Phase -> public Map<String, LifecycleAction> getActions();1522076403;@return a {@link Map} of the {@link LifecycleAction}s to run when during_his {@link Phase}.;public Map<String, LifecycleAction> getActions() {_        return actions__    };return,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase;public,map,string,lifecycle,action,get,actions,return,actions
Phase -> public Map<String, LifecycleAction> getActions();1522112055;@return a {@link Map} of the {@link LifecycleAction}s to run when during_his {@link Phase}.;public Map<String, LifecycleAction> getActions() {_        return actions__    };return,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase;public,map,string,lifecycle,action,get,actions,return,actions
Phase -> public Map<String, LifecycleAction> getActions();1522115339;@return a {@link Map} of the {@link LifecycleAction}s to run when during_his {@link Phase}.;public Map<String, LifecycleAction> getActions() {_        return actions__    };return,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase;public,map,string,lifecycle,action,get,actions,return,actions
Phase -> public Map<String, LifecycleAction> getActions();1522802545;@return a {@link Map} of the {@link LifecycleAction}s to run when during_his {@link Phase}.;public Map<String, LifecycleAction> getActions() {_        return actions__    };return,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase;public,map,string,lifecycle,action,get,actions,return,actions
Phase -> public Map<String, LifecycleAction> getActions();1523350437;@return a {@link Map} of the {@link LifecycleAction}s to run when during_his {@link Phase}.;public Map<String, LifecycleAction> getActions() {_        return actions__    };return,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase;public,map,string,lifecycle,action,get,actions,return,actions
Phase -> public Map<String, LifecycleAction> getActions();1523531736;@return a {@link Map} of the {@link LifecycleAction}s to run when during_his {@link Phase}.;public Map<String, LifecycleAction> getActions() {_        return actions__    };return,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase;public,map,string,lifecycle,action,get,actions,return,actions
Phase -> public Map<String, LifecycleAction> getActions();1532938110;@return a {@link Map} of the {@link LifecycleAction}s to run when during_his {@link Phase}.;public Map<String, LifecycleAction> getActions() {_        return actions__    };return,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase;public,map,string,lifecycle,action,get,actions,return,actions
Phase -> public Map<String, LifecycleAction> getActions();1534779142;@return a {@link Map} of the {@link LifecycleAction}s to run when during_his {@link Phase}.;public Map<String, LifecycleAction> getActions() {_        return actions__    };return,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase;public,map,string,lifecycle,action,get,actions,return,actions
Phase -> public Map<String, LifecycleAction> getActions();1536080587;@return a {@link Map} of the {@link LifecycleAction}s to run when during_his {@link Phase}.;public Map<String, LifecycleAction> getActions() {_        return actions__    };return,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase;public,map,string,lifecycle,action,get,actions,return,actions
Phase -> public Map<String, LifecycleAction> getActions();1536464455;@return a {@link Map} of the {@link LifecycleAction}s to run when during_his {@link Phase}.;public Map<String, LifecycleAction> getActions() {_        return actions__    };return,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase;public,map,string,lifecycle,action,get,actions,return,actions
Phase -> public Map<String, LifecycleAction> getActions();1540929242;@return a {@link Map} of the {@link LifecycleAction}s to run when during_his {@link Phase}.;public Map<String, LifecycleAction> getActions() {_        return actions__    };return,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase;public,map,string,lifecycle,action,get,actions,return,actions
Phase -> public Phase(String name, TimeValue minimumAge, Map<String, LifecycleAction> actions);1536464455;@param name_the name of this {@link Phase}._@param minimumAge_the age of the index when the index should move to this_{@link Phase}._@param actions_a {@link Map} of the {@link LifecycleAction}s to run when_during his {@link Phase}. The keys in this map are the associated_action names. The order of these actions is defined_by the {@link LifecycleType};public Phase(String name, TimeValue minimumAge, Map<String, LifecycleAction> actions) {_        this.name = name__        if (minimumAge == null) {_            this.minimumAge = TimeValue.ZERO__        } else {_            this.minimumAge = minimumAge__        }_        this.actions = actions__    };param,name,the,name,of,this,link,phase,param,minimum,age,the,age,of,the,index,when,the,index,should,move,to,this,link,phase,param,actions,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase,the,keys,in,this,map,are,the,associated,action,names,the,order,of,these,actions,is,defined,by,the,link,lifecycle,type;public,phase,string,name,time,value,minimum,age,map,string,lifecycle,action,actions,this,name,name,if,minimum,age,null,this,minimum,age,time,value,zero,else,this,minimum,age,minimum,age,this,actions,actions
Phase -> public Phase(String name, TimeValue minimumAge, Map<String, LifecycleAction> actions);1540929242;@param name_the name of this {@link Phase}._@param minimumAge_the age of the index when the index should move to this_{@link Phase}._@param actions_a {@link Map} of the {@link LifecycleAction}s to run when_during his {@link Phase}. The keys in this map are the associated_action names. The order of these actions is defined_by the {@link LifecycleType};public Phase(String name, TimeValue minimumAge, Map<String, LifecycleAction> actions) {_        this.name = name__        if (minimumAge == null) {_            this.minimumAge = TimeValue.ZERO__        } else {_            this.minimumAge = minimumAge__        }_        this.actions = actions__    };param,name,the,name,of,this,link,phase,param,minimum,age,the,age,of,the,index,when,the,index,should,move,to,this,link,phase,param,actions,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase,the,keys,in,this,map,are,the,associated,action,names,the,order,of,these,actions,is,defined,by,the,link,lifecycle,type;public,phase,string,name,time,value,minimum,age,map,string,lifecycle,action,actions,this,name,name,if,minimum,age,null,this,minimum,age,time,value,zero,else,this,minimum,age,minimum,age,this,actions,actions
Phase -> public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions);1516783641;@param name_the name of this {@link Phase}._@param after_the age of the index when the index should move to this_{@link Phase}._@param actions_a {@link Map} of the {@link LifecycleAction}s to run when_during his {@link Phase}. The keys in this map are the associated_action names. The order of these actions is defined_by the {@link LifecyclePolicy.NextActionProvider}.;public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions) {_        this.name = name__        if (after == null) {_            this.after = TimeValue.ZERO__        } else {_            this.after = after__        }_        this.actions = actions__    };param,name,the,name,of,this,link,phase,param,after,the,age,of,the,index,when,the,index,should,move,to,this,link,phase,param,actions,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase,the,keys,in,this,map,are,the,associated,action,names,the,order,of,these,actions,is,defined,by,the,link,lifecycle,policy,next,action,provider;public,phase,string,name,time,value,after,map,string,lifecycle,action,actions,this,name,name,if,after,null,this,after,time,value,zero,else,this,after,after,this,actions,actions
Phase -> public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions);1522076403;@param name_the name of this {@link Phase}._@param after_the age of the index when the index should move to this_{@link Phase}._@param actions_a {@link Map} of the {@link LifecycleAction}s to run when_during his {@link Phase}. The keys in this map are the associated_action names. The order of these actions is defined_by the {@link LifecyclePolicy.NextActionProvider}.;public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions) {_        this.name = name__        if (after == null) {_            this.after = TimeValue.ZERO__        } else {_            this.after = after__        }_        this.actions = actions__    };param,name,the,name,of,this,link,phase,param,after,the,age,of,the,index,when,the,index,should,move,to,this,link,phase,param,actions,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase,the,keys,in,this,map,are,the,associated,action,names,the,order,of,these,actions,is,defined,by,the,link,lifecycle,policy,next,action,provider;public,phase,string,name,time,value,after,map,string,lifecycle,action,actions,this,name,name,if,after,null,this,after,time,value,zero,else,this,after,after,this,actions,actions
Phase -> public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions);1522112055;@param name_the name of this {@link Phase}._@param after_the age of the index when the index should move to this_{@link Phase}._@param actions_a {@link Map} of the {@link LifecycleAction}s to run when_during his {@link Phase}. The keys in this map are the associated_action names. The order of these actions is defined_by the {@link LifecyclePolicy.NextActionProvider}.;public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions) {_        this.name = name__        if (after == null) {_            this.after = TimeValue.ZERO__        } else {_            this.after = after__        }_        this.actions = actions__    };param,name,the,name,of,this,link,phase,param,after,the,age,of,the,index,when,the,index,should,move,to,this,link,phase,param,actions,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase,the,keys,in,this,map,are,the,associated,action,names,the,order,of,these,actions,is,defined,by,the,link,lifecycle,policy,next,action,provider;public,phase,string,name,time,value,after,map,string,lifecycle,action,actions,this,name,name,if,after,null,this,after,time,value,zero,else,this,after,after,this,actions,actions
Phase -> public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions);1522115339;@param name_the name of this {@link Phase}._@param after_the age of the index when the index should move to this_{@link Phase}._@param actions_a {@link Map} of the {@link LifecycleAction}s to run when_during his {@link Phase}. The keys in this map are the associated_action names. The order of these actions is defined_by the {@link LifecycleType};public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions) {_        this.name = name__        if (after == null) {_            this.after = TimeValue.ZERO__        } else {_            this.after = after__        }_        this.actions = actions__    };param,name,the,name,of,this,link,phase,param,after,the,age,of,the,index,when,the,index,should,move,to,this,link,phase,param,actions,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase,the,keys,in,this,map,are,the,associated,action,names,the,order,of,these,actions,is,defined,by,the,link,lifecycle,type;public,phase,string,name,time,value,after,map,string,lifecycle,action,actions,this,name,name,if,after,null,this,after,time,value,zero,else,this,after,after,this,actions,actions
Phase -> public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions);1522802545;@param name_the name of this {@link Phase}._@param after_the age of the index when the index should move to this_{@link Phase}._@param actions_a {@link Map} of the {@link LifecycleAction}s to run when_during his {@link Phase}. The keys in this map are the associated_action names. The order of these actions is defined_by the {@link LifecycleType};public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions) {_        this.name = name__        if (after == null) {_            this.after = TimeValue.ZERO__        } else {_            this.after = after__        }_        this.actions = actions__    };param,name,the,name,of,this,link,phase,param,after,the,age,of,the,index,when,the,index,should,move,to,this,link,phase,param,actions,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase,the,keys,in,this,map,are,the,associated,action,names,the,order,of,these,actions,is,defined,by,the,link,lifecycle,type;public,phase,string,name,time,value,after,map,string,lifecycle,action,actions,this,name,name,if,after,null,this,after,time,value,zero,else,this,after,after,this,actions,actions
Phase -> public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions);1523350437;@param name_the name of this {@link Phase}._@param after_the age of the index when the index should move to this_{@link Phase}._@param actions_a {@link Map} of the {@link LifecycleAction}s to run when_during his {@link Phase}. The keys in this map are the associated_action names. The order of these actions is defined_by the {@link LifecycleType};public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions) {_        this.name = name__        if (after == null) {_            this.after = TimeValue.ZERO__        } else {_            this.after = after__        }_        this.actions = actions__    };param,name,the,name,of,this,link,phase,param,after,the,age,of,the,index,when,the,index,should,move,to,this,link,phase,param,actions,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase,the,keys,in,this,map,are,the,associated,action,names,the,order,of,these,actions,is,defined,by,the,link,lifecycle,type;public,phase,string,name,time,value,after,map,string,lifecycle,action,actions,this,name,name,if,after,null,this,after,time,value,zero,else,this,after,after,this,actions,actions
Phase -> public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions);1523531736;@param name_the name of this {@link Phase}._@param after_the age of the index when the index should move to this_{@link Phase}._@param actions_a {@link Map} of the {@link LifecycleAction}s to run when_during his {@link Phase}. The keys in this map are the associated_action names. The order of these actions is defined_by the {@link LifecycleType};public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions) {_        this.name = name__        if (after == null) {_            this.after = TimeValue.ZERO__        } else {_            this.after = after__        }_        this.actions = actions__    };param,name,the,name,of,this,link,phase,param,after,the,age,of,the,index,when,the,index,should,move,to,this,link,phase,param,actions,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase,the,keys,in,this,map,are,the,associated,action,names,the,order,of,these,actions,is,defined,by,the,link,lifecycle,type;public,phase,string,name,time,value,after,map,string,lifecycle,action,actions,this,name,name,if,after,null,this,after,time,value,zero,else,this,after,after,this,actions,actions
Phase -> public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions);1532938110;@param name_the name of this {@link Phase}._@param after_the age of the index when the index should move to this_{@link Phase}._@param actions_a {@link Map} of the {@link LifecycleAction}s to run when_during his {@link Phase}. The keys in this map are the associated_action names. The order of these actions is defined_by the {@link LifecycleType};public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions) {_        this.name = name__        if (after == null) {_            this.after = TimeValue.ZERO__        } else {_            this.after = after__        }_        this.actions = actions__    };param,name,the,name,of,this,link,phase,param,after,the,age,of,the,index,when,the,index,should,move,to,this,link,phase,param,actions,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase,the,keys,in,this,map,are,the,associated,action,names,the,order,of,these,actions,is,defined,by,the,link,lifecycle,type;public,phase,string,name,time,value,after,map,string,lifecycle,action,actions,this,name,name,if,after,null,this,after,time,value,zero,else,this,after,after,this,actions,actions
Phase -> public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions);1534779142;@param name_the name of this {@link Phase}._@param after_the age of the index when the index should move to this_{@link Phase}._@param actions_a {@link Map} of the {@link LifecycleAction}s to run when_during his {@link Phase}. The keys in this map are the associated_action names. The order of these actions is defined_by the {@link LifecycleType};public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions) {_        this.name = name__        if (after == null) {_            this.after = TimeValue.ZERO__        } else {_            this.after = after__        }_        this.actions = actions__    };param,name,the,name,of,this,link,phase,param,after,the,age,of,the,index,when,the,index,should,move,to,this,link,phase,param,actions,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase,the,keys,in,this,map,are,the,associated,action,names,the,order,of,these,actions,is,defined,by,the,link,lifecycle,type;public,phase,string,name,time,value,after,map,string,lifecycle,action,actions,this,name,name,if,after,null,this,after,time,value,zero,else,this,after,after,this,actions,actions
Phase -> public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions);1536080587;@param name_the name of this {@link Phase}._@param after_the age of the index when the index should move to this_{@link Phase}._@param actions_a {@link Map} of the {@link LifecycleAction}s to run when_during his {@link Phase}. The keys in this map are the associated_action names. The order of these actions is defined_by the {@link LifecycleType};public Phase(String name, TimeValue after, Map<String, LifecycleAction> actions) {_        this.name = name__        if (after == null) {_            this.after = TimeValue.ZERO__        } else {_            this.after = after__        }_        this.actions = actions__    };param,name,the,name,of,this,link,phase,param,after,the,age,of,the,index,when,the,index,should,move,to,this,link,phase,param,actions,a,link,map,of,the,link,lifecycle,action,s,to,run,when,during,his,link,phase,the,keys,in,this,map,are,the,associated,action,names,the,order,of,these,actions,is,defined,by,the,link,lifecycle,type;public,phase,string,name,time,value,after,map,string,lifecycle,action,actions,this,name,name,if,after,null,this,after,time,value,zero,else,this,after,after,this,actions,actions
Phase -> public String getName();1516783641;@return the name of this {@link Phase};public String getName() {_        return name__    };return,the,name,of,this,link,phase;public,string,get,name,return,name
Phase -> public String getName();1522076403;@return the name of this {@link Phase};public String getName() {_        return name__    };return,the,name,of,this,link,phase;public,string,get,name,return,name
Phase -> public String getName();1522112055;@return the name of this {@link Phase};public String getName() {_        return name__    };return,the,name,of,this,link,phase;public,string,get,name,return,name
Phase -> public String getName();1522115339;@return the name of this {@link Phase};public String getName() {_        return name__    };return,the,name,of,this,link,phase;public,string,get,name,return,name
Phase -> public String getName();1522802545;@return the name of this {@link Phase};public String getName() {_        return name__    };return,the,name,of,this,link,phase;public,string,get,name,return,name
Phase -> public String getName();1523350437;@return the name of this {@link Phase};public String getName() {_        return name__    };return,the,name,of,this,link,phase;public,string,get,name,return,name
Phase -> public String getName();1523531736;@return the name of this {@link Phase};public String getName() {_        return name__    };return,the,name,of,this,link,phase;public,string,get,name,return,name
Phase -> public String getName();1532938110;@return the name of this {@link Phase};public String getName() {_        return name__    };return,the,name,of,this,link,phase;public,string,get,name,return,name
Phase -> public String getName();1534779142;@return the name of this {@link Phase};public String getName() {_        return name__    };return,the,name,of,this,link,phase;public,string,get,name,return,name
Phase -> public String getName();1536080587;@return the name of this {@link Phase};public String getName() {_        return name__    };return,the,name,of,this,link,phase;public,string,get,name,return,name
Phase -> public String getName();1536464455;@return the name of this {@link Phase};public String getName() {_        return name__    };return,the,name,of,this,link,phase;public,string,get,name,return,name
Phase -> public String getName();1540929242;@return the name of this {@link Phase};public String getName() {_        return name__    };return,the,name,of,this,link,phase;public,string,get,name,return,name
Phase -> public TimeValue getMinimumAge();1536464455;@return the age of the index when the index should move to this_{@link Phase}.;public TimeValue getMinimumAge() {_        return minimumAge__    };return,the,age,of,the,index,when,the,index,should,move,to,this,link,phase;public,time,value,get,minimum,age,return,minimum,age
Phase -> public TimeValue getMinimumAge();1540929242;@return the age of the index when the index should move to this_{@link Phase}.;public TimeValue getMinimumAge() {_        return minimumAge__    };return,the,age,of,the,index,when,the,index,should,move,to,this,link,phase;public,time,value,get,minimum,age,return,minimum,age
