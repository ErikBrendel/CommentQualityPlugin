# id;timestamp;commentText;codeText;commentWords;codeWords
CryptoService -> protected boolean isEncrypted(char[] chars);1524684173;Checks whether the given chars are encrypted_@param chars the chars to check if they are encrypted_@return true is data is encrypted;protected boolean isEncrypted(char[] chars) {_        return CharArrays.charsBeginsWith(ENCRYPTED_TEXT_PREFIX, chars)__    };checks,whether,the,given,chars,are,encrypted,param,chars,the,chars,to,check,if,they,are,encrypted,return,true,is,data,is,encrypted;protected,boolean,is,encrypted,char,chars,return,char,arrays,chars,begins,with,chars
CryptoService -> protected boolean isEncrypted(char[] chars);1534434117;Checks whether the given chars are encrypted_@param chars the chars to check if they are encrypted_@return true is data is encrypted;protected boolean isEncrypted(char[] chars) {_        return CharArrays.charsBeginsWith(ENCRYPTED_TEXT_PREFIX, chars)__    };checks,whether,the,given,chars,are,encrypted,param,chars,the,chars,to,check,if,they,are,encrypted,return,true,is,data,is,encrypted;protected,boolean,is,encrypted,char,chars,return,char,arrays,chars,begins,with,chars
CryptoService -> protected boolean isEncrypted(char[] chars);1541092382;Checks whether the given chars are encrypted_@param chars the chars to check if they are encrypted_@return true is data is encrypted;protected boolean isEncrypted(char[] chars) {_        return CharArrays.charsBeginsWith(ENCRYPTED_TEXT_PREFIX, chars)__    };checks,whether,the,given,chars,are,encrypted,param,chars,the,chars,to,check,if,they,are,encrypted,return,true,is,data,is,encrypted;protected,boolean,is,encrypted,char,chars,return,char,arrays,chars,begins,with,chars
CryptoService -> protected boolean isEncrypted(char[] chars);1541190643;Checks whether the given chars are encrypted_@param chars the chars to check if they are encrypted_@return true is data is encrypted;protected boolean isEncrypted(char[] chars) {_        return CharArrays.charsBeginsWith(ENCRYPTED_TEXT_PREFIX, chars)__    };checks,whether,the,given,chars,are,encrypted,param,chars,the,chars,to,check,if,they,are,encrypted,return,true,is,data,is,encrypted;protected,boolean,is,encrypted,char,chars,return,char,arrays,chars,begins,with,chars
CryptoService -> public char[] decrypt(char[] chars);1524684173;Decrypts the provided char array and returns the plain-text chars_@param chars the data to decrypt_@return plaintext chars;public char[] decrypt(char[] chars) {_        if (!isEncrypted(chars)) {_            _            return chars__        }__        String encrypted = new String(chars, ENCRYPTED_TEXT_PREFIX.length(), chars.length - ENCRYPTED_TEXT_PREFIX.length())__        byte[] bytes__        try {_            bytes = Base64.getDecoder().decode(encrypted)__        } catch (IllegalArgumentException e) {_            throw new ElasticsearchException("unable to decode encrypted data", e)__        }__        byte[] decrypted = decryptInternal(bytes, encryptionKey)__        return CharArrays.utf8BytesToChars(decrypted)__    };decrypts,the,provided,char,array,and,returns,the,plain,text,chars,param,chars,the,data,to,decrypt,return,plaintext,chars;public,char,decrypt,char,chars,if,is,encrypted,chars,return,chars,string,encrypted,new,string,chars,length,chars,length,length,byte,bytes,try,bytes,base64,get,decoder,decode,encrypted,catch,illegal,argument,exception,e,throw,new,elasticsearch,exception,unable,to,decode,encrypted,data,e,byte,decrypted,decrypt,internal,bytes,encryption,key,return,char,arrays,utf8bytes,to,chars,decrypted
CryptoService -> public char[] decrypt(char[] chars);1534434117;Decrypts the provided char array and returns the plain-text chars_@param chars the data to decrypt_@return plaintext chars;public char[] decrypt(char[] chars) {_        if (!isEncrypted(chars)) {_            _            return chars__        }__        String encrypted = new String(chars, ENCRYPTED_TEXT_PREFIX.length(), chars.length - ENCRYPTED_TEXT_PREFIX.length())__        byte[] bytes__        try {_            bytes = Base64.getDecoder().decode(encrypted)__        } catch (IllegalArgumentException e) {_            throw new ElasticsearchException("unable to decode encrypted data", e)__        }__        byte[] decrypted = decryptInternal(bytes, encryptionKey)__        return CharArrays.utf8BytesToChars(decrypted)__    };decrypts,the,provided,char,array,and,returns,the,plain,text,chars,param,chars,the,data,to,decrypt,return,plaintext,chars;public,char,decrypt,char,chars,if,is,encrypted,chars,return,chars,string,encrypted,new,string,chars,length,chars,length,length,byte,bytes,try,bytes,base64,get,decoder,decode,encrypted,catch,illegal,argument,exception,e,throw,new,elasticsearch,exception,unable,to,decode,encrypted,data,e,byte,decrypted,decrypt,internal,bytes,encryption,key,return,char,arrays,utf8bytes,to,chars,decrypted
CryptoService -> public char[] decrypt(char[] chars);1541092382;Decrypts the provided char array and returns the plain-text chars_@param chars the data to decrypt_@return plaintext chars;public char[] decrypt(char[] chars) {_        if (!isEncrypted(chars)) {_            _            return chars__        }__        String encrypted = new String(chars, ENCRYPTED_TEXT_PREFIX.length(), chars.length - ENCRYPTED_TEXT_PREFIX.length())__        byte[] bytes__        try {_            bytes = Base64.getDecoder().decode(encrypted)__        } catch (IllegalArgumentException e) {_            throw new ElasticsearchException("unable to decode encrypted data", e)__        }__        byte[] decrypted = decryptInternal(bytes, encryptionKey)__        return CharArrays.utf8BytesToChars(decrypted)__    };decrypts,the,provided,char,array,and,returns,the,plain,text,chars,param,chars,the,data,to,decrypt,return,plaintext,chars;public,char,decrypt,char,chars,if,is,encrypted,chars,return,chars,string,encrypted,new,string,chars,length,chars,length,length,byte,bytes,try,bytes,base64,get,decoder,decode,encrypted,catch,illegal,argument,exception,e,throw,new,elasticsearch,exception,unable,to,decode,encrypted,data,e,byte,decrypted,decrypt,internal,bytes,encryption,key,return,char,arrays,utf8bytes,to,chars,decrypted
CryptoService -> public char[] decrypt(char[] chars);1541190643;Decrypts the provided char array and returns the plain-text chars_@param chars the data to decrypt_@return plaintext chars;public char[] decrypt(char[] chars) {_        if (!isEncrypted(chars)) {_            _            return chars__        }__        String encrypted = new String(chars, ENCRYPTED_TEXT_PREFIX.length(), chars.length - ENCRYPTED_TEXT_PREFIX.length())__        byte[] bytes__        try {_            bytes = Base64.getDecoder().decode(encrypted)__        } catch (IllegalArgumentException e) {_            throw new ElasticsearchException("unable to decode encrypted data", e)__        }__        byte[] decrypted = decryptInternal(bytes, encryptionKey)__        return CharArrays.utf8BytesToChars(decrypted)__    };decrypts,the,provided,char,array,and,returns,the,plain,text,chars,param,chars,the,data,to,decrypt,return,plaintext,chars;public,char,decrypt,char,chars,if,is,encrypted,chars,return,chars,string,encrypted,new,string,chars,length,chars,length,length,byte,bytes,try,bytes,base64,get,decoder,decode,encrypted,catch,illegal,argument,exception,e,throw,new,elasticsearch,exception,unable,to,decode,encrypted,data,e,byte,decrypted,decrypt,internal,bytes,encryption,key,return,char,arrays,utf8bytes,to,chars,decrypted
CryptoService -> public char[] encrypt(char[] chars);1524684173;Encrypts the provided char array and returns the encrypted values in a char array_@param chars the characters to encrypt_@return character array representing the encrypted data;public char[] encrypt(char[] chars) {_        byte[] charBytes = CharArrays.toUtf8Bytes(chars)__        String base64 = Base64.getEncoder().encodeToString(encryptInternal(charBytes, encryptionKey))__        return ENCRYPTED_TEXT_PREFIX.concat(base64).toCharArray()__    };encrypts,the,provided,char,array,and,returns,the,encrypted,values,in,a,char,array,param,chars,the,characters,to,encrypt,return,character,array,representing,the,encrypted,data;public,char,encrypt,char,chars,byte,char,bytes,char,arrays,to,utf8bytes,chars,string,base64,base64,get,encoder,encode,to,string,encrypt,internal,char,bytes,encryption,key,return,concat,base64,to,char,array
CryptoService -> public char[] encrypt(char[] chars);1534434117;Encrypts the provided char array and returns the encrypted values in a char array_@param chars the characters to encrypt_@return character array representing the encrypted data;public char[] encrypt(char[] chars) {_        byte[] charBytes = CharArrays.toUtf8Bytes(chars)__        String base64 = Base64.getEncoder().encodeToString(encryptInternal(charBytes, encryptionKey))__        return ENCRYPTED_TEXT_PREFIX.concat(base64).toCharArray()__    };encrypts,the,provided,char,array,and,returns,the,encrypted,values,in,a,char,array,param,chars,the,characters,to,encrypt,return,character,array,representing,the,encrypted,data;public,char,encrypt,char,chars,byte,char,bytes,char,arrays,to,utf8bytes,chars,string,base64,base64,get,encoder,encode,to,string,encrypt,internal,char,bytes,encryption,key,return,concat,base64,to,char,array
CryptoService -> public char[] encrypt(char[] chars);1541092382;Encrypts the provided char array and returns the encrypted values in a char array_@param chars the characters to encrypt_@return character array representing the encrypted data;public char[] encrypt(char[] chars) {_        byte[] charBytes = CharArrays.toUtf8Bytes(chars)__        String base64 = Base64.getEncoder().encodeToString(encryptInternal(charBytes, encryptionKey))__        return ENCRYPTED_TEXT_PREFIX.concat(base64).toCharArray()__    };encrypts,the,provided,char,array,and,returns,the,encrypted,values,in,a,char,array,param,chars,the,characters,to,encrypt,return,character,array,representing,the,encrypted,data;public,char,encrypt,char,chars,byte,char,bytes,char,arrays,to,utf8bytes,chars,string,base64,base64,get,encoder,encode,to,string,encrypt,internal,char,bytes,encryption,key,return,concat,base64,to,char,array
CryptoService -> public char[] encrypt(char[] chars);1541190643;Encrypts the provided char array and returns the encrypted values in a char array_@param chars the characters to encrypt_@return character array representing the encrypted data;public char[] encrypt(char[] chars) {_        byte[] charBytes = CharArrays.toUtf8Bytes(chars)__        String base64 = Base64.getEncoder().encodeToString(encryptInternal(charBytes, encryptionKey))__        return ENCRYPTED_TEXT_PREFIX.concat(base64).toCharArray()__    };encrypts,the,provided,char,array,and,returns,the,encrypted,values,in,a,char,array,param,chars,the,characters,to,encrypt,return,character,array,representing,the,encrypted,data;public,char,encrypt,char,chars,byte,char,bytes,char,arrays,to,utf8bytes,chars,string,base64,base64,get,encoder,encode,to,string,encrypt,internal,char,bytes,encryption,key,return,concat,base64,to,char,array
