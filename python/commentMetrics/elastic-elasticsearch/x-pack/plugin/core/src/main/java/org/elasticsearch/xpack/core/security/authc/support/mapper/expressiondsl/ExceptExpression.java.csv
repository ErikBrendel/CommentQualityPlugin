commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void writeTo(StreamOutput out) throws IOException {     ExpressionParser.writeExpression(expression, out). }
false;public;0;4;;@Override public String getWriteableName() {     return NAME. }
false;public;1;4;;@Override public boolean match(ExpressionModel model) {     return !expression.match(model). }
false;public;1;12;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     final ExceptExpression that = (ExceptExpression) o.     return this.expression.equals(that.expression). }
false;public;0;4;;@Override public int hashCode() {     return expression.hashCode(). }
false;;0;3;;RoleMapperExpression getInnerExpression() {     return expression. }
false;public;2;7;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(ExpressionParser.Fields.EXCEPT.getPreferredName()).     expression.toXContent(builder, params).     return builder.endObject(). }
