commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;3;;public static InvalidateApiKeyResponse emptyResponse() {     return new InvalidateApiKeyResponse(Collections.emptyList(), Collections.emptyList(), Collections.emptyList()). }
false;public;0;3;;public List<String> getInvalidatedApiKeys() {     return invalidatedApiKeys. }
false;public;0;3;;public List<String> getPreviouslyInvalidatedApiKeys() {     return previouslyInvalidatedApiKeys. }
false;public;0;3;;public List<ElasticsearchException> getErrors() {     return errors. }
false;public;2;18;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().array("invalidated_api_keys", invalidatedApiKeys.toArray(Strings.EMPTY_ARRAY)).array("previously_invalidated_api_keys", previouslyInvalidatedApiKeys.toArray(Strings.EMPTY_ARRAY)).field("error_count", errors.size()).     if (errors.isEmpty() == false) {         builder.field("error_details").         builder.startArray().         for (ElasticsearchException e : errors) {             builder.startObject().             ElasticsearchException.generateThrowableXContent(builder, params, e).             builder.endObject().         }         builder.endArray().     }     return builder.endObject(). }
false;public;1;4;;@Override public void readFrom(StreamInput in) throws IOException {     throw new UnsupportedOperationException("usage of Streamable is to be replaced by Writeable"). }
false;public;1;7;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeStringCollection(invalidatedApiKeys).     out.writeStringCollection(previouslyInvalidatedApiKeys).     out.writeCollection(errors, StreamOutput::writeException). }
false;public,static;1;3;;public static InvalidateApiKeyResponse fromXContent(XContentParser parser) throws IOException {     return PARSER.parse(parser, null). }
false;public;0;5;;@Override public String toString() {     return "InvalidateApiKeyResponse [invalidatedApiKeys=" + invalidatedApiKeys + ", previouslyInvalidatedApiKeys=" + previouslyInvalidatedApiKeys + ", errors=" + errors + "]". }
