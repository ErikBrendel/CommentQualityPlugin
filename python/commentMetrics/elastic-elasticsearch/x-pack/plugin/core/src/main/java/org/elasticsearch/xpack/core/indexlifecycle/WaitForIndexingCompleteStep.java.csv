commented;modifiers;parameterAmount;loc;comment;code
false;public;2;20;;@Override public Result isConditionMet(Index index, ClusterState clusterState) {     IndexMetaData followerIndex = clusterState.metaData().index(index).     if (followerIndex == null) {         // Index must have been since deleted, ignore it         logger.debug("[{}] lifecycle action for index [{}] executed but index no longer exists", getKey().getAction(), index.getName()).         return new Result(false, null).     }     Map<String, String> customIndexMetadata = followerIndex.getCustomData(CCR_METADATA_KEY).     if (customIndexMetadata == null) {         return new Result(true, null).     }     boolean indexingComplete = LifecycleSettings.LIFECYCLE_INDEXING_COMPLETE_SETTING.get(followerIndex.getSettings()).     if (indexingComplete) {         return new Result(true, null).     } else {         return new Result(false, new IndexingNotCompleteInfo()).     } }
false;;0;3;;String getMessage() {     return message. }
false;public;2;8;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(MESSAGE_FIELD.getPreferredName(), message).     builder.field(INDEXING_COMPLETE.getPreferredName(), false).     builder.endObject().     return builder. }
false;public;1;7;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     IndexingNotCompleteInfo info = (IndexingNotCompleteInfo) o.     return Objects.equals(getMessage(), info.getMessage()). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(getMessage()). }
