commented;modifiers;parameterAmount;loc;comment;code
false;;0;3;;String getShrunkIndexPrefix() {     return shrunkIndexPrefix. }
false;public;3;23;;@Override public void performDuringNoSnapshot(IndexMetaData indexMetaData, ClusterState currentState, Listener listener) {     // get source index     String index = indexMetaData.getIndex().getName().     // get target shrink index     String targetIndexName = shrunkIndexPrefix + index.     IndicesAliasesRequest aliasesRequest = new IndicesAliasesRequest().addAliasAction(IndicesAliasesRequest.AliasActions.removeIndex().index(index)).addAliasAction(IndicesAliasesRequest.AliasActions.add().index(targetIndexName).alias(index)).     // copy over other aliases from original index     indexMetaData.getAliases().values().spliterator().forEachRemaining(aliasMetaDataObjectCursor -> {         AliasMetaData aliasMetaDataToAdd = aliasMetaDataObjectCursor.value.         // inherit all alias properties except `is_write_index`         aliasesRequest.addAliasAction(IndicesAliasesRequest.AliasActions.add().index(targetIndexName).alias(aliasMetaDataToAdd.alias()).indexRouting(aliasMetaDataToAdd.indexRouting()).searchRouting(aliasMetaDataToAdd.searchRouting()).filter(aliasMetaDataToAdd.filter() == null ? null : aliasMetaDataToAdd.filter().string()).writeIndex(null)).     }).     getClient().admin().indices().aliases(aliasesRequest, ActionListener.wrap(response -> listener.onResponse(true), listener::onFailure)). }
false;public;0;4;;@Override public boolean indexSurvives() {     return false. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(super.hashCode(), shrunkIndexPrefix). }
false;public;1;12;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     ShrinkSetAliasStep other = (ShrinkSetAliasStep) obj.     return super.equals(obj) && Objects.equals(shrunkIndexPrefix, other.shrunkIndexPrefix). }
