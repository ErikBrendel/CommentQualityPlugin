commented;modifiers;parameterAmount;loc;comment;code
false;public;2;28;;@Override public void evaluateCondition(IndexMetaData indexMetaData, Listener listener) {     IndicesStatsRequest request = new IndicesStatsRequest().     request.clear().     String indexName = indexMetaData.getIndex().getName().     request.indices(indexName).     getClient().admin().indices().stats(request, ActionListener.wrap((response) -> {         IndexStats indexStats = response.getIndex(indexName).         if (indexStats == null) {             // Index was probably deleted             logger.debug("got null shard stats for index {}, proceeding on the assumption it has been deleted", indexMetaData.getIndex()).             listener.onResponse(true, null).             return.         }         boolean isCurrentlyLeaderIndex = Arrays.stream(indexStats.getShards()).map(ShardStats::getRetentionLeaseStats).flatMap(retentionLeaseStats -> retentionLeaseStats.retentionLeases().leases().stream()).anyMatch(lease -> CCR_LEASE_KEY.equals(lease.source())).         if (isCurrentlyLeaderIndex) {             listener.onResponse(false, new Info()).         } else {             listener.onResponse(true, null).         }     }, listener::onFailure)). }
false;;0;3;;String getMessage() {     return message. }
false;public;2;7;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(MESSAGE_FIELD.getPreferredName(), message).     builder.endObject().     return builder. }
false;public;1;10;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     return true. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(getMessage()). }
