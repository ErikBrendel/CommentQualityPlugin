commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeString(watchId).     out.writeStringArray(actionIds). }
true;public;0;3;/**  * @return The id of the watch to be acked  */ ;/**  * @return The id of the watch to be acked  */ public String getWatchId() {     return watchId. }
true;public;1;3;/**  * @param actionIds The ids of the actions to be acked  */ ;/**  * @param actionIds The ids of the actions to be acked  */ public void setActionIds(String... actionIds) {     this.actionIds = actionIds. }
true;public;0;3;/**  * @return The ids of the actions to be acked  */ ;/**  * @return The ids of the actions to be acked  */ public String[] getActionIds() {     return actionIds. }
false;public;0;21;;@Override public ActionRequestValidationException validate() {     ActionRequestValidationException validationException = null.     if (watchId == null) {         validationException = ValidateActions.addValidationError("watch id is missing", validationException).     } else if (WatcherUtils.isValidId(watchId) == false) {         validationException = ValidateActions.addValidationError("watch id contains whitespace", validationException).     }     if (actionIds != null) {         for (String actionId : actionIds) {             if (actionId == null) {                 validationException = ValidateActions.addValidationError(String.format(Locale.ROOT, "action id may not be null"), validationException).             } else if (WatcherUtils.isValidId(actionId) == false) {                 validationException = ValidateActions.addValidationError(String.format(Locale.ROOT, "action id [%s] contains whitespace", actionId), validationException).             }         }     }     return validationException. }
false;public;1;4;;@Override public void readFrom(StreamInput in) throws IOException {     throw new UnsupportedOperationException("usage of Streamable is to be replaced by Writeable"). }
false;public;0;15;;@Override public String toString() {     StringBuilder sb = new StringBuilder("ack [").append(watchId).append("]").     if (actionIds.length > 0) {         sb.append("[").         for (int i = 0. i < actionIds.length. i++) {             if (i > 0) {                 sb.append(", ").             }             sb.append(actionIds[i]).         }         sb.append("]").     }     return sb.toString(). }
