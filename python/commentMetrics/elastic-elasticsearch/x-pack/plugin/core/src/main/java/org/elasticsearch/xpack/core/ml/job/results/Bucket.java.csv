# id;timestamp;commentText;codeText;commentWords;codeWords
Bucket -> public List<AnomalyRecord> getRecords();1524684173;Get all the anomaly records associated with this bucket._The records are not part of the bucket document. They will_only be present when the bucket was retrieved and expanded_to contain the associated records.__@return the anomaly records for the bucket IF the bucket was expanded.;public List<AnomalyRecord> getRecords() {_        return records__    };get,all,the,anomaly,records,associated,with,this,bucket,the,records,are,not,part,of,the,bucket,document,they,will,only,be,present,when,the,bucket,was,retrieved,and,expanded,to,contain,the,associated,records,return,the,anomaly,records,for,the,bucket,if,the,bucket,was,expanded;public,list,anomaly,record,get,records,return,records
Bucket -> public List<AnomalyRecord> getRecords();1534338685;Get all the anomaly records associated with this bucket._The records are not part of the bucket document. They will_only be present when the bucket was retrieved and expanded_to contain the associated records.__@return the anomaly records for the bucket IF the bucket was expanded.;public List<AnomalyRecord> getRecords() {_        return records__    };get,all,the,anomaly,records,associated,with,this,bucket,the,records,are,not,part,of,the,bucket,document,they,will,only,be,present,when,the,bucket,was,retrieved,and,expanded,to,contain,the,associated,records,return,the,anomaly,records,for,the,bucket,if,the,bucket,was,expanded;public,list,anomaly,record,get,records,return,records
Bucket -> public List<AnomalyRecord> getRecords();1535139672;Get all the anomaly records associated with this bucket._The records are not part of the bucket document. They will_only be present when the bucket was retrieved and expanded_to contain the associated records.__@return the anomaly records for the bucket IF the bucket was expanded.;public List<AnomalyRecord> getRecords() {_        return records__    };get,all,the,anomaly,records,associated,with,this,bucket,the,records,are,not,part,of,the,bucket,document,they,will,only,be,present,when,the,bucket,was,retrieved,and,expanded,to,contain,the,associated,records,return,the,anomaly,records,for,the,bucket,if,the,bucket,was,expanded;public,list,anomaly,record,get,records,return,records
Bucket -> public List<AnomalyRecord> getRecords();1539615817;Get all the anomaly records associated with this bucket._The records are not part of the bucket document. They will_only be present when the bucket was retrieved and expanded_to contain the associated records.__@return the anomaly records for the bucket IF the bucket was expanded.;public List<AnomalyRecord> getRecords() {_        return records__    };get,all,the,anomaly,records,associated,with,this,bucket,the,records,are,not,part,of,the,bucket,document,they,will,only,be,present,when,the,bucket,was,retrieved,and,expanded,to,contain,the,associated,records,return,the,anomaly,records,for,the,bucket,if,the,bucket,was,expanded;public,list,anomaly,record,get,records,return,records
Bucket -> public List<AnomalyRecord> getRecords();1548265937;Get all the anomaly records associated with this bucket._The records are not part of the bucket document. They will_only be present when the bucket was retrieved and expanded_to contain the associated records.__@return the anomaly records for the bucket IF the bucket was expanded.;public List<AnomalyRecord> getRecords() {_        return records__    };get,all,the,anomaly,records,associated,with,this,bucket,the,records,are,not,part,of,the,bucket,document,they,will,only,be,present,when,the,bucket,was,retrieved,and,expanded,to,contain,the,associated,records,return,the,anomaly,records,for,the,bucket,if,the,bucket,was,expanded;public,list,anomaly,record,get,records,return,records
Bucket -> @Override     public boolean equals(Object other);1524684173;Compare all the fields and embedded anomaly records (if any);@Override_    public boolean equals(Object other) {_        if (this == other) {_            return true__        }__        if (other instanceof Bucket == false) {_            return false__        }__        Bucket that = (Bucket) other___        return Objects.equals(this.jobId, that.jobId) && Objects.equals(this.timestamp, that.timestamp)_                && (this.eventCount == that.eventCount) && (this.bucketSpan == that.bucketSpan)_                && (this.anomalyScore == that.anomalyScore) && (this.initialAnomalyScore == that.initialAnomalyScore)_                && Objects.equals(this.records, that.records) && Objects.equals(this.isInterim, that.isInterim)_                && Objects.equals(this.bucketInfluencers, that.bucketInfluencers)_                && Objects.equals(this.partitionScores, that.partitionScores)_                && (this.processingTimeMs == that.processingTimeMs)_                && Objects.equals(this.scheduledEvents, that.scheduledEvents)__    };compare,all,the,fields,and,embedded,anomaly,records,if,any;override,public,boolean,equals,object,other,if,this,other,return,true,if,other,instanceof,bucket,false,return,false,bucket,that,bucket,other,return,objects,equals,this,job,id,that,job,id,objects,equals,this,timestamp,that,timestamp,this,event,count,that,event,count,this,bucket,span,that,bucket,span,this,anomaly,score,that,anomaly,score,this,initial,anomaly,score,that,initial,anomaly,score,objects,equals,this,records,that,records,objects,equals,this,is,interim,that,is,interim,objects,equals,this,bucket,influencers,that,bucket,influencers,objects,equals,this,partition,scores,that,partition,scores,this,processing,time,ms,that,processing,time,ms,objects,equals,this,scheduled,events,that,scheduled,events
Bucket -> @Override     public boolean equals(Object other);1534338685;Compare all the fields and embedded anomaly records (if any);@Override_    public boolean equals(Object other) {_        if (this == other) {_            return true__        }__        if (other instanceof Bucket == false) {_            return false__        }__        Bucket that = (Bucket) other___        return Objects.equals(this.jobId, that.jobId) && Objects.equals(this.timestamp, that.timestamp)_                && (this.eventCount == that.eventCount) && (this.bucketSpan == that.bucketSpan)_                && (this.anomalyScore == that.anomalyScore) && (this.initialAnomalyScore == that.initialAnomalyScore)_                && Objects.equals(this.records, that.records) && Objects.equals(this.isInterim, that.isInterim)_                && Objects.equals(this.bucketInfluencers, that.bucketInfluencers)_                && (this.processingTimeMs == that.processingTimeMs)_                && Objects.equals(this.scheduledEvents, that.scheduledEvents)__    };compare,all,the,fields,and,embedded,anomaly,records,if,any;override,public,boolean,equals,object,other,if,this,other,return,true,if,other,instanceof,bucket,false,return,false,bucket,that,bucket,other,return,objects,equals,this,job,id,that,job,id,objects,equals,this,timestamp,that,timestamp,this,event,count,that,event,count,this,bucket,span,that,bucket,span,this,anomaly,score,that,anomaly,score,this,initial,anomaly,score,that,initial,anomaly,score,objects,equals,this,records,that,records,objects,equals,this,is,interim,that,is,interim,objects,equals,this,bucket,influencers,that,bucket,influencers,this,processing,time,ms,that,processing,time,ms,objects,equals,this,scheduled,events,that,scheduled,events
Bucket -> @Override     public boolean equals(Object other);1535139672;Compare all the fields and embedded anomaly records (if any);@Override_    public boolean equals(Object other) {_        if (this == other) {_            return true__        }__        if (other instanceof Bucket == false) {_            return false__        }__        Bucket that = (Bucket) other___        return Objects.equals(this.jobId, that.jobId) && Objects.equals(this.timestamp, that.timestamp)_                && (this.eventCount == that.eventCount) && (this.bucketSpan == that.bucketSpan)_                && (this.anomalyScore == that.anomalyScore) && (this.initialAnomalyScore == that.initialAnomalyScore)_                && Objects.equals(this.records, that.records) && Objects.equals(this.isInterim, that.isInterim)_                && Objects.equals(this.bucketInfluencers, that.bucketInfluencers)_                && (this.processingTimeMs == that.processingTimeMs)_                && Objects.equals(this.scheduledEvents, that.scheduledEvents)__    };compare,all,the,fields,and,embedded,anomaly,records,if,any;override,public,boolean,equals,object,other,if,this,other,return,true,if,other,instanceof,bucket,false,return,false,bucket,that,bucket,other,return,objects,equals,this,job,id,that,job,id,objects,equals,this,timestamp,that,timestamp,this,event,count,that,event,count,this,bucket,span,that,bucket,span,this,anomaly,score,that,anomaly,score,this,initial,anomaly,score,that,initial,anomaly,score,objects,equals,this,records,that,records,objects,equals,this,is,interim,that,is,interim,objects,equals,this,bucket,influencers,that,bucket,influencers,this,processing,time,ms,that,processing,time,ms,objects,equals,this,scheduled,events,that,scheduled,events
Bucket -> @Override     public boolean equals(Object other);1539615817;Compare all the fields and embedded anomaly records (if any);@Override_    public boolean equals(Object other) {_        if (this == other) {_            return true__        }__        if (other instanceof Bucket == false) {_            return false__        }__        Bucket that = (Bucket) other___        return Objects.equals(this.jobId, that.jobId) && Objects.equals(this.timestamp, that.timestamp)_                && (this.eventCount == that.eventCount) && (this.bucketSpan == that.bucketSpan)_                && (this.anomalyScore == that.anomalyScore) && (this.initialAnomalyScore == that.initialAnomalyScore)_                && Objects.equals(this.records, that.records) && Objects.equals(this.isInterim, that.isInterim)_                && Objects.equals(this.bucketInfluencers, that.bucketInfluencers)_                && (this.processingTimeMs == that.processingTimeMs)_                && Objects.equals(this.scheduledEvents, that.scheduledEvents)__    };compare,all,the,fields,and,embedded,anomaly,records,if,any;override,public,boolean,equals,object,other,if,this,other,return,true,if,other,instanceof,bucket,false,return,false,bucket,that,bucket,other,return,objects,equals,this,job,id,that,job,id,objects,equals,this,timestamp,that,timestamp,this,event,count,that,event,count,this,bucket,span,that,bucket,span,this,anomaly,score,that,anomaly,score,this,initial,anomaly,score,that,initial,anomaly,score,objects,equals,this,records,that,records,objects,equals,this,is,interim,that,is,interim,objects,equals,this,bucket,influencers,that,bucket,influencers,this,processing,time,ms,that,processing,time,ms,objects,equals,this,scheduled,events,that,scheduled,events
Bucket -> @Override     public boolean equals(Object other);1548265937;Compare all the fields and embedded anomaly records (if any);@Override_    public boolean equals(Object other) {_        if (this == other) {_            return true__        }__        if (other instanceof Bucket == false) {_            return false__        }__        Bucket that = (Bucket) other___        return Objects.equals(this.jobId, that.jobId) && Objects.equals(this.timestamp, that.timestamp)_                && (this.eventCount == that.eventCount) && (this.bucketSpan == that.bucketSpan)_                && (this.anomalyScore == that.anomalyScore) && (this.initialAnomalyScore == that.initialAnomalyScore)_                && Objects.equals(this.records, that.records) && Objects.equals(this.isInterim, that.isInterim)_                && Objects.equals(this.bucketInfluencers, that.bucketInfluencers)_                && (this.processingTimeMs == that.processingTimeMs)_                && Objects.equals(this.scheduledEvents, that.scheduledEvents)__    };compare,all,the,fields,and,embedded,anomaly,records,if,any;override,public,boolean,equals,object,other,if,this,other,return,true,if,other,instanceof,bucket,false,return,false,bucket,that,bucket,other,return,objects,equals,this,job,id,that,job,id,objects,equals,this,timestamp,that,timestamp,this,event,count,that,event,count,this,bucket,span,that,bucket,span,this,anomaly,score,that,anomaly,score,this,initial,anomaly,score,that,initial,anomaly,score,objects,equals,this,records,that,records,objects,equals,this,is,interim,that,is,interim,objects,equals,this,bucket,influencers,that,bucket,influencers,this,processing,time,ms,that,processing,time,ms,objects,equals,this,scheduled,events,that,scheduled,events
Bucket -> public long getBucketSpan();1524684173;Bucketspan expressed in seconds;public long getBucketSpan() {_        return bucketSpan__    };bucketspan,expressed,in,seconds;public,long,get,bucket,span,return,bucket,span
Bucket -> public long getBucketSpan();1534338685;Bucketspan expressed in seconds;public long getBucketSpan() {_        return bucketSpan__    };bucketspan,expressed,in,seconds;public,long,get,bucket,span,return,bucket,span
Bucket -> public long getBucketSpan();1535139672;Bucketspan expressed in seconds;public long getBucketSpan() {_        return bucketSpan__    };bucketspan,expressed,in,seconds;public,long,get,bucket,span,return,bucket,span
Bucket -> public long getBucketSpan();1539615817;Bucketspan expressed in seconds;public long getBucketSpan() {_        return bucketSpan__    };bucketspan,expressed,in,seconds;public,long,get,bucket,span,return,bucket,span
Bucket -> public long getBucketSpan();1548265937;Bucketspan expressed in seconds;public long getBucketSpan() {_        return bucketSpan__    };bucketspan,expressed,in,seconds;public,long,get,bucket,span,return,bucket,span
Bucket -> public boolean isNormalizable();1524684173;This method encapsulated the logic for whether a bucket should be normalized._Buckets that have a zero anomaly score themselves and no partition scores with_non-zero score should not be normalized as their score will not change and they_will just add overhead.__@return true if the bucket should be normalized or false otherwise;public boolean isNormalizable() {_        return anomalyScore > 0.0 || partitionScores.stream().anyMatch(s -> s.getRecordScore() > 0)__    };this,method,encapsulated,the,logic,for,whether,a,bucket,should,be,normalized,buckets,that,have,a,zero,anomaly,score,themselves,and,no,partition,scores,with,non,zero,score,should,not,be,normalized,as,their,score,will,not,change,and,they,will,just,add,overhead,return,true,if,the,bucket,should,be,normalized,or,false,otherwise;public,boolean,is,normalizable,return,anomaly,score,0,0,partition,scores,stream,any,match,s,s,get,record,score,0
Bucket -> public boolean isNormalizable();1534338685;This method encapsulated the logic for whether a bucket should be normalized._Buckets that have a zero anomaly score themselves and no partition scores with_non-zero score should not be normalized as their score will not change and they_will just add overhead.__@return true if the bucket should be normalized or false otherwise;public boolean isNormalizable() {_        return anomalyScore > 0.0__    };this,method,encapsulated,the,logic,for,whether,a,bucket,should,be,normalized,buckets,that,have,a,zero,anomaly,score,themselves,and,no,partition,scores,with,non,zero,score,should,not,be,normalized,as,their,score,will,not,change,and,they,will,just,add,overhead,return,true,if,the,bucket,should,be,normalized,or,false,otherwise;public,boolean,is,normalizable,return,anomaly,score,0,0
Bucket -> public boolean isNormalizable();1535139672;This method encapsulated the logic for whether a bucket should be normalized._Buckets that have a zero anomaly score themselves and no partition scores with_non-zero score should not be normalized as their score will not change and they_will just add overhead.__@return true if the bucket should be normalized or false otherwise;public boolean isNormalizable() {_        return anomalyScore > 0.0__    };this,method,encapsulated,the,logic,for,whether,a,bucket,should,be,normalized,buckets,that,have,a,zero,anomaly,score,themselves,and,no,partition,scores,with,non,zero,score,should,not,be,normalized,as,their,score,will,not,change,and,they,will,just,add,overhead,return,true,if,the,bucket,should,be,normalized,or,false,otherwise;public,boolean,is,normalizable,return,anomaly,score,0,0
Bucket -> public boolean isNormalizable();1539615817;This method encapsulated the logic for whether a bucket should be normalized._Buckets that have a zero anomaly score themselves and no partition scores with_non-zero score should not be normalized as their score will not change and they_will just add overhead.__@return true if the bucket should be normalized or false otherwise;public boolean isNormalizable() {_        return anomalyScore > 0.0__    };this,method,encapsulated,the,logic,for,whether,a,bucket,should,be,normalized,buckets,that,have,a,zero,anomaly,score,themselves,and,no,partition,scores,with,non,zero,score,should,not,be,normalized,as,their,score,will,not,change,and,they,will,just,add,overhead,return,true,if,the,bucket,should,be,normalized,or,false,otherwise;public,boolean,is,normalizable,return,anomaly,score,0,0
Bucket -> public boolean isNormalizable();1548265937;This method encapsulated the logic for whether a bucket should be normalized._Buckets that have a zero anomaly score themselves and no partition scores with_non-zero score should not be normalized as their score will not change and they_will just add overhead.__@return true if the bucket should be normalized or false otherwise;public boolean isNormalizable() {_        return anomalyScore > 0.0__    };this,method,encapsulated,the,logic,for,whether,a,bucket,should,be,normalized,buckets,that,have,a,zero,anomaly,score,themselves,and,no,partition,scores,with,non,zero,score,should,not,be,normalized,as,their,score,will,not,change,and,they,will,just,add,overhead,return,true,if,the,bucket,should,be,normalized,or,false,otherwise;public,boolean,is,normalizable,return,anomaly,score,0,0
Bucket -> public long getEventCount();1524684173;The number of records (events) actually processed in this bucket.;public long getEventCount() {_        return eventCount__    };the,number,of,records,events,actually,processed,in,this,bucket;public,long,get,event,count,return,event,count
Bucket -> public long getEventCount();1534338685;The number of records (events) actually processed in this bucket.;public long getEventCount() {_        return eventCount__    };the,number,of,records,events,actually,processed,in,this,bucket;public,long,get,event,count,return,event,count
Bucket -> public long getEventCount();1535139672;The number of records (events) actually processed in this bucket.;public long getEventCount() {_        return eventCount__    };the,number,of,records,events,actually,processed,in,this,bucket;public,long,get,event,count,return,event,count
Bucket -> public long getEventCount();1539615817;The number of records (events) actually processed in this bucket.;public long getEventCount() {_        return eventCount__    };the,number,of,records,events,actually,processed,in,this,bucket;public,long,get,event,count,return,event,count
Bucket -> public long getEventCount();1548265937;The number of records (events) actually processed in this bucket.;public long getEventCount() {_        return eventCount__    };the,number,of,records,events,actually,processed,in,this,bucket;public,long,get,event,count,return,event,count
Bucket -> public long getEpoch();1524684173;Timestamp expressed in seconds since the epoch (rather than Java's_convention of milliseconds).;public long getEpoch() {_        return timestamp.getTime() / 1000__    };timestamp,expressed,in,seconds,since,the,epoch,rather,than,java,s,convention,of,milliseconds;public,long,get,epoch,return,timestamp,get,time,1000
Bucket -> public long getEpoch();1534338685;Timestamp expressed in seconds since the epoch (rather than Java's_convention of milliseconds).;public long getEpoch() {_        return timestamp.getTime() / 1000__    };timestamp,expressed,in,seconds,since,the,epoch,rather,than,java,s,convention,of,milliseconds;public,long,get,epoch,return,timestamp,get,time,1000
Bucket -> public long getEpoch();1535139672;Timestamp expressed in seconds since the epoch (rather than Java's_convention of milliseconds).;public long getEpoch() {_        return timestamp.getTime() / 1000__    };timestamp,expressed,in,seconds,since,the,epoch,rather,than,java,s,convention,of,milliseconds;public,long,get,epoch,return,timestamp,get,time,1000
Bucket -> public long getEpoch();1539615817;Timestamp expressed in seconds since the epoch (rather than Java's_convention of milliseconds).;public long getEpoch() {_        return timestamp.getTime() / 1000__    };timestamp,expressed,in,seconds,since,the,epoch,rather,than,java,s,convention,of,milliseconds;public,long,get,epoch,return,timestamp,get,time,1000
Bucket -> public long getEpoch();1548265937;Timestamp expressed in seconds since the epoch (rather than Java's_convention of milliseconds).;public long getEpoch() {_        return timestamp.getTime() / 1000__    };timestamp,expressed,in,seconds,since,the,epoch,rather,than,java,s,convention,of,milliseconds;public,long,get,epoch,return,timestamp,get,time,1000
