commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public List<XPackFeatureSet.Usage> getUsages() {     return usages. }
false;public;1;8;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeVInt(usages.size()).     for (XPackFeatureSet.Usage usage : usages) {         out.writeNamedWriteable(usage).     } }
false;public;1;9;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     int size = in.readVInt().     usages = new ArrayList<>(size).     for (int i = 0. i < size. i++) {         usages.add(in.readNamedWriteable(XPackFeatureSet.Usage.class)).     } }
