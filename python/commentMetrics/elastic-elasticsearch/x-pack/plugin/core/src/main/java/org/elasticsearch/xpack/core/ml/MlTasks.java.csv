# id;timestamp;commentText;codeText;commentWords;codeWords
MlTasks -> public static String datafeedTaskId(String datafeedId);1532456624;Namespaces the task ids for datafeeds._A job id can be used as a datafeed id, because they are stored separately in cluster state.;public static String datafeedTaskId(String datafeedId) {_        return "datafeed-" + datafeedId__    };namespaces,the,task,ids,for,datafeeds,a,job,id,can,be,used,as,a,datafeed,id,because,they,are,stored,separately,in,cluster,state;public,static,string,datafeed,task,id,string,datafeed,id,return,datafeed,datafeed,id
MlTasks -> public static String datafeedTaskId(String datafeedId);1545155131;Namespaces the task ids for datafeeds._A job id can be used as a datafeed id, because they are stored separately in cluster state.;public static String datafeedTaskId(String datafeedId) {_        return DATAFEED_TASK_ID_PREFIX + datafeedId__    };namespaces,the,task,ids,for,datafeeds,a,job,id,can,be,used,as,a,datafeed,id,because,they,are,stored,separately,in,cluster,state;public,static,string,datafeed,task,id,string,datafeed,id,return,datafeed,id
MlTasks -> public static String datafeedTaskId(String datafeedId);1547030567;Namespaces the task ids for datafeeds._A job id can be used as a datafeed id, because they are stored separately in cluster state.;public static String datafeedTaskId(String datafeedId) {_        return DATAFEED_TASK_ID_PREFIX + datafeedId__    };namespaces,the,task,ids,for,datafeeds,a,job,id,can,be,used,as,a,datafeed,id,because,they,are,stored,separately,in,cluster,state;public,static,string,datafeed,task,id,string,datafeed,id,return,datafeed,id
MlTasks -> public static String datafeedTaskId(String datafeedId);1547576499;Namespaces the task ids for datafeeds._A job id can be used as a datafeed id, because they are stored separately in cluster state.;public static String datafeedTaskId(String datafeedId) {_        return DATAFEED_TASK_ID_PREFIX + datafeedId__    };namespaces,the,task,ids,for,datafeeds,a,job,id,can,be,used,as,a,datafeed,id,because,they,are,stored,separately,in,cluster,state;public,static,string,datafeed,task,id,string,datafeed,id,return,datafeed,id
MlTasks -> public static String datafeedTaskId(String datafeedId);1548688050;Namespaces the task ids for datafeeds._A job id can be used as a datafeed id, because they are stored separately in cluster state.;public static String datafeedTaskId(String datafeedId) {_        return DATAFEED_TASK_ID_PREFIX + datafeedId__    };namespaces,the,task,ids,for,datafeeds,a,job,id,can,be,used,as,a,datafeed,id,because,they,are,stored,separately,in,cluster,state;public,static,string,datafeed,task,id,string,datafeed,id,return,datafeed,id
MlTasks -> public static Set<String> unallocatedJobIds(@Nullable PersistentTasksCustomMetaData tasks,                                                 DiscoveryNodes nodes);1547576499;Get the job Ids of anomaly detector job tasks that do_not have an assignment.__@param tasks Persistent tasks. If null an empty set is returned._@param nodes The cluster nodes_@return The job Ids of tasks to do not have an assignment.;public static Set<String> unallocatedJobIds(@Nullable PersistentTasksCustomMetaData tasks,_                                                DiscoveryNodes nodes) {_        return unallocatedJobTasks(tasks, nodes).stream()_                .map(task -> task.getId().substring(JOB_TASK_ID_PREFIX.length()))_                .collect(Collectors.toSet())__    };get,the,job,ids,of,anomaly,detector,job,tasks,that,do,not,have,an,assignment,param,tasks,persistent,tasks,if,null,an,empty,set,is,returned,param,nodes,the,cluster,nodes,return,the,job,ids,of,tasks,to,do,not,have,an,assignment;public,static,set,string,unallocated,job,ids,nullable,persistent,tasks,custom,meta,data,tasks,discovery,nodes,nodes,return,unallocated,job,tasks,tasks,nodes,stream,map,task,task,get,id,substring,length,collect,collectors,to,set
MlTasks -> public static Set<String> unallocatedJobIds(@Nullable PersistentTasksCustomMetaData tasks,                                                 DiscoveryNodes nodes);1548688050;Get the job Ids of anomaly detector job tasks that do_not have an assignment.__@param tasks Persistent tasks. If null an empty set is returned._@param nodes The cluster nodes_@return The job Ids of tasks to do not have an assignment.;public static Set<String> unallocatedJobIds(@Nullable PersistentTasksCustomMetaData tasks,_                                                DiscoveryNodes nodes) {_        return unallocatedJobTasks(tasks, nodes).stream()_                .map(task -> task.getId().substring(JOB_TASK_ID_PREFIX.length()))_                .collect(Collectors.toSet())__    };get,the,job,ids,of,anomaly,detector,job,tasks,that,do,not,have,an,assignment,param,tasks,persistent,tasks,if,null,an,empty,set,is,returned,param,nodes,the,cluster,nodes,return,the,job,ids,of,tasks,to,do,not,have,an,assignment;public,static,set,string,unallocated,job,ids,nullable,persistent,tasks,custom,meta,data,tasks,discovery,nodes,nodes,return,unallocated,job,tasks,tasks,nodes,stream,map,task,task,get,id,substring,length,collect,collectors,to,set
MlTasks -> public static Set<String> openJobIds(@Nullable PersistentTasksCustomMetaData tasks);1545155131;The job Ids of anomaly detector job tasks._All anomaly detector jobs are returned regardless of the status of the_task (OPEN, CLOSED, FAILED etc).__@param tasks Persistent tasks. If null an empty set is returned._@return The job Ids of anomaly detector job tasks;public static Set<String> openJobIds(@Nullable PersistentTasksCustomMetaData tasks) {_        if (tasks == null) {_            return Collections.emptySet()__        }__        return tasks.findTasks(JOB_TASK_NAME, task -> true)_                .stream()_                .map(t -> t.getId().substring(JOB_TASK_ID_PREFIX.length()))_                .collect(Collectors.toSet())__    };the,job,ids,of,anomaly,detector,job,tasks,all,anomaly,detector,jobs,are,returned,regardless,of,the,status,of,the,task,open,closed,failed,etc,param,tasks,persistent,tasks,if,null,an,empty,set,is,returned,return,the,job,ids,of,anomaly,detector,job,tasks;public,static,set,string,open,job,ids,nullable,persistent,tasks,custom,meta,data,tasks,if,tasks,null,return,collections,empty,set,return,tasks,find,tasks,task,true,stream,map,t,t,get,id,substring,length,collect,collectors,to,set
MlTasks -> public static Set<String> openJobIds(@Nullable PersistentTasksCustomMetaData tasks);1547030567;The job Ids of anomaly detector job tasks._All anomaly detector jobs are returned regardless of the status of the_task (OPEN, CLOSED, FAILED etc).__@param tasks Persistent tasks. If null an empty set is returned._@return The job Ids of anomaly detector job tasks;public static Set<String> openJobIds(@Nullable PersistentTasksCustomMetaData tasks) {_        if (tasks == null) {_            return Collections.emptySet()__        }__        return tasks.findTasks(JOB_TASK_NAME, task -> true)_                .stream()_                .map(t -> t.getId().substring(JOB_TASK_ID_PREFIX.length()))_                .collect(Collectors.toSet())__    };the,job,ids,of,anomaly,detector,job,tasks,all,anomaly,detector,jobs,are,returned,regardless,of,the,status,of,the,task,open,closed,failed,etc,param,tasks,persistent,tasks,if,null,an,empty,set,is,returned,return,the,job,ids,of,anomaly,detector,job,tasks;public,static,set,string,open,job,ids,nullable,persistent,tasks,custom,meta,data,tasks,if,tasks,null,return,collections,empty,set,return,tasks,find,tasks,task,true,stream,map,t,t,get,id,substring,length,collect,collectors,to,set
MlTasks -> public static Set<String> openJobIds(@Nullable PersistentTasksCustomMetaData tasks);1547576499;The job Ids of anomaly detector job tasks._All anomaly detector jobs are returned regardless of the status of the_task (OPEN, CLOSED, FAILED etc).__@param tasks Persistent tasks. If null an empty set is returned._@return The job Ids of anomaly detector job tasks;public static Set<String> openJobIds(@Nullable PersistentTasksCustomMetaData tasks) {_        if (tasks == null) {_            return Collections.emptySet()__        }__        return tasks.findTasks(JOB_TASK_NAME, task -> true)_                .stream()_                .map(t -> t.getId().substring(JOB_TASK_ID_PREFIX.length()))_                .collect(Collectors.toSet())__    };the,job,ids,of,anomaly,detector,job,tasks,all,anomaly,detector,jobs,are,returned,regardless,of,the,status,of,the,task,open,closed,failed,etc,param,tasks,persistent,tasks,if,null,an,empty,set,is,returned,return,the,job,ids,of,anomaly,detector,job,tasks;public,static,set,string,open,job,ids,nullable,persistent,tasks,custom,meta,data,tasks,if,tasks,null,return,collections,empty,set,return,tasks,find,tasks,task,true,stream,map,t,t,get,id,substring,length,collect,collectors,to,set
MlTasks -> public static Set<String> openJobIds(@Nullable PersistentTasksCustomMetaData tasks);1548688050;The job Ids of anomaly detector job tasks._All anomaly detector jobs are returned regardless of the status of the_task (OPEN, CLOSED, FAILED etc).__@param tasks Persistent tasks. If null an empty set is returned._@return The job Ids of anomaly detector job tasks;public static Set<String> openJobIds(@Nullable PersistentTasksCustomMetaData tasks) {_        if (tasks == null) {_            return Collections.emptySet()__        }__        return tasks.findTasks(JOB_TASK_NAME, task -> true)_                .stream()_                .map(t -> t.getId().substring(JOB_TASK_ID_PREFIX.length()))_                .collect(Collectors.toSet())__    };the,job,ids,of,anomaly,detector,job,tasks,all,anomaly,detector,jobs,are,returned,regardless,of,the,status,of,the,task,open,closed,failed,etc,param,tasks,persistent,tasks,if,null,an,empty,set,is,returned,return,the,job,ids,of,anomaly,detector,job,tasks;public,static,set,string,open,job,ids,nullable,persistent,tasks,custom,meta,data,tasks,if,tasks,null,return,collections,empty,set,return,tasks,find,tasks,task,true,stream,map,t,t,get,id,substring,length,collect,collectors,to,set
MlTasks -> public static Set<String> unallocatedDatafeedIds(@Nullable PersistentTasksCustomMetaData tasks,                                                 DiscoveryNodes nodes);1547576499;Get the datafeed Ids of started datafeed tasks_that do not have an assignment.__@param tasks Persistent tasks. If null an empty set is returned._@param nodes The cluster nodes_@return The job Ids of tasks to do not have an assignment.;public static Set<String> unallocatedDatafeedIds(@Nullable PersistentTasksCustomMetaData tasks,_                                                DiscoveryNodes nodes) {__        return unallocatedDatafeedTasks(tasks, nodes).stream()_                .map(task -> task.getId().substring(DATAFEED_TASK_ID_PREFIX.length()))_                .collect(Collectors.toSet())__    };get,the,datafeed,ids,of,started,datafeed,tasks,that,do,not,have,an,assignment,param,tasks,persistent,tasks,if,null,an,empty,set,is,returned,param,nodes,the,cluster,nodes,return,the,job,ids,of,tasks,to,do,not,have,an,assignment;public,static,set,string,unallocated,datafeed,ids,nullable,persistent,tasks,custom,meta,data,tasks,discovery,nodes,nodes,return,unallocated,datafeed,tasks,tasks,nodes,stream,map,task,task,get,id,substring,length,collect,collectors,to,set
MlTasks -> public static Set<String> unallocatedDatafeedIds(@Nullable PersistentTasksCustomMetaData tasks,                                                 DiscoveryNodes nodes);1548688050;Get the datafeed Ids of started datafeed tasks_that do not have an assignment.__@param tasks Persistent tasks. If null an empty set is returned._@param nodes The cluster nodes_@return The job Ids of tasks to do not have an assignment.;public static Set<String> unallocatedDatafeedIds(@Nullable PersistentTasksCustomMetaData tasks,_                                                DiscoveryNodes nodes) {__        return unallocatedDatafeedTasks(tasks, nodes).stream()_                .map(task -> task.getId().substring(DATAFEED_TASK_ID_PREFIX.length()))_                .collect(Collectors.toSet())__    };get,the,datafeed,ids,of,started,datafeed,tasks,that,do,not,have,an,assignment,param,tasks,persistent,tasks,if,null,an,empty,set,is,returned,param,nodes,the,cluster,nodes,return,the,job,ids,of,tasks,to,do,not,have,an,assignment;public,static,set,string,unallocated,datafeed,ids,nullable,persistent,tasks,custom,meta,data,tasks,discovery,nodes,nodes,return,unallocated,datafeed,tasks,tasks,nodes,stream,map,task,task,get,id,substring,length,collect,collectors,to,set
MlTasks -> public static Collection<PersistentTasksCustomMetaData.PersistentTask> unallocatedDatafeedTasks(             @Nullable PersistentTasksCustomMetaData tasks,             DiscoveryNodes nodes);1547576499;The datafeed tasks that do not have an allocation as determined by_{@link PersistentTasksClusterService#needsReassignment(PersistentTasksCustomMetaData.Assignment, DiscoveryNodes)}__@param tasks Persistent tasks. If null an empty set is returned._@param nodes The cluster nodes_@return Unallocated datafeed tasks;public static Collection<PersistentTasksCustomMetaData.PersistentTask> unallocatedDatafeedTasks(_            @Nullable PersistentTasksCustomMetaData tasks,_            DiscoveryNodes nodes) {_        if (tasks == null) {_            return Collections.emptyList()__        }__        return tasks.findTasks(DATAFEED_TASK_NAME, task -> true)_                .stream()_                .filter(task -> PersistentTasksClusterService.needsReassignment(task.getAssignment(), nodes))_                .collect(Collectors.toList())__    };the,datafeed,tasks,that,do,not,have,an,allocation,as,determined,by,link,persistent,tasks,cluster,service,needs,reassignment,persistent,tasks,custom,meta,data,assignment,discovery,nodes,param,tasks,persistent,tasks,if,null,an,empty,set,is,returned,param,nodes,the,cluster,nodes,return,unallocated,datafeed,tasks;public,static,collection,persistent,tasks,custom,meta,data,persistent,task,unallocated,datafeed,tasks,nullable,persistent,tasks,custom,meta,data,tasks,discovery,nodes,nodes,if,tasks,null,return,collections,empty,list,return,tasks,find,tasks,task,true,stream,filter,task,persistent,tasks,cluster,service,needs,reassignment,task,get,assignment,nodes,collect,collectors,to,list
MlTasks -> public static Collection<PersistentTasksCustomMetaData.PersistentTask> unallocatedDatafeedTasks(             @Nullable PersistentTasksCustomMetaData tasks,             DiscoveryNodes nodes);1548688050;The datafeed tasks that do not have an allocation as determined by_{@link PersistentTasksClusterService#needsReassignment(PersistentTasksCustomMetaData.Assignment, DiscoveryNodes)}__@param tasks Persistent tasks. If null an empty set is returned._@param nodes The cluster nodes_@return Unallocated datafeed tasks;public static Collection<PersistentTasksCustomMetaData.PersistentTask> unallocatedDatafeedTasks(_            @Nullable PersistentTasksCustomMetaData tasks,_            DiscoveryNodes nodes) {_        if (tasks == null) {_            return Collections.emptyList()__        }__        return tasks.findTasks(DATAFEED_TASK_NAME, task -> true)_                .stream()_                .filter(task -> PersistentTasksClusterService.needsReassignment(task.getAssignment(), nodes))_                .collect(Collectors.toList())__    };the,datafeed,tasks,that,do,not,have,an,allocation,as,determined,by,link,persistent,tasks,cluster,service,needs,reassignment,persistent,tasks,custom,meta,data,assignment,discovery,nodes,param,tasks,persistent,tasks,if,null,an,empty,set,is,returned,param,nodes,the,cluster,nodes,return,unallocated,datafeed,tasks;public,static,collection,persistent,tasks,custom,meta,data,persistent,task,unallocated,datafeed,tasks,nullable,persistent,tasks,custom,meta,data,tasks,discovery,nodes,nodes,if,tasks,null,return,collections,empty,list,return,tasks,find,tasks,task,true,stream,filter,task,persistent,tasks,cluster,service,needs,reassignment,task,get,assignment,nodes,collect,collectors,to,list
MlTasks -> public static Collection<PersistentTasksCustomMetaData.PersistentTask> unallocatedJobTasks(             @Nullable PersistentTasksCustomMetaData tasks,             DiscoveryNodes nodes);1547576499;The job tasks that do not have an allocation as determined by_{@link PersistentTasksClusterService#needsReassignment(PersistentTasksCustomMetaData.Assignment, DiscoveryNodes)}__@param tasks Persistent tasks. If null an empty set is returned._@param nodes The cluster nodes_@return Unallocated job tasks;public static Collection<PersistentTasksCustomMetaData.PersistentTask> unallocatedJobTasks(_            @Nullable PersistentTasksCustomMetaData tasks,_            DiscoveryNodes nodes) {_        if (tasks == null) {_            return Collections.emptyList()__        }__        return tasks.findTasks(JOB_TASK_NAME, task -> true)_                .stream()_                .filter(task -> PersistentTasksClusterService.needsReassignment(task.getAssignment(), nodes))_                .collect(Collectors.toList())__    };the,job,tasks,that,do,not,have,an,allocation,as,determined,by,link,persistent,tasks,cluster,service,needs,reassignment,persistent,tasks,custom,meta,data,assignment,discovery,nodes,param,tasks,persistent,tasks,if,null,an,empty,set,is,returned,param,nodes,the,cluster,nodes,return,unallocated,job,tasks;public,static,collection,persistent,tasks,custom,meta,data,persistent,task,unallocated,job,tasks,nullable,persistent,tasks,custom,meta,data,tasks,discovery,nodes,nodes,if,tasks,null,return,collections,empty,list,return,tasks,find,tasks,task,true,stream,filter,task,persistent,tasks,cluster,service,needs,reassignment,task,get,assignment,nodes,collect,collectors,to,list
MlTasks -> public static Collection<PersistentTasksCustomMetaData.PersistentTask> unallocatedJobTasks(             @Nullable PersistentTasksCustomMetaData tasks,             DiscoveryNodes nodes);1548688050;The job tasks that do not have an allocation as determined by_{@link PersistentTasksClusterService#needsReassignment(PersistentTasksCustomMetaData.Assignment, DiscoveryNodes)}__@param tasks Persistent tasks. If null an empty set is returned._@param nodes The cluster nodes_@return Unallocated job tasks;public static Collection<PersistentTasksCustomMetaData.PersistentTask> unallocatedJobTasks(_            @Nullable PersistentTasksCustomMetaData tasks,_            DiscoveryNodes nodes) {_        if (tasks == null) {_            return Collections.emptyList()__        }__        return tasks.findTasks(JOB_TASK_NAME, task -> true)_                .stream()_                .filter(task -> PersistentTasksClusterService.needsReassignment(task.getAssignment(), nodes))_                .collect(Collectors.toList())__    };the,job,tasks,that,do,not,have,an,allocation,as,determined,by,link,persistent,tasks,cluster,service,needs,reassignment,persistent,tasks,custom,meta,data,assignment,discovery,nodes,param,tasks,persistent,tasks,if,null,an,empty,set,is,returned,param,nodes,the,cluster,nodes,return,unallocated,job,tasks;public,static,collection,persistent,tasks,custom,meta,data,persistent,task,unallocated,job,tasks,nullable,persistent,tasks,custom,meta,data,tasks,discovery,nodes,nodes,if,tasks,null,return,collections,empty,list,return,tasks,find,tasks,task,true,stream,filter,task,persistent,tasks,cluster,service,needs,reassignment,task,get,assignment,nodes,collect,collectors,to,list
MlTasks -> public static List<PersistentTasksCustomMetaData.PersistentTask<?>> activeJobTasks(PersistentTasksCustomMetaData tasks);1545155131;Read the active anomaly detector job tasks._Active tasks are not {@code JobState.CLOSED} or {@code JobState.FAILED}.__@param tasks Persistent tasks_@return The job tasks excluding closed and failed jobs;public static List<PersistentTasksCustomMetaData.PersistentTask<?>> activeJobTasks(PersistentTasksCustomMetaData tasks) {_        return tasks.findTasks(JOB_TASK_NAME, task -> true)_                .stream()_                .filter(task -> ((JobTaskState) task.getState()).getState().isAnyOf(JobState.CLOSED, JobState.FAILED) == false)_                .collect(Collectors.toList())__    };read,the,active,anomaly,detector,job,tasks,active,tasks,are,not,code,job,state,closed,or,code,job,state,failed,param,tasks,persistent,tasks,return,the,job,tasks,excluding,closed,and,failed,jobs;public,static,list,persistent,tasks,custom,meta,data,persistent,task,active,job,tasks,persistent,tasks,custom,meta,data,tasks,return,tasks,find,tasks,task,true,stream,filter,task,job,task,state,task,get,state,get,state,is,any,of,job,state,closed,job,state,failed,false,collect,collectors,to,list
MlTasks -> public static List<PersistentTasksCustomMetaData.PersistentTask<?>> activeJobTasks(PersistentTasksCustomMetaData tasks);1547030567;Read the active anomaly detector job tasks._Active tasks are not {@code JobState.CLOSED} or {@code JobState.FAILED}.__@param tasks Persistent tasks_@return The job tasks excluding closed and failed jobs;public static List<PersistentTasksCustomMetaData.PersistentTask<?>> activeJobTasks(PersistentTasksCustomMetaData tasks) {_        return tasks.findTasks(JOB_TASK_NAME, task -> true)_                .stream()_                .filter(task -> ((JobTaskState) task.getState()).getState().isAnyOf(JobState.CLOSED, JobState.FAILED) == false)_                .collect(Collectors.toList())__    };read,the,active,anomaly,detector,job,tasks,active,tasks,are,not,code,job,state,closed,or,code,job,state,failed,param,tasks,persistent,tasks,return,the,job,tasks,excluding,closed,and,failed,jobs;public,static,list,persistent,tasks,custom,meta,data,persistent,task,active,job,tasks,persistent,tasks,custom,meta,data,tasks,return,tasks,find,tasks,task,true,stream,filter,task,job,task,state,task,get,state,get,state,is,any,of,job,state,closed,job,state,failed,false,collect,collectors,to,list
MlTasks -> public static boolean taskExistsForJob(String jobId, PersistentTasksCustomMetaData tasks);1545155131;Is there an ml anomaly detector job task for the job {@code jobId}?_@param jobId The job id_@param tasks Persistent tasks_@return True if the job has a task;public static boolean taskExistsForJob(String jobId, PersistentTasksCustomMetaData tasks) {_        return openJobIds(tasks).contains(jobId)__    };is,there,an,ml,anomaly,detector,job,task,for,the,job,code,job,id,param,job,id,the,job,id,param,tasks,persistent,tasks,return,true,if,the,job,has,a,task;public,static,boolean,task,exists,for,job,string,job,id,persistent,tasks,custom,meta,data,tasks,return,open,job,ids,tasks,contains,job,id
MlTasks -> public static boolean taskExistsForJob(String jobId, PersistentTasksCustomMetaData tasks);1547030567;Is there an ml anomaly detector job task for the job {@code jobId}?_@param jobId The job id_@param tasks Persistent tasks_@return True if the job has a task;public static boolean taskExistsForJob(String jobId, PersistentTasksCustomMetaData tasks) {_        return openJobIds(tasks).contains(jobId)__    };is,there,an,ml,anomaly,detector,job,task,for,the,job,code,job,id,param,job,id,the,job,id,param,tasks,persistent,tasks,return,true,if,the,job,has,a,task;public,static,boolean,task,exists,for,job,string,job,id,persistent,tasks,custom,meta,data,tasks,return,open,job,ids,tasks,contains,job,id
MlTasks -> public static String jobTaskId(String jobId);1532456624;Namespaces the task ids for jobs._A datafeed id can be used as a job id, because they are stored separately in cluster state.;public static String jobTaskId(String jobId) {_        return "job-" + jobId__    };namespaces,the,task,ids,for,jobs,a,datafeed,id,can,be,used,as,a,job,id,because,they,are,stored,separately,in,cluster,state;public,static,string,job,task,id,string,job,id,return,job,job,id
MlTasks -> public static String jobTaskId(String jobId);1545155131;Namespaces the task ids for jobs._A datafeed id can be used as a job id, because they are stored separately in cluster state.;public static String jobTaskId(String jobId) {_        return JOB_TASK_ID_PREFIX + jobId__    };namespaces,the,task,ids,for,jobs,a,datafeed,id,can,be,used,as,a,job,id,because,they,are,stored,separately,in,cluster,state;public,static,string,job,task,id,string,job,id,return,job,id
MlTasks -> public static String jobTaskId(String jobId);1547030567;Namespaces the task ids for jobs._A datafeed id can be used as a job id, because they are stored separately in cluster state.;public static String jobTaskId(String jobId) {_        return JOB_TASK_ID_PREFIX + jobId__    };namespaces,the,task,ids,for,jobs,a,datafeed,id,can,be,used,as,a,job,id,because,they,are,stored,separately,in,cluster,state;public,static,string,job,task,id,string,job,id,return,job,id
MlTasks -> public static String jobTaskId(String jobId);1547576499;Namespaces the task ids for jobs._A datafeed id can be used as a job id, because they are stored separately in cluster state.;public static String jobTaskId(String jobId) {_        return JOB_TASK_ID_PREFIX + jobId__    };namespaces,the,task,ids,for,jobs,a,datafeed,id,can,be,used,as,a,job,id,because,they,are,stored,separately,in,cluster,state;public,static,string,job,task,id,string,job,id,return,job,id
MlTasks -> public static String jobTaskId(String jobId);1548688050;Namespaces the task ids for jobs._A datafeed id can be used as a job id, because they are stored separately in cluster state.;public static String jobTaskId(String jobId) {_        return JOB_TASK_ID_PREFIX + jobId__    };namespaces,the,task,ids,for,jobs,a,datafeed,id,can,be,used,as,a,job,id,because,they,are,stored,separately,in,cluster,state;public,static,string,job,task,id,string,job,id,return,job,id
MlTasks -> public static Set<String> startedDatafeedIds(@Nullable PersistentTasksCustomMetaData tasks);1545155131;The datafeed Ids of started datafeed tasks__@param tasks Persistent tasks. If null an empty set is returned._@return The Ids of running datafeed tasks;public static Set<String> startedDatafeedIds(@Nullable PersistentTasksCustomMetaData tasks) {_        if (tasks == null) {_            return Collections.emptySet()__        }__        return tasks.findTasks(DATAFEED_TASK_NAME, task -> true)_                .stream()_                .map(t -> t.getId().substring(DATAFEED_TASK_ID_PREFIX.length()))_                .collect(Collectors.toSet())__    };the,datafeed,ids,of,started,datafeed,tasks,param,tasks,persistent,tasks,if,null,an,empty,set,is,returned,return,the,ids,of,running,datafeed,tasks;public,static,set,string,started,datafeed,ids,nullable,persistent,tasks,custom,meta,data,tasks,if,tasks,null,return,collections,empty,set,return,tasks,find,tasks,task,true,stream,map,t,t,get,id,substring,length,collect,collectors,to,set
MlTasks -> public static Set<String> startedDatafeedIds(@Nullable PersistentTasksCustomMetaData tasks);1547030567;The datafeed Ids of started datafeed tasks__@param tasks Persistent tasks. If null an empty set is returned._@return The Ids of running datafeed tasks;public static Set<String> startedDatafeedIds(@Nullable PersistentTasksCustomMetaData tasks) {_        if (tasks == null) {_            return Collections.emptySet()__        }__        return tasks.findTasks(DATAFEED_TASK_NAME, task -> true)_                .stream()_                .map(t -> t.getId().substring(DATAFEED_TASK_ID_PREFIX.length()))_                .collect(Collectors.toSet())__    };the,datafeed,ids,of,started,datafeed,tasks,param,tasks,persistent,tasks,if,null,an,empty,set,is,returned,return,the,ids,of,running,datafeed,tasks;public,static,set,string,started,datafeed,ids,nullable,persistent,tasks,custom,meta,data,tasks,if,tasks,null,return,collections,empty,set,return,tasks,find,tasks,task,true,stream,map,t,t,get,id,substring,length,collect,collectors,to,set
MlTasks -> public static Set<String> startedDatafeedIds(@Nullable PersistentTasksCustomMetaData tasks);1547576499;The datafeed Ids of started datafeed tasks__@param tasks Persistent tasks. If null an empty set is returned._@return The Ids of running datafeed tasks;public static Set<String> startedDatafeedIds(@Nullable PersistentTasksCustomMetaData tasks) {_        if (tasks == null) {_            return Collections.emptySet()__        }__        return tasks.findTasks(DATAFEED_TASK_NAME, task -> true)_                .stream()_                .map(t -> t.getId().substring(DATAFEED_TASK_ID_PREFIX.length()))_                .collect(Collectors.toSet())__    };the,datafeed,ids,of,started,datafeed,tasks,param,tasks,persistent,tasks,if,null,an,empty,set,is,returned,return,the,ids,of,running,datafeed,tasks;public,static,set,string,started,datafeed,ids,nullable,persistent,tasks,custom,meta,data,tasks,if,tasks,null,return,collections,empty,set,return,tasks,find,tasks,task,true,stream,map,t,t,get,id,substring,length,collect,collectors,to,set
MlTasks -> public static Set<String> startedDatafeedIds(@Nullable PersistentTasksCustomMetaData tasks);1548688050;The datafeed Ids of started datafeed tasks__@param tasks Persistent tasks. If null an empty set is returned._@return The Ids of running datafeed tasks;public static Set<String> startedDatafeedIds(@Nullable PersistentTasksCustomMetaData tasks) {_        if (tasks == null) {_            return Collections.emptySet()__        }__        return tasks.findTasks(DATAFEED_TASK_NAME, task -> true)_                .stream()_                .map(t -> t.getId().substring(DATAFEED_TASK_ID_PREFIX.length()))_                .collect(Collectors.toSet())__    };the,datafeed,ids,of,started,datafeed,tasks,param,tasks,persistent,tasks,if,null,an,empty,set,is,returned,return,the,ids,of,running,datafeed,tasks;public,static,set,string,started,datafeed,ids,nullable,persistent,tasks,custom,meta,data,tasks,if,tasks,null,return,collections,empty,set,return,tasks,find,tasks,task,true,stream,map,t,t,get,id,substring,length,collect,collectors,to,set
MlTasks -> public static JobState getJobState(String jobId, @Nullable PersistentTasksCustomMetaData tasks);1547030567;Note that the return value of this method does NOT take node relocations into account._Use {@link #getJobStateModifiedForReassignments} to return a value adjusted to the most_appropriate value following relocations.;public static JobState getJobState(String jobId, @Nullable PersistentTasksCustomMetaData tasks) {_        PersistentTasksCustomMetaData.PersistentTask<?> task = getJobTask(jobId, tasks)__        if (task != null) {_            JobTaskState jobTaskState = (JobTaskState) task.getState()__            if (jobTaskState == null) {_                return JobState.OPENING__            }_            return jobTaskState.getState()__        }_        _        return JobState.CLOSED__    };note,that,the,return,value,of,this,method,does,not,take,node,relocations,into,account,use,link,get,job,state,modified,for,reassignments,to,return,a,value,adjusted,to,the,most,appropriate,value,following,relocations;public,static,job,state,get,job,state,string,job,id,nullable,persistent,tasks,custom,meta,data,tasks,persistent,tasks,custom,meta,data,persistent,task,task,get,job,task,job,id,tasks,if,task,null,job,task,state,job,task,state,job,task,state,task,get,state,if,job,task,state,null,return,job,state,opening,return,job,task,state,get,state,return,job,state,closed
MlTasks -> public static JobState getJobState(String jobId, @Nullable PersistentTasksCustomMetaData tasks);1547576499;Note that the return value of this method does NOT take node relocations into account._Use {@link #getJobStateModifiedForReassignments} to return a value adjusted to the most_appropriate value following relocations.;public static JobState getJobState(String jobId, @Nullable PersistentTasksCustomMetaData tasks) {_        PersistentTasksCustomMetaData.PersistentTask<?> task = getJobTask(jobId, tasks)__        if (task != null) {_            JobTaskState jobTaskState = (JobTaskState) task.getState()__            if (jobTaskState == null) {_                return JobState.OPENING__            }_            return jobTaskState.getState()__        }_        _        return JobState.CLOSED__    };note,that,the,return,value,of,this,method,does,not,take,node,relocations,into,account,use,link,get,job,state,modified,for,reassignments,to,return,a,value,adjusted,to,the,most,appropriate,value,following,relocations;public,static,job,state,get,job,state,string,job,id,nullable,persistent,tasks,custom,meta,data,tasks,persistent,tasks,custom,meta,data,persistent,task,task,get,job,task,job,id,tasks,if,task,null,job,task,state,job,task,state,job,task,state,task,get,state,if,job,task,state,null,return,job,state,opening,return,job,task,state,get,state,return,job,state,closed
MlTasks -> public static JobState getJobState(String jobId, @Nullable PersistentTasksCustomMetaData tasks);1548688050;Note that the return value of this method does NOT take node relocations into account._Use {@link #getJobStateModifiedForReassignments} to return a value adjusted to the most_appropriate value following relocations.;public static JobState getJobState(String jobId, @Nullable PersistentTasksCustomMetaData tasks) {_        PersistentTasksCustomMetaData.PersistentTask<?> task = getJobTask(jobId, tasks)__        if (task != null) {_            JobTaskState jobTaskState = (JobTaskState) task.getState()__            if (jobTaskState == null) {_                return JobState.OPENING__            }_            return jobTaskState.getState()__        }_        _        return JobState.CLOSED__    };note,that,the,return,value,of,this,method,does,not,take,node,relocations,into,account,use,link,get,job,state,modified,for,reassignments,to,return,a,value,adjusted,to,the,most,appropriate,value,following,relocations;public,static,job,state,get,job,state,string,job,id,nullable,persistent,tasks,custom,meta,data,tasks,persistent,tasks,custom,meta,data,persistent,task,task,get,job,task,job,id,tasks,if,task,null,job,task,state,job,task,state,job,task,state,task,get,state,if,job,task,state,null,return,job,state,opening,return,job,task,state,get,state,return,job,state,closed
