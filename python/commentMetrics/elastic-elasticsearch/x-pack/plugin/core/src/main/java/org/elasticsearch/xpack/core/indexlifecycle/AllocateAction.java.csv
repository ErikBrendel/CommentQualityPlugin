# id;timestamp;commentText;codeText;commentWords;codeWords
AllocateAction -> private void addMissingAttrs(Map<String, String> newAttrs, String settingPrefix, Settings existingSettings,             Settings.Builder newSettingsBuilder);1516783641;Inspects the <code>existingSettings</code> and adds any attributes that_are missing for the given <code>settingsPrefix</code> to the_<code>newSettingsBuilder</code>.;private void addMissingAttrs(Map<String, String> newAttrs, String settingPrefix, Settings existingSettings,_            Settings.Builder newSettingsBuilder) {_        newAttrs.entrySet().stream().filter(e -> {_            String existingValue = existingSettings.get(settingPrefix + e.getKey())__            return existingValue == null || (existingValue.equals(e.getValue()) == false)__        }).forEach(e -> newSettingsBuilder.put(settingPrefix + e.getKey(), e.getValue()))__    };inspects,the,code,existing,settings,code,and,adds,any,attributes,that,are,missing,for,the,given,code,settings,prefix,code,to,the,code,new,settings,builder,code;private,void,add,missing,attrs,map,string,string,new,attrs,string,setting,prefix,settings,existing,settings,settings,builder,new,settings,builder,new,attrs,entry,set,stream,filter,e,string,existing,value,existing,settings,get,setting,prefix,e,get,key,return,existing,value,null,existing,value,equals,e,get,value,false,for,each,e,new,settings,builder,put,setting,prefix,e,get,key,e,get,value
AllocateAction -> private void addMissingAttrs(Map<String, String> newAttrs, String settingPrefix, Settings existingSettings,             Settings.Builder newSettingsBuilder);1522076403;Inspects the <code>existingSettings</code> and adds any attributes that_are missing for the given <code>settingsPrefix</code> to the_<code>newSettingsBuilder</code>.;private void addMissingAttrs(Map<String, String> newAttrs, String settingPrefix, Settings existingSettings,_            Settings.Builder newSettingsBuilder) {_        newAttrs.entrySet().stream().filter(e -> {_            String existingValue = existingSettings.get(settingPrefix + e.getKey())__            return existingValue == null || (existingValue.equals(e.getValue()) == false)__        }).forEach(e -> newSettingsBuilder.put(settingPrefix + e.getKey(), e.getValue()))__    };inspects,the,code,existing,settings,code,and,adds,any,attributes,that,are,missing,for,the,given,code,settings,prefix,code,to,the,code,new,settings,builder,code;private,void,add,missing,attrs,map,string,string,new,attrs,string,setting,prefix,settings,existing,settings,settings,builder,new,settings,builder,new,attrs,entry,set,stream,filter,e,string,existing,value,existing,settings,get,setting,prefix,e,get,key,return,existing,value,null,existing,value,equals,e,get,value,false,for,each,e,new,settings,builder,put,setting,prefix,e,get,key,e,get,value
AllocateAction -> private void addMissingAttrs(Map<String, String> newAttrs, String settingPrefix, Settings existingSettings,             Settings.Builder newSettingsBuilder);1522149278;Inspects the <code>existingSettings</code> and adds any attributes that_are missing for the given <code>settingsPrefix</code> to the_<code>newSettingsBuilder</code>.;private void addMissingAttrs(Map<String, String> newAttrs, String settingPrefix, Settings existingSettings,_            Settings.Builder newSettingsBuilder) {_        newAttrs.entrySet().stream().filter(e -> {_            String existingValue = existingSettings.get(settingPrefix + e.getKey())__            return existingValue == null || (existingValue.equals(e.getValue()) == false)__        }).forEach(e -> newSettingsBuilder.put(settingPrefix + e.getKey(), e.getValue()))__    };inspects,the,code,existing,settings,code,and,adds,any,attributes,that,are,missing,for,the,given,code,settings,prefix,code,to,the,code,new,settings,builder,code;private,void,add,missing,attrs,map,string,string,new,attrs,string,setting,prefix,settings,existing,settings,settings,builder,new,settings,builder,new,attrs,entry,set,stream,filter,e,string,existing,value,existing,settings,get,setting,prefix,e,get,key,return,existing,value,null,existing,value,equals,e,get,value,false,for,each,e,new,settings,builder,put,setting,prefix,e,get,key,e,get,value
AllocateAction -> private void addMissingAttrs(Map<String, String> newAttrs, String settingPrefix, Settings existingSettings,             Settings.Builder newSettingsBuilder);1522282250;Inspects the <code>existingSettings</code> and adds any attributes that_are missing for the given <code>settingsPrefix</code> to the_<code>newSettingsBuilder</code>.;private void addMissingAttrs(Map<String, String> newAttrs, String settingPrefix, Settings existingSettings,_            Settings.Builder newSettingsBuilder) {_        newAttrs.entrySet().stream().filter(e -> {_            String existingValue = existingSettings.get(settingPrefix + e.getKey())__            return existingValue == null || (existingValue.equals(e.getValue()) == false)__        }).forEach(e -> newSettingsBuilder.put(settingPrefix + e.getKey(), e.getValue()))__    };inspects,the,code,existing,settings,code,and,adds,any,attributes,that,are,missing,for,the,given,code,settings,prefix,code,to,the,code,new,settings,builder,code;private,void,add,missing,attrs,map,string,string,new,attrs,string,setting,prefix,settings,existing,settings,settings,builder,new,settings,builder,new,attrs,entry,set,stream,filter,e,string,existing,value,existing,settings,get,setting,prefix,e,get,key,return,existing,value,null,existing,value,equals,e,get,value,false,for,each,e,new,settings,builder,put,setting,prefix,e,get,key,e,get,value
