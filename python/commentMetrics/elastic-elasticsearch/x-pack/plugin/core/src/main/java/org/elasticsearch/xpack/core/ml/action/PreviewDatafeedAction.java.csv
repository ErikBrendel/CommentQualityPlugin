commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Response newResponse() {     return new Response(). }
false;public;0;3;;public String getDatafeedId() {     return datafeedId. }
false;public,final;1;3;;public final void setDatafeedId(String datafeedId) {     this.datafeedId = ExceptionsHelper.requireNonNull(datafeedId, DatafeedConfig.ID.getPreferredName()). }
false;public;0;4;;@Override public ActionRequestValidationException validate() {     return null. }
false;public;1;5;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     datafeedId = in.readString(). }
false;public;1;5;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeString(datafeedId). }
false;public;2;7;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(DatafeedConfig.ID.getPreferredName(), datafeedId).     builder.endObject().     return builder. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(datafeedId). }
false;public;1;11;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     Request other = (Request) obj.     return Objects.equals(datafeedId, other.datafeedId). }
false;public;1;5;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     preview = in.readBytesReference(). }
false;public;1;5;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeBytesReference(preview). }
false;public;2;7;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     try (InputStream stream = preview.streamInput()) {         builder.rawValue(stream, XContentType.JSON).     }     return builder. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(preview). }
false;public;1;11;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     Response other = (Response) obj.     return Objects.equals(preview, other.preview). }
false;public,final;0;4;;@Override public final String toString() {     return Strings.toString(this). }
