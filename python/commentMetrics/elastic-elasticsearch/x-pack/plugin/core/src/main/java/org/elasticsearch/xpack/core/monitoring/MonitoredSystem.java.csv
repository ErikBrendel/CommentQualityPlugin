commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String getSystem() {     return system. }
false;public,static;1;18;;public static MonitoredSystem fromSystem(String system) {     switch(system.toLowerCase(Locale.ROOT)) {         case "es":             return ES.         case "kibana":             return KIBANA.         case "logstash":             return LOGSTASH.         case "beats":             return BEATS.         default:             // system it does not know yet             return UNKNOWN.     } }
true;public,static;0;3;/**  * Get all {@code MonitoredSystem}s except {@linkplain MonitoredSystem#UNKNOWN UNKNOWN}.  *  * @return Never {@code null}. A filtered {@code Stream} that removes the {@code UNKNOWN} {@code MonitoredSystem}.  */ ;/**  * Get all {@code MonitoredSystem}s except {@linkplain MonitoredSystem#UNKNOWN UNKNOWN}.  *  * @return Never {@code null}. A filtered {@code Stream} that removes the {@code UNKNOWN} {@code MonitoredSystem}.  */ public static Stream<MonitoredSystem> allSystems() {     return Arrays.stream(MonitoredSystem.values()).filter(s -> s != MonitoredSystem.UNKNOWN). }
