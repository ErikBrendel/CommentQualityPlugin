commented;modifiers;parameterAmount;loc;comment;code
true;;3;1;/**  * converts the {@link LifecycleAction}'s execution plan into a series of  * {@link Step}s that reference each other to preserve order of operations.  * @param client      the client that will be used by {@link AsyncActionStep} and {@link AsyncWaitStep} steps  * @param phase       the name of the phase this action is being executed within  * @param nextStepKey the next step to execute after this action's steps. If null, then there are no further  *                    steps to run. It is the responsibility of each {@link LifecycleAction} to implement this  *                    correctly and not forget to link to this final step so that the policy can continue.  * @return an ordered list of steps that represent the execution plan of the action  */ ;/**  * converts the {@link LifecycleAction}'s execution plan into a series of  * {@link Step}s that reference each other to preserve order of operations.  * @param client      the client that will be used by {@link AsyncActionStep} and {@link AsyncWaitStep} steps  * @param phase       the name of the phase this action is being executed within  * @param nextStepKey the next step to execute after this action's steps. If null, then there are no further  *                    steps to run. It is the responsibility of each {@link LifecycleAction} to implement this  *                    correctly and not forget to link to this final step so that the policy can continue.  * @return an ordered list of steps that represent the execution plan of the action  */ List<Step> toSteps(Client client, String phase, @Nullable Step.StepKey nextStepKey).
true;;1;1;/**  * @param phase  *            the name of the phase this action is being executed within  * @return the {@link StepKey}s for the steps which will be executed in this  *         action  */ ;/**  * @param phase  *            the name of the phase this action is being executed within  * @return the {@link StepKey}s for the steps which will be executed in this  *         action  */ List<StepKey> toStepKeys(String phase).
true;;0;1;/**  * @return true if this action is considered safe. An action is not safe if  *         it will produce unwanted side effects or will get stuck when the  *         action configuration is changed while an index is in this action  */ ;/**  * @return true if this action is considered safe. An action is not safe if  *         it will produce unwanted side effects or will get stuck when the  *         action configuration is changed while an index is in this action  */ boolean isSafeAction().
