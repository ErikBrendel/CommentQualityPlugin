commented;modifiers;parameterAmount;loc;comment;code
false;;1;10;;@Override RestrictedTrustManager createTrustManager(@Nullable Environment environment) {     try {         final X509ExtendedTrustManager delegateTrustManager = delegate.createTrustManager(environment).         final CertificateTrustRestrictions trustGroupConfig = readTrustGroup(resolveGroupConfigPath(environment)).         return new RestrictedTrustManager(delegateTrustManager, trustGroupConfig).     } catch (IOException e) {         throw new ElasticsearchException("failed to initialize TrustManager for {}", e, toString()).     } }
false;;1;4;;@Override Collection<CertificateInfo> certificates(Environment environment) throws GeneralSecurityException, IOException {     return delegate.certificates(environment). }
false;;1;6;;@Override List<Path> filesToMonitor(@Nullable Environment environment) {     List<Path> files = new ArrayList<>(delegate.filesToMonitor(environment)).     files.add(resolveGroupConfigPath(environment)).     return Collections.unmodifiableList(files). }
false;public;0;4;;@Override public String toString() {     return "restrictedTrust=[" + groupConfigPath + ']'. }
false;public;1;8;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     RestrictedTrustConfig that = (RestrictedTrustConfig) o.     return this.groupConfigPath.equals(that.groupConfigPath) && this.delegate.equals(that.delegate). }
false;public;0;6;;@Override public int hashCode() {     int result = groupConfigPath.hashCode().     result = 31 * result + delegate.hashCode().     return result. }
false;private;1;3;;private Path resolveGroupConfigPath(@Nullable Environment environment) {     return CertParsingUtils.resolvePath(groupConfigPath, environment). }
false;private;1;5;;private CertificateTrustRestrictions readTrustGroup(Path path) throws IOException {     Settings settings = Settings.builder().loadFromPath(path).build().     final List<String> trustNodeNames = settings.getAsList(RESTRICTIONS_KEY_SUBJECT_NAME).     return new CertificateTrustRestrictions(trustNodeNames). }
