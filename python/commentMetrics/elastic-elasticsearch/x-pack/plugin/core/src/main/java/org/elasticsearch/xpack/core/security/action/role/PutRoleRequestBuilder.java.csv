commented;modifiers;parameterAmount;loc;comment;code
true;public;3;14;/**  * Populate the put role request from the source and the role's name  */ ;/**  * Populate the put role request from the source and the role's name  */ public PutRoleRequestBuilder source(String name, BytesReference source, XContentType xContentType) throws IOException {     // we pass false as last parameter because we want to reject the request if field permissions     // are given in 2.x syntax     RoleDescriptor descriptor = RoleDescriptor.parse(name, source, false, xContentType).     assert name.equals(descriptor.getName()).     request.name(name).     request.cluster(descriptor.getClusterPrivileges()).     request.conditionalCluster(descriptor.getConditionalClusterPrivileges()).     request.addIndex(descriptor.getIndicesPrivileges()).     request.addApplicationPrivileges(descriptor.getApplicationPrivileges()).     request.runAs(descriptor.getRunAs()).     request.metadata(descriptor.getMetadata()).     return this. }
false;public;1;4;;public PutRoleRequestBuilder name(String name) {     request.name(name).     return this. }
false;public;1;4;;public PutRoleRequestBuilder cluster(String... cluster) {     request.cluster(cluster).     return this. }
false;public;1;4;;public PutRoleRequestBuilder runAs(String... runAsUsers) {     request.runAs(runAsUsers).     return this. }
false;public;6;5;;public PutRoleRequestBuilder addIndices(String[] indices, String[] privileges, String[] grantedFields, String[] deniedFields, @Nullable BytesReference query, boolean allowRestrictedIndices) {     request.addIndex(indices, privileges, grantedFields, deniedFields, query, allowRestrictedIndices).     return this. }
false;public;1;4;;public PutRoleRequestBuilder metadata(Map<String, Object> metadata) {     request.metadata(metadata).     return this. }
