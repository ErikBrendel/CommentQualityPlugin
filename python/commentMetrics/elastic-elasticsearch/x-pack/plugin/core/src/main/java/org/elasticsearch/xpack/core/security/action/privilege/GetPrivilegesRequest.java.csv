commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Override public ActionRequestValidationException validate() {     ActionRequestValidationException validationException = null.     if (privileges == null) {         validationException = addValidationError("privileges cannot be null", validationException).     }     return validationException. }
false;public;1;3;;public void application(String application) {     this.application = application. }
false;public;0;3;;public String application() {     return this.application. }
false;public;0;4;;@Override public Collection<String> getApplicationNames() {     return application == null ? Collections.emptySet() : Collections.singleton(application). }
false;public;1;3;;public void privileges(String... privileges) {     this.privileges = privileges. }
false;public;0;3;;public String[] privileges() {     return this.privileges. }
false;public;1;6;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     application = in.readOptionalString().     privileges = in.readStringArray(). }
false;public;1;6;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeOptionalString(application).     out.writeStringArray(privileges). }
