commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public boolean enabled() {     return false. }
false;public;1;5;;public void configure(SSLParameters sslParameters) {     // nothing to do here     assert !sslParameters.getWantClientAuth().     assert !sslParameters.getNeedClientAuth(). }
false;public;0;3;;public boolean enabled() {     return true. }
false;public;1;3;;public void configure(SSLParameters sslParameters) {     sslParameters.setWantClientAuth(true). }
false;public;0;3;;public boolean enabled() {     return true. }
false;public;1;3;;public void configure(SSLParameters sslParameters) {     sslParameters.setNeedClientAuth(true). }
true;public,abstract;0;1;/**  * @return true if client authentication is enabled  */ ;/**  * @return true if client authentication is enabled  */ public abstract boolean enabled().
true;public,abstract;1;1;/**  * Configure client authentication of the provided {@link SSLParameters}  */ ;/**  * Configure client authentication of the provided {@link SSLParameters}  */ public abstract void configure(SSLParameters sslParameters).
false;public,static;1;13;;public static SSLClientAuth parse(String value) {     assert value != null.     switch(value.toLowerCase(Locale.ROOT)) {         case "none":             return NONE.         case "optional":             return OPTIONAL.         case "required":             return REQUIRED.         default:             throw new IllegalArgumentException("could not resolve ssl client auth. unknown value [" + value + "]").     } }
