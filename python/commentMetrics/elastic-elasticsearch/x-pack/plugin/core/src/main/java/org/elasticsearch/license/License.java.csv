# id;timestamp;commentText;codeText;commentWords;codeWords
License -> public synchronized void setOperationModeFileWatcher(final OperationModeFileWatcher operationModeFileWatcher);1524684173;Sets the operation mode file watcher for the license and initializes the_file watcher when the license type allows to override operation mode from file;public synchronized void setOperationModeFileWatcher(final OperationModeFileWatcher operationModeFileWatcher) {_        this.operationModeFileWatcher = operationModeFileWatcher__        if (canReadOperationModeFromFile()) {_            this.operationModeFileWatcher.init()__        }_    };sets,the,operation,mode,file,watcher,for,the,license,and,initializes,the,file,watcher,when,the,license,type,allows,to,override,operation,mode,from,file;public,synchronized,void,set,operation,mode,file,watcher,final,operation,mode,file,watcher,operation,mode,file,watcher,this,operation,mode,file,watcher,operation,mode,file,watcher,if,can,read,operation,mode,from,file,this,operation,mode,file,watcher,init
License -> public synchronized void setOperationModeFileWatcher(final OperationModeFileWatcher operationModeFileWatcher);1525334055;Sets the operation mode file watcher for the license and initializes the_file watcher when the license type allows to override operation mode from file;public synchronized void setOperationModeFileWatcher(final OperationModeFileWatcher operationModeFileWatcher) {_        this.operationModeFileWatcher = operationModeFileWatcher__        if (canReadOperationModeFromFile()) {_            this.operationModeFileWatcher.init()__        }_    };sets,the,operation,mode,file,watcher,for,the,license,and,initializes,the,file,watcher,when,the,license,type,allows,to,override,operation,mode,from,file;public,synchronized,void,set,operation,mode,file,watcher,final,operation,mode,file,watcher,operation,mode,file,watcher,this,operation,mode,file,watcher,operation,mode,file,watcher,if,can,read,operation,mode,from,file,this,operation,mode,file,watcher,init
License -> public synchronized void setOperationModeFileWatcher(final OperationModeFileWatcher operationModeFileWatcher);1531179852;Sets the operation mode file watcher for the license and initializes the_file watcher when the license type allows to override operation mode from file;public synchronized void setOperationModeFileWatcher(final OperationModeFileWatcher operationModeFileWatcher) {_        this.operationModeFileWatcher = operationModeFileWatcher__        if (canReadOperationModeFromFile()) {_            this.operationModeFileWatcher.init()__        }_    };sets,the,operation,mode,file,watcher,for,the,license,and,initializes,the,file,watcher,when,the,license,type,allows,to,override,operation,mode,from,file;public,synchronized,void,set,operation,mode,file,watcher,final,operation,mode,file,watcher,operation,mode,file,watcher,this,operation,mode,file,watcher,operation,mode,file,watcher,if,can,read,operation,mode,from,file,this,operation,mode,file,watcher,init
License -> public synchronized void setOperationModeFileWatcher(final OperationModeFileWatcher operationModeFileWatcher);1531301204;Sets the operation mode file watcher for the license and initializes the_file watcher when the license type allows to override operation mode from file;public synchronized void setOperationModeFileWatcher(final OperationModeFileWatcher operationModeFileWatcher) {_        this.operationModeFileWatcher = operationModeFileWatcher__        if (canReadOperationModeFromFile()) {_            this.operationModeFileWatcher.init()__        }_    };sets,the,operation,mode,file,watcher,for,the,license,and,initializes,the,file,watcher,when,the,license,type,allows,to,override,operation,mode,from,file;public,synchronized,void,set,operation,mode,file,watcher,final,operation,mode,file,watcher,operation,mode,file,watcher,this,operation,mode,file,watcher,operation,mode,file,watcher,if,can,read,operation,mode,from,file,this,operation,mode,file,watcher,init
License -> public synchronized void setOperationModeFileWatcher(final OperationModeFileWatcher operationModeFileWatcher);1547011762;Sets the operation mode file watcher for the license and initializes the_file watcher when the license type allows to override operation mode from file;public synchronized void setOperationModeFileWatcher(final OperationModeFileWatcher operationModeFileWatcher) {_        this.operationModeFileWatcher = operationModeFileWatcher__        if (canReadOperationModeFromFile()) {_            this.operationModeFileWatcher.init()__        }_    };sets,the,operation,mode,file,watcher,for,the,license,and,initializes,the,file,watcher,when,the,license,type,allows,to,override,operation,mode,from,file;public,synchronized,void,set,operation,mode,file,watcher,final,operation,mode,file,watcher,operation,mode,file,watcher,this,operation,mode,file,watcher,operation,mode,file,watcher,if,can,read,operation,mode,from,file,this,operation,mode,file,watcher,init
License -> public synchronized void removeOperationModeFileWatcher();1524684173;Removes operation mode file watcher, so unused license objects can be gc'ed;public synchronized void removeOperationModeFileWatcher() {_        this.operationModeFileWatcher = null__    };removes,operation,mode,file,watcher,so,unused,license,objects,can,be,gc,ed;public,synchronized,void,remove,operation,mode,file,watcher,this,operation,mode,file,watcher,null
License -> public synchronized void removeOperationModeFileWatcher();1525334055;Removes operation mode file watcher, so unused license objects can be gc'ed;public synchronized void removeOperationModeFileWatcher() {_        this.operationModeFileWatcher = null__    };removes,operation,mode,file,watcher,so,unused,license,objects,can,be,gc,ed;public,synchronized,void,remove,operation,mode,file,watcher,this,operation,mode,file,watcher,null
License -> public synchronized void removeOperationModeFileWatcher();1531179852;Removes operation mode file watcher, so unused license objects can be gc'ed;public synchronized void removeOperationModeFileWatcher() {_        this.operationModeFileWatcher = null__    };removes,operation,mode,file,watcher,so,unused,license,objects,can,be,gc,ed;public,synchronized,void,remove,operation,mode,file,watcher,this,operation,mode,file,watcher,null
License -> public synchronized void removeOperationModeFileWatcher();1531301204;Removes operation mode file watcher, so unused license objects can be gc'ed;public synchronized void removeOperationModeFileWatcher() {_        this.operationModeFileWatcher = null__    };removes,operation,mode,file,watcher,so,unused,license,objects,can,be,gc,ed;public,synchronized,void,remove,operation,mode,file,watcher,this,operation,mode,file,watcher,null
License -> public synchronized void removeOperationModeFileWatcher();1547011762;Removes operation mode file watcher, so unused license objects can be gc'ed;public synchronized void removeOperationModeFileWatcher() {_        this.operationModeFileWatcher = null__    };removes,operation,mode,file,watcher,so,unused,license,objects,can,be,gc,ed;public,synchronized,void,remove,operation,mode,file,watcher,this,operation,mode,file,watcher,null
License -> public int maxNodes();1524684173;@return the maximum number of nodes this license has been issued for;public int maxNodes() {_        return maxNodes__    };return,the,maximum,number,of,nodes,this,license,has,been,issued,for;public,int,max,nodes,return,max,nodes
License -> public int maxNodes();1525334055;@return the maximum number of nodes this license has been issued for;public int maxNodes() {_        return maxNodes__    };return,the,maximum,number,of,nodes,this,license,has,been,issued,for;public,int,max,nodes,return,max,nodes
License -> public int maxNodes();1531179852;@return the maximum number of nodes this license has been issued for;public int maxNodes() {_        return maxNodes__    };return,the,maximum,number,of,nodes,this,license,has,been,issued,for;public,int,max,nodes,return,max,nodes
License -> public int maxNodes();1531301204;@return the maximum number of nodes this license has been issued for;public int maxNodes() {_        return maxNodes__    };return,the,maximum,number,of,nodes,this,license,has,been,issued,for;public,int,max,nodes,return,max,nodes
License -> public int maxNodes();1547011762;@return the maximum number of nodes this license has been issued for;public int maxNodes() {_        return maxNodes__    };return,the,maximum,number,of,nodes,this,license,has,been,issued,for;public,int,max,nodes,return,max,nodes
License -> public boolean isProductionLicense();1524684173;Returns <code>true</code> iff the license is a production licnese;public boolean isProductionLicense() {_        switch (operationMode()) {_            case MISSING:_            case TRIAL:_            case BASIC:_                return false__            case STANDARD:_            case GOLD:_            case PLATINUM:_                return true__            default:_                throw new AssertionError("unknown operation mode: " + operationMode())___        }_    };returns,code,true,code,iff,the,license,is,a,production,licnese;public,boolean,is,production,license,switch,operation,mode,case,missing,case,trial,case,basic,return,false,case,standard,case,gold,case,platinum,return,true,default,throw,new,assertion,error,unknown,operation,mode,operation,mode
License -> public boolean isProductionLicense();1525334055;Returns <code>true</code> iff the license is a production licnese;public boolean isProductionLicense() {_        switch (operationMode()) {_            case MISSING:_            case TRIAL:_            case BASIC:_                return false__            case STANDARD:_            case GOLD:_            case PLATINUM:_                return true__            default:_                throw new AssertionError("unknown operation mode: " + operationMode())___        }_    };returns,code,true,code,iff,the,license,is,a,production,licnese;public,boolean,is,production,license,switch,operation,mode,case,missing,case,trial,case,basic,return,false,case,standard,case,gold,case,platinum,return,true,default,throw,new,assertion,error,unknown,operation,mode,operation,mode
License -> public boolean isProductionLicense();1531179852;Returns <code>true</code> iff the license is a production licnese;public boolean isProductionLicense() {_        switch (operationMode()) {_            case MISSING:_            case TRIAL:_            case BASIC:_                return false__            case STANDARD:_            case GOLD:_            case PLATINUM:_                return true__            default:_                throw new AssertionError("unknown operation mode: " + operationMode())___        }_    };returns,code,true,code,iff,the,license,is,a,production,licnese;public,boolean,is,production,license,switch,operation,mode,case,missing,case,trial,case,basic,return,false,case,standard,case,gold,case,platinum,return,true,default,throw,new,assertion,error,unknown,operation,mode,operation,mode
License -> public boolean isProductionLicense();1531301204;Returns <code>true</code> iff the license is a production licnese;public boolean isProductionLicense() {_        switch (operationMode()) {_            case MISSING:_            case TRIAL:_            case BASIC:_                return false__            case STANDARD:_            case GOLD:_            case PLATINUM:_                return true__            default:_                throw new AssertionError("unknown operation mode: " + operationMode())___        }_    };returns,code,true,code,iff,the,license,is,a,production,licnese;public,boolean,is,production,license,switch,operation,mode,case,missing,case,trial,case,basic,return,false,case,standard,case,gold,case,platinum,return,true,default,throw,new,assertion,error,unknown,operation,mode,operation,mode
License -> public boolean isProductionLicense();1547011762;Returns <code>true</code> iff the license is a production licnese;public boolean isProductionLicense() {_        switch (operationMode()) {_            case MISSING:_            case TRIAL:_            case BASIC:_                return false__            case STANDARD:_            case GOLD:_            case PLATINUM:_                return true__            default:_                throw new AssertionError("unknown operation mode: " + operationMode())___        }_    };returns,code,true,code,iff,the,license,is,a,production,licnese;public,boolean,is,production,license,switch,operation,mode,case,missing,case,trial,case,basic,return,false,case,standard,case,gold,case,platinum,return,true,default,throw,new,assertion,error,unknown,operation,mode,operation,mode
License -> public String issuedTo();1524684173;@return a string representing the entity this licenses has been issued to;public String issuedTo() {_        return issuedTo__    };return,a,string,representing,the,entity,this,licenses,has,been,issued,to;public,string,issued,to,return,issued,to
License -> public String issuedTo();1525334055;@return a string representing the entity this licenses has been issued to;public String issuedTo() {_        return issuedTo__    };return,a,string,representing,the,entity,this,licenses,has,been,issued,to;public,string,issued,to,return,issued,to
License -> public String issuedTo();1531179852;@return a string representing the entity this licenses has been issued to;public String issuedTo() {_        return issuedTo__    };return,a,string,representing,the,entity,this,licenses,has,been,issued,to;public,string,issued,to,return,issued,to
License -> public String issuedTo();1531301204;@return a string representing the entity this licenses has been issued to;public String issuedTo() {_        return issuedTo__    };return,a,string,representing,the,entity,this,licenses,has,been,issued,to;public,string,issued,to,return,issued,to
License -> public String issuedTo();1547011762;@return a string representing the entity this licenses has been issued to;public String issuedTo() {_        return issuedTo__    };return,a,string,representing,the,entity,this,licenses,has,been,issued,to;public,string,issued,to,return,issued,to
License -> public long issueDate();1524684173;@return the issueDate in milliseconds;public long issueDate() {_        return issueDate__    };return,the,issue,date,in,milliseconds;public,long,issue,date,return,issue,date
License -> public long issueDate();1525334055;@return the issueDate in milliseconds;public long issueDate() {_        return issueDate__    };return,the,issue,date,in,milliseconds;public,long,issue,date,return,issue,date
License -> public long issueDate();1531179852;@return the issueDate in milliseconds;public long issueDate() {_        return issueDate__    };return,the,issue,date,in,milliseconds;public,long,issue,date,return,issue,date
License -> public long issueDate();1531301204;@return the issueDate in milliseconds;public long issueDate() {_        return issueDate__    };return,the,issue,date,in,milliseconds;public,long,issue,date,return,issue,date
License -> public long issueDate();1547011762;@return the issueDate in milliseconds;public long issueDate() {_        return issueDate__    };return,the,issue,date,in,milliseconds;public,long,issue,date,return,issue,date
License -> public String issuer();1524684173;@return a string representing the entity responsible for issuing this license (internal);public String issuer() {_        return issuer__    };return,a,string,representing,the,entity,responsible,for,issuing,this,license,internal;public,string,issuer,return,issuer
License -> public String issuer();1525334055;@return a string representing the entity responsible for issuing this license (internal);public String issuer() {_        return issuer__    };return,a,string,representing,the,entity,responsible,for,issuing,this,license,internal;public,string,issuer,return,issuer
License -> public String issuer();1531179852;@return a string representing the entity responsible for issuing this license (internal);public String issuer() {_        return issuer__    };return,a,string,representing,the,entity,responsible,for,issuing,this,license,internal;public,string,issuer,return,issuer
License -> public String issuer();1531301204;@return a string representing the entity responsible for issuing this license (internal);public String issuer() {_        return issuer__    };return,a,string,representing,the,entity,responsible,for,issuing,this,license,internal;public,string,issuer,return,issuer
License -> public String issuer();1547011762;@return a string representing the entity responsible for issuing this license (internal);public String issuer() {_        return issuer__    };return,a,string,representing,the,entity,responsible,for,issuing,this,license,internal;public,string,issuer,return,issuer
License -> Builder -> public Builder fromPre20LicenseSpec(License pre20License);1524684173;Returns a builder that converts pre 2.0 licenses_to the new license format;public Builder fromPre20LicenseSpec(License pre20License) {_            return uid(pre20License.uid())_                    .issuedTo(pre20License.issuedTo())_                    .issueDate(pre20License.issueDate())_                    .maxNodes(pre20License.maxNodes())_                    .expiryDate(pre20License.expiryDate())__        };returns,a,builder,that,converts,pre,2,0,licenses,to,the,new,license,format;public,builder,from,pre20license,spec,license,pre20license,return,uid,pre20license,uid,issued,to,pre20license,issued,to,issue,date,pre20license,issue,date,max,nodes,pre20license,max,nodes,expiry,date,pre20license,expiry,date
License -> Builder -> public Builder fromPre20LicenseSpec(License pre20License);1525334055;Returns a builder that converts pre 2.0 licenses_to the new license format;public Builder fromPre20LicenseSpec(License pre20License) {_            return uid(pre20License.uid())_                    .issuedTo(pre20License.issuedTo())_                    .issueDate(pre20License.issueDate())_                    .maxNodes(pre20License.maxNodes())_                    .expiryDate(pre20License.expiryDate())__        };returns,a,builder,that,converts,pre,2,0,licenses,to,the,new,license,format;public,builder,from,pre20license,spec,license,pre20license,return,uid,pre20license,uid,issued,to,pre20license,issued,to,issue,date,pre20license,issue,date,max,nodes,pre20license,max,nodes,expiry,date,pre20license,expiry,date
License -> Builder -> public Builder fromPre20LicenseSpec(License pre20License);1531179852;Returns a builder that converts pre 2.0 licenses_to the new license format;public Builder fromPre20LicenseSpec(License pre20License) {_            return uid(pre20License.uid())_                    .issuedTo(pre20License.issuedTo())_                    .issueDate(pre20License.issueDate())_                    .maxNodes(pre20License.maxNodes())_                    .expiryDate(pre20License.expiryDate())__        };returns,a,builder,that,converts,pre,2,0,licenses,to,the,new,license,format;public,builder,from,pre20license,spec,license,pre20license,return,uid,pre20license,uid,issued,to,pre20license,issued,to,issue,date,pre20license,issue,date,max,nodes,pre20license,max,nodes,expiry,date,pre20license,expiry,date
License -> Builder -> public Builder fromPre20LicenseSpec(License pre20License);1531301204;Returns a builder that converts pre 2.0 licenses_to the new license format;public Builder fromPre20LicenseSpec(License pre20License) {_            return uid(pre20License.uid())_                    .issuedTo(pre20License.issuedTo())_                    .issueDate(pre20License.issueDate())_                    .maxNodes(pre20License.maxNodes())_                    .expiryDate(pre20License.expiryDate())__        };returns,a,builder,that,converts,pre,2,0,licenses,to,the,new,license,format;public,builder,from,pre20license,spec,license,pre20license,return,uid,pre20license,uid,issued,to,pre20license,issued,to,issue,date,pre20license,issue,date,max,nodes,pre20license,max,nodes,expiry,date,pre20license,expiry,date
License -> Builder -> public Builder fromPre20LicenseSpec(License pre20License);1547011762;Returns a builder that converts pre 2.0 licenses_to the new license format;public Builder fromPre20LicenseSpec(License pre20License) {_            return uid(pre20License.uid())_                    .issuedTo(pre20License.issuedTo())_                    .issueDate(pre20License.issueDate())_                    .maxNodes(pre20License.maxNodes())_                    .expiryDate(pre20License.expiryDate())__        };returns,a,builder,that,converts,pre,2,0,licenses,to,the,new,license,format;public,builder,from,pre20license,spec,license,pre20license,return,uid,pre20license,uid,issued,to,pre20license,issued,to,issue,date,pre20license,issue,date,max,nodes,pre20license,max,nodes,expiry,date,pre20license,expiry,date
License -> public OperationMode operationMode();1524684173;@return the operation mode of the license as computed from the license type or from_the license mode file;public OperationMode operationMode() {_        synchronized (this) {_            if (canReadOperationModeFromFile() && operationModeFileWatcher != null) {_                return operationModeFileWatcher.getCurrentOperationMode()__            }_        }_        return operationMode__    };return,the,operation,mode,of,the,license,as,computed,from,the,license,type,or,from,the,license,mode,file;public,operation,mode,operation,mode,synchronized,this,if,can,read,operation,mode,from,file,operation,mode,file,watcher,null,return,operation,mode,file,watcher,get,current,operation,mode,return,operation,mode
License -> public OperationMode operationMode();1525334055;@return the operation mode of the license as computed from the license type or from_the license mode file;public OperationMode operationMode() {_        synchronized (this) {_            if (canReadOperationModeFromFile() && operationModeFileWatcher != null) {_                return operationModeFileWatcher.getCurrentOperationMode()__            }_        }_        return operationMode__    };return,the,operation,mode,of,the,license,as,computed,from,the,license,type,or,from,the,license,mode,file;public,operation,mode,operation,mode,synchronized,this,if,can,read,operation,mode,from,file,operation,mode,file,watcher,null,return,operation,mode,file,watcher,get,current,operation,mode,return,operation,mode
License -> public OperationMode operationMode();1531179852;@return the operation mode of the license as computed from the license type or from_the license mode file;public OperationMode operationMode() {_        synchronized (this) {_            if (canReadOperationModeFromFile() && operationModeFileWatcher != null) {_                return operationModeFileWatcher.getCurrentOperationMode()__            }_        }_        return operationMode__    };return,the,operation,mode,of,the,license,as,computed,from,the,license,type,or,from,the,license,mode,file;public,operation,mode,operation,mode,synchronized,this,if,can,read,operation,mode,from,file,operation,mode,file,watcher,null,return,operation,mode,file,watcher,get,current,operation,mode,return,operation,mode
License -> public OperationMode operationMode();1531301204;@return the operation mode of the license as computed from the license type or from_the license mode file;public OperationMode operationMode() {_        synchronized (this) {_            if (canReadOperationModeFromFile() && operationModeFileWatcher != null) {_                return operationModeFileWatcher.getCurrentOperationMode()__            }_        }_        return operationMode__    };return,the,operation,mode,of,the,license,as,computed,from,the,license,type,or,from,the,license,mode,file;public,operation,mode,operation,mode,synchronized,this,if,can,read,operation,mode,from,file,operation,mode,file,watcher,null,return,operation,mode,file,watcher,get,current,operation,mode,return,operation,mode
License -> public OperationMode operationMode();1547011762;@return the operation mode of the license as computed from the license type or from_the license mode file;public OperationMode operationMode() {_        synchronized (this) {_            if (canReadOperationModeFromFile() && operationModeFileWatcher != null) {_                return operationModeFileWatcher.getCurrentOperationMode()__            }_        }_        return operationMode__    };return,the,operation,mode,of,the,license,as,computed,from,the,license,type,or,from,the,license,mode,file;public,operation,mode,operation,mode,synchronized,this,if,can,read,operation,mode,from,file,operation,mode,file,watcher,null,return,operation,mode,file,watcher,get,current,operation,mode,return,operation,mode
License -> public LicenseStatus status();1531179852;@return the current license's status;public LicenseStatus status() {_        long now = System.currentTimeMillis()__        if (issueDate > now) {_            return LicenseStatus.INVALID__        } else if (expiryDate < now) {_            return LicenseStatus.EXPIRED__        }_        return LicenseStatus.ACTIVE__    };return,the,current,license,s,status;public,license,status,status,long,now,system,current,time,millis,if,issue,date,now,return,license,status,invalid,else,if,expiry,date,now,return,license,status,expired,return,license,status,active
License -> public LicenseStatus status();1531301204;@return the current license's status;public LicenseStatus status() {_        long now = System.currentTimeMillis()__        if (issueDate > now) {_            return LicenseStatus.INVALID__        } else if (expiryDate < now) {_            return LicenseStatus.EXPIRED__        }_        return LicenseStatus.ACTIVE__    };return,the,current,license,s,status;public,license,status,status,long,now,system,current,time,millis,if,issue,date,now,return,license,status,invalid,else,if,expiry,date,now,return,license,status,expired,return,license,status,active
License -> public LicenseStatus status();1547011762;@return the current license's status;public LicenseStatus status() {_        long now = System.currentTimeMillis()__        if (issueDate > now) {_            return LicenseStatus.INVALID__        } else if (expiryDate < now) {_            return LicenseStatus.EXPIRED__        }_        return LicenseStatus.ACTIVE__    };return,the,current,license,s,status;public,license,status,status,long,now,system,current,time,millis,if,issue,date,now,return,license,status,invalid,else,if,expiry,date,now,return,license,status,expired,return,license,status,active
License -> public int version();1524684173;@return version of the license;public int version() {_        return version__    };return,version,of,the,license;public,int,version,return,version
License -> public int version();1525334055;@return version of the license;public int version() {_        return version__    };return,version,of,the,license;public,int,version,return,version
License -> public int version();1531179852;@return version of the license;public int version() {_        return version__    };return,version,of,the,license;public,int,version,return,version
License -> public int version();1531301204;@return version of the license;public int version() {_        return version__    };return,version,of,the,license;public,int,version,return,version
License -> public int version();1547011762;@return version of the license;public int version() {_        return version__    };return,version,of,the,license;public,int,version,return,version
License -> public long startDate();1524684173;@return the startDate in milliseconds;public long startDate() {_        return startDate__    };return,the,start,date,in,milliseconds;public,long,start,date,return,start,date
License -> public long startDate();1525334055;@return the startDate in milliseconds;public long startDate() {_        return startDate__    };return,the,start,date,in,milliseconds;public,long,start,date,return,start,date
License -> public long startDate();1531179852;@return the startDate in milliseconds;public long startDate() {_        return startDate__    };return,the,start,date,in,milliseconds;public,long,start,date,return,start,date
License -> public long startDate();1531301204;@return the startDate in milliseconds;public long startDate() {_        return startDate__    };return,the,start,date,in,milliseconds;public,long,start,date,return,start,date
License -> public long startDate();1547011762;@return the startDate in milliseconds;public long startDate() {_        return startDate__    };return,the,start,date,in,milliseconds;public,long,start,date,return,start,date
License -> OperationMode -> public static int compare(OperationMode opMode1, OperationMode opMode2);1524684173;Returns non-zero positive number when <code>opMode1</code> is greater than <code>opMode2</code>;public static int compare(OperationMode opMode1, OperationMode opMode2) {_            return Integer.compare(opMode1.id, opMode2.id)__        };returns,non,zero,positive,number,when,code,op,mode1,code,is,greater,than,code,op,mode2,code;public,static,int,compare,operation,mode,op,mode1,operation,mode,op,mode2,return,integer,compare,op,mode1,id,op,mode2,id
License -> OperationMode -> public static int compare(OperationMode opMode1, OperationMode opMode2);1525334055;Returns non-zero positive number when <code>opMode1</code> is greater than <code>opMode2</code>;public static int compare(OperationMode opMode1, OperationMode opMode2) {_            return Integer.compare(opMode1.id, opMode2.id)__        };returns,non,zero,positive,number,when,code,op,mode1,code,is,greater,than,code,op,mode2,code;public,static,int,compare,operation,mode,op,mode1,operation,mode,op,mode2,return,integer,compare,op,mode1,id,op,mode2,id
License -> OperationMode -> public static int compare(OperationMode opMode1, OperationMode opMode2);1531179852;Returns non-zero positive number when <code>opMode1</code> is greater than <code>opMode2</code>;public static int compare(OperationMode opMode1, OperationMode opMode2) {_            return Integer.compare(opMode1.id, opMode2.id)__        };returns,non,zero,positive,number,when,code,op,mode1,code,is,greater,than,code,op,mode2,code;public,static,int,compare,operation,mode,op,mode1,operation,mode,op,mode2,return,integer,compare,op,mode1,id,op,mode2,id
License -> OperationMode -> public static int compare(OperationMode opMode1, OperationMode opMode2);1531301204;Returns non-zero positive number when <code>opMode1</code> is greater than <code>opMode2</code>;public static int compare(OperationMode opMode1, OperationMode opMode2) {_            return Integer.compare(opMode1.id, opMode2.id)__        };returns,non,zero,positive,number,when,code,op,mode1,code,is,greater,than,code,op,mode2,code;public,static,int,compare,operation,mode,op,mode1,operation,mode,op,mode2,return,integer,compare,op,mode1,id,op,mode2,id
License -> OperationMode -> public static int compare(OperationMode opMode1, OperationMode opMode2);1547011762;Returns non-zero positive number when <code>opMode1</code> is greater than <code>opMode2</code>;public static int compare(OperationMode opMode1, OperationMode opMode2) {_            return Integer.compare(opMode1.id, opMode2.id)__        };returns,non,zero,positive,number,when,code,op,mode1,code,is,greater,than,code,op,mode2,code;public,static,int,compare,operation,mode,op,mode1,operation,mode,op,mode2,return,integer,compare,op,mode1,id,op,mode2,id
License -> public long expiryDate();1524684173;@return the expiry date in milliseconds;public long expiryDate() {_        return expiryDate__    };return,the,expiry,date,in,milliseconds;public,long,expiry,date,return,expiry,date
License -> public long expiryDate();1525334055;@return the expiry date in milliseconds;public long expiryDate() {_        return expiryDate__    };return,the,expiry,date,in,milliseconds;public,long,expiry,date,return,expiry,date
License -> public long expiryDate();1531179852;@return the expiry date in milliseconds;public long expiryDate() {_        return expiryDate__    };return,the,expiry,date,in,milliseconds;public,long,expiry,date,return,expiry,date
License -> public long expiryDate();1531301204;@return the expiry date in milliseconds;public long expiryDate() {_        return expiryDate__    };return,the,expiry,date,in,milliseconds;public,long,expiry,date,return,expiry,date
License -> public long expiryDate();1547011762;@return the expiry date in milliseconds;public long expiryDate() {_        return expiryDate__    };return,the,expiry,date,in,milliseconds;public,long,expiry,date,return,expiry,date
License -> public static boolean isAutoGeneratedLicense(String signature);1524684173;Returns true if the license was auto-generated (by license plugin),_false otherwise;public static boolean isAutoGeneratedLicense(String signature) {_        try {_            byte[] signatureBytes = Base64.getDecoder().decode(signature)__            ByteBuffer byteBuffer = ByteBuffer.wrap(signatureBytes)__            return byteBuffer.getInt() < 0__        } catch (IllegalArgumentException e) {_            throw new IllegalStateException(e)__        }_    };returns,true,if,the,license,was,auto,generated,by,license,plugin,false,otherwise;public,static,boolean,is,auto,generated,license,string,signature,try,byte,signature,bytes,base64,get,decoder,decode,signature,byte,buffer,byte,buffer,byte,buffer,wrap,signature,bytes,return,byte,buffer,get,int,0,catch,illegal,argument,exception,e,throw,new,illegal,state,exception,e
License -> public static boolean isAutoGeneratedLicense(String signature);1525334055;Returns true if the license was auto-generated (by license plugin),_false otherwise;public static boolean isAutoGeneratedLicense(String signature) {_        try {_            byte[] signatureBytes = Base64.getDecoder().decode(signature)__            ByteBuffer byteBuffer = ByteBuffer.wrap(signatureBytes)__            return byteBuffer.getInt() < 0__        } catch (IllegalArgumentException e) {_            throw new IllegalStateException(e)__        }_    };returns,true,if,the,license,was,auto,generated,by,license,plugin,false,otherwise;public,static,boolean,is,auto,generated,license,string,signature,try,byte,signature,bytes,base64,get,decoder,decode,signature,byte,buffer,byte,buffer,byte,buffer,wrap,signature,bytes,return,byte,buffer,get,int,0,catch,illegal,argument,exception,e,throw,new,illegal,state,exception,e
License -> public static boolean isAutoGeneratedLicense(String signature);1531179852;Returns true if the license was auto-generated (by license plugin),_false otherwise;public static boolean isAutoGeneratedLicense(String signature) {_        try {_            byte[] signatureBytes = Base64.getDecoder().decode(signature)__            ByteBuffer byteBuffer = ByteBuffer.wrap(signatureBytes)__            return byteBuffer.getInt() < 0__        } catch (IllegalArgumentException e) {_            throw new IllegalStateException(e)__        }_    };returns,true,if,the,license,was,auto,generated,by,license,plugin,false,otherwise;public,static,boolean,is,auto,generated,license,string,signature,try,byte,signature,bytes,base64,get,decoder,decode,signature,byte,buffer,byte,buffer,byte,buffer,wrap,signature,bytes,return,byte,buffer,get,int,0,catch,illegal,argument,exception,e,throw,new,illegal,state,exception,e
License -> public static boolean isAutoGeneratedLicense(String signature);1531301204;Returns true if the license was auto-generated (by license plugin),_false otherwise;public static boolean isAutoGeneratedLicense(String signature) {_        try {_            byte[] signatureBytes = Base64.getDecoder().decode(signature)__            ByteBuffer byteBuffer = ByteBuffer.wrap(signatureBytes)__            return byteBuffer.getInt() < 0__        } catch (IllegalArgumentException e) {_            throw new IllegalStateException(e)__        }_    };returns,true,if,the,license,was,auto,generated,by,license,plugin,false,otherwise;public,static,boolean,is,auto,generated,license,string,signature,try,byte,signature,bytes,base64,get,decoder,decode,signature,byte,buffer,byte,buffer,byte,buffer,wrap,signature,bytes,return,byte,buffer,get,int,0,catch,illegal,argument,exception,e,throw,new,illegal,state,exception,e
License -> public static boolean isAutoGeneratedLicense(String signature);1547011762;Returns true if the license was auto-generated (by license plugin),_false otherwise;public static boolean isAutoGeneratedLicense(String signature) {_        try {_            byte[] signatureBytes = Base64.getDecoder().decode(signature)__            ByteBuffer byteBuffer = ByteBuffer.wrap(signatureBytes)__            return byteBuffer.getInt() < 0__        } catch (IllegalArgumentException e) {_            throw new IllegalStateException(e)__        }_    };returns,true,if,the,license,was,auto,generated,by,license,plugin,false,otherwise;public,static,boolean,is,auto,generated,license,string,signature,try,byte,signature,bytes,base64,get,decoder,decode,signature,byte,buffer,byte,buffer,byte,buffer,wrap,signature,bytes,return,byte,buffer,get,int,0,catch,illegal,argument,exception,e,throw,new,illegal,state,exception,e
License -> public String uid();1524684173;@return a unique identifier for a license;public String uid() {_        return uid__    };return,a,unique,identifier,for,a,license;public,string,uid,return,uid
License -> public String uid();1525334055;@return a unique identifier for a license;public String uid() {_        return uid__    };return,a,unique,identifier,for,a,license;public,string,uid,return,uid
License -> public String uid();1531179852;@return a unique identifier for a license;public String uid() {_        return uid__    };return,a,unique,identifier,for,a,license;public,string,uid,return,uid
License -> public String uid();1531301204;@return a unique identifier for a license;public String uid() {_        return uid__    };return,a,unique,identifier,for,a,license;public,string,uid,return,uid
License -> public String uid();1547011762;@return a unique identifier for a license;public String uid() {_        return uid__    };return,a,unique,identifier,for,a,license;public,string,uid,return,uid
License -> public String type();1524684173;@return type of the license [trial, subscription, internal];public String type() {_        return type__    };return,type,of,the,license,trial,subscription,internal;public,string,type,return,type
License -> public String type();1525334055;@return type of the license [trial, subscription, internal];public String type() {_        return type__    };return,type,of,the,license,trial,subscription,internal;public,string,type,return,type
License -> public String type();1531179852;@return type of the license [trial, subscription, internal];public String type() {_        return type__    };return,type,of,the,license,trial,subscription,internal;public,string,type,return,type
License -> public String type();1531301204;@return type of the license [trial, subscription, internal];public String type() {_        return type__    };return,type,of,the,license,trial,subscription,internal;public,string,type,return,type
License -> public String type();1547011762;@return type of the license [trial, subscription, internal];public String type() {_        return type__    };return,type,of,the,license,trial,subscription,internal;public,string,type,return,type
License -> public Status status();1524684173;@return the current license's status;public Status status() {_        long now = System.currentTimeMillis()__        if (issueDate > now) {_            return Status.INVALID__        } else if (expiryDate < now) {_            return Status.EXPIRED__        }_        return Status.ACTIVE__    };return,the,current,license,s,status;public,status,status,long,now,system,current,time,millis,if,issue,date,now,return,status,invalid,else,if,expiry,date,now,return,status,expired,return,status,active
License -> public Status status();1525334055;@return the current license's status;public Status status() {_        long now = System.currentTimeMillis()__        if (issueDate > now) {_            return Status.INVALID__        } else if (expiryDate < now) {_            return Status.EXPIRED__        }_        return Status.ACTIVE__    };return,the,current,license,s,status;public,status,status,long,now,system,current,time,millis,if,issue,date,now,return,status,invalid,else,if,expiry,date,now,return,status,expired,return,status,active
License -> public String signature();1524684173;@return a string representing the signature of the license used for license verification;public String signature() {_        return signature__    };return,a,string,representing,the,signature,of,the,license,used,for,license,verification;public,string,signature,return,signature
License -> public String signature();1525334055;@return a string representing the signature of the license used for license verification;public String signature() {_        return signature__    };return,a,string,representing,the,signature,of,the,license,used,for,license,verification;public,string,signature,return,signature
License -> public String signature();1531179852;@return a string representing the signature of the license used for license verification;public String signature() {_        return signature__    };return,a,string,representing,the,signature,of,the,license,used,for,license,verification;public,string,signature,return,signature
License -> public String signature();1531301204;@return a string representing the signature of the license used for license verification;public String signature() {_        return signature__    };return,a,string,representing,the,signature,of,the,license,used,for,license,verification;public,string,signature,return,signature
License -> public String signature();1547011762;@return a string representing the signature of the license used for license verification;public String signature() {_        return signature__    };return,a,string,representing,the,signature,of,the,license,used,for,license,verification;public,string,signature,return,signature
