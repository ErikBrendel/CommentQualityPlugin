commented;modifiers;parameterAmount;loc;comment;code
false;public;2;37;;@Override public ClusterState performAction(Index index, ClusterState currentState) {     IndexMetaData indexMetaData = currentState.metaData().getIndexSafe(index).     long newIndexTime.     boolean indexingComplete = LifecycleSettings.LIFECYCLE_INDEXING_COMPLETE_SETTING.get(indexMetaData.getSettings()).     if (indexingComplete) {         logger.trace(indexMetaData.getIndex() + " has lifecycle complete set, skipping " + UpdateRolloverLifecycleDateStep.NAME).         // The index won't have RolloverInfo if this is a Following index and indexing_complete was set by CCR,         // so just use the current time.         newIndexTime = fallbackTimeSupplier.getAsLong().     } else {         // find the newly created index from the rollover and fetch its index.creation_date         String rolloverAlias = RolloverAction.LIFECYCLE_ROLLOVER_ALIAS_SETTING.get(indexMetaData.getSettings()).         if (Strings.isNullOrEmpty(rolloverAlias)) {             throw new IllegalStateException("setting [" + RolloverAction.LIFECYCLE_ROLLOVER_ALIAS + "] is not set on index [" + indexMetaData.getIndex().getName() + "]").         }         RolloverInfo rolloverInfo = indexMetaData.getRolloverInfos().get(rolloverAlias).         if (rolloverInfo == null) {             throw new IllegalStateException("no rollover info found for [" + indexMetaData.getIndex().getName() + "] with alias [" + rolloverAlias + "], the index has not yet rolled over with that alias").         }         newIndexTime = rolloverInfo.getTime().     }     LifecycleExecutionState.Builder newLifecycleState = LifecycleExecutionState.builder(LifecycleExecutionState.fromIndexMetadata(indexMetaData)).     newLifecycleState.setIndexCreationDate(newIndexTime).     IndexMetaData.Builder newIndexMetadata = IndexMetaData.builder(indexMetaData).     newIndexMetadata.putCustom(ILM_CUSTOM_METADATA_KEY, newLifecycleState.build().asMap()).     return ClusterState.builder(currentState).metaData(MetaData.builder(currentState.metaData()).put(newIndexMetadata)).build(). }
false;public;0;4;;@Override public int hashCode() {     return super.hashCode(). }
false;public;1;4;;@Override public boolean equals(Object obj) {     return obj != null && getClass() == obj.getClass() && super.equals(obj). }
