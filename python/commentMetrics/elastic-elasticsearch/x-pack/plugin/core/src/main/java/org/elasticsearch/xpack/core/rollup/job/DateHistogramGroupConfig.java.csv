# id;timestamp;commentText;codeText;commentWords;codeWords
DateHistogramGroupConfig -> public DateHistogramInterval getDelay();1533319589;Get the time delay for this histogram;public DateHistogramInterval getDelay() {_        return delay__    };get,the,time,delay,for,this,histogram;public,date,histogram,interval,get,delay,return,delay
DateHistogramGroupConfig -> public DateHistogramInterval getDelay();1533641732;Get the time delay for this histogram;public DateHistogramInterval getDelay() {_        return delay__    };get,the,time,delay,for,this,histogram;public,date,histogram,interval,get,delay,return,delay
DateHistogramGroupConfig -> public DateHistogramInterval getDelay();1535139672;Get the time delay for this histogram;public DateHistogramInterval getDelay() {_        return delay__    };get,the,time,delay,for,this,histogram;public,date,histogram,interval,get,delay,return,delay
DateHistogramGroupConfig -> public DateHistogramInterval getDelay();1535383145;Get the time delay for this histogram;public DateHistogramInterval getDelay() {_        return delay__    };get,the,time,delay,for,this,histogram;public,date,histogram,interval,get,delay,return,delay
DateHistogramGroupConfig -> public DateHistogramInterval getDelay();1548236405;Get the time delay for this histogram;public DateHistogramInterval getDelay() {_        return delay__    };get,the,time,delay,for,this,histogram;public,date,histogram,interval,get,delay,return,delay
DateHistogramGroupConfig -> public Rounding createRounding();1533319589;Create the rounding for this date histogram;public Rounding createRounding() {_        return createRounding(interval.toString(), timeZone)__    };create,the,rounding,for,this,date,histogram;public,rounding,create,rounding,return,create,rounding,interval,to,string,time,zone
DateHistogramGroupConfig -> public Rounding createRounding();1533641732;Create the rounding for this date histogram;public Rounding createRounding() {_        return createRounding(interval.toString(), timeZone)__    };create,the,rounding,for,this,date,histogram;public,rounding,create,rounding,return,create,rounding,interval,to,string,time,zone
DateHistogramGroupConfig -> public Rounding createRounding();1535139672;Create the rounding for this date histogram;public Rounding createRounding() {_        return createRounding(interval.toString(), timeZone)__    };create,the,rounding,for,this,date,histogram;public,rounding,create,rounding,return,create,rounding,interval,to,string,time,zone
DateHistogramGroupConfig -> public Rounding createRounding();1535383145;Create the rounding for this date histogram;public Rounding createRounding() {_        return createRounding(interval.toString(), timeZone)__    };create,the,rounding,for,this,date,histogram;public,rounding,create,rounding,return,create,rounding,interval,to,string,time,zone
DateHistogramGroupConfig -> public Rounding createRounding();1548236405;Create the rounding for this date histogram;public Rounding createRounding() {_        return createRounding(interval.toString(), timeZone)__    };create,the,rounding,for,this,date,histogram;public,rounding,create,rounding,return,create,rounding,interval,to,string,time,zone
DateHistogramGroupConfig -> public String getTimeZone();1533319589;Get the timezone to apply;public String getTimeZone() {_        return timeZone__    };get,the,timezone,to,apply;public,string,get,time,zone,return,time,zone
DateHistogramGroupConfig -> public String getTimeZone();1533641732;Get the timezone to apply;public String getTimeZone() {_        return timeZone__    };get,the,timezone,to,apply;public,string,get,time,zone,return,time,zone
DateHistogramGroupConfig -> public String getTimeZone();1535139672;Get the timezone to apply;public String getTimeZone() {_        return timeZone__    };get,the,timezone,to,apply;public,string,get,time,zone,return,time,zone
DateHistogramGroupConfig -> public String getTimeZone();1535383145;Get the timezone to apply;public String getTimeZone() {_        return timeZone__    };get,the,timezone,to,apply;public,string,get,time,zone,return,time,zone
DateHistogramGroupConfig -> public String getTimeZone();1548236405;Get the timezone to apply;public String getTimeZone() {_        return timeZone__    };get,the,timezone,to,apply;public,string,get,time,zone,return,time,zone
DateHistogramGroupConfig -> public DateHistogramGroupConfig(final String field, final DateHistogramInterval interval);1533319589;Create a new {@link DateHistogramGroupConfig} using the given field and interval parameters.;public DateHistogramGroupConfig(final String field, final DateHistogramInterval interval) {_        this(field, interval, null, null)__    };create,a,new,link,date,histogram,group,config,using,the,given,field,and,interval,parameters;public,date,histogram,group,config,final,string,field,final,date,histogram,interval,interval,this,field,interval,null,null
DateHistogramGroupConfig -> public DateHistogramGroupConfig(final String field, final DateHistogramInterval interval);1533641732;Create a new {@link DateHistogramGroupConfig} using the given field and interval parameters.;public DateHistogramGroupConfig(final String field, final DateHistogramInterval interval) {_        this(field, interval, null, null)__    };create,a,new,link,date,histogram,group,config,using,the,given,field,and,interval,parameters;public,date,histogram,group,config,final,string,field,final,date,histogram,interval,interval,this,field,interval,null,null
DateHistogramGroupConfig -> public DateHistogramGroupConfig(final String field, final DateHistogramInterval interval);1535139672;Create a new {@link DateHistogramGroupConfig} using the given field and interval parameters.;public DateHistogramGroupConfig(final String field, final DateHistogramInterval interval) {_        this(field, interval, null, null)__    };create,a,new,link,date,histogram,group,config,using,the,given,field,and,interval,parameters;public,date,histogram,group,config,final,string,field,final,date,histogram,interval,interval,this,field,interval,null,null
DateHistogramGroupConfig -> public DateHistogramGroupConfig(final String field, final DateHistogramInterval interval);1535383145;Create a new {@link DateHistogramGroupConfig} using the given field and interval parameters.;public DateHistogramGroupConfig(final String field, final DateHistogramInterval interval) {_        this(field, interval, null, null)__    };create,a,new,link,date,histogram,group,config,using,the,given,field,and,interval,parameters;public,date,histogram,group,config,final,string,field,final,date,histogram,interval,interval,this,field,interval,null,null
DateHistogramGroupConfig -> public DateHistogramGroupConfig(final String field, final DateHistogramInterval interval);1548236405;Create a new {@link DateHistogramGroupConfig} using the given field and interval parameters.;public DateHistogramGroupConfig(final String field, final DateHistogramInterval interval) {_        this(field, interval, null, null)__    };create,a,new,link,date,histogram,group,config,using,the,given,field,and,interval,parameters;public,date,histogram,group,config,final,string,field,final,date,histogram,interval,interval,this,field,interval,null,null
DateHistogramGroupConfig -> public List<CompositeValuesSourceBuilder<?>> toBuilders();1533319589;This returns a set of aggregation builders which represent the configured_set of date histograms.  Used by the rollup indexer to iterate over historical data;public List<CompositeValuesSourceBuilder<?>> toBuilders() {_        DateHistogramValuesSourceBuilder vsBuilder =_                new DateHistogramValuesSourceBuilder(RollupField.formatIndexerAggName(field, DateHistogramAggregationBuilder.NAME))__        vsBuilder.dateHistogramInterval(interval)__        vsBuilder.field(field)__        vsBuilder.timeZone(toDateTimeZone(timeZone))__        return Collections.singletonList(vsBuilder)__    };this,returns,a,set,of,aggregation,builders,which,represent,the,configured,set,of,date,histograms,used,by,the,rollup,indexer,to,iterate,over,historical,data;public,list,composite,values,source,builder,to,builders,date,histogram,values,source,builder,vs,builder,new,date,histogram,values,source,builder,rollup,field,format,indexer,agg,name,field,date,histogram,aggregation,builder,name,vs,builder,date,histogram,interval,interval,vs,builder,field,field,vs,builder,time,zone,to,date,time,zone,time,zone,return,collections,singleton,list,vs,builder
DateHistogramGroupConfig -> public List<CompositeValuesSourceBuilder<?>> toBuilders();1533641732;This returns a set of aggregation builders which represent the configured_set of date histograms.  Used by the rollup indexer to iterate over historical data;public List<CompositeValuesSourceBuilder<?>> toBuilders() {_        DateHistogramValuesSourceBuilder vsBuilder =_                new DateHistogramValuesSourceBuilder(RollupField.formatIndexerAggName(field, DateHistogramAggregationBuilder.NAME))__        vsBuilder.dateHistogramInterval(interval)__        vsBuilder.field(field)__        vsBuilder.timeZone(toDateTimeZone(timeZone))__        return Collections.singletonList(vsBuilder)__    };this,returns,a,set,of,aggregation,builders,which,represent,the,configured,set,of,date,histograms,used,by,the,rollup,indexer,to,iterate,over,historical,data;public,list,composite,values,source,builder,to,builders,date,histogram,values,source,builder,vs,builder,new,date,histogram,values,source,builder,rollup,field,format,indexer,agg,name,field,date,histogram,aggregation,builder,name,vs,builder,date,histogram,interval,interval,vs,builder,field,field,vs,builder,time,zone,to,date,time,zone,time,zone,return,collections,singleton,list,vs,builder
DateHistogramGroupConfig -> public List<CompositeValuesSourceBuilder<?>> toBuilders();1535139672;This returns a set of aggregation builders which represent the configured_set of date histograms.  Used by the rollup indexer to iterate over historical data;public List<CompositeValuesSourceBuilder<?>> toBuilders() {_        DateHistogramValuesSourceBuilder vsBuilder =_                new DateHistogramValuesSourceBuilder(RollupField.formatIndexerAggName(field, DateHistogramAggregationBuilder.NAME))__        vsBuilder.dateHistogramInterval(interval)__        vsBuilder.field(field)__        vsBuilder.timeZone(toDateTimeZone(timeZone))__        return Collections.singletonList(vsBuilder)__    };this,returns,a,set,of,aggregation,builders,which,represent,the,configured,set,of,date,histograms,used,by,the,rollup,indexer,to,iterate,over,historical,data;public,list,composite,values,source,builder,to,builders,date,histogram,values,source,builder,vs,builder,new,date,histogram,values,source,builder,rollup,field,format,indexer,agg,name,field,date,histogram,aggregation,builder,name,vs,builder,date,histogram,interval,interval,vs,builder,field,field,vs,builder,time,zone,to,date,time,zone,time,zone,return,collections,singleton,list,vs,builder
DateHistogramGroupConfig -> public String getField();1533319589;Get the date field;public String getField() {_        return field__    };get,the,date,field;public,string,get,field,return,field
DateHistogramGroupConfig -> public String getField();1533641732;Get the date field;public String getField() {_        return field__    };get,the,date,field;public,string,get,field,return,field
DateHistogramGroupConfig -> public String getField();1535139672;Get the date field;public String getField() {_        return field__    };get,the,date,field;public,string,get,field,return,field
DateHistogramGroupConfig -> public String getField();1535383145;Get the date field;public String getField() {_        return field__    };get,the,date,field;public,string,get,field,return,field
DateHistogramGroupConfig -> public String getField();1548236405;Get the date field;public String getField() {_        return field__    };get,the,date,field;public,string,get,field,return,field
DateHistogramGroupConfig -> public Map<String, Object> toAggCap();1533319589;@return A map representing this config object as a RollupCaps aggregation object;public Map<String, Object> toAggCap() {_        Map<String, Object> map = new HashMap<>(3)__        map.put("agg", DateHistogramAggregationBuilder.NAME)__        map.put(INTERVAL, interval.toString())__        if (delay != null) {_            map.put(DELAY, delay.toString())__        }_        map.put(TIME_ZONE, timeZone)___        return map__    };return,a,map,representing,this,config,object,as,a,rollup,caps,aggregation,object;public,map,string,object,to,agg,cap,map,string,object,map,new,hash,map,3,map,put,agg,date,histogram,aggregation,builder,name,map,put,interval,interval,to,string,if,delay,null,map,put,delay,delay,to,string,map,put,time,zone,return,map
DateHistogramGroupConfig -> public Map<String, Object> toAggCap();1533641732;@return A map representing this config object as a RollupCaps aggregation object;public Map<String, Object> toAggCap() {_        Map<String, Object> map = new HashMap<>(3)__        map.put("agg", DateHistogramAggregationBuilder.NAME)__        map.put(INTERVAL, interval.toString())__        if (delay != null) {_            map.put(DELAY, delay.toString())__        }_        map.put(TIME_ZONE, timeZone)___        return map__    };return,a,map,representing,this,config,object,as,a,rollup,caps,aggregation,object;public,map,string,object,to,agg,cap,map,string,object,map,new,hash,map,3,map,put,agg,date,histogram,aggregation,builder,name,map,put,interval,interval,to,string,if,delay,null,map,put,delay,delay,to,string,map,put,time,zone,return,map
DateHistogramGroupConfig -> public DateHistogramGroupConfig(final String field,                                     final DateHistogramInterval interval,                                     final @Nullable DateHistogramInterval delay,                                     final @Nullable String timeZone);1533319589;Create a new {@link DateHistogramGroupConfig} using the given configuration parameters._<p>_The {@code field} and {@code interval} are required to compute the date histogram for the rolled up documents._The {@code delay} is optional and can be set to {@code null}. It defines how long to wait before rolling up new documents._The {@code timeZone} is optional and can be set to {@code null}. When configured, the time zone value  is resolved using_({@link DateTimeZone#forID(String)} and must match a time zone identifier provided by the Joda Time library._</p>_@param field the name of the date field to use for the date histogram (required)_@param interval the interval to use for the date histogram (required)_@param delay the time delay (optional)_@param timeZone the id of time zone to use to calculate the date histogram (optional). When {@code null}, the UTC timezone is used.;public DateHistogramGroupConfig(final String field,_                                    final DateHistogramInterval interval,_                                    final @Nullable DateHistogramInterval delay,_                                    final @Nullable String timeZone) {_        if (field == null || field.isEmpty()) {_            throw new IllegalArgumentException("Field must be a non-null, non-empty string")__        }_        if (interval == null) {_            throw new IllegalArgumentException("Interval must be non-null")__        }__        this.interval = interval__        this.field = field__        this.delay = delay__        this.timeZone = (timeZone != null && timeZone.isEmpty() == false) ? timeZone : DEFAULT_TIMEZONE___        _        createRounding(this.interval.toString(), this.timeZone)__        if (delay != null) {_            _            TimeValue.parseTimeValue(this.delay.toString(), DELAY)__        }_    };create,a,new,link,date,histogram,group,config,using,the,given,configuration,parameters,p,the,code,field,and,code,interval,are,required,to,compute,the,date,histogram,for,the,rolled,up,documents,the,code,delay,is,optional,and,can,be,set,to,code,null,it,defines,how,long,to,wait,before,rolling,up,new,documents,the,code,time,zone,is,optional,and,can,be,set,to,code,null,when,configured,the,time,zone,value,is,resolved,using,link,date,time,zone,for,id,string,and,must,match,a,time,zone,identifier,provided,by,the,joda,time,library,p,param,field,the,name,of,the,date,field,to,use,for,the,date,histogram,required,param,interval,the,interval,to,use,for,the,date,histogram,required,param,delay,the,time,delay,optional,param,time,zone,the,id,of,time,zone,to,use,to,calculate,the,date,histogram,optional,when,code,null,the,utc,timezone,is,used;public,date,histogram,group,config,final,string,field,final,date,histogram,interval,interval,final,nullable,date,histogram,interval,delay,final,nullable,string,time,zone,if,field,null,field,is,empty,throw,new,illegal,argument,exception,field,must,be,a,non,null,non,empty,string,if,interval,null,throw,new,illegal,argument,exception,interval,must,be,non,null,this,interval,interval,this,field,field,this,delay,delay,this,time,zone,time,zone,null,time,zone,is,empty,false,time,zone,create,rounding,this,interval,to,string,this,time,zone,if,delay,null,time,value,parse,time,value,this,delay,to,string,delay
DateHistogramGroupConfig -> public DateHistogramGroupConfig(final String field,                                     final DateHistogramInterval interval,                                     final @Nullable DateHistogramInterval delay,                                     final @Nullable String timeZone);1533641732;Create a new {@link DateHistogramGroupConfig} using the given configuration parameters._<p>_The {@code field} and {@code interval} are required to compute the date histogram for the rolled up documents._The {@code delay} is optional and can be set to {@code null}. It defines how long to wait before rolling up new documents._The {@code timeZone} is optional and can be set to {@code null}. When configured, the time zone value  is resolved using_({@link DateTimeZone#forID(String)} and must match a time zone identifier provided by the Joda Time library._</p>_@param field the name of the date field to use for the date histogram (required)_@param interval the interval to use for the date histogram (required)_@param delay the time delay (optional)_@param timeZone the id of time zone to use to calculate the date histogram (optional). When {@code null}, the UTC timezone is used.;public DateHistogramGroupConfig(final String field,_                                    final DateHistogramInterval interval,_                                    final @Nullable DateHistogramInterval delay,_                                    final @Nullable String timeZone) {_        if (field == null || field.isEmpty()) {_            throw new IllegalArgumentException("Field must be a non-null, non-empty string")__        }_        if (interval == null) {_            throw new IllegalArgumentException("Interval must be non-null")__        }__        this.interval = interval__        this.field = field__        this.delay = delay__        this.timeZone = (timeZone != null && timeZone.isEmpty() == false) ? timeZone : DEFAULT_TIMEZONE___        _        createRounding(this.interval.toString(), this.timeZone)__        if (delay != null) {_            _            TimeValue.parseTimeValue(this.delay.toString(), DELAY)__        }_    };create,a,new,link,date,histogram,group,config,using,the,given,configuration,parameters,p,the,code,field,and,code,interval,are,required,to,compute,the,date,histogram,for,the,rolled,up,documents,the,code,delay,is,optional,and,can,be,set,to,code,null,it,defines,how,long,to,wait,before,rolling,up,new,documents,the,code,time,zone,is,optional,and,can,be,set,to,code,null,when,configured,the,time,zone,value,is,resolved,using,link,date,time,zone,for,id,string,and,must,match,a,time,zone,identifier,provided,by,the,joda,time,library,p,param,field,the,name,of,the,date,field,to,use,for,the,date,histogram,required,param,interval,the,interval,to,use,for,the,date,histogram,required,param,delay,the,time,delay,optional,param,time,zone,the,id,of,time,zone,to,use,to,calculate,the,date,histogram,optional,when,code,null,the,utc,timezone,is,used;public,date,histogram,group,config,final,string,field,final,date,histogram,interval,interval,final,nullable,date,histogram,interval,delay,final,nullable,string,time,zone,if,field,null,field,is,empty,throw,new,illegal,argument,exception,field,must,be,a,non,null,non,empty,string,if,interval,null,throw,new,illegal,argument,exception,interval,must,be,non,null,this,interval,interval,this,field,field,this,delay,delay,this,time,zone,time,zone,null,time,zone,is,empty,false,time,zone,create,rounding,this,interval,to,string,this,time,zone,if,delay,null,time,value,parse,time,value,this,delay,to,string,delay
DateHistogramGroupConfig -> public DateHistogramGroupConfig(final String field,                                     final DateHistogramInterval interval,                                     final @Nullable DateHistogramInterval delay,                                     final @Nullable String timeZone);1535139672;Create a new {@link DateHistogramGroupConfig} using the given configuration parameters._<p>_The {@code field} and {@code interval} are required to compute the date histogram for the rolled up documents._The {@code delay} is optional and can be set to {@code null}. It defines how long to wait before rolling up new documents._The {@code timeZone} is optional and can be set to {@code null}. When configured, the time zone value  is resolved using_({@link DateTimeZone#forID(String)} and must match a time zone identifier provided by the Joda Time library._</p>_@param field the name of the date field to use for the date histogram (required)_@param interval the interval to use for the date histogram (required)_@param delay the time delay (optional)_@param timeZone the id of time zone to use to calculate the date histogram (optional). When {@code null}, the UTC timezone is used.;public DateHistogramGroupConfig(final String field,_                                    final DateHistogramInterval interval,_                                    final @Nullable DateHistogramInterval delay,_                                    final @Nullable String timeZone) {_        if (field == null || field.isEmpty()) {_            throw new IllegalArgumentException("Field must be a non-null, non-empty string")__        }_        if (interval == null) {_            throw new IllegalArgumentException("Interval must be non-null")__        }__        this.interval = interval__        this.field = field__        this.delay = delay__        this.timeZone = (timeZone != null && timeZone.isEmpty() == false) ? timeZone : DEFAULT_TIMEZONE___        _        createRounding(this.interval.toString(), this.timeZone)__        if (delay != null) {_            _            TimeValue.parseTimeValue(this.delay.toString(), DELAY)__        }_    };create,a,new,link,date,histogram,group,config,using,the,given,configuration,parameters,p,the,code,field,and,code,interval,are,required,to,compute,the,date,histogram,for,the,rolled,up,documents,the,code,delay,is,optional,and,can,be,set,to,code,null,it,defines,how,long,to,wait,before,rolling,up,new,documents,the,code,time,zone,is,optional,and,can,be,set,to,code,null,when,configured,the,time,zone,value,is,resolved,using,link,date,time,zone,for,id,string,and,must,match,a,time,zone,identifier,provided,by,the,joda,time,library,p,param,field,the,name,of,the,date,field,to,use,for,the,date,histogram,required,param,interval,the,interval,to,use,for,the,date,histogram,required,param,delay,the,time,delay,optional,param,time,zone,the,id,of,time,zone,to,use,to,calculate,the,date,histogram,optional,when,code,null,the,utc,timezone,is,used;public,date,histogram,group,config,final,string,field,final,date,histogram,interval,interval,final,nullable,date,histogram,interval,delay,final,nullable,string,time,zone,if,field,null,field,is,empty,throw,new,illegal,argument,exception,field,must,be,a,non,null,non,empty,string,if,interval,null,throw,new,illegal,argument,exception,interval,must,be,non,null,this,interval,interval,this,field,field,this,delay,delay,this,time,zone,time,zone,null,time,zone,is,empty,false,time,zone,create,rounding,this,interval,to,string,this,time,zone,if,delay,null,time,value,parse,time,value,this,delay,to,string,delay
DateHistogramGroupConfig -> public DateHistogramGroupConfig(final String field,                                     final DateHistogramInterval interval,                                     final @Nullable DateHistogramInterval delay,                                     final @Nullable String timeZone);1535383145;Create a new {@link DateHistogramGroupConfig} using the given configuration parameters._<p>_The {@code field} and {@code interval} are required to compute the date histogram for the rolled up documents._The {@code delay} is optional and can be set to {@code null}. It defines how long to wait before rolling up new documents._The {@code timeZone} is optional and can be set to {@code null}. When configured, the time zone value  is resolved using_({@link DateTimeZone#forID(String)} and must match a time zone identifier provided by the Joda Time library._</p>_@param field the name of the date field to use for the date histogram (required)_@param interval the interval to use for the date histogram (required)_@param delay the time delay (optional)_@param timeZone the id of time zone to use to calculate the date histogram (optional). When {@code null}, the UTC timezone is used.;public DateHistogramGroupConfig(final String field,_                                    final DateHistogramInterval interval,_                                    final @Nullable DateHistogramInterval delay,_                                    final @Nullable String timeZone) {_        if (field == null || field.isEmpty()) {_            throw new IllegalArgumentException("Field must be a non-null, non-empty string")__        }_        if (interval == null) {_            throw new IllegalArgumentException("Interval must be non-null")__        }__        this.interval = interval__        this.field = field__        this.delay = delay__        this.timeZone = (timeZone != null && timeZone.isEmpty() == false) ? timeZone : DEFAULT_TIMEZONE___        _        createRounding(this.interval.toString(), this.timeZone)__        if (delay != null) {_            _            TimeValue.parseTimeValue(this.delay.toString(), DELAY)__        }_    };create,a,new,link,date,histogram,group,config,using,the,given,configuration,parameters,p,the,code,field,and,code,interval,are,required,to,compute,the,date,histogram,for,the,rolled,up,documents,the,code,delay,is,optional,and,can,be,set,to,code,null,it,defines,how,long,to,wait,before,rolling,up,new,documents,the,code,time,zone,is,optional,and,can,be,set,to,code,null,when,configured,the,time,zone,value,is,resolved,using,link,date,time,zone,for,id,string,and,must,match,a,time,zone,identifier,provided,by,the,joda,time,library,p,param,field,the,name,of,the,date,field,to,use,for,the,date,histogram,required,param,interval,the,interval,to,use,for,the,date,histogram,required,param,delay,the,time,delay,optional,param,time,zone,the,id,of,time,zone,to,use,to,calculate,the,date,histogram,optional,when,code,null,the,utc,timezone,is,used;public,date,histogram,group,config,final,string,field,final,date,histogram,interval,interval,final,nullable,date,histogram,interval,delay,final,nullable,string,time,zone,if,field,null,field,is,empty,throw,new,illegal,argument,exception,field,must,be,a,non,null,non,empty,string,if,interval,null,throw,new,illegal,argument,exception,interval,must,be,non,null,this,interval,interval,this,field,field,this,delay,delay,this,time,zone,time,zone,null,time,zone,is,empty,false,time,zone,create,rounding,this,interval,to,string,this,time,zone,if,delay,null,time,value,parse,time,value,this,delay,to,string,delay
DateHistogramGroupConfig -> public DateHistogramGroupConfig(final String field,                                     final DateHistogramInterval interval,                                     final @Nullable DateHistogramInterval delay,                                     final @Nullable String timeZone);1548236405;Create a new {@link DateHistogramGroupConfig} using the given configuration parameters._<p>_The {@code field} and {@code interval} are required to compute the date histogram for the rolled up documents._The {@code delay} is optional and can be set to {@code null}. It defines how long to wait before rolling up new documents._The {@code timeZone} is optional and can be set to {@code null}. When configured, the time zone value  is resolved using_({@link ZoneId#of(String)} and must match a time zone identifier._</p>_@param field the name of the date field to use for the date histogram (required)_@param interval the interval to use for the date histogram (required)_@param delay the time delay (optional)_@param timeZone the id of time zone to use to calculate the date histogram (optional). When {@code null}, the UTC timezone is used.;public DateHistogramGroupConfig(final String field,_                                    final DateHistogramInterval interval,_                                    final @Nullable DateHistogramInterval delay,_                                    final @Nullable String timeZone) {_        if (field == null || field.isEmpty()) {_            throw new IllegalArgumentException("Field must be a non-null, non-empty string")__        }_        if (interval == null) {_            throw new IllegalArgumentException("Interval must be non-null")__        }__        this.interval = interval__        this.field = field__        this.delay = delay__        this.timeZone = (timeZone != null && timeZone.isEmpty() == false) ? timeZone : DEFAULT_TIMEZONE___        _        createRounding(this.interval.toString(), this.timeZone)__        if (delay != null) {_            _            TimeValue.parseTimeValue(this.delay.toString(), DELAY)__        }_    };create,a,new,link,date,histogram,group,config,using,the,given,configuration,parameters,p,the,code,field,and,code,interval,are,required,to,compute,the,date,histogram,for,the,rolled,up,documents,the,code,delay,is,optional,and,can,be,set,to,code,null,it,defines,how,long,to,wait,before,rolling,up,new,documents,the,code,time,zone,is,optional,and,can,be,set,to,code,null,when,configured,the,time,zone,value,is,resolved,using,link,zone,id,of,string,and,must,match,a,time,zone,identifier,p,param,field,the,name,of,the,date,field,to,use,for,the,date,histogram,required,param,interval,the,interval,to,use,for,the,date,histogram,required,param,delay,the,time,delay,optional,param,time,zone,the,id,of,time,zone,to,use,to,calculate,the,date,histogram,optional,when,code,null,the,utc,timezone,is,used;public,date,histogram,group,config,final,string,field,final,date,histogram,interval,interval,final,nullable,date,histogram,interval,delay,final,nullable,string,time,zone,if,field,null,field,is,empty,throw,new,illegal,argument,exception,field,must,be,a,non,null,non,empty,string,if,interval,null,throw,new,illegal,argument,exception,interval,must,be,non,null,this,interval,interval,this,field,field,this,delay,delay,this,time,zone,time,zone,null,time,zone,is,empty,false,time,zone,create,rounding,this,interval,to,string,this,time,zone,if,delay,null,time,value,parse,time,value,this,delay,to,string,delay
DateHistogramGroupConfig -> public DateHistogramInterval getInterval();1533319589;Get the date interval;public DateHistogramInterval getInterval() {_        return interval__    };get,the,date,interval;public,date,histogram,interval,get,interval,return,interval
DateHistogramGroupConfig -> public DateHistogramInterval getInterval();1533641732;Get the date interval;public DateHistogramInterval getInterval() {_        return interval__    };get,the,date,interval;public,date,histogram,interval,get,interval,return,interval
DateHistogramGroupConfig -> public DateHistogramInterval getInterval();1535139672;Get the date interval;public DateHistogramInterval getInterval() {_        return interval__    };get,the,date,interval;public,date,histogram,interval,get,interval,return,interval
DateHistogramGroupConfig -> public DateHistogramInterval getInterval();1535383145;Get the date interval;public DateHistogramInterval getInterval() {_        return interval__    };get,the,date,interval;public,date,histogram,interval,get,interval,return,interval
DateHistogramGroupConfig -> public DateHistogramInterval getInterval();1548236405;Get the date interval;public DateHistogramInterval getInterval() {_        return interval__    };get,the,date,interval;public,date,histogram,interval,get,interval,return,interval
