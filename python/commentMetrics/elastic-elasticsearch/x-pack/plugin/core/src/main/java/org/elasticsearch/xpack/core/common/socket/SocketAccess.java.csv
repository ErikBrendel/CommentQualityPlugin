commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;8;;public static <R> R doPrivileged(CheckedSupplier<R, IOException> supplier) throws IOException {     SpecialPermission.check().     try {         return AccessController.doPrivileged((PrivilegedExceptionAction<R>) supplier::get).     } catch (PrivilegedActionException e) {         throw (IOException) e.getCause().     } }
false;public,static;1;11;;public static void doPrivileged(CheckedRunnable<IOException> action) throws IOException {     SpecialPermission.check().     try {         AccessController.doPrivileged((PrivilegedExceptionAction<Void>) () -> {             action.run().             return null.         }).     } catch (PrivilegedActionException e) {         throw (IOException) e.getCause().     } }
