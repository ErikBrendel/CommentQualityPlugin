# id;timestamp;commentText;codeText;commentWords;codeWords
ElasticsearchMappings -> private static void addAnomalyRecordFieldsToMapping(XContentBuilder builder) throws IOException;1524684173;AnomalyRecord fields to be added under the 'properties' section of the mapping_@param builder Add properties to this builder_@throws IOException On write error;private static void addAnomalyRecordFieldsToMapping(XContentBuilder builder) throws IOException {_        builder.startObject(Detector.DETECTOR_INDEX.getPreferredName())_            .field(TYPE, INTEGER)_        .endObject()_        .startObject(AnomalyRecord.ACTUAL.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.TYPICAL.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.PROBABILITY.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.FUNCTION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.FUNCTION_DESCRIPTION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.BY_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.BY_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.PARTITION_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.PARTITION_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.OVER_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.OVER_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.RECORD_SCORE.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.INITIAL_RECORD_SCORE.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.CAUSES.getPreferredName())_            .field(TYPE, NESTED)_            .startObject(PROPERTIES)_                .startObject(AnomalyCause.ACTUAL.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.TYPICAL.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.PROBABILITY.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.FUNCTION.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.FUNCTION_DESCRIPTION.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.BY_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.BY_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.CORRELATED_BY_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.PARTITION_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.PARTITION_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.OVER_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.OVER_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_            .endObject()_        .endObject()_        .startObject(AnomalyRecord.INFLUENCERS.getPreferredName())_            _            .field(TYPE, NESTED)_            .startObject(PROPERTIES)_                .startObject(Influence.INFLUENCER_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(Influence.INFLUENCER_FIELD_VALUES.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_            .endObject()_        .endObject()__    };anomaly,record,fields,to,be,added,under,the,properties,section,of,the,mapping,param,builder,add,properties,to,this,builder,throws,ioexception,on,write,error;private,static,void,add,anomaly,record,fields,to,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,detector,get,preferred,name,field,type,integer,end,object,start,object,anomaly,record,actual,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,typical,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,probability,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,function,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,causes,get,preferred,name,field,type,nested,start,object,properties,start,object,anomaly,cause,actual,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,typical,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,probability,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,function,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,end,object,end,object,start,object,anomaly,record,influencers,get,preferred,name,field,type,nested,start,object,properties,start,object,influence,get,preferred,name,field,type,keyword,end,object,start,object,influence,get,preferred,name,field,type,keyword,field,end,object,end,object,end,object
ElasticsearchMappings -> private static void addAnomalyRecordFieldsToMapping(XContentBuilder builder) throws IOException;1534338685;AnomalyRecord fields to be added under the 'properties' section of the mapping_@param builder Add properties to this builder_@throws IOException On write error;private static void addAnomalyRecordFieldsToMapping(XContentBuilder builder) throws IOException {_        builder.startObject(Detector.DETECTOR_INDEX.getPreferredName())_            .field(TYPE, INTEGER)_        .endObject()_        .startObject(AnomalyRecord.ACTUAL.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.TYPICAL.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.PROBABILITY.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.FUNCTION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.FUNCTION_DESCRIPTION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.BY_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.BY_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.PARTITION_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.PARTITION_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.OVER_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.OVER_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.RECORD_SCORE.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.INITIAL_RECORD_SCORE.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.CAUSES.getPreferredName())_            .field(TYPE, NESTED)_            .startObject(PROPERTIES)_                .startObject(AnomalyCause.ACTUAL.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.TYPICAL.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.PROBABILITY.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.FUNCTION.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.FUNCTION_DESCRIPTION.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.BY_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.BY_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.CORRELATED_BY_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.PARTITION_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.PARTITION_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.OVER_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.OVER_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_            .endObject()_        .endObject()_        .startObject(AnomalyRecord.INFLUENCERS.getPreferredName())_            _            .field(TYPE, NESTED)_            .startObject(PROPERTIES)_                .startObject(Influence.INFLUENCER_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(Influence.INFLUENCER_FIELD_VALUES.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_            .endObject()_        .endObject()__    };anomaly,record,fields,to,be,added,under,the,properties,section,of,the,mapping,param,builder,add,properties,to,this,builder,throws,ioexception,on,write,error;private,static,void,add,anomaly,record,fields,to,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,detector,get,preferred,name,field,type,integer,end,object,start,object,anomaly,record,actual,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,typical,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,probability,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,function,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,causes,get,preferred,name,field,type,nested,start,object,properties,start,object,anomaly,cause,actual,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,typical,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,probability,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,function,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,end,object,end,object,start,object,anomaly,record,influencers,get,preferred,name,field,type,nested,start,object,properties,start,object,influence,get,preferred,name,field,type,keyword,end,object,start,object,influence,get,preferred,name,field,type,keyword,field,end,object,end,object,end,object
ElasticsearchMappings -> private static void addAnomalyRecordFieldsToMapping(XContentBuilder builder) throws IOException;1539615817;AnomalyRecord fields to be added under the 'properties' section of the mapping_@param builder Add properties to this builder_@throws IOException On write error;private static void addAnomalyRecordFieldsToMapping(XContentBuilder builder) throws IOException {_        builder.startObject(Detector.DETECTOR_INDEX.getPreferredName())_            .field(TYPE, INTEGER)_        .endObject()_        .startObject(AnomalyRecord.ACTUAL.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.TYPICAL.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.PROBABILITY.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.MULTI_BUCKET_IMPACT.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.FUNCTION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.FUNCTION_DESCRIPTION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.BY_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.BY_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.PARTITION_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.PARTITION_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.OVER_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.OVER_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.RECORD_SCORE.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.INITIAL_RECORD_SCORE.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.CAUSES.getPreferredName())_            .field(TYPE, NESTED)_            .startObject(PROPERTIES)_                .startObject(AnomalyCause.ACTUAL.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.TYPICAL.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.PROBABILITY.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.FUNCTION.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.FUNCTION_DESCRIPTION.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.BY_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.BY_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.CORRELATED_BY_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.PARTITION_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.PARTITION_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.OVER_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.OVER_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_            .endObject()_        .endObject()_        .startObject(AnomalyRecord.INFLUENCERS.getPreferredName())_            _            .field(TYPE, NESTED)_            .startObject(PROPERTIES)_                .startObject(Influence.INFLUENCER_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(Influence.INFLUENCER_FIELD_VALUES.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_            .endObject()_        .endObject()__    };anomaly,record,fields,to,be,added,under,the,properties,section,of,the,mapping,param,builder,add,properties,to,this,builder,throws,ioexception,on,write,error;private,static,void,add,anomaly,record,fields,to,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,detector,get,preferred,name,field,type,integer,end,object,start,object,anomaly,record,actual,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,typical,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,probability,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,function,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,causes,get,preferred,name,field,type,nested,start,object,properties,start,object,anomaly,cause,actual,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,typical,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,probability,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,function,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,end,object,end,object,start,object,anomaly,record,influencers,get,preferred,name,field,type,nested,start,object,properties,start,object,influence,get,preferred,name,field,type,keyword,end,object,start,object,influence,get,preferred,name,field,type,keyword,field,end,object,end,object,end,object
ElasticsearchMappings -> private static void addAnomalyRecordFieldsToMapping(XContentBuilder builder) throws IOException;1545155131;AnomalyRecord fields to be added under the 'properties' section of the mapping_@param builder Add properties to this builder_@throws IOException On write error;private static void addAnomalyRecordFieldsToMapping(XContentBuilder builder) throws IOException {_        builder.startObject(Detector.DETECTOR_INDEX.getPreferredName())_            .field(TYPE, INTEGER)_        .endObject()_        .startObject(AnomalyRecord.ACTUAL.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.TYPICAL.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.PROBABILITY.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.MULTI_BUCKET_IMPACT.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.FUNCTION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.FUNCTION_DESCRIPTION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.BY_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.BY_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.PARTITION_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.PARTITION_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.OVER_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.OVER_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.RECORD_SCORE.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.INITIAL_RECORD_SCORE.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.CAUSES.getPreferredName())_            .field(TYPE, NESTED)_            .startObject(PROPERTIES)_                .startObject(AnomalyCause.ACTUAL.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.TYPICAL.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.PROBABILITY.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.FUNCTION.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.FUNCTION_DESCRIPTION.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.BY_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.BY_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.CORRELATED_BY_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.PARTITION_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.PARTITION_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.OVER_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.OVER_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_            .endObject()_        .endObject()_        .startObject(AnomalyRecord.INFLUENCERS.getPreferredName())_            _            .field(TYPE, NESTED)_            .startObject(PROPERTIES)_                .startObject(Influence.INFLUENCER_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(Influence.INFLUENCER_FIELD_VALUES.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_            .endObject()_        .endObject()__    };anomaly,record,fields,to,be,added,under,the,properties,section,of,the,mapping,param,builder,add,properties,to,this,builder,throws,ioexception,on,write,error;private,static,void,add,anomaly,record,fields,to,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,detector,get,preferred,name,field,type,integer,end,object,start,object,anomaly,record,actual,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,typical,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,probability,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,function,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,causes,get,preferred,name,field,type,nested,start,object,properties,start,object,anomaly,cause,actual,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,typical,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,probability,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,function,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,end,object,end,object,start,object,anomaly,record,influencers,get,preferred,name,field,type,nested,start,object,properties,start,object,influence,get,preferred,name,field,type,keyword,end,object,start,object,influence,get,preferred,name,field,type,keyword,field,end,object,end,object,end,object
ElasticsearchMappings -> private static void addAnomalyRecordFieldsToMapping(XContentBuilder builder) throws IOException;1546549182;AnomalyRecord fields to be added under the 'properties' section of the mapping_@param builder Add properties to this builder_@throws IOException On write error;private static void addAnomalyRecordFieldsToMapping(XContentBuilder builder) throws IOException {_        builder.startObject(Detector.DETECTOR_INDEX.getPreferredName())_            .field(TYPE, INTEGER)_        .endObject()_        .startObject(AnomalyRecord.ACTUAL.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.TYPICAL.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.PROBABILITY.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.MULTI_BUCKET_IMPACT.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.FUNCTION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.FUNCTION_DESCRIPTION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.BY_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.BY_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.PARTITION_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.PARTITION_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.OVER_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.OVER_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.RECORD_SCORE.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.INITIAL_RECORD_SCORE.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.CAUSES.getPreferredName())_            .field(TYPE, NESTED)_            .startObject(PROPERTIES)_                .startObject(AnomalyCause.ACTUAL.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.TYPICAL.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.PROBABILITY.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.FUNCTION.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.FUNCTION_DESCRIPTION.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.BY_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.BY_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.CORRELATED_BY_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.PARTITION_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.PARTITION_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.OVER_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.OVER_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_            .endObject()_        .endObject()_        .startObject(AnomalyRecord.INFLUENCERS.getPreferredName())_            _            .field(TYPE, NESTED)_            .startObject(PROPERTIES)_                .startObject(Influence.INFLUENCER_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(Influence.INFLUENCER_FIELD_VALUES.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_            .endObject()_        .endObject()__    };anomaly,record,fields,to,be,added,under,the,properties,section,of,the,mapping,param,builder,add,properties,to,this,builder,throws,ioexception,on,write,error;private,static,void,add,anomaly,record,fields,to,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,detector,get,preferred,name,field,type,integer,end,object,start,object,anomaly,record,actual,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,typical,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,probability,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,function,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,causes,get,preferred,name,field,type,nested,start,object,properties,start,object,anomaly,cause,actual,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,typical,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,probability,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,function,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,end,object,end,object,start,object,anomaly,record,influencers,get,preferred,name,field,type,nested,start,object,properties,start,object,influence,get,preferred,name,field,type,keyword,end,object,start,object,influence,get,preferred,name,field,type,keyword,field,end,object,end,object,end,object
ElasticsearchMappings -> private static void addAnomalyRecordFieldsToMapping(XContentBuilder builder) throws IOException;1546587824;AnomalyRecord fields to be added under the 'properties' section of the mapping_@param builder Add properties to this builder_@throws IOException On write error;private static void addAnomalyRecordFieldsToMapping(XContentBuilder builder) throws IOException {_        builder.startObject(Detector.DETECTOR_INDEX.getPreferredName())_            .field(TYPE, INTEGER)_        .endObject()_        .startObject(AnomalyRecord.ACTUAL.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.TYPICAL.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.PROBABILITY.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.MULTI_BUCKET_IMPACT.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.FUNCTION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.FUNCTION_DESCRIPTION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.BY_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.BY_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.PARTITION_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.PARTITION_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.OVER_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.OVER_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.RECORD_SCORE.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.INITIAL_RECORD_SCORE.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.CAUSES.getPreferredName())_            .field(TYPE, NESTED)_            .startObject(PROPERTIES)_                .startObject(AnomalyCause.ACTUAL.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.TYPICAL.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.PROBABILITY.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.FUNCTION.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.FUNCTION_DESCRIPTION.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.BY_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.BY_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.CORRELATED_BY_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.PARTITION_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.PARTITION_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.OVER_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.OVER_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_            .endObject()_        .endObject()_        .startObject(AnomalyRecord.INFLUENCERS.getPreferredName())_            _            .field(TYPE, NESTED)_            .startObject(PROPERTIES)_                .startObject(Influence.INFLUENCER_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(Influence.INFLUENCER_FIELD_VALUES.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_            .endObject()_        .endObject()__    };anomaly,record,fields,to,be,added,under,the,properties,section,of,the,mapping,param,builder,add,properties,to,this,builder,throws,ioexception,on,write,error;private,static,void,add,anomaly,record,fields,to,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,detector,get,preferred,name,field,type,integer,end,object,start,object,anomaly,record,actual,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,typical,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,probability,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,function,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,causes,get,preferred,name,field,type,nested,start,object,properties,start,object,anomaly,cause,actual,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,typical,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,probability,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,function,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,end,object,end,object,start,object,anomaly,record,influencers,get,preferred,name,field,type,nested,start,object,properties,start,object,influence,get,preferred,name,field,type,keyword,end,object,start,object,influence,get,preferred,name,field,type,keyword,field,end,object,end,object,end,object
ElasticsearchMappings -> private static void addAnomalyRecordFieldsToMapping(XContentBuilder builder) throws IOException;1548236257;AnomalyRecord fields to be added under the 'properties' section of the mapping_@param builder Add properties to this builder_@throws IOException On write error;private static void addAnomalyRecordFieldsToMapping(XContentBuilder builder) throws IOException {_        builder.startObject(Detector.DETECTOR_INDEX.getPreferredName())_            .field(TYPE, INTEGER)_        .endObject()_        .startObject(AnomalyRecord.ACTUAL.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.TYPICAL.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.PROBABILITY.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.MULTI_BUCKET_IMPACT.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.FUNCTION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.FUNCTION_DESCRIPTION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.BY_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.BY_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.PARTITION_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.PARTITION_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.OVER_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.OVER_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.RECORD_SCORE.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.INITIAL_RECORD_SCORE.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.CAUSES.getPreferredName())_            .field(TYPE, NESTED)_            .startObject(PROPERTIES)_                .startObject(AnomalyCause.ACTUAL.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.TYPICAL.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.PROBABILITY.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.FUNCTION.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.FUNCTION_DESCRIPTION.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.BY_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.BY_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.CORRELATED_BY_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.PARTITION_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.PARTITION_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.OVER_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.OVER_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_            .endObject()_        .endObject()_        .startObject(AnomalyRecord.INFLUENCERS.getPreferredName())_            _            .field(TYPE, NESTED)_            .startObject(PROPERTIES)_                .startObject(Influence.INFLUENCER_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(Influence.INFLUENCER_FIELD_VALUES.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_            .endObject()_        .endObject()__    };anomaly,record,fields,to,be,added,under,the,properties,section,of,the,mapping,param,builder,add,properties,to,this,builder,throws,ioexception,on,write,error;private,static,void,add,anomaly,record,fields,to,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,detector,get,preferred,name,field,type,integer,end,object,start,object,anomaly,record,actual,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,typical,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,probability,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,function,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,causes,get,preferred,name,field,type,nested,start,object,properties,start,object,anomaly,cause,actual,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,typical,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,probability,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,function,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,end,object,end,object,start,object,anomaly,record,influencers,get,preferred,name,field,type,nested,start,object,properties,start,object,influence,get,preferred,name,field,type,keyword,end,object,start,object,influence,get,preferred,name,field,type,keyword,field,end,object,end,object,end,object
ElasticsearchMappings -> private static void addAnomalyRecordFieldsToMapping(XContentBuilder builder) throws IOException;1548776495;AnomalyRecord fields to be added under the 'properties' section of the mapping_@param builder Add properties to this builder_@throws IOException On write error;private static void addAnomalyRecordFieldsToMapping(XContentBuilder builder) throws IOException {_        builder.startObject(Detector.DETECTOR_INDEX.getPreferredName())_            .field(TYPE, INTEGER)_        .endObject()_        .startObject(AnomalyRecord.ACTUAL.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.TYPICAL.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.PROBABILITY.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.MULTI_BUCKET_IMPACT.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.FUNCTION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.FUNCTION_DESCRIPTION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.BY_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.BY_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.PARTITION_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.PARTITION_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.OVER_FIELD_NAME.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(AnomalyRecord.OVER_FIELD_VALUE.getPreferredName())_            .field(TYPE, KEYWORD)_            .field(COPY_TO, ALL_FIELD_VALUES)_        .endObject()_        .startObject(AnomalyRecord.RECORD_SCORE.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.INITIAL_RECORD_SCORE.getPreferredName())_            .field(TYPE, DOUBLE)_        .endObject()_        .startObject(AnomalyRecord.CAUSES.getPreferredName())_            .field(TYPE, NESTED)_            .startObject(PROPERTIES)_                .startObject(AnomalyCause.ACTUAL.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.TYPICAL.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.PROBABILITY.getPreferredName())_                    .field(TYPE, DOUBLE)_                .endObject()_                .startObject(AnomalyCause.FUNCTION.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.FUNCTION_DESCRIPTION.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.BY_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.BY_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.CORRELATED_BY_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.PARTITION_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.PARTITION_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_                .startObject(AnomalyCause.OVER_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(AnomalyCause.OVER_FIELD_VALUE.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_            .endObject()_        .endObject()_        .startObject(AnomalyRecord.INFLUENCERS.getPreferredName())_            _            .field(TYPE, NESTED)_            .startObject(PROPERTIES)_                .startObject(Influence.INFLUENCER_FIELD_NAME.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(Influence.INFLUENCER_FIELD_VALUES.getPreferredName())_                    .field(TYPE, KEYWORD)_                    .field(COPY_TO, ALL_FIELD_VALUES)_                .endObject()_            .endObject()_        .endObject()__    };anomaly,record,fields,to,be,added,under,the,properties,section,of,the,mapping,param,builder,add,properties,to,this,builder,throws,ioexception,on,write,error;private,static,void,add,anomaly,record,fields,to,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,detector,get,preferred,name,field,type,integer,end,object,start,object,anomaly,record,actual,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,typical,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,probability,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,function,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,causes,get,preferred,name,field,type,nested,start,object,properties,start,object,anomaly,cause,actual,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,typical,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,probability,get,preferred,name,field,type,double,end,object,start,object,anomaly,cause,function,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,cause,get,preferred,name,field,type,keyword,field,end,object,end,object,end,object,start,object,anomaly,record,influencers,get,preferred,name,field,type,nested,start,object,properties,start,object,influence,get,preferred,name,field,type,keyword,end,object,start,object,influence,get,preferred,name,field,type,keyword,field,end,object,end,object,end,object
ElasticsearchMappings -> private static void addCategoryDefinitionMapping(XContentBuilder builder) throws IOException;1524684173;Create the Elasticsearch mapping for {@linkplain CategoryDefinition}._The '_all' field is disabled as the document isn't meant to be searched.__@throws IOException On builder error;private static void addCategoryDefinitionMapping(XContentBuilder builder) throws IOException {_        builder.startObject(CategoryDefinition.CATEGORY_ID.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(CategoryDefinition.TERMS.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()_        .startObject(CategoryDefinition.REGEX.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(CategoryDefinition.MAX_MATCHING_LENGTH.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(CategoryDefinition.EXAMPLES.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()__    };create,the,elasticsearch,mapping,for,linkplain,category,definition,the,field,is,disabled,as,the,document,isn,t,meant,to,be,searched,throws,ioexception,on,builder,error;private,static,void,add,category,definition,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,category,definition,get,preferred,name,field,type,long,end,object,start,object,category,definition,terms,get,preferred,name,field,type,text,end,object,start,object,category,definition,regex,get,preferred,name,field,type,keyword,end,object,start,object,category,definition,get,preferred,name,field,type,long,end,object,start,object,category,definition,examples,get,preferred,name,field,type,text,end,object
ElasticsearchMappings -> private static void addCategoryDefinitionMapping(XContentBuilder builder) throws IOException;1534338685;Create the Elasticsearch mapping for {@linkplain CategoryDefinition}._The '_all' field is disabled as the document isn't meant to be searched.__@throws IOException On builder error;private static void addCategoryDefinitionMapping(XContentBuilder builder) throws IOException {_        builder.startObject(CategoryDefinition.CATEGORY_ID.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(CategoryDefinition.TERMS.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()_        .startObject(CategoryDefinition.REGEX.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(CategoryDefinition.MAX_MATCHING_LENGTH.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(CategoryDefinition.EXAMPLES.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()__    };create,the,elasticsearch,mapping,for,linkplain,category,definition,the,field,is,disabled,as,the,document,isn,t,meant,to,be,searched,throws,ioexception,on,builder,error;private,static,void,add,category,definition,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,category,definition,get,preferred,name,field,type,long,end,object,start,object,category,definition,terms,get,preferred,name,field,type,text,end,object,start,object,category,definition,regex,get,preferred,name,field,type,keyword,end,object,start,object,category,definition,get,preferred,name,field,type,long,end,object,start,object,category,definition,examples,get,preferred,name,field,type,text,end,object
ElasticsearchMappings -> private static void addCategoryDefinitionMapping(XContentBuilder builder) throws IOException;1539615817;Create the Elasticsearch mapping for {@linkplain CategoryDefinition}._The '_all' field is disabled as the document isn't meant to be searched.__@throws IOException On builder error;private static void addCategoryDefinitionMapping(XContentBuilder builder) throws IOException {_        builder.startObject(CategoryDefinition.CATEGORY_ID.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(CategoryDefinition.TERMS.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()_        .startObject(CategoryDefinition.REGEX.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(CategoryDefinition.MAX_MATCHING_LENGTH.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(CategoryDefinition.EXAMPLES.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()__    };create,the,elasticsearch,mapping,for,linkplain,category,definition,the,field,is,disabled,as,the,document,isn,t,meant,to,be,searched,throws,ioexception,on,builder,error;private,static,void,add,category,definition,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,category,definition,get,preferred,name,field,type,long,end,object,start,object,category,definition,terms,get,preferred,name,field,type,text,end,object,start,object,category,definition,regex,get,preferred,name,field,type,keyword,end,object,start,object,category,definition,get,preferred,name,field,type,long,end,object,start,object,category,definition,examples,get,preferred,name,field,type,text,end,object
ElasticsearchMappings -> private static void addCategoryDefinitionMapping(XContentBuilder builder) throws IOException;1545155131;Create the Elasticsearch mapping for {@linkplain CategoryDefinition}._The '_all' field is disabled as the document isn't meant to be searched.__@throws IOException On builder error;private static void addCategoryDefinitionMapping(XContentBuilder builder) throws IOException {_        builder.startObject(CategoryDefinition.CATEGORY_ID.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(CategoryDefinition.TERMS.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()_        .startObject(CategoryDefinition.REGEX.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(CategoryDefinition.MAX_MATCHING_LENGTH.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(CategoryDefinition.EXAMPLES.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()__    };create,the,elasticsearch,mapping,for,linkplain,category,definition,the,field,is,disabled,as,the,document,isn,t,meant,to,be,searched,throws,ioexception,on,builder,error;private,static,void,add,category,definition,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,category,definition,get,preferred,name,field,type,long,end,object,start,object,category,definition,terms,get,preferred,name,field,type,text,end,object,start,object,category,definition,regex,get,preferred,name,field,type,keyword,end,object,start,object,category,definition,get,preferred,name,field,type,long,end,object,start,object,category,definition,examples,get,preferred,name,field,type,text,end,object
ElasticsearchMappings -> private static void addCategoryDefinitionMapping(XContentBuilder builder) throws IOException;1546549182;Create the Elasticsearch mapping for {@linkplain CategoryDefinition}._The '_all' field is disabled as the document isn't meant to be searched.__@throws IOException On builder error;private static void addCategoryDefinitionMapping(XContentBuilder builder) throws IOException {_        builder.startObject(CategoryDefinition.CATEGORY_ID.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(CategoryDefinition.TERMS.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()_        .startObject(CategoryDefinition.REGEX.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(CategoryDefinition.MAX_MATCHING_LENGTH.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(CategoryDefinition.EXAMPLES.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()__    };create,the,elasticsearch,mapping,for,linkplain,category,definition,the,field,is,disabled,as,the,document,isn,t,meant,to,be,searched,throws,ioexception,on,builder,error;private,static,void,add,category,definition,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,category,definition,get,preferred,name,field,type,long,end,object,start,object,category,definition,terms,get,preferred,name,field,type,text,end,object,start,object,category,definition,regex,get,preferred,name,field,type,keyword,end,object,start,object,category,definition,get,preferred,name,field,type,long,end,object,start,object,category,definition,examples,get,preferred,name,field,type,text,end,object
ElasticsearchMappings -> private static void addCategoryDefinitionMapping(XContentBuilder builder) throws IOException;1546587824;Create the Elasticsearch mapping for {@linkplain CategoryDefinition}._The '_all' field is disabled as the document isn't meant to be searched.__@throws IOException On builder error;private static void addCategoryDefinitionMapping(XContentBuilder builder) throws IOException {_        builder.startObject(CategoryDefinition.CATEGORY_ID.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(CategoryDefinition.TERMS.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()_        .startObject(CategoryDefinition.REGEX.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(CategoryDefinition.MAX_MATCHING_LENGTH.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(CategoryDefinition.EXAMPLES.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()__    };create,the,elasticsearch,mapping,for,linkplain,category,definition,the,field,is,disabled,as,the,document,isn,t,meant,to,be,searched,throws,ioexception,on,builder,error;private,static,void,add,category,definition,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,category,definition,get,preferred,name,field,type,long,end,object,start,object,category,definition,terms,get,preferred,name,field,type,text,end,object,start,object,category,definition,regex,get,preferred,name,field,type,keyword,end,object,start,object,category,definition,get,preferred,name,field,type,long,end,object,start,object,category,definition,examples,get,preferred,name,field,type,text,end,object
ElasticsearchMappings -> private static void addCategoryDefinitionMapping(XContentBuilder builder) throws IOException;1548236257;Create the Elasticsearch mapping for {@linkplain CategoryDefinition}._The '_all' field is disabled as the document isn't meant to be searched.__@throws IOException On builder error;private static void addCategoryDefinitionMapping(XContentBuilder builder) throws IOException {_        builder.startObject(CategoryDefinition.CATEGORY_ID.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(CategoryDefinition.TERMS.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()_        .startObject(CategoryDefinition.REGEX.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(CategoryDefinition.MAX_MATCHING_LENGTH.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(CategoryDefinition.EXAMPLES.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()__    };create,the,elasticsearch,mapping,for,linkplain,category,definition,the,field,is,disabled,as,the,document,isn,t,meant,to,be,searched,throws,ioexception,on,builder,error;private,static,void,add,category,definition,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,category,definition,get,preferred,name,field,type,long,end,object,start,object,category,definition,terms,get,preferred,name,field,type,text,end,object,start,object,category,definition,regex,get,preferred,name,field,type,keyword,end,object,start,object,category,definition,get,preferred,name,field,type,long,end,object,start,object,category,definition,examples,get,preferred,name,field,type,text,end,object
ElasticsearchMappings -> private static void addCategoryDefinitionMapping(XContentBuilder builder) throws IOException;1548776495;Create the Elasticsearch mapping for {@linkplain CategoryDefinition}._The '_all' field is disabled as the document isn't meant to be searched.__@throws IOException On builder error;private static void addCategoryDefinitionMapping(XContentBuilder builder) throws IOException {_        builder.startObject(CategoryDefinition.CATEGORY_ID.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(CategoryDefinition.TERMS.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()_        .startObject(CategoryDefinition.REGEX.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(CategoryDefinition.MAX_MATCHING_LENGTH.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(CategoryDefinition.EXAMPLES.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()__    };create,the,elasticsearch,mapping,for,linkplain,category,definition,the,field,is,disabled,as,the,document,isn,t,meant,to,be,searched,throws,ioexception,on,builder,error;private,static,void,add,category,definition,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,category,definition,get,preferred,name,field,type,long,end,object,start,object,category,definition,terms,get,preferred,name,field,type,text,end,object,start,object,category,definition,regex,get,preferred,name,field,type,keyword,end,object,start,object,category,definition,get,preferred,name,field,type,long,end,object,start,object,category,definition,examples,get,preferred,name,field,type,text,end,object
ElasticsearchMappings -> public static void addMetaInformation(XContentBuilder builder) throws IOException;1524684173;Inserts "_meta" containing useful information like the version into the mapping_template.__@param builder The builder for the mappings_@throws IOException On write error;public static void addMetaInformation(XContentBuilder builder) throws IOException {_        builder.startObject("_meta")_                    .field("version", Version.CURRENT)_               .endObject()__    };inserts,containing,useful,information,like,the,version,into,the,mapping,template,param,builder,the,builder,for,the,mappings,throws,ioexception,on,write,error;public,static,void,add,meta,information,xcontent,builder,builder,throws,ioexception,builder,start,object,field,version,version,current,end,object
ElasticsearchMappings -> public static void addMetaInformation(XContentBuilder builder) throws IOException;1534338685;Inserts "_meta" containing useful information like the version into the mapping_template.__@param builder The builder for the mappings_@throws IOException On write error;public static void addMetaInformation(XContentBuilder builder) throws IOException {_        builder.startObject("_meta")_                    .field("version", Version.CURRENT)_               .endObject()__    };inserts,containing,useful,information,like,the,version,into,the,mapping,template,param,builder,the,builder,for,the,mappings,throws,ioexception,on,write,error;public,static,void,add,meta,information,xcontent,builder,builder,throws,ioexception,builder,start,object,field,version,version,current,end,object
ElasticsearchMappings -> public static void addMetaInformation(XContentBuilder builder) throws IOException;1539615817;Inserts "_meta" containing useful information like the version into the mapping_template.__@param builder The builder for the mappings_@throws IOException On write error;public static void addMetaInformation(XContentBuilder builder) throws IOException {_        builder.startObject("_meta")_                    .field("version", Version.CURRENT)_               .endObject()__    };inserts,containing,useful,information,like,the,version,into,the,mapping,template,param,builder,the,builder,for,the,mappings,throws,ioexception,on,write,error;public,static,void,add,meta,information,xcontent,builder,builder,throws,ioexception,builder,start,object,field,version,version,current,end,object
ElasticsearchMappings -> public static void addMetaInformation(XContentBuilder builder) throws IOException;1545155131;Inserts "_meta" containing useful information like the version into the mapping_template.__@param builder The builder for the mappings_@throws IOException On write error;public static void addMetaInformation(XContentBuilder builder) throws IOException {_        builder.startObject("_meta")_                    .field("version", Version.CURRENT)_               .endObject()__    };inserts,containing,useful,information,like,the,version,into,the,mapping,template,param,builder,the,builder,for,the,mappings,throws,ioexception,on,write,error;public,static,void,add,meta,information,xcontent,builder,builder,throws,ioexception,builder,start,object,field,version,version,current,end,object
ElasticsearchMappings -> public static void addMetaInformation(XContentBuilder builder) throws IOException;1546549182;Inserts "_meta" containing useful information like the version into the mapping_template.__@param builder The builder for the mappings_@throws IOException On write error;public static void addMetaInformation(XContentBuilder builder) throws IOException {_        builder.startObject("_meta")_                    .field("version", Version.CURRENT)_               .endObject()__    };inserts,containing,useful,information,like,the,version,into,the,mapping,template,param,builder,the,builder,for,the,mappings,throws,ioexception,on,write,error;public,static,void,add,meta,information,xcontent,builder,builder,throws,ioexception,builder,start,object,field,version,version,current,end,object
ElasticsearchMappings -> public static void addMetaInformation(XContentBuilder builder) throws IOException;1546587824;Inserts "_meta" containing useful information like the version into the mapping_template.__@param builder The builder for the mappings_@throws IOException On write error;public static void addMetaInformation(XContentBuilder builder) throws IOException {_        builder.startObject("_meta")_                    .field("version", Version.CURRENT)_               .endObject()__    };inserts,containing,useful,information,like,the,version,into,the,mapping,template,param,builder,the,builder,for,the,mappings,throws,ioexception,on,write,error;public,static,void,add,meta,information,xcontent,builder,builder,throws,ioexception,builder,start,object,field,version,version,current,end,object
ElasticsearchMappings -> public static void addMetaInformation(XContentBuilder builder) throws IOException;1548236257;Inserts "_meta" containing useful information like the version into the mapping_template.__@param builder The builder for the mappings_@throws IOException On write error;public static void addMetaInformation(XContentBuilder builder) throws IOException {_        builder.startObject("_meta")_                    .field("version", Version.CURRENT)_               .endObject()__    };inserts,containing,useful,information,like,the,version,into,the,mapping,template,param,builder,the,builder,for,the,mappings,throws,ioexception,on,write,error;public,static,void,add,meta,information,xcontent,builder,builder,throws,ioexception,builder,start,object,field,version,version,current,end,object
ElasticsearchMappings -> public static void addMetaInformation(XContentBuilder builder) throws IOException;1548776495;Inserts "_meta" containing useful information like the version into the mapping_template.__@param builder The builder for the mappings_@throws IOException On write error;public static void addMetaInformation(XContentBuilder builder) throws IOException {_        builder.startObject("_meta")_                    .field("version", Version.CURRENT)_               .endObject()__    };inserts,containing,useful,information,like,the,version,into,the,mapping,template,param,builder,the,builder,for,the,mappings,throws,ioexception,on,write,error;public,static,void,add,meta,information,xcontent,builder,builder,throws,ioexception,builder,start,object,field,version,version,current,end,object
ElasticsearchMappings -> private static void addDataCountsMapping(XContentBuilder builder) throws IOException;1524684173;{@link DataCounts} mapping._The type is disabled so {@link DataCounts} aren't searchable and_the '_all' field is disabled__@throws IOException On builder write error;private static void addDataCountsMapping(XContentBuilder builder) throws IOException {_        builder.startObject(DataCounts.PROCESSED_RECORD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.PROCESSED_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_BYTES.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_RECORD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INVALID_DATE_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.MISSING_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.OUT_OF_ORDER_TIME_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.EMPTY_BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.SPARSE_BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.EARLIEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_EMPTY_BUCKET_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_SPARSE_BUCKET_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LAST_DATA_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };link,data,counts,mapping,the,type,is,disabled,so,link,data,counts,aren,t,searchable,and,the,field,is,disabled,throws,ioexception,on,builder,write,error;private,static,void,add,data,counts,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addDataCountsMapping(XContentBuilder builder) throws IOException;1534338685;{@link DataCounts} mapping._The type is disabled so {@link DataCounts} aren't searchable and_the '_all' field is disabled__@throws IOException On builder write error;private static void addDataCountsMapping(XContentBuilder builder) throws IOException {_        builder.startObject(DataCounts.PROCESSED_RECORD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.PROCESSED_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_BYTES.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_RECORD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INVALID_DATE_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.MISSING_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.OUT_OF_ORDER_TIME_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.EMPTY_BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.SPARSE_BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.EARLIEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_EMPTY_BUCKET_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_SPARSE_BUCKET_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LAST_DATA_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };link,data,counts,mapping,the,type,is,disabled,so,link,data,counts,aren,t,searchable,and,the,field,is,disabled,throws,ioexception,on,builder,write,error;private,static,void,add,data,counts,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addDataCountsMapping(XContentBuilder builder) throws IOException;1539615817;{@link DataCounts} mapping._The type is disabled so {@link DataCounts} aren't searchable and_the '_all' field is disabled__@throws IOException On builder write error;private static void addDataCountsMapping(XContentBuilder builder) throws IOException {_        builder.startObject(DataCounts.PROCESSED_RECORD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.PROCESSED_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_BYTES.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_RECORD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INVALID_DATE_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.MISSING_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.OUT_OF_ORDER_TIME_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.EMPTY_BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.SPARSE_BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.EARLIEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_EMPTY_BUCKET_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_SPARSE_BUCKET_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LAST_DATA_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };link,data,counts,mapping,the,type,is,disabled,so,link,data,counts,aren,t,searchable,and,the,field,is,disabled,throws,ioexception,on,builder,write,error;private,static,void,add,data,counts,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addDataCountsMapping(XContentBuilder builder) throws IOException;1545155131;{@link DataCounts} mapping._The type is disabled so {@link DataCounts} aren't searchable and_the '_all' field is disabled__@throws IOException On builder write error;private static void addDataCountsMapping(XContentBuilder builder) throws IOException {_        builder.startObject(DataCounts.PROCESSED_RECORD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.PROCESSED_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_BYTES.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_RECORD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INVALID_DATE_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.MISSING_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.OUT_OF_ORDER_TIME_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.EMPTY_BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.SPARSE_BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.EARLIEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_EMPTY_BUCKET_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_SPARSE_BUCKET_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LAST_DATA_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };link,data,counts,mapping,the,type,is,disabled,so,link,data,counts,aren,t,searchable,and,the,field,is,disabled,throws,ioexception,on,builder,write,error;private,static,void,add,data,counts,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addDataCountsMapping(XContentBuilder builder) throws IOException;1546549182;{@link DataCounts} mapping._The type is disabled so {@link DataCounts} aren't searchable and_the '_all' field is disabled__@throws IOException On builder write error;private static void addDataCountsMapping(XContentBuilder builder) throws IOException {_        builder.startObject(DataCounts.PROCESSED_RECORD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.PROCESSED_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_BYTES.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_RECORD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INVALID_DATE_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.MISSING_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.OUT_OF_ORDER_TIME_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.EMPTY_BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.SPARSE_BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.EARLIEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_EMPTY_BUCKET_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_SPARSE_BUCKET_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LAST_DATA_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };link,data,counts,mapping,the,type,is,disabled,so,link,data,counts,aren,t,searchable,and,the,field,is,disabled,throws,ioexception,on,builder,write,error;private,static,void,add,data,counts,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addDataCountsMapping(XContentBuilder builder) throws IOException;1546587824;{@link DataCounts} mapping._The type is disabled so {@link DataCounts} aren't searchable and_the '_all' field is disabled__@throws IOException On builder write error;private static void addDataCountsMapping(XContentBuilder builder) throws IOException {_        builder.startObject(DataCounts.PROCESSED_RECORD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.PROCESSED_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_BYTES.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_RECORD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INVALID_DATE_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.MISSING_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.OUT_OF_ORDER_TIME_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.EMPTY_BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.SPARSE_BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.EARLIEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_EMPTY_BUCKET_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_SPARSE_BUCKET_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LAST_DATA_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };link,data,counts,mapping,the,type,is,disabled,so,link,data,counts,aren,t,searchable,and,the,field,is,disabled,throws,ioexception,on,builder,write,error;private,static,void,add,data,counts,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addDataCountsMapping(XContentBuilder builder) throws IOException;1548236257;{@link DataCounts} mapping._The type is disabled so {@link DataCounts} aren't searchable and_the '_all' field is disabled__@throws IOException On builder write error;private static void addDataCountsMapping(XContentBuilder builder) throws IOException {_        builder.startObject(DataCounts.PROCESSED_RECORD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.PROCESSED_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_BYTES.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_RECORD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INVALID_DATE_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.MISSING_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.OUT_OF_ORDER_TIME_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.EMPTY_BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.SPARSE_BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.EARLIEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_EMPTY_BUCKET_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_SPARSE_BUCKET_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LAST_DATA_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };link,data,counts,mapping,the,type,is,disabled,so,link,data,counts,aren,t,searchable,and,the,field,is,disabled,throws,ioexception,on,builder,write,error;private,static,void,add,data,counts,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addDataCountsMapping(XContentBuilder builder) throws IOException;1548776495;{@link DataCounts} mapping._The type is disabled so {@link DataCounts} aren't searchable and_the '_all' field is disabled__@throws IOException On builder write error;private static void addDataCountsMapping(XContentBuilder builder) throws IOException {_        builder.startObject(DataCounts.PROCESSED_RECORD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.PROCESSED_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_BYTES.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_RECORD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INPUT_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.INVALID_DATE_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.MISSING_FIELD_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.OUT_OF_ORDER_TIME_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.EMPTY_BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.SPARSE_BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.BUCKET_COUNT.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(DataCounts.EARLIEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_EMPTY_BUCKET_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LATEST_SPARSE_BUCKET_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(DataCounts.LAST_DATA_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };link,data,counts,mapping,the,type,is,disabled,so,link,data,counts,aren,t,searchable,and,the,field,is,disabled,throws,ioexception,on,builder,write,error;private,static,void,add,data,counts,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,long,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object,start,object,data,counts,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addModelSnapshotMapping(XContentBuilder builder) throws IOException;1524684173;Create the Elasticsearch mapping for {@linkplain ModelSnapshot}._The '_all' field is disabled but the type is searchable;private static void addModelSnapshotMapping(XContentBuilder builder) throws IOException {_        builder.startObject(ModelSnapshot.DESCRIPTION.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()_        .startObject(ModelSnapshotField.SNAPSHOT_ID.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSnapshot.SNAPSHOT_DOC_COUNT.getPreferredName())_            .field(TYPE, INTEGER)_        .endObject()_        .startObject(ModelSnapshot.RETAIN.getPreferredName())_            .field(TYPE, BOOLEAN)_        .endObject()_        .startObject(ModelSizeStats.RESULT_TYPE_FIELD.getPreferredName())_            .startObject(PROPERTIES)_                .startObject(Job.ID.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(Result.RESULT_TYPE.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(ModelSizeStats.TIMESTAMP_FIELD.getPreferredName())_                    .field(TYPE, DATE)_                .endObject()___        addModelSizeStatsFieldsToMapping(builder)___        _        builder.endObject()__        _        builder.endObject()___        builder.startObject(ModelSnapshot.QUANTILES.getPreferredName())_            .field(ENABLED, false)_        .endObject()_        .startObject(ModelSnapshot.LATEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(ModelSnapshot.LATEST_RESULT_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };create,the,elasticsearch,mapping,for,linkplain,model,snapshot,the,field,is,disabled,but,the,type,is,searchable;private,static,void,add,model,snapshot,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,model,snapshot,description,get,preferred,name,field,type,text,end,object,start,object,model,snapshot,field,get,preferred,name,field,type,keyword,end,object,start,object,model,snapshot,get,preferred,name,field,type,integer,end,object,start,object,model,snapshot,retain,get,preferred,name,field,type,boolean,end,object,start,object,model,size,stats,get,preferred,name,start,object,properties,start,object,job,id,get,preferred,name,field,type,keyword,end,object,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,model,size,stats,get,preferred,name,field,type,date,end,object,add,model,size,stats,fields,to,mapping,builder,builder,end,object,builder,end,object,builder,start,object,model,snapshot,quantiles,get,preferred,name,field,enabled,false,end,object,start,object,model,snapshot,get,preferred,name,field,type,date,end,object,start,object,model,snapshot,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addModelSnapshotMapping(XContentBuilder builder) throws IOException;1534338685;Create the Elasticsearch mapping for {@linkplain ModelSnapshot}._The '_all' field is disabled but the type is searchable;private static void addModelSnapshotMapping(XContentBuilder builder) throws IOException {_        builder.startObject(ModelSnapshot.DESCRIPTION.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()_        .startObject(ModelSnapshotField.SNAPSHOT_ID.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSnapshot.SNAPSHOT_DOC_COUNT.getPreferredName())_            .field(TYPE, INTEGER)_        .endObject()_        .startObject(ModelSnapshot.RETAIN.getPreferredName())_            .field(TYPE, BOOLEAN)_        .endObject()_        .startObject(ModelSizeStats.RESULT_TYPE_FIELD.getPreferredName())_            .startObject(PROPERTIES)_                .startObject(Job.ID.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(Result.RESULT_TYPE.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(ModelSizeStats.TIMESTAMP_FIELD.getPreferredName())_                    .field(TYPE, DATE)_                .endObject()___        addModelSizeStatsFieldsToMapping(builder)___        _        builder.endObject()__        _        builder.endObject()___        builder.startObject(ModelSnapshot.QUANTILES.getPreferredName())_            .field(ENABLED, false)_        .endObject()_        .startObject(ModelSnapshot.LATEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(ModelSnapshot.LATEST_RESULT_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };create,the,elasticsearch,mapping,for,linkplain,model,snapshot,the,field,is,disabled,but,the,type,is,searchable;private,static,void,add,model,snapshot,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,model,snapshot,description,get,preferred,name,field,type,text,end,object,start,object,model,snapshot,field,get,preferred,name,field,type,keyword,end,object,start,object,model,snapshot,get,preferred,name,field,type,integer,end,object,start,object,model,snapshot,retain,get,preferred,name,field,type,boolean,end,object,start,object,model,size,stats,get,preferred,name,start,object,properties,start,object,job,id,get,preferred,name,field,type,keyword,end,object,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,model,size,stats,get,preferred,name,field,type,date,end,object,add,model,size,stats,fields,to,mapping,builder,builder,end,object,builder,end,object,builder,start,object,model,snapshot,quantiles,get,preferred,name,field,enabled,false,end,object,start,object,model,snapshot,get,preferred,name,field,type,date,end,object,start,object,model,snapshot,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addModelSnapshotMapping(XContentBuilder builder) throws IOException;1539615817;Create the Elasticsearch mapping for {@linkplain ModelSnapshot}._The '_all' field is disabled but the type is searchable;private static void addModelSnapshotMapping(XContentBuilder builder) throws IOException {_        builder.startObject(ModelSnapshot.DESCRIPTION.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()_        .startObject(ModelSnapshotField.SNAPSHOT_ID.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSnapshot.SNAPSHOT_DOC_COUNT.getPreferredName())_            .field(TYPE, INTEGER)_        .endObject()_        .startObject(ModelSnapshot.RETAIN.getPreferredName())_            .field(TYPE, BOOLEAN)_        .endObject()_        .startObject(ModelSizeStats.RESULT_TYPE_FIELD.getPreferredName())_            .startObject(PROPERTIES)_                .startObject(Job.ID.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(Result.RESULT_TYPE.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(ModelSizeStats.TIMESTAMP_FIELD.getPreferredName())_                    .field(TYPE, DATE)_                .endObject()___        addModelSizeStatsFieldsToMapping(builder)___        _        builder.endObject()__        _        builder.endObject()___        builder.startObject(ModelSnapshot.QUANTILES.getPreferredName())_            .field(ENABLED, false)_        .endObject()_        .startObject(ModelSnapshot.LATEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(ModelSnapshot.LATEST_RESULT_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };create,the,elasticsearch,mapping,for,linkplain,model,snapshot,the,field,is,disabled,but,the,type,is,searchable;private,static,void,add,model,snapshot,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,model,snapshot,description,get,preferred,name,field,type,text,end,object,start,object,model,snapshot,field,get,preferred,name,field,type,keyword,end,object,start,object,model,snapshot,get,preferred,name,field,type,integer,end,object,start,object,model,snapshot,retain,get,preferred,name,field,type,boolean,end,object,start,object,model,size,stats,get,preferred,name,start,object,properties,start,object,job,id,get,preferred,name,field,type,keyword,end,object,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,model,size,stats,get,preferred,name,field,type,date,end,object,add,model,size,stats,fields,to,mapping,builder,builder,end,object,builder,end,object,builder,start,object,model,snapshot,quantiles,get,preferred,name,field,enabled,false,end,object,start,object,model,snapshot,get,preferred,name,field,type,date,end,object,start,object,model,snapshot,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addModelSnapshotMapping(XContentBuilder builder) throws IOException;1545155131;Create the Elasticsearch mapping for {@linkplain ModelSnapshot}._The '_all' field is disabled but the type is searchable;private static void addModelSnapshotMapping(XContentBuilder builder) throws IOException {_        builder.startObject(ModelSnapshot.DESCRIPTION.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()_        .startObject(ModelSnapshotField.SNAPSHOT_ID.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSnapshot.SNAPSHOT_DOC_COUNT.getPreferredName())_            .field(TYPE, INTEGER)_        .endObject()_        .startObject(ModelSnapshot.RETAIN.getPreferredName())_            .field(TYPE, BOOLEAN)_        .endObject()_        .startObject(ModelSizeStats.RESULT_TYPE_FIELD.getPreferredName())_            .startObject(PROPERTIES)_                .startObject(Job.ID.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(Result.RESULT_TYPE.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(ModelSizeStats.TIMESTAMP_FIELD.getPreferredName())_                    .field(TYPE, DATE)_                .endObject()___        addModelSizeStatsFieldsToMapping(builder)___        _        builder.endObject()__        _        builder.endObject()___        builder.startObject(ModelSnapshot.QUANTILES.getPreferredName())_            .field(ENABLED, false)_        .endObject()_        .startObject(ModelSnapshot.LATEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(ModelSnapshot.LATEST_RESULT_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };create,the,elasticsearch,mapping,for,linkplain,model,snapshot,the,field,is,disabled,but,the,type,is,searchable;private,static,void,add,model,snapshot,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,model,snapshot,description,get,preferred,name,field,type,text,end,object,start,object,model,snapshot,field,get,preferred,name,field,type,keyword,end,object,start,object,model,snapshot,get,preferred,name,field,type,integer,end,object,start,object,model,snapshot,retain,get,preferred,name,field,type,boolean,end,object,start,object,model,size,stats,get,preferred,name,start,object,properties,start,object,job,id,get,preferred,name,field,type,keyword,end,object,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,model,size,stats,get,preferred,name,field,type,date,end,object,add,model,size,stats,fields,to,mapping,builder,builder,end,object,builder,end,object,builder,start,object,model,snapshot,quantiles,get,preferred,name,field,enabled,false,end,object,start,object,model,snapshot,get,preferred,name,field,type,date,end,object,start,object,model,snapshot,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addModelSnapshotMapping(XContentBuilder builder) throws IOException;1546549182;Create the Elasticsearch mapping for {@linkplain ModelSnapshot}._The '_all' field is disabled but the type is searchable;private static void addModelSnapshotMapping(XContentBuilder builder) throws IOException {_        builder.startObject(ModelSnapshot.DESCRIPTION.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()_        .startObject(ModelSnapshotField.SNAPSHOT_ID.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSnapshot.SNAPSHOT_DOC_COUNT.getPreferredName())_            .field(TYPE, INTEGER)_        .endObject()_        .startObject(ModelSnapshot.RETAIN.getPreferredName())_            .field(TYPE, BOOLEAN)_        .endObject()_        .startObject(ModelSizeStats.RESULT_TYPE_FIELD.getPreferredName())_            .startObject(PROPERTIES)_                .startObject(Job.ID.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(Result.RESULT_TYPE.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(ModelSizeStats.TIMESTAMP_FIELD.getPreferredName())_                    .field(TYPE, DATE)_                .endObject()___        addModelSizeStatsFieldsToMapping(builder)___        _        builder.endObject()__        _        builder.endObject()___        builder.startObject(ModelSnapshot.QUANTILES.getPreferredName())_            .field(ENABLED, false)_        .endObject().startObject(ModelSnapshot.MIN_VERSION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSnapshot.LATEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(ModelSnapshot.LATEST_RESULT_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };create,the,elasticsearch,mapping,for,linkplain,model,snapshot,the,field,is,disabled,but,the,type,is,searchable;private,static,void,add,model,snapshot,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,model,snapshot,description,get,preferred,name,field,type,text,end,object,start,object,model,snapshot,field,get,preferred,name,field,type,keyword,end,object,start,object,model,snapshot,get,preferred,name,field,type,integer,end,object,start,object,model,snapshot,retain,get,preferred,name,field,type,boolean,end,object,start,object,model,size,stats,get,preferred,name,start,object,properties,start,object,job,id,get,preferred,name,field,type,keyword,end,object,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,model,size,stats,get,preferred,name,field,type,date,end,object,add,model,size,stats,fields,to,mapping,builder,builder,end,object,builder,end,object,builder,start,object,model,snapshot,quantiles,get,preferred,name,field,enabled,false,end,object,start,object,model,snapshot,get,preferred,name,field,type,keyword,end,object,start,object,model,snapshot,get,preferred,name,field,type,date,end,object,start,object,model,snapshot,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addModelSnapshotMapping(XContentBuilder builder) throws IOException;1546587824;Create the Elasticsearch mapping for {@linkplain ModelSnapshot}._The '_all' field is disabled but the type is searchable;private static void addModelSnapshotMapping(XContentBuilder builder) throws IOException {_        builder.startObject(ModelSnapshot.DESCRIPTION.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()_        .startObject(ModelSnapshotField.SNAPSHOT_ID.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSnapshot.SNAPSHOT_DOC_COUNT.getPreferredName())_            .field(TYPE, INTEGER)_        .endObject()_        .startObject(ModelSnapshot.RETAIN.getPreferredName())_            .field(TYPE, BOOLEAN)_        .endObject()_        .startObject(ModelSizeStats.RESULT_TYPE_FIELD.getPreferredName())_            .startObject(PROPERTIES)_                .startObject(Job.ID.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(Result.RESULT_TYPE.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(ModelSizeStats.TIMESTAMP_FIELD.getPreferredName())_                    .field(TYPE, DATE)_                .endObject()___        addModelSizeStatsFieldsToMapping(builder)___        _        builder.endObject()__        _        builder.endObject()___        builder.startObject(ModelSnapshot.QUANTILES.getPreferredName())_            .field(ENABLED, false)_        .endObject().startObject(ModelSnapshot.MIN_VERSION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSnapshot.LATEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(ModelSnapshot.LATEST_RESULT_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };create,the,elasticsearch,mapping,for,linkplain,model,snapshot,the,field,is,disabled,but,the,type,is,searchable;private,static,void,add,model,snapshot,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,model,snapshot,description,get,preferred,name,field,type,text,end,object,start,object,model,snapshot,field,get,preferred,name,field,type,keyword,end,object,start,object,model,snapshot,get,preferred,name,field,type,integer,end,object,start,object,model,snapshot,retain,get,preferred,name,field,type,boolean,end,object,start,object,model,size,stats,get,preferred,name,start,object,properties,start,object,job,id,get,preferred,name,field,type,keyword,end,object,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,model,size,stats,get,preferred,name,field,type,date,end,object,add,model,size,stats,fields,to,mapping,builder,builder,end,object,builder,end,object,builder,start,object,model,snapshot,quantiles,get,preferred,name,field,enabled,false,end,object,start,object,model,snapshot,get,preferred,name,field,type,keyword,end,object,start,object,model,snapshot,get,preferred,name,field,type,date,end,object,start,object,model,snapshot,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addModelSnapshotMapping(XContentBuilder builder) throws IOException;1548236257;Create the Elasticsearch mapping for {@linkplain ModelSnapshot}._The '_all' field is disabled but the type is searchable;private static void addModelSnapshotMapping(XContentBuilder builder) throws IOException {_        builder.startObject(ModelSnapshot.DESCRIPTION.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()_        .startObject(ModelSnapshotField.SNAPSHOT_ID.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSnapshot.SNAPSHOT_DOC_COUNT.getPreferredName())_            .field(TYPE, INTEGER)_        .endObject()_        .startObject(ModelSnapshot.RETAIN.getPreferredName())_            .field(TYPE, BOOLEAN)_        .endObject()_        .startObject(ModelSizeStats.RESULT_TYPE_FIELD.getPreferredName())_            .startObject(PROPERTIES)_                .startObject(Job.ID.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(Result.RESULT_TYPE.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(ModelSizeStats.TIMESTAMP_FIELD.getPreferredName())_                    .field(TYPE, DATE)_                .endObject()___        addModelSizeStatsFieldsToMapping(builder)___        _        builder.endObject()__        _        builder.endObject()___        builder.startObject(ModelSnapshot.QUANTILES.getPreferredName())_            .field(ENABLED, false)_        .endObject().startObject(ModelSnapshot.MIN_VERSION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSnapshot.LATEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(ModelSnapshot.LATEST_RESULT_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };create,the,elasticsearch,mapping,for,linkplain,model,snapshot,the,field,is,disabled,but,the,type,is,searchable;private,static,void,add,model,snapshot,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,model,snapshot,description,get,preferred,name,field,type,text,end,object,start,object,model,snapshot,field,get,preferred,name,field,type,keyword,end,object,start,object,model,snapshot,get,preferred,name,field,type,integer,end,object,start,object,model,snapshot,retain,get,preferred,name,field,type,boolean,end,object,start,object,model,size,stats,get,preferred,name,start,object,properties,start,object,job,id,get,preferred,name,field,type,keyword,end,object,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,model,size,stats,get,preferred,name,field,type,date,end,object,add,model,size,stats,fields,to,mapping,builder,builder,end,object,builder,end,object,builder,start,object,model,snapshot,quantiles,get,preferred,name,field,enabled,false,end,object,start,object,model,snapshot,get,preferred,name,field,type,keyword,end,object,start,object,model,snapshot,get,preferred,name,field,type,date,end,object,start,object,model,snapshot,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addModelSnapshotMapping(XContentBuilder builder) throws IOException;1548776495;Create the Elasticsearch mapping for {@linkplain ModelSnapshot}._The '_all' field is disabled but the type is searchable;private static void addModelSnapshotMapping(XContentBuilder builder) throws IOException {_        builder.startObject(ModelSnapshot.DESCRIPTION.getPreferredName())_            .field(TYPE, TEXT)_        .endObject()_        .startObject(ModelSnapshotField.SNAPSHOT_ID.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSnapshot.SNAPSHOT_DOC_COUNT.getPreferredName())_            .field(TYPE, INTEGER)_        .endObject()_        .startObject(ModelSnapshot.RETAIN.getPreferredName())_            .field(TYPE, BOOLEAN)_        .endObject()_        .startObject(ModelSizeStats.RESULT_TYPE_FIELD.getPreferredName())_            .startObject(PROPERTIES)_                .startObject(Job.ID.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(Result.RESULT_TYPE.getPreferredName())_                    .field(TYPE, KEYWORD)_                .endObject()_                .startObject(ModelSizeStats.TIMESTAMP_FIELD.getPreferredName())_                    .field(TYPE, DATE)_                .endObject()___        addModelSizeStatsFieldsToMapping(builder)___        _        builder.endObject()__        _        builder.endObject()___        builder.startObject(ModelSnapshot.QUANTILES.getPreferredName())_            .field(ENABLED, false)_        .endObject().startObject(ModelSnapshot.MIN_VERSION.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSnapshot.LATEST_RECORD_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()_        .startObject(ModelSnapshot.LATEST_RESULT_TIME.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };create,the,elasticsearch,mapping,for,linkplain,model,snapshot,the,field,is,disabled,but,the,type,is,searchable;private,static,void,add,model,snapshot,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,model,snapshot,description,get,preferred,name,field,type,text,end,object,start,object,model,snapshot,field,get,preferred,name,field,type,keyword,end,object,start,object,model,snapshot,get,preferred,name,field,type,integer,end,object,start,object,model,snapshot,retain,get,preferred,name,field,type,boolean,end,object,start,object,model,size,stats,get,preferred,name,start,object,properties,start,object,job,id,get,preferred,name,field,type,keyword,end,object,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,model,size,stats,get,preferred,name,field,type,date,end,object,add,model,size,stats,fields,to,mapping,builder,builder,end,object,builder,end,object,builder,start,object,model,snapshot,quantiles,get,preferred,name,field,enabled,false,end,object,start,object,model,snapshot,get,preferred,name,field,type,keyword,end,object,start,object,model,snapshot,get,preferred,name,field,type,date,end,object,start,object,model,snapshot,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> public static void addDefaultMapping(XContentBuilder builder) throws IOException;1524684173;Creates a default mapping which has a dynamic template that_treats all dynamically added fields as keywords. This is needed_so that the per-job term fields will not be automatically added_as fields of type 'text' to the index mappings of newly rolled indices.__@throws IOException On write error;public static void addDefaultMapping(XContentBuilder builder) throws IOException {_        builder.startArray("dynamic_templates")_                    .startObject()_                        .startObject("strings_as_keywords")_                            .field("match", "*")_                            .startObject("mapping")_                                .field(TYPE, KEYWORD)_                            .endObject()_                        .endObject()_                    .endObject()_                .endArray()__    };creates,a,default,mapping,which,has,a,dynamic,template,that,treats,all,dynamically,added,fields,as,keywords,this,is,needed,so,that,the,per,job,term,fields,will,not,be,automatically,added,as,fields,of,type,text,to,the,index,mappings,of,newly,rolled,indices,throws,ioexception,on,write,error;public,static,void,add,default,mapping,xcontent,builder,builder,throws,ioexception,builder,start,array,start,object,start,object,field,match,start,object,mapping,field,type,keyword,end,object,end,object,end,object,end,array
ElasticsearchMappings -> public static void addDefaultMapping(XContentBuilder builder) throws IOException;1534338685;Creates a default mapping which has a dynamic template that_treats all dynamically added fields as keywords. This is needed_so that the per-job term fields will not be automatically added_as fields of type 'text' to the index mappings of newly rolled indices.__@throws IOException On write error;public static void addDefaultMapping(XContentBuilder builder) throws IOException {_        builder.startArray("dynamic_templates")_                    .startObject()_                        .startObject("strings_as_keywords")_                            .field("match", "*")_                            .startObject("mapping")_                                .field(TYPE, KEYWORD)_                            .endObject()_                        .endObject()_                    .endObject()_                .endArray()__    };creates,a,default,mapping,which,has,a,dynamic,template,that,treats,all,dynamically,added,fields,as,keywords,this,is,needed,so,that,the,per,job,term,fields,will,not,be,automatically,added,as,fields,of,type,text,to,the,index,mappings,of,newly,rolled,indices,throws,ioexception,on,write,error;public,static,void,add,default,mapping,xcontent,builder,builder,throws,ioexception,builder,start,array,start,object,start,object,field,match,start,object,mapping,field,type,keyword,end,object,end,object,end,object,end,array
ElasticsearchMappings -> public static void addDefaultMapping(XContentBuilder builder) throws IOException;1539615817;Creates a default mapping which has a dynamic template that_treats all dynamically added fields as keywords. This is needed_so that the per-job term fields will not be automatically added_as fields of type 'text' to the index mappings of newly rolled indices.__@throws IOException On write error;public static void addDefaultMapping(XContentBuilder builder) throws IOException {_        builder.startArray("dynamic_templates")_                    .startObject()_                        .startObject("strings_as_keywords")_                            .field("match", "*")_                            .startObject("mapping")_                                .field(TYPE, KEYWORD)_                            .endObject()_                        .endObject()_                    .endObject()_                .endArray()__    };creates,a,default,mapping,which,has,a,dynamic,template,that,treats,all,dynamically,added,fields,as,keywords,this,is,needed,so,that,the,per,job,term,fields,will,not,be,automatically,added,as,fields,of,type,text,to,the,index,mappings,of,newly,rolled,indices,throws,ioexception,on,write,error;public,static,void,add,default,mapping,xcontent,builder,builder,throws,ioexception,builder,start,array,start,object,start,object,field,match,start,object,mapping,field,type,keyword,end,object,end,object,end,object,end,array
ElasticsearchMappings -> public static void addDefaultMapping(XContentBuilder builder) throws IOException;1545155131;Creates a default mapping which has a dynamic template that_treats all dynamically added fields as keywords. This is needed_so that the per-job term fields will not be automatically added_as fields of type 'text' to the index mappings of newly rolled indices.__@throws IOException On write error;public static void addDefaultMapping(XContentBuilder builder) throws IOException {_        builder.startArray("dynamic_templates")_                    .startObject()_                        .startObject("strings_as_keywords")_                            .field("match", "*")_                            .startObject("mapping")_                                .field(TYPE, KEYWORD)_                            .endObject()_                        .endObject()_                    .endObject()_                .endArray()__    };creates,a,default,mapping,which,has,a,dynamic,template,that,treats,all,dynamically,added,fields,as,keywords,this,is,needed,so,that,the,per,job,term,fields,will,not,be,automatically,added,as,fields,of,type,text,to,the,index,mappings,of,newly,rolled,indices,throws,ioexception,on,write,error;public,static,void,add,default,mapping,xcontent,builder,builder,throws,ioexception,builder,start,array,start,object,start,object,field,match,start,object,mapping,field,type,keyword,end,object,end,object,end,object,end,array
ElasticsearchMappings -> public static void addDefaultMapping(XContentBuilder builder) throws IOException;1546549182;Creates a default mapping which has a dynamic template that_treats all dynamically added fields as keywords. This is needed_so that the per-job term fields will not be automatically added_as fields of type 'text' to the index mappings of newly rolled indices.__@throws IOException On write error;public static void addDefaultMapping(XContentBuilder builder) throws IOException {_        builder.startArray("dynamic_templates")_                    .startObject()_                        .startObject("strings_as_keywords")_                            .field("match", "*")_                            .startObject("mapping")_                                .field(TYPE, KEYWORD)_                            .endObject()_                        .endObject()_                    .endObject()_                .endArray()__    };creates,a,default,mapping,which,has,a,dynamic,template,that,treats,all,dynamically,added,fields,as,keywords,this,is,needed,so,that,the,per,job,term,fields,will,not,be,automatically,added,as,fields,of,type,text,to,the,index,mappings,of,newly,rolled,indices,throws,ioexception,on,write,error;public,static,void,add,default,mapping,xcontent,builder,builder,throws,ioexception,builder,start,array,start,object,start,object,field,match,start,object,mapping,field,type,keyword,end,object,end,object,end,object,end,array
ElasticsearchMappings -> public static void addDefaultMapping(XContentBuilder builder) throws IOException;1546587824;Creates a default mapping which has a dynamic template that_treats all dynamically added fields as keywords. This is needed_so that the per-job term fields will not be automatically added_as fields of type 'text' to the index mappings of newly rolled indices.__@throws IOException On write error;public static void addDefaultMapping(XContentBuilder builder) throws IOException {_        builder.startArray("dynamic_templates")_                    .startObject()_                        .startObject("strings_as_keywords")_                            .field("match", "*")_                            .startObject("mapping")_                                .field(TYPE, KEYWORD)_                            .endObject()_                        .endObject()_                    .endObject()_                .endArray()__    };creates,a,default,mapping,which,has,a,dynamic,template,that,treats,all,dynamically,added,fields,as,keywords,this,is,needed,so,that,the,per,job,term,fields,will,not,be,automatically,added,as,fields,of,type,text,to,the,index,mappings,of,newly,rolled,indices,throws,ioexception,on,write,error;public,static,void,add,default,mapping,xcontent,builder,builder,throws,ioexception,builder,start,array,start,object,start,object,field,match,start,object,mapping,field,type,keyword,end,object,end,object,end,object,end,array
ElasticsearchMappings -> public static void addDefaultMapping(XContentBuilder builder) throws IOException;1548236257;Creates a default mapping which has a dynamic template that_treats all dynamically added fields as keywords. This is needed_so that the per-job term fields will not be automatically added_as fields of type 'text' to the index mappings of newly rolled indices.__@throws IOException On write error;public static void addDefaultMapping(XContentBuilder builder) throws IOException {_        builder.startArray("dynamic_templates")_                    .startObject()_                        .startObject("strings_as_keywords")_                            .field("match", "*")_                            .startObject("mapping")_                                .field(TYPE, KEYWORD)_                            .endObject()_                        .endObject()_                    .endObject()_                .endArray()__    };creates,a,default,mapping,which,has,a,dynamic,template,that,treats,all,dynamically,added,fields,as,keywords,this,is,needed,so,that,the,per,job,term,fields,will,not,be,automatically,added,as,fields,of,type,text,to,the,index,mappings,of,newly,rolled,indices,throws,ioexception,on,write,error;public,static,void,add,default,mapping,xcontent,builder,builder,throws,ioexception,builder,start,array,start,object,start,object,field,match,start,object,mapping,field,type,keyword,end,object,end,object,end,object,end,array
ElasticsearchMappings -> public static void addDefaultMapping(XContentBuilder builder) throws IOException;1548776495;Creates a default mapping which has a dynamic template that_treats all dynamically added fields as keywords. This is needed_so that the per-job term fields will not be automatically added_as fields of type 'text' to the index mappings of newly rolled indices.__@throws IOException On write error;public static void addDefaultMapping(XContentBuilder builder) throws IOException {_        builder.startArray("dynamic_templates")_                    .startObject()_                        .startObject("strings_as_keywords")_                            .field("match", "*")_                            .startObject("mapping")_                                .field(TYPE, KEYWORD)_                            .endObject()_                        .endObject()_                    .endObject()_                .endArray()__    };creates,a,default,mapping,which,has,a,dynamic,template,that,treats,all,dynamically,added,fields,as,keywords,this,is,needed,so,that,the,per,job,term,fields,will,not,be,automatically,added,as,fields,of,type,text,to,the,index,mappings,of,newly,rolled,indices,throws,ioexception,on,write,error;public,static,void,add,default,mapping,xcontent,builder,builder,throws,ioexception,builder,start,array,start,object,start,object,field,match,start,object,mapping,field,type,keyword,end,object,end,object,end,object,end,array
ElasticsearchMappings -> private static void addResultsMapping(XContentBuilder builder) throws IOException;1524684173;Create the Elasticsearch mapping for results objects_{@link Bucket}s, {@link AnomalyRecord}s, {@link Influencer} and_{@link BucketInfluencer}__The mapping has a custom all field containing the *_FIELD_VALUE fields_e.g. BY_FIELD_VALUE, OVER_FIELD_VALUE, etc. The custom all field {@link #ALL_FIELD_VALUES}_must be set in the index settings. A custom all field is preferred over the usual_'_all' field as most fields do not belong in '_all', disabling '_all' and_using a custom all field simplifies the mapping.__These fields are copied to the custom all field_<ul>_<li>by_field_value</li>_<li>partition_field_value</li>_<li>over_field_value</li>_<li>AnomalyCause.correlated_by_field_value</li>_<li>AnomalyCause.by_field_value</li>_<li>AnomalyCause.partition_field_value</li>_<li>AnomalyCause.over_field_value</li>_<li>AnomalyRecord.Influencers.influencer_field_values</li>_<li>Influencer.influencer_field_value</li>_</ul>__@throws IOException On write error;private static void addResultsMapping(XContentBuilder builder) throws IOException {_        builder.startObject(Result.RESULT_TYPE.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()_            .startObject(Bucket.ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(BucketInfluencer.RAW_ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(Bucket.INITIAL_ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(Result.IS_INTERIM.getPreferredName())_                .field(TYPE, BOOLEAN)_            .endObject()_            .startObject(Bucket.EVENT_COUNT.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.BUCKET_SPAN.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.PROCESSING_TIME_MS.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.SCHEDULED_EVENTS.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()_            .startObject(Bucket.PARTITION_SCORES.getPreferredName())_                .field(TYPE, NESTED)_                .startObject(PROPERTIES)_                    .startObject(AnomalyRecord.PARTITION_FIELD_NAME.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(AnomalyRecord.PARTITION_FIELD_VALUE.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(Bucket.INITIAL_ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(AnomalyRecord.PROBABILITY.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                .endObject()_            .endObject()__            .startObject(Bucket.BUCKET_INFLUENCERS.getPreferredName())_                .field(TYPE, NESTED)_                .startObject(PROPERTIES)_                    .startObject(Job.ID.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(Result.RESULT_TYPE.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(BucketInfluencer.INFLUENCER_FIELD_NAME.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(BucketInfluencer.INITIAL_ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.RAW_ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.PROBABILITY.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(Result.TIMESTAMP.getPreferredName())_                        .field(TYPE, DATE)_                    .endObject()_                    .startObject(BucketInfluencer.BUCKET_SPAN.getPreferredName())_                        .field(TYPE, LONG)_                    .endObject()_                    .startObject(Result.IS_INTERIM.getPreferredName())_                        .field(TYPE, BOOLEAN)_                    .endObject()_                .endObject()_            .endObject()__            _            .startObject(ModelPlot.MODEL_FEATURE.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()_            .startObject(ModelPlot.MODEL_LOWER.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(ModelPlot.MODEL_UPPER.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(ModelPlot.MODEL_MEDIAN.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()___        addForecastFieldsToMapping(builder)__        addAnomalyRecordFieldsToMapping(builder)__        addInfluencerFieldsToMapping(builder)__        addModelSizeStatsFieldsToMapping(builder)__    };create,the,elasticsearch,mapping,for,results,objects,link,bucket,s,link,anomaly,record,s,link,influencer,and,link,bucket,influencer,the,mapping,has,a,custom,all,field,containing,the,fields,e,g,etc,the,custom,all,field,link,must,be,set,in,the,index,settings,a,custom,all,field,is,preferred,over,the,usual,field,as,most,fields,do,not,belong,in,disabling,and,using,a,custom,all,field,simplifies,the,mapping,these,fields,are,copied,to,the,custom,all,field,ul,li,li,li,li,li,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,record,influencers,li,li,influencer,li,ul,throws,ioexception,on,write,error;private,static,void,add,results,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,bucket,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,get,preferred,name,field,type,double,end,object,start,object,result,get,preferred,name,field,type,boolean,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,keyword,end,object,start,object,bucket,get,preferred,name,field,type,nested,start,object,properties,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,anomaly,record,get,preferred,name,field,type,keyword,end,object,start,object,bucket,get,preferred,name,field,type,double,end,object,start,object,anomaly,record,probability,get,preferred,name,field,type,double,end,object,end,object,end,object,start,object,bucket,get,preferred,name,field,type,nested,start,object,properties,start,object,job,id,get,preferred,name,field,type,keyword,end,object,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,bucket,influencer,get,preferred,name,field,type,keyword,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,probability,get,preferred,name,field,type,double,end,object,start,object,result,timestamp,get,preferred,name,field,type,date,end,object,start,object,bucket,influencer,get,preferred,name,field,type,long,end,object,start,object,result,get,preferred,name,field,type,boolean,end,object,end,object,end,object,start,object,model,plot,get,preferred,name,field,type,keyword,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,add,forecast,fields,to,mapping,builder,add,anomaly,record,fields,to,mapping,builder,add,influencer,fields,to,mapping,builder,add,model,size,stats,fields,to,mapping,builder
ElasticsearchMappings -> private static void addResultsMapping(XContentBuilder builder) throws IOException;1534338685;Create the Elasticsearch mapping for results objects_{@link Bucket}s, {@link AnomalyRecord}s, {@link Influencer} and_{@link BucketInfluencer}__The mapping has a custom all field containing the *_FIELD_VALUE fields_e.g. BY_FIELD_VALUE, OVER_FIELD_VALUE, etc. The custom all field {@link #ALL_FIELD_VALUES}_must be set in the index settings. A custom all field is preferred over the usual_'_all' field as most fields do not belong in '_all', disabling '_all' and_using a custom all field simplifies the mapping.__These fields are copied to the custom all field_<ul>_<li>by_field_value</li>_<li>partition_field_value</li>_<li>over_field_value</li>_<li>AnomalyCause.correlated_by_field_value</li>_<li>AnomalyCause.by_field_value</li>_<li>AnomalyCause.partition_field_value</li>_<li>AnomalyCause.over_field_value</li>_<li>AnomalyRecord.Influencers.influencer_field_values</li>_<li>Influencer.influencer_field_value</li>_</ul>__@throws IOException On write error;private static void addResultsMapping(XContentBuilder builder) throws IOException {_        builder.startObject(Result.RESULT_TYPE.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()_            .startObject(Bucket.ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(BucketInfluencer.RAW_ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(Bucket.INITIAL_ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(Result.IS_INTERIM.getPreferredName())_                .field(TYPE, BOOLEAN)_            .endObject()_            .startObject(Bucket.EVENT_COUNT.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.BUCKET_SPAN.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.PROCESSING_TIME_MS.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.SCHEDULED_EVENTS.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()__            .startObject(Bucket.BUCKET_INFLUENCERS.getPreferredName())_                .field(TYPE, NESTED)_                .startObject(PROPERTIES)_                    .startObject(Job.ID.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(Result.RESULT_TYPE.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(BucketInfluencer.INFLUENCER_FIELD_NAME.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(BucketInfluencer.INITIAL_ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.RAW_ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.PROBABILITY.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(Result.TIMESTAMP.getPreferredName())_                        .field(TYPE, DATE)_                    .endObject()_                    .startObject(BucketInfluencer.BUCKET_SPAN.getPreferredName())_                        .field(TYPE, LONG)_                    .endObject()_                    .startObject(Result.IS_INTERIM.getPreferredName())_                        .field(TYPE, BOOLEAN)_                    .endObject()_                .endObject()_            .endObject()__            _            .startObject(ModelPlot.MODEL_FEATURE.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()_            .startObject(ModelPlot.MODEL_LOWER.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(ModelPlot.MODEL_UPPER.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(ModelPlot.MODEL_MEDIAN.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()___        addForecastFieldsToMapping(builder)__        addAnomalyRecordFieldsToMapping(builder)__        addInfluencerFieldsToMapping(builder)__        addModelSizeStatsFieldsToMapping(builder)__    };create,the,elasticsearch,mapping,for,results,objects,link,bucket,s,link,anomaly,record,s,link,influencer,and,link,bucket,influencer,the,mapping,has,a,custom,all,field,containing,the,fields,e,g,etc,the,custom,all,field,link,must,be,set,in,the,index,settings,a,custom,all,field,is,preferred,over,the,usual,field,as,most,fields,do,not,belong,in,disabling,and,using,a,custom,all,field,simplifies,the,mapping,these,fields,are,copied,to,the,custom,all,field,ul,li,li,li,li,li,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,record,influencers,li,li,influencer,li,ul,throws,ioexception,on,write,error;private,static,void,add,results,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,bucket,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,get,preferred,name,field,type,double,end,object,start,object,result,get,preferred,name,field,type,boolean,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,keyword,end,object,start,object,bucket,get,preferred,name,field,type,nested,start,object,properties,start,object,job,id,get,preferred,name,field,type,keyword,end,object,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,bucket,influencer,get,preferred,name,field,type,keyword,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,probability,get,preferred,name,field,type,double,end,object,start,object,result,timestamp,get,preferred,name,field,type,date,end,object,start,object,bucket,influencer,get,preferred,name,field,type,long,end,object,start,object,result,get,preferred,name,field,type,boolean,end,object,end,object,end,object,start,object,model,plot,get,preferred,name,field,type,keyword,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,add,forecast,fields,to,mapping,builder,add,anomaly,record,fields,to,mapping,builder,add,influencer,fields,to,mapping,builder,add,model,size,stats,fields,to,mapping,builder
ElasticsearchMappings -> private static void addResultsMapping(XContentBuilder builder) throws IOException;1539615817;Create the Elasticsearch mapping for results objects_{@link Bucket}s, {@link AnomalyRecord}s, {@link Influencer} and_{@link BucketInfluencer}__The mapping has a custom all field containing the *_FIELD_VALUE fields_e.g. BY_FIELD_VALUE, OVER_FIELD_VALUE, etc. The custom all field {@link #ALL_FIELD_VALUES}_must be set in the index settings. A custom all field is preferred over the usual_'_all' field as most fields do not belong in '_all', disabling '_all' and_using a custom all field simplifies the mapping.__These fields are copied to the custom all field_<ul>_<li>by_field_value</li>_<li>partition_field_value</li>_<li>over_field_value</li>_<li>AnomalyCause.correlated_by_field_value</li>_<li>AnomalyCause.by_field_value</li>_<li>AnomalyCause.partition_field_value</li>_<li>AnomalyCause.over_field_value</li>_<li>AnomalyRecord.Influencers.influencer_field_values</li>_<li>Influencer.influencer_field_value</li>_</ul>__@throws IOException On write error;private static void addResultsMapping(XContentBuilder builder) throws IOException {_        builder.startObject(Result.RESULT_TYPE.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()_            .startObject(Bucket.ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(BucketInfluencer.RAW_ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(Bucket.INITIAL_ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(Result.IS_INTERIM.getPreferredName())_                .field(TYPE, BOOLEAN)_            .endObject()_            .startObject(Bucket.EVENT_COUNT.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.BUCKET_SPAN.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.PROCESSING_TIME_MS.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.SCHEDULED_EVENTS.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()__            .startObject(Bucket.BUCKET_INFLUENCERS.getPreferredName())_                .field(TYPE, NESTED)_                .startObject(PROPERTIES)_                    .startObject(Job.ID.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(Result.RESULT_TYPE.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(BucketInfluencer.INFLUENCER_FIELD_NAME.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(BucketInfluencer.INITIAL_ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.RAW_ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.PROBABILITY.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(Result.TIMESTAMP.getPreferredName())_                        .field(TYPE, DATE)_                    .endObject()_                    .startObject(BucketInfluencer.BUCKET_SPAN.getPreferredName())_                        .field(TYPE, LONG)_                    .endObject()_                    .startObject(Result.IS_INTERIM.getPreferredName())_                        .field(TYPE, BOOLEAN)_                    .endObject()_                .endObject()_            .endObject()__            _            .startObject(ModelPlot.MODEL_FEATURE.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()_            .startObject(ModelPlot.MODEL_LOWER.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(ModelPlot.MODEL_UPPER.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(ModelPlot.MODEL_MEDIAN.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()___        addForecastFieldsToMapping(builder)__        addAnomalyRecordFieldsToMapping(builder)__        addInfluencerFieldsToMapping(builder)__        addModelSizeStatsFieldsToMapping(builder)__    };create,the,elasticsearch,mapping,for,results,objects,link,bucket,s,link,anomaly,record,s,link,influencer,and,link,bucket,influencer,the,mapping,has,a,custom,all,field,containing,the,fields,e,g,etc,the,custom,all,field,link,must,be,set,in,the,index,settings,a,custom,all,field,is,preferred,over,the,usual,field,as,most,fields,do,not,belong,in,disabling,and,using,a,custom,all,field,simplifies,the,mapping,these,fields,are,copied,to,the,custom,all,field,ul,li,li,li,li,li,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,record,influencers,li,li,influencer,li,ul,throws,ioexception,on,write,error;private,static,void,add,results,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,bucket,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,get,preferred,name,field,type,double,end,object,start,object,result,get,preferred,name,field,type,boolean,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,keyword,end,object,start,object,bucket,get,preferred,name,field,type,nested,start,object,properties,start,object,job,id,get,preferred,name,field,type,keyword,end,object,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,bucket,influencer,get,preferred,name,field,type,keyword,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,probability,get,preferred,name,field,type,double,end,object,start,object,result,timestamp,get,preferred,name,field,type,date,end,object,start,object,bucket,influencer,get,preferred,name,field,type,long,end,object,start,object,result,get,preferred,name,field,type,boolean,end,object,end,object,end,object,start,object,model,plot,get,preferred,name,field,type,keyword,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,add,forecast,fields,to,mapping,builder,add,anomaly,record,fields,to,mapping,builder,add,influencer,fields,to,mapping,builder,add,model,size,stats,fields,to,mapping,builder
ElasticsearchMappings -> private static void addResultsMapping(XContentBuilder builder) throws IOException;1545155131;Create the Elasticsearch mapping for results objects_{@link Bucket}s, {@link AnomalyRecord}s, {@link Influencer} and_{@link BucketInfluencer}__The mapping has a custom all field containing the *_FIELD_VALUE fields_e.g. BY_FIELD_VALUE, OVER_FIELD_VALUE, etc. The custom all field {@link #ALL_FIELD_VALUES}_must be set in the index settings. A custom all field is preferred over the usual_'_all' field as most fields do not belong in '_all', disabling '_all' and_using a custom all field simplifies the mapping.__These fields are copied to the custom all field_<ul>_<li>by_field_value</li>_<li>partition_field_value</li>_<li>over_field_value</li>_<li>AnomalyCause.correlated_by_field_value</li>_<li>AnomalyCause.by_field_value</li>_<li>AnomalyCause.partition_field_value</li>_<li>AnomalyCause.over_field_value</li>_<li>AnomalyRecord.Influencers.influencer_field_values</li>_<li>Influencer.influencer_field_value</li>_</ul>__@throws IOException On write error;private static void addResultsMapping(XContentBuilder builder) throws IOException {_        builder.startObject(Result.RESULT_TYPE.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()_            .startObject(Bucket.ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(BucketInfluencer.RAW_ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(Bucket.INITIAL_ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(Result.IS_INTERIM.getPreferredName())_                .field(TYPE, BOOLEAN)_            .endObject()_            .startObject(Bucket.EVENT_COUNT.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.BUCKET_SPAN.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.PROCESSING_TIME_MS.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.SCHEDULED_EVENTS.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()__            .startObject(Bucket.BUCKET_INFLUENCERS.getPreferredName())_                .field(TYPE, NESTED)_                .startObject(PROPERTIES)_                    .startObject(Job.ID.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(Result.RESULT_TYPE.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(BucketInfluencer.INFLUENCER_FIELD_NAME.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(BucketInfluencer.INITIAL_ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.RAW_ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.PROBABILITY.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(Result.TIMESTAMP.getPreferredName())_                        .field(TYPE, DATE)_                    .endObject()_                    .startObject(BucketInfluencer.BUCKET_SPAN.getPreferredName())_                        .field(TYPE, LONG)_                    .endObject()_                    .startObject(Result.IS_INTERIM.getPreferredName())_                        .field(TYPE, BOOLEAN)_                    .endObject()_                .endObject()_            .endObject()__            _            .startObject(ModelPlot.MODEL_FEATURE.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()_            .startObject(ModelPlot.MODEL_LOWER.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(ModelPlot.MODEL_UPPER.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(ModelPlot.MODEL_MEDIAN.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()___        addForecastFieldsToMapping(builder)__        addAnomalyRecordFieldsToMapping(builder)__        addInfluencerFieldsToMapping(builder)__        addModelSizeStatsFieldsToMapping(builder)__    };create,the,elasticsearch,mapping,for,results,objects,link,bucket,s,link,anomaly,record,s,link,influencer,and,link,bucket,influencer,the,mapping,has,a,custom,all,field,containing,the,fields,e,g,etc,the,custom,all,field,link,must,be,set,in,the,index,settings,a,custom,all,field,is,preferred,over,the,usual,field,as,most,fields,do,not,belong,in,disabling,and,using,a,custom,all,field,simplifies,the,mapping,these,fields,are,copied,to,the,custom,all,field,ul,li,li,li,li,li,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,record,influencers,li,li,influencer,li,ul,throws,ioexception,on,write,error;private,static,void,add,results,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,bucket,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,get,preferred,name,field,type,double,end,object,start,object,result,get,preferred,name,field,type,boolean,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,keyword,end,object,start,object,bucket,get,preferred,name,field,type,nested,start,object,properties,start,object,job,id,get,preferred,name,field,type,keyword,end,object,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,bucket,influencer,get,preferred,name,field,type,keyword,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,probability,get,preferred,name,field,type,double,end,object,start,object,result,timestamp,get,preferred,name,field,type,date,end,object,start,object,bucket,influencer,get,preferred,name,field,type,long,end,object,start,object,result,get,preferred,name,field,type,boolean,end,object,end,object,end,object,start,object,model,plot,get,preferred,name,field,type,keyword,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,add,forecast,fields,to,mapping,builder,add,anomaly,record,fields,to,mapping,builder,add,influencer,fields,to,mapping,builder,add,model,size,stats,fields,to,mapping,builder
ElasticsearchMappings -> private static void addResultsMapping(XContentBuilder builder) throws IOException;1546549182;Create the Elasticsearch mapping for results objects_{@link Bucket}s, {@link AnomalyRecord}s, {@link Influencer} and_{@link BucketInfluencer}__The mapping has a custom all field containing the *_FIELD_VALUE fields_e.g. BY_FIELD_VALUE, OVER_FIELD_VALUE, etc. The custom all field {@link #ALL_FIELD_VALUES}_must be set in the index settings. A custom all field is preferred over the usual_'_all' field as most fields do not belong in '_all', disabling '_all' and_using a custom all field simplifies the mapping.__These fields are copied to the custom all field_<ul>_<li>by_field_value</li>_<li>partition_field_value</li>_<li>over_field_value</li>_<li>AnomalyCause.correlated_by_field_value</li>_<li>AnomalyCause.by_field_value</li>_<li>AnomalyCause.partition_field_value</li>_<li>AnomalyCause.over_field_value</li>_<li>AnomalyRecord.Influencers.influencer_field_values</li>_<li>Influencer.influencer_field_value</li>_</ul>__@throws IOException On write error;private static void addResultsMapping(XContentBuilder builder) throws IOException {_        builder.startObject(Result.RESULT_TYPE.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()_            .startObject(Bucket.ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(BucketInfluencer.RAW_ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(Bucket.INITIAL_ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(Result.IS_INTERIM.getPreferredName())_                .field(TYPE, BOOLEAN)_            .endObject()_            .startObject(Bucket.EVENT_COUNT.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.BUCKET_SPAN.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.PROCESSING_TIME_MS.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.SCHEDULED_EVENTS.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()__            .startObject(Bucket.BUCKET_INFLUENCERS.getPreferredName())_                .field(TYPE, NESTED)_                .startObject(PROPERTIES)_                    .startObject(Job.ID.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(Result.RESULT_TYPE.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(BucketInfluencer.INFLUENCER_FIELD_NAME.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(BucketInfluencer.INITIAL_ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.RAW_ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.PROBABILITY.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(Result.TIMESTAMP.getPreferredName())_                        .field(TYPE, DATE)_                    .endObject()_                    .startObject(BucketInfluencer.BUCKET_SPAN.getPreferredName())_                        .field(TYPE, LONG)_                    .endObject()_                    .startObject(Result.IS_INTERIM.getPreferredName())_                        .field(TYPE, BOOLEAN)_                    .endObject()_                .endObject()_            .endObject()__            _            .startObject(ModelPlot.MODEL_FEATURE.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()_            .startObject(ModelPlot.MODEL_LOWER.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(ModelPlot.MODEL_UPPER.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(ModelPlot.MODEL_MEDIAN.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()___        addForecastFieldsToMapping(builder)__        addAnomalyRecordFieldsToMapping(builder)__        addInfluencerFieldsToMapping(builder)__        addModelSizeStatsFieldsToMapping(builder)__    };create,the,elasticsearch,mapping,for,results,objects,link,bucket,s,link,anomaly,record,s,link,influencer,and,link,bucket,influencer,the,mapping,has,a,custom,all,field,containing,the,fields,e,g,etc,the,custom,all,field,link,must,be,set,in,the,index,settings,a,custom,all,field,is,preferred,over,the,usual,field,as,most,fields,do,not,belong,in,disabling,and,using,a,custom,all,field,simplifies,the,mapping,these,fields,are,copied,to,the,custom,all,field,ul,li,li,li,li,li,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,record,influencers,li,li,influencer,li,ul,throws,ioexception,on,write,error;private,static,void,add,results,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,bucket,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,get,preferred,name,field,type,double,end,object,start,object,result,get,preferred,name,field,type,boolean,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,keyword,end,object,start,object,bucket,get,preferred,name,field,type,nested,start,object,properties,start,object,job,id,get,preferred,name,field,type,keyword,end,object,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,bucket,influencer,get,preferred,name,field,type,keyword,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,probability,get,preferred,name,field,type,double,end,object,start,object,result,timestamp,get,preferred,name,field,type,date,end,object,start,object,bucket,influencer,get,preferred,name,field,type,long,end,object,start,object,result,get,preferred,name,field,type,boolean,end,object,end,object,end,object,start,object,model,plot,get,preferred,name,field,type,keyword,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,add,forecast,fields,to,mapping,builder,add,anomaly,record,fields,to,mapping,builder,add,influencer,fields,to,mapping,builder,add,model,size,stats,fields,to,mapping,builder
ElasticsearchMappings -> private static void addResultsMapping(XContentBuilder builder) throws IOException;1546587824;Create the Elasticsearch mapping for results objects_{@link Bucket}s, {@link AnomalyRecord}s, {@link Influencer} and_{@link BucketInfluencer}__The mapping has a custom all field containing the *_FIELD_VALUE fields_e.g. BY_FIELD_VALUE, OVER_FIELD_VALUE, etc. The custom all field {@link #ALL_FIELD_VALUES}_must be set in the index settings. A custom all field is preferred over the usual_'_all' field as most fields do not belong in '_all', disabling '_all' and_using a custom all field simplifies the mapping.__These fields are copied to the custom all field_<ul>_<li>by_field_value</li>_<li>partition_field_value</li>_<li>over_field_value</li>_<li>AnomalyCause.correlated_by_field_value</li>_<li>AnomalyCause.by_field_value</li>_<li>AnomalyCause.partition_field_value</li>_<li>AnomalyCause.over_field_value</li>_<li>AnomalyRecord.Influencers.influencer_field_values</li>_<li>Influencer.influencer_field_value</li>_</ul>__@throws IOException On write error;private static void addResultsMapping(XContentBuilder builder) throws IOException {_        builder.startObject(Result.RESULT_TYPE.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()_            .startObject(Bucket.ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(BucketInfluencer.RAW_ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(Bucket.INITIAL_ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(Result.IS_INTERIM.getPreferredName())_                .field(TYPE, BOOLEAN)_            .endObject()_            .startObject(Bucket.EVENT_COUNT.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.BUCKET_SPAN.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.PROCESSING_TIME_MS.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.SCHEDULED_EVENTS.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()__            .startObject(Bucket.BUCKET_INFLUENCERS.getPreferredName())_                .field(TYPE, NESTED)_                .startObject(PROPERTIES)_                    .startObject(Job.ID.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(Result.RESULT_TYPE.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(BucketInfluencer.INFLUENCER_FIELD_NAME.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(BucketInfluencer.INITIAL_ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.RAW_ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.PROBABILITY.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(Result.TIMESTAMP.getPreferredName())_                        .field(TYPE, DATE)_                    .endObject()_                    .startObject(BucketInfluencer.BUCKET_SPAN.getPreferredName())_                        .field(TYPE, LONG)_                    .endObject()_                    .startObject(Result.IS_INTERIM.getPreferredName())_                        .field(TYPE, BOOLEAN)_                    .endObject()_                .endObject()_            .endObject()__            _            .startObject(ModelPlot.MODEL_FEATURE.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()_            .startObject(ModelPlot.MODEL_LOWER.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(ModelPlot.MODEL_UPPER.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(ModelPlot.MODEL_MEDIAN.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()___        addForecastFieldsToMapping(builder)__        addAnomalyRecordFieldsToMapping(builder)__        addInfluencerFieldsToMapping(builder)__        addModelSizeStatsFieldsToMapping(builder)__    };create,the,elasticsearch,mapping,for,results,objects,link,bucket,s,link,anomaly,record,s,link,influencer,and,link,bucket,influencer,the,mapping,has,a,custom,all,field,containing,the,fields,e,g,etc,the,custom,all,field,link,must,be,set,in,the,index,settings,a,custom,all,field,is,preferred,over,the,usual,field,as,most,fields,do,not,belong,in,disabling,and,using,a,custom,all,field,simplifies,the,mapping,these,fields,are,copied,to,the,custom,all,field,ul,li,li,li,li,li,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,record,influencers,li,li,influencer,li,ul,throws,ioexception,on,write,error;private,static,void,add,results,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,bucket,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,get,preferred,name,field,type,double,end,object,start,object,result,get,preferred,name,field,type,boolean,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,keyword,end,object,start,object,bucket,get,preferred,name,field,type,nested,start,object,properties,start,object,job,id,get,preferred,name,field,type,keyword,end,object,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,bucket,influencer,get,preferred,name,field,type,keyword,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,probability,get,preferred,name,field,type,double,end,object,start,object,result,timestamp,get,preferred,name,field,type,date,end,object,start,object,bucket,influencer,get,preferred,name,field,type,long,end,object,start,object,result,get,preferred,name,field,type,boolean,end,object,end,object,end,object,start,object,model,plot,get,preferred,name,field,type,keyword,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,add,forecast,fields,to,mapping,builder,add,anomaly,record,fields,to,mapping,builder,add,influencer,fields,to,mapping,builder,add,model,size,stats,fields,to,mapping,builder
ElasticsearchMappings -> private static void addResultsMapping(XContentBuilder builder) throws IOException;1548236257;Create the Elasticsearch mapping for results objects_{@link Bucket}s, {@link AnomalyRecord}s, {@link Influencer} and_{@link BucketInfluencer}__The mapping has a custom all field containing the *_FIELD_VALUE fields_e.g. BY_FIELD_VALUE, OVER_FIELD_VALUE, etc. The custom all field {@link #ALL_FIELD_VALUES}_must be set in the index settings. A custom all field is preferred over the usual_'_all' field as most fields do not belong in '_all', disabling '_all' and_using a custom all field simplifies the mapping.__These fields are copied to the custom all field_<ul>_<li>by_field_value</li>_<li>partition_field_value</li>_<li>over_field_value</li>_<li>AnomalyCause.correlated_by_field_value</li>_<li>AnomalyCause.by_field_value</li>_<li>AnomalyCause.partition_field_value</li>_<li>AnomalyCause.over_field_value</li>_<li>AnomalyRecord.Influencers.influencer_field_values</li>_<li>Influencer.influencer_field_value</li>_</ul>__@throws IOException On write error;private static void addResultsMapping(XContentBuilder builder) throws IOException {_        builder.startObject(Result.RESULT_TYPE.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()_            .startObject(Bucket.ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(BucketInfluencer.RAW_ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(Bucket.INITIAL_ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(Result.IS_INTERIM.getPreferredName())_                .field(TYPE, BOOLEAN)_            .endObject()_            .startObject(Bucket.EVENT_COUNT.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.BUCKET_SPAN.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.PROCESSING_TIME_MS.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.SCHEDULED_EVENTS.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()__            .startObject(Bucket.BUCKET_INFLUENCERS.getPreferredName())_                .field(TYPE, NESTED)_                .startObject(PROPERTIES)_                    .startObject(Job.ID.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(Result.RESULT_TYPE.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(BucketInfluencer.INFLUENCER_FIELD_NAME.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(BucketInfluencer.INITIAL_ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.RAW_ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.PROBABILITY.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(Result.TIMESTAMP.getPreferredName())_                        .field(TYPE, DATE)_                    .endObject()_                    .startObject(BucketInfluencer.BUCKET_SPAN.getPreferredName())_                        .field(TYPE, LONG)_                    .endObject()_                    .startObject(Result.IS_INTERIM.getPreferredName())_                        .field(TYPE, BOOLEAN)_                    .endObject()_                .endObject()_            .endObject()__            _            .startObject(ModelPlot.MODEL_FEATURE.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()_            .startObject(ModelPlot.MODEL_LOWER.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(ModelPlot.MODEL_UPPER.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(ModelPlot.MODEL_MEDIAN.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()___        addForecastFieldsToMapping(builder)__        addAnomalyRecordFieldsToMapping(builder)__        addInfluencerFieldsToMapping(builder)__        addModelSizeStatsFieldsToMapping(builder)__    };create,the,elasticsearch,mapping,for,results,objects,link,bucket,s,link,anomaly,record,s,link,influencer,and,link,bucket,influencer,the,mapping,has,a,custom,all,field,containing,the,fields,e,g,etc,the,custom,all,field,link,must,be,set,in,the,index,settings,a,custom,all,field,is,preferred,over,the,usual,field,as,most,fields,do,not,belong,in,disabling,and,using,a,custom,all,field,simplifies,the,mapping,these,fields,are,copied,to,the,custom,all,field,ul,li,li,li,li,li,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,record,influencers,li,li,influencer,li,ul,throws,ioexception,on,write,error;private,static,void,add,results,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,bucket,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,get,preferred,name,field,type,double,end,object,start,object,result,get,preferred,name,field,type,boolean,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,keyword,end,object,start,object,bucket,get,preferred,name,field,type,nested,start,object,properties,start,object,job,id,get,preferred,name,field,type,keyword,end,object,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,bucket,influencer,get,preferred,name,field,type,keyword,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,probability,get,preferred,name,field,type,double,end,object,start,object,result,timestamp,get,preferred,name,field,type,date,end,object,start,object,bucket,influencer,get,preferred,name,field,type,long,end,object,start,object,result,get,preferred,name,field,type,boolean,end,object,end,object,end,object,start,object,model,plot,get,preferred,name,field,type,keyword,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,add,forecast,fields,to,mapping,builder,add,anomaly,record,fields,to,mapping,builder,add,influencer,fields,to,mapping,builder,add,model,size,stats,fields,to,mapping,builder
ElasticsearchMappings -> private static void addResultsMapping(XContentBuilder builder) throws IOException;1548776495;Create the Elasticsearch mapping for results objects_{@link Bucket}s, {@link AnomalyRecord}s, {@link Influencer} and_{@link BucketInfluencer}__The mapping has a custom all field containing the *_FIELD_VALUE fields_e.g. BY_FIELD_VALUE, OVER_FIELD_VALUE, etc. The custom all field {@link #ALL_FIELD_VALUES}_must be set in the index settings. A custom all field is preferred over the usual_'_all' field as most fields do not belong in '_all', disabling '_all' and_using a custom all field simplifies the mapping.__These fields are copied to the custom all field_<ul>_<li>by_field_value</li>_<li>partition_field_value</li>_<li>over_field_value</li>_<li>AnomalyCause.correlated_by_field_value</li>_<li>AnomalyCause.by_field_value</li>_<li>AnomalyCause.partition_field_value</li>_<li>AnomalyCause.over_field_value</li>_<li>AnomalyRecord.Influencers.influencer_field_values</li>_<li>Influencer.influencer_field_value</li>_</ul>__@throws IOException On write error;private static void addResultsMapping(XContentBuilder builder) throws IOException {_        builder.startObject(Result.RESULT_TYPE.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()_            .startObject(Bucket.ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(BucketInfluencer.RAW_ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(Bucket.INITIAL_ANOMALY_SCORE.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(Result.IS_INTERIM.getPreferredName())_                .field(TYPE, BOOLEAN)_            .endObject()_            .startObject(Bucket.EVENT_COUNT.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.BUCKET_SPAN.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.PROCESSING_TIME_MS.getPreferredName())_                .field(TYPE, LONG)_            .endObject()_            .startObject(Bucket.SCHEDULED_EVENTS.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()__            .startObject(Bucket.BUCKET_INFLUENCERS.getPreferredName())_                .field(TYPE, NESTED)_                .startObject(PROPERTIES)_                    .startObject(Job.ID.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(Result.RESULT_TYPE.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(BucketInfluencer.INFLUENCER_FIELD_NAME.getPreferredName())_                        .field(TYPE, KEYWORD)_                    .endObject()_                    .startObject(BucketInfluencer.INITIAL_ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.RAW_ANOMALY_SCORE.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(BucketInfluencer.PROBABILITY.getPreferredName())_                        .field(TYPE, DOUBLE)_                    .endObject()_                    .startObject(Result.TIMESTAMP.getPreferredName())_                        .field(TYPE, DATE)_                    .endObject()_                    .startObject(BucketInfluencer.BUCKET_SPAN.getPreferredName())_                        .field(TYPE, LONG)_                    .endObject()_                    .startObject(Result.IS_INTERIM.getPreferredName())_                        .field(TYPE, BOOLEAN)_                    .endObject()_                .endObject()_            .endObject()__            _            .startObject(ModelPlot.MODEL_FEATURE.getPreferredName())_                .field(TYPE, KEYWORD)_            .endObject()_            .startObject(ModelPlot.MODEL_LOWER.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(ModelPlot.MODEL_UPPER.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()_            .startObject(ModelPlot.MODEL_MEDIAN.getPreferredName())_                .field(TYPE, DOUBLE)_            .endObject()___        addForecastFieldsToMapping(builder)__        addAnomalyRecordFieldsToMapping(builder)__        addInfluencerFieldsToMapping(builder)__        addModelSizeStatsFieldsToMapping(builder)__    };create,the,elasticsearch,mapping,for,results,objects,link,bucket,s,link,anomaly,record,s,link,influencer,and,link,bucket,influencer,the,mapping,has,a,custom,all,field,containing,the,fields,e,g,etc,the,custom,all,field,link,must,be,set,in,the,index,settings,a,custom,all,field,is,preferred,over,the,usual,field,as,most,fields,do,not,belong,in,disabling,and,using,a,custom,all,field,simplifies,the,mapping,these,fields,are,copied,to,the,custom,all,field,ul,li,li,li,li,li,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,cause,li,li,anomaly,record,influencers,li,li,influencer,li,ul,throws,ioexception,on,write,error;private,static,void,add,results,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,bucket,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,get,preferred,name,field,type,double,end,object,start,object,result,get,preferred,name,field,type,boolean,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,long,end,object,start,object,bucket,get,preferred,name,field,type,keyword,end,object,start,object,bucket,get,preferred,name,field,type,nested,start,object,properties,start,object,job,id,get,preferred,name,field,type,keyword,end,object,start,object,result,get,preferred,name,field,type,keyword,end,object,start,object,bucket,influencer,get,preferred,name,field,type,keyword,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,get,preferred,name,field,type,double,end,object,start,object,bucket,influencer,probability,get,preferred,name,field,type,double,end,object,start,object,result,timestamp,get,preferred,name,field,type,date,end,object,start,object,bucket,influencer,get,preferred,name,field,type,long,end,object,start,object,result,get,preferred,name,field,type,boolean,end,object,end,object,end,object,start,object,model,plot,get,preferred,name,field,type,keyword,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,start,object,model,plot,get,preferred,name,field,type,double,end,object,add,forecast,fields,to,mapping,builder,add,anomaly,record,fields,to,mapping,builder,add,influencer,fields,to,mapping,builder,add,model,size,stats,fields,to,mapping,builder
ElasticsearchMappings -> public static XContentBuilder stateMapping() throws IOException;1524684173;Create the Elasticsearch mapping for state.  State could potentially be_huge (target document size is 16MB and there can be many documents) so all_analysis by Elasticsearch is disabled.  The only way to retrieve state is_by knowing the ID of a particular document.;public static XContentBuilder stateMapping() throws IOException {_        XContentBuilder builder = jsonBuilder()__        builder.startObject()__        builder.startObject(DOC_TYPE)__        addMetaInformation(builder)__        builder.field(ENABLED, false)__        builder.endObject()__        builder.endObject()___        return builder__    };create,the,elasticsearch,mapping,for,state,state,could,potentially,be,huge,target,document,size,is,16mb,and,there,can,be,many,documents,so,all,analysis,by,elasticsearch,is,disabled,the,only,way,to,retrieve,state,is,by,knowing,the,id,of,a,particular,document;public,static,xcontent,builder,state,mapping,throws,ioexception,xcontent,builder,builder,json,builder,builder,start,object,builder,start,object,add,meta,information,builder,builder,field,enabled,false,builder,end,object,builder,end,object,return,builder
ElasticsearchMappings -> public static XContentBuilder stateMapping() throws IOException;1534338685;Create the Elasticsearch mapping for state.  State could potentially be_huge (target document size is 16MB and there can be many documents) so all_analysis by Elasticsearch is disabled.  The only way to retrieve state is_by knowing the ID of a particular document.;public static XContentBuilder stateMapping() throws IOException {_        XContentBuilder builder = jsonBuilder()__        builder.startObject()__        builder.startObject(DOC_TYPE)__        addMetaInformation(builder)__        builder.field(ENABLED, false)__        builder.endObject()__        builder.endObject()___        return builder__    };create,the,elasticsearch,mapping,for,state,state,could,potentially,be,huge,target,document,size,is,16mb,and,there,can,be,many,documents,so,all,analysis,by,elasticsearch,is,disabled,the,only,way,to,retrieve,state,is,by,knowing,the,id,of,a,particular,document;public,static,xcontent,builder,state,mapping,throws,ioexception,xcontent,builder,builder,json,builder,builder,start,object,builder,start,object,add,meta,information,builder,builder,field,enabled,false,builder,end,object,builder,end,object,return,builder
ElasticsearchMappings -> public static XContentBuilder stateMapping() throws IOException;1539615817;Create the Elasticsearch mapping for state.  State could potentially be_huge (target document size is 16MB and there can be many documents) so all_analysis by Elasticsearch is disabled.  The only way to retrieve state is_by knowing the ID of a particular document.;public static XContentBuilder stateMapping() throws IOException {_        XContentBuilder builder = jsonBuilder()__        builder.startObject()__        builder.startObject(DOC_TYPE)__        addMetaInformation(builder)__        builder.field(ENABLED, false)__        builder.endObject()__        builder.endObject()___        return builder__    };create,the,elasticsearch,mapping,for,state,state,could,potentially,be,huge,target,document,size,is,16mb,and,there,can,be,many,documents,so,all,analysis,by,elasticsearch,is,disabled,the,only,way,to,retrieve,state,is,by,knowing,the,id,of,a,particular,document;public,static,xcontent,builder,state,mapping,throws,ioexception,xcontent,builder,builder,json,builder,builder,start,object,builder,start,object,add,meta,information,builder,builder,field,enabled,false,builder,end,object,builder,end,object,return,builder
ElasticsearchMappings -> public static XContentBuilder stateMapping() throws IOException;1545155131;Create the Elasticsearch mapping for state.  State could potentially be_huge (target document size is 16MB and there can be many documents) so all_analysis by Elasticsearch is disabled.  The only way to retrieve state is_by knowing the ID of a particular document.;public static XContentBuilder stateMapping() throws IOException {_        XContentBuilder builder = jsonBuilder()__        builder.startObject()__        builder.startObject(DOC_TYPE)__        addMetaInformation(builder)__        builder.field(ENABLED, false)__        builder.endObject()__        builder.endObject()___        return builder__    };create,the,elasticsearch,mapping,for,state,state,could,potentially,be,huge,target,document,size,is,16mb,and,there,can,be,many,documents,so,all,analysis,by,elasticsearch,is,disabled,the,only,way,to,retrieve,state,is,by,knowing,the,id,of,a,particular,document;public,static,xcontent,builder,state,mapping,throws,ioexception,xcontent,builder,builder,json,builder,builder,start,object,builder,start,object,add,meta,information,builder,builder,field,enabled,false,builder,end,object,builder,end,object,return,builder
ElasticsearchMappings -> public static XContentBuilder stateMapping() throws IOException;1546549182;Create the Elasticsearch mapping for state.  State could potentially be_huge (target document size is 16MB and there can be many documents) so all_analysis by Elasticsearch is disabled.  The only way to retrieve state is_by knowing the ID of a particular document.;public static XContentBuilder stateMapping() throws IOException {_        XContentBuilder builder = jsonBuilder()__        builder.startObject()__        builder.startObject(DOC_TYPE)__        addMetaInformation(builder)__        builder.field(ENABLED, false)__        builder.endObject()__        builder.endObject()___        return builder__    };create,the,elasticsearch,mapping,for,state,state,could,potentially,be,huge,target,document,size,is,16mb,and,there,can,be,many,documents,so,all,analysis,by,elasticsearch,is,disabled,the,only,way,to,retrieve,state,is,by,knowing,the,id,of,a,particular,document;public,static,xcontent,builder,state,mapping,throws,ioexception,xcontent,builder,builder,json,builder,builder,start,object,builder,start,object,add,meta,information,builder,builder,field,enabled,false,builder,end,object,builder,end,object,return,builder
ElasticsearchMappings -> public static XContentBuilder stateMapping() throws IOException;1546587824;Create the Elasticsearch mapping for state.  State could potentially be_huge (target document size is 16MB and there can be many documents) so all_analysis by Elasticsearch is disabled.  The only way to retrieve state is_by knowing the ID of a particular document.;public static XContentBuilder stateMapping() throws IOException {_        XContentBuilder builder = jsonBuilder()__        builder.startObject()__        builder.startObject(DOC_TYPE)__        addMetaInformation(builder)__        builder.field(ENABLED, false)__        builder.endObject()__        builder.endObject()___        return builder__    };create,the,elasticsearch,mapping,for,state,state,could,potentially,be,huge,target,document,size,is,16mb,and,there,can,be,many,documents,so,all,analysis,by,elasticsearch,is,disabled,the,only,way,to,retrieve,state,is,by,knowing,the,id,of,a,particular,document;public,static,xcontent,builder,state,mapping,throws,ioexception,xcontent,builder,builder,json,builder,builder,start,object,builder,start,object,add,meta,information,builder,builder,field,enabled,false,builder,end,object,builder,end,object,return,builder
ElasticsearchMappings -> public static XContentBuilder stateMapping() throws IOException;1548236257;Create the Elasticsearch mapping for state.  State could potentially be_huge (target document size is 16MB and there can be many documents) so all_analysis by Elasticsearch is disabled.  The only way to retrieve state is_by knowing the ID of a particular document.;public static XContentBuilder stateMapping() throws IOException {_        XContentBuilder builder = jsonBuilder()__        builder.startObject()__        builder.startObject(DOC_TYPE)__        addMetaInformation(builder)__        builder.field(ENABLED, false)__        builder.endObject()__        builder.endObject()___        return builder__    };create,the,elasticsearch,mapping,for,state,state,could,potentially,be,huge,target,document,size,is,16mb,and,there,can,be,many,documents,so,all,analysis,by,elasticsearch,is,disabled,the,only,way,to,retrieve,state,is,by,knowing,the,id,of,a,particular,document;public,static,xcontent,builder,state,mapping,throws,ioexception,xcontent,builder,builder,json,builder,builder,start,object,builder,start,object,add,meta,information,builder,builder,field,enabled,false,builder,end,object,builder,end,object,return,builder
ElasticsearchMappings -> public static XContentBuilder stateMapping() throws IOException;1548776495;Create the Elasticsearch mapping for state.  State could potentially be_huge (target document size is 16MB and there can be many documents) so all_analysis by Elasticsearch is disabled.  The only way to retrieve state is_by knowing the ID of a particular document.;public static XContentBuilder stateMapping() throws IOException {_        XContentBuilder builder = jsonBuilder()__        builder.startObject()__        builder.startObject(DOC_TYPE)__        addMetaInformation(builder)__        builder.field(ENABLED, false)__        builder.endObject()__        builder.endObject()___        return builder__    };create,the,elasticsearch,mapping,for,state,state,could,potentially,be,huge,target,document,size,is,16mb,and,there,can,be,many,documents,so,all,analysis,by,elasticsearch,is,disabled,the,only,way,to,retrieve,state,is,by,knowing,the,id,of,a,particular,document;public,static,xcontent,builder,state,mapping,throws,ioexception,xcontent,builder,builder,json,builder,builder,start,object,builder,start,object,add,meta,information,builder,builder,field,enabled,false,builder,end,object,builder,end,object,return,builder
ElasticsearchMappings -> private static void addModelSizeStatsFieldsToMapping(XContentBuilder builder) throws IOException;1524684173;{@link ModelSizeStats} fields to be added under the 'properties' section of the mapping_@param builder Add properties to this builder_@throws IOException On write error;private static void addModelSizeStatsFieldsToMapping(XContentBuilder builder) throws IOException {_        builder.startObject(ModelSizeStats.MODEL_BYTES_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_BY_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_OVER_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_PARTITION_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.BUCKET_ALLOCATION_FAILURES_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.MEMORY_STATUS_FIELD.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSizeStats.LOG_TIME_FIELD.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };link,model,size,stats,fields,to,be,added,under,the,properties,section,of,the,mapping,param,builder,add,properties,to,this,builder,throws,ioexception,on,write,error;private,static,void,add,model,size,stats,fields,to,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,keyword,end,object,start,object,model,size,stats,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addModelSizeStatsFieldsToMapping(XContentBuilder builder) throws IOException;1534338685;{@link ModelSizeStats} fields to be added under the 'properties' section of the mapping_@param builder Add properties to this builder_@throws IOException On write error;private static void addModelSizeStatsFieldsToMapping(XContentBuilder builder) throws IOException {_        builder.startObject(ModelSizeStats.MODEL_BYTES_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_BY_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_OVER_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_PARTITION_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.BUCKET_ALLOCATION_FAILURES_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.MEMORY_STATUS_FIELD.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSizeStats.LOG_TIME_FIELD.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };link,model,size,stats,fields,to,be,added,under,the,properties,section,of,the,mapping,param,builder,add,properties,to,this,builder,throws,ioexception,on,write,error;private,static,void,add,model,size,stats,fields,to,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,keyword,end,object,start,object,model,size,stats,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addModelSizeStatsFieldsToMapping(XContentBuilder builder) throws IOException;1539615817;{@link ModelSizeStats} fields to be added under the 'properties' section of the mapping_@param builder Add properties to this builder_@throws IOException On write error;private static void addModelSizeStatsFieldsToMapping(XContentBuilder builder) throws IOException {_        builder.startObject(ModelSizeStats.MODEL_BYTES_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_BY_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_OVER_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_PARTITION_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.BUCKET_ALLOCATION_FAILURES_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.MEMORY_STATUS_FIELD.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSizeStats.LOG_TIME_FIELD.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };link,model,size,stats,fields,to,be,added,under,the,properties,section,of,the,mapping,param,builder,add,properties,to,this,builder,throws,ioexception,on,write,error;private,static,void,add,model,size,stats,fields,to,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,keyword,end,object,start,object,model,size,stats,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addModelSizeStatsFieldsToMapping(XContentBuilder builder) throws IOException;1545155131;{@link ModelSizeStats} fields to be added under the 'properties' section of the mapping_@param builder Add properties to this builder_@throws IOException On write error;private static void addModelSizeStatsFieldsToMapping(XContentBuilder builder) throws IOException {_        builder.startObject(ModelSizeStats.MODEL_BYTES_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_BY_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_OVER_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_PARTITION_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.BUCKET_ALLOCATION_FAILURES_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.MEMORY_STATUS_FIELD.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSizeStats.LOG_TIME_FIELD.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };link,model,size,stats,fields,to,be,added,under,the,properties,section,of,the,mapping,param,builder,add,properties,to,this,builder,throws,ioexception,on,write,error;private,static,void,add,model,size,stats,fields,to,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,keyword,end,object,start,object,model,size,stats,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addModelSizeStatsFieldsToMapping(XContentBuilder builder) throws IOException;1546549182;{@link ModelSizeStats} fields to be added under the 'properties' section of the mapping_@param builder Add properties to this builder_@throws IOException On write error;private static void addModelSizeStatsFieldsToMapping(XContentBuilder builder) throws IOException {_        builder.startObject(ModelSizeStats.MODEL_BYTES_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_BY_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_OVER_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_PARTITION_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.BUCKET_ALLOCATION_FAILURES_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.MEMORY_STATUS_FIELD.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSizeStats.LOG_TIME_FIELD.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };link,model,size,stats,fields,to,be,added,under,the,properties,section,of,the,mapping,param,builder,add,properties,to,this,builder,throws,ioexception,on,write,error;private,static,void,add,model,size,stats,fields,to,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,keyword,end,object,start,object,model,size,stats,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addModelSizeStatsFieldsToMapping(XContentBuilder builder) throws IOException;1546587824;{@link ModelSizeStats} fields to be added under the 'properties' section of the mapping_@param builder Add properties to this builder_@throws IOException On write error;private static void addModelSizeStatsFieldsToMapping(XContentBuilder builder) throws IOException {_        builder.startObject(ModelSizeStats.MODEL_BYTES_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_BY_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_OVER_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_PARTITION_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.BUCKET_ALLOCATION_FAILURES_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.MEMORY_STATUS_FIELD.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSizeStats.LOG_TIME_FIELD.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };link,model,size,stats,fields,to,be,added,under,the,properties,section,of,the,mapping,param,builder,add,properties,to,this,builder,throws,ioexception,on,write,error;private,static,void,add,model,size,stats,fields,to,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,keyword,end,object,start,object,model,size,stats,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addModelSizeStatsFieldsToMapping(XContentBuilder builder) throws IOException;1548236257;{@link ModelSizeStats} fields to be added under the 'properties' section of the mapping_@param builder Add properties to this builder_@throws IOException On write error;private static void addModelSizeStatsFieldsToMapping(XContentBuilder builder) throws IOException {_        builder.startObject(ModelSizeStats.MODEL_BYTES_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_BY_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_OVER_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_PARTITION_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.BUCKET_ALLOCATION_FAILURES_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.MEMORY_STATUS_FIELD.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSizeStats.LOG_TIME_FIELD.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };link,model,size,stats,fields,to,be,added,under,the,properties,section,of,the,mapping,param,builder,add,properties,to,this,builder,throws,ioexception,on,write,error;private,static,void,add,model,size,stats,fields,to,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,keyword,end,object,start,object,model,size,stats,get,preferred,name,field,type,date,end,object
ElasticsearchMappings -> private static void addModelSizeStatsFieldsToMapping(XContentBuilder builder) throws IOException;1548776495;{@link ModelSizeStats} fields to be added under the 'properties' section of the mapping_@param builder Add properties to this builder_@throws IOException On write error;private static void addModelSizeStatsFieldsToMapping(XContentBuilder builder) throws IOException {_        builder.startObject(ModelSizeStats.MODEL_BYTES_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_BY_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_OVER_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.TOTAL_PARTITION_FIELD_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.BUCKET_ALLOCATION_FAILURES_COUNT_FIELD.getPreferredName())_            .field(TYPE, LONG)_        .endObject()_        .startObject(ModelSizeStats.MEMORY_STATUS_FIELD.getPreferredName())_            .field(TYPE, KEYWORD)_        .endObject()_        .startObject(ModelSizeStats.LOG_TIME_FIELD.getPreferredName())_            .field(TYPE, DATE)_        .endObject()__    };link,model,size,stats,fields,to,be,added,under,the,properties,section,of,the,mapping,param,builder,add,properties,to,this,builder,throws,ioexception,on,write,error;private,static,void,add,model,size,stats,fields,to,mapping,xcontent,builder,builder,throws,ioexception,builder,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,long,end,object,start,object,model,size,stats,get,preferred,name,field,type,keyword,end,object,start,object,model,size,stats,get,preferred,name,field,type,date,end,object
