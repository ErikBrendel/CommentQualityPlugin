commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "put_license". }
false;public;2;19;;@Override public RestChannelConsumer doPrepareRequest(final RestRequest request, final XPackClient client) throws IOException {     if (request.hasContent() == false) {         throw new IllegalArgumentException("The license must be provided in the request body").     }     PutLicenseRequest putLicenseRequest = new PutLicenseRequest().     putLicenseRequest.license(request.content(), request.getXContentType()).     putLicenseRequest.acknowledge(request.paramAsBoolean("acknowledge", false)).     putLicenseRequest.timeout(request.paramAsTime("timeout", putLicenseRequest.timeout())).     putLicenseRequest.masterNodeTimeout(request.paramAsTime("master_timeout", putLicenseRequest.masterNodeTimeout())).     if ("basic".equals(putLicenseRequest.license().type())) {         throw new IllegalArgumentException("Installing basic licenses is no longer allowed. Use the POST " + "/_license/start_basic API to install a basic license that does not expire.").     }     return channel -> client.es().admin().cluster().execute(PutLicenseAction.INSTANCE, putLicenseRequest, new RestToXContentListener<>(channel)). }
