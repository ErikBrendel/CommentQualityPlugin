commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;3;;public static ForceMergeAction parse(XContentParser parser) {     return PARSER.apply(parser, null). }
false;public;0;3;;public int getMaxNumSegments() {     return maxNumSegments. }
false;public;1;4;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeVInt(maxNumSegments). }
false;public;0;4;;@Override public String getWriteableName() {     return NAME. }
false;public;0;4;;@Override public boolean isSafeAction() {     return true. }
false;public;2;7;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(MAX_NUM_SEGMENTS_FIELD.getPreferredName(), maxNumSegments).     builder.endObject().     return builder. }
false;public;3;13;;@Override public List<Step> toSteps(Client client, String phase, Step.StepKey nextStepKey) {     Settings readOnlySettings = Settings.builder().put(IndexMetaData.SETTING_BLOCKS_WRITE, true).build().     StepKey readOnlyKey = new StepKey(phase, NAME, ReadOnlyAction.NAME).     StepKey forceMergeKey = new StepKey(phase, NAME, ForceMergeStep.NAME).     StepKey countKey = new StepKey(phase, NAME, SegmentCountStep.NAME).     UpdateSettingsStep readOnlyStep = new UpdateSettingsStep(readOnlyKey, forceMergeKey, client, readOnlySettings).     ForceMergeStep forceMergeStep = new ForceMergeStep(forceMergeKey, countKey, client, maxNumSegments).     SegmentCountStep segmentCountStep = new SegmentCountStep(countKey, nextStepKey, client, maxNumSegments).     return Arrays.asList(readOnlyStep, forceMergeStep, segmentCountStep). }
false;public;1;7;;@Override public List<StepKey> toStepKeys(String phase) {     StepKey readOnlyKey = new StepKey(phase, NAME, ReadOnlyAction.NAME).     StepKey forceMergeKey = new StepKey(phase, NAME, ForceMergeStep.NAME).     StepKey countKey = new StepKey(phase, NAME, SegmentCountStep.NAME).     return Arrays.asList(readOnlyKey, forceMergeKey, countKey). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(maxNumSegments). }
false;public;1;11;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (obj.getClass() != getClass()) {         return false.     }     ForceMergeAction other = (ForceMergeAction) obj.     return Objects.equals(maxNumSegments, other.maxNumSegments). }
false;public;0;4;;@Override public String toString() {     return Strings.toString(this). }
