commented;modifiers;parameterAmount;loc;comment;code
false;private,static;1;5;;private static Set<ResourcePrivileges> sorted(Collection<ResourcePrivileges> resources) {     final Set<ResourcePrivileges> set = new TreeSet<>(Comparator.comparing(o -> o.getResource())).     set.addAll(resources).     return set. }
false;public;0;3;;public String getUsername() {     return username. }
false;public;0;3;;public boolean isCompleteMatch() {     return completeMatch. }
false;public;0;3;;public Map<String, Boolean> getClusterPrivileges() {     return cluster. }
false;public;0;3;;public Set<ResourcePrivileges> getIndexPrivileges() {     return index. }
true;public;0;3;/**  * Retrieves the results from checking application privileges,  * @return A {@code Map} keyed by application-name  */ ;/**  * Retrieves the results from checking application privileges,  * @return A {@code Map} keyed by application-name  */ public Map<String, Set<ResourcePrivileges>> getApplicationPrivileges() {     return application. }
false;public;1;15;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     final HasPrivilegesResponse response = (HasPrivilegesResponse) o.     return completeMatch == response.completeMatch && Objects.equals(username, response.username) && Objects.equals(cluster, response.cluster) && Objects.equals(index, response.index) && Objects.equals(application, response.application). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(username, completeMatch, cluster, index, application). }
false;public;1;14;;public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     completeMatch = in.readBoolean().     if (in.getVersion().onOrAfter(Version.V_6_6_0)) {         cluster = in.readMap(StreamInput::readString, StreamInput::readBoolean).     }     index = readResourcePrivileges(in).     if (in.getVersion().onOrAfter(Version.V_6_4_0)) {         application = in.readMap(StreamInput::readString, HasPrivilegesResponse::readResourcePrivileges).     }     if (in.getVersion().onOrAfter(Version.V_6_6_0)) {         username = in.readString().     } }
false;private,static;1;10;;private static Set<ResourcePrivileges> readResourcePrivileges(StreamInput in) throws IOException {     final int count = in.readVInt().     final Set<ResourcePrivileges> set = new TreeSet<>(Comparator.comparing(o -> o.getResource())).     for (int i = 0. i < count. i++) {         final String index = in.readString().         final Map<String, Boolean> privileges = in.readMap(StreamInput::readString, StreamInput::readBoolean).         set.add(ResourcePrivileges.builder(index).addPrivileges(privileges).build()).     }     return set. }
false;public;1;15;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeBoolean(completeMatch).     if (out.getVersion().onOrAfter(Version.V_6_6_0)) {         out.writeMap(cluster, StreamOutput::writeString, StreamOutput::writeBoolean).     }     writeResourcePrivileges(out, index).     if (out.getVersion().onOrAfter(Version.V_6_4_0)) {         out.writeMap(application, StreamOutput::writeString, HasPrivilegesResponse::writeResourcePrivileges).     }     if (out.getVersion().onOrAfter(Version.V_6_6_0)) {         out.writeString(username).     } }
false;private,static;2;7;;private static void writeResourcePrivileges(StreamOutput out, Set<ResourcePrivileges> privileges) throws IOException {     out.writeVInt(privileges.size()).     for (ResourcePrivileges priv : privileges) {         out.writeString(priv.getResource()).         out.writeMap(priv.getPrivileges(), StreamOutput::writeString, StreamOutput::writeBoolean).     } }
false;public;0;10;;@Override public String toString() {     return getClass().getSimpleName() + "{" + "username=" + username + "," + "completeMatch=" + completeMatch + "," + "cluster=" + cluster + "," + "index=" + index + "," + "application=" + application + "}". }
false;public;2;20;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().field("username", username).field("has_all_requested", completeMatch).     builder.field("cluster").     builder.map(cluster).     appendResources(builder, "index", index).     builder.startObject("application").     for (String app : application.keySet()) {         appendResources(builder, app, application.get(app)).     }     builder.endObject().     builder.endObject().     return builder. }
false;private;3;9;;private void appendResources(XContentBuilder builder, String field, Set<ResourcePrivileges> privileges) throws IOException {     builder.startObject(field).     for (ResourcePrivileges privilege : privileges) {         builder.field(privilege.getResource()).         builder.map(privilege.getPrivileges()).     }     builder.endObject(). }
