commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;17;/**  * @param type Either {@link #AD_TYPE} or {@link #LDAP_TYPE}  * @return The {@link Setting setting configuration} for this realm type  */ ;/**  * @param type Either {@link #AD_TYPE} or {@link #LDAP_TYPE}  * @return The {@link Setting setting configuration} for this realm type  */ public static Set<Setting.AffixSetting<?>> getSettings(String type) {     Set<Setting.AffixSetting<?>> settings = new HashSet<>().     settings.addAll(CachingUsernamePasswordRealmSettings.getSettings(type)).     settings.addAll(CompositeRoleMapperSettings.getSettings(type)).     settings.add(LdapRealmSettings.EXECUTION_TIMEOUT.apply(type)).     if (AD_TYPE.equals(type)) {         settings.addAll(ActiveDirectorySessionFactorySettings.getSettings()).     } else {         assert LDAP_TYPE.equals(type) : "type [" + type + "] is unknown. expected one of [" + AD_TYPE + ", " + LDAP_TYPE + "]".         settings.addAll(LdapSessionFactorySettings.getSettings()).         settings.addAll(LdapUserSearchSessionFactorySettings.getSettings()).         settings.addAll(DelegatedAuthorizationSettings.getSettings(type)).     }     settings.addAll(LdapMetaDataResolverSettings.getSettings()).     settings.addAll(RealmSettings.getStandardSettings(type)).     return settings. }
