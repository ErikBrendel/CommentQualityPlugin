commented;modifiers;parameterAmount;loc;comment;code
false;;0;3;;String getShrunkIndexPrefix() {     return shrunkIndexPrefix. }
false;public;2;21;;@Override public Result isConditionMet(Index index, ClusterState clusterState) {     IndexMetaData idxMeta = clusterState.getMetaData().index(index).     if (idxMeta == null) {         logger.debug("[{}] lifecycle action for index [{}] executed but index no longer exists", getKey().getAction(), index.getName()).         // Index must have been since deleted, ignore it         return new Result(false, null).     }     String shrunkenIndexSource = IndexMetaData.INDEX_RESIZE_SOURCE_NAME.get(clusterState.metaData().index(index).getSettings()).     if (Strings.isNullOrEmpty(shrunkenIndexSource)) {         throw new IllegalStateException("step[" + NAME + "] is checking an un-shrunken index[" + index.getName() + "]").     }     boolean isConditionMet = index.getName().equals(shrunkIndexPrefix + shrunkenIndexSource) && clusterState.metaData().index(shrunkenIndexSource) == null.     if (isConditionMet) {         return new Result(true, null).     } else {         return new Result(false, new Info(shrunkenIndexSource)).     } }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(super.hashCode(), shrunkIndexPrefix). }
false;public;1;12;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     ShrunkenIndexCheckStep other = (ShrunkenIndexCheckStep) obj.     return super.equals(obj) && Objects.equals(shrunkIndexPrefix, other.shrunkIndexPrefix). }
false;public;0;3;;public String getOriginalIndexName() {     return originalIndexName. }
false;public;2;8;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(MESSAGE.getPreferredName(), message).     builder.field(ORIGINAL_INDEX_NAME.getPreferredName(), originalIndexName).     builder.endObject().     return builder. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(originalIndexName). }
false;public;1;11;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     Info other = (Info) obj.     return Objects.equals(originalIndexName, other.originalIndexName). }
false;public;0;4;;@Override public String toString() {     return Strings.toString(this). }
