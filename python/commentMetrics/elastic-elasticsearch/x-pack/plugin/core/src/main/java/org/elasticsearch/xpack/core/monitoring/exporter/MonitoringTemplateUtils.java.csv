# id;timestamp;commentText;codeText;commentWords;codeWords
MonitoringTemplateUtils -> public static String pipelineName(String id);1524684173;Get a pipeline name for any template ID.__@param id The template identifier._@return Never {@code null} {@link String} prefixed by "xpack_monitoring_" and the {@code id}._@see #TEMPLATE_IDS;public static String pipelineName(String id) {_        return "xpack_monitoring_" + id__    };get,a,pipeline,name,for,any,template,id,param,id,the,template,identifier,return,never,code,null,link,string,prefixed,by,and,the,code,id,see;public,static,string,pipeline,name,string,id,return,id
MonitoringTemplateUtils -> public static String pipelineName(String id);1541592065;Get a pipeline name for any template ID.__@param id The template identifier._@return Never {@code null} {@link String} prefixed by "xpack_monitoring_" and the {@code id}._@see #TEMPLATE_IDS;public static String pipelineName(String id) {_        return "xpack_monitoring_" + id__    };get,a,pipeline,name,for,any,template,id,param,id,the,template,identifier,return,never,code,null,link,string,prefixed,by,and,the,code,id,see;public,static,string,pipeline,name,string,id,return,id
MonitoringTemplateUtils -> public static String pipelineName(String id);1543854368;Get a pipeline name for any template ID.__@param id The template identifier._@return Never {@code null} {@link String} prefixed by "xpack_monitoring_" and the {@code id}._@see #TEMPLATE_IDS;public static String pipelineName(String id) {_        return "xpack_monitoring_" + id__    };get,a,pipeline,name,for,any,template,id,param,id,the,template,identifier,return,never,code,null,link,string,prefixed,by,and,the,code,id,see;public,static,string,pipeline,name,string,id,return,id
MonitoringTemplateUtils -> public static String pipelineName(String id);1549288028;Get a pipeline name for any template ID.__@param id The template identifier._@return Never {@code null} {@link String} prefixed by "xpack_monitoring_" and the {@code id}._@see #TEMPLATE_IDS;public static String pipelineName(String id) {_        return "xpack_monitoring_" + id__    };get,a,pipeline,name,for,any,template,id,param,id,the,template,identifier,return,never,code,null,link,string,prefixed,by,and,the,code,id,see;public,static,string,pipeline,name,string,id,return,id
MonitoringTemplateUtils -> public static XContentBuilder emptyPipeline(final XContentType type);1524684173;Create an empty pipeline._<pre><code>__"description" : "This is a placeholder pipeline ...",_"version": 6000001,_"processors": [ ]__</code></pre>_The expectation is that you will call either {@link Strings#toString(XContentBuilder)} or_{@link BytesReference#bytes(XContentBuilder)}}.__@param type The type of data you want to format for the request_@return Never {@code null}. Always an ended-object._@see #LAST_UPDATED_VERSION;public static XContentBuilder emptyPipeline(final XContentType type) {_        try {_            _            _            return XContentBuilder.builder(type.xContent()).startObject()_                    .field("description", "This is a placeholder pipeline for Monitoring API version " + TEMPLATE_VERSION +_                                                " so that future versions may fix breaking changes.")_                    .field("version", LAST_UPDATED_VERSION)_                    .startArray("processors").endArray()_                    .endObject()__        } catch (final IOException e) {_            throw new RuntimeException("Failed to create empty pipeline", e)__        }_    };create,an,empty,pipeline,pre,code,description,this,is,a,placeholder,pipeline,version,6000001,processors,code,pre,the,expectation,is,that,you,will,call,either,link,strings,to,string,xcontent,builder,or,link,bytes,reference,bytes,xcontent,builder,param,type,the,type,of,data,you,want,to,format,for,the,request,return,never,code,null,always,an,ended,object,see;public,static,xcontent,builder,empty,pipeline,final,xcontent,type,type,try,return,xcontent,builder,builder,type,x,content,start,object,field,description,this,is,a,placeholder,pipeline,for,monitoring,api,version,so,that,future,versions,may,fix,breaking,changes,field,version,start,array,processors,end,array,end,object,catch,final,ioexception,e,throw,new,runtime,exception,failed,to,create,empty,pipeline,e
MonitoringTemplateUtils -> public static XContentBuilder emptyPipeline(final XContentType type);1541592065;Create an empty pipeline._<pre><code>__"description" : "This is a placeholder pipeline ...",_"version": 6000001,_"processors": [ ]__</code></pre>_The expectation is that you will call either {@link Strings#toString(XContentBuilder)} or_{@link BytesReference#bytes(XContentBuilder)}}.__@param type The type of data you want to format for the request_@return Never {@code null}. Always an ended-object._@see #LAST_UPDATED_VERSION;public static XContentBuilder emptyPipeline(final XContentType type) {_        try {_            _            _            return XContentBuilder.builder(type.xContent()).startObject()_                    .field("description", "This is a placeholder pipeline for Monitoring API version " + TEMPLATE_VERSION +_                                                " so that future versions may fix breaking changes.")_                    .field("version", LAST_UPDATED_VERSION)_                    .startArray("processors").endArray()_                    .endObject()__        } catch (final IOException e) {_            throw new RuntimeException("Failed to create empty pipeline", e)__        }_    };create,an,empty,pipeline,pre,code,description,this,is,a,placeholder,pipeline,version,6000001,processors,code,pre,the,expectation,is,that,you,will,call,either,link,strings,to,string,xcontent,builder,or,link,bytes,reference,bytes,xcontent,builder,param,type,the,type,of,data,you,want,to,format,for,the,request,return,never,code,null,always,an,ended,object,see;public,static,xcontent,builder,empty,pipeline,final,xcontent,type,type,try,return,xcontent,builder,builder,type,x,content,start,object,field,description,this,is,a,placeholder,pipeline,for,monitoring,api,version,so,that,future,versions,may,fix,breaking,changes,field,version,start,array,processors,end,array,end,object,catch,final,ioexception,e,throw,new,runtime,exception,failed,to,create,empty,pipeline,e
MonitoringTemplateUtils -> public static XContentBuilder emptyPipeline(final XContentType type);1543854368;Create an empty pipeline._<pre><code>__"description" : "This is a placeholder pipeline ...",_"version": 6000001,_"processors": [ ]__</code></pre>_The expectation is that you will call either {@link Strings#toString(XContentBuilder)} or_{@link BytesReference#bytes(XContentBuilder)}}.__@param type The type of data you want to format for the request_@return Never {@code null}. Always an ended-object._@see #LAST_UPDATED_VERSION;public static XContentBuilder emptyPipeline(final XContentType type) {_        try {_            _            _            return XContentBuilder.builder(type.xContent()).startObject()_                    .field("description", "This is a placeholder pipeline for Monitoring API version " + TEMPLATE_VERSION +_                                                " so that future versions may fix breaking changes.")_                    .field("version", LAST_UPDATED_VERSION)_                    .startArray("processors").endArray()_                    .endObject()__        } catch (final IOException e) {_            throw new RuntimeException("Failed to create empty pipeline", e)__        }_    };create,an,empty,pipeline,pre,code,description,this,is,a,placeholder,pipeline,version,6000001,processors,code,pre,the,expectation,is,that,you,will,call,either,link,strings,to,string,xcontent,builder,or,link,bytes,reference,bytes,xcontent,builder,param,type,the,type,of,data,you,want,to,format,for,the,request,return,never,code,null,always,an,ended,object,see;public,static,xcontent,builder,empty,pipeline,final,xcontent,type,type,try,return,xcontent,builder,builder,type,x,content,start,object,field,description,this,is,a,placeholder,pipeline,for,monitoring,api,version,so,that,future,versions,may,fix,breaking,changes,field,version,start,array,processors,end,array,end,object,catch,final,ioexception,e,throw,new,runtime,exception,failed,to,create,empty,pipeline,e
MonitoringTemplateUtils -> public static XContentBuilder emptyPipeline(final XContentType type);1549288028;Create an empty pipeline._<pre><code>__"description" : "This is a placeholder pipeline ...",_"version": 6000001,_"processors": [ ]__</code></pre>_The expectation is that you will call either {@link Strings#toString(XContentBuilder)} or_{@link BytesReference#bytes(XContentBuilder)}}.__@param type The type of data you want to format for the request_@return Never {@code null}. Always an ended-object._@see #LAST_UPDATED_VERSION;public static XContentBuilder emptyPipeline(final XContentType type) {_        try {_            _            _            return XContentBuilder.builder(type.xContent()).startObject()_                    .field("description", "This is a placeholder pipeline for Monitoring API version " + TEMPLATE_VERSION +_                                                " so that future versions may fix breaking changes.")_                    .field("version", LAST_UPDATED_VERSION)_                    .startArray("processors").endArray()_                    .endObject()__        } catch (final IOException e) {_            throw new RuntimeException("Failed to create empty pipeline", e)__        }_    };create,an,empty,pipeline,pre,code,description,this,is,a,placeholder,pipeline,version,6000001,processors,code,pre,the,expectation,is,that,you,will,call,either,link,strings,to,string,xcontent,builder,or,link,bytes,reference,bytes,xcontent,builder,param,type,the,type,of,data,you,want,to,format,for,the,request,return,never,code,null,always,an,ended,object,see;public,static,xcontent,builder,empty,pipeline,final,xcontent,type,type,try,return,xcontent,builder,builder,type,x,content,start,object,field,description,this,is,a,placeholder,pipeline,for,monitoring,api,version,so,that,future,versions,may,fix,breaking,changes,field,version,start,array,processors,end,array,end,object,catch,final,ioexception,e,throw,new,runtime,exception,failed,to,create,empty,pipeline,e
MonitoringTemplateUtils -> static XContentBuilder pipelineForApiVersion2(final XContentType type);1524684173;Create a pipeline to upgrade documents from {@link MonitoringTemplateUtils#OLD_TEMPLATE_VERSION}_<pre><code>__"description" : "This pipeline upgrades documents ...",_"version": 6000001,_"processors": [ ]__</code></pre>_The expectation is that you will call either {@link Strings#toString(XContentBuilder)} or_{@link BytesReference#bytes(XContentBuilder)}}.__@param type The type of data you want to format for the request_@return Never {@code null}. Always an ended-object._@see #LAST_UPDATED_VERSION;static XContentBuilder pipelineForApiVersion2(final XContentType type) {_        try {_            _            _            return XContentBuilder.builder(type.xContent()).startObject()_                    .field("description", "This pipeline upgrades documents from the older version of the Monitoring API to " +_                                                "the newer version (" + TEMPLATE_VERSION + ") by fixing breaking " +_                                                "changes in those older documents before they are indexed from the older version (" +_                                                OLD_TEMPLATE_VERSION + ").")_                    .field("version", LAST_UPDATED_VERSION)_                    .startArray("processors")_                        .startObject()_                            _                            .startObject("script")_                                .field("source",_                                       "boolean legacyIndex = ctx._index == '.monitoring-data-2'_" +_                                       "if (legacyIndex || ctx._index.startsWith('.monitoring-es-2')) {" +_                                         "if (ctx._type == 'cluster_info') {" +_                                           "ctx._type = 'cluster_stats'_" +_                                           "ctx._id = null_" +_                                         "} else if (legacyIndex || ctx._type == 'cluster_stats' || ctx._type == 'node') {" +_                                           "String index = ctx._index_" +_                                           "Object clusterUuid = ctx.cluster_uuid_" +_                                           "Object timestamp = ctx.timestamp_" +__                                           "ctx.clear()_" +__                                           "ctx._id = 'xpack_monitoring_2_drop_bucket'_" +_                                           "ctx._index = index_" +_                                           "ctx._type = 'legacy_data'_" +_                                           "ctx.timestamp = timestamp_" +_                                           "ctx.cluster_uuid = clusterUuid_" +_                                         "}" +_                                         "if (legacyIndex) {" +_                                           "ctx._index = '<.monitoring-es-" + TEMPLATE_VERSION + "-{now}>'_" +_                                         "}" +_                                       "}")_                            .endObject()_                        .endObject()_                        .startObject()_                            .startObject("rename")_                                .field("field", "_type")_                                .field("target_field", "type")_                            .endObject()_                        .endObject()_                        .startObject()_                            .startObject("set")_                                .field("field", "_type")_                                .field("value", "doc")_                            .endObject()_                        .endObject()_                        .startObject()_                            .startObject("gsub")_                                .field("field", "_index")_                                .field("pattern", "(.monitoring-\\w+-)2(-.+)")_                                .field("replacement", "$1" + TEMPLATE_VERSION + "$2")_                            .endObject()_                        .endObject()_                    .endArray()_                    .endObject()__        } catch (final IOException e) {_            throw new RuntimeException("Failed to create pipeline to upgrade from older version [" + OLD_TEMPLATE_VERSION +_                                       "] to the newer version [" + TEMPLATE_VERSION + "].", e)__        }_    };create,a,pipeline,to,upgrade,documents,from,link,monitoring,template,utils,pre,code,description,this,pipeline,upgrades,documents,version,6000001,processors,code,pre,the,expectation,is,that,you,will,call,either,link,strings,to,string,xcontent,builder,or,link,bytes,reference,bytes,xcontent,builder,param,type,the,type,of,data,you,want,to,format,for,the,request,return,never,code,null,always,an,ended,object,see;static,xcontent,builder,pipeline,for,api,version2,final,xcontent,type,type,try,return,xcontent,builder,builder,type,x,content,start,object,field,description,this,pipeline,upgrades,documents,from,the,older,version,of,the,monitoring,api,to,the,newer,version,by,fixing,breaking,changes,in,those,older,documents,before,they,are,indexed,from,the,older,version,field,version,start,array,processors,start,object,start,object,script,field,source,boolean,legacy,index,ctx,monitoring,data,2,if,legacy,index,ctx,starts,with,monitoring,es,2,if,ctx,ctx,ctx,null,else,if,legacy,index,ctx,ctx,node,string,index,ctx,object,cluster,uuid,ctx,object,timestamp,ctx,timestamp,ctx,clear,ctx,ctx,index,ctx,ctx,timestamp,timestamp,ctx,cluster,uuid,if,legacy,index,ctx,monitoring,es,now,end,object,end,object,start,object,start,object,rename,field,field,field,type,end,object,end,object,start,object,start,object,set,field,field,field,value,doc,end,object,end,object,start,object,start,object,gsub,field,field,field,pattern,monitoring,w,2,field,replacement,1,2,end,object,end,object,end,array,end,object,catch,final,ioexception,e,throw,new,runtime,exception,failed,to,create,pipeline,to,upgrade,from,older,version,to,the,newer,version,e
MonitoringTemplateUtils -> static XContentBuilder pipelineForApiVersion2(final XContentType type);1541592065;Create a pipeline to upgrade documents from {@link MonitoringTemplateUtils#OLD_TEMPLATE_VERSION}_<pre><code>__"description" : "This pipeline upgrades documents ...",_"version": 6000001,_"processors": [ ]__</code></pre>_The expectation is that you will call either {@link Strings#toString(XContentBuilder)} or_{@link BytesReference#bytes(XContentBuilder)}}.__@param type The type of data you want to format for the request_@return Never {@code null}. Always an ended-object._@see #LAST_UPDATED_VERSION;static XContentBuilder pipelineForApiVersion2(final XContentType type) {_        try {_            _            _            return XContentBuilder.builder(type.xContent()).startObject()_                    .field("description", "This pipeline upgrades documents from the older version of the Monitoring API to " +_                                                "the newer version (" + TEMPLATE_VERSION + ") by fixing breaking " +_                                                "changes in those older documents before they are indexed from the older version (" +_                                                OLD_TEMPLATE_VERSION + ").")_                    .field("version", LAST_UPDATED_VERSION)_                    .startArray("processors")_                        .startObject()_                            _                            .startObject("script")_                                .field("source",_                                       "boolean legacyIndex = ctx._index == '.monitoring-data-2'_" +_                                       "if (legacyIndex || ctx._index.startsWith('.monitoring-es-2')) {" +_                                         "if (ctx._type == 'cluster_info') {" +_                                           "ctx._type = 'cluster_stats'_" +_                                           "ctx._id = null_" +_                                         "} else if (legacyIndex || ctx._type == 'cluster_stats' || ctx._type == 'node') {" +_                                           "String index = ctx._index_" +_                                           "Object clusterUuid = ctx.cluster_uuid_" +_                                           "Object timestamp = ctx.timestamp_" +__                                           "ctx.clear()_" +__                                           "ctx._id = 'xpack_monitoring_2_drop_bucket'_" +_                                           "ctx._index = index_" +_                                           "ctx._type = 'legacy_data'_" +_                                           "ctx.timestamp = timestamp_" +_                                           "ctx.cluster_uuid = clusterUuid_" +_                                         "}" +_                                         "if (legacyIndex) {" +_                                           "ctx._index = '<.monitoring-es-" + TEMPLATE_VERSION + "-{now}>'_" +_                                         "}" +_                                       "}")_                            .endObject()_                        .endObject()_                        .startObject()_                            .startObject("rename")_                                .field("field", "_type")_                                .field("target_field", "type")_                            .endObject()_                        .endObject()_                        .startObject()_                            .startObject("set")_                                .field("field", "_type")_                                .field("value", "doc")_                            .endObject()_                        .endObject()_                        .startObject()_                            .startObject("gsub")_                                .field("field", "_index")_                                .field("pattern", "(.monitoring-\\w+-)2(-.+)")_                                .field("replacement", "$1" + TEMPLATE_VERSION + "$2")_                            .endObject()_                        .endObject()_                    .endArray()_                    .endObject()__        } catch (final IOException e) {_            throw new RuntimeException("Failed to create pipeline to upgrade from older version [" + OLD_TEMPLATE_VERSION +_                                       "] to the newer version [" + TEMPLATE_VERSION + "].", e)__        }_    };create,a,pipeline,to,upgrade,documents,from,link,monitoring,template,utils,pre,code,description,this,pipeline,upgrades,documents,version,6000001,processors,code,pre,the,expectation,is,that,you,will,call,either,link,strings,to,string,xcontent,builder,or,link,bytes,reference,bytes,xcontent,builder,param,type,the,type,of,data,you,want,to,format,for,the,request,return,never,code,null,always,an,ended,object,see;static,xcontent,builder,pipeline,for,api,version2,final,xcontent,type,type,try,return,xcontent,builder,builder,type,x,content,start,object,field,description,this,pipeline,upgrades,documents,from,the,older,version,of,the,monitoring,api,to,the,newer,version,by,fixing,breaking,changes,in,those,older,documents,before,they,are,indexed,from,the,older,version,field,version,start,array,processors,start,object,start,object,script,field,source,boolean,legacy,index,ctx,monitoring,data,2,if,legacy,index,ctx,starts,with,monitoring,es,2,if,ctx,ctx,ctx,null,else,if,legacy,index,ctx,ctx,node,string,index,ctx,object,cluster,uuid,ctx,object,timestamp,ctx,timestamp,ctx,clear,ctx,ctx,index,ctx,ctx,timestamp,timestamp,ctx,cluster,uuid,if,legacy,index,ctx,monitoring,es,now,end,object,end,object,start,object,start,object,rename,field,field,field,type,end,object,end,object,start,object,start,object,set,field,field,field,value,doc,end,object,end,object,start,object,start,object,gsub,field,field,field,pattern,monitoring,w,2,field,replacement,1,2,end,object,end,object,end,array,end,object,catch,final,ioexception,e,throw,new,runtime,exception,failed,to,create,pipeline,to,upgrade,from,older,version,to,the,newer,version,e
MonitoringTemplateUtils -> static XContentBuilder pipelineForApiVersion2(final XContentType type);1543854368;Create a pipeline to upgrade documents from {@link MonitoringTemplateUtils#OLD_TEMPLATE_VERSION}_<pre><code>__"description" : "This pipeline upgrades documents ...",_"version": 6000001,_"processors": [ ]__</code></pre>_The expectation is that you will call either {@link Strings#toString(XContentBuilder)} or_{@link BytesReference#bytes(XContentBuilder)}}.__@param type The type of data you want to format for the request_@return Never {@code null}. Always an ended-object._@see #LAST_UPDATED_VERSION;static XContentBuilder pipelineForApiVersion2(final XContentType type) {_        try {_            _            _            return XContentBuilder.builder(type.xContent()).startObject()_                    .field("description", "This pipeline upgrades documents from the older version of the Monitoring API to " +_                                                "the newer version (" + TEMPLATE_VERSION + ") by fixing breaking " +_                                                "changes in those older documents before they are indexed from the older version (" +_                                                OLD_TEMPLATE_VERSION + ").")_                    .field("version", LAST_UPDATED_VERSION)_                    .startArray("processors")_                        .startObject()_                            _                            .startObject("script")_                                .field("source",_                                       "boolean legacyIndex = ctx._index == '.monitoring-data-2'_" +_                                       "if (legacyIndex || ctx._index.startsWith('.monitoring-es-2')) {" +_                                         "if (ctx._type == 'cluster_info') {" +_                                           "ctx._type = 'cluster_stats'_" +_                                           "ctx._id = null_" +_                                         "} else if (legacyIndex || ctx._type == 'cluster_stats' || ctx._type == 'node') {" +_                                           "String index = ctx._index_" +_                                           "Object clusterUuid = ctx.cluster_uuid_" +_                                           "Object timestamp = ctx.timestamp_" +__                                           "ctx.clear()_" +__                                           "ctx._id = 'xpack_monitoring_2_drop_bucket'_" +_                                           "ctx._index = index_" +_                                           "ctx._type = 'legacy_data'_" +_                                           "ctx.timestamp = timestamp_" +_                                           "ctx.cluster_uuid = clusterUuid_" +_                                         "}" +_                                         "if (legacyIndex) {" +_                                           "ctx._index = '<.monitoring-es-" + TEMPLATE_VERSION + "-{now}>'_" +_                                         "}" +_                                       "}")_                            .endObject()_                        .endObject()_                        .startObject()_                            .startObject("rename")_                                .field("field", "_type")_                                .field("target_field", "type")_                            .endObject()_                        .endObject()_                        .startObject()_                            .startObject("set")_                                .field("field", "_type")_                                .field("value", "doc")_                            .endObject()_                        .endObject()_                        .startObject()_                            .startObject("gsub")_                                .field("field", "_index")_                                .field("pattern", "(.monitoring-\\w+-)2(-.+)")_                                .field("replacement", "$1" + TEMPLATE_VERSION + "$2")_                            .endObject()_                        .endObject()_                    .endArray()_                    .endObject()__        } catch (final IOException e) {_            throw new RuntimeException("Failed to create pipeline to upgrade from older version [" + OLD_TEMPLATE_VERSION +_                                       "] to the newer version [" + TEMPLATE_VERSION + "].", e)__        }_    };create,a,pipeline,to,upgrade,documents,from,link,monitoring,template,utils,pre,code,description,this,pipeline,upgrades,documents,version,6000001,processors,code,pre,the,expectation,is,that,you,will,call,either,link,strings,to,string,xcontent,builder,or,link,bytes,reference,bytes,xcontent,builder,param,type,the,type,of,data,you,want,to,format,for,the,request,return,never,code,null,always,an,ended,object,see;static,xcontent,builder,pipeline,for,api,version2,final,xcontent,type,type,try,return,xcontent,builder,builder,type,x,content,start,object,field,description,this,pipeline,upgrades,documents,from,the,older,version,of,the,monitoring,api,to,the,newer,version,by,fixing,breaking,changes,in,those,older,documents,before,they,are,indexed,from,the,older,version,field,version,start,array,processors,start,object,start,object,script,field,source,boolean,legacy,index,ctx,monitoring,data,2,if,legacy,index,ctx,starts,with,monitoring,es,2,if,ctx,ctx,ctx,null,else,if,legacy,index,ctx,ctx,node,string,index,ctx,object,cluster,uuid,ctx,object,timestamp,ctx,timestamp,ctx,clear,ctx,ctx,index,ctx,ctx,timestamp,timestamp,ctx,cluster,uuid,if,legacy,index,ctx,monitoring,es,now,end,object,end,object,start,object,start,object,rename,field,field,field,type,end,object,end,object,start,object,start,object,set,field,field,field,value,doc,end,object,end,object,start,object,start,object,gsub,field,field,field,pattern,monitoring,w,2,field,replacement,1,2,end,object,end,object,end,array,end,object,catch,final,ioexception,e,throw,new,runtime,exception,failed,to,create,pipeline,to,upgrade,from,older,version,to,the,newer,version,e
MonitoringTemplateUtils -> static XContentBuilder pipelineForApiVersion2(final XContentType type);1549288028;Create a pipeline to upgrade documents from {@link MonitoringTemplateUtils#OLD_TEMPLATE_VERSION}_<pre><code>__"description" : "This pipeline upgrades documents ...",_"version": 6000001,_"processors": [ ]__</code></pre>_The expectation is that you will call either {@link Strings#toString(XContentBuilder)} or_{@link BytesReference#bytes(XContentBuilder)}}.__@param type The type of data you want to format for the request_@return Never {@code null}. Always an ended-object._@see #LAST_UPDATED_VERSION;static XContentBuilder pipelineForApiVersion2(final XContentType type) {_        try {_            _            _            return XContentBuilder.builder(type.xContent()).startObject()_                    .field("description", "This pipeline upgrades documents from the older version of the Monitoring API to " +_                                                "the newer version (" + TEMPLATE_VERSION + ") by fixing breaking " +_                                                "changes in those older documents before they are indexed from the older version (" +_                                                OLD_TEMPLATE_VERSION + ").")_                    .field("version", LAST_UPDATED_VERSION)_                    .startArray("processors")_                        .startObject()_                            _                            .startObject("script")_                                .field("source",_                                       "boolean legacyIndex = ctx._index == '.monitoring-data-2'_" +_                                       "if (legacyIndex || ctx._index.startsWith('.monitoring-es-2')) {" +_                                         "if (ctx._type == 'cluster_info') {" +_                                           "ctx._type = 'cluster_stats'_" +_                                           "ctx._id = null_" +_                                         "} else if (legacyIndex || ctx._type == 'cluster_stats' || ctx._type == 'node') {" +_                                           "String index = ctx._index_" +_                                           "Object clusterUuid = ctx.cluster_uuid_" +_                                           "Object timestamp = ctx.timestamp_" +__                                           "ctx.clear()_" +__                                           "ctx._id = 'xpack_monitoring_2_drop_bucket'_" +_                                           "ctx._index = index_" +_                                           "ctx._type = 'legacy_data'_" +_                                           "ctx.timestamp = timestamp_" +_                                           "ctx.cluster_uuid = clusterUuid_" +_                                         "}" +_                                         "if (legacyIndex) {" +_                                           "ctx._index = '<.monitoring-es-" + TEMPLATE_VERSION + "-{now}>'_" +_                                         "}" +_                                       "}")_                            .endObject()_                        .endObject()_                        .startObject()_                            .startObject("rename")_                                .field("field", "_type")_                                .field("target_field", "type")_                            .endObject()_                        .endObject()_                        .startObject()_                            .startObject("set")_                                .field("field", "_type")_                                .field("value", "doc")_                            .endObject()_                        .endObject()_                        .startObject()_                            .startObject("gsub")_                                .field("field", "_index")_                                .field("pattern", "(.monitoring-\\w+-)2(-.+)")_                                .field("replacement", "$1" + TEMPLATE_VERSION + "$2")_                            .endObject()_                        .endObject()_                    .endArray()_                    .endObject()__        } catch (final IOException e) {_            throw new RuntimeException("Failed to create pipeline to upgrade from older version [" + OLD_TEMPLATE_VERSION +_                                       "] to the newer version [" + TEMPLATE_VERSION + "].", e)__        }_    };create,a,pipeline,to,upgrade,documents,from,link,monitoring,template,utils,pre,code,description,this,pipeline,upgrades,documents,version,6000001,processors,code,pre,the,expectation,is,that,you,will,call,either,link,strings,to,string,xcontent,builder,or,link,bytes,reference,bytes,xcontent,builder,param,type,the,type,of,data,you,want,to,format,for,the,request,return,never,code,null,always,an,ended,object,see;static,xcontent,builder,pipeline,for,api,version2,final,xcontent,type,type,try,return,xcontent,builder,builder,type,x,content,start,object,field,description,this,pipeline,upgrades,documents,from,the,older,version,of,the,monitoring,api,to,the,newer,version,by,fixing,breaking,changes,in,those,older,documents,before,they,are,indexed,from,the,older,version,field,version,start,array,processors,start,object,start,object,script,field,source,boolean,legacy,index,ctx,monitoring,data,2,if,legacy,index,ctx,starts,with,monitoring,es,2,if,ctx,ctx,ctx,null,else,if,legacy,index,ctx,ctx,node,string,index,ctx,object,cluster,uuid,ctx,object,timestamp,ctx,timestamp,ctx,clear,ctx,ctx,index,ctx,ctx,timestamp,timestamp,ctx,cluster,uuid,if,legacy,index,ctx,monitoring,es,now,end,object,end,object,start,object,start,object,rename,field,field,field,type,end,object,end,object,start,object,start,object,set,field,field,field,value,doc,end,object,end,object,start,object,start,object,gsub,field,field,field,pattern,monitoring,w,2,field,replacement,1,2,end,object,end,object,end,array,end,object,catch,final,ioexception,e,throw,new,runtime,exception,failed,to,create,pipeline,to,upgrade,from,older,version,to,the,newer,version,e
MonitoringTemplateUtils -> public static XContentBuilder loadPipeline(final String id, final XContentType type);1524684173;Create a pipeline that allows documents for different template versions to be upgraded._<p>_The expectation is that you will call either {@link Strings#toString(XContentBuilder)} or_{@link BytesReference#bytes(XContentBuilder)}}.__@param id The API version (e.g., "2") to use_@param type The type of data you want to format for the request_@return Never {@code null}. Always an ended-object._@throws IllegalArgumentException if {@code apiVersion} is unrecognized_@see #PIPELINE_IDS;public static XContentBuilder loadPipeline(final String id, final XContentType type) {_        switch (id) {_            case TEMPLATE_VERSION:_                return emptyPipeline(type)__            case OLD_TEMPLATE_VERSION:_                return pipelineForApiVersion2(type)__        }__        throw new IllegalArgumentException("unrecognized pipeline API version [" + id + "]")__    };create,a,pipeline,that,allows,documents,for,different,template,versions,to,be,upgraded,p,the,expectation,is,that,you,will,call,either,link,strings,to,string,xcontent,builder,or,link,bytes,reference,bytes,xcontent,builder,param,id,the,api,version,e,g,2,to,use,param,type,the,type,of,data,you,want,to,format,for,the,request,return,never,code,null,always,an,ended,object,throws,illegal,argument,exception,if,code,api,version,is,unrecognized,see;public,static,xcontent,builder,load,pipeline,final,string,id,final,xcontent,type,type,switch,id,case,return,empty,pipeline,type,case,return,pipeline,for,api,version2,type,throw,new,illegal,argument,exception,unrecognized,pipeline,api,version,id
MonitoringTemplateUtils -> public static XContentBuilder loadPipeline(final String id, final XContentType type);1541592065;Create a pipeline that allows documents for different template versions to be upgraded._<p>_The expectation is that you will call either {@link Strings#toString(XContentBuilder)} or_{@link BytesReference#bytes(XContentBuilder)}}.__@param id The API version (e.g., "2") to use_@param type The type of data you want to format for the request_@return Never {@code null}. Always an ended-object._@throws IllegalArgumentException if {@code apiVersion} is unrecognized_@see #PIPELINE_IDS;public static XContentBuilder loadPipeline(final String id, final XContentType type) {_        switch (id) {_            case TEMPLATE_VERSION:_                return emptyPipeline(type)__            case OLD_TEMPLATE_VERSION:_                return pipelineForApiVersion2(type)__        }__        throw new IllegalArgumentException("unrecognized pipeline API version [" + id + "]")__    };create,a,pipeline,that,allows,documents,for,different,template,versions,to,be,upgraded,p,the,expectation,is,that,you,will,call,either,link,strings,to,string,xcontent,builder,or,link,bytes,reference,bytes,xcontent,builder,param,id,the,api,version,e,g,2,to,use,param,type,the,type,of,data,you,want,to,format,for,the,request,return,never,code,null,always,an,ended,object,throws,illegal,argument,exception,if,code,api,version,is,unrecognized,see;public,static,xcontent,builder,load,pipeline,final,string,id,final,xcontent,type,type,switch,id,case,return,empty,pipeline,type,case,return,pipeline,for,api,version2,type,throw,new,illegal,argument,exception,unrecognized,pipeline,api,version,id
MonitoringTemplateUtils -> public static XContentBuilder loadPipeline(final String id, final XContentType type);1543854368;Create a pipeline that allows documents for different template versions to be upgraded._<p>_The expectation is that you will call either {@link Strings#toString(XContentBuilder)} or_{@link BytesReference#bytes(XContentBuilder)}}.__@param id The API version (e.g., "2") to use_@param type The type of data you want to format for the request_@return Never {@code null}. Always an ended-object._@throws IllegalArgumentException if {@code apiVersion} is unrecognized_@see #PIPELINE_IDS;public static XContentBuilder loadPipeline(final String id, final XContentType type) {_        switch (id) {_            case TEMPLATE_VERSION:_                return emptyPipeline(type)__            case OLD_TEMPLATE_VERSION:_                return pipelineForApiVersion2(type)__        }__        throw new IllegalArgumentException("unrecognized pipeline API version [" + id + "]")__    };create,a,pipeline,that,allows,documents,for,different,template,versions,to,be,upgraded,p,the,expectation,is,that,you,will,call,either,link,strings,to,string,xcontent,builder,or,link,bytes,reference,bytes,xcontent,builder,param,id,the,api,version,e,g,2,to,use,param,type,the,type,of,data,you,want,to,format,for,the,request,return,never,code,null,always,an,ended,object,throws,illegal,argument,exception,if,code,api,version,is,unrecognized,see;public,static,xcontent,builder,load,pipeline,final,string,id,final,xcontent,type,type,switch,id,case,return,empty,pipeline,type,case,return,pipeline,for,api,version2,type,throw,new,illegal,argument,exception,unrecognized,pipeline,api,version,id
MonitoringTemplateUtils -> public static XContentBuilder loadPipeline(final String id, final XContentType type);1549288028;Create a pipeline that allows documents for different template versions to be upgraded._<p>_The expectation is that you will call either {@link Strings#toString(XContentBuilder)} or_{@link BytesReference#bytes(XContentBuilder)}}.__@param id The API version (e.g., "2") to use_@param type The type of data you want to format for the request_@return Never {@code null}. Always an ended-object._@throws IllegalArgumentException if {@code apiVersion} is unrecognized_@see #PIPELINE_IDS;public static XContentBuilder loadPipeline(final String id, final XContentType type) {_        switch (id) {_            case TEMPLATE_VERSION:_                return emptyPipeline(type)__            case OLD_TEMPLATE_VERSION:_                return pipelineForApiVersion2(type)__        }__        throw new IllegalArgumentException("unrecognized pipeline API version [" + id + "]")__    };create,a,pipeline,that,allows,documents,for,different,template,versions,to,be,upgraded,p,the,expectation,is,that,you,will,call,either,link,strings,to,string,xcontent,builder,or,link,bytes,reference,bytes,xcontent,builder,param,id,the,api,version,e,g,2,to,use,param,type,the,type,of,data,you,want,to,format,for,the,request,return,never,code,null,always,an,ended,object,throws,illegal,argument,exception,if,code,api,version,is,unrecognized,see;public,static,xcontent,builder,load,pipeline,final,string,id,final,xcontent,type,type,switch,id,case,return,empty,pipeline,type,case,return,pipeline,for,api,version2,type,throw,new,illegal,argument,exception,unrecognized,pipeline,api,version,id
MonitoringTemplateUtils -> public static String indexName(final DateTimeFormatter formatter, final MonitoredSystem system, final long timestamp);1524684173;Get the index name given a specific date format, a monitored system and a timestamp.__@param formatter the {@link DateTimeFormatter} to use to compute the timestamped index name_@param system the {@link MonitoredSystem} for which the index name is computed_@param timestamp the timestamp value to use to compute the timestamped index name_@return the index name as a @{link String};public static String indexName(final DateTimeFormatter formatter, final MonitoredSystem system, final long timestamp) {_        return ".monitoring-" + system.getSystem() + "-" + TEMPLATE_VERSION + "-" + formatter.print(timestamp)__    };get,the,index,name,given,a,specific,date,format,a,monitored,system,and,a,timestamp,param,formatter,the,link,date,time,formatter,to,use,to,compute,the,timestamped,index,name,param,system,the,link,monitored,system,for,which,the,index,name,is,computed,param,timestamp,the,timestamp,value,to,use,to,compute,the,timestamped,index,name,return,the,index,name,as,a,link,string;public,static,string,index,name,final,date,time,formatter,formatter,final,monitored,system,system,final,long,timestamp,return,monitoring,system,get,system,formatter,print,timestamp
MonitoringTemplateUtils -> public static String indexName(final DateTimeFormatter formatter, final MonitoredSystem system, final long timestamp);1541592065;Get the index name given a specific date format, a monitored system and a timestamp.__@param formatter the {@link DateTimeFormatter} to use to compute the timestamped index name_@param system the {@link MonitoredSystem} for which the index name is computed_@param timestamp the timestamp value to use to compute the timestamped index name_@return the index name as a @{link String};public static String indexName(final DateTimeFormatter formatter, final MonitoredSystem system, final long timestamp) {_        return ".monitoring-" + system.getSystem() + "-" + TEMPLATE_VERSION + "-" + formatter.print(timestamp)__    };get,the,index,name,given,a,specific,date,format,a,monitored,system,and,a,timestamp,param,formatter,the,link,date,time,formatter,to,use,to,compute,the,timestamped,index,name,param,system,the,link,monitored,system,for,which,the,index,name,is,computed,param,timestamp,the,timestamp,value,to,use,to,compute,the,timestamped,index,name,return,the,index,name,as,a,link,string;public,static,string,index,name,final,date,time,formatter,formatter,final,monitored,system,system,final,long,timestamp,return,monitoring,system,get,system,formatter,print,timestamp
MonitoringTemplateUtils -> public static String indexName(final DateTimeFormatter formatter, final MonitoredSystem system, final long timestamp);1543854368;Get the index name given a specific date format, a monitored system and a timestamp.__@param formatter the {@link DateTimeFormatter} to use to compute the timestamped index name_@param system the {@link MonitoredSystem} for which the index name is computed_@param timestamp the timestamp value to use to compute the timestamped index name_@return the index name as a @{link String};public static String indexName(final DateTimeFormatter formatter, final MonitoredSystem system, final long timestamp) {_        return ".monitoring-" + system.getSystem() + "-" + TEMPLATE_VERSION + "-" + formatter.print(timestamp)__    };get,the,index,name,given,a,specific,date,format,a,monitored,system,and,a,timestamp,param,formatter,the,link,date,time,formatter,to,use,to,compute,the,timestamped,index,name,param,system,the,link,monitored,system,for,which,the,index,name,is,computed,param,timestamp,the,timestamp,value,to,use,to,compute,the,timestamped,index,name,return,the,index,name,as,a,link,string;public,static,string,index,name,final,date,time,formatter,formatter,final,monitored,system,system,final,long,timestamp,return,monitoring,system,get,system,formatter,print,timestamp
MonitoringTemplateUtils -> public static String createEmptyTemplate(final String id);1524684173;Create a template that does nothing but exist and provide a newer {@code version} so that we know that <em>we</em> created it.__@param id The template identifier._@return Never {@code null}._@see #OLD_TEMPLATE_IDS_@see #OLD_TEMPLATE_VERSION;public static String createEmptyTemplate(final String id) {_        _        return "{\"index_patterns\":[\".monitoring-" + id + "-" + OLD_TEMPLATE_VERSION + "*\"],\"version\":" + LAST_UPDATED_VERSION + "}"__    };create,a,template,that,does,nothing,but,exist,and,provide,a,newer,code,version,so,that,we,know,that,em,we,em,created,it,param,id,the,template,identifier,return,never,code,null,see,see;public,static,string,create,empty,template,final,string,id,return,monitoring,id,version
MonitoringTemplateUtils -> public static String createEmptyTemplate(final String id);1541592065;Create a template that does nothing but exist and provide a newer {@code version} so that we know that <em>we</em> created it.__@param id The template identifier._@return Never {@code null}._@see #OLD_TEMPLATE_IDS_@see #OLD_TEMPLATE_VERSION;public static String createEmptyTemplate(final String id) {_        _        return "{\"index_patterns\":[\".monitoring-" + id + "-" + OLD_TEMPLATE_VERSION + "*\"],\"version\":" + LAST_UPDATED_VERSION + "}"__    };create,a,template,that,does,nothing,but,exist,and,provide,a,newer,code,version,so,that,we,know,that,em,we,em,created,it,param,id,the,template,identifier,return,never,code,null,see,see;public,static,string,create,empty,template,final,string,id,return,monitoring,id,version
MonitoringTemplateUtils -> public static String createEmptyTemplate(final String id);1543854368;Create a template that does nothing but exist and provide a newer {@code version} so that we know that <em>we</em> created it.__@param id The template identifier._@return Never {@code null}._@see #OLD_TEMPLATE_IDS_@see #OLD_TEMPLATE_VERSION;public static String createEmptyTemplate(final String id) {_        _        return "{\"index_patterns\":[\".monitoring-" + id + "-" + OLD_TEMPLATE_VERSION + "*\"],\"version\":" + LAST_UPDATED_VERSION + "}"__    };create,a,template,that,does,nothing,but,exist,and,provide,a,newer,code,version,so,that,we,know,that,em,we,em,created,it,param,id,the,template,identifier,return,never,code,null,see,see;public,static,string,create,empty,template,final,string,id,return,monitoring,id,version
MonitoringTemplateUtils -> public static String createEmptyTemplate(final String id);1549288028;Create a template that does nothing but exist and provide a newer {@code version} so that we know that <em>we</em> created it.__@param id The template identifier._@return Never {@code null}._@see #OLD_TEMPLATE_IDS_@see #OLD_TEMPLATE_VERSION;public static String createEmptyTemplate(final String id) {_        _        return "{\"index_patterns\":[\".monitoring-" + id + "-" + OLD_TEMPLATE_VERSION + "*\"],\"version\":" + LAST_UPDATED_VERSION + "}"__    };create,a,template,that,does,nothing,but,exist,and,provide,a,newer,code,version,so,that,we,know,that,em,we,em,created,it,param,id,the,template,identifier,return,never,code,null,see,see;public,static,string,create,empty,template,final,string,id,return,monitoring,id,version
MonitoringTemplateUtils -> public static String templateName(final String id);1524684173;Get a template name for any template ID.__@param id The template identifier._@return Never {@code null} {@link String} prefixed by ".monitoring-"._@see #TEMPLATE_IDS;public static String templateName(final String id) {_        return ".monitoring-" + id__    };get,a,template,name,for,any,template,id,param,id,the,template,identifier,return,never,code,null,link,string,prefixed,by,monitoring,see;public,static,string,template,name,final,string,id,return,monitoring,id
MonitoringTemplateUtils -> public static String templateName(final String id);1541592065;Get a template name for any template ID.__@param id The template identifier._@return Never {@code null} {@link String} prefixed by ".monitoring-"._@see #TEMPLATE_IDS;public static String templateName(final String id) {_        return ".monitoring-" + id__    };get,a,template,name,for,any,template,id,param,id,the,template,identifier,return,never,code,null,link,string,prefixed,by,monitoring,see;public,static,string,template,name,final,string,id,return,monitoring,id
MonitoringTemplateUtils -> public static String templateName(final String id);1543854368;Get a template name for any template ID.__@param id The template identifier._@return Never {@code null} {@link String} prefixed by ".monitoring-"._@see #TEMPLATE_IDS;public static String templateName(final String id) {_        return ".monitoring-" + id__    };get,a,template,name,for,any,template,id,param,id,the,template,identifier,return,never,code,null,link,string,prefixed,by,monitoring,see;public,static,string,template,name,final,string,id,return,monitoring,id
MonitoringTemplateUtils -> public static String templateName(final String id);1549288028;Get a template name for any template ID.__@param id The template identifier._@return Never {@code null} {@link String} prefixed by ".monitoring-"._@see #TEMPLATE_IDS;public static String templateName(final String id) {_        return ".monitoring-" + id__    };get,a,template,name,for,any,template,id,param,id,the,template,identifier,return,never,code,null,link,string,prefixed,by,monitoring,see;public,static,string,template,name,final,string,id,return,monitoring,id
MonitoringTemplateUtils -> public static String oldTemplateName(final String id);1524684173;Get a template name for any template ID for old templates in the previous version.__@param id The template identifier._@return Never {@code null} {@link String} prefixed by ".monitoring-" and ended by the {@code OLD_TEMPLATE_VERSION}._@see #OLD_TEMPLATE_IDS;public static String oldTemplateName(final String id) {_        return ".monitoring-" + id + "-" + OLD_TEMPLATE_VERSION__    };get,a,template,name,for,any,template,id,for,old,templates,in,the,previous,version,param,id,the,template,identifier,return,never,code,null,link,string,prefixed,by,monitoring,and,ended,by,the,code,see;public,static,string,old,template,name,final,string,id,return,monitoring,id
MonitoringTemplateUtils -> public static String oldTemplateName(final String id);1541592065;Get a template name for any template ID for old templates in the previous version.__@param id The template identifier._@return Never {@code null} {@link String} prefixed by ".monitoring-" and ended by the {@code OLD_TEMPLATE_VERSION}._@see #OLD_TEMPLATE_IDS;public static String oldTemplateName(final String id) {_        return ".monitoring-" + id + "-" + OLD_TEMPLATE_VERSION__    };get,a,template,name,for,any,template,id,for,old,templates,in,the,previous,version,param,id,the,template,identifier,return,never,code,null,link,string,prefixed,by,monitoring,and,ended,by,the,code,see;public,static,string,old,template,name,final,string,id,return,monitoring,id
MonitoringTemplateUtils -> public static String oldTemplateName(final String id);1543854368;Get a template name for any template ID for old templates in the previous version.__@param id The template identifier._@return Never {@code null} {@link String} prefixed by ".monitoring-" and ended by the {@code OLD_TEMPLATE_VERSION}._@see #OLD_TEMPLATE_IDS;public static String oldTemplateName(final String id) {_        return ".monitoring-" + id + "-" + OLD_TEMPLATE_VERSION__    };get,a,template,name,for,any,template,id,for,old,templates,in,the,previous,version,param,id,the,template,identifier,return,never,code,null,link,string,prefixed,by,monitoring,and,ended,by,the,code,see;public,static,string,old,template,name,final,string,id,return,monitoring,id
MonitoringTemplateUtils -> public static String oldTemplateName(final String id);1549288028;Get a template name for any template ID for old templates in the previous version.__@param id The template identifier._@return Never {@code null} {@link String} prefixed by ".monitoring-" and ended by the {@code OLD_TEMPLATE_VERSION}._@see #OLD_TEMPLATE_IDS;public static String oldTemplateName(final String id) {_        return ".monitoring-" + id + "-" + OLD_TEMPLATE_VERSION__    };get,a,template,name,for,any,template,id,for,old,templates,in,the,previous,version,param,id,the,template,identifier,return,never,code,null,link,string,prefixed,by,monitoring,and,ended,by,the,code,see;public,static,string,old,template,name,final,string,id,return,monitoring,id
