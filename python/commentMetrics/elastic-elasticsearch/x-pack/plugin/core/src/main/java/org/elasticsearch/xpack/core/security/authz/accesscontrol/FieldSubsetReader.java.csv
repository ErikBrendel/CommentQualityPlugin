# id;timestamp;commentText;codeText;commentWords;codeWords
FieldSubsetReader -> FieldSubsetReader(LeafReader in, CharacterRunAutomaton filter);1524684173;Wrap a single segment, exposing a subset of its fields.;FieldSubsetReader(LeafReader in, CharacterRunAutomaton filter) {_        super(in)__        ArrayList<FieldInfo> filteredInfos = new ArrayList<>()__        for (FieldInfo fi : in.getFieldInfos()) {_            if (filter.run(fi.name)) {_                filteredInfos.add(fi)__            }_        }_        fieldInfos = new FieldInfos(filteredInfos.toArray(new FieldInfo[filteredInfos.size()]))__        this.filter = filter__    };wrap,a,single,segment,exposing,a,subset,of,its,fields;field,subset,reader,leaf,reader,in,character,run,automaton,filter,super,in,array,list,field,info,filtered,infos,new,array,list,for,field,info,fi,in,get,field,infos,if,filter,run,fi,name,filtered,infos,add,fi,field,infos,new,field,infos,filtered,infos,to,array,new,field,info,filtered,infos,size,this,filter,filter
FieldSubsetReader -> FieldSubsetReader(LeafReader in, CharacterRunAutomaton filter);1527096592;Wrap a single segment, exposing a subset of its fields.;FieldSubsetReader(LeafReader in, CharacterRunAutomaton filter) {_        super(in)__        ArrayList<FieldInfo> filteredInfos = new ArrayList<>()__        for (FieldInfo fi : in.getFieldInfos()) {_            if (filter.run(fi.name)) {_                filteredInfos.add(fi)__            }_        }_        fieldInfos = new FieldInfos(filteredInfos.toArray(new FieldInfo[filteredInfos.size()]))__        this.filter = filter__    };wrap,a,single,segment,exposing,a,subset,of,its,fields;field,subset,reader,leaf,reader,in,character,run,automaton,filter,super,in,array,list,field,info,filtered,infos,new,array,list,for,field,info,fi,in,get,field,infos,if,filter,run,fi,name,filtered,infos,add,fi,field,infos,new,field,infos,filtered,infos,to,array,new,field,info,filtered,infos,size,this,filter,filter
FieldSubsetReader -> private static int step(CharacterRunAutomaton automaton, String key, int state);1524684173;Step through all characters of the provided string, and return the_resulting state, or -1 if that did not lead to a valid state.;private static int step(CharacterRunAutomaton automaton, String key, int state) {_        for (int i = 0_ state != -1 && i < key.length()_ ++i) {_            state = automaton.step(state, key.charAt(i))__        }_        return state__    };step,through,all,characters,of,the,provided,string,and,return,the,resulting,state,or,1,if,that,did,not,lead,to,a,valid,state;private,static,int,step,character,run,automaton,automaton,string,key,int,state,for,int,i,0,state,1,i,key,length,i,state,automaton,step,state,key,char,at,i,return,state
FieldSubsetReader -> private static int step(CharacterRunAutomaton automaton, String key, int state);1527096592;Step through all characters of the provided string, and return the_resulting state, or -1 if that did not lead to a valid state.;private static int step(CharacterRunAutomaton automaton, String key, int state) {_        for (int i = 0_ state != -1 && i < key.length()_ ++i) {_            state = automaton.step(state, key.charAt(i))__        }_        return state__    };step,through,all,characters,of,the,provided,string,and,return,the,resulting,state,or,1,if,that,did,not,lead,to,a,valid,state;private,static,int,step,character,run,automaton,automaton,string,key,int,state,for,int,i,0,state,1,i,key,length,i,state,automaton,step,state,key,char,at,i,return,state
FieldSubsetReader -> private static int step(CharacterRunAutomaton automaton, String key, int state);1535965276;Step through all characters of the provided string, and return the_resulting state, or -1 if that did not lead to a valid state.;private static int step(CharacterRunAutomaton automaton, String key, int state) {_        for (int i = 0_ state != -1 && i < key.length()_ ++i) {_            state = automaton.step(state, key.charAt(i))__        }_        return state__    };step,through,all,characters,of,the,provided,string,and,return,the,resulting,state,or,1,if,that,did,not,lead,to,a,valid,state;private,static,int,step,character,run,automaton,automaton,string,key,int,state,for,int,i,0,state,1,i,key,length,i,state,automaton,step,state,key,char,at,i,return,state
FieldSubsetReader -> private static int step(CharacterRunAutomaton automaton, String key, int state);1536314350;Step through all characters of the provided string, and return the_resulting state, or -1 if that did not lead to a valid state.;private static int step(CharacterRunAutomaton automaton, String key, int state) {_        for (int i = 0_ state != -1 && i < key.length()_ ++i) {_            state = automaton.step(state, key.charAt(i))__        }_        return state__    };step,through,all,characters,of,the,provided,string,and,return,the,resulting,state,or,1,if,that,did,not,lead,to,a,valid,state;private,static,int,step,character,run,automaton,automaton,string,key,int,state,for,int,i,0,state,1,i,key,length,i,state,automaton,step,state,key,char,at,i,return,state
FieldSubsetReader -> private static int step(CharacterRunAutomaton automaton, String key, int state);1551278144;Step through all characters of the provided string, and return the_resulting state, or -1 if that did not lead to a valid state.;private static int step(CharacterRunAutomaton automaton, String key, int state) {_        for (int i = 0_ state != -1 && i < key.length()_ ++i) {_            state = automaton.step(state, key.charAt(i))__        }_        return state__    };step,through,all,characters,of,the,provided,string,and,return,the,resulting,state,or,1,if,that,did,not,lead,to,a,valid,state;private,static,int,step,character,run,automaton,automaton,string,key,int,state,for,int,i,0,state,1,i,key,length,i,state,automaton,step,state,key,char,at,i,return,state
FieldSubsetReader -> FieldNamesTermsEnum -> boolean accept(BytesRef term);1524684173;Return true if term is accepted (matches a field name in this reader).;boolean accept(BytesRef term) {_            return hasField(term.utf8ToString())__        };return,true,if,term,is,accepted,matches,a,field,name,in,this,reader;boolean,accept,bytes,ref,term,return,has,field,term,utf8to,string
FieldSubsetReader -> FieldNamesTermsEnum -> boolean accept(BytesRef term);1527096592;Return true if term is accepted (matches a field name in this reader).;boolean accept(BytesRef term) {_            return hasField(term.utf8ToString())__        };return,true,if,term,is,accepted,matches,a,field,name,in,this,reader;boolean,accept,bytes,ref,term,return,has,field,term,utf8to,string
FieldSubsetReader -> FieldNamesTermsEnum -> boolean accept(BytesRef term);1535965276;Return true if term is accepted (matches a field name in this reader).;boolean accept(BytesRef term) {_            return hasField(term.utf8ToString())__        };return,true,if,term,is,accepted,matches,a,field,name,in,this,reader;boolean,accept,bytes,ref,term,return,has,field,term,utf8to,string
FieldSubsetReader -> FieldNamesTermsEnum -> boolean accept(BytesRef term);1536314350;Return true if term is accepted (matches a field name in this reader).;boolean accept(BytesRef term) {_            return hasField(term.utf8ToString())__        };return,true,if,term,is,accepted,matches,a,field,name,in,this,reader;boolean,accept,bytes,ref,term,return,has,field,term,utf8to,string
FieldSubsetReader -> FieldNamesTermsEnum -> boolean accept(BytesRef term);1551278144;Return true if term is accepted (matches a field name in this reader).;boolean accept(BytesRef term) {_            return hasField(term.utf8ToString())__        };return,true,if,term,is,accepted,matches,a,field,name,in,this,reader;boolean,accept,bytes,ref,term,return,has,field,term,utf8to,string
FieldSubsetReader -> boolean hasField(String field);1524684173;returns true if this field is allowed.;boolean hasField(String field) {_        return fieldInfos.fieldInfo(field) != null__    };returns,true,if,this,field,is,allowed;boolean,has,field,string,field,return,field,infos,field,info,field,null
FieldSubsetReader -> boolean hasField(String field);1527096592;returns true if this field is allowed.;boolean hasField(String field) {_        return fieldInfos.fieldInfo(field) != null__    };returns,true,if,this,field,is,allowed;boolean,has,field,string,field,return,field,infos,field,info,field,null
FieldSubsetReader -> boolean hasField(String field);1535965276;returns true if this field is allowed.;boolean hasField(String field) {_        return fieldInfos.fieldInfo(field) != null__    };returns,true,if,this,field,is,allowed;boolean,has,field,string,field,return,field,infos,field,info,field,null
FieldSubsetReader -> boolean hasField(String field);1536314350;returns true if this field is allowed.;boolean hasField(String field) {_        return fieldInfos.fieldInfo(field) != null__    };returns,true,if,this,field,is,allowed;boolean,has,field,string,field,return,field,infos,field,info,field,null
FieldSubsetReader -> boolean hasField(String field);1551278144;returns true if this field is allowed.;boolean hasField(String field) {_        return fieldInfos.fieldInfo(field) != null__    };returns,true,if,this,field,is,allowed;boolean,has,field,string,field,return,field,infos,field,info,field,null
FieldSubsetReader -> static Map<String, Object> filter(Map<String, ?> map, CharacterRunAutomaton includeAutomaton, int initialState);1524684173;Filter a map by a {@link CharacterRunAutomaton} that defines the fields to retain.;static Map<String, Object> filter(Map<String, ?> map, CharacterRunAutomaton includeAutomaton, int initialState) {_        Map<String, Object> filtered = new HashMap<>()__        for (Map.Entry<String, ?> entry : map.entrySet()) {_            String key = entry.getKey()___            int state = step(includeAutomaton, key, initialState)__            if (state == -1) {_                continue__            }__            Object value = entry.getValue()___            if (value instanceof Map) {_                state = includeAutomaton.step(state, '.')__                if (state == -1) {_                    continue__                }__                Map<String, ?> mapValue = (Map<String, ?>) value__                Map<String, Object> filteredValue = filter(mapValue, includeAutomaton, state)__                if (filteredValue.isEmpty() == false) {_                    filtered.put(key, filteredValue)__                }_            } else if (value instanceof Iterable) {_                Iterable<?> iterableValue = (Iterable<?>) value__                List<Object> filteredValue = filter(iterableValue, includeAutomaton, state)__                if (filteredValue.isEmpty() == false) {_                    filtered.put(key, filteredValue)__                }_            } else if (includeAutomaton.isAccept(state)) {_                filtered.put(key, value)__            }_        }_        return filtered__    };filter,a,map,by,a,link,character,run,automaton,that,defines,the,fields,to,retain;static,map,string,object,filter,map,string,map,character,run,automaton,include,automaton,int,initial,state,map,string,object,filtered,new,hash,map,for,map,entry,string,entry,map,entry,set,string,key,entry,get,key,int,state,step,include,automaton,key,initial,state,if,state,1,continue,object,value,entry,get,value,if,value,instanceof,map,state,include,automaton,step,state,if,state,1,continue,map,string,map,value,map,string,value,map,string,object,filtered,value,filter,map,value,include,automaton,state,if,filtered,value,is,empty,false,filtered,put,key,filtered,value,else,if,value,instanceof,iterable,iterable,iterable,value,iterable,value,list,object,filtered,value,filter,iterable,value,include,automaton,state,if,filtered,value,is,empty,false,filtered,put,key,filtered,value,else,if,include,automaton,is,accept,state,filtered,put,key,value,return,filtered
FieldSubsetReader -> static Map<String, Object> filter(Map<String, ?> map, CharacterRunAutomaton includeAutomaton, int initialState);1527096592;Filter a map by a {@link CharacterRunAutomaton} that defines the fields to retain.;static Map<String, Object> filter(Map<String, ?> map, CharacterRunAutomaton includeAutomaton, int initialState) {_        Map<String, Object> filtered = new HashMap<>()__        for (Map.Entry<String, ?> entry : map.entrySet()) {_            String key = entry.getKey()___            int state = step(includeAutomaton, key, initialState)__            if (state == -1) {_                continue__            }__            Object value = entry.getValue()___            if (value instanceof Map) {_                state = includeAutomaton.step(state, '.')__                if (state == -1) {_                    continue__                }__                Map<String, ?> mapValue = (Map<String, ?>) value__                Map<String, Object> filteredValue = filter(mapValue, includeAutomaton, state)__                if (filteredValue.isEmpty() == false) {_                    filtered.put(key, filteredValue)__                }_            } else if (value instanceof Iterable) {_                Iterable<?> iterableValue = (Iterable<?>) value__                List<Object> filteredValue = filter(iterableValue, includeAutomaton, state)__                if (filteredValue.isEmpty() == false) {_                    filtered.put(key, filteredValue)__                }_            } else if (includeAutomaton.isAccept(state)) {_                filtered.put(key, value)__            }_        }_        return filtered__    };filter,a,map,by,a,link,character,run,automaton,that,defines,the,fields,to,retain;static,map,string,object,filter,map,string,map,character,run,automaton,include,automaton,int,initial,state,map,string,object,filtered,new,hash,map,for,map,entry,string,entry,map,entry,set,string,key,entry,get,key,int,state,step,include,automaton,key,initial,state,if,state,1,continue,object,value,entry,get,value,if,value,instanceof,map,state,include,automaton,step,state,if,state,1,continue,map,string,map,value,map,string,value,map,string,object,filtered,value,filter,map,value,include,automaton,state,if,filtered,value,is,empty,false,filtered,put,key,filtered,value,else,if,value,instanceof,iterable,iterable,iterable,value,iterable,value,list,object,filtered,value,filter,iterable,value,include,automaton,state,if,filtered,value,is,empty,false,filtered,put,key,filtered,value,else,if,include,automaton,is,accept,state,filtered,put,key,value,return,filtered
FieldSubsetReader -> static Map<String, Object> filter(Map<String, ?> map, CharacterRunAutomaton includeAutomaton, int initialState);1535965276;Filter a map by a {@link CharacterRunAutomaton} that defines the fields to retain.;static Map<String, Object> filter(Map<String, ?> map, CharacterRunAutomaton includeAutomaton, int initialState) {_        Map<String, Object> filtered = new HashMap<>()__        for (Map.Entry<String, ?> entry : map.entrySet()) {_            String key = entry.getKey()___            int state = step(includeAutomaton, key, initialState)__            if (state == -1) {_                continue__            }__            Object value = entry.getValue()___            if (value instanceof Map) {_                state = includeAutomaton.step(state, '.')__                if (state == -1) {_                    continue__                }__                Map<String, ?> mapValue = (Map<String, ?>) value__                Map<String, Object> filteredValue = filter(mapValue, includeAutomaton, state)__                if (filteredValue.isEmpty() == false) {_                    filtered.put(key, filteredValue)__                }_            } else if (value instanceof Iterable) {_                Iterable<?> iterableValue = (Iterable<?>) value__                List<Object> filteredValue = filter(iterableValue, includeAutomaton, state)__                if (filteredValue.isEmpty() == false) {_                    filtered.put(key, filteredValue)__                }_            } else if (includeAutomaton.isAccept(state)) {_                filtered.put(key, value)__            }_        }_        return filtered__    };filter,a,map,by,a,link,character,run,automaton,that,defines,the,fields,to,retain;static,map,string,object,filter,map,string,map,character,run,automaton,include,automaton,int,initial,state,map,string,object,filtered,new,hash,map,for,map,entry,string,entry,map,entry,set,string,key,entry,get,key,int,state,step,include,automaton,key,initial,state,if,state,1,continue,object,value,entry,get,value,if,value,instanceof,map,state,include,automaton,step,state,if,state,1,continue,map,string,map,value,map,string,value,map,string,object,filtered,value,filter,map,value,include,automaton,state,if,filtered,value,is,empty,false,filtered,put,key,filtered,value,else,if,value,instanceof,iterable,iterable,iterable,value,iterable,value,list,object,filtered,value,filter,iterable,value,include,automaton,state,if,filtered,value,is,empty,false,filtered,put,key,filtered,value,else,if,include,automaton,is,accept,state,filtered,put,key,value,return,filtered
FieldSubsetReader -> static Map<String, Object> filter(Map<String, ?> map, CharacterRunAutomaton includeAutomaton, int initialState);1536314350;Filter a map by a {@link CharacterRunAutomaton} that defines the fields to retain.;static Map<String, Object> filter(Map<String, ?> map, CharacterRunAutomaton includeAutomaton, int initialState) {_        Map<String, Object> filtered = new HashMap<>()__        for (Map.Entry<String, ?> entry : map.entrySet()) {_            String key = entry.getKey()___            int state = step(includeAutomaton, key, initialState)__            if (state == -1) {_                continue__            }__            Object value = entry.getValue()___            if (value instanceof Map) {_                state = includeAutomaton.step(state, '.')__                if (state == -1) {_                    continue__                }__                Map<String, ?> mapValue = (Map<String, ?>) value__                Map<String, Object> filteredValue = filter(mapValue, includeAutomaton, state)__                if (filteredValue.isEmpty() == false) {_                    filtered.put(key, filteredValue)__                }_            } else if (value instanceof Iterable) {_                Iterable<?> iterableValue = (Iterable<?>) value__                List<Object> filteredValue = filter(iterableValue, includeAutomaton, state)__                if (filteredValue.isEmpty() == false) {_                    filtered.put(key, filteredValue)__                }_            } else if (includeAutomaton.isAccept(state)) {_                filtered.put(key, value)__            }_        }_        return filtered__    };filter,a,map,by,a,link,character,run,automaton,that,defines,the,fields,to,retain;static,map,string,object,filter,map,string,map,character,run,automaton,include,automaton,int,initial,state,map,string,object,filtered,new,hash,map,for,map,entry,string,entry,map,entry,set,string,key,entry,get,key,int,state,step,include,automaton,key,initial,state,if,state,1,continue,object,value,entry,get,value,if,value,instanceof,map,state,include,automaton,step,state,if,state,1,continue,map,string,map,value,map,string,value,map,string,object,filtered,value,filter,map,value,include,automaton,state,if,filtered,value,is,empty,false,filtered,put,key,filtered,value,else,if,value,instanceof,iterable,iterable,iterable,value,iterable,value,list,object,filtered,value,filter,iterable,value,include,automaton,state,if,filtered,value,is,empty,false,filtered,put,key,filtered,value,else,if,include,automaton,is,accept,state,filtered,put,key,value,return,filtered
FieldSubsetReader -> static Map<String, Object> filter(Map<String, ?> map, CharacterRunAutomaton includeAutomaton, int initialState);1551278144;Filter a map by a {@link CharacterRunAutomaton} that defines the fields to retain.;static Map<String, Object> filter(Map<String, ?> map, CharacterRunAutomaton includeAutomaton, int initialState) {_        Map<String, Object> filtered = new HashMap<>()__        for (Map.Entry<String, ?> entry : map.entrySet()) {_            String key = entry.getKey()___            int state = step(includeAutomaton, key, initialState)__            if (state == -1) {_                continue__            }__            Object value = entry.getValue()___            if (value instanceof Map) {_                state = includeAutomaton.step(state, '.')__                if (state == -1) {_                    continue__                }__                Map<String, ?> mapValue = (Map<String, ?>) value__                Map<String, Object> filteredValue = filter(mapValue, includeAutomaton, state)__                if (filteredValue.isEmpty() == false) {_                    filtered.put(key, filteredValue)__                }_            } else if (value instanceof Iterable) {_                Iterable<?> iterableValue = (Iterable<?>) value__                List<Object> filteredValue = filter(iterableValue, includeAutomaton, state)__                if (filteredValue.isEmpty() == false) {_                    filtered.put(key, filteredValue)__                }_            } else if (includeAutomaton.isAccept(state)) {_                filtered.put(key, value)__            }_        }_        return filtered__    };filter,a,map,by,a,link,character,run,automaton,that,defines,the,fields,to,retain;static,map,string,object,filter,map,string,map,character,run,automaton,include,automaton,int,initial,state,map,string,object,filtered,new,hash,map,for,map,entry,string,entry,map,entry,set,string,key,entry,get,key,int,state,step,include,automaton,key,initial,state,if,state,1,continue,object,value,entry,get,value,if,value,instanceof,map,state,include,automaton,step,state,if,state,1,continue,map,string,map,value,map,string,value,map,string,object,filtered,value,filter,map,value,include,automaton,state,if,filtered,value,is,empty,false,filtered,put,key,filtered,value,else,if,value,instanceof,iterable,iterable,iterable,value,iterable,value,list,object,filtered,value,filter,iterable,value,include,automaton,state,if,filtered,value,is,empty,false,filtered,put,key,filtered,value,else,if,include,automaton,is,accept,state,filtered,put,key,value,return,filtered
FieldSubsetReader -> public static DirectoryReader wrap(DirectoryReader in, CharacterRunAutomaton filter) throws IOException;1524684173;Wraps a provided DirectoryReader, exposing a subset of fields._<p>_Note that for convenience, the returned reader_can be used normally (e.g. passed to {@link DirectoryReader#openIfChanged(DirectoryReader)})_and so on._@param in reader to filter_@param filter fields to filter.;public static DirectoryReader wrap(DirectoryReader in, CharacterRunAutomaton filter) throws IOException {_        return new FieldSubsetDirectoryReader(in, filter)__    };wraps,a,provided,directory,reader,exposing,a,subset,of,fields,p,note,that,for,convenience,the,returned,reader,can,be,used,normally,e,g,passed,to,link,directory,reader,open,if,changed,directory,reader,and,so,on,param,in,reader,to,filter,param,filter,fields,to,filter;public,static,directory,reader,wrap,directory,reader,in,character,run,automaton,filter,throws,ioexception,return,new,field,subset,directory,reader,in,filter
FieldSubsetReader -> public static DirectoryReader wrap(DirectoryReader in, CharacterRunAutomaton filter) throws IOException;1527096592;Wraps a provided DirectoryReader, exposing a subset of fields._<p>_Note that for convenience, the returned reader_can be used normally (e.g. passed to {@link DirectoryReader#openIfChanged(DirectoryReader)})_and so on._@param in reader to filter_@param filter fields to filter.;public static DirectoryReader wrap(DirectoryReader in, CharacterRunAutomaton filter) throws IOException {_        return new FieldSubsetDirectoryReader(in, filter)__    };wraps,a,provided,directory,reader,exposing,a,subset,of,fields,p,note,that,for,convenience,the,returned,reader,can,be,used,normally,e,g,passed,to,link,directory,reader,open,if,changed,directory,reader,and,so,on,param,in,reader,to,filter,param,filter,fields,to,filter;public,static,directory,reader,wrap,directory,reader,in,character,run,automaton,filter,throws,ioexception,return,new,field,subset,directory,reader,in,filter
FieldSubsetReader -> public static DirectoryReader wrap(DirectoryReader in, CharacterRunAutomaton filter) throws IOException;1535965276;Wraps a provided DirectoryReader, exposing a subset of fields._<p>_Note that for convenience, the returned reader_can be used normally (e.g. passed to {@link DirectoryReader#openIfChanged(DirectoryReader)})_and so on._@param in reader to filter_@param filter fields to filter.;public static DirectoryReader wrap(DirectoryReader in, CharacterRunAutomaton filter) throws IOException {_        return new FieldSubsetDirectoryReader(in, filter)__    };wraps,a,provided,directory,reader,exposing,a,subset,of,fields,p,note,that,for,convenience,the,returned,reader,can,be,used,normally,e,g,passed,to,link,directory,reader,open,if,changed,directory,reader,and,so,on,param,in,reader,to,filter,param,filter,fields,to,filter;public,static,directory,reader,wrap,directory,reader,in,character,run,automaton,filter,throws,ioexception,return,new,field,subset,directory,reader,in,filter
FieldSubsetReader -> public static DirectoryReader wrap(DirectoryReader in, CharacterRunAutomaton filter) throws IOException;1536314350;Wraps a provided DirectoryReader, exposing a subset of fields._<p>_Note that for convenience, the returned reader_can be used normally (e.g. passed to {@link DirectoryReader#openIfChanged(DirectoryReader)})_and so on._@param in reader to filter_@param filter fields to filter.;public static DirectoryReader wrap(DirectoryReader in, CharacterRunAutomaton filter) throws IOException {_        return new FieldSubsetDirectoryReader(in, filter)__    };wraps,a,provided,directory,reader,exposing,a,subset,of,fields,p,note,that,for,convenience,the,returned,reader,can,be,used,normally,e,g,passed,to,link,directory,reader,open,if,changed,directory,reader,and,so,on,param,in,reader,to,filter,param,filter,fields,to,filter;public,static,directory,reader,wrap,directory,reader,in,character,run,automaton,filter,throws,ioexception,return,new,field,subset,directory,reader,in,filter
FieldSubsetReader -> public static DirectoryReader wrap(DirectoryReader in, CharacterRunAutomaton filter) throws IOException;1551278144;Wraps a provided DirectoryReader, exposing a subset of fields._<p>_Note that for convenience, the returned reader_can be used normally (e.g. passed to {@link DirectoryReader#openIfChanged(DirectoryReader)})_and so on._@param in reader to filter_@param filter fields to filter.;public static DirectoryReader wrap(DirectoryReader in, CharacterRunAutomaton filter) throws IOException {_        return new FieldSubsetDirectoryReader(in, filter)__    };wraps,a,provided,directory,reader,exposing,a,subset,of,fields,p,note,that,for,convenience,the,returned,reader,can,be,used,normally,e,g,passed,to,link,directory,reader,open,if,changed,directory,reader,and,so,on,param,in,reader,to,filter,param,filter,fields,to,filter;public,static,directory,reader,wrap,directory,reader,in,character,run,automaton,filter,throws,ioexception,return,new,field,subset,directory,reader,in,filter
FieldSubsetReader -> FieldSubsetDirectoryReader -> CharacterRunAutomaton getFilter();1524684173;Return the automaton that is used to filter fields.;CharacterRunAutomaton getFilter() {_            return filter__        };return,the,automaton,that,is,used,to,filter,fields;character,run,automaton,get,filter,return,filter
FieldSubsetReader -> FieldSubsetDirectoryReader -> CharacterRunAutomaton getFilter();1527096592;Return the automaton that is used to filter fields.;CharacterRunAutomaton getFilter() {_            return filter__        };return,the,automaton,that,is,used,to,filter,fields;character,run,automaton,get,filter,return,filter
FieldSubsetReader -> FieldSubsetDirectoryReader -> CharacterRunAutomaton getFilter();1535965276;Return the automaton that is used to filter fields.;CharacterRunAutomaton getFilter() {_            return filter__        };return,the,automaton,that,is,used,to,filter,fields;character,run,automaton,get,filter,return,filter
FieldSubsetReader -> FieldSubsetDirectoryReader -> CharacterRunAutomaton getFilter();1536314350;Return the automaton that is used to filter fields.;CharacterRunAutomaton getFilter() {_            return filter__        };return,the,automaton,that,is,used,to,filter,fields;character,run,automaton,get,filter,return,filter
FieldSubsetReader -> FieldSubsetDirectoryReader -> CharacterRunAutomaton getFilter();1551278144;Return the automaton that is used to filter fields.;CharacterRunAutomaton getFilter() {_            return filter__        };return,the,automaton,that,is,used,to,filter,fields;character,run,automaton,get,filter,return,filter
FieldSubsetReader -> FieldSubsetReader(LeafReader in, CharacterRunAutomaton filter) throws IOException;1535965276;Wrap a single segment, exposing a subset of its fields.;FieldSubsetReader(LeafReader in, CharacterRunAutomaton filter) throws IOException {_        super(in)__        ArrayList<FieldInfo> filteredInfos = new ArrayList<>()__        for (FieldInfo fi : in.getFieldInfos()) {_            if (filter.run(fi.name)) {_                filteredInfos.add(fi)__            }_        }_        fieldInfos = new FieldInfos(filteredInfos.toArray(new FieldInfo[filteredInfos.size()]))__        this.filter = filter__        final Terms fieldNameTerms = super.terms(FieldNamesFieldMapper.NAME)__        this.fieldNamesFilterTerms = fieldNameTerms == null ? null : new FieldNamesTerms(fieldNameTerms)__    };wrap,a,single,segment,exposing,a,subset,of,its,fields;field,subset,reader,leaf,reader,in,character,run,automaton,filter,throws,ioexception,super,in,array,list,field,info,filtered,infos,new,array,list,for,field,info,fi,in,get,field,infos,if,filter,run,fi,name,filtered,infos,add,fi,field,infos,new,field,infos,filtered,infos,to,array,new,field,info,filtered,infos,size,this,filter,filter,final,terms,field,name,terms,super,terms,field,names,field,mapper,name,this,field,names,filter,terms,field,name,terms,null,null,new,field,names,terms,field,name,terms
FieldSubsetReader -> FieldSubsetReader(LeafReader in, CharacterRunAutomaton filter) throws IOException;1536314350;Wrap a single segment, exposing a subset of its fields.;FieldSubsetReader(LeafReader in, CharacterRunAutomaton filter) throws IOException {_        super(in)__        ArrayList<FieldInfo> filteredInfos = new ArrayList<>()__        for (FieldInfo fi : in.getFieldInfos()) {_            if (filter.run(fi.name)) {_                filteredInfos.add(fi)__            }_        }_        fieldInfos = new FieldInfos(filteredInfos.toArray(new FieldInfo[filteredInfos.size()]))__        this.filter = filter__        final Terms fieldNameTerms = super.terms(FieldNamesFieldMapper.NAME)__        this.fieldNamesFilterTerms = fieldNameTerms == null ? null : new FieldNamesTerms(fieldNameTerms)__    };wrap,a,single,segment,exposing,a,subset,of,its,fields;field,subset,reader,leaf,reader,in,character,run,automaton,filter,throws,ioexception,super,in,array,list,field,info,filtered,infos,new,array,list,for,field,info,fi,in,get,field,infos,if,filter,run,fi,name,filtered,infos,add,fi,field,infos,new,field,infos,filtered,infos,to,array,new,field,info,filtered,infos,size,this,filter,filter,final,terms,field,name,terms,super,terms,field,names,field,mapper,name,this,field,names,filter,terms,field,name,terms,null,null,new,field,names,terms,field,name,terms
FieldSubsetReader -> FieldSubsetReader(LeafReader in, CharacterRunAutomaton filter) throws IOException;1551278144;Wrap a single segment, exposing a subset of its fields.;FieldSubsetReader(LeafReader in, CharacterRunAutomaton filter) throws IOException {_        super(in)__        ArrayList<FieldInfo> filteredInfos = new ArrayList<>()__        for (FieldInfo fi : in.getFieldInfos()) {_            if (filter.run(fi.name)) {_                filteredInfos.add(fi)__            }_        }_        fieldInfos = new FieldInfos(filteredInfos.toArray(new FieldInfo[filteredInfos.size()]))__        this.filter = filter__        final Terms fieldNameTerms = super.terms(FieldNamesFieldMapper.NAME)__        this.fieldNamesFilterTerms = fieldNameTerms == null ? null : new FieldNamesTerms(fieldNameTerms)__    };wrap,a,single,segment,exposing,a,subset,of,its,fields;field,subset,reader,leaf,reader,in,character,run,automaton,filter,throws,ioexception,super,in,array,list,field,info,filtered,infos,new,array,list,for,field,info,fi,in,get,field,infos,if,filter,run,fi,name,filtered,infos,add,fi,field,infos,new,field,infos,filtered,infos,to,array,new,field,info,filtered,infos,size,this,filter,filter,final,terms,field,name,terms,super,terms,field,names,field,mapper,name,this,field,names,filter,terms,field,name,terms,null,null,new,field,names,terms,field,name,terms
FieldSubsetReader -> private static List<Object> filter(Iterable<?> iterable, CharacterRunAutomaton includeAutomaton, int initialState);1524684173;Filter a list by a {@link CharacterRunAutomaton} that defines the fields to retain.;private static List<Object> filter(Iterable<?> iterable, CharacterRunAutomaton includeAutomaton, int initialState) {_        List<Object> filtered = new ArrayList<>()__        for (Object value : iterable) {_            if (value instanceof Map) {_                int state = includeAutomaton.step(initialState, '.')__                if (state == -1) {_                    continue__                }_                Map<String, Object> filteredValue = filter((Map<String, ?>)value, includeAutomaton, state)__                if (filteredValue.isEmpty() == false) {_                    filtered.add(filteredValue)__                }_            } else if (value instanceof Iterable) {_                List<Object> filteredValue = filter((Iterable<?>) value, includeAutomaton, initialState)__                if (filteredValue.isEmpty() == false) {_                    filtered.add(filteredValue)__                }_            } else if (includeAutomaton.isAccept(initialState)) {_                filtered.add(value)__            }_        }_        return filtered__    };filter,a,list,by,a,link,character,run,automaton,that,defines,the,fields,to,retain;private,static,list,object,filter,iterable,iterable,character,run,automaton,include,automaton,int,initial,state,list,object,filtered,new,array,list,for,object,value,iterable,if,value,instanceof,map,int,state,include,automaton,step,initial,state,if,state,1,continue,map,string,object,filtered,value,filter,map,string,value,include,automaton,state,if,filtered,value,is,empty,false,filtered,add,filtered,value,else,if,value,instanceof,iterable,list,object,filtered,value,filter,iterable,value,include,automaton,initial,state,if,filtered,value,is,empty,false,filtered,add,filtered,value,else,if,include,automaton,is,accept,initial,state,filtered,add,value,return,filtered
FieldSubsetReader -> private static List<Object> filter(Iterable<?> iterable, CharacterRunAutomaton includeAutomaton, int initialState);1527096592;Filter a list by a {@link CharacterRunAutomaton} that defines the fields to retain.;private static List<Object> filter(Iterable<?> iterable, CharacterRunAutomaton includeAutomaton, int initialState) {_        List<Object> filtered = new ArrayList<>()__        for (Object value : iterable) {_            if (value instanceof Map) {_                int state = includeAutomaton.step(initialState, '.')__                if (state == -1) {_                    continue__                }_                Map<String, Object> filteredValue = filter((Map<String, ?>)value, includeAutomaton, state)__                filtered.add(filteredValue)__            } else if (value instanceof Iterable) {_                List<Object> filteredValue = filter((Iterable<?>) value, includeAutomaton, initialState)__                if (filteredValue.isEmpty() == false) {_                    filtered.add(filteredValue)__                }_            } else if (includeAutomaton.isAccept(initialState)) {_                filtered.add(value)__            }_        }_        return filtered__    };filter,a,list,by,a,link,character,run,automaton,that,defines,the,fields,to,retain;private,static,list,object,filter,iterable,iterable,character,run,automaton,include,automaton,int,initial,state,list,object,filtered,new,array,list,for,object,value,iterable,if,value,instanceof,map,int,state,include,automaton,step,initial,state,if,state,1,continue,map,string,object,filtered,value,filter,map,string,value,include,automaton,state,filtered,add,filtered,value,else,if,value,instanceof,iterable,list,object,filtered,value,filter,iterable,value,include,automaton,initial,state,if,filtered,value,is,empty,false,filtered,add,filtered,value,else,if,include,automaton,is,accept,initial,state,filtered,add,value,return,filtered
FieldSubsetReader -> private static List<Object> filter(Iterable<?> iterable, CharacterRunAutomaton includeAutomaton, int initialState);1535965276;Filter a list by a {@link CharacterRunAutomaton} that defines the fields to retain.;private static List<Object> filter(Iterable<?> iterable, CharacterRunAutomaton includeAutomaton, int initialState) {_        List<Object> filtered = new ArrayList<>()__        for (Object value : iterable) {_            if (value instanceof Map) {_                int state = includeAutomaton.step(initialState, '.')__                if (state == -1) {_                    continue__                }_                Map<String, Object> filteredValue = filter((Map<String, ?>)value, includeAutomaton, state)__                filtered.add(filteredValue)__            } else if (value instanceof Iterable) {_                List<Object> filteredValue = filter((Iterable<?>) value, includeAutomaton, initialState)__                if (filteredValue.isEmpty() == false) {_                    filtered.add(filteredValue)__                }_            } else if (includeAutomaton.isAccept(initialState)) {_                filtered.add(value)__            }_        }_        return filtered__    };filter,a,list,by,a,link,character,run,automaton,that,defines,the,fields,to,retain;private,static,list,object,filter,iterable,iterable,character,run,automaton,include,automaton,int,initial,state,list,object,filtered,new,array,list,for,object,value,iterable,if,value,instanceof,map,int,state,include,automaton,step,initial,state,if,state,1,continue,map,string,object,filtered,value,filter,map,string,value,include,automaton,state,filtered,add,filtered,value,else,if,value,instanceof,iterable,list,object,filtered,value,filter,iterable,value,include,automaton,initial,state,if,filtered,value,is,empty,false,filtered,add,filtered,value,else,if,include,automaton,is,accept,initial,state,filtered,add,value,return,filtered
FieldSubsetReader -> private static List<Object> filter(Iterable<?> iterable, CharacterRunAutomaton includeAutomaton, int initialState);1536314350;Filter a list by a {@link CharacterRunAutomaton} that defines the fields to retain.;private static List<Object> filter(Iterable<?> iterable, CharacterRunAutomaton includeAutomaton, int initialState) {_        List<Object> filtered = new ArrayList<>()__        for (Object value : iterable) {_            if (value instanceof Map) {_                int state = includeAutomaton.step(initialState, '.')__                if (state == -1) {_                    continue__                }_                Map<String, Object> filteredValue = filter((Map<String, ?>)value, includeAutomaton, state)__                filtered.add(filteredValue)__            } else if (value instanceof Iterable) {_                List<Object> filteredValue = filter((Iterable<?>) value, includeAutomaton, initialState)__                if (filteredValue.isEmpty() == false) {_                    filtered.add(filteredValue)__                }_            } else if (includeAutomaton.isAccept(initialState)) {_                filtered.add(value)__            }_        }_        return filtered__    };filter,a,list,by,a,link,character,run,automaton,that,defines,the,fields,to,retain;private,static,list,object,filter,iterable,iterable,character,run,automaton,include,automaton,int,initial,state,list,object,filtered,new,array,list,for,object,value,iterable,if,value,instanceof,map,int,state,include,automaton,step,initial,state,if,state,1,continue,map,string,object,filtered,value,filter,map,string,value,include,automaton,state,filtered,add,filtered,value,else,if,value,instanceof,iterable,list,object,filtered,value,filter,iterable,value,include,automaton,initial,state,if,filtered,value,is,empty,false,filtered,add,filtered,value,else,if,include,automaton,is,accept,initial,state,filtered,add,value,return,filtered
FieldSubsetReader -> private static List<Object> filter(Iterable<?> iterable, CharacterRunAutomaton includeAutomaton, int initialState);1551278144;Filter a list by a {@link CharacterRunAutomaton} that defines the fields to retain.;private static List<Object> filter(Iterable<?> iterable, CharacterRunAutomaton includeAutomaton, int initialState) {_        List<Object> filtered = new ArrayList<>()__        for (Object value : iterable) {_            if (value instanceof Map) {_                int state = includeAutomaton.step(initialState, '.')__                if (state == -1) {_                    continue__                }_                Map<String, Object> filteredValue = filter((Map<String, ?>)value, includeAutomaton, state)__                filtered.add(filteredValue)__            } else if (value instanceof Iterable) {_                List<Object> filteredValue = filter((Iterable<?>) value, includeAutomaton, initialState)__                if (filteredValue.isEmpty() == false) {_                    filtered.add(filteredValue)__                }_            } else if (includeAutomaton.isAccept(initialState)) {_                filtered.add(value)__            }_        }_        return filtered__    };filter,a,list,by,a,link,character,run,automaton,that,defines,the,fields,to,retain;private,static,list,object,filter,iterable,iterable,character,run,automaton,include,automaton,int,initial,state,list,object,filtered,new,array,list,for,object,value,iterable,if,value,instanceof,map,int,state,include,automaton,step,initial,state,if,state,1,continue,map,string,object,filtered,value,filter,map,string,value,include,automaton,state,filtered,add,filtered,value,else,if,value,instanceof,iterable,list,object,filtered,value,filter,iterable,value,include,automaton,initial,state,if,filtered,value,is,empty,false,filtered,add,filtered,value,else,if,include,automaton,is,accept,initial,state,filtered,add,value,return,filtered
