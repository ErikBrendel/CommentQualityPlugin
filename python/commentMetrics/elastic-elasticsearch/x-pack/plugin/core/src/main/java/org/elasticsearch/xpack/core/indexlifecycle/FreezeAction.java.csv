commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;3;;public static FreezeAction parse(XContentParser parser) {     return PARSER.apply(parser, null). }
false;public;1;3;;@Override public void writeTo(StreamOutput out) throws IOException { }
false;public;0;4;;@Override public String getWriteableName() {     return NAME. }
false;public;2;6;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.endObject().     return builder. }
false;public;0;4;;@Override public boolean isSafeAction() {     return true. }
false;public;3;6;;@Override public List<Step> toSteps(Client client, String phase, StepKey nextStepKey) {     StepKey freezeStepKey = new StepKey(phase, NAME, FreezeStep.NAME).     FreezeStep freezeStep = new FreezeStep(freezeStepKey, nextStepKey, client).     return Arrays.asList(freezeStep). }
false;public;1;5;;@Override public List<StepKey> toStepKeys(String phase) {     StepKey freezeStepKey = new StepKey(phase, NAME, FreezeStep.NAME).     return Arrays.asList(freezeStepKey). }
false;public;0;4;;@Override public int hashCode() {     return 1. }
false;public;1;10;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (obj.getClass() != getClass()) {         return false.     }     return true. }
false;public;0;4;;@Override public String toString() {     return Strings.toString(this). }
