commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;3;;public static ShrinkAction parse(XContentParser parser) throws IOException {     return PARSER.parse(parser, null). }
false;;0;3;;int getNumberOfShards() {     return numberOfShards. }
false;public;1;4;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeVInt(numberOfShards). }
false;public;0;4;;@Override public String getWriteableName() {     return NAME. }
false;public;2;7;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(NUMBER_OF_SHARDS_FIELD.getPreferredName(), numberOfShards).     builder.endObject().     return builder. }
false;public;0;4;;@Override public boolean isSafeAction() {     return false. }
false;public;3;29;;@Override public List<Step> toSteps(Client client, String phase, Step.StepKey nextStepKey) {     Settings readOnlySettings = Settings.builder().put(IndexMetaData.SETTING_BLOCKS_WRITE, true).build().     StepKey branchingKey = new StepKey(phase, NAME, BranchingStep.NAME).     StepKey waitForNoFollowerStepKey = new StepKey(phase, NAME, WaitForNoFollowersStep.NAME).     StepKey readOnlyKey = new StepKey(phase, NAME, ReadOnlyAction.NAME).     StepKey setSingleNodeKey = new StepKey(phase, NAME, SetSingleNodeAllocateStep.NAME).     StepKey allocationRoutedKey = new StepKey(phase, NAME, CheckShrinkReadyStep.NAME).     StepKey shrinkKey = new StepKey(phase, NAME, ShrinkStep.NAME).     StepKey enoughShardsKey = new StepKey(phase, NAME, ShrunkShardsAllocatedStep.NAME).     StepKey copyMetadataKey = new StepKey(phase, NAME, CopyExecutionStateStep.NAME).     StepKey aliasKey = new StepKey(phase, NAME, ShrinkSetAliasStep.NAME).     StepKey isShrunkIndexKey = new StepKey(phase, NAME, ShrunkenIndexCheckStep.NAME).     BranchingStep conditionalSkipShrinkStep = new BranchingStep(branchingKey, waitForNoFollowerStepKey, nextStepKey, (index, clusterState) -> clusterState.getMetaData().index(index).getNumberOfShards() == numberOfShards).     WaitForNoFollowersStep waitForNoFollowersStep = new WaitForNoFollowersStep(waitForNoFollowerStepKey, readOnlyKey, client).     UpdateSettingsStep readOnlyStep = new UpdateSettingsStep(readOnlyKey, setSingleNodeKey, client, readOnlySettings).     SetSingleNodeAllocateStep setSingleNodeStep = new SetSingleNodeAllocateStep(setSingleNodeKey, allocationRoutedKey, client).     CheckShrinkReadyStep checkShrinkReadyStep = new CheckShrinkReadyStep(allocationRoutedKey, shrinkKey).     ShrinkStep shrink = new ShrinkStep(shrinkKey, enoughShardsKey, client, numberOfShards, SHRUNKEN_INDEX_PREFIX).     ShrunkShardsAllocatedStep allocated = new ShrunkShardsAllocatedStep(enoughShardsKey, copyMetadataKey, SHRUNKEN_INDEX_PREFIX).     CopyExecutionStateStep copyMetadata = new CopyExecutionStateStep(copyMetadataKey, aliasKey, SHRUNKEN_INDEX_PREFIX).     ShrinkSetAliasStep aliasSwapAndDelete = new ShrinkSetAliasStep(aliasKey, isShrunkIndexKey, client, SHRUNKEN_INDEX_PREFIX).     ShrunkenIndexCheckStep waitOnShrinkTakeover = new ShrunkenIndexCheckStep(isShrunkIndexKey, nextStepKey, SHRUNKEN_INDEX_PREFIX).     return Arrays.asList(conditionalSkipShrinkStep, waitForNoFollowersStep, readOnlyStep, setSingleNodeStep, checkShrinkReadyStep, shrink, allocated, copyMetadata, aliasSwapAndDelete, waitOnShrinkTakeover). }
false;public;1;15;;@Override public List<StepKey> toStepKeys(String phase) {     StepKey conditionalSkipKey = new StepKey(phase, NAME, BranchingStep.NAME).     StepKey waitForNoFollowerStepKey = new StepKey(phase, NAME, WaitForNoFollowersStep.NAME).     StepKey readOnlyKey = new StepKey(phase, NAME, ReadOnlyAction.NAME).     StepKey setSingleNodeKey = new StepKey(phase, NAME, SetSingleNodeAllocateStep.NAME).     StepKey checkShrinkReadyKey = new StepKey(phase, NAME, CheckShrinkReadyStep.NAME).     StepKey shrinkKey = new StepKey(phase, NAME, ShrinkStep.NAME).     StepKey enoughShardsKey = new StepKey(phase, NAME, ShrunkShardsAllocatedStep.NAME).     StepKey copyMetadataKey = new StepKey(phase, NAME, CopyExecutionStateStep.NAME).     StepKey aliasKey = new StepKey(phase, NAME, ShrinkSetAliasStep.NAME).     StepKey isShrunkIndexKey = new StepKey(phase, NAME, ShrunkenIndexCheckStep.NAME).     return Arrays.asList(conditionalSkipKey, waitForNoFollowerStepKey, readOnlyKey, setSingleNodeKey, checkShrinkReadyKey, shrinkKey, enoughShardsKey, copyMetadataKey, aliasKey, isShrunkIndexKey). }
false;public;1;7;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     ShrinkAction that = (ShrinkAction) o.     return Objects.equals(numberOfShards, that.numberOfShards). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(numberOfShards). }
false;public;0;4;;@Override public String toString() {     return Strings.toString(this). }
