# id;timestamp;commentText;codeText;commentWords;codeWords
MlMetadata -> MlMetadataDiff -> @Override         public MetaData.Custom apply(MetaData.Custom part);1545155131;Merge the diff with the ML metadata._@param part The current ML metadata._@return The new ML metadata.;@Override_        public MetaData.Custom apply(MetaData.Custom part) {_            TreeMap<String, Job> newJobs = new TreeMap<>(jobs.apply(((MlMetadata) part).jobs))__            TreeMap<String, DatafeedConfig> newDatafeeds = new TreeMap<>(datafeeds.apply(((MlMetadata) part).datafeeds))__            return new MlMetadata(newJobs, newDatafeeds)__        };merge,the,diff,with,the,ml,metadata,param,part,the,current,ml,metadata,return,the,new,ml,metadata;override,public,meta,data,custom,apply,meta,data,custom,part,tree,map,string,job,new,jobs,new,tree,map,jobs,apply,ml,metadata,part,jobs,tree,map,string,datafeed,config,new,datafeeds,new,tree,map,datafeeds,apply,ml,metadata,part,datafeeds,return,new,ml,metadata,new,jobs,new,datafeeds
MlMetadata -> MlMetadataDiff -> @Override         public MetaData.Custom apply(MetaData.Custom part);1547572798;Merge the diff with the ML metadata._@param part The current ML metadata._@return The new ML metadata.;@Override_        public MetaData.Custom apply(MetaData.Custom part) {_            TreeMap<String, Job> newJobs = new TreeMap<>(jobs.apply(((MlMetadata) part).jobs))__            TreeMap<String, DatafeedConfig> newDatafeeds = new TreeMap<>(datafeeds.apply(((MlMetadata) part).datafeeds))__            return new MlMetadata(newJobs, newDatafeeds)__        };merge,the,diff,with,the,ml,metadata,param,part,the,current,ml,metadata,return,the,new,ml,metadata;override,public,meta,data,custom,apply,meta,data,custom,part,tree,map,string,job,new,jobs,new,tree,map,jobs,apply,ml,metadata,part,jobs,tree,map,string,datafeed,config,new,datafeeds,new,tree,map,datafeeds,apply,ml,metadata,part,datafeeds,return,new,ml,metadata,new,jobs,new,datafeeds
MlMetadata -> MlMetadataDiff -> @Override         public MetaData.Custom apply(MetaData.Custom part);1547576499;Merge the diff with the ML metadata._@param part The current ML metadata._@return The new ML metadata.;@Override_        public MetaData.Custom apply(MetaData.Custom part) {_            TreeMap<String, Job> newJobs = new TreeMap<>(jobs.apply(((MlMetadata) part).jobs))__            TreeMap<String, DatafeedConfig> newDatafeeds = new TreeMap<>(datafeeds.apply(((MlMetadata) part).datafeeds))__            return new MlMetadata(newJobs, newDatafeeds)__        };merge,the,diff,with,the,ml,metadata,param,part,the,current,ml,metadata,return,the,new,ml,metadata;override,public,meta,data,custom,apply,meta,data,custom,part,tree,map,string,job,new,jobs,new,tree,map,jobs,apply,ml,metadata,part,jobs,tree,map,string,datafeed,config,new,datafeeds,new,tree,map,datafeeds,apply,ml,metadata,part,datafeeds,return,new,ml,metadata,new,jobs,new,datafeeds
MlMetadata -> MlMetadataDiff -> @Override         public MetaData.Custom apply(MetaData.Custom part);1548688050;Merge the diff with the ML metadata._@param part The current ML metadata._@return The new ML metadata.;@Override_        public MetaData.Custom apply(MetaData.Custom part) {_            TreeMap<String, Job> newJobs = new TreeMap<>(jobs.apply(((MlMetadata) part).jobs))__            TreeMap<String, DatafeedConfig> newDatafeeds = new TreeMap<>(datafeeds.apply(((MlMetadata) part).datafeeds))__            return new MlMetadata(newJobs, newDatafeeds, upgradeMode)__        };merge,the,diff,with,the,ml,metadata,param,part,the,current,ml,metadata,return,the,new,ml,metadata;override,public,meta,data,custom,apply,meta,data,custom,part,tree,map,string,job,new,jobs,new,tree,map,jobs,apply,ml,metadata,part,jobs,tree,map,string,datafeed,config,new,datafeeds,new,tree,map,datafeeds,apply,ml,metadata,part,datafeeds,return,new,ml,metadata,new,jobs,new,datafeeds,upgrade,mode
MlMetadata -> MlMetadataDiff -> @Override         public MetaData.Custom apply(MetaData.Custom part);1548852671;Merge the diff with the ML metadata._@param part The current ML metadata._@return The new ML metadata.;@Override_        public MetaData.Custom apply(MetaData.Custom part) {_            TreeMap<String, Job> newJobs = new TreeMap<>(jobs.apply(((MlMetadata) part).jobs))__            TreeMap<String, DatafeedConfig> newDatafeeds = new TreeMap<>(datafeeds.apply(((MlMetadata) part).datafeeds))__            return new MlMetadata(newJobs, newDatafeeds, upgradeMode)__        };merge,the,diff,with,the,ml,metadata,param,part,the,current,ml,metadata,return,the,new,ml,metadata;override,public,meta,data,custom,apply,meta,data,custom,part,tree,map,string,job,new,jobs,new,tree,map,jobs,apply,ml,metadata,part,jobs,tree,map,string,datafeed,config,new,datafeeds,new,tree,map,datafeeds,apply,ml,metadata,part,datafeeds,return,new,ml,metadata,new,jobs,new,datafeeds,upgrade,mode
MlMetadata -> public static String jobTaskId(String jobId);1524684173;Namespaces the task ids for jobs._A datafeed id can be used as a job id, because they are stored separately in cluster state.;public static String jobTaskId(String jobId) {_        return "job-" + jobId__    };namespaces,the,task,ids,for,jobs,a,datafeed,id,can,be,used,as,a,job,id,because,they,are,stored,separately,in,cluster,state;public,static,string,job,task,id,string,job,id,return,job,job,id
MlMetadata -> public static String jobTaskId(String jobId);1526467406;Namespaces the task ids for jobs._A datafeed id can be used as a job id, because they are stored separately in cluster state.;public static String jobTaskId(String jobId) {_        return "job-" + jobId__    };namespaces,the,task,ids,for,jobs,a,datafeed,id,can,be,used,as,a,job,id,because,they,are,stored,separately,in,cluster,state;public,static,string,job,task,id,string,job,id,return,job,job,id
MlMetadata -> public static String jobTaskId(String jobId);1526981569;Namespaces the task ids for jobs._A datafeed id can be used as a job id, because they are stored separately in cluster state.;public static String jobTaskId(String jobId) {_        return "job-" + jobId__    };namespaces,the,task,ids,for,jobs,a,datafeed,id,can,be,used,as,a,job,id,because,they,are,stored,separately,in,cluster,state;public,static,string,job,task,id,string,job,id,return,job,job,id
MlMetadata -> public static String jobTaskId(String jobId);1527878678;Namespaces the task ids for jobs._A datafeed id can be used as a job id, because they are stored separately in cluster state.;public static String jobTaskId(String jobId) {_        return "job-" + jobId__    };namespaces,the,task,ids,for,jobs,a,datafeed,id,can,be,used,as,a,job,id,because,they,are,stored,separately,in,cluster,state;public,static,string,job,task,id,string,job,id,return,job,job,id
MlMetadata -> public static String jobTaskId(String jobId);1529076503;Namespaces the task ids for jobs._A datafeed id can be used as a job id, because they are stored separately in cluster state.;public static String jobTaskId(String jobId) {_        return "job-" + jobId__    };namespaces,the,task,ids,for,jobs,a,datafeed,id,can,be,used,as,a,job,id,because,they,are,stored,separately,in,cluster,state;public,static,string,job,task,id,string,job,id,return,job,job,id
MlMetadata -> public static String jobTaskId(String jobId);1529341607;Namespaces the task ids for jobs._A datafeed id can be used as a job id, because they are stored separately in cluster state.;public static String jobTaskId(String jobId) {_        return "job-" + jobId__    };namespaces,the,task,ids,for,jobs,a,datafeed,id,can,be,used,as,a,job,id,because,they,are,stored,separately,in,cluster,state;public,static,string,job,task,id,string,job,id,return,job,job,id
