commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Response newResponse() {     return new Response(). }
false;public;1;5;;@Override public Request indices(String... indices) {     this.indices = indices.     return this. }
false;public;0;4;;@Override public String[] indices() {     return indices. }
false;public;0;4;;@Override public IndicesOptions indicesOptions() {     return indicesOptions. }
false;public;1;4;;public Request indicesOptions(IndicesOptions indicesOptions) {     this.indicesOptions = indicesOptions.     return this. }
false;public;0;4;;@Override public ActionRequestValidationException validate() {     return null. }
false;public;1;6;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     this.indices = in.readStringArray().     this.indicesOptions = IndicesOptions.readIndicesOptions(in). }
false;public;1;6;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeStringArray(indices).     indicesOptions.writeIndicesOptions(out). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(Arrays.hashCode(indices), indicesOptions). }
false;public;1;12;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (obj.getClass() != getClass()) {         return false.     }     Request other = (Request) obj.     return Objects.deepEquals(indices, other.indices) && Objects.equals(indicesOptions, other.indicesOptions). }
