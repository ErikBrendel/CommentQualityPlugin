commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String getId() {     return id. }
false;public;0;3;;public String getName() {     return name. }
false;public;0;3;;public Instant getCreation() {     return creation. }
false;public;0;3;;public Instant getExpiration() {     return expiration. }
false;public;0;3;;public boolean isInvalidated() {     return invalidated. }
false;public;0;3;;public String getUsername() {     return username. }
false;public;0;3;;public String getRealm() {     return realm. }
false;public;2;14;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().field("id", id).field("name", name).field("creation", creation.toEpochMilli()).     if (expiration != null) {         builder.field("expiration", expiration.toEpochMilli()).     }     builder.field("invalidated", invalidated).field("username", username).field("realm", realm).     return builder.endObject(). }
false;public;1;10;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeString(name).     out.writeString(id).     out.writeInstant(creation).     out.writeOptionalInstant(expiration).     out.writeBoolean(invalidated).     out.writeString(username).     out.writeString(realm). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(name, id, creation, expiration, invalidated, username, realm). }
false;public;1;20;;@Override public boolean equals(Object obj) {     if (this == obj) {         return true.     }     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     ApiKey other = (ApiKey) obj.     return Objects.equals(name, other.name) && Objects.equals(id, other.id) && Objects.equals(creation, other.creation) && Objects.equals(expiration, other.expiration) && Objects.equals(invalidated, other.invalidated) && Objects.equals(username, other.username) && Objects.equals(realm, other.realm). }
false;public,static;1;3;;public static ApiKey fromXContent(XContentParser parser) throws IOException {     return PARSER.parse(parser, null). }
false;public;0;5;;@Override public String toString() {     return "ApiKey [name=" + name + ", id=" + id + ", creation=" + creation + ", expiration=" + expiration + ", invalidated=" + invalidated + ", username=" + username + ", realm=" + realm + "]". }
