# id;timestamp;commentText;codeText;commentWords;codeWords
Role -> Builder -> @Deprecated         public Builder cluster(ClusterPrivilege privilege);1532456624;@deprecated Use {@link #cluster(Set, Iterable)};@Deprecated_        public Builder cluster(ClusterPrivilege privilege) {_            cluster = new ClusterPermission.SimpleClusterPermission(privilege)__            return this__        };deprecated,use,link,cluster,set,iterable;deprecated,public,builder,cluster,cluster,privilege,privilege,cluster,new,cluster,permission,simple,cluster,permission,privilege,return,this
Role -> Builder -> @Deprecated         public Builder cluster(ClusterPrivilege privilege);1539951844;@deprecated Use {@link #cluster(Set, Iterable)};@Deprecated_        public Builder cluster(ClusterPrivilege privilege) {_            cluster = new ClusterPermission.SimpleClusterPermission(privilege)__            return this__        };deprecated,use,link,cluster,set,iterable;deprecated,public,builder,cluster,cluster,privilege,privilege,cluster,new,cluster,permission,simple,cluster,permission,privilege,return,this
Role -> Builder -> @Deprecated         public Builder cluster(ClusterPrivilege privilege);1548019180;@deprecated Use {@link #cluster(Set, Iterable)};@Deprecated_        public Builder cluster(ClusterPrivilege privilege) {_            cluster = new ClusterPermission.SimpleClusterPermission(privilege)__            return this__        };deprecated,use,link,cluster,set,iterable;deprecated,public,builder,cluster,cluster,privilege,privilege,cluster,new,cluster,permission,simple,cluster,permission,privilege,return,this
Role -> Builder -> @Deprecated         public Builder cluster(ClusterPrivilege privilege);1549336917;@deprecated Use {@link #cluster(Set, Iterable)};@Deprecated_        public Builder cluster(ClusterPrivilege privilege) {_            cluster = new ClusterPermission.SimpleClusterPermission(privilege)__            return this__        };deprecated,use,link,cluster,set,iterable;deprecated,public,builder,cluster,cluster,privilege,privilege,cluster,new,cluster,permission,simple,cluster,permission,privilege,return,this
Role -> Builder -> @Deprecated         public Builder cluster(ClusterPrivilege privilege);1549399169;@deprecated Use {@link #cluster(Set, Iterable)};@Deprecated_        public Builder cluster(ClusterPrivilege privilege) {_            cluster = new ClusterPermission.SimpleClusterPermission(privilege)__            return this__        };deprecated,use,link,cluster,set,iterable;deprecated,public,builder,cluster,cluster,privilege,privilege,cluster,new,cluster,permission,simple,cluster,permission,privilege,return,this
Role -> public IndicesAccessControl authorize(String action, Set<String> requestedIndicesOrAliases, MetaData metaData,                                           FieldPermissionsCache fieldPermissionsCache);1524684173;Returns whether at least one group encapsulated by this indices permissions is authorized to execute the_specified action with the requested indices/aliases. At the same time if field and/or document level security_is configured for any group also the allowed fields and role queries are resolved.;public IndicesAccessControl authorize(String action, Set<String> requestedIndicesOrAliases, MetaData metaData,_                                          FieldPermissionsCache fieldPermissionsCache) {_        Map<String, IndicesAccessControl.IndexAccessControl> indexPermissions = indices.authorize(_                action, requestedIndicesOrAliases, metaData, fieldPermissionsCache_        )___        _        boolean granted = true__        for (Map.Entry<String, IndicesAccessControl.IndexAccessControl> entry : indexPermissions.entrySet()) {_            if (!entry.getValue().isGranted()) {_                granted = false__                break__            }_        }_        return new IndicesAccessControl(granted, indexPermissions)__    };returns,whether,at,least,one,group,encapsulated,by,this,indices,permissions,is,authorized,to,execute,the,specified,action,with,the,requested,indices,aliases,at,the,same,time,if,field,and,or,document,level,security,is,configured,for,any,group,also,the,allowed,fields,and,role,queries,are,resolved;public,indices,access,control,authorize,string,action,set,string,requested,indices,or,aliases,meta,data,meta,data,field,permissions,cache,field,permissions,cache,map,string,indices,access,control,index,access,control,index,permissions,indices,authorize,action,requested,indices,or,aliases,meta,data,field,permissions,cache,boolean,granted,true,for,map,entry,string,indices,access,control,index,access,control,entry,index,permissions,entry,set,if,entry,get,value,is,granted,granted,false,break,return,new,indices,access,control,granted,index,permissions
Role -> public IndicesAccessControl authorize(String action, Set<String> requestedIndicesOrAliases, MetaData metaData,                                           FieldPermissionsCache fieldPermissionsCache);1531301204;Returns whether at least one group encapsulated by this indices permissions is authorized to execute the_specified action with the requested indices/aliases. At the same time if field and/or document level security_is configured for any group also the allowed fields and role queries are resolved.;public IndicesAccessControl authorize(String action, Set<String> requestedIndicesOrAliases, MetaData metaData,_                                          FieldPermissionsCache fieldPermissionsCache) {_        Map<String, IndicesAccessControl.IndexAccessControl> indexPermissions = indices.authorize(_                action, requestedIndicesOrAliases, metaData, fieldPermissionsCache_        )___        _        boolean granted = true__        for (Map.Entry<String, IndicesAccessControl.IndexAccessControl> entry : indexPermissions.entrySet()) {_            if (!entry.getValue().isGranted()) {_                granted = false__                break__            }_        }_        return new IndicesAccessControl(granted, indexPermissions)__    };returns,whether,at,least,one,group,encapsulated,by,this,indices,permissions,is,authorized,to,execute,the,specified,action,with,the,requested,indices,aliases,at,the,same,time,if,field,and,or,document,level,security,is,configured,for,any,group,also,the,allowed,fields,and,role,queries,are,resolved;public,indices,access,control,authorize,string,action,set,string,requested,indices,or,aliases,meta,data,meta,data,field,permissions,cache,field,permissions,cache,map,string,indices,access,control,index,access,control,index,permissions,indices,authorize,action,requested,indices,or,aliases,meta,data,field,permissions,cache,boolean,granted,true,for,map,entry,string,indices,access,control,index,access,control,entry,index,permissions,entry,set,if,entry,get,value,is,granted,granted,false,break,return,new,indices,access,control,granted,index,permissions
Role -> public IndicesAccessControl authorize(String action, Set<String> requestedIndicesOrAliases, MetaData metaData,                                           FieldPermissionsCache fieldPermissionsCache);1532456624;Returns whether at least one group encapsulated by this indices permissions is authorized to execute the_specified action with the requested indices/aliases. At the same time if field and/or document level security_is configured for any group also the allowed fields and role queries are resolved.;public IndicesAccessControl authorize(String action, Set<String> requestedIndicesOrAliases, MetaData metaData,_                                          FieldPermissionsCache fieldPermissionsCache) {_        Map<String, IndicesAccessControl.IndexAccessControl> indexPermissions = indices.authorize(_            action, requestedIndicesOrAliases, metaData, fieldPermissionsCache_        )___        _        boolean granted = true__        for (Map.Entry<String, IndicesAccessControl.IndexAccessControl> entry : indexPermissions.entrySet()) {_            if (!entry.getValue().isGranted()) {_                granted = false__                break__            }_        }_        return new IndicesAccessControl(granted, indexPermissions)__    };returns,whether,at,least,one,group,encapsulated,by,this,indices,permissions,is,authorized,to,execute,the,specified,action,with,the,requested,indices,aliases,at,the,same,time,if,field,and,or,document,level,security,is,configured,for,any,group,also,the,allowed,fields,and,role,queries,are,resolved;public,indices,access,control,authorize,string,action,set,string,requested,indices,or,aliases,meta,data,meta,data,field,permissions,cache,field,permissions,cache,map,string,indices,access,control,index,access,control,index,permissions,indices,authorize,action,requested,indices,or,aliases,meta,data,field,permissions,cache,boolean,granted,true,for,map,entry,string,indices,access,control,index,access,control,entry,index,permissions,entry,set,if,entry,get,value,is,granted,granted,false,break,return,new,indices,access,control,granted,index,permissions
Role -> public IndicesAccessControl authorize(String action, Set<String> requestedIndicesOrAliases, MetaData metaData,                                           FieldPermissionsCache fieldPermissionsCache);1539951844;Returns whether at least one group encapsulated by this indices permissions is authorized to execute the_specified action with the requested indices/aliases. At the same time if field and/or document level security_is configured for any group also the allowed fields and role queries are resolved.;public IndicesAccessControl authorize(String action, Set<String> requestedIndicesOrAliases, MetaData metaData,_                                          FieldPermissionsCache fieldPermissionsCache) {_        Map<String, IndicesAccessControl.IndexAccessControl> indexPermissions = indices.authorize(_            action, requestedIndicesOrAliases, metaData, fieldPermissionsCache_        )___        _        boolean granted = true__        for (Map.Entry<String, IndicesAccessControl.IndexAccessControl> entry : indexPermissions.entrySet()) {_            if (!entry.getValue().isGranted()) {_                granted = false__                break__            }_        }_        return new IndicesAccessControl(granted, indexPermissions)__    };returns,whether,at,least,one,group,encapsulated,by,this,indices,permissions,is,authorized,to,execute,the,specified,action,with,the,requested,indices,aliases,at,the,same,time,if,field,and,or,document,level,security,is,configured,for,any,group,also,the,allowed,fields,and,role,queries,are,resolved;public,indices,access,control,authorize,string,action,set,string,requested,indices,or,aliases,meta,data,meta,data,field,permissions,cache,field,permissions,cache,map,string,indices,access,control,index,access,control,index,permissions,indices,authorize,action,requested,indices,or,aliases,meta,data,field,permissions,cache,boolean,granted,true,for,map,entry,string,indices,access,control,index,access,control,entry,index,permissions,entry,set,if,entry,get,value,is,granted,granted,false,break,return,new,indices,access,control,granted,index,permissions
Role -> public IndicesAccessControl authorize(String action, Set<String> requestedIndicesOrAliases, MetaData metaData,                                           FieldPermissionsCache fieldPermissionsCache);1548019180;Returns whether at least one group encapsulated by this indices permissions is authorized to execute the_specified action with the requested indices/aliases. At the same time if field and/or document level security_is configured for any group also the allowed fields and role queries are resolved.;public IndicesAccessControl authorize(String action, Set<String> requestedIndicesOrAliases, MetaData metaData,_                                          FieldPermissionsCache fieldPermissionsCache) {_        Map<String, IndicesAccessControl.IndexAccessControl> indexPermissions = indices.authorize(_            action, requestedIndicesOrAliases, metaData, fieldPermissionsCache_        )___        _        boolean granted = true__        for (Map.Entry<String, IndicesAccessControl.IndexAccessControl> entry : indexPermissions.entrySet()) {_            if (!entry.getValue().isGranted()) {_                granted = false__                break__            }_        }_        return new IndicesAccessControl(granted, indexPermissions)__    };returns,whether,at,least,one,group,encapsulated,by,this,indices,permissions,is,authorized,to,execute,the,specified,action,with,the,requested,indices,aliases,at,the,same,time,if,field,and,or,document,level,security,is,configured,for,any,group,also,the,allowed,fields,and,role,queries,are,resolved;public,indices,access,control,authorize,string,action,set,string,requested,indices,or,aliases,meta,data,meta,data,field,permissions,cache,field,permissions,cache,map,string,indices,access,control,index,access,control,index,permissions,indices,authorize,action,requested,indices,or,aliases,meta,data,field,permissions,cache,boolean,granted,true,for,map,entry,string,indices,access,control,index,access,control,entry,index,permissions,entry,set,if,entry,get,value,is,granted,granted,false,break,return,new,indices,access,control,granted,index,permissions
Role -> public IndicesAccessControl authorize(String action, Set<String> requestedIndicesOrAliases, MetaData metaData,                                           FieldPermissionsCache fieldPermissionsCache);1549336917;Returns whether at least one group encapsulated by this indices permissions is authorized to execute the_specified action with the requested indices/aliases. At the same time if field and/or document level security_is configured for any group also the allowed fields and role queries are resolved.;public IndicesAccessControl authorize(String action, Set<String> requestedIndicesOrAliases, MetaData metaData,_                                          FieldPermissionsCache fieldPermissionsCache) {_        Map<String, IndicesAccessControl.IndexAccessControl> indexPermissions = indices.authorize(_            action, requestedIndicesOrAliases, metaData, fieldPermissionsCache_        )___        _        boolean granted = true__        for (Map.Entry<String, IndicesAccessControl.IndexAccessControl> entry : indexPermissions.entrySet()) {_            if (!entry.getValue().isGranted()) {_                granted = false__                break__            }_        }_        return new IndicesAccessControl(granted, indexPermissions)__    };returns,whether,at,least,one,group,encapsulated,by,this,indices,permissions,is,authorized,to,execute,the,specified,action,with,the,requested,indices,aliases,at,the,same,time,if,field,and,or,document,level,security,is,configured,for,any,group,also,the,allowed,fields,and,role,queries,are,resolved;public,indices,access,control,authorize,string,action,set,string,requested,indices,or,aliases,meta,data,meta,data,field,permissions,cache,field,permissions,cache,map,string,indices,access,control,index,access,control,index,permissions,indices,authorize,action,requested,indices,or,aliases,meta,data,field,permissions,cache,boolean,granted,true,for,map,entry,string,indices,access,control,index,access,control,entry,index,permissions,entry,set,if,entry,get,value,is,granted,granted,false,break,return,new,indices,access,control,granted,index,permissions
Role -> public boolean grants(ClusterPrivilege clusterPrivilege);1549336917;Check if cluster permissions grants the given cluster privilege__@param clusterPrivilege cluster privilege_@return {@code true} if cluster privilege is allowed else returns {@code false};public boolean grants(ClusterPrivilege clusterPrivilege) {_        return cluster().grants(clusterPrivilege)__    };check,if,cluster,permissions,grants,the,given,cluster,privilege,param,cluster,privilege,cluster,privilege,return,code,true,if,cluster,privilege,is,allowed,else,returns,code,false;public,boolean,grants,cluster,privilege,cluster,privilege,return,cluster,grants,cluster,privilege
Role -> public boolean grants(ClusterPrivilege clusterPrivilege);1549399169;Check if cluster permissions grants the given cluster privilege__@param clusterPrivilege cluster privilege_@return {@code true} if cluster privilege is allowed else returns {@code false};public boolean grants(ClusterPrivilege clusterPrivilege) {_        return cluster.grants(clusterPrivilege)__    };check,if,cluster,permissions,grants,the,given,cluster,privilege,param,cluster,privilege,cluster,privilege,return,code,true,if,cluster,privilege,is,allowed,else,returns,code,false;public,boolean,grants,cluster,privilege,cluster,privilege,return,cluster,grants,cluster,privilege
Role -> public ResourcePrivilegesMap checkApplicationResourcePrivileges(final String applicationName, Set<String> checkForResources,                                                                     Set<String> checkForPrivilegeNames,                                                                     Collection<ApplicationPrivilegeDescriptor> storedPrivileges);1549336917;For a given application, checks for the privileges for resources and returns an instance of {@link ResourcePrivilegesMap} holding a_map of resource to {@link ResourcePrivileges} where the resource is application resource and the map of application privilege to_whether it is allowed or not.__@param applicationName checks privileges for the provided application name_@param checkForResources check permission grants for the set of resources_@param checkForPrivilegeNames check permission grants for the set of privilege names_@param storedPrivileges stored {@link ApplicationPrivilegeDescriptor} for an application against which the access checks are_performed_@return an instance of {@link ResourcePrivilegesMap};public ResourcePrivilegesMap checkApplicationResourcePrivileges(final String applicationName, Set<String> checkForResources,_                                                                    Set<String> checkForPrivilegeNames,_                                                                    Collection<ApplicationPrivilegeDescriptor> storedPrivileges) {_        return application().checkResourcePrivileges(applicationName, checkForResources, checkForPrivilegeNames, storedPrivileges)__    };for,a,given,application,checks,for,the,privileges,for,resources,and,returns,an,instance,of,link,resource,privileges,map,holding,a,map,of,resource,to,link,resource,privileges,where,the,resource,is,application,resource,and,the,map,of,application,privilege,to,whether,it,is,allowed,or,not,param,application,name,checks,privileges,for,the,provided,application,name,param,check,for,resources,check,permission,grants,for,the,set,of,resources,param,check,for,privilege,names,check,permission,grants,for,the,set,of,privilege,names,param,stored,privileges,stored,link,application,privilege,descriptor,for,an,application,against,which,the,access,checks,are,performed,return,an,instance,of,link,resource,privileges,map;public,resource,privileges,map,check,application,resource,privileges,final,string,application,name,set,string,check,for,resources,set,string,check,for,privilege,names,collection,application,privilege,descriptor,stored,privileges,return,application,check,resource,privileges,application,name,check,for,resources,check,for,privilege,names,stored,privileges
Role -> public ResourcePrivilegesMap checkApplicationResourcePrivileges(final String applicationName, Set<String> checkForResources,                                                                     Set<String> checkForPrivilegeNames,                                                                     Collection<ApplicationPrivilegeDescriptor> storedPrivileges);1549399169;For a given application, checks for the privileges for resources and returns an instance of {@link ResourcePrivilegesMap} holding a_map of resource to {@link ResourcePrivileges} where the resource is application resource and the map of application privilege to_whether it is allowed or not.__@param applicationName checks privileges for the provided application name_@param checkForResources check permission grants for the set of resources_@param checkForPrivilegeNames check permission grants for the set of privilege names_@param storedPrivileges stored {@link ApplicationPrivilegeDescriptor} for an application against which the access checks are_performed_@return an instance of {@link ResourcePrivilegesMap};public ResourcePrivilegesMap checkApplicationResourcePrivileges(final String applicationName, Set<String> checkForResources,_                                                                    Set<String> checkForPrivilegeNames,_                                                                    Collection<ApplicationPrivilegeDescriptor> storedPrivileges) {_        return application.checkResourcePrivileges(applicationName, checkForResources, checkForPrivilegeNames, storedPrivileges)__    };for,a,given,application,checks,for,the,privileges,for,resources,and,returns,an,instance,of,link,resource,privileges,map,holding,a,map,of,resource,to,link,resource,privileges,where,the,resource,is,application,resource,and,the,map,of,application,privilege,to,whether,it,is,allowed,or,not,param,application,name,checks,privileges,for,the,provided,application,name,param,check,for,resources,check,permission,grants,for,the,set,of,resources,param,check,for,privilege,names,check,permission,grants,for,the,set,of,privilege,names,param,stored,privileges,stored,link,application,privilege,descriptor,for,an,application,against,which,the,access,checks,are,performed,return,an,instance,of,link,resource,privileges,map;public,resource,privileges,map,check,application,resource,privileges,final,string,application,name,set,string,check,for,resources,set,string,check,for,privilege,names,collection,application,privilege,descriptor,stored,privileges,return,application,check,resource,privileges,application,name,check,for,resources,check,for,privilege,names,stored,privileges
Role -> public boolean checkIndicesAction(String action);1549336917;Check if indices permissions allow for the given action__@param action indices action_@return {@code true} if action is allowed else returns {@code false};public boolean checkIndicesAction(String action) {_        return indices().check(action)__    };check,if,indices,permissions,allow,for,the,given,action,param,action,indices,action,return,code,true,if,action,is,allowed,else,returns,code,false;public,boolean,check,indices,action,string,action,return,indices,check,action
Role -> public boolean checkIndicesAction(String action);1549399169;Check if indices permissions allow for the given action__@param action indices action_@return {@code true} if action is allowed else returns {@code false};public boolean checkIndicesAction(String action) {_        return indices.check(action)__    };check,if,indices,permissions,allow,for,the,given,action,param,action,indices,action,return,code,true,if,action,is,allowed,else,returns,code,false;public,boolean,check,indices,action,string,action,return,indices,check,action
Role -> public boolean checkClusterAction(String action, TransportRequest request);1549336917;Check if cluster permissions allow for the given action__@param action cluster action_@param request {@link TransportRequest}_@return {@code true} if action is allowed else returns {@code false};public boolean checkClusterAction(String action, TransportRequest request) {_        return cluster().check(action, request)__    };check,if,cluster,permissions,allow,for,the,given,action,param,action,cluster,action,param,request,link,transport,request,return,code,true,if,action,is,allowed,else,returns,code,false;public,boolean,check,cluster,action,string,action,transport,request,request,return,cluster,check,action,request
Role -> public boolean checkClusterAction(String action, TransportRequest request);1549399169;Check if cluster permissions allow for the given action__@param action cluster action_@param request {@link TransportRequest}_@return {@code true} if action is allowed else returns {@code false};public boolean checkClusterAction(String action, TransportRequest request) {_        return cluster.check(action, request)__    };check,if,cluster,permissions,allow,for,the,given,action,param,action,cluster,action,param,request,link,transport,request,return,code,true,if,action,is,allowed,else,returns,code,false;public,boolean,check,cluster,action,string,action,transport,request,request,return,cluster,check,action,request
Role -> public ResourcePrivilegesMap checkIndicesPrivileges(Set<String> checkForIndexPatterns, boolean allowRestrictedIndices,                                                                  Set<String> checkForPrivileges);1549336917;For given index patterns and index privileges determines allowed privileges and creates an instance of {@link ResourcePrivilegesMap}_holding a map of resource to {@link ResourcePrivileges} where resource is index pattern and the map of index privilege to whether it_is allowed or not.__@param checkForIndexPatterns check permission grants for the set of index patterns_@param allowRestrictedIndices if {@code true} then checks permission grants even for restricted indices by index matching_@param checkForPrivileges check permission grants for the set of index privileges_@return an instance of {@link ResourcePrivilegesMap};public ResourcePrivilegesMap checkIndicesPrivileges(Set<String> checkForIndexPatterns, boolean allowRestrictedIndices,_                                                                 Set<String> checkForPrivileges) {_        return indices().checkResourcePrivileges(checkForIndexPatterns, allowRestrictedIndices, checkForPrivileges)__    };for,given,index,patterns,and,index,privileges,determines,allowed,privileges,and,creates,an,instance,of,link,resource,privileges,map,holding,a,map,of,resource,to,link,resource,privileges,where,resource,is,index,pattern,and,the,map,of,index,privilege,to,whether,it,is,allowed,or,not,param,check,for,index,patterns,check,permission,grants,for,the,set,of,index,patterns,param,allow,restricted,indices,if,code,true,then,checks,permission,grants,even,for,restricted,indices,by,index,matching,param,check,for,privileges,check,permission,grants,for,the,set,of,index,privileges,return,an,instance,of,link,resource,privileges,map;public,resource,privileges,map,check,indices,privileges,set,string,check,for,index,patterns,boolean,allow,restricted,indices,set,string,check,for,privileges,return,indices,check,resource,privileges,check,for,index,patterns,allow,restricted,indices,check,for,privileges
Role -> public ResourcePrivilegesMap checkIndicesPrivileges(Set<String> checkForIndexPatterns, boolean allowRestrictedIndices,                                                                  Set<String> checkForPrivileges);1549399169;For given index patterns and index privileges determines allowed privileges and creates an instance of {@link ResourcePrivilegesMap}_holding a map of resource to {@link ResourcePrivileges} where resource is index pattern and the map of index privilege to whether it_is allowed or not.__@param checkForIndexPatterns check permission grants for the set of index patterns_@param allowRestrictedIndices if {@code true} then checks permission grants even for restricted indices by index matching_@param checkForPrivileges check permission grants for the set of index privileges_@return an instance of {@link ResourcePrivilegesMap};public ResourcePrivilegesMap checkIndicesPrivileges(Set<String> checkForIndexPatterns, boolean allowRestrictedIndices,_                                                                 Set<String> checkForPrivileges) {_        return indices.checkResourcePrivileges(checkForIndexPatterns, allowRestrictedIndices, checkForPrivileges)__    };for,given,index,patterns,and,index,privileges,determines,allowed,privileges,and,creates,an,instance,of,link,resource,privileges,map,holding,a,map,of,resource,to,link,resource,privileges,where,resource,is,index,pattern,and,the,map,of,index,privilege,to,whether,it,is,allowed,or,not,param,check,for,index,patterns,check,permission,grants,for,the,set,of,index,patterns,param,allow,restricted,indices,if,code,true,then,checks,permission,grants,even,for,restricted,indices,by,index,matching,param,check,for,privileges,check,permission,grants,for,the,set,of,index,privileges,return,an,instance,of,link,resource,privileges,map;public,resource,privileges,map,check,indices,privileges,set,string,check,for,index,patterns,boolean,allow,restricted,indices,set,string,check,for,privileges,return,indices,check,resource,privileges,check,for,index,patterns,allow,restricted,indices,check,for,privileges
Role -> public Predicate<String> allowedIndicesMatcher(String action);1549336917;@return A predicate that will match all the indices that this role_has the privilege for executing the given action on.;public Predicate<String> allowedIndicesMatcher(String action) {_        return indices().allowedIndicesMatcher(action)__    };return,a,predicate,that,will,match,all,the,indices,that,this,role,has,the,privilege,for,executing,the,given,action,on;public,predicate,string,allowed,indices,matcher,string,action,return,indices,allowed,indices,matcher,action
Role -> public Predicate<String> allowedIndicesMatcher(String action);1549399169;@return A predicate that will match all the indices that this role_has the privilege for executing the given action on.;public Predicate<String> allowedIndicesMatcher(String action) {_        return indices.allowedIndicesMatcher(action)__    };return,a,predicate,that,will,match,all,the,indices,that,this,role,has,the,privilege,for,executing,the,given,action,on;public,predicate,string,allowed,indices,matcher,string,action,return,indices,allowed,indices,matcher,action
