commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected String executor() {     return ThreadPool.Names.MANAGEMENT. }
false;protected;0;4;;@Override protected AcknowledgedResponse newResponse() {     return new AcknowledgedResponse(). }
false;protected;2;4;;@Override protected ClusterBlockException checkBlock(DeleteLicenseRequest request, ClusterState state) {     return state.blocks().globalBlockedException(ClusterBlockLevel.METADATA_WRITE). }
false;public;1;4;;@Override public void onResponse(ClusterStateUpdateResponse clusterStateUpdateResponse) {     listener.onResponse(new AcknowledgedResponse(clusterStateUpdateResponse.isAcknowledged())). }
false;public;1;4;;@Override public void onFailure(Exception e) {     listener.onFailure(e). }
false;protected;3;15;;@Override protected void masterOperation(final DeleteLicenseRequest request, ClusterState state, final ActionListener<AcknowledgedResponse> listener) throws ElasticsearchException {     licenseService.removeLicense(request, new ActionListener<ClusterStateUpdateResponse>() {          @Override         public void onResponse(ClusterStateUpdateResponse clusterStateUpdateResponse) {             listener.onResponse(new AcknowledgedResponse(clusterStateUpdateResponse.isAcknowledged())).         }          @Override         public void onFailure(Exception e) {             listener.onFailure(e).         }     }). }
