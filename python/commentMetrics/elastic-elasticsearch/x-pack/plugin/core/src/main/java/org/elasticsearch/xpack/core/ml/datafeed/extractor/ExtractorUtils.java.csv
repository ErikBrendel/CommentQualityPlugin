# id;timestamp;commentText;codeText;commentWords;codeWords
ExtractorUtils -> public static void checkSearchWasSuccessful(String jobId, SearchResponse searchResponse) throws IOException;1524684173;Checks that a {@link SearchResponse} has an OK status code and no shard failures;public static void checkSearchWasSuccessful(String jobId, SearchResponse searchResponse) throws IOException {_        if (searchResponse.status() != RestStatus.OK) {_            throw new IOException("[" + jobId + "] Search request returned status code: " + searchResponse.status()_                    + ". Response was:\n" + searchResponse.toString())__        }_        ShardSearchFailure[] shardFailures = searchResponse.getShardFailures()__        if (shardFailures != null && shardFailures.length > 0) {_            LOGGER.error("[{}] Search request returned shard failures: {}", jobId, Arrays.toString(shardFailures))__            throw new IOException(ExceptionsHelper.shardFailuresToErrorMsg(jobId, shardFailures))__        }_        int unavailableShards = searchResponse.getTotalShards() - searchResponse.getSuccessfulShards()__        if (unavailableShards > 0) {_            throw new IOException("[" + jobId + "] Search request encountered [" + unavailableShards + "] unavailable shards")__        }_    };checks,that,a,link,search,response,has,an,ok,status,code,and,no,shard,failures;public,static,void,check,search,was,successful,string,job,id,search,response,search,response,throws,ioexception,if,search,response,status,rest,status,ok,throw,new,ioexception,job,id,search,request,returned,status,code,search,response,status,response,was,n,search,response,to,string,shard,search,failure,shard,failures,search,response,get,shard,failures,if,shard,failures,null,shard,failures,length,0,logger,error,search,request,returned,shard,failures,job,id,arrays,to,string,shard,failures,throw,new,ioexception,exceptions,helper,shard,failures,to,error,msg,job,id,shard,failures,int,unavailable,shards,search,response,get,total,shards,search,response,get,successful,shards,if,unavailable,shards,0,throw,new,ioexception,job,id,search,request,encountered,unavailable,shards,unavailable,shards
ExtractorUtils -> public static void checkSearchWasSuccessful(String jobId, SearchResponse searchResponse) throws IOException;1538170812;Checks that a {@link SearchResponse} has an OK status code and no shard failures;public static void checkSearchWasSuccessful(String jobId, SearchResponse searchResponse) throws IOException {_        if (searchResponse.status() != RestStatus.OK) {_            throw new IOException("[" + jobId + "] Search request returned status code: " + searchResponse.status()_                    + ". Response was:\n" + searchResponse.toString())__        }_        ShardSearchFailure[] shardFailures = searchResponse.getShardFailures()__        if (shardFailures != null && shardFailures.length > 0) {_            LOGGER.error("[{}] Search request returned shard failures: {}", jobId, Arrays.toString(shardFailures))__            throw new IOException(ExceptionsHelper.shardFailuresToErrorMsg(jobId, shardFailures))__        }_        int unavailableShards = searchResponse.getTotalShards() - searchResponse.getSuccessfulShards()__        if (unavailableShards > 0) {_            throw new IOException("[" + jobId + "] Search request encountered [" + unavailableShards + "] unavailable shards")__        }_    };checks,that,a,link,search,response,has,an,ok,status,code,and,no,shard,failures;public,static,void,check,search,was,successful,string,job,id,search,response,search,response,throws,ioexception,if,search,response,status,rest,status,ok,throw,new,ioexception,job,id,search,request,returned,status,code,search,response,status,response,was,n,search,response,to,string,shard,search,failure,shard,failures,search,response,get,shard,failures,if,shard,failures,null,shard,failures,length,0,logger,error,search,request,returned,shard,failures,job,id,arrays,to,string,shard,failures,throw,new,ioexception,exceptions,helper,shard,failures,to,error,msg,job,id,shard,failures,int,unavailable,shards,search,response,get,total,shards,search,response,get,successful,shards,if,unavailable,shards,0,throw,new,ioexception,job,id,search,request,encountered,unavailable,shards,unavailable,shards
ExtractorUtils -> public static void checkSearchWasSuccessful(String jobId, SearchResponse searchResponse) throws IOException;1540847035;Checks that a {@link SearchResponse} has an OK status code and no shard failures;public static void checkSearchWasSuccessful(String jobId, SearchResponse searchResponse) throws IOException {_        if (searchResponse.status() != RestStatus.OK) {_            throw new IOException("[" + jobId + "] Search request returned status code: " + searchResponse.status()_                    + ". Response was:\n" + searchResponse.toString())__        }_        ShardSearchFailure[] shardFailures = searchResponse.getShardFailures()__        if (shardFailures != null && shardFailures.length > 0) {_            LOGGER.error("[{}] Search request returned shard failures: {}", jobId, Arrays.toString(shardFailures))__            throw new IOException(ExceptionsHelper.shardFailuresToErrorMsg(jobId, shardFailures))__        }_        int unavailableShards = searchResponse.getTotalShards() - searchResponse.getSuccessfulShards()__        if (unavailableShards > 0) {_            throw new IOException("[" + jobId + "] Search request encountered [" + unavailableShards + "] unavailable shards")__        }_    };checks,that,a,link,search,response,has,an,ok,status,code,and,no,shard,failures;public,static,void,check,search,was,successful,string,job,id,search,response,search,response,throws,ioexception,if,search,response,status,rest,status,ok,throw,new,ioexception,job,id,search,request,returned,status,code,search,response,status,response,was,n,search,response,to,string,shard,search,failure,shard,failures,search,response,get,shard,failures,if,shard,failures,null,shard,failures,length,0,logger,error,search,request,returned,shard,failures,job,id,arrays,to,string,shard,failures,throw,new,ioexception,exceptions,helper,shard,failures,to,error,msg,job,id,shard,failures,int,unavailable,shards,search,response,get,total,shards,search,response,get,successful,shards,if,unavailable,shards,0,throw,new,ioexception,job,id,search,request,encountered,unavailable,shards,unavailable,shards
ExtractorUtils -> public static void checkSearchWasSuccessful(String jobId, SearchResponse searchResponse) throws IOException;1541092382;Checks that a {@link SearchResponse} has an OK status code and no shard failures;public static void checkSearchWasSuccessful(String jobId, SearchResponse searchResponse) throws IOException {_        if (searchResponse.status() != RestStatus.OK) {_            throw new IOException("[" + jobId + "] Search request returned status code: " + searchResponse.status()_                    + ". Response was:\n" + searchResponse.toString())__        }_        ShardSearchFailure[] shardFailures = searchResponse.getShardFailures()__        if (shardFailures != null && shardFailures.length > 0) {_            LOGGER.error("[{}] Search request returned shard failures: {}", jobId, Arrays.toString(shardFailures))__            throw new IOException(ExceptionsHelper.shardFailuresToErrorMsg(jobId, shardFailures))__        }_        int unavailableShards = searchResponse.getTotalShards() - searchResponse.getSuccessfulShards()__        if (unavailableShards > 0) {_            throw new IOException("[" + jobId + "] Search request encountered [" + unavailableShards + "] unavailable shards")__        }_    };checks,that,a,link,search,response,has,an,ok,status,code,and,no,shard,failures;public,static,void,check,search,was,successful,string,job,id,search,response,search,response,throws,ioexception,if,search,response,status,rest,status,ok,throw,new,ioexception,job,id,search,request,returned,status,code,search,response,status,response,was,n,search,response,to,string,shard,search,failure,shard,failures,search,response,get,shard,failures,if,shard,failures,null,shard,failures,length,0,logger,error,search,request,returned,shard,failures,job,id,arrays,to,string,shard,failures,throw,new,ioexception,exceptions,helper,shard,failures,to,error,msg,job,id,shard,failures,int,unavailable,shards,search,response,get,total,shards,search,response,get,successful,shards,if,unavailable,shards,0,throw,new,ioexception,job,id,search,request,encountered,unavailable,shards,unavailable,shards
ExtractorUtils -> public static void checkSearchWasSuccessful(String jobId, SearchResponse searchResponse) throws IOException;1548236405;Checks that a {@link SearchResponse} has an OK status code and no shard failures;public static void checkSearchWasSuccessful(String jobId, SearchResponse searchResponse) throws IOException {_        if (searchResponse.status() != RestStatus.OK) {_            throw new IOException("[" + jobId + "] Search request returned status code: " + searchResponse.status()_                    + ". Response was:\n" + searchResponse.toString())__        }_        ShardSearchFailure[] shardFailures = searchResponse.getShardFailures()__        if (shardFailures != null && shardFailures.length > 0) {_            LOGGER.error("[{}] Search request returned shard failures: {}", jobId, Arrays.toString(shardFailures))__            throw new IOException(ExceptionsHelper.shardFailuresToErrorMsg(jobId, shardFailures))__        }_        int unavailableShards = searchResponse.getTotalShards() - searchResponse.getSuccessfulShards()__        if (unavailableShards > 0) {_            throw new IOException("[" + jobId + "] Search request encountered [" + unavailableShards + "] unavailable shards")__        }_    };checks,that,a,link,search,response,has,an,ok,status,code,and,no,shard,failures;public,static,void,check,search,was,successful,string,job,id,search,response,search,response,throws,ioexception,if,search,response,status,rest,status,ok,throw,new,ioexception,job,id,search,request,returned,status,code,search,response,status,response,was,n,search,response,to,string,shard,search,failure,shard,failures,search,response,get,shard,failures,if,shard,failures,null,shard,failures,length,0,logger,error,search,request,returned,shard,failures,job,id,arrays,to,string,shard,failures,throw,new,ioexception,exceptions,helper,shard,failures,to,error,msg,job,id,shard,failures,int,unavailable,shards,search,response,get,total,shards,search,response,get,successful,shards,if,unavailable,shards,0,throw,new,ioexception,job,id,search,request,encountered,unavailable,shards,unavailable,shards
ExtractorUtils -> private static long validateAndGetDateHistogramInterval(DateHistogramAggregationBuilder dateHistogram);1524684173;Returns the date histogram interval as epoch millis if valid, or throws_an {@link ElasticsearchException} with the validation error;private static long validateAndGetDateHistogramInterval(DateHistogramAggregationBuilder dateHistogram) {_        if (dateHistogram.timeZone() != null && dateHistogram.timeZone().equals(DateTimeZone.UTC) == false) {_            throw ExceptionsHelper.badRequestException("ML requires date_histogram.time_zone to be UTC")__        }__        if (dateHistogram.dateHistogramInterval() != null) {_            return validateAndGetCalendarInterval(dateHistogram.dateHistogramInterval().toString())__        } else {_            return dateHistogram.interval()__        }_    };returns,the,date,histogram,interval,as,epoch,millis,if,valid,or,throws,an,link,elasticsearch,exception,with,the,validation,error;private,static,long,validate,and,get,date,histogram,interval,date,histogram,aggregation,builder,date,histogram,if,date,histogram,time,zone,null,date,histogram,time,zone,equals,date,time,zone,utc,false,throw,exceptions,helper,bad,request,exception,ml,requires,to,be,utc,if,date,histogram,date,histogram,interval,null,return,validate,and,get,calendar,interval,date,histogram,date,histogram,interval,to,string,else,return,date,histogram,interval
ExtractorUtils -> private static long validateAndGetDateHistogramInterval(DateHistogramAggregationBuilder dateHistogram);1538170812;Returns the date histogram interval as epoch millis if valid, or throws_an {@link ElasticsearchException} with the validation error;private static long validateAndGetDateHistogramInterval(DateHistogramAggregationBuilder dateHistogram) {_        if (dateHistogram.timeZone() != null && dateHistogram.timeZone().equals(DateTimeZone.UTC) == false) {_            throw ExceptionsHelper.badRequestException("ML requires date_histogram.time_zone to be UTC")__        }__        if (dateHistogram.dateHistogramInterval() != null) {_            return validateAndGetCalendarInterval(dateHistogram.dateHistogramInterval().toString())__        } else {_            return dateHistogram.interval()__        }_    };returns,the,date,histogram,interval,as,epoch,millis,if,valid,or,throws,an,link,elasticsearch,exception,with,the,validation,error;private,static,long,validate,and,get,date,histogram,interval,date,histogram,aggregation,builder,date,histogram,if,date,histogram,time,zone,null,date,histogram,time,zone,equals,date,time,zone,utc,false,throw,exceptions,helper,bad,request,exception,ml,requires,to,be,utc,if,date,histogram,date,histogram,interval,null,return,validate,and,get,calendar,interval,date,histogram,date,histogram,interval,to,string,else,return,date,histogram,interval
ExtractorUtils -> private static long validateAndGetDateHistogramInterval(DateHistogramAggregationBuilder dateHistogram);1540847035;Returns the date histogram interval as epoch millis if valid, or throws_an {@link ElasticsearchException} with the validation error;private static long validateAndGetDateHistogramInterval(DateHistogramAggregationBuilder dateHistogram) {_        if (dateHistogram.timeZone() != null && dateHistogram.timeZone().equals(DateTimeZone.UTC) == false) {_            throw ExceptionsHelper.badRequestException("ML requires date_histogram.time_zone to be UTC")__        }__        if (dateHistogram.dateHistogramInterval() != null) {_            return validateAndGetCalendarInterval(dateHistogram.dateHistogramInterval().toString())__        } else {_            return dateHistogram.interval()__        }_    };returns,the,date,histogram,interval,as,epoch,millis,if,valid,or,throws,an,link,elasticsearch,exception,with,the,validation,error;private,static,long,validate,and,get,date,histogram,interval,date,histogram,aggregation,builder,date,histogram,if,date,histogram,time,zone,null,date,histogram,time,zone,equals,date,time,zone,utc,false,throw,exceptions,helper,bad,request,exception,ml,requires,to,be,utc,if,date,histogram,date,histogram,interval,null,return,validate,and,get,calendar,interval,date,histogram,date,histogram,interval,to,string,else,return,date,histogram,interval
ExtractorUtils -> private static long validateAndGetDateHistogramInterval(DateHistogramAggregationBuilder dateHistogram);1541092382;Returns the date histogram interval as epoch millis if valid, or throws_an {@link ElasticsearchException} with the validation error;private static long validateAndGetDateHistogramInterval(DateHistogramAggregationBuilder dateHistogram) {_        if (dateHistogram.timeZone() != null && dateHistogram.timeZone().equals(DateTimeZone.UTC) == false) {_            throw ExceptionsHelper.badRequestException("ML requires date_histogram.time_zone to be UTC")__        }__        if (dateHistogram.dateHistogramInterval() != null) {_            return validateAndGetCalendarInterval(dateHistogram.dateHistogramInterval().toString())__        } else {_            return dateHistogram.interval()__        }_    };returns,the,date,histogram,interval,as,epoch,millis,if,valid,or,throws,an,link,elasticsearch,exception,with,the,validation,error;private,static,long,validate,and,get,date,histogram,interval,date,histogram,aggregation,builder,date,histogram,if,date,histogram,time,zone,null,date,histogram,time,zone,equals,date,time,zone,utc,false,throw,exceptions,helper,bad,request,exception,ml,requires,to,be,utc,if,date,histogram,date,histogram,interval,null,return,validate,and,get,calendar,interval,date,histogram,date,histogram,interval,to,string,else,return,date,histogram,interval
ExtractorUtils -> private static long validateAndGetDateHistogramInterval(DateHistogramAggregationBuilder dateHistogram);1548236405;Returns the date histogram interval as epoch millis if valid, or throws_an {@link ElasticsearchException} with the validation error;private static long validateAndGetDateHistogramInterval(DateHistogramAggregationBuilder dateHistogram) {_        if (dateHistogram.timeZone() != null && dateHistogram.timeZone().normalized().equals(ZoneOffset.UTC) == false) {_            throw ExceptionsHelper.badRequestException("ML requires date_histogram.time_zone to be UTC")__        }__        if (dateHistogram.dateHistogramInterval() != null) {_            return validateAndGetCalendarInterval(dateHistogram.dateHistogramInterval().toString())__        } else {_            return dateHistogram.interval()__        }_    };returns,the,date,histogram,interval,as,epoch,millis,if,valid,or,throws,an,link,elasticsearch,exception,with,the,validation,error;private,static,long,validate,and,get,date,histogram,interval,date,histogram,aggregation,builder,date,histogram,if,date,histogram,time,zone,null,date,histogram,time,zone,normalized,equals,zone,offset,utc,false,throw,exceptions,helper,bad,request,exception,ml,requires,to,be,utc,if,date,histogram,date,histogram,interval,null,return,validate,and,get,calendar,interval,date,histogram,date,histogram,interval,to,string,else,return,date,histogram,interval
ExtractorUtils -> public static long getHistogramIntervalMillis(AggregationBuilder histogramAggregation);1524684173;Get the interval from {@code histogramAggregation} or throw an {@code IllegalStateException}_if {@code histogramAggregation} is not a {@link HistogramAggregationBuilder} or a_{@link DateHistogramAggregationBuilder}__@param histogramAggregation Must be a {@link HistogramAggregationBuilder} or a_{@link DateHistogramAggregationBuilder}_@return The histogram interval;public static long getHistogramIntervalMillis(AggregationBuilder histogramAggregation) {_        if (histogramAggregation instanceof HistogramAggregationBuilder) {_            return (long) ((HistogramAggregationBuilder) histogramAggregation).interval()__        } else if (histogramAggregation instanceof DateHistogramAggregationBuilder) {_            return validateAndGetDateHistogramInterval((DateHistogramAggregationBuilder) histogramAggregation)__        } else {_            throw new IllegalStateException("Invalid histogram aggregation [" + histogramAggregation.getName() + "]")__        }_    };get,the,interval,from,code,histogram,aggregation,or,throw,an,code,illegal,state,exception,if,code,histogram,aggregation,is,not,a,link,histogram,aggregation,builder,or,a,link,date,histogram,aggregation,builder,param,histogram,aggregation,must,be,a,link,histogram,aggregation,builder,or,a,link,date,histogram,aggregation,builder,return,the,histogram,interval;public,static,long,get,histogram,interval,millis,aggregation,builder,histogram,aggregation,if,histogram,aggregation,instanceof,histogram,aggregation,builder,return,long,histogram,aggregation,builder,histogram,aggregation,interval,else,if,histogram,aggregation,instanceof,date,histogram,aggregation,builder,return,validate,and,get,date,histogram,interval,date,histogram,aggregation,builder,histogram,aggregation,else,throw,new,illegal,state,exception,invalid,histogram,aggregation,histogram,aggregation,get,name
ExtractorUtils -> public static long getHistogramIntervalMillis(AggregationBuilder histogramAggregation);1538170812;Get the interval from {@code histogramAggregation} or throw an {@code IllegalStateException}_if {@code histogramAggregation} is not a {@link HistogramAggregationBuilder} or a_{@link DateHistogramAggregationBuilder}__@param histogramAggregation Must be a {@link HistogramAggregationBuilder} or a_{@link DateHistogramAggregationBuilder}_@return The histogram interval;public static long getHistogramIntervalMillis(AggregationBuilder histogramAggregation) {_        if (histogramAggregation instanceof HistogramAggregationBuilder) {_            return (long) ((HistogramAggregationBuilder) histogramAggregation).interval()__        } else if (histogramAggregation instanceof DateHistogramAggregationBuilder) {_            return validateAndGetDateHistogramInterval((DateHistogramAggregationBuilder) histogramAggregation)__        } else {_            throw new IllegalStateException("Invalid histogram aggregation [" + histogramAggregation.getName() + "]")__        }_    };get,the,interval,from,code,histogram,aggregation,or,throw,an,code,illegal,state,exception,if,code,histogram,aggregation,is,not,a,link,histogram,aggregation,builder,or,a,link,date,histogram,aggregation,builder,param,histogram,aggregation,must,be,a,link,histogram,aggregation,builder,or,a,link,date,histogram,aggregation,builder,return,the,histogram,interval;public,static,long,get,histogram,interval,millis,aggregation,builder,histogram,aggregation,if,histogram,aggregation,instanceof,histogram,aggregation,builder,return,long,histogram,aggregation,builder,histogram,aggregation,interval,else,if,histogram,aggregation,instanceof,date,histogram,aggregation,builder,return,validate,and,get,date,histogram,interval,date,histogram,aggregation,builder,histogram,aggregation,else,throw,new,illegal,state,exception,invalid,histogram,aggregation,histogram,aggregation,get,name
ExtractorUtils -> public static long getHistogramIntervalMillis(AggregationBuilder histogramAggregation);1540847035;Get the interval from {@code histogramAggregation} or throw an {@code IllegalStateException}_if {@code histogramAggregation} is not a {@link HistogramAggregationBuilder} or a_{@link DateHistogramAggregationBuilder}__@param histogramAggregation Must be a {@link HistogramAggregationBuilder} or a_{@link DateHistogramAggregationBuilder}_@return The histogram interval;public static long getHistogramIntervalMillis(AggregationBuilder histogramAggregation) {_        if (histogramAggregation instanceof HistogramAggregationBuilder) {_            return (long) ((HistogramAggregationBuilder) histogramAggregation).interval()__        } else if (histogramAggregation instanceof DateHistogramAggregationBuilder) {_            return validateAndGetDateHistogramInterval((DateHistogramAggregationBuilder) histogramAggregation)__        } else {_            throw new IllegalStateException("Invalid histogram aggregation [" + histogramAggregation.getName() + "]")__        }_    };get,the,interval,from,code,histogram,aggregation,or,throw,an,code,illegal,state,exception,if,code,histogram,aggregation,is,not,a,link,histogram,aggregation,builder,or,a,link,date,histogram,aggregation,builder,param,histogram,aggregation,must,be,a,link,histogram,aggregation,builder,or,a,link,date,histogram,aggregation,builder,return,the,histogram,interval;public,static,long,get,histogram,interval,millis,aggregation,builder,histogram,aggregation,if,histogram,aggregation,instanceof,histogram,aggregation,builder,return,long,histogram,aggregation,builder,histogram,aggregation,interval,else,if,histogram,aggregation,instanceof,date,histogram,aggregation,builder,return,validate,and,get,date,histogram,interval,date,histogram,aggregation,builder,histogram,aggregation,else,throw,new,illegal,state,exception,invalid,histogram,aggregation,histogram,aggregation,get,name
ExtractorUtils -> public static long getHistogramIntervalMillis(AggregationBuilder histogramAggregation);1541092382;Get the interval from {@code histogramAggregation} or throw an {@code IllegalStateException}_if {@code histogramAggregation} is not a {@link HistogramAggregationBuilder} or a_{@link DateHistogramAggregationBuilder}__@param histogramAggregation Must be a {@link HistogramAggregationBuilder} or a_{@link DateHistogramAggregationBuilder}_@return The histogram interval;public static long getHistogramIntervalMillis(AggregationBuilder histogramAggregation) {_        if (histogramAggregation instanceof HistogramAggregationBuilder) {_            return (long) ((HistogramAggregationBuilder) histogramAggregation).interval()__        } else if (histogramAggregation instanceof DateHistogramAggregationBuilder) {_            return validateAndGetDateHistogramInterval((DateHistogramAggregationBuilder) histogramAggregation)__        } else {_            throw new IllegalStateException("Invalid histogram aggregation [" + histogramAggregation.getName() + "]")__        }_    };get,the,interval,from,code,histogram,aggregation,or,throw,an,code,illegal,state,exception,if,code,histogram,aggregation,is,not,a,link,histogram,aggregation,builder,or,a,link,date,histogram,aggregation,builder,param,histogram,aggregation,must,be,a,link,histogram,aggregation,builder,or,a,link,date,histogram,aggregation,builder,return,the,histogram,interval;public,static,long,get,histogram,interval,millis,aggregation,builder,histogram,aggregation,if,histogram,aggregation,instanceof,histogram,aggregation,builder,return,long,histogram,aggregation,builder,histogram,aggregation,interval,else,if,histogram,aggregation,instanceof,date,histogram,aggregation,builder,return,validate,and,get,date,histogram,interval,date,histogram,aggregation,builder,histogram,aggregation,else,throw,new,illegal,state,exception,invalid,histogram,aggregation,histogram,aggregation,get,name
ExtractorUtils -> public static long getHistogramIntervalMillis(AggregationBuilder histogramAggregation);1548236405;Get the interval from {@code histogramAggregation} or throw an {@code IllegalStateException}_if {@code histogramAggregation} is not a {@link HistogramAggregationBuilder} or a_{@link DateHistogramAggregationBuilder}__@param histogramAggregation Must be a {@link HistogramAggregationBuilder} or a_{@link DateHistogramAggregationBuilder}_@return The histogram interval;public static long getHistogramIntervalMillis(AggregationBuilder histogramAggregation) {_        if (histogramAggregation instanceof HistogramAggregationBuilder) {_            return (long) ((HistogramAggregationBuilder) histogramAggregation).interval()__        } else if (histogramAggregation instanceof DateHistogramAggregationBuilder) {_            return validateAndGetDateHistogramInterval((DateHistogramAggregationBuilder) histogramAggregation)__        } else {_            throw new IllegalStateException("Invalid histogram aggregation [" + histogramAggregation.getName() + "]")__        }_    };get,the,interval,from,code,histogram,aggregation,or,throw,an,code,illegal,state,exception,if,code,histogram,aggregation,is,not,a,link,histogram,aggregation,builder,or,a,link,date,histogram,aggregation,builder,param,histogram,aggregation,must,be,a,link,histogram,aggregation,builder,or,a,link,date,histogram,aggregation,builder,return,the,histogram,interval;public,static,long,get,histogram,interval,millis,aggregation,builder,histogram,aggregation,if,histogram,aggregation,instanceof,histogram,aggregation,builder,return,long,histogram,aggregation,builder,histogram,aggregation,interval,else,if,histogram,aggregation,instanceof,date,histogram,aggregation,builder,return,validate,and,get,date,histogram,interval,date,histogram,aggregation,builder,histogram,aggregation,else,throw,new,illegal,state,exception,invalid,histogram,aggregation,histogram,aggregation,get,name
ExtractorUtils -> public static AggregationBuilder getHistogramAggregation(Collection<AggregationBuilder> aggregations);1538170812;Find and return (date) histogram in {@code aggregations}_@param aggregations List of aggregations_@return A {@link HistogramAggregationBuilder} or a {@link DateHistogramAggregationBuilder};public static AggregationBuilder getHistogramAggregation(Collection<AggregationBuilder> aggregations) {_        if (aggregations.isEmpty()) {_            throw ExceptionsHelper.badRequestException(Messages.getMessage(Messages.DATAFEED_AGGREGATIONS_REQUIRES_DATE_HISTOGRAM))__        }_        if (aggregations.size() != 1) {_            throw ExceptionsHelper.badRequestException(Messages.DATAFEED_AGGREGATIONS_REQUIRES_DATE_HISTOGRAM_NO_SIBLINGS)__        }__        AggregationBuilder agg = aggregations.iterator().next()__        if (isHistogram(agg)) {_            return agg__        } else {_            return getHistogramAggregation(agg.getSubAggregations())__        }_    };find,and,return,date,histogram,in,code,aggregations,param,aggregations,list,of,aggregations,return,a,link,histogram,aggregation,builder,or,a,link,date,histogram,aggregation,builder;public,static,aggregation,builder,get,histogram,aggregation,collection,aggregation,builder,aggregations,if,aggregations,is,empty,throw,exceptions,helper,bad,request,exception,messages,get,message,messages,if,aggregations,size,1,throw,exceptions,helper,bad,request,exception,messages,aggregation,builder,agg,aggregations,iterator,next,if,is,histogram,agg,return,agg,else,return,get,histogram,aggregation,agg,get,sub,aggregations
ExtractorUtils -> public static AggregationBuilder getHistogramAggregation(Collection<AggregationBuilder> aggregations);1540847035;Find and return (date) histogram in {@code aggregations}_@param aggregations List of aggregations_@return A {@link HistogramAggregationBuilder} or a {@link DateHistogramAggregationBuilder};public static AggregationBuilder getHistogramAggregation(Collection<AggregationBuilder> aggregations) {_        if (aggregations.isEmpty()) {_            throw ExceptionsHelper.badRequestException(Messages.getMessage(Messages.DATAFEED_AGGREGATIONS_REQUIRES_DATE_HISTOGRAM))__        }_        if (aggregations.size() != 1) {_            throw ExceptionsHelper.badRequestException(Messages.DATAFEED_AGGREGATIONS_REQUIRES_DATE_HISTOGRAM_NO_SIBLINGS)__        }__        AggregationBuilder agg = aggregations.iterator().next()__        if (isHistogram(agg)) {_            return agg__        } else {_            return getHistogramAggregation(agg.getSubAggregations())__        }_    };find,and,return,date,histogram,in,code,aggregations,param,aggregations,list,of,aggregations,return,a,link,histogram,aggregation,builder,or,a,link,date,histogram,aggregation,builder;public,static,aggregation,builder,get,histogram,aggregation,collection,aggregation,builder,aggregations,if,aggregations,is,empty,throw,exceptions,helper,bad,request,exception,messages,get,message,messages,if,aggregations,size,1,throw,exceptions,helper,bad,request,exception,messages,aggregation,builder,agg,aggregations,iterator,next,if,is,histogram,agg,return,agg,else,return,get,histogram,aggregation,agg,get,sub,aggregations
ExtractorUtils -> public static AggregationBuilder getHistogramAggregation(Collection<AggregationBuilder> aggregations);1541092382;Find and return (date) histogram in {@code aggregations}_@param aggregations List of aggregations_@return A {@link HistogramAggregationBuilder} or a {@link DateHistogramAggregationBuilder};public static AggregationBuilder getHistogramAggregation(Collection<AggregationBuilder> aggregations) {_        if (aggregations.isEmpty()) {_            throw ExceptionsHelper.badRequestException(Messages.getMessage(Messages.DATAFEED_AGGREGATIONS_REQUIRES_DATE_HISTOGRAM))__        }_        if (aggregations.size() != 1) {_            throw ExceptionsHelper.badRequestException(Messages.DATAFEED_AGGREGATIONS_REQUIRES_DATE_HISTOGRAM_NO_SIBLINGS)__        }__        AggregationBuilder agg = aggregations.iterator().next()__        if (isHistogram(agg)) {_            return agg__        } else {_            return getHistogramAggregation(agg.getSubAggregations())__        }_    };find,and,return,date,histogram,in,code,aggregations,param,aggregations,list,of,aggregations,return,a,link,histogram,aggregation,builder,or,a,link,date,histogram,aggregation,builder;public,static,aggregation,builder,get,histogram,aggregation,collection,aggregation,builder,aggregations,if,aggregations,is,empty,throw,exceptions,helper,bad,request,exception,messages,get,message,messages,if,aggregations,size,1,throw,exceptions,helper,bad,request,exception,messages,aggregation,builder,agg,aggregations,iterator,next,if,is,histogram,agg,return,agg,else,return,get,histogram,aggregation,agg,get,sub,aggregations
ExtractorUtils -> public static AggregationBuilder getHistogramAggregation(Collection<AggregationBuilder> aggregations);1548236405;Find and return (date) histogram in {@code aggregations}_@param aggregations List of aggregations_@return A {@link HistogramAggregationBuilder} or a {@link DateHistogramAggregationBuilder};public static AggregationBuilder getHistogramAggregation(Collection<AggregationBuilder> aggregations) {_        if (aggregations.isEmpty()) {_            throw ExceptionsHelper.badRequestException(Messages.getMessage(Messages.DATAFEED_AGGREGATIONS_REQUIRES_DATE_HISTOGRAM))__        }_        if (aggregations.size() != 1) {_            throw ExceptionsHelper.badRequestException(Messages.DATAFEED_AGGREGATIONS_REQUIRES_DATE_HISTOGRAM_NO_SIBLINGS)__        }__        AggregationBuilder agg = aggregations.iterator().next()__        if (isHistogram(agg)) {_            return agg__        } else {_            return getHistogramAggregation(agg.getSubAggregations())__        }_    };find,and,return,date,histogram,in,code,aggregations,param,aggregations,list,of,aggregations,return,a,link,histogram,aggregation,builder,or,a,link,date,histogram,aggregation,builder;public,static,aggregation,builder,get,histogram,aggregation,collection,aggregation,builder,aggregations,if,aggregations,is,empty,throw,exceptions,helper,bad,request,exception,messages,get,message,messages,if,aggregations,size,1,throw,exceptions,helper,bad,request,exception,messages,aggregation,builder,agg,aggregations,iterator,next,if,is,histogram,agg,return,agg,else,return,get,histogram,aggregation,agg,get,sub,aggregations
ExtractorUtils -> public static long getHistogramIntervalMillis(AggregatorFactories.Builder aggFactory);1524684173;Find the (date) histogram in {@code aggFactory} and extract its interval._Throws if there is no (date) histogram or if the histogram has sibling_aggregations._@param aggFactory Aggregations factory_@return The histogram interval;public static long getHistogramIntervalMillis(AggregatorFactories.Builder aggFactory) {_        AggregationBuilder histogram = getHistogramAggregation(aggFactory.getAggregatorFactories())__        return getHistogramIntervalMillis(histogram)__    };find,the,date,histogram,in,code,agg,factory,and,extract,its,interval,throws,if,there,is,no,date,histogram,or,if,the,histogram,has,sibling,aggregations,param,agg,factory,aggregations,factory,return,the,histogram,interval;public,static,long,get,histogram,interval,millis,aggregator,factories,builder,agg,factory,aggregation,builder,histogram,get,histogram,aggregation,agg,factory,get,aggregator,factories,return,get,histogram,interval,millis,histogram
ExtractorUtils -> public static long getHistogramIntervalMillis(AggregatorFactories.Builder aggFactory);1538170812;Find the (date) histogram in {@code aggFactory} and extract its interval._Throws if there is no (date) histogram or if the histogram has sibling_aggregations._@param aggFactory Aggregations factory_@return The histogram interval;public static long getHistogramIntervalMillis(AggregatorFactories.Builder aggFactory) {_        AggregationBuilder histogram = getHistogramAggregation(aggFactory.getAggregatorFactories())__        return getHistogramIntervalMillis(histogram)__    };find,the,date,histogram,in,code,agg,factory,and,extract,its,interval,throws,if,there,is,no,date,histogram,or,if,the,histogram,has,sibling,aggregations,param,agg,factory,aggregations,factory,return,the,histogram,interval;public,static,long,get,histogram,interval,millis,aggregator,factories,builder,agg,factory,aggregation,builder,histogram,get,histogram,aggregation,agg,factory,get,aggregator,factories,return,get,histogram,interval,millis,histogram
ExtractorUtils -> public static long getHistogramIntervalMillis(AggregatorFactories.Builder aggFactory);1540847035;Find the (date) histogram in {@code aggFactory} and extract its interval._Throws if there is no (date) histogram or if the histogram has sibling_aggregations._@param aggFactory Aggregations factory_@return The histogram interval;public static long getHistogramIntervalMillis(AggregatorFactories.Builder aggFactory) {_        AggregationBuilder histogram = getHistogramAggregation(aggFactory.getAggregatorFactories())__        return getHistogramIntervalMillis(histogram)__    };find,the,date,histogram,in,code,agg,factory,and,extract,its,interval,throws,if,there,is,no,date,histogram,or,if,the,histogram,has,sibling,aggregations,param,agg,factory,aggregations,factory,return,the,histogram,interval;public,static,long,get,histogram,interval,millis,aggregator,factories,builder,agg,factory,aggregation,builder,histogram,get,histogram,aggregation,agg,factory,get,aggregator,factories,return,get,histogram,interval,millis,histogram
ExtractorUtils -> public static long getHistogramIntervalMillis(AggregatorFactories.Builder aggFactory);1541092382;Find the (date) histogram in {@code aggFactory} and extract its interval._Throws if there is no (date) histogram or if the histogram has sibling_aggregations._@param aggFactory Aggregations factory_@return The histogram interval;public static long getHistogramIntervalMillis(AggregatorFactories.Builder aggFactory) {_        AggregationBuilder histogram = getHistogramAggregation(aggFactory.getAggregatorFactories())__        return getHistogramIntervalMillis(histogram)__    };find,the,date,histogram,in,code,agg,factory,and,extract,its,interval,throws,if,there,is,no,date,histogram,or,if,the,histogram,has,sibling,aggregations,param,agg,factory,aggregations,factory,return,the,histogram,interval;public,static,long,get,histogram,interval,millis,aggregator,factories,builder,agg,factory,aggregation,builder,histogram,get,histogram,aggregation,agg,factory,get,aggregator,factories,return,get,histogram,interval,millis,histogram
ExtractorUtils -> public static long getHistogramIntervalMillis(AggregatorFactories.Builder aggFactory);1548236405;Find the (date) histogram in {@code aggFactory} and extract its interval._Throws if there is no (date) histogram or if the histogram has sibling_aggregations._@param aggFactory Aggregations factory_@return The histogram interval;public static long getHistogramIntervalMillis(AggregatorFactories.Builder aggFactory) {_        AggregationBuilder histogram = getHistogramAggregation(aggFactory.getAggregatorFactories())__        return getHistogramIntervalMillis(histogram)__    };find,the,date,histogram,in,code,agg,factory,and,extract,its,interval,throws,if,there,is,no,date,histogram,or,if,the,histogram,has,sibling,aggregations,param,agg,factory,aggregations,factory,return,the,histogram,interval;public,static,long,get,histogram,interval,millis,aggregator,factories,builder,agg,factory,aggregation,builder,histogram,get,histogram,aggregation,agg,factory,get,aggregator,factories,return,get,histogram,interval,millis,histogram
ExtractorUtils -> public static QueryBuilder wrapInTimeRangeQuery(QueryBuilder userQuery, String timeField, long start, long end);1524684173;Combines a user query with a time range query.;public static QueryBuilder wrapInTimeRangeQuery(QueryBuilder userQuery, String timeField, long start, long end) {_        QueryBuilder timeQuery = new RangeQueryBuilder(timeField).gte(start).lt(end).format(EPOCH_MILLIS)__        return new BoolQueryBuilder().filter(userQuery).filter(timeQuery)__    };combines,a,user,query,with,a,time,range,query;public,static,query,builder,wrap,in,time,range,query,query,builder,user,query,string,time,field,long,start,long,end,query,builder,time,query,new,range,query,builder,time,field,gte,start,lt,end,format,return,new,bool,query,builder,filter,user,query,filter,time,query
ExtractorUtils -> public static QueryBuilder wrapInTimeRangeQuery(QueryBuilder userQuery, String timeField, long start, long end);1538170812;Combines a user query with a time range query.;public static QueryBuilder wrapInTimeRangeQuery(QueryBuilder userQuery, String timeField, long start, long end) {_        QueryBuilder timeQuery = new RangeQueryBuilder(timeField).gte(start).lt(end).format(EPOCH_MILLIS)__        return new BoolQueryBuilder().filter(userQuery).filter(timeQuery)__    };combines,a,user,query,with,a,time,range,query;public,static,query,builder,wrap,in,time,range,query,query,builder,user,query,string,time,field,long,start,long,end,query,builder,time,query,new,range,query,builder,time,field,gte,start,lt,end,format,return,new,bool,query,builder,filter,user,query,filter,time,query
ExtractorUtils -> public static QueryBuilder wrapInTimeRangeQuery(QueryBuilder userQuery, String timeField, long start, long end);1540847035;Combines a user query with a time range query.;public static QueryBuilder wrapInTimeRangeQuery(QueryBuilder userQuery, String timeField, long start, long end) {_        QueryBuilder timeQuery = new RangeQueryBuilder(timeField).gte(start).lt(end).format(EPOCH_MILLIS)__        return new BoolQueryBuilder().filter(userQuery).filter(timeQuery)__    };combines,a,user,query,with,a,time,range,query;public,static,query,builder,wrap,in,time,range,query,query,builder,user,query,string,time,field,long,start,long,end,query,builder,time,query,new,range,query,builder,time,field,gte,start,lt,end,format,return,new,bool,query,builder,filter,user,query,filter,time,query
ExtractorUtils -> public static QueryBuilder wrapInTimeRangeQuery(QueryBuilder userQuery, String timeField, long start, long end);1541092382;Combines a user query with a time range query.;public static QueryBuilder wrapInTimeRangeQuery(QueryBuilder userQuery, String timeField, long start, long end) {_        QueryBuilder timeQuery = new RangeQueryBuilder(timeField).gte(start).lt(end).format(EPOCH_MILLIS)__        return new BoolQueryBuilder().filter(userQuery).filter(timeQuery)__    };combines,a,user,query,with,a,time,range,query;public,static,query,builder,wrap,in,time,range,query,query,builder,user,query,string,time,field,long,start,long,end,query,builder,time,query,new,range,query,builder,time,field,gte,start,lt,end,format,return,new,bool,query,builder,filter,user,query,filter,time,query
ExtractorUtils -> public static QueryBuilder wrapInTimeRangeQuery(QueryBuilder userQuery, String timeField, long start, long end);1548236405;Combines a user query with a time range query.;public static QueryBuilder wrapInTimeRangeQuery(QueryBuilder userQuery, String timeField, long start, long end) {_        QueryBuilder timeQuery = new RangeQueryBuilder(timeField).gte(start).lt(end).format(EPOCH_MILLIS)__        return new BoolQueryBuilder().filter(userQuery).filter(timeQuery)__    };combines,a,user,query,with,a,time,range,query;public,static,query,builder,wrap,in,time,range,query,query,builder,user,query,string,time,field,long,start,long,end,query,builder,time,query,new,range,query,builder,time,field,gte,start,lt,end,format,return,new,bool,query,builder,filter,user,query,filter,time,query
