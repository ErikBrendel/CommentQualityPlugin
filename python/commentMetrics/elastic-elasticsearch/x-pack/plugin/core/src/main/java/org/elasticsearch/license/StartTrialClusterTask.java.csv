commented;modifiers;parameterAmount;loc;comment;code
false;public;3;14;;@Override public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {     LicensesMetaData oldLicensesMetaData = oldState.metaData().custom(LicensesMetaData.TYPE).     logger.debug("started self generated trial license: {}", oldLicensesMetaData).     if (request.isAcknowledged() == false) {         listener.onResponse(new PostStartTrialResponse(PostStartTrialResponse.Status.NEED_ACKNOWLEDGEMENT, ACK_MESSAGES, ACKNOWLEDGEMENT_HEADER)).     } else if (oldLicensesMetaData == null || oldLicensesMetaData.isEligibleForTrial()) {         listener.onResponse(new PostStartTrialResponse(PostStartTrialResponse.Status.UPGRADED_TO_TRIAL)).     } else {         listener.onResponse(new PostStartTrialResponse(PostStartTrialResponse.Status.TRIAL_ALREADY_ACTIVATED)).     } }
false;public;1;27;;@Override public ClusterState execute(ClusterState currentState) throws Exception {     XPackPlugin.checkReadyForXPackCustomMetadata(currentState).     LicensesMetaData currentLicensesMetaData = currentState.metaData().custom(LicensesMetaData.TYPE).     if (request.isAcknowledged() == false) {         return currentState.     } else if (currentLicensesMetaData == null || currentLicensesMetaData.isEligibleForTrial()) {         long issueDate = clock.millis().         MetaData.Builder mdBuilder = MetaData.builder(currentState.metaData()).         long expiryDate = issueDate + LicenseService.NON_BASIC_SELF_GENERATED_LICENSE_DURATION.getMillis().         License.Builder specBuilder = License.builder().uid(UUID.randomUUID().toString()).issuedTo(clusterName).maxNodes(LicenseService.SELF_GENERATED_LICENSE_MAX_NODES).issueDate(issueDate).type(request.getType()).expiryDate(expiryDate).         License selfGeneratedLicense = SelfGeneratedLicense.create(specBuilder, currentState.nodes()).         LicensesMetaData newLicensesMetaData = new LicensesMetaData(selfGeneratedLicense, Version.CURRENT).         mdBuilder.putCustom(LicensesMetaData.TYPE, newLicensesMetaData).         return ClusterState.builder(currentState).metaData(mdBuilder).build().     } else {         return currentState.     } }
false;public;2;5;;@Override public void onFailure(String source, @Nullable Exception e) {     logger.error(new ParameterizedMessage("unexpected failure during [{}]", source), e).     listener.onFailure(e). }
