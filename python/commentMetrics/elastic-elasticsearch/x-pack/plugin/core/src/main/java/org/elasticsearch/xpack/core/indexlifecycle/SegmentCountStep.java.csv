commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public int getMaxNumSegments() {     return maxNumSegments. }
false;public;2;10;;@Override public void evaluateCondition(IndexMetaData indexMetaData, Listener listener) {     getClient().admin().indices().segments(new IndicesSegmentsRequest(indexMetaData.getIndex().getName()), ActionListener.wrap(response -> {         long numberShardsLeftToMerge = StreamSupport.stream(response.getIndices().get(indexMetaData.getIndex().getName()).spliterator(), false).filter(iss -> Arrays.stream(iss.getShards()).anyMatch(p -> p.getSegments().size() > maxNumSegments)).count().         listener.onResponse(numberShardsLeftToMerge == 0, new Info(numberShardsLeftToMerge)).     }, listener::onFailure)). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(super.hashCode(), maxNumSegments). }
false;public;1;12;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     SegmentCountStep other = (SegmentCountStep) obj.     return super.equals(obj) && Objects.equals(maxNumSegments, other.maxNumSegments). }
false;public;0;3;;public long getNumberShardsLeftToMerge() {     return numberShardsLeftToMerge. }
false;public;2;9;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(MESSAGE.getPreferredName(), "Waiting for [" + numberShardsLeftToMerge + "] shards " + "to forcemerge").     builder.field(SHARDS_TO_MERGE.getPreferredName(), numberShardsLeftToMerge).     builder.endObject().     return builder. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(numberShardsLeftToMerge). }
false;public;1;11;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     Info other = (Info) obj.     return Objects.equals(numberShardsLeftToMerge, other.numberShardsLeftToMerge). }
false;public;0;4;;@Override public String toString() {     return Strings.toString(this). }
