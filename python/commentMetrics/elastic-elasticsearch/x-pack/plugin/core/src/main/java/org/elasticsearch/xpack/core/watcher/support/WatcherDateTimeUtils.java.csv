# id;timestamp;commentText;codeText;commentWords;codeWords
WatcherDateTimeUtils -> public static TimeValue parseTimeValueSupportingFractional(@Nullable String sValue, String settingName);1524684173;Parse a {@link TimeValue} with support for fractional values.;public static TimeValue parseTimeValueSupportingFractional(@Nullable String sValue, String settingName) {_        _        _        Objects.requireNonNull(settingName)__        if (sValue == null) {_            return null__        }_        try {_            long millis__            String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()__            if (lowerSValue.endsWith("ms")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)))__            } else if (lowerSValue.endsWith("s")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 1000)__            } else if (lowerSValue.endsWith("m")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 60 * 1000)__            } else if (lowerSValue.endsWith("h")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 60 * 60 * 1000)__            } else if (lowerSValue.endsWith("d")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 24 * 60 * 60 * 1000)__            } else if (lowerSValue.endsWith("w")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 7 * 24 * 60 * 60 * 1000)__            } else if (lowerSValue.equals("-1")) {_                _                millis = -1__            } else if (lowerSValue.equals("0")) {_                _                millis = 0__            } else {_                throw new ElasticsearchParseException(_                        "Failed to parse setting [{}] with value [{}] as a time value: unit is missing or unrecognized",_                        settingName, sValue)__            }_            return new TimeValue(millis, TimeUnit.MILLISECONDS)__        } catch (NumberFormatException e) {_            throw new ElasticsearchParseException("Failed to parse [{}]", e, sValue)__        }_    };parse,a,link,time,value,with,support,for,fractional,values;public,static,time,value,parse,time,value,supporting,fractional,nullable,string,s,value,string,setting,name,objects,require,non,null,setting,name,if,s,value,null,return,null,try,long,millis,string,lower,svalue,s,value,to,lower,case,locale,root,trim,if,lower,svalue,ends,with,ms,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,2,else,if,lower,svalue,ends,with,s,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,1000,else,if,lower,svalue,ends,with,m,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,60,1000,else,if,lower,svalue,ends,with,h,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,60,60,1000,else,if,lower,svalue,ends,with,d,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,24,60,60,1000,else,if,lower,svalue,ends,with,w,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,7,24,60,60,1000,else,if,lower,svalue,equals,1,millis,1,else,if,lower,svalue,equals,0,millis,0,else,throw,new,elasticsearch,parse,exception,failed,to,parse,setting,with,value,as,a,time,value,unit,is,missing,or,unrecognized,setting,name,s,value,return,new,time,value,millis,time,unit,milliseconds,catch,number,format,exception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,e,s,value
WatcherDateTimeUtils -> public static TimeValue parseTimeValueSupportingFractional(@Nullable String sValue, String settingName);1538067637;Parse a {@link TimeValue} with support for fractional values.;public static TimeValue parseTimeValueSupportingFractional(@Nullable String sValue, String settingName) {_        _        _        Objects.requireNonNull(settingName)__        if (sValue == null) {_            return null__        }_        try {_            long millis__            String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()__            if (lowerSValue.endsWith("ms")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)))__            } else if (lowerSValue.endsWith("s")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 1000)__            } else if (lowerSValue.endsWith("m")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 60 * 1000)__            } else if (lowerSValue.endsWith("h")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 60 * 60 * 1000)__            } else if (lowerSValue.endsWith("d")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 24 * 60 * 60 * 1000)__            } else if (lowerSValue.endsWith("w")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 7 * 24 * 60 * 60 * 1000)__            } else if (lowerSValue.equals("-1")) {_                _                millis = -1__            } else if (lowerSValue.equals("0")) {_                _                millis = 0__            } else {_                throw new ElasticsearchParseException(_                        "Failed to parse setting [{}] with value [{}] as a time value: unit is missing or unrecognized",_                        settingName, sValue)__            }_            return new TimeValue(millis, TimeUnit.MILLISECONDS)__        } catch (NumberFormatException e) {_            throw new ElasticsearchParseException("Failed to parse [{}]", e, sValue)__        }_    };parse,a,link,time,value,with,support,for,fractional,values;public,static,time,value,parse,time,value,supporting,fractional,nullable,string,s,value,string,setting,name,objects,require,non,null,setting,name,if,s,value,null,return,null,try,long,millis,string,lower,svalue,s,value,to,lower,case,locale,root,trim,if,lower,svalue,ends,with,ms,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,2,else,if,lower,svalue,ends,with,s,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,1000,else,if,lower,svalue,ends,with,m,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,60,1000,else,if,lower,svalue,ends,with,h,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,60,60,1000,else,if,lower,svalue,ends,with,d,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,24,60,60,1000,else,if,lower,svalue,ends,with,w,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,7,24,60,60,1000,else,if,lower,svalue,equals,1,millis,1,else,if,lower,svalue,equals,0,millis,0,else,throw,new,elasticsearch,parse,exception,failed,to,parse,setting,with,value,as,a,time,value,unit,is,missing,or,unrecognized,setting,name,s,value,return,new,time,value,millis,time,unit,milliseconds,catch,number,format,exception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,e,s,value
WatcherDateTimeUtils -> public static TimeValue parseTimeValueSupportingFractional(@Nullable String sValue, String settingName);1544232221;Parse a {@link TimeValue} with support for fractional values.;public static TimeValue parseTimeValueSupportingFractional(@Nullable String sValue, String settingName) {_        _        _        Objects.requireNonNull(settingName)__        if (sValue == null) {_            return null__        }_        try {_            long millis__            String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()__            if (lowerSValue.endsWith("ms")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)))__            } else if (lowerSValue.endsWith("s")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 1000)__            } else if (lowerSValue.endsWith("m")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 60 * 1000)__            } else if (lowerSValue.endsWith("h")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 60 * 60 * 1000)__            } else if (lowerSValue.endsWith("d")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 24 * 60 * 60 * 1000)__            } else if (lowerSValue.endsWith("w")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 7 * 24 * 60 * 60 * 1000)__            } else if (lowerSValue.equals("-1")) {_                _                millis = -1__            } else if (lowerSValue.equals("0")) {_                _                millis = 0__            } else {_                throw new ElasticsearchParseException(_                        "Failed to parse setting [{}] with value [{}] as a time value: unit is missing or unrecognized",_                        settingName, sValue)__            }_            return new TimeValue(millis, TimeUnit.MILLISECONDS)__        } catch (NumberFormatException e) {_            throw new ElasticsearchParseException("Failed to parse [{}]", e, sValue)__        }_    };parse,a,link,time,value,with,support,for,fractional,values;public,static,time,value,parse,time,value,supporting,fractional,nullable,string,s,value,string,setting,name,objects,require,non,null,setting,name,if,s,value,null,return,null,try,long,millis,string,lower,svalue,s,value,to,lower,case,locale,root,trim,if,lower,svalue,ends,with,ms,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,2,else,if,lower,svalue,ends,with,s,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,1000,else,if,lower,svalue,ends,with,m,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,60,1000,else,if,lower,svalue,ends,with,h,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,60,60,1000,else,if,lower,svalue,ends,with,d,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,24,60,60,1000,else,if,lower,svalue,ends,with,w,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,7,24,60,60,1000,else,if,lower,svalue,equals,1,millis,1,else,if,lower,svalue,equals,0,millis,0,else,throw,new,elasticsearch,parse,exception,failed,to,parse,setting,with,value,as,a,time,value,unit,is,missing,or,unrecognized,setting,name,s,value,return,new,time,value,millis,time,unit,milliseconds,catch,number,format,exception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,e,s,value
WatcherDateTimeUtils -> public static TimeValue parseTimeValueSupportingFractional(@Nullable String sValue, String settingName);1544458001;Parse a {@link TimeValue} with support for fractional values.;public static TimeValue parseTimeValueSupportingFractional(@Nullable String sValue, String settingName) {_        _        _        Objects.requireNonNull(settingName)__        if (sValue == null) {_            return null__        }_        try {_            long millis__            String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()__            if (lowerSValue.endsWith("ms")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)))__            } else if (lowerSValue.endsWith("s")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 1000)__            } else if (lowerSValue.endsWith("m")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 60 * 1000)__            } else if (lowerSValue.endsWith("h")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 60 * 60 * 1000)__            } else if (lowerSValue.endsWith("d")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 24 * 60 * 60 * 1000)__            } else if (lowerSValue.endsWith("w")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 7 * 24 * 60 * 60 * 1000)__            } else if (lowerSValue.equals("-1")) {_                _                millis = -1__            } else if (lowerSValue.equals("0")) {_                _                millis = 0__            } else {_                throw new ElasticsearchParseException(_                        "Failed to parse setting [{}] with value [{}] as a time value: unit is missing or unrecognized",_                        settingName, sValue)__            }_            return new TimeValue(millis, TimeUnit.MILLISECONDS)__        } catch (NumberFormatException e) {_            throw new ElasticsearchParseException("Failed to parse [{}]", e, sValue)__        }_    };parse,a,link,time,value,with,support,for,fractional,values;public,static,time,value,parse,time,value,supporting,fractional,nullable,string,s,value,string,setting,name,objects,require,non,null,setting,name,if,s,value,null,return,null,try,long,millis,string,lower,svalue,s,value,to,lower,case,locale,root,trim,if,lower,svalue,ends,with,ms,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,2,else,if,lower,svalue,ends,with,s,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,1000,else,if,lower,svalue,ends,with,m,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,60,1000,else,if,lower,svalue,ends,with,h,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,60,60,1000,else,if,lower,svalue,ends,with,d,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,24,60,60,1000,else,if,lower,svalue,ends,with,w,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,7,24,60,60,1000,else,if,lower,svalue,equals,1,millis,1,else,if,lower,svalue,equals,0,millis,0,else,throw,new,elasticsearch,parse,exception,failed,to,parse,setting,with,value,as,a,time,value,unit,is,missing,or,unrecognized,setting,name,s,value,return,new,time,value,millis,time,unit,milliseconds,catch,number,format,exception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,e,s,value
WatcherDateTimeUtils -> public static TimeValue parseTimeValueSupportingFractional(@Nullable String sValue, String settingName);1544491765;Parse a {@link TimeValue} with support for fractional values.;public static TimeValue parseTimeValueSupportingFractional(@Nullable String sValue, String settingName) {_        _        _        Objects.requireNonNull(settingName)__        if (sValue == null) {_            return null__        }_        try {_            long millis__            String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()__            if (lowerSValue.endsWith("ms")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)))__            } else if (lowerSValue.endsWith("s")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 1000)__            } else if (lowerSValue.endsWith("m")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 60 * 1000)__            } else if (lowerSValue.endsWith("h")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 60 * 60 * 1000)__            } else if (lowerSValue.endsWith("d")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 24 * 60 * 60 * 1000)__            } else if (lowerSValue.endsWith("w")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 7 * 24 * 60 * 60 * 1000)__            } else if (lowerSValue.equals("-1")) {_                _                millis = -1__            } else if (lowerSValue.equals("0")) {_                _                millis = 0__            } else {_                throw new ElasticsearchParseException(_                        "Failed to parse setting [{}] with value [{}] as a time value: unit is missing or unrecognized",_                        settingName, sValue)__            }_            return new TimeValue(millis, TimeUnit.MILLISECONDS)__        } catch (NumberFormatException e) {_            throw new ElasticsearchParseException("Failed to parse [{}]", e, sValue)__        }_    };parse,a,link,time,value,with,support,for,fractional,values;public,static,time,value,parse,time,value,supporting,fractional,nullable,string,s,value,string,setting,name,objects,require,non,null,setting,name,if,s,value,null,return,null,try,long,millis,string,lower,svalue,s,value,to,lower,case,locale,root,trim,if,lower,svalue,ends,with,ms,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,2,else,if,lower,svalue,ends,with,s,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,1000,else,if,lower,svalue,ends,with,m,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,60,1000,else,if,lower,svalue,ends,with,h,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,60,60,1000,else,if,lower,svalue,ends,with,d,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,24,60,60,1000,else,if,lower,svalue,ends,with,w,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,7,24,60,60,1000,else,if,lower,svalue,equals,1,millis,1,else,if,lower,svalue,equals,0,millis,0,else,throw,new,elasticsearch,parse,exception,failed,to,parse,setting,with,value,as,a,time,value,unit,is,missing,or,unrecognized,setting,name,s,value,return,new,time,value,millis,time,unit,milliseconds,catch,number,format,exception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,e,s,value
WatcherDateTimeUtils -> public static TimeValue parseTimeValueSupportingFractional(@Nullable String sValue, String settingName);1548236405;Parse a {@link TimeValue} with support for fractional values.;public static TimeValue parseTimeValueSupportingFractional(@Nullable String sValue, String settingName) {_        _        _        Objects.requireNonNull(settingName)__        if (sValue == null) {_            return null__        }_        try {_            long millis__            String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()__            if (lowerSValue.endsWith("ms")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)))__            } else if (lowerSValue.endsWith("s")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 1000)__            } else if (lowerSValue.endsWith("m")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 60 * 1000)__            } else if (lowerSValue.endsWith("h")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 60 * 60 * 1000)__            } else if (lowerSValue.endsWith("d")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 24 * 60 * 60 * 1000)__            } else if (lowerSValue.endsWith("w")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 7 * 24 * 60 * 60 * 1000)__            } else if (lowerSValue.equals("-1")) {_                _                millis = -1__            } else if (lowerSValue.equals("0")) {_                _                millis = 0__            } else {_                throw new ElasticsearchParseException(_                        "Failed to parse setting [{}] with value [{}] as a time value: unit is missing or unrecognized",_                        settingName, sValue)__            }_            return new TimeValue(millis, TimeUnit.MILLISECONDS)__        } catch (NumberFormatException e) {_            throw new ElasticsearchParseException("Failed to parse [{}]", e, sValue)__        }_    };parse,a,link,time,value,with,support,for,fractional,values;public,static,time,value,parse,time,value,supporting,fractional,nullable,string,s,value,string,setting,name,objects,require,non,null,setting,name,if,s,value,null,return,null,try,long,millis,string,lower,svalue,s,value,to,lower,case,locale,root,trim,if,lower,svalue,ends,with,ms,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,2,else,if,lower,svalue,ends,with,s,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,1000,else,if,lower,svalue,ends,with,m,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,60,1000,else,if,lower,svalue,ends,with,h,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,60,60,1000,else,if,lower,svalue,ends,with,d,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,24,60,60,1000,else,if,lower,svalue,ends,with,w,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,7,24,60,60,1000,else,if,lower,svalue,equals,1,millis,1,else,if,lower,svalue,equals,0,millis,0,else,throw,new,elasticsearch,parse,exception,failed,to,parse,setting,with,value,as,a,time,value,unit,is,missing,or,unrecognized,setting,name,s,value,return,new,time,value,millis,time,unit,milliseconds,catch,number,format,exception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,e,s,value
WatcherDateTimeUtils -> public static TimeValue parseTimeValueSupportingFractional(@Nullable String sValue, String settingName);1549289311;Parse a {@link TimeValue} with support for fractional values.;public static TimeValue parseTimeValueSupportingFractional(@Nullable String sValue, String settingName) {_        _        _        Objects.requireNonNull(settingName)__        if (sValue == null) {_            return null__        }_        try {_            long millis__            String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()__            if (lowerSValue.endsWith("ms")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)))__            } else if (lowerSValue.endsWith("s")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 1000)__            } else if (lowerSValue.endsWith("m")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 60 * 1000)__            } else if (lowerSValue.endsWith("h")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 60 * 60 * 1000)__            } else if (lowerSValue.endsWith("d")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 24 * 60 * 60 * 1000)__            } else if (lowerSValue.endsWith("w")) {_                millis = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * 7 * 24 * 60 * 60 * 1000)__            } else if (lowerSValue.equals("-1")) {_                _                millis = -1__            } else if (lowerSValue.equals("0")) {_                _                millis = 0__            } else {_                throw new ElasticsearchParseException(_                        "Failed to parse setting [{}] with value [{}] as a time value: unit is missing or unrecognized",_                        settingName, sValue)__            }_            return new TimeValue(millis, TimeUnit.MILLISECONDS)__        } catch (NumberFormatException e) {_            throw new ElasticsearchParseException("Failed to parse [{}]", e, sValue)__        }_    };parse,a,link,time,value,with,support,for,fractional,values;public,static,time,value,parse,time,value,supporting,fractional,nullable,string,s,value,string,setting,name,objects,require,non,null,setting,name,if,s,value,null,return,null,try,long,millis,string,lower,svalue,s,value,to,lower,case,locale,root,trim,if,lower,svalue,ends,with,ms,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,2,else,if,lower,svalue,ends,with,s,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,1000,else,if,lower,svalue,ends,with,m,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,60,1000,else,if,lower,svalue,ends,with,h,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,60,60,1000,else,if,lower,svalue,ends,with,d,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,24,60,60,1000,else,if,lower,svalue,ends,with,w,millis,long,double,parse,double,lower,svalue,substring,0,lower,svalue,length,1,7,24,60,60,1000,else,if,lower,svalue,equals,1,millis,1,else,if,lower,svalue,equals,0,millis,0,else,throw,new,elasticsearch,parse,exception,failed,to,parse,setting,with,value,as,a,time,value,unit,is,missing,or,unrecognized,setting,name,s,value,return,new,time,value,millis,time,unit,milliseconds,catch,number,format,exception,e,throw,new,elasticsearch,parse,exception,failed,to,parse,e,s,value
