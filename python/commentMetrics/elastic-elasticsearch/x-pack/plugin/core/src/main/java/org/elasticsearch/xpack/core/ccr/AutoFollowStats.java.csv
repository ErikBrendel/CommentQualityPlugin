commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;3;;public static AutoFollowStats fromXContent(final XContentParser parser) {     return STATS_PARSER.apply(parser, null). }
false;public;1;17;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeVLong(numberOfFailedFollowIndices).     out.writeVLong(numberOfFailedRemoteClusterStateRequests).     out.writeVLong(numberOfSuccessfulFollowIndices).     if (out.getVersion().onOrAfter(Version.V_6_7_0)) {         out.writeMap(recentAutoFollowErrors, StreamOutput::writeString, (out1, value) -> {             out1.writeZLong(value.v1()).             out1.writeException(value.v2()).         }).     } else {         out.writeMap(recentAutoFollowErrors, StreamOutput::writeString, (out1, value) -> out1.writeException(value.v2())).     }     if (out.getVersion().onOrAfter(Version.V_6_6_0)) {         out.writeMap(autoFollowedClusters, StreamOutput::writeString, (out1, value) -> value.writeTo(out1)).     } }
false;public;0;3;;public long getNumberOfFailedFollowIndices() {     return numberOfFailedFollowIndices. }
false;public;0;3;;public long getNumberOfFailedRemoteClusterStateRequests() {     return numberOfFailedRemoteClusterStateRequests. }
false;public;0;3;;public long getNumberOfSuccessfulFollowIndices() {     return numberOfSuccessfulFollowIndices. }
false;public;0;3;;public NavigableMap<String, Tuple<Long, ElasticsearchException>> getRecentAutoFollowErrors() {     return recentAutoFollowErrors. }
false;public;0;3;;public NavigableMap<String, AutoFollowedCluster> getAutoFollowedClusters() {     return autoFollowedClusters. }
false;public;2;9;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     {         toXContentFragment(builder, params).     }     builder.endObject().     return builder. }
false;public;2;37;;public XContentBuilder toXContentFragment(final XContentBuilder builder, final Params params) throws IOException {     builder.field(NUMBER_OF_FAILED_INDICES_AUTO_FOLLOWED.getPreferredName(), numberOfFailedFollowIndices).     builder.field(NUMBER_OF_FAILED_REMOTE_CLUSTER_STATE_REQUESTS.getPreferredName(), numberOfFailedRemoteClusterStateRequests).     builder.field(NUMBER_OF_SUCCESSFUL_INDICES_AUTO_FOLLOWED.getPreferredName(), numberOfSuccessfulFollowIndices).     builder.startArray(RECENT_AUTO_FOLLOW_ERRORS.getPreferredName()).     {         for (final Map.Entry<String, Tuple<Long, ElasticsearchException>> entry : recentAutoFollowErrors.entrySet()) {             builder.startObject().             {                 builder.field(LEADER_INDEX.getPreferredName(), entry.getKey()).                 builder.field(TIMESTAMP.getPreferredName(), entry.getValue().v1()).                 builder.field(AUTO_FOLLOW_EXCEPTION.getPreferredName()).                 builder.startObject().                 {                     ElasticsearchException.generateThrowableXContent(builder, params, entry.getValue().v2()).                 }                 builder.endObject().             }             builder.endObject().         }     }     builder.endArray().     builder.startArray(AUTO_FOLLOWED_CLUSTERS.getPreferredName()).     {         for (final Map.Entry<String, AutoFollowedCluster> entry : autoFollowedClusters.entrySet()) {             builder.startObject().             {                 builder.field(CLUSTER_NAME.getPreferredName(), entry.getKey()).                 builder.field(TIME_SINCE_LAST_CHECK_MILLIS.getPreferredName(), entry.getValue().getTimeSinceLastCheckMillis()).                 builder.field(LAST_SEEN_METADATA_VERSION.getPreferredName(), entry.getValue().getLastSeenMetadataVersion()).             }             builder.endObject().         }     }     builder.endArray().     return builder. }
false;public;1;17;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     AutoFollowStats that = (AutoFollowStats) o.     return numberOfFailedFollowIndices == that.numberOfFailedFollowIndices && numberOfFailedRemoteClusterStateRequests == that.numberOfFailedRemoteClusterStateRequests && numberOfSuccessfulFollowIndices == that.numberOfSuccessfulFollowIndices && /*              * ElasticsearchException does not implement equals so we will assume the fetch exceptions are equal if they are equal              * up to the key set and their messages.  Note that we are relying on the fact that the auto follow exceptions are ordered by              * keys.              */     recentAutoFollowErrors.keySet().equals(that.recentAutoFollowErrors.keySet()) && getFetchExceptionMessages(this).equals(getFetchExceptionMessages(that)) && Objects.equals(autoFollowedClusters, that.autoFollowedClusters). }
false;public;0;15;;@Override public int hashCode() {     return Objects.hash(numberOfFailedFollowIndices, numberOfFailedRemoteClusterStateRequests, numberOfSuccessfulFollowIndices, /*              * ElasticsearchException does not implement hash code so we will compute the hash code based on the key set and the              * messages. Note that we are relying on the fact that the auto follow exceptions are ordered by keys.              */     recentAutoFollowErrors.keySet(), getFetchExceptionMessages(this), autoFollowedClusters). }
false;private,static;1;7;;private static List<String> getFetchExceptionMessages(final AutoFollowStats status) {     return status.getRecentAutoFollowErrors().values().stream().map(Tuple::v2).map(ElasticsearchException::getMessage).collect(Collectors.toList()). }
false;public;0;10;;@Override public String toString() {     return "AutoFollowStats{" + "numberOfFailedFollowIndices=" + numberOfFailedFollowIndices + ", numberOfFailedRemoteClusterStateRequests=" + numberOfFailedRemoteClusterStateRequests + ", numberOfSuccessfulFollowIndices=" + numberOfSuccessfulFollowIndices + ", recentAutoFollowErrors=" + recentAutoFollowErrors + ", autoFollowedClusters=" + autoFollowedClusters + '}'. }
false;public;0;3;;public long getTimeSinceLastCheckMillis() {     return timeSinceLastCheckMillis. }
false;public;0;3;;public long getLastSeenMetadataVersion() {     return lastSeenMetadataVersion. }
false;public;1;5;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeZLong(timeSinceLastCheckMillis).     out.writeVLong(lastSeenMetadataVersion). }
false;public;1;8;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     AutoFollowedCluster that = (AutoFollowedCluster) o.     return timeSinceLastCheckMillis == that.timeSinceLastCheckMillis && lastSeenMetadataVersion == that.lastSeenMetadataVersion. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(timeSinceLastCheckMillis, lastSeenMetadataVersion). }
false;public;0;7;;@Override public String toString() {     return "AutoFollowedCluster{" + "timeSinceLastCheckMillis=" + timeSinceLastCheckMillis + ", lastSeenMetadataVersion=" + lastSeenMetadataVersion + '}'. }
