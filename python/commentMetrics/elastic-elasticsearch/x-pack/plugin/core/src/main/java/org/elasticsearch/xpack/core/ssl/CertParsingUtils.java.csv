# id;timestamp;commentText;codeText;commentWords;codeWords
CertParsingUtils -> public static Certificate[] readCertificates(List<String> certPaths, @Nullable Environment environment)             throws CertificateException, IOException;1527622193;Reads the provided paths and parses them into {@link Certificate} objects__@param certPaths   the paths to the PEM encoded certificates_@param environment the environment to resolve files against. May be {@code null}_@return an array of {@link Certificate} objects;public static Certificate[] readCertificates(List<String> certPaths, @Nullable Environment environment)_            throws CertificateException, IOException {_        final List<Path> resolvedPaths = certPaths.stream().map(p -> resolvePath(p, environment)).collect(Collectors.toList())__        return readCertificates(resolvedPaths)__    };reads,the,provided,paths,and,parses,them,into,link,certificate,objects,param,cert,paths,the,paths,to,the,pem,encoded,certificates,param,environment,the,environment,to,resolve,files,against,may,be,code,null,return,an,array,of,link,certificate,objects;public,static,certificate,read,certificates,list,string,cert,paths,nullable,environment,environment,throws,certificate,exception,ioexception,final,list,path,resolved,paths,cert,paths,stream,map,p,resolve,path,p,environment,collect,collectors,to,list,return,read,certificates,resolved,paths
CertParsingUtils -> public static Certificate[] readCertificates(List<String> certPaths, @Nullable Environment environment)             throws CertificateException, IOException;1531910483;Reads the provided paths and parses them into {@link Certificate} objects__@param certPaths   the paths to the PEM encoded certificates_@param environment the environment to resolve files against. May be {@code null}_@return an array of {@link Certificate} objects;public static Certificate[] readCertificates(List<String> certPaths, @Nullable Environment environment)_            throws CertificateException, IOException {_        final List<Path> resolvedPaths = certPaths.stream().map(p -> resolvePath(p, environment)).collect(Collectors.toList())__        return readCertificates(resolvedPaths)__    };reads,the,provided,paths,and,parses,them,into,link,certificate,objects,param,cert,paths,the,paths,to,the,pem,encoded,certificates,param,environment,the,environment,to,resolve,files,against,may,be,code,null,return,an,array,of,link,certificate,objects;public,static,certificate,read,certificates,list,string,cert,paths,nullable,environment,environment,throws,certificate,exception,ioexception,final,list,path,resolved,paths,cert,paths,stream,map,p,resolve,path,p,environment,collect,collectors,to,list,return,read,certificates,resolved,paths
CertParsingUtils -> public static Certificate[] readCertificates(List<String> certPaths, @Nullable Environment environment)             throws CertificateException, IOException;1532353780;Reads the provided paths and parses them into {@link Certificate} objects__@param certPaths   the paths to the PEM encoded certificates_@param environment the environment to resolve files against. May be {@code null}_@return an array of {@link Certificate} objects;public static Certificate[] readCertificates(List<String> certPaths, @Nullable Environment environment)_            throws CertificateException, IOException {_        final List<Path> resolvedPaths = certPaths.stream().map(p -> resolvePath(p, environment)).collect(Collectors.toList())__        return readCertificates(resolvedPaths)__    };reads,the,provided,paths,and,parses,them,into,link,certificate,objects,param,cert,paths,the,paths,to,the,pem,encoded,certificates,param,environment,the,environment,to,resolve,files,against,may,be,code,null,return,an,array,of,link,certificate,objects;public,static,certificate,read,certificates,list,string,cert,paths,nullable,environment,environment,throws,certificate,exception,ioexception,final,list,path,resolved,paths,cert,paths,stream,map,p,resolve,path,p,environment,collect,collectors,to,list,return,read,certificates,resolved,paths
CertParsingUtils -> public static Certificate[] readCertificates(List<String> certPaths, @Nullable Environment environment)             throws CertificateException, IOException;1539615817;Reads the provided paths and parses them into {@link Certificate} objects__@param certPaths   the paths to the PEM encoded certificates_@param environment the environment to resolve files against. May be {@code null}_@return an array of {@link Certificate} objects;public static Certificate[] readCertificates(List<String> certPaths, @Nullable Environment environment)_            throws CertificateException, IOException {_        final List<Path> resolvedPaths = certPaths.stream().map(p -> resolvePath(p, environment)).collect(Collectors.toList())__        return readCertificates(resolvedPaths)__    };reads,the,provided,paths,and,parses,them,into,link,certificate,objects,param,cert,paths,the,paths,to,the,pem,encoded,certificates,param,environment,the,environment,to,resolve,files,against,may,be,code,null,return,an,array,of,link,certificate,objects;public,static,certificate,read,certificates,list,string,cert,paths,nullable,environment,environment,throws,certificate,exception,ioexception,final,list,path,resolved,paths,cert,paths,stream,map,p,resolve,path,p,environment,collect,collectors,to,list,return,read,certificates,resolved,paths
CertParsingUtils -> public static X509ExtendedKeyManager keyManager(KeyStore keyStore, char[] password, String algorithm)             throws NoSuchAlgorithmException, UnrecoverableKeyException, KeyStoreException;1532353780;Returns a {@link X509ExtendedKeyManager} that is built from the provided keystore;public static X509ExtendedKeyManager keyManager(KeyStore keyStore, char[] password, String algorithm)_            throws NoSuchAlgorithmException, UnrecoverableKeyException, KeyStoreException {_        KeyManagerFactory kmf = KeyManagerFactory.getInstance(algorithm)__        kmf.init(keyStore, password)__        KeyManager[] keyManagers = kmf.getKeyManagers()__        for (KeyManager keyManager : keyManagers) {_            if (keyManager instanceof X509ExtendedKeyManager) {_                return (X509ExtendedKeyManager) keyManager__            }_        }_        throw new IllegalStateException("failed to find a X509ExtendedKeyManager")__    };returns,a,link,x509extended,key,manager,that,is,built,from,the,provided,keystore;public,static,x509extended,key,manager,key,manager,key,store,key,store,char,password,string,algorithm,throws,no,such,algorithm,exception,unrecoverable,key,exception,key,store,exception,key,manager,factory,kmf,key,manager,factory,get,instance,algorithm,kmf,init,key,store,password,key,manager,key,managers,kmf,get,key,managers,for,key,manager,key,manager,key,managers,if,key,manager,instanceof,x509extended,key,manager,return,x509extended,key,manager,key,manager,throw,new,illegal,state,exception,failed,to,find,a,x509extended,key,manager
CertParsingUtils -> public static X509ExtendedKeyManager keyManager(KeyStore keyStore, char[] password, String algorithm)             throws NoSuchAlgorithmException, UnrecoverableKeyException, KeyStoreException;1539615817;Returns a {@link X509ExtendedKeyManager} that is built from the provided keystore;public static X509ExtendedKeyManager keyManager(KeyStore keyStore, char[] password, String algorithm)_            throws NoSuchAlgorithmException, UnrecoverableKeyException, KeyStoreException {_        KeyManagerFactory kmf = KeyManagerFactory.getInstance(algorithm)__        kmf.init(keyStore, password)__        KeyManager[] keyManagers = kmf.getKeyManagers()__        for (KeyManager keyManager : keyManagers) {_            if (keyManager instanceof X509ExtendedKeyManager) {_                return (X509ExtendedKeyManager) keyManager__            }_        }_        throw new IllegalStateException("failed to find a X509ExtendedKeyManager")__    };returns,a,link,x509extended,key,manager,that,is,built,from,the,provided,keystore;public,static,x509extended,key,manager,key,manager,key,store,key,store,char,password,string,algorithm,throws,no,such,algorithm,exception,unrecoverable,key,exception,key,store,exception,key,manager,factory,kmf,key,manager,factory,get,instance,algorithm,kmf,init,key,store,password,key,manager,key,managers,kmf,get,key,managers,for,key,manager,key,manager,key,managers,if,key,manager,instanceof,x509extended,key,manager,return,x509extended,key,manager,key,manager,throw,new,illegal,state,exception,failed,to,find,a,x509extended,key,manager
CertParsingUtils -> static X509ExtendedTrustManager trustManager(KeyStore keyStore, String algorithm)             throws NoSuchAlgorithmException, KeyStoreException;1527622193;Creates a {@link X509ExtendedTrustManager} based on the trust material in the provided {@link KeyStore};static X509ExtendedTrustManager trustManager(KeyStore keyStore, String algorithm)_            throws NoSuchAlgorithmException, KeyStoreException {_        TrustManagerFactory tmf = TrustManagerFactory.getInstance(algorithm)__        tmf.init(keyStore)__        TrustManager[] trustManagers = tmf.getTrustManagers()__        for (TrustManager trustManager : trustManagers) {_            if (trustManager instanceof X509ExtendedTrustManager) {_                return (X509ExtendedTrustManager) trustManager__            }_        }_        throw new IllegalStateException("failed to find a X509ExtendedTrustManager")__    };creates,a,link,x509extended,trust,manager,based,on,the,trust,material,in,the,provided,link,key,store;static,x509extended,trust,manager,trust,manager,key,store,key,store,string,algorithm,throws,no,such,algorithm,exception,key,store,exception,trust,manager,factory,tmf,trust,manager,factory,get,instance,algorithm,tmf,init,key,store,trust,manager,trust,managers,tmf,get,trust,managers,for,trust,manager,trust,manager,trust,managers,if,trust,manager,instanceof,x509extended,trust,manager,return,x509extended,trust,manager,trust,manager,throw,new,illegal,state,exception,failed,to,find,a,x509extended,trust,manager
CertParsingUtils -> static X509ExtendedTrustManager trustManager(KeyStore keyStore, String algorithm)             throws NoSuchAlgorithmException, KeyStoreException;1531910483;Creates a {@link X509ExtendedTrustManager} based on the trust material in the provided {@link KeyStore};static X509ExtendedTrustManager trustManager(KeyStore keyStore, String algorithm)_            throws NoSuchAlgorithmException, KeyStoreException {_        TrustManagerFactory tmf = TrustManagerFactory.getInstance(algorithm)__        tmf.init(keyStore)__        TrustManager[] trustManagers = tmf.getTrustManagers()__        for (TrustManager trustManager : trustManagers) {_            if (trustManager instanceof X509ExtendedTrustManager) {_                return (X509ExtendedTrustManager) trustManager__            }_        }_        throw new IllegalStateException("failed to find a X509ExtendedTrustManager")__    };creates,a,link,x509extended,trust,manager,based,on,the,trust,material,in,the,provided,link,key,store;static,x509extended,trust,manager,trust,manager,key,store,key,store,string,algorithm,throws,no,such,algorithm,exception,key,store,exception,trust,manager,factory,tmf,trust,manager,factory,get,instance,algorithm,tmf,init,key,store,trust,manager,trust,managers,tmf,get,trust,managers,for,trust,manager,trust,manager,trust,managers,if,trust,manager,instanceof,x509extended,trust,manager,return,x509extended,trust,manager,trust,manager,throw,new,illegal,state,exception,failed,to,find,a,x509extended,trust,manager
CertParsingUtils -> public static Map<Certificate, Key> readPkcs12KeyPairs(Path path, char[] password, Function<String, char[]> keyPassword)             throws CertificateException, NoSuchAlgorithmException, KeyStoreException, IOException, UnrecoverableKeyException;1527622193;Read all certificate-key pairs from a PKCS#12 container.__@param path        The path to the PKCS#12 container file._@param password    The password for the container file_@param keyPassword A supplier for the password for each key. The key alias is supplied as an argument to the function, and it should_return the password for that key. If it returns {@code null}, then the key-pair for that alias is not read.;public static Map<Certificate, Key> readPkcs12KeyPairs(Path path, char[] password, Function<String, char[]> keyPassword)_            throws CertificateException, NoSuchAlgorithmException, KeyStoreException, IOException, UnrecoverableKeyException {_        final KeyStore store = readKeyStore(path, "PKCS12", password)__        final Enumeration<String> enumeration = store.aliases()__        final Map<Certificate, Key> map = new HashMap<>(store.size())__        while (enumeration.hasMoreElements()) {_            final String alias = enumeration.nextElement()__            if (store.isKeyEntry(alias)) {_                final char[] pass = keyPassword.apply(alias)__                map.put(store.getCertificate(alias), store.getKey(alias, pass))__            }_        }_        return map__    };read,all,certificate,key,pairs,from,a,pkcs,12,container,param,path,the,path,to,the,pkcs,12,container,file,param,password,the,password,for,the,container,file,param,key,password,a,supplier,for,the,password,for,each,key,the,key,alias,is,supplied,as,an,argument,to,the,function,and,it,should,return,the,password,for,that,key,if,it,returns,code,null,then,the,key,pair,for,that,alias,is,not,read;public,static,map,certificate,key,read,pkcs12key,pairs,path,path,char,password,function,string,char,key,password,throws,certificate,exception,no,such,algorithm,exception,key,store,exception,ioexception,unrecoverable,key,exception,final,key,store,store,read,key,store,path,pkcs12,password,final,enumeration,string,enumeration,store,aliases,final,map,certificate,key,map,new,hash,map,store,size,while,enumeration,has,more,elements,final,string,alias,enumeration,next,element,if,store,is,key,entry,alias,final,char,pass,key,password,apply,alias,map,put,store,get,certificate,alias,store,get,key,alias,pass,return,map
CertParsingUtils -> public static Map<Certificate, Key> readPkcs12KeyPairs(Path path, char[] password, Function<String, char[]> keyPassword)             throws CertificateException, NoSuchAlgorithmException, KeyStoreException, IOException, UnrecoverableKeyException;1531910483;Read all certificate-key pairs from a PKCS#12 container.__@param path        The path to the PKCS#12 container file._@param password    The password for the container file_@param keyPassword A supplier for the password for each key. The key alias is supplied as an argument to the function, and it should_return the password for that key. If it returns {@code null}, then the key-pair for that alias is not read.;public static Map<Certificate, Key> readPkcs12KeyPairs(Path path, char[] password, Function<String, char[]> keyPassword)_            throws CertificateException, NoSuchAlgorithmException, KeyStoreException, IOException, UnrecoverableKeyException {_        final KeyStore store = readKeyStore(path, "PKCS12", password)__        final Enumeration<String> enumeration = store.aliases()__        final Map<Certificate, Key> map = new HashMap<>(store.size())__        while (enumeration.hasMoreElements()) {_            final String alias = enumeration.nextElement()__            if (store.isKeyEntry(alias)) {_                final char[] pass = keyPassword.apply(alias)__                map.put(store.getCertificate(alias), store.getKey(alias, pass))__            }_        }_        return map__    };read,all,certificate,key,pairs,from,a,pkcs,12,container,param,path,the,path,to,the,pkcs,12,container,file,param,password,the,password,for,the,container,file,param,key,password,a,supplier,for,the,password,for,each,key,the,key,alias,is,supplied,as,an,argument,to,the,function,and,it,should,return,the,password,for,that,key,if,it,returns,code,null,then,the,key,pair,for,that,alias,is,not,read;public,static,map,certificate,key,read,pkcs12key,pairs,path,path,char,password,function,string,char,key,password,throws,certificate,exception,no,such,algorithm,exception,key,store,exception,ioexception,unrecoverable,key,exception,final,key,store,store,read,key,store,path,pkcs12,password,final,enumeration,string,enumeration,store,aliases,final,map,certificate,key,map,new,hash,map,store,size,while,enumeration,has,more,elements,final,string,alias,enumeration,next,element,if,store,is,key,entry,alias,final,char,pass,key,password,apply,alias,map,put,store,get,certificate,alias,store,get,key,alias,pass,return,map
CertParsingUtils -> public static Map<Certificate, Key> readPkcs12KeyPairs(Path path, char[] password, Function<String, char[]> keyPassword)             throws CertificateException, NoSuchAlgorithmException, KeyStoreException, IOException, UnrecoverableKeyException;1532353780;Read all certificate-key pairs from a PKCS#12 container.__@param path        The path to the PKCS#12 container file._@param password    The password for the container file_@param keyPassword A supplier for the password for each key. The key alias is supplied as an argument to the function, and it should_return the password for that key. If it returns {@code null}, then the key-pair for that alias is not read.;public static Map<Certificate, Key> readPkcs12KeyPairs(Path path, char[] password, Function<String, char[]> keyPassword)_            throws CertificateException, NoSuchAlgorithmException, KeyStoreException, IOException, UnrecoverableKeyException {_        final KeyStore store = readKeyStore(path, "PKCS12", password)__        final Enumeration<String> enumeration = store.aliases()__        final Map<Certificate, Key> map = new HashMap<>(store.size())__        while (enumeration.hasMoreElements()) {_            final String alias = enumeration.nextElement()__            if (store.isKeyEntry(alias)) {_                final char[] pass = keyPassword.apply(alias)__                map.put(store.getCertificate(alias), store.getKey(alias, pass))__            }_        }_        return map__    };read,all,certificate,key,pairs,from,a,pkcs,12,container,param,path,the,path,to,the,pkcs,12,container,file,param,password,the,password,for,the,container,file,param,key,password,a,supplier,for,the,password,for,each,key,the,key,alias,is,supplied,as,an,argument,to,the,function,and,it,should,return,the,password,for,that,key,if,it,returns,code,null,then,the,key,pair,for,that,alias,is,not,read;public,static,map,certificate,key,read,pkcs12key,pairs,path,path,char,password,function,string,char,key,password,throws,certificate,exception,no,such,algorithm,exception,key,store,exception,ioexception,unrecoverable,key,exception,final,key,store,store,read,key,store,path,pkcs12,password,final,enumeration,string,enumeration,store,aliases,final,map,certificate,key,map,new,hash,map,store,size,while,enumeration,has,more,elements,final,string,alias,enumeration,next,element,if,store,is,key,entry,alias,final,char,pass,key,password,apply,alias,map,put,store,get,certificate,alias,store,get,key,alias,pass,return,map
CertParsingUtils -> public static Map<Certificate, Key> readPkcs12KeyPairs(Path path, char[] password, Function<String, char[]> keyPassword)             throws CertificateException, NoSuchAlgorithmException, KeyStoreException, IOException, UnrecoverableKeyException;1539615817;Read all certificate-key pairs from a PKCS#12 container.__@param path        The path to the PKCS#12 container file._@param password    The password for the container file_@param keyPassword A supplier for the password for each key. The key alias is supplied as an argument to the function, and it should_return the password for that key. If it returns {@code null}, then the key-pair for that alias is not read.;public static Map<Certificate, Key> readPkcs12KeyPairs(Path path, char[] password, Function<String, char[]> keyPassword)_            throws CertificateException, NoSuchAlgorithmException, KeyStoreException, IOException, UnrecoverableKeyException {_        final KeyStore store = readKeyStore(path, "PKCS12", password)__        final Enumeration<String> enumeration = store.aliases()__        final Map<Certificate, Key> map = new HashMap<>(store.size())__        while (enumeration.hasMoreElements()) {_            final String alias = enumeration.nextElement()__            if (store.isKeyEntry(alias)) {_                final char[] pass = keyPassword.apply(alias)__                map.put(store.getCertificate(alias), store.getKey(alias, pass))__            }_        }_        return map__    };read,all,certificate,key,pairs,from,a,pkcs,12,container,param,path,the,path,to,the,pkcs,12,container,file,param,password,the,password,for,the,container,file,param,key,password,a,supplier,for,the,password,for,each,key,the,key,alias,is,supplied,as,an,argument,to,the,function,and,it,should,return,the,password,for,that,key,if,it,returns,code,null,then,the,key,pair,for,that,alias,is,not,read;public,static,map,certificate,key,read,pkcs12key,pairs,path,path,char,password,function,string,char,key,password,throws,certificate,exception,no,such,algorithm,exception,key,store,exception,ioexception,unrecoverable,key,exception,final,key,store,store,read,key,store,path,pkcs12,password,final,enumeration,string,enumeration,store,aliases,final,map,certificate,key,map,new,hash,map,store,size,while,enumeration,has,more,elements,final,string,alias,enumeration,next,element,if,store,is,key,entry,alias,final,char,pass,key,password,apply,alias,map,put,store,get,certificate,alias,store,get,key,alias,pass,return,map
CertParsingUtils -> @SuppressForbidden(reason = "we don't have the environment to resolve files from when running in a transport client")     static Path resolvePath(String path, @Nullable Environment environment);1527622193;Resolves a path with or without an {@link Environment} as we may be running in a transport client where we do not have access to_the environment;@SuppressForbidden(reason = "we don't have the environment to resolve files from when running in a transport client")_    static Path resolvePath(String path, @Nullable Environment environment) {_        if (environment != null) {_            return environment.configFile().resolve(path)__        }_        return PathUtils.get(path).normalize()__    };resolves,a,path,with,or,without,an,link,environment,as,we,may,be,running,in,a,transport,client,where,we,do,not,have,access,to,the,environment;suppress,forbidden,reason,we,don,t,have,the,environment,to,resolve,files,from,when,running,in,a,transport,client,static,path,resolve,path,string,path,nullable,environment,environment,if,environment,null,return,environment,config,file,resolve,path,return,path,utils,get,path,normalize
CertParsingUtils -> @SuppressForbidden(reason = "we don't have the environment to resolve files from when running in a transport client")     static Path resolvePath(String path, @Nullable Environment environment);1531910483;Resolves a path with or without an {@link Environment} as we may be running in a transport client where we do not have access to_the environment;@SuppressForbidden(reason = "we don't have the environment to resolve files from when running in a transport client")_    static Path resolvePath(String path, @Nullable Environment environment) {_        if (environment != null) {_            return environment.configFile().resolve(path)__        }_        return PathUtils.get(path).normalize()__    };resolves,a,path,with,or,without,an,link,environment,as,we,may,be,running,in,a,transport,client,where,we,do,not,have,access,to,the,environment;suppress,forbidden,reason,we,don,t,have,the,environment,to,resolve,files,from,when,running,in,a,transport,client,static,path,resolve,path,string,path,nullable,environment,environment,if,environment,null,return,environment,config,file,resolve,path,return,path,utils,get,path,normalize
CertParsingUtils -> @SuppressForbidden(reason = "we don't have the environment to resolve files from when running in a transport client")     static Path resolvePath(String path, @Nullable Environment environment);1532353780;Resolves a path with or without an {@link Environment} as we may be running in a transport client where we do not have access to_the environment;@SuppressForbidden(reason = "we don't have the environment to resolve files from when running in a transport client")_    static Path resolvePath(String path, @Nullable Environment environment) {_        if (environment != null) {_            return environment.configFile().resolve(path)__        }_        return PathUtils.get(path).normalize()__    };resolves,a,path,with,or,without,an,link,environment,as,we,may,be,running,in,a,transport,client,where,we,do,not,have,access,to,the,environment;suppress,forbidden,reason,we,don,t,have,the,environment,to,resolve,files,from,when,running,in,a,transport,client,static,path,resolve,path,string,path,nullable,environment,environment,if,environment,null,return,environment,config,file,resolve,path,return,path,utils,get,path,normalize
CertParsingUtils -> @SuppressForbidden(reason = "we don't have the environment to resolve files from when running in a transport client")     static Path resolvePath(String path, @Nullable Environment environment);1539615817;Resolves a path with or without an {@link Environment} as we may be running in a transport client where we do not have access to_the environment;@SuppressForbidden(reason = "we don't have the environment to resolve files from when running in a transport client")_    static Path resolvePath(String path, @Nullable Environment environment) {_        if (environment != null) {_            return environment.configFile().resolve(path)__        }_        return PathUtils.get(path).normalize()__    };resolves,a,path,with,or,without,an,link,environment,as,we,may,be,running,in,a,transport,client,where,we,do,not,have,access,to,the,environment;suppress,forbidden,reason,we,don,t,have,the,environment,to,resolve,files,from,when,running,in,a,transport,client,static,path,resolve,path,string,path,nullable,environment,environment,if,environment,null,return,environment,config,file,resolve,path,return,path,utils,get,path,normalize
CertParsingUtils -> public static X509ExtendedTrustManager trustManager(Certificate[] certificates)             throws NoSuchAlgorithmException, KeyStoreException, IOException, CertificateException;1527622193;Creates a {@link X509ExtendedTrustManager} based on the provided certificates__@param certificates the certificates to trust_@return a trust manager that trusts the provided certificates;public static X509ExtendedTrustManager trustManager(Certificate[] certificates)_            throws NoSuchAlgorithmException, KeyStoreException, IOException, CertificateException {_        KeyStore store = trustStore(certificates)__        return trustManager(store, TrustManagerFactory.getDefaultAlgorithm())__    };creates,a,link,x509extended,trust,manager,based,on,the,provided,certificates,param,certificates,the,certificates,to,trust,return,a,trust,manager,that,trusts,the,provided,certificates;public,static,x509extended,trust,manager,trust,manager,certificate,certificates,throws,no,such,algorithm,exception,key,store,exception,ioexception,certificate,exception,key,store,store,trust,store,certificates,return,trust,manager,store,trust,manager,factory,get,default,algorithm
CertParsingUtils -> public static X509ExtendedTrustManager trustManager(Certificate[] certificates)             throws NoSuchAlgorithmException, KeyStoreException, IOException, CertificateException;1531910483;Creates a {@link X509ExtendedTrustManager} based on the provided certificates__@param certificates the certificates to trust_@return a trust manager that trusts the provided certificates;public static X509ExtendedTrustManager trustManager(Certificate[] certificates)_            throws NoSuchAlgorithmException, KeyStoreException, IOException, CertificateException {_        KeyStore store = trustStore(certificates)__        return trustManager(store, TrustManagerFactory.getDefaultAlgorithm())__    };creates,a,link,x509extended,trust,manager,based,on,the,provided,certificates,param,certificates,the,certificates,to,trust,return,a,trust,manager,that,trusts,the,provided,certificates;public,static,x509extended,trust,manager,trust,manager,certificate,certificates,throws,no,such,algorithm,exception,key,store,exception,ioexception,certificate,exception,key,store,store,trust,store,certificates,return,trust,manager,store,trust,manager,factory,get,default,algorithm
CertParsingUtils -> public static X509ExtendedTrustManager trustManager(Certificate[] certificates)             throws NoSuchAlgorithmException, KeyStoreException, IOException, CertificateException;1532353780;Creates a {@link X509ExtendedTrustManager} based on the provided certificates__@param certificates the certificates to trust_@return a trust manager that trusts the provided certificates;public static X509ExtendedTrustManager trustManager(Certificate[] certificates)_            throws NoSuchAlgorithmException, KeyStoreException, IOException, CertificateException {_        KeyStore store = trustStore(certificates)__        return trustManager(store, TrustManagerFactory.getDefaultAlgorithm())__    };creates,a,link,x509extended,trust,manager,based,on,the,provided,certificates,param,certificates,the,certificates,to,trust,return,a,trust,manager,that,trusts,the,provided,certificates;public,static,x509extended,trust,manager,trust,manager,certificate,certificates,throws,no,such,algorithm,exception,key,store,exception,ioexception,certificate,exception,key,store,store,trust,store,certificates,return,trust,manager,store,trust,manager,factory,get,default,algorithm
CertParsingUtils -> public static X509ExtendedTrustManager trustManager(Certificate[] certificates)             throws NoSuchAlgorithmException, KeyStoreException, IOException, CertificateException;1539615817;Creates a {@link X509ExtendedTrustManager} based on the provided certificates__@param certificates the certificates to trust_@return a trust manager that trusts the provided certificates;public static X509ExtendedTrustManager trustManager(Certificate[] certificates)_            throws NoSuchAlgorithmException, KeyStoreException, IOException, CertificateException {_        KeyStore store = trustStore(certificates)__        return trustManager(store, TrustManagerFactory.getDefaultAlgorithm())__    };creates,a,link,x509extended,trust,manager,based,on,the,provided,certificates,param,certificates,the,certificates,to,trust,return,a,trust,manager,that,trusts,the,provided,certificates;public,static,x509extended,trust,manager,trust,manager,certificate,certificates,throws,no,such,algorithm,exception,key,store,exception,ioexception,certificate,exception,key,store,store,trust,store,certificates,return,trust,manager,store,trust,manager,factory,get,default,algorithm
CertParsingUtils -> public static KeyStore getKeyStoreFromPEM(Path certificatePath, Path keyPath, char[] keyPassword)             throws IOException, CertificateException, KeyStoreException, NoSuchAlgorithmException;1532353780;Creates a {@link KeyStore} from a PEM encoded certificate and key file;public static KeyStore getKeyStoreFromPEM(Path certificatePath, Path keyPath, char[] keyPassword)_            throws IOException, CertificateException, KeyStoreException, NoSuchAlgorithmException {_        final PrivateKey key = PemUtils.readPrivateKey(keyPath, () -> keyPassword)__        final Certificate[] certificates = readCertificates(Collections.singletonList(certificatePath))__        return getKeyStore(certificates, key, keyPassword)__    };creates,a,link,key,store,from,a,pem,encoded,certificate,and,key,file;public,static,key,store,get,key,store,from,pem,path,certificate,path,path,key,path,char,key,password,throws,ioexception,certificate,exception,key,store,exception,no,such,algorithm,exception,final,private,key,key,pem,utils,read,private,key,key,path,key,password,final,certificate,certificates,read,certificates,collections,singleton,list,certificate,path,return,get,key,store,certificates,key,key,password
CertParsingUtils -> public static KeyStore getKeyStoreFromPEM(Path certificatePath, Path keyPath, char[] keyPassword)             throws IOException, CertificateException, KeyStoreException, NoSuchAlgorithmException;1539615817;Creates a {@link KeyStore} from a PEM encoded certificate and key file;public static KeyStore getKeyStoreFromPEM(Path certificatePath, Path keyPath, char[] keyPassword)_            throws IOException, CertificateException, KeyStoreException, NoSuchAlgorithmException {_        final PrivateKey key = PemUtils.readPrivateKey(keyPath, () -> keyPassword)__        final Certificate[] certificates = readCertificates(Collections.singletonList(certificatePath))__        return getKeyStore(certificates, key, keyPassword)__    };creates,a,link,key,store,from,a,pem,encoded,certificate,and,key,file;public,static,key,store,get,key,store,from,pem,path,certificate,path,path,key,path,char,key,password,throws,ioexception,certificate,exception,key,store,exception,no,such,algorithm,exception,final,private,key,key,pem,utils,read,private,key,key,path,key,password,final,certificate,certificates,read,certificates,collections,singleton,list,certificate,path,return,get,key,store,certificates,key,key,password
CertParsingUtils -> public static X509ExtendedTrustManager trustManager(KeyStore keyStore, String algorithm)             throws NoSuchAlgorithmException, KeyStoreException;1532353780;Creates a {@link X509ExtendedTrustManager} based on the trust material in the provided {@link KeyStore};public static X509ExtendedTrustManager trustManager(KeyStore keyStore, String algorithm)_            throws NoSuchAlgorithmException, KeyStoreException {_        TrustManagerFactory tmf = TrustManagerFactory.getInstance(algorithm)__        tmf.init(keyStore)__        TrustManager[] trustManagers = tmf.getTrustManagers()__        for (TrustManager trustManager : trustManagers) {_            if (trustManager instanceof X509ExtendedTrustManager) {_                return (X509ExtendedTrustManager) trustManager__            }_        }_        throw new IllegalStateException("failed to find a X509ExtendedTrustManager")__    };creates,a,link,x509extended,trust,manager,based,on,the,trust,material,in,the,provided,link,key,store;public,static,x509extended,trust,manager,trust,manager,key,store,key,store,string,algorithm,throws,no,such,algorithm,exception,key,store,exception,trust,manager,factory,tmf,trust,manager,factory,get,instance,algorithm,tmf,init,key,store,trust,manager,trust,managers,tmf,get,trust,managers,for,trust,manager,trust,manager,trust,managers,if,trust,manager,instanceof,x509extended,trust,manager,return,x509extended,trust,manager,trust,manager,throw,new,illegal,state,exception,failed,to,find,a,x509extended,trust,manager
CertParsingUtils -> public static X509ExtendedTrustManager trustManager(KeyStore keyStore, String algorithm)             throws NoSuchAlgorithmException, KeyStoreException;1539615817;Creates a {@link X509ExtendedTrustManager} based on the trust material in the provided {@link KeyStore};public static X509ExtendedTrustManager trustManager(KeyStore keyStore, String algorithm)_            throws NoSuchAlgorithmException, KeyStoreException {_        TrustManagerFactory tmf = TrustManagerFactory.getInstance(algorithm)__        tmf.init(keyStore)__        TrustManager[] trustManagers = tmf.getTrustManagers()__        for (TrustManager trustManager : trustManagers) {_            if (trustManager instanceof X509ExtendedTrustManager) {_                return (X509ExtendedTrustManager) trustManager__            }_        }_        throw new IllegalStateException("failed to find a X509ExtendedTrustManager")__    };creates,a,link,x509extended,trust,manager,based,on,the,trust,material,in,the,provided,link,key,store;public,static,x509extended,trust,manager,trust,manager,key,store,key,store,string,algorithm,throws,no,such,algorithm,exception,key,store,exception,trust,manager,factory,tmf,trust,manager,factory,get,instance,algorithm,tmf,init,key,store,trust,manager,trust,managers,tmf,get,trust,managers,for,trust,manager,trust,manager,trust,managers,if,trust,manager,instanceof,x509extended,trust,manager,return,x509extended,trust,manager,trust,manager,throw,new,illegal,state,exception,failed,to,find,a,x509extended,trust,manager
CertParsingUtils -> public static X509ExtendedKeyManager keyManager(Certificate[] certificateChain, PrivateKey privateKey, char[] password)             throws NoSuchAlgorithmException, UnrecoverableKeyException, KeyStoreException, IOException, CertificateException;1527622193;Returns a {@link X509ExtendedKeyManager} that is built from the provided private key and certificate chain;public static X509ExtendedKeyManager keyManager(Certificate[] certificateChain, PrivateKey privateKey, char[] password)_            throws NoSuchAlgorithmException, UnrecoverableKeyException, KeyStoreException, IOException, CertificateException {_        KeyStore keyStore = getKeyStore(certificateChain, privateKey, password)__        return keyManager(keyStore, password, KeyManagerFactory.getDefaultAlgorithm())__    };returns,a,link,x509extended,key,manager,that,is,built,from,the,provided,private,key,and,certificate,chain;public,static,x509extended,key,manager,key,manager,certificate,certificate,chain,private,key,private,key,char,password,throws,no,such,algorithm,exception,unrecoverable,key,exception,key,store,exception,ioexception,certificate,exception,key,store,key,store,get,key,store,certificate,chain,private,key,password,return,key,manager,key,store,password,key,manager,factory,get,default,algorithm
CertParsingUtils -> public static X509ExtendedKeyManager keyManager(Certificate[] certificateChain, PrivateKey privateKey, char[] password)             throws NoSuchAlgorithmException, UnrecoverableKeyException, KeyStoreException, IOException, CertificateException;1531910483;Returns a {@link X509ExtendedKeyManager} that is built from the provided private key and certificate chain;public static X509ExtendedKeyManager keyManager(Certificate[] certificateChain, PrivateKey privateKey, char[] password)_            throws NoSuchAlgorithmException, UnrecoverableKeyException, KeyStoreException, IOException, CertificateException {_        KeyStore keyStore = getKeyStore(certificateChain, privateKey, password)__        return keyManager(keyStore, password, KeyManagerFactory.getDefaultAlgorithm())__    };returns,a,link,x509extended,key,manager,that,is,built,from,the,provided,private,key,and,certificate,chain;public,static,x509extended,key,manager,key,manager,certificate,certificate,chain,private,key,private,key,char,password,throws,no,such,algorithm,exception,unrecoverable,key,exception,key,store,exception,ioexception,certificate,exception,key,store,key,store,get,key,store,certificate,chain,private,key,password,return,key,manager,key,store,password,key,manager,factory,get,default,algorithm
CertParsingUtils -> public static X509ExtendedKeyManager keyManager(Certificate[] certificateChain, PrivateKey privateKey, char[] password)             throws NoSuchAlgorithmException, UnrecoverableKeyException, KeyStoreException, IOException, CertificateException;1532353780;Returns a {@link X509ExtendedKeyManager} that is built from the provided private key and certificate chain;public static X509ExtendedKeyManager keyManager(Certificate[] certificateChain, PrivateKey privateKey, char[] password)_            throws NoSuchAlgorithmException, UnrecoverableKeyException, KeyStoreException, IOException, CertificateException {_        KeyStore keyStore = getKeyStore(certificateChain, privateKey, password)__        return keyManager(keyStore, password, KeyManagerFactory.getDefaultAlgorithm())__    };returns,a,link,x509extended,key,manager,that,is,built,from,the,provided,private,key,and,certificate,chain;public,static,x509extended,key,manager,key,manager,certificate,certificate,chain,private,key,private,key,char,password,throws,no,such,algorithm,exception,unrecoverable,key,exception,key,store,exception,ioexception,certificate,exception,key,store,key,store,get,key,store,certificate,chain,private,key,password,return,key,manager,key,store,password,key,manager,factory,get,default,algorithm
CertParsingUtils -> public static X509ExtendedKeyManager keyManager(Certificate[] certificateChain, PrivateKey privateKey, char[] password)             throws NoSuchAlgorithmException, UnrecoverableKeyException, KeyStoreException, IOException, CertificateException;1539615817;Returns a {@link X509ExtendedKeyManager} that is built from the provided private key and certificate chain;public static X509ExtendedKeyManager keyManager(Certificate[] certificateChain, PrivateKey privateKey, char[] password)_            throws NoSuchAlgorithmException, UnrecoverableKeyException, KeyStoreException, IOException, CertificateException {_        KeyStore keyStore = getKeyStore(certificateChain, privateKey, password)__        return keyManager(keyStore, password, KeyManagerFactory.getDefaultAlgorithm())__    };returns,a,link,x509extended,key,manager,that,is,built,from,the,provided,private,key,and,certificate,chain;public,static,x509extended,key,manager,key,manager,certificate,certificate,chain,private,key,private,key,char,password,throws,no,such,algorithm,exception,unrecoverable,key,exception,key,store,exception,ioexception,certificate,exception,key,store,key,store,get,key,store,certificate,chain,private,key,password,return,key,manager,key,store,password,key,manager,factory,get,default,algorithm
CertParsingUtils -> static KeyStore getKeyStoreFromPEM(Path certificatePath, Path keyPath, char[] keyPassword)             throws IOException, CertificateException, KeyStoreException, NoSuchAlgorithmException;1527622193;Creates a {@link KeyStore} from a PEM encoded certificate and key file;static KeyStore getKeyStoreFromPEM(Path certificatePath, Path keyPath, char[] keyPassword)_            throws IOException, CertificateException, KeyStoreException, NoSuchAlgorithmException {_        final PrivateKey key = PemUtils.readPrivateKey(keyPath, () -> keyPassword)__        final Certificate[] certificates = readCertificates(Collections.singletonList(certificatePath))__        return getKeyStore(certificates, key, keyPassword)__    };creates,a,link,key,store,from,a,pem,encoded,certificate,and,key,file;static,key,store,get,key,store,from,pem,path,certificate,path,path,key,path,char,key,password,throws,ioexception,certificate,exception,key,store,exception,no,such,algorithm,exception,final,private,key,key,pem,utils,read,private,key,key,path,key,password,final,certificate,certificates,read,certificates,collections,singleton,list,certificate,path,return,get,key,store,certificates,key,key,password
CertParsingUtils -> static KeyStore getKeyStoreFromPEM(Path certificatePath, Path keyPath, char[] keyPassword)             throws IOException, CertificateException, KeyStoreException, NoSuchAlgorithmException;1531910483;Creates a {@link KeyStore} from a PEM encoded certificate and key file;static KeyStore getKeyStoreFromPEM(Path certificatePath, Path keyPath, char[] keyPassword)_            throws IOException, CertificateException, KeyStoreException, NoSuchAlgorithmException {_        final PrivateKey key = PemUtils.readPrivateKey(keyPath, () -> keyPassword)__        final Certificate[] certificates = readCertificates(Collections.singletonList(certificatePath))__        return getKeyStore(certificates, key, keyPassword)__    };creates,a,link,key,store,from,a,pem,encoded,certificate,and,key,file;static,key,store,get,key,store,from,pem,path,certificate,path,path,key,path,char,key,password,throws,ioexception,certificate,exception,key,store,exception,no,such,algorithm,exception,final,private,key,key,pem,utils,read,private,key,key,path,key,password,final,certificate,certificates,read,certificates,collections,singleton,list,certificate,path,return,get,key,store,certificates,key,key,password
CertParsingUtils -> static X509ExtendedKeyManager keyManager(KeyStore keyStore, char[] password, String algorithm)             throws NoSuchAlgorithmException, UnrecoverableKeyException, KeyStoreException;1527622193;Returns a {@link X509ExtendedKeyManager} that is built from the provided keystore;static X509ExtendedKeyManager keyManager(KeyStore keyStore, char[] password, String algorithm)_            throws NoSuchAlgorithmException, UnrecoverableKeyException, KeyStoreException {_        KeyManagerFactory kmf = KeyManagerFactory.getInstance(algorithm)__        kmf.init(keyStore, password)__        KeyManager[] keyManagers = kmf.getKeyManagers()__        for (KeyManager keyManager : keyManagers) {_            if (keyManager instanceof X509ExtendedKeyManager) {_                return (X509ExtendedKeyManager) keyManager__            }_        }_        throw new IllegalStateException("failed to find a X509ExtendedKeyManager")__    };returns,a,link,x509extended,key,manager,that,is,built,from,the,provided,keystore;static,x509extended,key,manager,key,manager,key,store,key,store,char,password,string,algorithm,throws,no,such,algorithm,exception,unrecoverable,key,exception,key,store,exception,key,manager,factory,kmf,key,manager,factory,get,instance,algorithm,kmf,init,key,store,password,key,manager,key,managers,kmf,get,key,managers,for,key,manager,key,manager,key,managers,if,key,manager,instanceof,x509extended,key,manager,return,x509extended,key,manager,key,manager,throw,new,illegal,state,exception,failed,to,find,a,x509extended,key,manager
CertParsingUtils -> static X509ExtendedKeyManager keyManager(KeyStore keyStore, char[] password, String algorithm)             throws NoSuchAlgorithmException, UnrecoverableKeyException, KeyStoreException;1531910483;Returns a {@link X509ExtendedKeyManager} that is built from the provided keystore;static X509ExtendedKeyManager keyManager(KeyStore keyStore, char[] password, String algorithm)_            throws NoSuchAlgorithmException, UnrecoverableKeyException, KeyStoreException {_        KeyManagerFactory kmf = KeyManagerFactory.getInstance(algorithm)__        kmf.init(keyStore, password)__        KeyManager[] keyManagers = kmf.getKeyManagers()__        for (KeyManager keyManager : keyManagers) {_            if (keyManager instanceof X509ExtendedKeyManager) {_                return (X509ExtendedKeyManager) keyManager__            }_        }_        throw new IllegalStateException("failed to find a X509ExtendedKeyManager")__    };returns,a,link,x509extended,key,manager,that,is,built,from,the,provided,keystore;static,x509extended,key,manager,key,manager,key,store,key,store,char,password,string,algorithm,throws,no,such,algorithm,exception,unrecoverable,key,exception,key,store,exception,key,manager,factory,kmf,key,manager,factory,get,instance,algorithm,kmf,init,key,store,password,key,manager,key,managers,kmf,get,key,managers,for,key,manager,key,manager,key,managers,if,key,manager,instanceof,x509extended,key,manager,return,x509extended,key,manager,key,manager,throw,new,illegal,state,exception,failed,to,find,a,x509extended,key,manager
CertParsingUtils -> public static X509ExtendedTrustManager trustManager(String trustStorePath, String trustStoreType, char[] trustStorePassword,                                                         String trustStoreAlgorithm, @Nullable Environment env)             throws NoSuchAlgorithmException, KeyStoreException, IOException, CertificateException;1527622193;Loads the truststore and creates a {@link X509ExtendedTrustManager}__@param trustStorePath      the path to the truststore_@param trustStorePassword  the password to the truststore_@param trustStoreAlgorithm the algorithm to use for the truststore_@param env                 the environment to use for file resolution. May be {@code null}_@return a trust manager with the trust material from the store;public static X509ExtendedTrustManager trustManager(String trustStorePath, String trustStoreType, char[] trustStorePassword,_                                                        String trustStoreAlgorithm, @Nullable Environment env)_            throws NoSuchAlgorithmException, KeyStoreException, IOException, CertificateException {_        KeyStore trustStore = readKeyStore(resolvePath(trustStorePath, env), trustStoreType, trustStorePassword)__        return trustManager(trustStore, trustStoreAlgorithm)__    };loads,the,truststore,and,creates,a,link,x509extended,trust,manager,param,trust,store,path,the,path,to,the,truststore,param,trust,store,password,the,password,to,the,truststore,param,trust,store,algorithm,the,algorithm,to,use,for,the,truststore,param,env,the,environment,to,use,for,file,resolution,may,be,code,null,return,a,trust,manager,with,the,trust,material,from,the,store;public,static,x509extended,trust,manager,trust,manager,string,trust,store,path,string,trust,store,type,char,trust,store,password,string,trust,store,algorithm,nullable,environment,env,throws,no,such,algorithm,exception,key,store,exception,ioexception,certificate,exception,key,store,trust,store,read,key,store,resolve,path,trust,store,path,env,trust,store,type,trust,store,password,return,trust,manager,trust,store,trust,store,algorithm
CertParsingUtils -> public static X509ExtendedTrustManager trustManager(String trustStorePath, String trustStoreType, char[] trustStorePassword,                                                         String trustStoreAlgorithm, @Nullable Environment env)             throws NoSuchAlgorithmException, KeyStoreException, IOException, CertificateException;1531910483;Loads the truststore and creates a {@link X509ExtendedTrustManager}__@param trustStorePath      the path to the truststore_@param trustStorePassword  the password to the truststore_@param trustStoreAlgorithm the algorithm to use for the truststore_@param env                 the environment to use for file resolution. May be {@code null}_@return a trust manager with the trust material from the store;public static X509ExtendedTrustManager trustManager(String trustStorePath, String trustStoreType, char[] trustStorePassword,_                                                        String trustStoreAlgorithm, @Nullable Environment env)_            throws NoSuchAlgorithmException, KeyStoreException, IOException, CertificateException {_        KeyStore trustStore = readKeyStore(resolvePath(trustStorePath, env), trustStoreType, trustStorePassword)__        return trustManager(trustStore, trustStoreAlgorithm)__    };loads,the,truststore,and,creates,a,link,x509extended,trust,manager,param,trust,store,path,the,path,to,the,truststore,param,trust,store,password,the,password,to,the,truststore,param,trust,store,algorithm,the,algorithm,to,use,for,the,truststore,param,env,the,environment,to,use,for,file,resolution,may,be,code,null,return,a,trust,manager,with,the,trust,material,from,the,store;public,static,x509extended,trust,manager,trust,manager,string,trust,store,path,string,trust,store,type,char,trust,store,password,string,trust,store,algorithm,nullable,environment,env,throws,no,such,algorithm,exception,key,store,exception,ioexception,certificate,exception,key,store,trust,store,read,key,store,resolve,path,trust,store,path,env,trust,store,type,trust,store,password,return,trust,manager,trust,store,trust,store,algorithm
CertParsingUtils -> public static X509ExtendedTrustManager trustManager(String trustStorePath, String trustStoreType, char[] trustStorePassword,                                                         String trustStoreAlgorithm, @Nullable Environment env)             throws NoSuchAlgorithmException, KeyStoreException, IOException, CertificateException;1532353780;Loads the truststore and creates a {@link X509ExtendedTrustManager}__@param trustStorePath      the path to the truststore_@param trustStorePassword  the password to the truststore_@param trustStoreAlgorithm the algorithm to use for the truststore_@param env                 the environment to use for file resolution. May be {@code null}_@return a trust manager with the trust material from the store;public static X509ExtendedTrustManager trustManager(String trustStorePath, String trustStoreType, char[] trustStorePassword,_                                                        String trustStoreAlgorithm, @Nullable Environment env)_            throws NoSuchAlgorithmException, KeyStoreException, IOException, CertificateException {_        KeyStore trustStore = readKeyStore(resolvePath(trustStorePath, env), trustStoreType, trustStorePassword)__        return trustManager(trustStore, trustStoreAlgorithm)__    };loads,the,truststore,and,creates,a,link,x509extended,trust,manager,param,trust,store,path,the,path,to,the,truststore,param,trust,store,password,the,password,to,the,truststore,param,trust,store,algorithm,the,algorithm,to,use,for,the,truststore,param,env,the,environment,to,use,for,file,resolution,may,be,code,null,return,a,trust,manager,with,the,trust,material,from,the,store;public,static,x509extended,trust,manager,trust,manager,string,trust,store,path,string,trust,store,type,char,trust,store,password,string,trust,store,algorithm,nullable,environment,env,throws,no,such,algorithm,exception,key,store,exception,ioexception,certificate,exception,key,store,trust,store,read,key,store,resolve,path,trust,store,path,env,trust,store,type,trust,store,password,return,trust,manager,trust,store,trust,store,algorithm
CertParsingUtils -> public static X509ExtendedTrustManager trustManager(String trustStorePath, String trustStoreType, char[] trustStorePassword,                                                         String trustStoreAlgorithm, @Nullable Environment env)             throws NoSuchAlgorithmException, KeyStoreException, IOException, CertificateException;1539615817;Loads the truststore and creates a {@link X509ExtendedTrustManager}__@param trustStorePath      the path to the truststore_@param trustStorePassword  the password to the truststore_@param trustStoreAlgorithm the algorithm to use for the truststore_@param env                 the environment to use for file resolution. May be {@code null}_@return a trust manager with the trust material from the store;public static X509ExtendedTrustManager trustManager(String trustStorePath, String trustStoreType, char[] trustStorePassword,_                                                        String trustStoreAlgorithm, @Nullable Environment env)_            throws NoSuchAlgorithmException, KeyStoreException, IOException, CertificateException {_        KeyStore trustStore = readKeyStore(resolvePath(trustStorePath, env), trustStoreType, trustStorePassword)__        return trustManager(trustStore, trustStoreAlgorithm)__    };loads,the,truststore,and,creates,a,link,x509extended,trust,manager,param,trust,store,path,the,path,to,the,truststore,param,trust,store,password,the,password,to,the,truststore,param,trust,store,algorithm,the,algorithm,to,use,for,the,truststore,param,env,the,environment,to,use,for,file,resolution,may,be,code,null,return,a,trust,manager,with,the,trust,material,from,the,store;public,static,x509extended,trust,manager,trust,manager,string,trust,store,path,string,trust,store,type,char,trust,store,password,string,trust,store,algorithm,nullable,environment,env,throws,no,such,algorithm,exception,key,store,exception,ioexception,certificate,exception,key,store,trust,store,read,key,store,resolve,path,trust,store,path,env,trust,store,type,trust,store,password,return,trust,manager,trust,store,trust,store,algorithm
