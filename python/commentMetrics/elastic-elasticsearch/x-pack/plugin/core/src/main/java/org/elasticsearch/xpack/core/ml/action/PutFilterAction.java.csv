commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Response newResponse() {     return new Response(). }
false;public,static;2;11;;public static Request parseRequest(String filterId, XContentParser parser) {     MlFilter.Builder filter = MlFilter.STRICT_PARSER.apply(parser, null).     if (filter.getId() == null) {         filter.setId(filterId).     } else if (!Strings.isNullOrEmpty(filterId) && !filterId.equals(filter.getId())) {         // If we have both URI and body filter ID, they must be identical         throw new IllegalArgumentException(Messages.getMessage(Messages.INCONSISTENT_ID, MlFilter.ID.getPreferredName(), filter.getId(), filterId)).     }     return new Request(filter.build()). }
false;public;0;3;;public MlFilter getFilter() {     return this.filter. }
false;public;0;4;;@Override public ActionRequestValidationException validate() {     return null. }
false;public;1;5;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     filter = new MlFilter(in). }
false;public;1;5;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     filter.writeTo(out). }
false;public;2;5;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     filter.toXContent(builder, params).     return builder. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(filter). }
false;public;1;11;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     Request other = (Request) obj.     return Objects.equals(filter, other.filter). }
false;public;1;5;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     filter = new MlFilter(in). }
false;public;1;5;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     filter.writeTo(out). }
false;public;2;4;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     return filter.toXContent(builder, params). }
false;public;0;3;;public MlFilter getFilter() {     return filter. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(filter). }
false;public;1;11;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     Response other = (Response) obj.     return Objects.equals(filter, other.filter). }
