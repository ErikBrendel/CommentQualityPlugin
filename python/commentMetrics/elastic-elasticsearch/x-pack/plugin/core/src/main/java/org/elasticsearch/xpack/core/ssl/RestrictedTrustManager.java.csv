# id;timestamp;commentText;codeText;commentWords;codeWords
RestrictedTrustManager -> private String decodeDerValue(byte[] value, X509Certificate certificate);1527622193;Decodes the otherName CN from the certificate__@param value       The DER Encoded Subject Alternative Name_@param certificate_@return the CN or null if it could not be parsed;private String decodeDerValue(byte[] value, X509Certificate certificate) {_        try {_            DerParser parser = new DerParser(value)__            DerParser.Asn1Object seq = parser.readAsn1Object()__            parser = seq.getParser()__            String id = parser.readAsn1Object().getOid()__            if (CN_OID.equals(id)) {_                _                DerParser.Asn1Object cnObject = parser.readAsn1Object()__                parser = cnObject.getParser()__                _                _                _                _                _                _                _                DerParser.Asn1Object innerObject = parser.readAsn1Object()__                if (innerObject.isConstructed()) {_                    innerObject = innerObject.getParser().readAsn1Object()__                }_                logger.trace("Read innermost ASN.1 Object with type code [{}]", innerObject.getType())__                String cn = innerObject.getString()__                logger.trace("Read cn [{}] from ASN1Sequence [{}]", cn, seq)__                return cn__            } else {_                logger.debug("Certificate [{}] has 'otherName' [{}] with unsupported object-id [{}]",_                        certificate.getSubjectDN(), seq, id)__                return null__            }_        } catch (IOException e) {_            logger.warn("Failed to read 'otherName' from certificate [{}]",_                    certificate.getSubjectDN())__            return null__        }_    };decodes,the,other,name,cn,from,the,certificate,param,value,the,der,encoded,subject,alternative,name,param,certificate,return,the,cn,or,null,if,it,could,not,be,parsed;private,string,decode,der,value,byte,value,x509certificate,certificate,try,der,parser,parser,new,der,parser,value,der,parser,asn1object,seq,parser,read,asn1object,parser,seq,get,parser,string,id,parser,read,asn1object,get,oid,if,equals,id,der,parser,asn1object,cn,object,parser,read,asn1object,parser,cn,object,get,parser,der,parser,asn1object,inner,object,parser,read,asn1object,if,inner,object,is,constructed,inner,object,inner,object,get,parser,read,asn1object,logger,trace,read,innermost,asn,1,object,with,type,code,inner,object,get,type,string,cn,inner,object,get,string,logger,trace,read,cn,from,asn1sequence,cn,seq,return,cn,else,logger,debug,certificate,has,other,name,with,unsupported,object,id,certificate,get,subject,dn,seq,id,return,null,catch,ioexception,e,logger,warn,failed,to,read,other,name,from,certificate,certificate,get,subject,dn,return,null
RestrictedTrustManager -> private String decodeDerValue(byte[] value, X509Certificate certificate);1531179852;Decodes the otherName CN from the certificate__@param value       The DER Encoded Subject Alternative Name_@param certificate The certificate_@return the CN or null if it could not be parsed;private String decodeDerValue(byte[] value, X509Certificate certificate) {_        try {_            DerParser parser = new DerParser(value)__            DerParser.Asn1Object seq = parser.readAsn1Object()__            parser = seq.getParser()__            String id = parser.readAsn1Object().getOid()__            if (CN_OID.equals(id)) {_                _                DerParser.Asn1Object cnObject = parser.readAsn1Object()__                parser = cnObject.getParser()__                _                _                _                _                _                _                _                DerParser.Asn1Object innerObject = parser.readAsn1Object()__                if (innerObject.isConstructed()) {_                    innerObject = innerObject.getParser().readAsn1Object()__                }_                logger.trace("Read innermost ASN.1 Object with type code [{}]", innerObject.getType())__                String cn = innerObject.getString()__                logger.trace("Read cn [{}] from ASN1Sequence [{}]", cn, seq)__                return cn__            } else {_                logger.debug("Certificate [{}] has 'otherName' [{}] with unsupported object-id [{}]",_                        certificate.getSubjectDN(), seq, id)__                return null__            }_        } catch (IOException e) {_            logger.warn("Failed to read 'otherName' from certificate [{}]",_                    certificate.getSubjectDN())__            return null__        }_    };decodes,the,other,name,cn,from,the,certificate,param,value,the,der,encoded,subject,alternative,name,param,certificate,the,certificate,return,the,cn,or,null,if,it,could,not,be,parsed;private,string,decode,der,value,byte,value,x509certificate,certificate,try,der,parser,parser,new,der,parser,value,der,parser,asn1object,seq,parser,read,asn1object,parser,seq,get,parser,string,id,parser,read,asn1object,get,oid,if,equals,id,der,parser,asn1object,cn,object,parser,read,asn1object,parser,cn,object,get,parser,der,parser,asn1object,inner,object,parser,read,asn1object,if,inner,object,is,constructed,inner,object,inner,object,get,parser,read,asn1object,logger,trace,read,innermost,asn,1,object,with,type,code,inner,object,get,type,string,cn,inner,object,get,string,logger,trace,read,cn,from,asn1sequence,cn,seq,return,cn,else,logger,debug,certificate,has,other,name,with,unsupported,object,id,certificate,get,subject,dn,seq,id,return,null,catch,ioexception,e,logger,warn,failed,to,read,other,name,from,certificate,certificate,get,subject,dn,return,null
RestrictedTrustManager -> private String decodeDerValue(byte[] value, X509Certificate certificate);1538170812;Decodes the otherName CN from the certificate__@param value       The DER Encoded Subject Alternative Name_@param certificate The certificate_@return the CN or null if it could not be parsed;private String decodeDerValue(byte[] value, X509Certificate certificate) {_        try {_            DerParser parser = new DerParser(value)__            DerParser.Asn1Object seq = parser.readAsn1Object()__            parser = seq.getParser()__            String id = parser.readAsn1Object().getOid()__            if (CN_OID.equals(id)) {_                _                DerParser.Asn1Object cnObject = parser.readAsn1Object()__                parser = cnObject.getParser()__                _                _                _                _                _                _                _                DerParser.Asn1Object innerObject = parser.readAsn1Object()__                if (innerObject.isConstructed()) {_                    innerObject = innerObject.getParser().readAsn1Object()__                }_                logger.trace("Read innermost ASN.1 Object with type code [{}]", innerObject.getType())__                String cn = innerObject.getString()__                logger.trace("Read cn [{}] from ASN1Sequence [{}]", cn, seq)__                return cn__            } else {_                logger.debug("Certificate [{}] has 'otherName' [{}] with unsupported object-id [{}]",_                        certificate.getSubjectDN(), seq, id)__                return null__            }_        } catch (IOException e) {_            logger.warn("Failed to read 'otherName' from certificate [{}]",_                    certificate.getSubjectDN())__            return null__        }_    };decodes,the,other,name,cn,from,the,certificate,param,value,the,der,encoded,subject,alternative,name,param,certificate,the,certificate,return,the,cn,or,null,if,it,could,not,be,parsed;private,string,decode,der,value,byte,value,x509certificate,certificate,try,der,parser,parser,new,der,parser,value,der,parser,asn1object,seq,parser,read,asn1object,parser,seq,get,parser,string,id,parser,read,asn1object,get,oid,if,equals,id,der,parser,asn1object,cn,object,parser,read,asn1object,parser,cn,object,get,parser,der,parser,asn1object,inner,object,parser,read,asn1object,if,inner,object,is,constructed,inner,object,inner,object,get,parser,read,asn1object,logger,trace,read,innermost,asn,1,object,with,type,code,inner,object,get,type,string,cn,inner,object,get,string,logger,trace,read,cn,from,asn1sequence,cn,seq,return,cn,else,logger,debug,certificate,has,other,name,with,unsupported,object,id,certificate,get,subject,dn,seq,id,return,null,catch,ioexception,e,logger,warn,failed,to,read,other,name,from,certificate,certificate,get,subject,dn,return,null
