commented;modifiers;parameterAmount;loc;comment;code
true;public;1;4;/**  * @return The document and field permissions for an index if exist, otherwise <code>null</code> is returned.  *         If <code>null</code> is being returned this means that there are no field or document level restrictions.  */ ;/**  * @return The document and field permissions for an index if exist, otherwise <code>null</code> is returned.  *         If <code>null</code> is being returned this means that there are no field or document level restrictions.  */ @Nullable public IndexAccessControl getIndexPermissions(String index) {     return indexPermissions.get(index). }
true;public;0;3;/**  * @return Whether any role / permission group is allowed to access all indices.  */ ;/**  * @return Whether any role / permission group is allowed to access all indices.  */ public boolean isGranted() {     return granted. }
true;public;0;3;/**  * @return Whether any role / permission group is allowed to this index.  */ ;/**  * @return Whether any role / permission group is allowed to this index.  */ public boolean isGranted() {     return granted. }
true;public;0;3;/**  * @return The allowed fields for this index permissions.  */ ;/**  * @return The allowed fields for this index permissions.  */ public FieldPermissions getFieldPermissions() {     return fieldPermissions. }
true;public;0;4;/**  * @return The allowed documents expressed as a query for this index permission. If <code>null</code> is returned  *         then this means that there are no document level restrictions  */ ;/**  * @return The allowed documents expressed as a query for this index permission. If <code>null</code> is returned  *         then this means that there are no document level restrictions  */ @Nullable public DocumentPermissions getDocumentPermissions() {     return documentPermissions. }
true;public;1;13;/**  * Returns a instance of {@link IndexAccessControl}, where the privileges for {@code this} object are constrained by the privileges  * contained in the provided parameter.<br>  * Allowed fields for this index permission would be an intersection of allowed fields.<br>  * Allowed documents for this index permission would be an intersection of allowed documents.<br>  *  * @param limitedByIndexAccessControl {@link IndexAccessControl}  * @return {@link IndexAccessControl}  * @see FieldPermissions#limitFieldPermissions(FieldPermissions)  * @see DocumentPermissions#limitDocumentPermissions(DocumentPermissions)  */ ;/**  * Returns a instance of {@link IndexAccessControl}, where the privileges for {@code this} object are constrained by the privileges  * contained in the provided parameter.<br>  * Allowed fields for this index permission would be an intersection of allowed fields.<br>  * Allowed documents for this index permission would be an intersection of allowed documents.<br>  *  * @param limitedByIndexAccessControl {@link IndexAccessControl}  * @return {@link IndexAccessControl}  * @see FieldPermissions#limitFieldPermissions(FieldPermissions)  * @see DocumentPermissions#limitDocumentPermissions(DocumentPermissions)  */ public IndexAccessControl limitIndexAccessControl(IndexAccessControl limitedByIndexAccessControl) {     final boolean granted.     if (this.granted == limitedByIndexAccessControl.granted) {         granted = this.granted.     } else {         granted = false.     }     FieldPermissions fieldPermissions = getFieldPermissions().limitFieldPermissions(limitedByIndexAccessControl.fieldPermissions).     DocumentPermissions documentPermissions = getDocumentPermissions().limitDocumentPermissions(limitedByIndexAccessControl.getDocumentPermissions()).     return new IndexAccessControl(granted, fieldPermissions, documentPermissions). }
false;public;0;8;;@Override public String toString() {     return "IndexAccessControl{" + "granted=" + granted + ", fieldPermissions=" + fieldPermissions + ", documentPermissions=" + documentPermissions + '}'. }
true;public;1;19;/**  * Returns a instance of {@link IndicesAccessControl}, where the privileges for {@code this}  * object are constrained by the privileges contained in the provided parameter.<br>  *  * @param limitedByIndicesAccessControl {@link IndicesAccessControl}  * @return {@link IndicesAccessControl}  */ ;/**  * Returns a instance of {@link IndicesAccessControl}, where the privileges for {@code this}  * object are constrained by the privileges contained in the provided parameter.<br>  *  * @param limitedByIndicesAccessControl {@link IndicesAccessControl}  * @return {@link IndicesAccessControl}  */ public IndicesAccessControl limitIndicesAccessControl(IndicesAccessControl limitedByIndicesAccessControl) {     final boolean granted.     if (this.granted == limitedByIndicesAccessControl.granted) {         granted = this.granted.     } else {         granted = false.     }     Set<String> indexes = indexPermissions.keySet().     Set<String> otherIndexes = limitedByIndicesAccessControl.indexPermissions.keySet().     Set<String> commonIndexes = Sets.intersection(indexes, otherIndexes).     Map<String, IndexAccessControl> indexPermissions = new HashMap<>(commonIndexes.size()).     for (String index : commonIndexes) {         IndexAccessControl indexAccessControl = getIndexPermissions(index).         IndexAccessControl limitedByIndexAccessControl = limitedByIndicesAccessControl.getIndexPermissions(index).         indexPermissions.put(index, indexAccessControl.limitIndexAccessControl(limitedByIndexAccessControl)).     }     return new IndicesAccessControl(granted, indexPermissions). }
false;public;0;7;;@Override public String toString() {     return "IndicesAccessControl{" + "granted=" + granted + ", indexPermissions=" + indexPermissions + '}'. }
