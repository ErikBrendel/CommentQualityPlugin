commented;modifiers;parameterAmount;loc;comment;code
false;;1;10;;@Override X509ExtendedKeyManager createKeyManager(@Nullable Environment environment) {     try {         KeyStore ks = getStore(environment, keyStorePath, keyStoreType, keyStorePassword).         checkKeyStore(ks).         return CertParsingUtils.keyManager(ks, keyPassword.getChars(), keyStoreAlgorithm).     } catch (IOException | CertificateException | NoSuchAlgorithmException | UnrecoverableKeyException | KeyStoreException e) {         throw new ElasticsearchException("failed to initialize a KeyManagerFactory", e).     } }
false;;1;9;;@Override X509ExtendedTrustManager createTrustManager(@Nullable Environment environment) {     try {         KeyStore ks = getStore(environment, keyStorePath, keyStoreType, keyStorePassword).         return CertParsingUtils.trustManager(ks, trustStoreAlgorithm).     } catch (IOException | CertificateException | NoSuchAlgorithmException | KeyStoreException e) {         throw new ElasticsearchException("failed to initialize a TrustManagerFactory", e).     } }
false;;1;20;;@Override Collection<CertificateInfo> certificates(Environment environment) throws GeneralSecurityException, IOException {     final KeyStore trustStore = getStore(environment, keyStorePath, keyStoreType, keyStorePassword).     final List<CertificateInfo> certificates = new ArrayList<>().     final Enumeration<String> aliases = trustStore.aliases().     while (aliases.hasMoreElements()) {         String alias = aliases.nextElement().         final Certificate[] chain = trustStore.getCertificateChain(alias).         if (chain == null) {             continue.         }         for (int i = 0. i < chain.length. i++) {             final Certificate certificate = chain[i].             if (certificate instanceof X509Certificate) {                 certificates.add(new CertificateInfo(keyStorePath, keyStoreType, alias, i == 0, (X509Certificate) certificate)).             }         }     }     return certificates. }
false;;1;7;;@Override List<Path> filesToMonitor(@Nullable Environment environment) {     if (keyStorePath == null) {         return Collections.emptyList().     }     return Collections.singletonList(CertParsingUtils.resolvePath(keyStorePath, environment)). }
false;;1;19;;@Override List<PrivateKey> privateKeys(@Nullable Environment environment) {     try {         KeyStore keyStore = getStore(environment, keyStorePath, keyStoreType, keyStorePassword).         List<PrivateKey> privateKeys = new ArrayList<>().         for (Enumeration<String> e = keyStore.aliases(). e.hasMoreElements(). ) {             final String alias = e.nextElement().             if (keyStore.isKeyEntry(alias)) {                 Key key = keyStore.getKey(alias, keyPassword.getChars()).                 if (key instanceof PrivateKey) {                     privateKeys.add((PrivateKey) key).                 }             }         }         return privateKeys.     } catch (Exception e) {         throw new ElasticsearchException("failed to list keys", e).     } }
false;private;1;13;;private void checkKeyStore(KeyStore keyStore) throws KeyStoreException {     Enumeration<String> aliases = keyStore.aliases().     while (aliases.hasMoreElements()) {         String alias = aliases.nextElement().         if (keyStore.isKeyEntry(alias)) {             return.         }     }     final String message = null != keyStorePath ? "the keystore [" + keyStorePath + "] does not contain a private key entry" : "the configured PKCS#11 token does not contain a private key entry".     throw new IllegalArgumentException(message). }
false;public;1;15;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     StoreKeyConfig that = (StoreKeyConfig) o.     if (keyStorePath != null ? !keyStorePath.equals(that.keyStorePath) : that.keyStorePath != null)         return false.     if (keyStorePassword != null ? !keyStorePassword.equals(that.keyStorePassword) : that.keyStorePassword != null)         return false.     if (keyStoreAlgorithm != null ? !keyStoreAlgorithm.equals(that.keyStoreAlgorithm) : that.keyStoreAlgorithm != null)         return false.     if (keyPassword != null ? !keyPassword.equals(that.keyPassword) : that.keyPassword != null)         return false.     return trustStoreAlgorithm != null ? trustStoreAlgorithm.equals(that.trustStoreAlgorithm) : that.trustStoreAlgorithm == null. }
false;public;0;9;;@Override public int hashCode() {     int result = keyStorePath != null ? keyStorePath.hashCode() : 0.     result = 31 * result + (keyStorePassword != null ? keyStorePassword.hashCode() : 0).     result = 31 * result + (keyStoreAlgorithm != null ? keyStoreAlgorithm.hashCode() : 0).     result = 31 * result + (keyPassword != null ? keyPassword.hashCode() : 0).     result = 31 * result + (trustStoreAlgorithm != null ? trustStoreAlgorithm.hashCode() : 0).     return result. }
false;public;0;8;;@Override public String toString() {     return "keyStorePath=[" + keyStorePath + "], keyStoreType=[" + keyStoreType + "], keyStoreAlgorithm=[" + keyStoreAlgorithm + "], trustStoreAlgorithm=[" + trustStoreAlgorithm + "]". }
