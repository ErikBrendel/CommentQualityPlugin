commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * @return {@code true} if the search has not finished yet, or {@code false} otherwise  */ ;/**  * @return {@code true} if the search has not finished yet, or {@code false} otherwise  */ boolean hasNext().
true;;0;1;/**  * Returns the next available extracted data. Note that it is possible for the  * extracted data to be empty the last time this method can be called.  * @return an optional input stream with the next available extracted data  * @throws IOException if an error occurs while extracting the data  */ ;/**  * Returns the next available extracted data. Note that it is possible for the  * extracted data to be empty the last time this method can be called.  * @return an optional input stream with the next available extracted data  * @throws IOException if an error occurs while extracting the data  */ Optional<InputStream> next() throws IOException.
true;;0;1;/**  * @return {@code true} if the extractor has been cancelled, or {@code false} otherwise  */ ;/**  * @return {@code true} if the extractor has been cancelled, or {@code false} otherwise  */ boolean isCancelled().
true;;0;1;/**  * Cancel the current search.  */ ;/**  * Cancel the current search.  */ void cancel().
