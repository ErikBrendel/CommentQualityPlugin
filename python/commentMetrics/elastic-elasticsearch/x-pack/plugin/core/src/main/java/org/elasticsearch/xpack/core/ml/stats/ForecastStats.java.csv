commented;modifiers;parameterAmount;loc;comment;code
false;public;1;13;;public ForecastStats merge(ForecastStats other) {     if (other == null) {         return this.     }     total += other.total.     forecastedJobs += other.forecastedJobs.     memoryStats.merge(other.memoryStats).     recordStats.merge(other.recordStats).     runtimeStats.merge(other.runtimeStats).     statusCounts.merge(other.statusCounts).     return this. }
false;public;2;6;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     doXContentBody(builder, params).     return builder.endObject(). }
false;public;2;13;;public XContentBuilder doXContentBody(XContentBuilder builder, Params params) throws IOException {     builder.field(Fields.TOTAL, total).     builder.field(Fields.FORECASTED_JOBS, forecastedJobs).     if (total > 0) {         builder.field(Fields.MEMORY, memoryStats.asMap()).         builder.field(Fields.RECORDS, recordStats.asMap()).         builder.field(Fields.RUNTIME, runtimeStats.asMap()).         builder.field(Fields.STATUSES, statusCounts.asMap()).     }     return builder. }
false;public;0;14;;public Map<String, Object> asMap() {     Map<String, Object> map = new HashMap<>().     map.put(Fields.TOTAL, total).     map.put(Fields.FORECASTED_JOBS, forecastedJobs).     if (total > 0) {         map.put(Fields.MEMORY, memoryStats.asMap()).         map.put(Fields.RECORDS, recordStats.asMap()).         map.put(Fields.RUNTIME, runtimeStats.asMap()).         map.put(Fields.STATUSES, statusCounts.asMap()).     }     return map. }
false;public;1;9;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeLong(total).     out.writeLong(forecastedJobs).     memoryStats.writeTo(out).     recordStats.writeTo(out).     runtimeStats.writeTo(out).     statusCounts.writeTo(out). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(total, forecastedJobs, memoryStats, recordStats, runtimeStats, statusCounts). }
false;public;1;15;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     ForecastStats other = (ForecastStats) obj.     return Objects.equals(total, other.total) && Objects.equals(forecastedJobs, other.forecastedJobs) && Objects.equals(memoryStats, other.memoryStats) && Objects.equals(recordStats, other.recordStats) && Objects.equals(runtimeStats, other.runtimeStats) && Objects.equals(statusCounts, other.statusCounts). }
