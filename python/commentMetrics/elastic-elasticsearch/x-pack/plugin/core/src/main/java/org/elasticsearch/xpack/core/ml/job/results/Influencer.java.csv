commented;modifiers;parameterAmount;loc;comment;code
false;public;1;12;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeString(jobId).     out.writeLong(timestamp.getTime()).     out.writeString(influenceField).     out.writeString(influenceValue).     out.writeDouble(probability).     out.writeDouble(initialInfluencerScore).     out.writeDouble(influencerScore).     out.writeBoolean(isInterim).     out.writeLong(bucketSpan). }
false;public;2;7;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     innerToXContent(builder, params).     builder.endObject().     return builder. }
false;;2;16;;XContentBuilder innerToXContent(XContentBuilder builder, Params params) throws IOException {     builder.field(Job.ID.getPreferredName(), jobId).     builder.field(Result.RESULT_TYPE.getPreferredName(), RESULT_TYPE_VALUE).     builder.field(INFLUENCER_FIELD_NAME.getPreferredName(), influenceField).     builder.field(INFLUENCER_FIELD_VALUE.getPreferredName(), influenceValue).     if (ReservedFieldNames.isValidFieldName(influenceField)) {         builder.field(influenceField, influenceValue).     }     builder.field(INFLUENCER_SCORE.getPreferredName(), influencerScore).     builder.field(INITIAL_INFLUENCER_SCORE.getPreferredName(), initialInfluencerScore).     builder.field(PROBABILITY.getPreferredName(), probability).     builder.field(BUCKET_SPAN.getPreferredName(), bucketSpan).     builder.field(Result.IS_INTERIM.getPreferredName(), isInterim).     builder.timeField(Result.TIMESTAMP.getPreferredName(), Result.TIMESTAMP.getPreferredName() + "_string", timestamp.getTime()).     return builder. }
false;public;0;3;;public String getJobId() {     return jobId. }
false;public;0;4;;public String getId() {     return jobId + "_influencer_" + timestamp.getTime() + "_" + bucketSpan + "_" + influenceField + "_" + influenceValue.hashCode() + "_" + influenceValue.length(). }
false;public;0;3;;public double getProbability() {     return probability. }
false;public;1;3;;public void setProbability(double probability) {     this.probability = probability. }
false;public;0;3;;public Date getTimestamp() {     return timestamp. }
false;public;0;3;;public String getInfluencerFieldName() {     return influenceField. }
false;public;0;3;;public String getInfluencerFieldValue() {     return influenceValue. }
false;public;0;3;;public double getInitialInfluencerScore() {     return initialInfluencerScore. }
false;public;1;3;;public void setInitialInfluencerScore(double score) {     initialInfluencerScore = score. }
false;public;0;3;;public double getInfluencerScore() {     return influencerScore. }
false;public;1;3;;public void setInfluencerScore(double score) {     influencerScore = score. }
false;public;0;3;;public boolean isInterim() {     return isInterim. }
false;public;1;3;;public void setInterim(boolean value) {     isInterim = value. }
false;public;0;5;;@Override public int hashCode() {     return Objects.hash(jobId, timestamp, influenceField, influenceValue, initialInfluencerScore, influencerScore, probability, isInterim, bucketSpan). }
false;public;1;22;;@Override public boolean equals(Object obj) {     if (this == obj) {         return true.     }     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     Influencer other = (Influencer) obj.     return Objects.equals(jobId, other.jobId) && Objects.equals(timestamp, other.timestamp) && Objects.equals(influenceField, other.influenceField) && Objects.equals(influenceValue, other.influenceValue) && Double.compare(initialInfluencerScore, other.initialInfluencerScore) == 0 && Double.compare(influencerScore, other.influencerScore) == 0 && Double.compare(probability, other.probability) == 0 && (isInterim == other.isInterim) && (bucketSpan == other.bucketSpan). }
