# id;timestamp;commentText;codeText;commentWords;codeWords
SSLConfigurationReloader -> private void startWatching(Collection<SSLConfiguration> sslConfigurations);1524684173;Collects all of the directories that need to be monitored for the provided {@link SSLConfiguration} instances and ensures that_they are being watched for changes;private void startWatching(Collection<SSLConfiguration> sslConfigurations) {_        for (SSLConfiguration sslConfiguration : sslConfigurations) {_            for (Path directory : directoriesToMonitor(sslConfiguration.filesToMonitor(environment))) {_                pathToChangeListenerMap.compute(directory, (path, listener) -> {_                    if (listener != null) {_                        listener.addSSLConfiguration(sslConfiguration)__                        return listener__                    }__                    ChangeListener changeListener = new ChangeListener()__                    changeListener.addSSLConfiguration(sslConfiguration)__                    FileWatcher fileWatcher = new FileWatcher(path)__                    fileWatcher.addListener(changeListener)__                    try {_                        resourceWatcherService.add(fileWatcher, Frequency.HIGH)__                        return changeListener__                    } catch (IOException e) {_                        logger.error("failed to start watching directory [{}] for ssl configuration [{}]", path, sslConfiguration)__                    }_                    return null__                })__            }_        }_    };collects,all,of,the,directories,that,need,to,be,monitored,for,the,provided,link,sslconfiguration,instances,and,ensures,that,they,are,being,watched,for,changes;private,void,start,watching,collection,sslconfiguration,ssl,configurations,for,sslconfiguration,ssl,configuration,ssl,configurations,for,path,directory,directories,to,monitor,ssl,configuration,files,to,monitor,environment,path,to,change,listener,map,compute,directory,path,listener,if,listener,null,listener,add,sslconfiguration,ssl,configuration,return,listener,change,listener,change,listener,new,change,listener,change,listener,add,sslconfiguration,ssl,configuration,file,watcher,file,watcher,new,file,watcher,path,file,watcher,add,listener,change,listener,try,resource,watcher,service,add,file,watcher,frequency,high,return,change,listener,catch,ioexception,e,logger,error,failed,to,start,watching,directory,for,ssl,configuration,path,ssl,configuration,return,null
SSLConfigurationReloader -> private void startWatching(Collection<SSLConfiguration> sslConfigurations);1541092382;Collects all of the directories that need to be monitored for the provided {@link SSLConfiguration} instances and ensures that_they are being watched for changes;private void startWatching(Collection<SSLConfiguration> sslConfigurations) {_        for (SSLConfiguration sslConfiguration : sslConfigurations) {_            for (Path directory : directoriesToMonitor(sslConfiguration.filesToMonitor(environment))) {_                pathToChangeListenerMap.compute(directory, (path, listener) -> {_                    if (listener != null) {_                        listener.addSSLConfiguration(sslConfiguration)__                        return listener__                    }__                    ChangeListener changeListener = new ChangeListener()__                    changeListener.addSSLConfiguration(sslConfiguration)__                    FileWatcher fileWatcher = new FileWatcher(path)__                    fileWatcher.addListener(changeListener)__                    try {_                        resourceWatcherService.add(fileWatcher, Frequency.HIGH)__                        return changeListener__                    } catch (IOException e) {_                        logger.error("failed to start watching directory [{}] for ssl configuration [{}]", path, sslConfiguration)__                    }_                    return null__                })__            }_        }_    };collects,all,of,the,directories,that,need,to,be,monitored,for,the,provided,link,sslconfiguration,instances,and,ensures,that,they,are,being,watched,for,changes;private,void,start,watching,collection,sslconfiguration,ssl,configurations,for,sslconfiguration,ssl,configuration,ssl,configurations,for,path,directory,directories,to,monitor,ssl,configuration,files,to,monitor,environment,path,to,change,listener,map,compute,directory,path,listener,if,listener,null,listener,add,sslconfiguration,ssl,configuration,return,listener,change,listener,change,listener,new,change,listener,change,listener,add,sslconfiguration,ssl,configuration,file,watcher,file,watcher,new,file,watcher,path,file,watcher,add,listener,change,listener,try,resource,watcher,service,add,file,watcher,frequency,high,return,change,listener,catch,ioexception,e,logger,error,failed,to,start,watching,directory,for,ssl,configuration,path,ssl,configuration,return,null
SSLConfigurationReloader -> private void startWatching(Collection<SSLConfiguration> sslConfigurations);1541190643;Collects all of the directories that need to be monitored for the provided {@link SSLConfiguration} instances and ensures that_they are being watched for changes;private void startWatching(Collection<SSLConfiguration> sslConfigurations) {_        for (SSLConfiguration sslConfiguration : sslConfigurations) {_            for (Path directory : directoriesToMonitor(sslConfiguration.filesToMonitor(environment))) {_                pathToChangeListenerMap.compute(directory, (path, listener) -> {_                    if (listener != null) {_                        listener.addSSLConfiguration(sslConfiguration)__                        return listener__                    }__                    ChangeListener changeListener = new ChangeListener()__                    changeListener.addSSLConfiguration(sslConfiguration)__                    FileWatcher fileWatcher = new FileWatcher(path)__                    fileWatcher.addListener(changeListener)__                    try {_                        resourceWatcherService.add(fileWatcher, Frequency.HIGH)__                        return changeListener__                    } catch (IOException e) {_                        logger.error("failed to start watching directory [{}] for ssl configuration [{}]", path, sslConfiguration)__                    }_                    return null__                })__            }_        }_    };collects,all,of,the,directories,that,need,to,be,monitored,for,the,provided,link,sslconfiguration,instances,and,ensures,that,they,are,being,watched,for,changes;private,void,start,watching,collection,sslconfiguration,ssl,configurations,for,sslconfiguration,ssl,configuration,ssl,configurations,for,path,directory,directories,to,monitor,ssl,configuration,files,to,monitor,environment,path,to,change,listener,map,compute,directory,path,listener,if,listener,null,listener,add,sslconfiguration,ssl,configuration,return,listener,change,listener,change,listener,new,change,listener,change,listener,add,sslconfiguration,ssl,configuration,file,watcher,file,watcher,new,file,watcher,path,file,watcher,add,listener,change,listener,try,resource,watcher,service,add,file,watcher,frequency,high,return,change,listener,catch,ioexception,e,logger,error,failed,to,start,watching,directory,for,ssl,configuration,path,ssl,configuration,return,null
SSLConfigurationReloader -> ChangeListener -> private void addSSLConfiguration(SSLConfiguration sslConfiguration);1524684173;Adds the given ssl configuration to those that have files within the directory watched by this change listener;private void addSSLConfiguration(SSLConfiguration sslConfiguration) {_            sslConfigurations.add(sslConfiguration)__        };adds,the,given,ssl,configuration,to,those,that,have,files,within,the,directory,watched,by,this,change,listener;private,void,add,sslconfiguration,sslconfiguration,ssl,configuration,ssl,configurations,add,ssl,configuration
SSLConfigurationReloader -> ChangeListener -> private void addSSLConfiguration(SSLConfiguration sslConfiguration);1541092382;Adds the given ssl configuration to those that have files within the directory watched by this change listener;private void addSSLConfiguration(SSLConfiguration sslConfiguration) {_            sslConfigurations.add(sslConfiguration)__        };adds,the,given,ssl,configuration,to,those,that,have,files,within,the,directory,watched,by,this,change,listener;private,void,add,sslconfiguration,sslconfiguration,ssl,configuration,ssl,configurations,add,ssl,configuration
SSLConfigurationReloader -> ChangeListener -> private void addSSLConfiguration(SSLConfiguration sslConfiguration);1541190643;Adds the given ssl configuration to those that have files within the directory watched by this change listener;private void addSSLConfiguration(SSLConfiguration sslConfiguration) {_            sslConfigurations.add(sslConfiguration)__        };adds,the,given,ssl,configuration,to,those,that,have,files,within,the,directory,watched,by,this,change,listener;private,void,add,sslconfiguration,sslconfiguration,ssl,configuration,ssl,configurations,add,ssl,configuration
SSLConfigurationReloader -> void reloadSSLContext(SSLConfiguration configuration);1524684173;Reloads the ssl context associated with this configuration. It is visible so that tests can override as needed;void reloadSSLContext(SSLConfiguration configuration) {_        logger.debug("reloading ssl configuration [{}]", configuration)__        sslService.sslContextHolder(configuration).reload()__    };reloads,the,ssl,context,associated,with,this,configuration,it,is,visible,so,that,tests,can,override,as,needed;void,reload,sslcontext,sslconfiguration,configuration,logger,debug,reloading,ssl,configuration,configuration,ssl,service,ssl,context,holder,configuration,reload
SSLConfigurationReloader -> void reloadSSLContext(SSLConfiguration configuration);1541092382;Reloads the ssl context associated with this configuration. It is visible so that tests can override as needed;void reloadSSLContext(SSLConfiguration configuration) {_        logger.debug("reloading ssl configuration [{}]", configuration)__        sslService.sslContextHolder(configuration).reload()__    };reloads,the,ssl,context,associated,with,this,configuration,it,is,visible,so,that,tests,can,override,as,needed;void,reload,sslcontext,sslconfiguration,configuration,logger,debug,reloading,ssl,configuration,configuration,ssl,service,ssl,context,holder,configuration,reload
SSLConfigurationReloader -> void reloadSSLContext(SSLConfiguration configuration);1541190643;Reloads the ssl context associated with this configuration. It is visible so that tests can override as needed;void reloadSSLContext(SSLConfiguration configuration) {_        logger.debug("reloading ssl configuration [{}]", configuration)__        sslService.sslContextHolder(configuration).reload()__    };reloads,the,ssl,context,associated,with,this,configuration,it,is,visible,so,that,tests,can,override,as,needed;void,reload,sslcontext,sslconfiguration,configuration,logger,debug,reloading,ssl,configuration,configuration,ssl,service,ssl,context,holder,configuration,reload
SSLConfigurationReloader -> private static Set<Path> directoriesToMonitor(List<Path> filePaths);1524684173;Returns a unique set of directories that need to be monitored based on the provided file paths;private static Set<Path> directoriesToMonitor(List<Path> filePaths) {_        Set<Path> paths = new HashSet<>()__        for (Path path : filePaths) {_            paths.add(path.getParent())__        }_        return paths__    };returns,a,unique,set,of,directories,that,need,to,be,monitored,based,on,the,provided,file,paths;private,static,set,path,directories,to,monitor,list,path,file,paths,set,path,paths,new,hash,set,for,path,path,file,paths,paths,add,path,get,parent,return,paths
SSLConfigurationReloader -> private static Set<Path> directoriesToMonitor(List<Path> filePaths);1541092382;Returns a unique set of directories that need to be monitored based on the provided file paths;private static Set<Path> directoriesToMonitor(List<Path> filePaths) {_        Set<Path> paths = new HashSet<>()__        for (Path path : filePaths) {_            paths.add(path.getParent())__        }_        return paths__    };returns,a,unique,set,of,directories,that,need,to,be,monitored,based,on,the,provided,file,paths;private,static,set,path,directories,to,monitor,list,path,file,paths,set,path,paths,new,hash,set,for,path,path,file,paths,paths,add,path,get,parent,return,paths
SSLConfigurationReloader -> private static Set<Path> directoriesToMonitor(List<Path> filePaths);1541190643;Returns a unique set of directories that need to be monitored based on the provided file paths;private static Set<Path> directoriesToMonitor(List<Path> filePaths) {_        Set<Path> paths = new HashSet<>()__        for (Path path : filePaths) {_            paths.add(path.getParent())__        }_        return paths__    };returns,a,unique,set,of,directories,that,need,to,be,monitored,based,on,the,provided,file,paths;private,static,set,path,directories,to,monitor,list,path,file,paths,set,path,paths,new,hash,set,for,path,path,file,paths,paths,add,path,get,parent,return,paths
