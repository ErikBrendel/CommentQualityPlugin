commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;public PutLicenseRequestBuilder preparePutLicense(License license) {     return new PutLicenseRequestBuilder(client).setLicense(license). }
false;public;2;3;;public void putLicense(PutLicenseRequest request, ActionListener<PutLicenseResponse> listener) {     client.execute(PutLicenseAction.INSTANCE, request, listener). }
false;public;0;3;;public GetLicenseRequestBuilder prepareGetLicense() {     return new GetLicenseRequestBuilder(client). }
false;public;2;3;;public void getLicense(GetLicenseRequest request, ActionListener<GetLicenseResponse> listener) {     client.execute(GetLicenseAction.INSTANCE, request, listener). }
false;public;0;3;;public DeleteLicenseRequestBuilder prepareDeleteLicense() {     return new DeleteLicenseRequestBuilder(client). }
false;public;2;3;;public void deleteLicense(DeleteLicenseRequest request, ActionListener<AcknowledgedResponse> listener) {     client.execute(DeleteLicenseAction.INSTANCE, request, listener). }
false;public;0;3;;public PostStartTrialRequestBuilder preparePostStartTrial() {     return new PostStartTrialRequestBuilder(client, PostStartTrialAction.INSTANCE). }
false;public;0;3;;public GetTrialStatusRequestBuilder prepareGetStartTrial() {     return new GetTrialStatusRequestBuilder(client, GetTrialStatusAction.INSTANCE). }
false;public;2;3;;public void postStartTrial(PostStartTrialRequest request, ActionListener<PostStartTrialResponse> listener) {     client.execute(PostStartTrialAction.INSTANCE, request, listener). }
false;public;2;3;;public void postStartBasic(PostStartBasicRequest request, ActionListener<PostStartBasicResponse> listener) {     client.execute(PostStartBasicAction.INSTANCE, request, listener). }
false;public;0;3;;public PostStartBasicRequestBuilder preparePostStartBasic() {     return new PostStartBasicRequestBuilder(client, PostStartBasicAction.INSTANCE). }
false;public;0;3;;public GetBasicStatusRequestBuilder prepareGetStartBasic() {     return new GetBasicStatusRequestBuilder(client, GetBasicStatusAction.INSTANCE). }
