commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Response newResponse() {     return new Response(). }
false;public,static;2;7;;public static Request parseRequest(String jobId, XContentParser parser) {     Request request = PARSER.apply(parser, null).     if (jobId != null) {         request.jobId = jobId.     }     return request. }
false;public;0;3;;public String getJobId() {     return jobId. }
false;public;0;3;;public String getStart() {     return start. }
false;public;1;3;;public void setStart(String start) {     this.start = start. }
false;public;0;3;;public String getEnd() {     return end. }
false;public;1;3;;public void setEnd(String end) {     this.end = end. }
false;public;0;3;;public boolean isDescending() {     return descending. }
false;public;1;3;;public void setDescending(boolean descending) {     this.descending = descending. }
false;public;0;3;;public boolean isExcludeInterim() {     return excludeInterim. }
false;public;1;3;;public void setExcludeInterim(boolean excludeInterim) {     this.excludeInterim = excludeInterim. }
false;public;1;3;;public void setPageParams(PageParams pageParams) {     this.pageParams = pageParams. }
false;public;0;3;;public PageParams getPageParams() {     return pageParams. }
false;public;0;3;;public double getInfluencerScore() {     return influencerScore. }
false;public;1;3;;public void setInfluencerScore(double anomalyScoreFilter) {     this.influencerScore = anomalyScoreFilter. }
false;public;0;3;;public String getSort() {     return sort. }
false;public;1;3;;public void setSort(String sort) {     this.sort = ExceptionsHelper.requireNonNull(sort, SORT_FIELD.getPreferredName()). }
false;public;0;4;;@Override public ActionRequestValidationException validate() {     return null. }
false;public;1;12;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     jobId = in.readString().     excludeInterim = in.readBoolean().     pageParams = new PageParams(in).     start = in.readOptionalString().     end = in.readOptionalString().     sort = in.readOptionalString().     descending = in.readBoolean().     influencerScore = in.readDouble(). }
false;public;1;12;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeString(jobId).     out.writeBoolean(excludeInterim).     pageParams.writeTo(out).     out.writeOptionalString(start).     out.writeOptionalString(end).     out.writeOptionalString(sort).     out.writeBoolean(descending).     out.writeDouble(influencerScore). }
false;public;2;14;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(Job.ID.getPreferredName(), jobId).     builder.field(EXCLUDE_INTERIM.getPreferredName(), excludeInterim).     builder.field(PageParams.PAGE.getPreferredName(), pageParams).     builder.field(START.getPreferredName(), start).     builder.field(END.getPreferredName(), end).     builder.field(SORT_FIELD.getPreferredName(), sort).     builder.field(DESCENDING_SORT.getPreferredName(), descending).     builder.field(INFLUENCER_SCORE.getPreferredName(), influencerScore).     builder.endObject().     return builder. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(jobId, excludeInterim, pageParams, start, end, sort, descending, influencerScore). }
false;public;1;17;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     Request other = (Request) obj.     return Objects.equals(jobId, other.jobId) && Objects.equals(start, other.start) && Objects.equals(end, other.end) && Objects.equals(excludeInterim, other.excludeInterim) && Objects.equals(pageParams, other.pageParams) && Objects.equals(influencerScore, other.influencerScore) && Objects.equals(descending, other.descending) && Objects.equals(sort, other.sort). }
false;public;0;3;;public QueryPage<Influencer> getInfluencers() {     return influencers. }
false;public;1;5;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     influencers = new QueryPage<>(in, Influencer::new). }
false;public;1;5;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     influencers.writeTo(out). }
false;public;2;7;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     influencers.doXContentBody(builder, params).     builder.endObject().     return builder. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(influencers). }
false;public;1;11;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     Response other = (Response) obj.     return Objects.equals(influencers, other.influencers). }
false;public,final;0;4;;@Override public final String toString() {     return Strings.toString(this). }
