commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Response newResponse() {     return new Response(). }
false;public,static;2;12;;public static Request parseRequest(String jobId, XContentParser parser) {     Job.Builder jobBuilder = Job.STRICT_PARSER.apply(parser, null).     if (jobBuilder.getId() == null) {         jobBuilder.setId(jobId).     } else if (!Strings.isNullOrEmpty(jobId) && !jobId.equals(jobBuilder.getId())) {         // If we have both URI and body jobBuilder ID, they must be identical         throw new IllegalArgumentException(Messages.getMessage(Messages.INCONSISTENT_ID, Job.ID.getPreferredName(), jobBuilder.getId(), jobId)).     }     return new Request(jobBuilder). }
false;public;0;3;;public Job.Builder getJobBuilder() {     return jobBuilder. }
false;public;0;4;;@Override public ActionRequestValidationException validate() {     return null. }
false;public;1;5;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     jobBuilder = new Job.Builder(in). }
false;public;1;5;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     jobBuilder.writeTo(out). }
false;public;2;5;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     jobBuilder.toXContent(builder, params).     return builder. }
false;public;1;7;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     Request request = (Request) o.     return Objects.equals(jobBuilder, request.jobBuilder). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(jobBuilder). }
false;public,final;0;4;;@Override public final String toString() {     return Strings.toString(this). }
false;public;0;3;;public Job getResponse() {     return job. }
false;public;1;9;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     if (in.getVersion().before(Version.V_6_3_0)) {         // the acknowledged flag was removed         in.readBoolean().     }     job = new Job(in). }
false;public;1;9;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     if (out.getVersion().before(Version.V_6_3_0)) {         // the acknowledged flag is no longer supported         out.writeBoolean(true).     }     job.writeTo(out). }
false;public;2;7;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     job.doXContentBody(builder, params).     builder.endObject().     return builder. }
false;public;1;7;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     Response response = (Response) o.     return Objects.equals(job, response.job). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(job). }
