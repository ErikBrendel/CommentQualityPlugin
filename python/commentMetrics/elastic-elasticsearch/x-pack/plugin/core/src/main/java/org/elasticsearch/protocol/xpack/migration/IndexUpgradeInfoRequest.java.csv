commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     out.writeStringArray(indices).     indicesOptions.writeIndicesOptions(out). }
false;public;0;4;;@Override public String[] indices() {     return indices. }
false;public;1;5;;@Override public IndexUpgradeInfoRequest indices(String... indices) {     this.indices = Objects.requireNonNull(indices, "indices cannot be null").     return this. }
false;public;0;4;;@Override public IndicesOptions indicesOptions() {     return indicesOptions. }
false;public;1;3;;public void indicesOptions(IndicesOptions indicesOptions) {     this.indicesOptions = indicesOptions. }
false;public;0;4;;@Override public ActionRequestValidationException validate() {     return null. }
false;public;1;4;;@Override public void readFrom(StreamInput in) throws IOException {     throw new UnsupportedOperationException("usage of Streamable is to be replaced by Writeable"). }
false;public;1;8;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     IndexUpgradeInfoRequest request = (IndexUpgradeInfoRequest) o.     return Arrays.equals(indices, request.indices) && Objects.equals(indicesOptions.toString(), request.indicesOptions.toString()). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(Arrays.hashCode(indices), indicesOptions.toString()). }
