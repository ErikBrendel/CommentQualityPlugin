commented;modifiers;parameterAmount;loc;comment;code
false;;1;3;;ActionFactory factory(String type) {     return parsers.get(type). }
false;public;2;22;;public List<ActionWrapper> parseActions(String watchId, XContentParser parser) throws IOException {     if (parser.currentToken() != XContentParser.Token.START_OBJECT) {         throw new ElasticsearchParseException("could not parse actions for watch [{}]. expected an object but found [{}] instead", watchId, parser.currentToken()).     }     List<ActionWrapper> actions = new ArrayList<>().     String id = null.     XContentParser.Token token.     while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {         if (token == XContentParser.Token.FIELD_NAME) {             id = parser.currentName().             if (WatcherUtils.isValidId(id) == false) {                 throw new ElasticsearchParseException("could not parse action [{}] for watch [{}]. id contains whitespace", id, watchId).             }         } else if (token == XContentParser.Token.START_OBJECT && id != null) {             actions.add(ActionWrapper.parse(watchId, id, parser, this, clock, licenseState)).         }     }     return actions. }
false;public;0;3;;public TransformRegistry getTransformRegistry() {     return transformRegistry. }
false;public;0;3;;public ConditionRegistry getConditionRegistry() {     return conditionRegistry. }
