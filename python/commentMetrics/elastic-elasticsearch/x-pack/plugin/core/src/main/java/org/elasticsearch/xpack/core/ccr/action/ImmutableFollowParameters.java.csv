commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Integer getMaxReadRequestOperationCount() {     return maxReadRequestOperationCount. }
false;public;0;3;;public ByteSizeValue getMaxReadRequestSize() {     return maxReadRequestSize. }
false;public;0;3;;public Integer getMaxOutstandingReadRequests() {     return maxOutstandingReadRequests. }
false;public;0;3;;public Integer getMaxWriteRequestOperationCount() {     return maxWriteRequestOperationCount. }
false;public;0;3;;public ByteSizeValue getMaxWriteRequestSize() {     return maxWriteRequestSize. }
false;public;0;3;;public Integer getMaxOutstandingWriteRequests() {     return maxOutstandingWriteRequests. }
false;public;0;3;;public Integer getMaxWriteBufferCount() {     return maxWriteBufferCount. }
false;public;0;3;;public ByteSizeValue getMaxWriteBufferSize() {     return maxWriteBufferSize. }
false;public;0;3;;public TimeValue getMaxRetryDelay() {     return maxRetryDelay. }
false;public;0;3;;public TimeValue getReadPollTimeout() {     return readPollTimeout. }
false;public;1;14;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeOptionalVInt(maxReadRequestOperationCount).     out.writeOptionalWriteable(maxReadRequestSize).     out.writeOptionalVInt(maxOutstandingReadRequests).     out.writeOptionalVInt(maxWriteRequestOperationCount).     out.writeOptionalWriteable(maxWriteRequestSize).     out.writeOptionalVInt(maxOutstandingWriteRequests).     out.writeOptionalVInt(maxWriteBufferCount).     out.writeOptionalWriteable(maxWriteBufferSize).     out.writeOptionalTimeValue(maxRetryDelay).     out.writeOptionalTimeValue(readPollTimeout). }
false;protected;1;33;;protected XContentBuilder toXContentFragment(final XContentBuilder builder) throws IOException {     if (maxReadRequestOperationCount != null) {         builder.field(FollowParameters.MAX_READ_REQUEST_OPERATION_COUNT.getPreferredName(), maxReadRequestOperationCount).     }     if (maxWriteRequestOperationCount != null) {         builder.field(FollowParameters.MAX_WRITE_REQUEST_OPERATION_COUNT.getPreferredName(), maxWriteRequestOperationCount).     }     if (maxOutstandingReadRequests != null) {         builder.field(FollowParameters.MAX_OUTSTANDING_READ_REQUESTS.getPreferredName(), maxOutstandingReadRequests).     }     if (maxOutstandingWriteRequests != null) {         builder.field(FollowParameters.MAX_OUTSTANDING_WRITE_REQUESTS.getPreferredName(), maxOutstandingWriteRequests).     }     if (maxReadRequestSize != null) {         builder.field(FollowParameters.MAX_READ_REQUEST_SIZE.getPreferredName(), maxReadRequestSize.getStringRep()).     }     if (maxWriteRequestSize != null) {         builder.field(FollowParameters.MAX_WRITE_REQUEST_SIZE.getPreferredName(), maxWriteRequestSize.getStringRep()).     }     if (maxWriteBufferCount != null) {         builder.field(FollowParameters.MAX_WRITE_BUFFER_COUNT.getPreferredName(), maxWriteBufferCount).     }     if (maxWriteBufferSize != null) {         builder.field(FollowParameters.MAX_WRITE_BUFFER_SIZE.getPreferredName(), maxWriteBufferSize.getStringRep()).     }     if (maxRetryDelay != null) {         builder.field(FollowParameters.MAX_RETRY_DELAY.getPreferredName(), maxRetryDelay.getStringRep()).     }     if (readPollTimeout != null) {         builder.field(FollowParameters.READ_POLL_TIMEOUT.getPreferredName(), readPollTimeout.getStringRep()).     }     return builder. }
false;public,static;1;28;;public static <P extends ImmutableFollowParameters> void initParser(ConstructingObjectParser<P, ?> parser) {     parser.declareInt(ConstructingObjectParser.optionalConstructorArg(), FollowParameters.MAX_READ_REQUEST_OPERATION_COUNT).     parser.declareInt(ConstructingObjectParser.optionalConstructorArg(), FollowParameters.MAX_WRITE_REQUEST_OPERATION_COUNT).     parser.declareInt(ConstructingObjectParser.optionalConstructorArg(), FollowParameters.MAX_OUTSTANDING_READ_REQUESTS).     parser.declareInt(ConstructingObjectParser.optionalConstructorArg(), FollowParameters.MAX_OUTSTANDING_WRITE_REQUESTS).     parser.declareField(ConstructingObjectParser.optionalConstructorArg(), (p, c) -> ByteSizeValue.parseBytesSizeValue(p.text(), FollowParameters.MAX_READ_REQUEST_SIZE.getPreferredName()), FollowParameters.MAX_READ_REQUEST_SIZE, ObjectParser.ValueType.STRING).     parser.declareField(ConstructingObjectParser.optionalConstructorArg(), (p, c) -> ByteSizeValue.parseBytesSizeValue(p.text(), FollowParameters.MAX_WRITE_REQUEST_SIZE.getPreferredName()), FollowParameters.MAX_WRITE_REQUEST_SIZE, ObjectParser.ValueType.STRING).     parser.declareInt(ConstructingObjectParser.optionalConstructorArg(), FollowParameters.MAX_WRITE_BUFFER_COUNT).     parser.declareField(ConstructingObjectParser.optionalConstructorArg(), (p, c) -> ByteSizeValue.parseBytesSizeValue(p.text(), FollowParameters.MAX_WRITE_BUFFER_SIZE.getPreferredName()), FollowParameters.MAX_WRITE_BUFFER_SIZE, ObjectParser.ValueType.STRING).     parser.declareField(ConstructingObjectParser.optionalConstructorArg(), (p, c) -> TimeValue.parseTimeValue(p.text(), FollowParameters.MAX_RETRY_DELAY.getPreferredName()), FollowParameters.MAX_RETRY_DELAY, ObjectParser.ValueType.STRING).     parser.declareField(ConstructingObjectParser.optionalConstructorArg(), (p, c) -> TimeValue.parseTimeValue(p.text(), FollowParameters.READ_POLL_TIMEOUT.getPreferredName()), FollowParameters.READ_POLL_TIMEOUT, ObjectParser.ValueType.STRING). }
false;public;1;16;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o instanceof ImmutableFollowParameters == false)         return false.     ImmutableFollowParameters that = (ImmutableFollowParameters) o.     return Objects.equals(maxReadRequestOperationCount, that.maxReadRequestOperationCount) && Objects.equals(maxWriteRequestOperationCount, that.maxWriteRequestOperationCount) && Objects.equals(maxOutstandingReadRequests, that.maxOutstandingReadRequests) && Objects.equals(maxOutstandingWriteRequests, that.maxOutstandingWriteRequests) && Objects.equals(maxReadRequestSize, that.maxReadRequestSize) && Objects.equals(maxWriteRequestSize, that.maxWriteRequestSize) && Objects.equals(maxWriteBufferCount, that.maxWriteBufferCount) && Objects.equals(maxWriteBufferSize, that.maxWriteBufferSize) && Objects.equals(maxRetryDelay, that.maxRetryDelay) && Objects.equals(readPollTimeout, that.readPollTimeout). }
false;public;0;15;;@Override public int hashCode() {     return Objects.hash(maxReadRequestOperationCount, maxWriteRequestOperationCount, maxOutstandingReadRequests, maxOutstandingWriteRequests, maxReadRequestSize, maxWriteRequestSize, maxWriteBufferCount, maxWriteBufferSize, maxRetryDelay, readPollTimeout). }
