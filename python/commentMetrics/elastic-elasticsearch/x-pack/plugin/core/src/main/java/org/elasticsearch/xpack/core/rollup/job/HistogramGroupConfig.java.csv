# id;timestamp;commentText;codeText;commentWords;codeWords
HistogramGroupConfig -> public List<CompositeValuesSourceBuilder<?>> toBuilders();1533230566;This returns a set of aggregation builders which represent the configured_set of histograms.  Used by the rollup indexer to iterate over historical data;public List<CompositeValuesSourceBuilder<?>> toBuilders() {_        if (fields.length == 0) {_            return Collections.emptyList()__        }__        return Arrays.stream(fields).map(f -> {_            HistogramValuesSourceBuilder vsBuilder_                    = new HistogramValuesSourceBuilder(RollupField.formatIndexerAggName(f, HistogramAggregationBuilder.NAME))__            vsBuilder.interval(interval)__            vsBuilder.field(f)__            vsBuilder.missingBucket(true)__            return vsBuilder__        }).collect(Collectors.toList())__    };this,returns,a,set,of,aggregation,builders,which,represent,the,configured,set,of,histograms,used,by,the,rollup,indexer,to,iterate,over,historical,data;public,list,composite,values,source,builder,to,builders,if,fields,length,0,return,collections,empty,list,return,arrays,stream,fields,map,f,histogram,values,source,builder,vs,builder,new,histogram,values,source,builder,rollup,field,format,indexer,agg,name,f,histogram,aggregation,builder,name,vs,builder,interval,interval,vs,builder,field,f,vs,builder,missing,bucket,true,return,vs,builder,collect,collectors,to,list
HistogramGroupConfig -> public List<CompositeValuesSourceBuilder<?>> toBuilders();1533641732;This returns a set of aggregation builders which represent the configured_set of histograms.  Used by the rollup indexer to iterate over historical data;public List<CompositeValuesSourceBuilder<?>> toBuilders() {_        if (fields.length == 0) {_            return Collections.emptyList()__        }__        return Arrays.stream(fields).map(f -> {_            HistogramValuesSourceBuilder vsBuilder_                    = new HistogramValuesSourceBuilder(RollupField.formatIndexerAggName(f, HistogramAggregationBuilder.NAME))__            vsBuilder.interval(interval)__            vsBuilder.field(f)__            vsBuilder.missingBucket(true)__            return vsBuilder__        }).collect(Collectors.toList())__    };this,returns,a,set,of,aggregation,builders,which,represent,the,configured,set,of,histograms,used,by,the,rollup,indexer,to,iterate,over,historical,data;public,list,composite,values,source,builder,to,builders,if,fields,length,0,return,collections,empty,list,return,arrays,stream,fields,map,f,histogram,values,source,builder,vs,builder,new,histogram,values,source,builder,rollup,field,format,indexer,agg,name,f,histogram,aggregation,builder,name,vs,builder,interval,interval,vs,builder,field,f,vs,builder,missing,bucket,true,return,vs,builder,collect,collectors,to,list
HistogramGroupConfig -> public List<CompositeValuesSourceBuilder<?>> toBuilders();1535139672;This returns a set of aggregation builders which represent the configured_set of histograms.  Used by the rollup indexer to iterate over historical data;public List<CompositeValuesSourceBuilder<?>> toBuilders() {_        if (fields.length == 0) {_            return Collections.emptyList()__        }__        return Arrays.stream(fields).map(f -> {_            HistogramValuesSourceBuilder vsBuilder_                    = new HistogramValuesSourceBuilder(RollupField.formatIndexerAggName(f, HistogramAggregationBuilder.NAME))__            vsBuilder.interval(interval)__            vsBuilder.field(f)__            vsBuilder.missingBucket(true)__            return vsBuilder__        }).collect(Collectors.toList())__    };this,returns,a,set,of,aggregation,builders,which,represent,the,configured,set,of,histograms,used,by,the,rollup,indexer,to,iterate,over,historical,data;public,list,composite,values,source,builder,to,builders,if,fields,length,0,return,collections,empty,list,return,arrays,stream,fields,map,f,histogram,values,source,builder,vs,builder,new,histogram,values,source,builder,rollup,field,format,indexer,agg,name,f,histogram,aggregation,builder,name,vs,builder,interval,interval,vs,builder,field,f,vs,builder,missing,bucket,true,return,vs,builder,collect,collectors,to,list
HistogramGroupConfig -> public Map<String, Object> toAggCap();1533230566;@return A map representing this config object as a RollupCaps aggregation object;public Map<String, Object> toAggCap() {_        Map<String, Object> map = new HashMap<>(2)__        map.put("agg", HistogramAggregationBuilder.NAME)__        map.put(INTERVAL, interval)__        return map__    };return,a,map,representing,this,config,object,as,a,rollup,caps,aggregation,object;public,map,string,object,to,agg,cap,map,string,object,map,new,hash,map,2,map,put,agg,histogram,aggregation,builder,name,map,put,interval,interval,return,map
HistogramGroupConfig -> public Map<String, Object> toAggCap();1533641732;@return A map representing this config object as a RollupCaps aggregation object;public Map<String, Object> toAggCap() {_        Map<String, Object> map = new HashMap<>(2)__        map.put("agg", HistogramAggregationBuilder.NAME)__        map.put(INTERVAL, interval)__        return map__    };return,a,map,representing,this,config,object,as,a,rollup,caps,aggregation,object;public,map,string,object,to,agg,cap,map,string,object,map,new,hash,map,2,map,put,agg,histogram,aggregation,builder,name,map,put,interval,interval,return,map
