# id;timestamp;commentText;codeText;commentWords;codeWords
SSLConfiguration -> TrustConfig trustConfig();1524684173;The configuration of trust material that will be used as part of this ssl configuration;TrustConfig trustConfig() {_        return trustConfig__    };the,configuration,of,trust,material,that,will,be,used,as,part,of,this,ssl,configuration;trust,config,trust,config,return,trust,config
SSLConfiguration -> TrustConfig trustConfig();1527622193;The configuration of trust material that will be used as part of this ssl configuration;TrustConfig trustConfig() {_        return trustConfig__    };the,configuration,of,trust,material,that,will,be,used,as,part,of,this,ssl,configuration;trust,config,trust,config,return,trust,config
SSLConfiguration -> TrustConfig trustConfig();1531179852;The configuration of trust material that will be used as part of this ssl configuration;TrustConfig trustConfig() {_        return trustConfig__    };the,configuration,of,trust,material,that,will,be,used,as,part,of,this,ssl,configuration;trust,config,trust,config,return,trust,config
SSLConfiguration -> TrustConfig trustConfig();1536611444;The configuration of trust material that will be used as part of this ssl configuration;TrustConfig trustConfig() {_        return trustConfig__    };the,configuration,of,trust,material,that,will,be,used,as,part,of,this,ssl,configuration;trust,config,trust,config,return,trust,config
SSLConfiguration -> TrustConfig trustConfig();1538170812;The configuration of trust material that will be used as part of this ssl configuration;TrustConfig trustConfig() {_        return trustConfig__    };the,configuration,of,trust,material,that,will,be,used,as,part,of,this,ssl,configuration;trust,config,trust,config,return,trust,config
SSLConfiguration -> TrustConfig trustConfig();1539615817;The configuration of trust material that will be used as part of this ssl configuration;TrustConfig trustConfig() {_        return trustConfig__    };the,configuration,of,trust,material,that,will,be,used,as,part,of,this,ssl,configuration;trust,config,trust,config,return,trust,config
SSLConfiguration -> TrustConfig trustConfig();1547499982;The configuration of trust material that will be used as part of this ssl configuration;TrustConfig trustConfig() {_        return trustConfig__    };the,configuration,of,trust,material,that,will,be,used,as,part,of,this,ssl,configuration;trust,config,trust,config,return,trust,config
SSLConfiguration -> SSLConfiguration(Settings settings, SSLConfiguration globalSSLConfiguration);1524684173;Creates a new SSLConfiguration from the given settings and global/default SSLConfiguration. If the settings do not contain a value_for a given aspect, the value from the global configuration will be used.__@param settings               the SSL specific settings_ only the settings under a *.ssl. prefix_@param globalSSLConfiguration the default configuration that is used as a fallback;SSLConfiguration(Settings settings, SSLConfiguration globalSSLConfiguration) {_        Objects.requireNonNull(globalSSLConfiguration)__        this.keyConfig = createKeyConfig(settings, globalSSLConfiguration)__        this.trustConfig = createTrustConfig(settings, keyConfig, globalSSLConfiguration)__        this.ciphers = getListOrDefault(SETTINGS_PARSER.ciphers, settings, globalSSLConfiguration.cipherSuites())__        this.supportedProtocols = getListOrDefault(SETTINGS_PARSER.supportedProtocols, settings,_                globalSSLConfiguration.supportedProtocols())__        this.sslClientAuth = SETTINGS_PARSER.clientAuth.get(settings).orElse(globalSSLConfiguration.sslClientAuth())__        this.verificationMode = SETTINGS_PARSER.verificationMode.get(settings).orElse(globalSSLConfiguration.verificationMode())__    };creates,a,new,sslconfiguration,from,the,given,settings,and,global,default,sslconfiguration,if,the,settings,do,not,contain,a,value,for,a,given,aspect,the,value,from,the,global,configuration,will,be,used,param,settings,the,ssl,specific,settings,only,the,settings,under,a,ssl,prefix,param,global,sslconfiguration,the,default,configuration,that,is,used,as,a,fallback;sslconfiguration,settings,settings,sslconfiguration,global,sslconfiguration,objects,require,non,null,global,sslconfiguration,this,key,config,create,key,config,settings,global,sslconfiguration,this,trust,config,create,trust,config,settings,key,config,global,sslconfiguration,this,ciphers,get,list,or,default,ciphers,settings,global,sslconfiguration,cipher,suites,this,supported,protocols,get,list,or,default,supported,protocols,settings,global,sslconfiguration,supported,protocols,this,ssl,client,auth,client,auth,get,settings,or,else,global,sslconfiguration,ssl,client,auth,this,verification,mode,verification,mode,get,settings,or,else,global,sslconfiguration,verification,mode
SSLConfiguration -> SSLConfiguration(Settings settings, SSLConfiguration globalSSLConfiguration);1527622193;Creates a new SSLConfiguration from the given settings and global/default SSLConfiguration. If the settings do not contain a value_for a given aspect, the value from the global configuration will be used.__@param settings               the SSL specific settings_ only the settings under a *.ssl. prefix_@param globalSSLConfiguration the default configuration that is used as a fallback;SSLConfiguration(Settings settings, SSLConfiguration globalSSLConfiguration) {_        Objects.requireNonNull(globalSSLConfiguration)__        this.keyConfig = createKeyConfig(settings, globalSSLConfiguration)__        this.trustConfig = createTrustConfig(settings, keyConfig, globalSSLConfiguration)__        this.ciphers = getListOrDefault(SETTINGS_PARSER.ciphers, settings, globalSSLConfiguration.cipherSuites())__        this.supportedProtocols = getListOrDefault(SETTINGS_PARSER.supportedProtocols, settings,_                globalSSLConfiguration.supportedProtocols())__        this.sslClientAuth = SETTINGS_PARSER.clientAuth.get(settings).orElse(globalSSLConfiguration.sslClientAuth())__        this.verificationMode = SETTINGS_PARSER.verificationMode.get(settings).orElse(globalSSLConfiguration.verificationMode())__    };creates,a,new,sslconfiguration,from,the,given,settings,and,global,default,sslconfiguration,if,the,settings,do,not,contain,a,value,for,a,given,aspect,the,value,from,the,global,configuration,will,be,used,param,settings,the,ssl,specific,settings,only,the,settings,under,a,ssl,prefix,param,global,sslconfiguration,the,default,configuration,that,is,used,as,a,fallback;sslconfiguration,settings,settings,sslconfiguration,global,sslconfiguration,objects,require,non,null,global,sslconfiguration,this,key,config,create,key,config,settings,global,sslconfiguration,this,trust,config,create,trust,config,settings,key,config,global,sslconfiguration,this,ciphers,get,list,or,default,ciphers,settings,global,sslconfiguration,cipher,suites,this,supported,protocols,get,list,or,default,supported,protocols,settings,global,sslconfiguration,supported,protocols,this,ssl,client,auth,client,auth,get,settings,or,else,global,sslconfiguration,ssl,client,auth,this,verification,mode,verification,mode,get,settings,or,else,global,sslconfiguration,verification,mode
SSLConfiguration -> SSLConfiguration(Settings settings, SSLConfiguration globalSSLConfiguration);1531179852;Creates a new SSLConfiguration from the given settings and global/default SSLConfiguration. If the settings do not contain a value_for a given aspect, the value from the global configuration will be used.__@param settings               the SSL specific settings_ only the settings under a *.ssl. prefix_@param globalSSLConfiguration the default configuration that is used as a fallback;SSLConfiguration(Settings settings, SSLConfiguration globalSSLConfiguration) {_        Objects.requireNonNull(globalSSLConfiguration)__        this.keyConfig = createKeyConfig(settings, globalSSLConfiguration)__        this.trustConfig = createTrustConfig(settings, keyConfig, globalSSLConfiguration)__        this.ciphers = getListOrDefault(SETTINGS_PARSER.ciphers, settings, globalSSLConfiguration.cipherSuites())__        this.supportedProtocols = getListOrDefault(SETTINGS_PARSER.supportedProtocols, settings,_                globalSSLConfiguration.supportedProtocols())__        this.sslClientAuth = SETTINGS_PARSER.clientAuth.get(settings).orElse(globalSSLConfiguration.sslClientAuth())__        this.verificationMode = SETTINGS_PARSER.verificationMode.get(settings).orElse(globalSSLConfiguration.verificationMode())__    };creates,a,new,sslconfiguration,from,the,given,settings,and,global,default,sslconfiguration,if,the,settings,do,not,contain,a,value,for,a,given,aspect,the,value,from,the,global,configuration,will,be,used,param,settings,the,ssl,specific,settings,only,the,settings,under,a,ssl,prefix,param,global,sslconfiguration,the,default,configuration,that,is,used,as,a,fallback;sslconfiguration,settings,settings,sslconfiguration,global,sslconfiguration,objects,require,non,null,global,sslconfiguration,this,key,config,create,key,config,settings,global,sslconfiguration,this,trust,config,create,trust,config,settings,key,config,global,sslconfiguration,this,ciphers,get,list,or,default,ciphers,settings,global,sslconfiguration,cipher,suites,this,supported,protocols,get,list,or,default,supported,protocols,settings,global,sslconfiguration,supported,protocols,this,ssl,client,auth,client,auth,get,settings,or,else,global,sslconfiguration,ssl,client,auth,this,verification,mode,verification,mode,get,settings,or,else,global,sslconfiguration,verification,mode
SSLConfiguration -> SSLConfiguration(Settings settings, SSLConfiguration globalSSLConfiguration);1536611444;Creates a new SSLConfiguration from the given settings and global/default SSLConfiguration. If the settings do not contain a value_for a given aspect, the value from the global configuration will be used.__@param settings               the SSL specific settings_ only the settings under a *.ssl. prefix_@param globalSSLConfiguration the default configuration that is used as a fallback;SSLConfiguration(Settings settings, SSLConfiguration globalSSLConfiguration) {_        Objects.requireNonNull(globalSSLConfiguration)__        this.keyConfig = createKeyConfig(settings, globalSSLConfiguration)__        this.trustConfig = createTrustConfig(settings, keyConfig, globalSSLConfiguration)__        this.ciphers = getListOrDefault(SETTINGS_PARSER.ciphers, settings, globalSSLConfiguration.cipherSuites())__        this.supportedProtocols = getListOrDefault(SETTINGS_PARSER.supportedProtocols, settings,_                globalSSLConfiguration.supportedProtocols())__        this.sslClientAuth = SETTINGS_PARSER.clientAuth.get(settings).orElse(globalSSLConfiguration.sslClientAuth())__        this.verificationMode = SETTINGS_PARSER.verificationMode.get(settings).orElse(globalSSLConfiguration.verificationMode())__    };creates,a,new,sslconfiguration,from,the,given,settings,and,global,default,sslconfiguration,if,the,settings,do,not,contain,a,value,for,a,given,aspect,the,value,from,the,global,configuration,will,be,used,param,settings,the,ssl,specific,settings,only,the,settings,under,a,ssl,prefix,param,global,sslconfiguration,the,default,configuration,that,is,used,as,a,fallback;sslconfiguration,settings,settings,sslconfiguration,global,sslconfiguration,objects,require,non,null,global,sslconfiguration,this,key,config,create,key,config,settings,global,sslconfiguration,this,trust,config,create,trust,config,settings,key,config,global,sslconfiguration,this,ciphers,get,list,or,default,ciphers,settings,global,sslconfiguration,cipher,suites,this,supported,protocols,get,list,or,default,supported,protocols,settings,global,sslconfiguration,supported,protocols,this,ssl,client,auth,client,auth,get,settings,or,else,global,sslconfiguration,ssl,client,auth,this,verification,mode,verification,mode,get,settings,or,else,global,sslconfiguration,verification,mode
SSLConfiguration -> SSLConfiguration(Settings settings, SSLConfiguration globalSSLConfiguration);1538170812;Creates a new SSLConfiguration from the given settings and global/default SSLConfiguration. If the settings do not contain a value_for a given aspect, the value from the global configuration will be used.__@param settings               the SSL specific settings_ only the settings under a *.ssl. prefix_@param globalSSLConfiguration the default configuration that is used as a fallback;SSLConfiguration(Settings settings, SSLConfiguration globalSSLConfiguration) {_        Objects.requireNonNull(globalSSLConfiguration)__        this.keyConfig = createKeyConfig(settings, globalSSLConfiguration)__        this.trustConfig = createTrustConfig(settings, keyConfig, globalSSLConfiguration)__        this.ciphers = getListOrDefault(SETTINGS_PARSER.ciphers, settings, globalSSLConfiguration.cipherSuites())__        this.supportedProtocols = getListOrDefault(SETTINGS_PARSER.supportedProtocols, settings,_                globalSSLConfiguration.supportedProtocols())__        this.sslClientAuth = SETTINGS_PARSER.clientAuth.get(settings).orElse(globalSSLConfiguration.sslClientAuth())__        this.verificationMode = SETTINGS_PARSER.verificationMode.get(settings).orElse(globalSSLConfiguration.verificationMode())__    };creates,a,new,sslconfiguration,from,the,given,settings,and,global,default,sslconfiguration,if,the,settings,do,not,contain,a,value,for,a,given,aspect,the,value,from,the,global,configuration,will,be,used,param,settings,the,ssl,specific,settings,only,the,settings,under,a,ssl,prefix,param,global,sslconfiguration,the,default,configuration,that,is,used,as,a,fallback;sslconfiguration,settings,settings,sslconfiguration,global,sslconfiguration,objects,require,non,null,global,sslconfiguration,this,key,config,create,key,config,settings,global,sslconfiguration,this,trust,config,create,trust,config,settings,key,config,global,sslconfiguration,this,ciphers,get,list,or,default,ciphers,settings,global,sslconfiguration,cipher,suites,this,supported,protocols,get,list,or,default,supported,protocols,settings,global,sslconfiguration,supported,protocols,this,ssl,client,auth,client,auth,get,settings,or,else,global,sslconfiguration,ssl,client,auth,this,verification,mode,verification,mode,get,settings,or,else,global,sslconfiguration,verification,mode
SSLConfiguration -> SSLConfiguration(Settings settings, SSLConfiguration globalSSLConfiguration);1539615817;Creates a new SSLConfiguration from the given settings and global/default SSLConfiguration. If the settings do not contain a value_for a given aspect, the value from the global configuration will be used.__@param settings               the SSL specific settings_ only the settings under a *.ssl. prefix_@param globalSSLConfiguration the default configuration that is used as a fallback;SSLConfiguration(Settings settings, SSLConfiguration globalSSLConfiguration) {_        Objects.requireNonNull(globalSSLConfiguration)__        this.keyConfig = createKeyConfig(settings, globalSSLConfiguration)__        this.trustConfig = createTrustConfig(settings, keyConfig, globalSSLConfiguration)__        this.ciphers = getListOrDefault(SETTINGS_PARSER.ciphers, settings, globalSSLConfiguration.cipherSuites())__        this.supportedProtocols = getListOrDefault(SETTINGS_PARSER.supportedProtocols, settings,_                globalSSLConfiguration.supportedProtocols())__        this.sslClientAuth = SETTINGS_PARSER.clientAuth.get(settings).orElse(globalSSLConfiguration.sslClientAuth())__        this.verificationMode = SETTINGS_PARSER.verificationMode.get(settings).orElse(globalSSLConfiguration.verificationMode())__    };creates,a,new,sslconfiguration,from,the,given,settings,and,global,default,sslconfiguration,if,the,settings,do,not,contain,a,value,for,a,given,aspect,the,value,from,the,global,configuration,will,be,used,param,settings,the,ssl,specific,settings,only,the,settings,under,a,ssl,prefix,param,global,sslconfiguration,the,default,configuration,that,is,used,as,a,fallback;sslconfiguration,settings,settings,sslconfiguration,global,sslconfiguration,objects,require,non,null,global,sslconfiguration,this,key,config,create,key,config,settings,global,sslconfiguration,this,trust,config,create,trust,config,settings,key,config,global,sslconfiguration,this,ciphers,get,list,or,default,ciphers,settings,global,sslconfiguration,cipher,suites,this,supported,protocols,get,list,or,default,supported,protocols,settings,global,sslconfiguration,supported,protocols,this,ssl,client,auth,client,auth,get,settings,or,else,global,sslconfiguration,ssl,client,auth,this,verification,mode,verification,mode,get,settings,or,else,global,sslconfiguration,verification,mode
SSLConfiguration -> List<Path> filesToMonitor(@Nullable Environment environment);1524684173;Provides the list of paths to files that back this configuration;List<Path> filesToMonitor(@Nullable Environment environment) {_        if (keyConfig() == trustConfig()) {_            return keyConfig().filesToMonitor(environment)__        }_        List<Path> paths = new ArrayList<>(keyConfig().filesToMonitor(environment))__        paths.addAll(trustConfig().filesToMonitor(environment))__        return paths__    };provides,the,list,of,paths,to,files,that,back,this,configuration;list,path,files,to,monitor,nullable,environment,environment,if,key,config,trust,config,return,key,config,files,to,monitor,environment,list,path,paths,new,array,list,key,config,files,to,monitor,environment,paths,add,all,trust,config,files,to,monitor,environment,return,paths
SSLConfiguration -> List<Path> filesToMonitor(@Nullable Environment environment);1527622193;Provides the list of paths to files that back this configuration;List<Path> filesToMonitor(@Nullable Environment environment) {_        if (keyConfig() == trustConfig()) {_            return keyConfig().filesToMonitor(environment)__        }_        List<Path> paths = new ArrayList<>(keyConfig().filesToMonitor(environment))__        paths.addAll(trustConfig().filesToMonitor(environment))__        return paths__    };provides,the,list,of,paths,to,files,that,back,this,configuration;list,path,files,to,monitor,nullable,environment,environment,if,key,config,trust,config,return,key,config,files,to,monitor,environment,list,path,paths,new,array,list,key,config,files,to,monitor,environment,paths,add,all,trust,config,files,to,monitor,environment,return,paths
SSLConfiguration -> List<Path> filesToMonitor(@Nullable Environment environment);1531179852;Provides the list of paths to files that back this configuration;List<Path> filesToMonitor(@Nullable Environment environment) {_        if (keyConfig() == trustConfig()) {_            return keyConfig().filesToMonitor(environment)__        }_        List<Path> paths = new ArrayList<>(keyConfig().filesToMonitor(environment))__        paths.addAll(trustConfig().filesToMonitor(environment))__        return paths__    };provides,the,list,of,paths,to,files,that,back,this,configuration;list,path,files,to,monitor,nullable,environment,environment,if,key,config,trust,config,return,key,config,files,to,monitor,environment,list,path,paths,new,array,list,key,config,files,to,monitor,environment,paths,add,all,trust,config,files,to,monitor,environment,return,paths
SSLConfiguration -> List<Path> filesToMonitor(@Nullable Environment environment);1536611444;Provides the list of paths to files that back this configuration;List<Path> filesToMonitor(@Nullable Environment environment) {_        if (keyConfig() == trustConfig()) {_            return keyConfig().filesToMonitor(environment)__        }_        List<Path> paths = new ArrayList<>(keyConfig().filesToMonitor(environment))__        paths.addAll(trustConfig().filesToMonitor(environment))__        return paths__    };provides,the,list,of,paths,to,files,that,back,this,configuration;list,path,files,to,monitor,nullable,environment,environment,if,key,config,trust,config,return,key,config,files,to,monitor,environment,list,path,paths,new,array,list,key,config,files,to,monitor,environment,paths,add,all,trust,config,files,to,monitor,environment,return,paths
SSLConfiguration -> List<Path> filesToMonitor(@Nullable Environment environment);1538170812;Provides the list of paths to files that back this configuration;List<Path> filesToMonitor(@Nullable Environment environment) {_        if (keyConfig() == trustConfig()) {_            return keyConfig().filesToMonitor(environment)__        }_        List<Path> paths = new ArrayList<>(keyConfig().filesToMonitor(environment))__        paths.addAll(trustConfig().filesToMonitor(environment))__        return paths__    };provides,the,list,of,paths,to,files,that,back,this,configuration;list,path,files,to,monitor,nullable,environment,environment,if,key,config,trust,config,return,key,config,files,to,monitor,environment,list,path,paths,new,array,list,key,config,files,to,monitor,environment,paths,add,all,trust,config,files,to,monitor,environment,return,paths
SSLConfiguration -> List<Path> filesToMonitor(@Nullable Environment environment);1539615817;Provides the list of paths to files that back this configuration;List<Path> filesToMonitor(@Nullable Environment environment) {_        if (keyConfig() == trustConfig()) {_            return keyConfig().filesToMonitor(environment)__        }_        List<Path> paths = new ArrayList<>(keyConfig().filesToMonitor(environment))__        paths.addAll(trustConfig().filesToMonitor(environment))__        return paths__    };provides,the,list,of,paths,to,files,that,back,this,configuration;list,path,files,to,monitor,nullable,environment,environment,if,key,config,trust,config,return,key,config,files,to,monitor,environment,list,path,paths,new,array,list,key,config,files,to,monitor,environment,paths,add,all,trust,config,files,to,monitor,environment,return,paths
SSLConfiguration -> List<Path> filesToMonitor(@Nullable Environment environment);1547499982;Provides the list of paths to files that back this configuration;List<Path> filesToMonitor(@Nullable Environment environment) {_        if (keyConfig() == trustConfig()) {_            return keyConfig().filesToMonitor(environment)__        }_        List<Path> paths = new ArrayList<>(keyConfig().filesToMonitor(environment))__        paths.addAll(trustConfig().filesToMonitor(environment))__        return paths__    };provides,the,list,of,paths,to,files,that,back,this,configuration;list,path,files,to,monitor,nullable,environment,environment,if,key,config,trust,config,return,key,config,files,to,monitor,environment,list,path,paths,new,array,list,key,config,files,to,monitor,environment,paths,add,all,trust,config,files,to,monitor,environment,return,paths
SSLConfiguration -> KeyConfig keyConfig();1524684173;The configuration for the key, if any, that will be used as part of this ssl configuration;KeyConfig keyConfig() {_        return keyConfig__    };the,configuration,for,the,key,if,any,that,will,be,used,as,part,of,this,ssl,configuration;key,config,key,config,return,key,config
SSLConfiguration -> KeyConfig keyConfig();1527622193;The configuration for the key, if any, that will be used as part of this ssl configuration;KeyConfig keyConfig() {_        return keyConfig__    };the,configuration,for,the,key,if,any,that,will,be,used,as,part,of,this,ssl,configuration;key,config,key,config,return,key,config
SSLConfiguration -> KeyConfig keyConfig();1531179852;The configuration for the key, if any, that will be used as part of this ssl configuration;KeyConfig keyConfig() {_        return keyConfig__    };the,configuration,for,the,key,if,any,that,will,be,used,as,part,of,this,ssl,configuration;key,config,key,config,return,key,config
SSLConfiguration -> KeyConfig keyConfig();1536611444;The configuration for the key, if any, that will be used as part of this ssl configuration;KeyConfig keyConfig() {_        return keyConfig__    };the,configuration,for,the,key,if,any,that,will,be,used,as,part,of,this,ssl,configuration;key,config,key,config,return,key,config
SSLConfiguration -> KeyConfig keyConfig();1538170812;The configuration for the key, if any, that will be used as part of this ssl configuration;KeyConfig keyConfig() {_        return keyConfig__    };the,configuration,for,the,key,if,any,that,will,be,used,as,part,of,this,ssl,configuration;key,config,key,config,return,key,config
SSLConfiguration -> KeyConfig keyConfig();1539615817;The configuration for the key, if any, that will be used as part of this ssl configuration;KeyConfig keyConfig() {_        return keyConfig__    };the,configuration,for,the,key,if,any,that,will,be,used,as,part,of,this,ssl,configuration;key,config,key,config,return,key,config
SSLConfiguration -> KeyConfig keyConfig();1547499982;The configuration for the key, if any, that will be used as part of this ssl configuration;KeyConfig keyConfig() {_        return keyConfig__    };the,configuration,for,the,key,if,any,that,will,be,used,as,part,of,this,ssl,configuration;key,config,key,config,return,key,config
SSLConfiguration -> List<String> cipherSuites();1524684173;The cipher suites that will be used for this ssl configuration;List<String> cipherSuites() {_        return ciphers__    };the,cipher,suites,that,will,be,used,for,this,ssl,configuration;list,string,cipher,suites,return,ciphers
SSLConfiguration -> List<String> cipherSuites();1527622193;The cipher suites that will be used for this ssl configuration;List<String> cipherSuites() {_        return ciphers__    };the,cipher,suites,that,will,be,used,for,this,ssl,configuration;list,string,cipher,suites,return,ciphers
SSLConfiguration -> List<String> cipherSuites();1531179852;The cipher suites that will be used for this ssl configuration;List<String> cipherSuites() {_        return ciphers__    };the,cipher,suites,that,will,be,used,for,this,ssl,configuration;list,string,cipher,suites,return,ciphers
SSLConfiguration -> List<String> cipherSuites();1536611444;The cipher suites that will be used for this ssl configuration;List<String> cipherSuites() {_        return ciphers__    };the,cipher,suites,that,will,be,used,for,this,ssl,configuration;list,string,cipher,suites,return,ciphers
SSLConfiguration -> List<String> cipherSuites();1538170812;The cipher suites that will be used for this ssl configuration;List<String> cipherSuites() {_        return ciphers__    };the,cipher,suites,that,will,be,used,for,this,ssl,configuration;list,string,cipher,suites,return,ciphers
SSLConfiguration -> List<String> cipherSuites();1539615817;The cipher suites that will be used for this ssl configuration;List<String> cipherSuites() {_        return ciphers__    };the,cipher,suites,that,will,be,used,for,this,ssl,configuration;list,string,cipher,suites,return,ciphers
SSLConfiguration -> List<String> cipherSuites();1547499982;The cipher suites that will be used for this ssl configuration;List<String> cipherSuites() {_        return ciphers__    };the,cipher,suites,that,will,be,used,for,this,ssl,configuration;list,string,cipher,suites,return,ciphers
SSLConfiguration -> List<String> supportedProtocols();1524684173;The protocols that are supported by this configuration;List<String> supportedProtocols() {_        return supportedProtocols__    };the,protocols,that,are,supported,by,this,configuration;list,string,supported,protocols,return,supported,protocols
SSLConfiguration -> List<String> supportedProtocols();1527622193;The protocols that are supported by this configuration;List<String> supportedProtocols() {_        return supportedProtocols__    };the,protocols,that,are,supported,by,this,configuration;list,string,supported,protocols,return,supported,protocols
SSLConfiguration -> List<String> supportedProtocols();1531179852;The protocols that are supported by this configuration;List<String> supportedProtocols() {_        return supportedProtocols__    };the,protocols,that,are,supported,by,this,configuration;list,string,supported,protocols,return,supported,protocols
SSLConfiguration -> List<String> supportedProtocols();1536611444;The protocols that are supported by this configuration;List<String> supportedProtocols() {_        return supportedProtocols__    };the,protocols,that,are,supported,by,this,configuration;list,string,supported,protocols,return,supported,protocols
SSLConfiguration -> List<String> supportedProtocols();1538170812;The protocols that are supported by this configuration;List<String> supportedProtocols() {_        return supportedProtocols__    };the,protocols,that,are,supported,by,this,configuration;list,string,supported,protocols,return,supported,protocols
SSLConfiguration -> List<String> supportedProtocols();1539615817;The protocols that are supported by this configuration;List<String> supportedProtocols() {_        return supportedProtocols__    };the,protocols,that,are,supported,by,this,configuration;list,string,supported,protocols,return,supported,protocols
SSLConfiguration -> List<String> supportedProtocols();1547499982;The protocols that are supported by this configuration;List<String> supportedProtocols() {_        return supportedProtocols__    };the,protocols,that,are,supported,by,this,configuration;list,string,supported,protocols,return,supported,protocols
SSLConfiguration -> SSLClientAuth sslClientAuth();1524684173;The client auth configuration;SSLClientAuth sslClientAuth() {_        return sslClientAuth__    };the,client,auth,configuration;sslclient,auth,ssl,client,auth,return,ssl,client,auth
SSLConfiguration -> SSLClientAuth sslClientAuth();1527622193;The client auth configuration;SSLClientAuth sslClientAuth() {_        return sslClientAuth__    };the,client,auth,configuration;sslclient,auth,ssl,client,auth,return,ssl,client,auth
SSLConfiguration -> SSLClientAuth sslClientAuth();1531179852;The client auth configuration;SSLClientAuth sslClientAuth() {_        return sslClientAuth__    };the,client,auth,configuration;sslclient,auth,ssl,client,auth,return,ssl,client,auth
SSLConfiguration -> SSLClientAuth sslClientAuth();1536611444;The client auth configuration;SSLClientAuth sslClientAuth() {_        return sslClientAuth__    };the,client,auth,configuration;sslclient,auth,ssl,client,auth,return,ssl,client,auth
SSLConfiguration -> SSLClientAuth sslClientAuth();1538170812;The client auth configuration;SSLClientAuth sslClientAuth() {_        return sslClientAuth__    };the,client,auth,configuration;sslclient,auth,ssl,client,auth,return,ssl,client,auth
SSLConfiguration -> SSLClientAuth sslClientAuth();1539615817;The client auth configuration;SSLClientAuth sslClientAuth() {_        return sslClientAuth__    };the,client,auth,configuration;sslclient,auth,ssl,client,auth,return,ssl,client,auth
SSLConfiguration -> SSLClientAuth sslClientAuth();1547499982;The client auth configuration;SSLClientAuth sslClientAuth() {_        return sslClientAuth__    };the,client,auth,configuration;sslclient,auth,ssl,client,auth,return,ssl,client,auth
SSLConfiguration -> SSLConfiguration(Settings settings);1524684173;Creates a new SSLConfiguration from the given settings. There is no fallback configuration when invoking this constructor so_un-configured aspects will take on their default values.__@param settings the SSL specific settings_ only the settings under a *.ssl. prefix;SSLConfiguration(Settings settings) {_        this.keyConfig = createKeyConfig(settings, (SSLConfiguration) null)__        this.trustConfig = createTrustConfig(settings, keyConfig, null)__        this.ciphers = getListOrDefault(SETTINGS_PARSER.ciphers, settings, XPackSettings.DEFAULT_CIPHERS)__        this.supportedProtocols = getListOrDefault(SETTINGS_PARSER.supportedProtocols, settings, XPackSettings.DEFAULT_SUPPORTED_PROTOCOLS)__        this.sslClientAuth = SETTINGS_PARSER.clientAuth.get(settings).orElse(XPackSettings.CLIENT_AUTH_DEFAULT)__        this.verificationMode = SETTINGS_PARSER.verificationMode.get(settings).orElse(XPackSettings.VERIFICATION_MODE_DEFAULT)__    };creates,a,new,sslconfiguration,from,the,given,settings,there,is,no,fallback,configuration,when,invoking,this,constructor,so,un,configured,aspects,will,take,on,their,default,values,param,settings,the,ssl,specific,settings,only,the,settings,under,a,ssl,prefix;sslconfiguration,settings,settings,this,key,config,create,key,config,settings,sslconfiguration,null,this,trust,config,create,trust,config,settings,key,config,null,this,ciphers,get,list,or,default,ciphers,settings,xpack,settings,this,supported,protocols,get,list,or,default,supported,protocols,settings,xpack,settings,this,ssl,client,auth,client,auth,get,settings,or,else,xpack,settings,this,verification,mode,verification,mode,get,settings,or,else,xpack,settings
SSLConfiguration -> SSLConfiguration(Settings settings);1527622193;Creates a new SSLConfiguration from the given settings. There is no fallback configuration when invoking this constructor so_un-configured aspects will take on their default values.__@param settings the SSL specific settings_ only the settings under a *.ssl. prefix;SSLConfiguration(Settings settings) {_        this.keyConfig = createKeyConfig(settings, (SSLConfiguration) null)__        this.trustConfig = createTrustConfig(settings, keyConfig, null)__        this.ciphers = getListOrDefault(SETTINGS_PARSER.ciphers, settings, XPackSettings.DEFAULT_CIPHERS)__        this.supportedProtocols = getListOrDefault(SETTINGS_PARSER.supportedProtocols, settings, XPackSettings.DEFAULT_SUPPORTED_PROTOCOLS)__        this.sslClientAuth = SETTINGS_PARSER.clientAuth.get(settings).orElse(XPackSettings.CLIENT_AUTH_DEFAULT)__        this.verificationMode = SETTINGS_PARSER.verificationMode.get(settings).orElse(XPackSettings.VERIFICATION_MODE_DEFAULT)__    };creates,a,new,sslconfiguration,from,the,given,settings,there,is,no,fallback,configuration,when,invoking,this,constructor,so,un,configured,aspects,will,take,on,their,default,values,param,settings,the,ssl,specific,settings,only,the,settings,under,a,ssl,prefix;sslconfiguration,settings,settings,this,key,config,create,key,config,settings,sslconfiguration,null,this,trust,config,create,trust,config,settings,key,config,null,this,ciphers,get,list,or,default,ciphers,settings,xpack,settings,this,supported,protocols,get,list,or,default,supported,protocols,settings,xpack,settings,this,ssl,client,auth,client,auth,get,settings,or,else,xpack,settings,this,verification,mode,verification,mode,get,settings,or,else,xpack,settings
SSLConfiguration -> SSLConfiguration(Settings settings);1531179852;Creates a new SSLConfiguration from the given settings. There is no fallback configuration when invoking this constructor so_un-configured aspects will take on their default values.__@param settings the SSL specific settings_ only the settings under a *.ssl. prefix;SSLConfiguration(Settings settings) {_        this.keyConfig = createKeyConfig(settings, (SSLConfiguration) null)__        this.trustConfig = createTrustConfig(settings, keyConfig, null)__        this.ciphers = getListOrDefault(SETTINGS_PARSER.ciphers, settings, XPackSettings.DEFAULT_CIPHERS)__        this.supportedProtocols = getListOrDefault(SETTINGS_PARSER.supportedProtocols, settings, XPackSettings.DEFAULT_SUPPORTED_PROTOCOLS)__        this.sslClientAuth = SETTINGS_PARSER.clientAuth.get(settings).orElse(XPackSettings.CLIENT_AUTH_DEFAULT)__        this.verificationMode = SETTINGS_PARSER.verificationMode.get(settings).orElse(XPackSettings.VERIFICATION_MODE_DEFAULT)__    };creates,a,new,sslconfiguration,from,the,given,settings,there,is,no,fallback,configuration,when,invoking,this,constructor,so,un,configured,aspects,will,take,on,their,default,values,param,settings,the,ssl,specific,settings,only,the,settings,under,a,ssl,prefix;sslconfiguration,settings,settings,this,key,config,create,key,config,settings,sslconfiguration,null,this,trust,config,create,trust,config,settings,key,config,null,this,ciphers,get,list,or,default,ciphers,settings,xpack,settings,this,supported,protocols,get,list,or,default,supported,protocols,settings,xpack,settings,this,ssl,client,auth,client,auth,get,settings,or,else,xpack,settings,this,verification,mode,verification,mode,get,settings,or,else,xpack,settings
SSLConfiguration -> SSLConfiguration(Settings settings);1536611444;Creates a new SSLConfiguration from the given settings. There is no fallback configuration when invoking this constructor so_un-configured aspects will take on their default values.__@param settings the SSL specific settings_ only the settings under a *.ssl. prefix;SSLConfiguration(Settings settings) {_        this.keyConfig = createKeyConfig(settings, (SSLConfiguration) null)__        this.trustConfig = createTrustConfig(settings, keyConfig, null)__        this.ciphers = getListOrDefault(SETTINGS_PARSER.ciphers, settings, XPackSettings.DEFAULT_CIPHERS)__        this.supportedProtocols = getListOrDefault(SETTINGS_PARSER.supportedProtocols, settings, XPackSettings.DEFAULT_SUPPORTED_PROTOCOLS)__        this.sslClientAuth = SETTINGS_PARSER.clientAuth.get(settings).orElse(XPackSettings.CLIENT_AUTH_DEFAULT)__        this.verificationMode = SETTINGS_PARSER.verificationMode.get(settings).orElse(XPackSettings.VERIFICATION_MODE_DEFAULT)__    };creates,a,new,sslconfiguration,from,the,given,settings,there,is,no,fallback,configuration,when,invoking,this,constructor,so,un,configured,aspects,will,take,on,their,default,values,param,settings,the,ssl,specific,settings,only,the,settings,under,a,ssl,prefix;sslconfiguration,settings,settings,this,key,config,create,key,config,settings,sslconfiguration,null,this,trust,config,create,trust,config,settings,key,config,null,this,ciphers,get,list,or,default,ciphers,settings,xpack,settings,this,supported,protocols,get,list,or,default,supported,protocols,settings,xpack,settings,this,ssl,client,auth,client,auth,get,settings,or,else,xpack,settings,this,verification,mode,verification,mode,get,settings,or,else,xpack,settings
SSLConfiguration -> SSLConfiguration(Settings settings);1538170812;Creates a new SSLConfiguration from the given settings. There is no fallback configuration when invoking this constructor so_un-configured aspects will take on their default values.__@param settings the SSL specific settings_ only the settings under a *.ssl. prefix;SSLConfiguration(Settings settings) {_        this.keyConfig = createKeyConfig(settings, (SSLConfiguration) null)__        this.trustConfig = createTrustConfig(settings, keyConfig, null)__        this.ciphers = getListOrDefault(SETTINGS_PARSER.ciphers, settings, XPackSettings.DEFAULT_CIPHERS)__        this.supportedProtocols = getListOrDefault(SETTINGS_PARSER.supportedProtocols, settings, XPackSettings.DEFAULT_SUPPORTED_PROTOCOLS)__        this.sslClientAuth = SETTINGS_PARSER.clientAuth.get(settings).orElse(XPackSettings.CLIENT_AUTH_DEFAULT)__        this.verificationMode = SETTINGS_PARSER.verificationMode.get(settings).orElse(XPackSettings.VERIFICATION_MODE_DEFAULT)__    };creates,a,new,sslconfiguration,from,the,given,settings,there,is,no,fallback,configuration,when,invoking,this,constructor,so,un,configured,aspects,will,take,on,their,default,values,param,settings,the,ssl,specific,settings,only,the,settings,under,a,ssl,prefix;sslconfiguration,settings,settings,this,key,config,create,key,config,settings,sslconfiguration,null,this,trust,config,create,trust,config,settings,key,config,null,this,ciphers,get,list,or,default,ciphers,settings,xpack,settings,this,supported,protocols,get,list,or,default,supported,protocols,settings,xpack,settings,this,ssl,client,auth,client,auth,get,settings,or,else,xpack,settings,this,verification,mode,verification,mode,get,settings,or,else,xpack,settings
SSLConfiguration -> SSLConfiguration(Settings settings);1539615817;Creates a new SSLConfiguration from the given settings. There is no fallback configuration when invoking this constructor so_un-configured aspects will take on their default values.__@param settings the SSL specific settings_ only the settings under a *.ssl. prefix;SSLConfiguration(Settings settings) {_        this.keyConfig = createKeyConfig(settings, (SSLConfiguration) null)__        this.trustConfig = createTrustConfig(settings, keyConfig, null)__        this.ciphers = getListOrDefault(SETTINGS_PARSER.ciphers, settings, XPackSettings.DEFAULT_CIPHERS)__        this.supportedProtocols = getListOrDefault(SETTINGS_PARSER.supportedProtocols, settings, XPackSettings.DEFAULT_SUPPORTED_PROTOCOLS)__        this.sslClientAuth = SETTINGS_PARSER.clientAuth.get(settings).orElse(XPackSettings.CLIENT_AUTH_DEFAULT)__        this.verificationMode = SETTINGS_PARSER.verificationMode.get(settings).orElse(XPackSettings.VERIFICATION_MODE_DEFAULT)__    };creates,a,new,sslconfiguration,from,the,given,settings,there,is,no,fallback,configuration,when,invoking,this,constructor,so,un,configured,aspects,will,take,on,their,default,values,param,settings,the,ssl,specific,settings,only,the,settings,under,a,ssl,prefix;sslconfiguration,settings,settings,this,key,config,create,key,config,settings,sslconfiguration,null,this,trust,config,create,trust,config,settings,key,config,null,this,ciphers,get,list,or,default,ciphers,settings,xpack,settings,this,supported,protocols,get,list,or,default,supported,protocols,settings,xpack,settings,this,ssl,client,auth,client,auth,get,settings,or,else,xpack,settings,this,verification,mode,verification,mode,get,settings,or,else,xpack,settings
SSLConfiguration -> SSLConfiguration(Settings settings);1547499982;Creates a new SSLConfiguration from the given settings. There is no fallback configuration when invoking this constructor so_un-configured aspects will take on their default values.__@param settings the SSL specific settings_ only the settings under a *.ssl. prefix;SSLConfiguration(Settings settings) {_        this.keyConfig = createKeyConfig(settings)__        this.trustConfig = createTrustConfig(settings, keyConfig)__        this.ciphers = getListOrDefault(SETTINGS_PARSER.ciphers, settings, XPackSettings.DEFAULT_CIPHERS)__        this.supportedProtocols = getListOrDefault(SETTINGS_PARSER.supportedProtocols, settings, XPackSettings.DEFAULT_SUPPORTED_PROTOCOLS)__        this.sslClientAuth = SETTINGS_PARSER.clientAuth.get(settings).orElse(XPackSettings.CLIENT_AUTH_DEFAULT)__        this.verificationMode = SETTINGS_PARSER.verificationMode.get(settings).orElse(XPackSettings.VERIFICATION_MODE_DEFAULT)__    };creates,a,new,sslconfiguration,from,the,given,settings,there,is,no,fallback,configuration,when,invoking,this,constructor,so,un,configured,aspects,will,take,on,their,default,values,param,settings,the,ssl,specific,settings,only,the,settings,under,a,ssl,prefix;sslconfiguration,settings,settings,this,key,config,create,key,config,settings,this,trust,config,create,trust,config,settings,key,config,this,ciphers,get,list,or,default,ciphers,settings,xpack,settings,this,supported,protocols,get,list,or,default,supported,protocols,settings,xpack,settings,this,ssl,client,auth,client,auth,get,settings,or,else,xpack,settings,this,verification,mode,verification,mode,get,settings,or,else,xpack,settings
SSLConfiguration -> public VerificationMode verificationMode();1524684173;The verification mode for this configuration_ this mode controls certificate and hostname verification;public VerificationMode verificationMode() {_        return verificationMode__    };the,verification,mode,for,this,configuration,this,mode,controls,certificate,and,hostname,verification;public,verification,mode,verification,mode,return,verification,mode
SSLConfiguration -> public VerificationMode verificationMode();1527622193;The verification mode for this configuration_ this mode controls certificate and hostname verification;public VerificationMode verificationMode() {_        return verificationMode__    };the,verification,mode,for,this,configuration,this,mode,controls,certificate,and,hostname,verification;public,verification,mode,verification,mode,return,verification,mode
SSLConfiguration -> public VerificationMode verificationMode();1531179852;The verification mode for this configuration_ this mode controls certificate and hostname verification;public VerificationMode verificationMode() {_        return verificationMode__    };the,verification,mode,for,this,configuration,this,mode,controls,certificate,and,hostname,verification;public,verification,mode,verification,mode,return,verification,mode
SSLConfiguration -> public VerificationMode verificationMode();1536611444;The verification mode for this configuration_ this mode controls certificate and hostname verification;public VerificationMode verificationMode() {_        return verificationMode__    };the,verification,mode,for,this,configuration,this,mode,controls,certificate,and,hostname,verification;public,verification,mode,verification,mode,return,verification,mode
SSLConfiguration -> public VerificationMode verificationMode();1538170812;The verification mode for this configuration_ this mode controls certificate and hostname verification;public VerificationMode verificationMode() {_        return verificationMode__    };the,verification,mode,for,this,configuration,this,mode,controls,certificate,and,hostname,verification;public,verification,mode,verification,mode,return,verification,mode
SSLConfiguration -> public VerificationMode verificationMode();1539615817;The verification mode for this configuration_ this mode controls certificate and hostname verification;public VerificationMode verificationMode() {_        return verificationMode__    };the,verification,mode,for,this,configuration,this,mode,controls,certificate,and,hostname,verification;public,verification,mode,verification,mode,return,verification,mode
SSLConfiguration -> public VerificationMode verificationMode();1547499982;The verification mode for this configuration_ this mode controls certificate and hostname verification;public VerificationMode verificationMode() {_        return verificationMode__    };the,verification,mode,for,this,configuration,this,mode,controls,certificate,and,hostname,verification;public,verification,mode,verification,mode,return,verification,mode
SSLConfiguration -> List<CertificateInfo> getDefinedCertificates(@Nullable Environment environment) throws GeneralSecurityException, IOException;1524684173;Returns information about each certificate that referenced by this SSL configurations._This includes certificates used for identity (with a private key) and those used for trust, but excludes_certificates that are provided by the JRE._@see TrustConfig#certificates(Environment);List<CertificateInfo> getDefinedCertificates(@Nullable Environment environment) throws GeneralSecurityException, IOException {_        List<CertificateInfo> certificates = new ArrayList<>()__        certificates.addAll(keyConfig.certificates(environment))__        certificates.addAll(trustConfig.certificates(environment))__        return certificates__    };returns,information,about,each,certificate,that,referenced,by,this,ssl,configurations,this,includes,certificates,used,for,identity,with,a,private,key,and,those,used,for,trust,but,excludes,certificates,that,are,provided,by,the,jre,see,trust,config,certificates,environment;list,certificate,info,get,defined,certificates,nullable,environment,environment,throws,general,security,exception,ioexception,list,certificate,info,certificates,new,array,list,certificates,add,all,key,config,certificates,environment,certificates,add,all,trust,config,certificates,environment,return,certificates
SSLConfiguration -> List<CertificateInfo> getDefinedCertificates(@Nullable Environment environment) throws GeneralSecurityException, IOException;1527622193;Returns information about each certificate that referenced by this SSL configurations._This includes certificates used for identity (with a private key) and those used for trust, but excludes_certificates that are provided by the JRE._@see TrustConfig#certificates(Environment);List<CertificateInfo> getDefinedCertificates(@Nullable Environment environment) throws GeneralSecurityException, IOException {_        List<CertificateInfo> certificates = new ArrayList<>()__        certificates.addAll(keyConfig.certificates(environment))__        certificates.addAll(trustConfig.certificates(environment))__        return certificates__    };returns,information,about,each,certificate,that,referenced,by,this,ssl,configurations,this,includes,certificates,used,for,identity,with,a,private,key,and,those,used,for,trust,but,excludes,certificates,that,are,provided,by,the,jre,see,trust,config,certificates,environment;list,certificate,info,get,defined,certificates,nullable,environment,environment,throws,general,security,exception,ioexception,list,certificate,info,certificates,new,array,list,certificates,add,all,key,config,certificates,environment,certificates,add,all,trust,config,certificates,environment,return,certificates
SSLConfiguration -> List<CertificateInfo> getDefinedCertificates(@Nullable Environment environment) throws GeneralSecurityException, IOException;1531179852;Returns information about each certificate that referenced by this SSL configurations._This includes certificates used for identity (with a private key) and those used for trust, but excludes_certificates that are provided by the JRE._@see TrustConfig#certificates(Environment);List<CertificateInfo> getDefinedCertificates(@Nullable Environment environment) throws GeneralSecurityException, IOException {_        List<CertificateInfo> certificates = new ArrayList<>()__        certificates.addAll(keyConfig.certificates(environment))__        certificates.addAll(trustConfig.certificates(environment))__        return certificates__    };returns,information,about,each,certificate,that,referenced,by,this,ssl,configurations,this,includes,certificates,used,for,identity,with,a,private,key,and,those,used,for,trust,but,excludes,certificates,that,are,provided,by,the,jre,see,trust,config,certificates,environment;list,certificate,info,get,defined,certificates,nullable,environment,environment,throws,general,security,exception,ioexception,list,certificate,info,certificates,new,array,list,certificates,add,all,key,config,certificates,environment,certificates,add,all,trust,config,certificates,environment,return,certificates
SSLConfiguration -> List<CertificateInfo> getDefinedCertificates(@Nullable Environment environment) throws GeneralSecurityException, IOException;1536611444;Returns information about each certificate that referenced by this SSL configurations._This includes certificates used for identity (with a private key) and those used for trust, but excludes_certificates that are provided by the JRE._@see TrustConfig#certificates(Environment);List<CertificateInfo> getDefinedCertificates(@Nullable Environment environment) throws GeneralSecurityException, IOException {_        List<CertificateInfo> certificates = new ArrayList<>()__        certificates.addAll(keyConfig.certificates(environment))__        certificates.addAll(trustConfig.certificates(environment))__        return certificates__    };returns,information,about,each,certificate,that,referenced,by,this,ssl,configurations,this,includes,certificates,used,for,identity,with,a,private,key,and,those,used,for,trust,but,excludes,certificates,that,are,provided,by,the,jre,see,trust,config,certificates,environment;list,certificate,info,get,defined,certificates,nullable,environment,environment,throws,general,security,exception,ioexception,list,certificate,info,certificates,new,array,list,certificates,add,all,key,config,certificates,environment,certificates,add,all,trust,config,certificates,environment,return,certificates
SSLConfiguration -> List<CertificateInfo> getDefinedCertificates(@Nullable Environment environment) throws GeneralSecurityException, IOException;1538170812;Returns information about each certificate that referenced by this SSL configurations._This includes certificates used for identity (with a private key) and those used for trust, but excludes_certificates that are provided by the JRE._@see TrustConfig#certificates(Environment);List<CertificateInfo> getDefinedCertificates(@Nullable Environment environment) throws GeneralSecurityException, IOException {_        List<CertificateInfo> certificates = new ArrayList<>()__        certificates.addAll(keyConfig.certificates(environment))__        certificates.addAll(trustConfig.certificates(environment))__        return certificates__    };returns,information,about,each,certificate,that,referenced,by,this,ssl,configurations,this,includes,certificates,used,for,identity,with,a,private,key,and,those,used,for,trust,but,excludes,certificates,that,are,provided,by,the,jre,see,trust,config,certificates,environment;list,certificate,info,get,defined,certificates,nullable,environment,environment,throws,general,security,exception,ioexception,list,certificate,info,certificates,new,array,list,certificates,add,all,key,config,certificates,environment,certificates,add,all,trust,config,certificates,environment,return,certificates
SSLConfiguration -> List<CertificateInfo> getDefinedCertificates(@Nullable Environment environment) throws GeneralSecurityException, IOException;1539615817;Returns information about each certificate that referenced by this SSL configurations._This includes certificates used for identity (with a private key) and those used for trust, but excludes_certificates that are provided by the JRE._@see TrustConfig#certificates(Environment);List<CertificateInfo> getDefinedCertificates(@Nullable Environment environment) throws GeneralSecurityException, IOException {_        List<CertificateInfo> certificates = new ArrayList<>()__        certificates.addAll(keyConfig.certificates(environment))__        certificates.addAll(trustConfig.certificates(environment))__        return certificates__    };returns,information,about,each,certificate,that,referenced,by,this,ssl,configurations,this,includes,certificates,used,for,identity,with,a,private,key,and,those,used,for,trust,but,excludes,certificates,that,are,provided,by,the,jre,see,trust,config,certificates,environment;list,certificate,info,get,defined,certificates,nullable,environment,environment,throws,general,security,exception,ioexception,list,certificate,info,certificates,new,array,list,certificates,add,all,key,config,certificates,environment,certificates,add,all,trust,config,certificates,environment,return,certificates
SSLConfiguration -> List<CertificateInfo> getDefinedCertificates(@Nullable Environment environment) throws GeneralSecurityException, IOException;1547499982;Returns information about each certificate that referenced by this SSL configurations._This includes certificates used for identity (with a private key) and those used for trust, but excludes_certificates that are provided by the JRE._@see TrustConfig#certificates(Environment);List<CertificateInfo> getDefinedCertificates(@Nullable Environment environment) throws GeneralSecurityException, IOException {_        List<CertificateInfo> certificates = new ArrayList<>()__        certificates.addAll(keyConfig.certificates(environment))__        certificates.addAll(trustConfig.certificates(environment))__        return certificates__    };returns,information,about,each,certificate,that,referenced,by,this,ssl,configurations,this,includes,certificates,used,for,identity,with,a,private,key,and,those,used,for,trust,but,excludes,certificates,that,are,provided,by,the,jre,see,trust,config,certificates,environment;list,certificate,info,get,defined,certificates,nullable,environment,environment,throws,general,security,exception,ioexception,list,certificate,info,certificates,new,array,list,certificates,add,all,key,config,certificates,environment,certificates,add,all,trust,config,certificates,environment,return,certificates
