commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public AcknowledgedResponse newResponse() {     return new AcknowledgedResponse(). }
false;public,static;1;4;;public static Request parseRequest(XContentParser parser) {     Detector detector = Detector.STRICT_PARSER.apply(parser, null).build().     return new Request(detector). }
false;public;0;3;;public Detector getDetector() {     return detector. }
false;public;0;4;;@Override public ActionRequestValidationException validate() {     return null. }
false;public;1;5;;@Override public void writeTo(StreamOutput out) throws IOException {     super.writeTo(out).     detector.writeTo(out). }
false;public;1;5;;@Override public void readFrom(StreamInput in) throws IOException {     super.readFrom(in).     detector = new Detector(in). }
false;public;2;5;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     detector.toXContent(builder, params).     return builder. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(detector). }
false;public;1;11;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     }     if (getClass() != obj.getClass()) {         return false.     }     Request other = (Request) obj.     return Objects.equals(detector, other.detector). }
