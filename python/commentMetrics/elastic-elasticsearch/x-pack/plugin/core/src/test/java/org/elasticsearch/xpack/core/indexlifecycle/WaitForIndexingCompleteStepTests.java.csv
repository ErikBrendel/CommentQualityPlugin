commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;@Override protected WaitForIndexingCompleteStep createRandomInstance() {     StepKey stepKey = randomStepKey().     StepKey nextStepKey = randomStepKey().     return new WaitForIndexingCompleteStep(stepKey, nextStepKey). }
false;protected;1;13;;@Override protected WaitForIndexingCompleteStep mutateInstance(WaitForIndexingCompleteStep instance) {     StepKey key = instance.getKey().     StepKey nextKey = instance.getNextStepKey().     if (randomBoolean()) {         key = new StepKey(key.getPhase(), key.getAction(), key.getName() + randomAlphaOfLength(5)).     } else {         nextKey = new StepKey(key.getPhase(), key.getAction(), key.getName() + randomAlphaOfLength(5)).     }     return new WaitForIndexingCompleteStep(key, nextKey). }
false;protected;1;4;;@Override protected WaitForIndexingCompleteStep copyInstance(WaitForIndexingCompleteStep instance) {     return new WaitForIndexingCompleteStep(instance.getKey(), instance.getNextStepKey()). }
false;public;0;17;;public void testConditionMet() {     IndexMetaData indexMetadata = IndexMetaData.builder("follower-index").settings(settings(Version.CURRENT).put(LifecycleSettings.LIFECYCLE_INDEXING_COMPLETE, "true")).putCustom(CCR_METADATA_KEY, Collections.emptyMap()).numberOfShards(1).numberOfReplicas(0).build().     ClusterState clusterState = ClusterState.builder(new ClusterName("cluster")).metaData(MetaData.builder().put(indexMetadata, true).build()).build().     WaitForIndexingCompleteStep step = createRandomInstance().     ClusterStateWaitStep.Result result = step.isConditionMet(indexMetadata.getIndex(), clusterState).     assertThat(result.isComplete(), is(true)).     assertThat(result.getInfomationContext(), nullValue()). }
false;public;0;16;;public void testConditionMetNotAFollowerIndex() {     IndexMetaData indexMetadata = IndexMetaData.builder("follower-index").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(0).build().     ClusterState clusterState = ClusterState.builder(new ClusterName("cluster")).metaData(MetaData.builder().put(indexMetadata, true).build()).build().     WaitForIndexingCompleteStep step = createRandomInstance().     ClusterStateWaitStep.Result result = step.isConditionMet(indexMetadata.getIndex(), clusterState).     assertThat(result.isComplete(), is(true)).     assertThat(result.getInfomationContext(), nullValue()). }
false;public;0;25;;public void testConditionNotMet() {     Settings.Builder indexSettings = settings(Version.CURRENT).     if (randomBoolean()) {         indexSettings.put(LifecycleSettings.LIFECYCLE_INDEXING_COMPLETE, "false").     }     IndexMetaData indexMetadata = IndexMetaData.builder("follower-index").settings(indexSettings).putCustom(CCR_METADATA_KEY, Collections.emptyMap()).numberOfShards(1).numberOfReplicas(0).build().     ClusterState clusterState = ClusterState.builder(new ClusterName("cluster")).metaData(MetaData.builder().put(indexMetadata, true).build()).build().     WaitForIndexingCompleteStep step = createRandomInstance().     ClusterStateWaitStep.Result result = step.isConditionMet(indexMetadata.getIndex(), clusterState).     assertThat(result.isComplete(), is(false)).     assertThat(result.getInfomationContext(), notNullValue()).     WaitForIndexingCompleteStep.IndexingNotCompleteInfo info = (WaitForIndexingCompleteStep.IndexingNotCompleteInfo) result.getInfomationContext().     assertThat(info.getMessage(), equalTo("waiting for the [index.lifecycle.indexing_complete] setting to be set to " + "true on the leader index, it is currently [false]")). }
false;public;0;10;;public void testIndexDeleted() {     ClusterState clusterState = ClusterState.builder(new ClusterName("cluster")).metaData(MetaData.builder().build()).build().     WaitForIndexingCompleteStep step = createRandomInstance().     ClusterStateWaitStep.Result result = step.isConditionMet(new Index("this-index-doesnt-exist", "uuid"), clusterState).     assertThat(result.isComplete(), is(false)).     assertThat(result.getInfomationContext(), nullValue()). }
