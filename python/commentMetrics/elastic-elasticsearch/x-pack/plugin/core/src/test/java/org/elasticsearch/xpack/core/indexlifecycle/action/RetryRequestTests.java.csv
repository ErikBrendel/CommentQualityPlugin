commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;13;;@Override protected Request createTestInstance() {     Request request = new Request().     if (randomBoolean()) {         request.indices(generateRandomStringArray(20, 20, false)).     }     if (randomBoolean()) {         IndicesOptions indicesOptions = IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean()).         request.indicesOptions(indicesOptions).     }     return request. }
false;protected;1;21;;@Override protected Request mutateInstance(Request instance) throws IOException {     String[] indices = instance.indices().     IndicesOptions indicesOptions = instance.indicesOptions().     switch(between(0, 1)) {         case 0:             indices = randomValueOtherThanMany(i -> Arrays.equals(i, instance.indices()), () -> generateRandomStringArray(20, 10, false, true)).             break.         case 1:             indicesOptions = randomValueOtherThan(indicesOptions, () -> IndicesOptions.fromOptions(randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean(), randomBoolean())).             break.         default:             throw new AssertionError("Illegal randomisation branch").     }     Request newRequest = new Request().     newRequest.indices(indices).     newRequest.indicesOptions(indicesOptions).     return newRequest. }
false;protected;0;4;;@Override protected Request createBlankInstance() {     return new Request(). }
