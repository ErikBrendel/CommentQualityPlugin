commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;public void testSerialization() throws Exception {     final ConditionalClusterPrivilege[] original = buildSecurityPrivileges().     try (BytesStreamOutput out = new BytesStreamOutput()) {         ConditionalClusterPrivileges.writeArray(out, original).         final NamedWriteableRegistry registry = new NamedWriteableRegistry(new XPackClientPlugin(Settings.EMPTY).getNamedWriteables()).         try (StreamInput in = new NamedWriteableAwareStreamInput(out.bytes().streamInput(), registry)) {             final ConditionalClusterPrivilege[] copy = ConditionalClusterPrivileges.readArray(in).             assertThat(copy, equalTo(original)).             assertThat(original, equalTo(copy)).         }     } }
false;public;0;18;;public void testGenerateAndParseXContent() throws Exception {     final XContent xContent = randomFrom(XContentType.values()).xContent().     try (ByteArrayOutputStream out = new ByteArrayOutputStream()) {         final XContentBuilder builder = new XContentBuilder(xContent, out).         final List<ConditionalClusterPrivilege> original = Arrays.asList(buildSecurityPrivileges()).         ConditionalClusterPrivileges.toXContent(builder, ToXContent.EMPTY_PARAMS, original).         builder.flush().         final byte[] bytes = out.toByteArray().         try (XContentParser parser = xContent.createParser(NamedXContentRegistry.EMPTY, THROW_UNSUPPORTED_OPERATION, bytes)) {             assertThat(parser.nextToken(), equalTo(XContentParser.Token.START_OBJECT)).             final List<ConditionalClusterPrivilege> clone = ConditionalClusterPrivileges.parse(parser).             assertThat(clone, equalTo(original)).             assertThat(original, equalTo(clone)).         }     } }
false;private;0;3;;private ConditionalClusterPrivilege[] buildSecurityPrivileges() {     return buildSecurityPrivileges(randomIntBetween(4, 7)). }
false;private;1;5;;private ConditionalClusterPrivilege[] buildSecurityPrivileges(int applicationNameLength) {     return new ConditionalClusterPrivilege[] { ManageApplicationPrivilegesTests.buildPrivileges(applicationNameLength) }. }
