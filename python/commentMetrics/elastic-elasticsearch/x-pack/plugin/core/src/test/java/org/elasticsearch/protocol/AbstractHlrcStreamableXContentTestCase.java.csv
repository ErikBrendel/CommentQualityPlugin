commented;modifiers;parameterAmount;loc;comment;code
true;public,final;0;11;/**  * Generic test that creates new instance of HLRC request/response from the test instance and checks  * both for equality and asserts equality on the two queries.  */ ;/**  * Generic test that creates new instance of HLRC request/response from the test instance and checks  * both for equality and asserts equality on the two queries.  */ public final void testHlrcFromXContent() throws IOException {     xContentTester(this::createParser, this::createTestInstance, getToXContentParams(), p -> convertHlrcToInternal(doHlrcParseInstance(p))).numberOfTestRuns(NUMBER_OF_TEST_RUNS).supportsUnknownFields(supportsUnknownFields()).shuffleFieldsExceptions(getShuffleFieldsExceptions()).randomFieldsExcludeFilter(getRandomFieldsExcludeFilter()).assertEqualsConsumer(this::assertEqualInstances).assertToXContentEquivalence(true).test(). }
true;public,abstract;1;1;/**  * Parses to a new HLRC instance using the provided {@link XContentParser}  */ ;/**  * Parses to a new HLRC instance using the provided {@link XContentParser}  */ public abstract H doHlrcParseInstance(XContentParser parser) throws IOException.
true;public,abstract;1;1;/**  * Converts a HLRC instance to a XPack instance  */ ;/**  * Converts a HLRC instance to a XPack instance  */ public abstract T convertHlrcToInternal(H instance).
true;protected;1;4;// are only there for testing and could go away? Then the additional testHlrcFromXContent is also no longer needed. ;// TODO this would be final ideally: why do both responses need to parse from xcontent, only one (H) should? I think that T#fromXContent // are only there for testing and could go away? Then the additional testHlrcFromXContent is also no longer needed. @Override protected T doParseInstance(XContentParser parser) throws IOException {     return convertHlrcToInternal(doHlrcParseInstance(parser)). }
