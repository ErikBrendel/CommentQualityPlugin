commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Override public InitializePolicyContextStep createRandomInstance() {     StepKey stepKey = randomStepKey().     StepKey nextStepKey = randomStepKey().     return new InitializePolicyContextStep(stepKey, nextStepKey). }
false;public;1;18;;@Override public InitializePolicyContextStep mutateInstance(InitializePolicyContextStep instance) {     StepKey key = instance.getKey().     StepKey nextKey = instance.getNextStepKey().     switch(between(0, 1)) {         case 0:             key = new StepKey(key.getPhase(), key.getAction(), key.getName() + randomAlphaOfLength(5)).             break.         case 1:             nextKey = new StepKey(key.getPhase(), key.getAction(), key.getName() + randomAlphaOfLength(5)).             break.         default:             throw new AssertionError("Illegal randomisation branch").     }     return new InitializePolicyContextStep(key, nextKey). }
false;public;1;4;;@Override public InitializePolicyContextStep copyInstance(InitializePolicyContextStep instance) {     return new InitializePolicyContextStep(instance.getKey(), instance.getNextStepKey()). }
false;public;0;16;;public void testAddCreationDate() {     long creationDate = randomNonNegativeLong().     IndexMetaData indexMetadata = IndexMetaData.builder(randomAlphaOfLength(5)).settings(settings(Version.CURRENT)).creationDate(creationDate).numberOfShards(1).numberOfReplicas(0).build().     MetaData metaData = MetaData.builder().persistentSettings(settings(Version.CURRENT).build()).put(IndexMetaData.builder(indexMetadata)).build().     Index index = indexMetadata.getIndex().     ClusterState clusterState = ClusterState.builder(ClusterName.DEFAULT).metaData(metaData).build().     InitializePolicyContextStep step = new InitializePolicyContextStep(null, null).     ClusterState newState = step.performAction(index, clusterState).     assertThat(getIndexLifecycleDate(index, newState), equalTo(creationDate)). }
false;public;0;19;;public void testDoNothing() {     long creationDate = randomNonNegativeLong().     LifecycleExecutionState.Builder lifecycleState = LifecycleExecutionState.builder().     lifecycleState.setIndexCreationDate(creationDate).     IndexMetaData indexMetadata = IndexMetaData.builder(randomAlphaOfLength(5)).settings(settings(Version.CURRENT)).putCustom(ILM_CUSTOM_METADATA_KEY, lifecycleState.build().asMap()).creationDate(creationDate).numberOfShards(1).numberOfReplicas(0).build().     MetaData metaData = MetaData.builder().persistentSettings(settings(Version.CURRENT).build()).put(IndexMetaData.builder(indexMetadata)).build().     Index index = indexMetadata.getIndex().     ClusterState clusterState = ClusterState.builder(ClusterName.DEFAULT).metaData(metaData).build().     InitializePolicyContextStep step = new InitializePolicyContextStep(null, null).     ClusterState newState = step.performAction(index, clusterState).     assertTrue(newState == clusterState). }
false;private;2;3;;private long getIndexLifecycleDate(Index index, ClusterState clusterState) {     return LifecycleExecutionState.fromIndexMetadata(clusterState.getMetaData().index(index)).getLifecycleDate(). }
