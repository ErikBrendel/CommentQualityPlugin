commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected NodesDeprecationCheckResponse createBlankInstance() {     return new NodesDeprecationCheckResponse(). }
false;protected;0;10;;@Override protected NodesDeprecationCheckResponse createTestInstance() {     List<NodesDeprecationCheckAction.NodeResponse> responses = Arrays.asList(randomArray(1, 10, NodesDeprecationCheckAction.NodeResponse[]::new, NodesDeprecationCheckResponseTests::randomNodeResponse)).     return new NodesDeprecationCheckResponse(new ClusterName(randomAlphaOfLength(10)), responses, Collections.emptyList()). }
false;protected;1;21;;@Override protected NodesDeprecationCheckResponse mutateInstance(NodesDeprecationCheckResponse instance) throws IOException {     int mutate = randomIntBetween(1, 3).     switch(mutate) {         case 1:             List<NodesDeprecationCheckAction.NodeResponse> responses = new ArrayList<>(instance.getNodes()).             responses.add(randomNodeResponse()).             return new NodesDeprecationCheckResponse(instance.getClusterName(), responses, instance.failures()).         case 2:             ArrayList<FailedNodeException> failures = new ArrayList<>(instance.failures()).             failures.add(new FailedNodeException("test node", "test failure", new RuntimeException(randomAlphaOfLength(10)))).             return new NodesDeprecationCheckResponse(instance.getClusterName(), instance.getNodes(), failures).         case 3:             String clusterName = randomValueOtherThan(instance.getClusterName().value(), () -> randomAlphaOfLengthBetween(5, 15)).             return new NodesDeprecationCheckResponse(new ClusterName(clusterName), instance.getNodes(), instance.failures()).         default:             fail("invalid mutation").     }     return super.mutateInstance(instance). }
false;private,static;0;8;;private static DiscoveryNode randomDiscoveryNode() throws Exception {     InetAddress inetAddress = InetAddress.getByAddress(randomAlphaOfLength(5), new byte[] { (byte) 192, (byte) 168, (byte) 0, (byte) 1 }).     TransportAddress transportAddress = new TransportAddress(inetAddress, randomIntBetween(0, 65535)).     return new DiscoveryNode(randomAlphaOfLength(5), randomAlphaOfLength(5), transportAddress, Collections.emptyMap(), Collections.emptySet(), Version.CURRENT). }
false;private,static;0;11;;private static NodesDeprecationCheckAction.NodeResponse randomNodeResponse() {     DiscoveryNode node.     try {         node = randomDiscoveryNode().     } catch (Exception e) {         throw new RuntimeException(e).     }     List<DeprecationIssue> issuesList = Arrays.asList(randomArray(0, 10, DeprecationIssue[]::new, DeprecationIssueTests::createTestInstance)).     return new NodesDeprecationCheckAction.NodeResponse(node, issuesList). }
