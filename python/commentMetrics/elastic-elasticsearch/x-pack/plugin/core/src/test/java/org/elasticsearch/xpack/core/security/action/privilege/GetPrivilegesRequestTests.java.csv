commented;modifiers;parameterAmount;loc;comment;code
false;public;0;16;;public void testSerialization() throws IOException {     final GetPrivilegesRequest original = new GetPrivilegesRequest().     if (randomBoolean()) {         original.application(randomAlphaOfLengthBetween(3, 8)).     }     original.privileges(generateRandomStringArray(3, 5, false, true)).     final BytesStreamOutput out = new BytesStreamOutput().     original.writeTo(out).     final GetPrivilegesRequest copy = new GetPrivilegesRequest().     copy.readFrom(out.bytes().streamInput()).     assertThat(original.application(), Matchers.equalTo(copy.application())).     assertThat(original.privileges(), Matchers.equalTo(copy.privileges())). }
false;public;0;11;;public void testValidation() {     assertThat(request(null).validate(), nullValue()).     assertThat(request(null, "all").validate(), nullValue()).     assertThat(request(null, "read", "write").validate(), nullValue()).     assertThat(request("my_app").validate(), nullValue()).     assertThat(request("my_app", "all").validate(), nullValue()).     assertThat(request("my_app", "read", "write").validate(), nullValue()).     final ActionRequestValidationException exception = request("my_app", ((String[]) null)).validate().     assertThat(exception, notNullValue()).     assertThat(exception.validationErrors(), containsInAnyOrder("privileges cannot be null")). }
false;private;2;6;;private GetPrivilegesRequest request(String application, String... privileges) {     final GetPrivilegesRequest request = new GetPrivilegesRequest().     request.application(application).     request.privileges(privileges).     return request. }
