commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void setup() {     index = randomAlphaOfLength(5). }
false;protected;0;4;;@Override protected Request createTestInstance() {     return new Request(index, stepKeyTests.createTestInstance(), stepKeyTests.createTestInstance()). }
false;protected;0;4;;@Override protected Request createBlankInstance() {     return new Request(). }
false;protected;1;4;;@Override protected Request doParseInstance(XContentParser parser) {     return Request.parseRequest(index, parser). }
false;protected;0;4;;@Override protected boolean supportsUnknownFields() {     return false. }
false;protected;1;22;;@Override protected Request mutateInstance(Request request) {     String index = request.getIndex().     StepKey currentStepKey = request.getCurrentStepKey().     StepKey nextStepKey = request.getNextStepKey().     switch(between(0, 2)) {         case 0:             index += randomAlphaOfLength(5).             break.         case 1:             currentStepKey = stepKeyTests.mutateInstance(currentStepKey).             break.         case 2:             nextStepKey = stepKeyTests.mutateInstance(nextStepKey).             break.         default:             throw new AssertionError("Illegal randomisation branch").     }     return new Request(index, currentStepKey, nextStepKey). }
