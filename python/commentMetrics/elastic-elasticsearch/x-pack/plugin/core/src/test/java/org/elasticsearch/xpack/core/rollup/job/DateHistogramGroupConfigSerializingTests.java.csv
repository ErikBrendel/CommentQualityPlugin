# id;timestamp;commentText;codeText;commentWords;codeWords
DateHistogramGroupConfigSerializingTests -> public void testBwcSerialization() throws IOException;1533319589;Tests that a DateHistogramGroupConfig can be serialized/deserialized correctly after_the timezone was changed from DateTimeZone to String.;public void testBwcSerialization() throws IOException {_        for (int runs = 0_ runs < NUMBER_OF_TEST_RUNS_ runs++) {_            final DateHistogramGroupConfig reference = ConfigTestHelpers.randomDateHistogramGroupConfig(random())___            final BytesStreamOutput out = new BytesStreamOutput()__            reference.writeTo(out)___            _            final StreamInput in = out.bytes().streamInput()__            DateHistogramInterval interval = new DateHistogramInterval(in)__            String field = in.readString()__            DateHistogramInterval delay = in.readOptionalWriteable(DateHistogramInterval::new)__            DateTimeZone timeZone = in.readTimeZone()___            assertEqualInstances(reference, new DateHistogramGroupConfig(field, interval, delay, timeZone.getID()))__        }__        for (int runs = 0_ runs < NUMBER_OF_TEST_RUNS_ runs++) {_            final String field = ConfigTestHelpers.randomField(random())__            final DateHistogramInterval interval = ConfigTestHelpers.randomInterval()__            final DateHistogramInterval delay = randomBoolean() ? ConfigTestHelpers.randomInterval() : null__            final DateTimeZone timezone = randomDateTimeZone()___            _            final BytesStreamOutput out = new BytesStreamOutput()__            interval.writeTo(out)__            out.writeString(field)__            out.writeOptionalWriteable(delay)__            out.writeTimeZone(timezone)___            final StreamInput in = out.bytes().streamInput()__            DateHistogramGroupConfig deserialized = new DateHistogramGroupConfig(in)___            assertEqualInstances(new DateHistogramGroupConfig(field, interval, delay, timezone.getID()), deserialized)__        }_    };tests,that,a,date,histogram,group,config,can,be,serialized,deserialized,correctly,after,the,timezone,was,changed,from,date,time,zone,to,string;public,void,test,bwc,serialization,throws,ioexception,for,int,runs,0,runs,runs,final,date,histogram,group,config,reference,config,test,helpers,random,date,histogram,group,config,random,final,bytes,stream,output,out,new,bytes,stream,output,reference,write,to,out,final,stream,input,in,out,bytes,stream,input,date,histogram,interval,interval,new,date,histogram,interval,in,string,field,in,read,string,date,histogram,interval,delay,in,read,optional,writeable,date,histogram,interval,new,date,time,zone,time,zone,in,read,time,zone,assert,equal,instances,reference,new,date,histogram,group,config,field,interval,delay,time,zone,get,id,for,int,runs,0,runs,runs,final,string,field,config,test,helpers,random,field,random,final,date,histogram,interval,interval,config,test,helpers,random,interval,final,date,histogram,interval,delay,random,boolean,config,test,helpers,random,interval,null,final,date,time,zone,timezone,random,date,time,zone,final,bytes,stream,output,out,new,bytes,stream,output,interval,write,to,out,out,write,string,field,out,write,optional,writeable,delay,out,write,time,zone,timezone,final,stream,input,in,out,bytes,stream,input,date,histogram,group,config,deserialized,new,date,histogram,group,config,in,assert,equal,instances,new,date,histogram,group,config,field,interval,delay,timezone,get,id,deserialized
DateHistogramGroupConfigSerializingTests -> public void testBwcSerialization() throws IOException;1536053689;Tests that a DateHistogramGroupConfig can be serialized/deserialized correctly after_the timezone was changed from DateTimeZone to String.;public void testBwcSerialization() throws IOException {_        for (int runs = 0_ runs < NUMBER_OF_TEST_RUNS_ runs++) {_            final DateHistogramGroupConfig reference = ConfigTestHelpers.randomDateHistogramGroupConfig(random())___            final BytesStreamOutput out = new BytesStreamOutput()__            reference.writeTo(out)___            _            final StreamInput in = out.bytes().streamInput()__            DateHistogramInterval interval = new DateHistogramInterval(in)__            String field = in.readString()__            DateHistogramInterval delay = in.readOptionalWriteable(DateHistogramInterval::new)__            DateTimeZone timeZone = in.readTimeZone()___            assertEqualInstances(reference, new DateHistogramGroupConfig(field, interval, delay, timeZone.getID()))__        }__        for (int runs = 0_ runs < NUMBER_OF_TEST_RUNS_ runs++) {_            final String field = ConfigTestHelpers.randomField(random())__            final DateHistogramInterval interval = ConfigTestHelpers.randomInterval()__            final DateHistogramInterval delay = randomBoolean() ? ConfigTestHelpers.randomInterval() : null__            final DateTimeZone timezone = randomDateTimeZone()___            _            final BytesStreamOutput out = new BytesStreamOutput()__            interval.writeTo(out)__            out.writeString(field)__            out.writeOptionalWriteable(delay)__            out.writeTimeZone(timezone)___            final StreamInput in = out.bytes().streamInput()__            DateHistogramGroupConfig deserialized = new DateHistogramGroupConfig(in)___            assertEqualInstances(new DateHistogramGroupConfig(field, interval, delay, timezone.getID()), deserialized)__        }_    };tests,that,a,date,histogram,group,config,can,be,serialized,deserialized,correctly,after,the,timezone,was,changed,from,date,time,zone,to,string;public,void,test,bwc,serialization,throws,ioexception,for,int,runs,0,runs,runs,final,date,histogram,group,config,reference,config,test,helpers,random,date,histogram,group,config,random,final,bytes,stream,output,out,new,bytes,stream,output,reference,write,to,out,final,stream,input,in,out,bytes,stream,input,date,histogram,interval,interval,new,date,histogram,interval,in,string,field,in,read,string,date,histogram,interval,delay,in,read,optional,writeable,date,histogram,interval,new,date,time,zone,time,zone,in,read,time,zone,assert,equal,instances,reference,new,date,histogram,group,config,field,interval,delay,time,zone,get,id,for,int,runs,0,runs,runs,final,string,field,config,test,helpers,random,field,random,final,date,histogram,interval,interval,config,test,helpers,random,interval,final,date,histogram,interval,delay,random,boolean,config,test,helpers,random,interval,null,final,date,time,zone,timezone,random,date,time,zone,final,bytes,stream,output,out,new,bytes,stream,output,interval,write,to,out,out,write,string,field,out,write,optional,writeable,delay,out,write,time,zone,timezone,final,stream,input,in,out,bytes,stream,input,date,histogram,group,config,deserialized,new,date,histogram,group,config,in,assert,equal,instances,new,date,histogram,group,config,field,interval,delay,timezone,get,id,deserialized
DateHistogramGroupConfigSerializingTests -> public void testBwcSerialization() throws IOException;1548236405;Tests that a DateHistogramGroupConfig can be serialized/deserialized correctly after_the timezone was changed from DateTimeZone to String.;public void testBwcSerialization() throws IOException {_        for (int runs = 0_ runs < NUMBER_OF_TEST_RUNS_ runs++) {_            final DateHistogramGroupConfig reference = ConfigTestHelpers.randomDateHistogramGroupConfig(random())___            final BytesStreamOutput out = new BytesStreamOutput()__            reference.writeTo(out)___            _            final StreamInput in = out.bytes().streamInput()__            DateHistogramInterval interval = new DateHistogramInterval(in)__            String field = in.readString()__            DateHistogramInterval delay = in.readOptionalWriteable(DateHistogramInterval::new)__            ZoneId timeZone = in.readZoneId()___            assertEqualInstances(reference, new DateHistogramGroupConfig(field, interval, delay, timeZone.getId()))__        }__        for (int runs = 0_ runs < NUMBER_OF_TEST_RUNS_ runs++) {_            final String field = ConfigTestHelpers.randomField(random())__            final DateHistogramInterval interval = ConfigTestHelpers.randomInterval()__            final DateHistogramInterval delay = randomBoolean() ? ConfigTestHelpers.randomInterval() : null__            final ZoneId timezone = randomZone()___            _            final BytesStreamOutput out = new BytesStreamOutput()__            interval.writeTo(out)__            out.writeString(field)__            out.writeOptionalWriteable(delay)__            out.writeZoneId(timezone)___            final StreamInput in = out.bytes().streamInput()__            DateHistogramGroupConfig deserialized = new DateHistogramGroupConfig(in)___            assertEqualInstances(new DateHistogramGroupConfig(field, interval, delay, timezone.getId()), deserialized)__        }_    };tests,that,a,date,histogram,group,config,can,be,serialized,deserialized,correctly,after,the,timezone,was,changed,from,date,time,zone,to,string;public,void,test,bwc,serialization,throws,ioexception,for,int,runs,0,runs,runs,final,date,histogram,group,config,reference,config,test,helpers,random,date,histogram,group,config,random,final,bytes,stream,output,out,new,bytes,stream,output,reference,write,to,out,final,stream,input,in,out,bytes,stream,input,date,histogram,interval,interval,new,date,histogram,interval,in,string,field,in,read,string,date,histogram,interval,delay,in,read,optional,writeable,date,histogram,interval,new,zone,id,time,zone,in,read,zone,id,assert,equal,instances,reference,new,date,histogram,group,config,field,interval,delay,time,zone,get,id,for,int,runs,0,runs,runs,final,string,field,config,test,helpers,random,field,random,final,date,histogram,interval,interval,config,test,helpers,random,interval,final,date,histogram,interval,delay,random,boolean,config,test,helpers,random,interval,null,final,zone,id,timezone,random,zone,final,bytes,stream,output,out,new,bytes,stream,output,interval,write,to,out,out,write,string,field,out,write,optional,writeable,delay,out,write,zone,id,timezone,final,stream,input,in,out,bytes,stream,input,date,histogram,group,config,deserialized,new,date,histogram,group,config,in,assert,equal,instances,new,date,histogram,group,config,field,interval,delay,timezone,get,id,deserialized
