commented;modifiers;parameterAmount;loc;comment;code
false;public;1;9;;public Influencer createTestInstance(String jobId) {     Influencer influencer = new Influencer(jobId, randomAlphaOfLengthBetween(1, 20), randomAlphaOfLengthBetween(1, 20), new Date(randomNonNegativeLong()), randomNonNegativeLong()).     influencer.setInterim(randomBoolean()).     influencer.setInfluencerScore(randomDouble()).     influencer.setInitialInfluencerScore(randomDouble()).     influencer.setProbability(randomDouble()).     return influencer. }
false;protected;0;4;;@Override protected Influencer createTestInstance() {     return createTestInstance(randomAlphaOfLengthBetween(1, 20)). }
false;protected;0;4;;@Override protected Reader<Influencer> instanceReader() {     return Influencer::new. }
false;protected;1;4;;@Override protected Influencer doParseInstance(XContentParser parser) {     return Influencer.LENIENT_PARSER.apply(parser, null). }
false;public;0;8;;public void testToXContentIncludesNameValueField() throws IOException {     Influencer influencer = createTestInstance("foo").     BytesReference bytes = XContentHelper.toXContent(influencer, XContentType.JSON, false).     XContentParser parser = createParser(XContentType.JSON.xContent(), bytes).     String serialisedFieldName = (String) parser.map().get(influencer.getInfluencerFieldName()).     assertNotNull(serialisedFieldName).     assertEquals(influencer.getInfluencerFieldValue(), serialisedFieldName). }
false;public;0;8;;public void testToXContentDoesNotIncludeNameValueFieldWhenReservedWord() throws IOException {     Influencer influencer = new Influencer("foo", Influencer.INFLUENCER_SCORE.getPreferredName(), "bar", new Date(), 300L).     BytesReference bytes = XContentHelper.toXContent(influencer, XContentType.JSON, false).     XContentParser parser = createParser(XContentType.JSON.xContent(), bytes).     Object serialisedFieldValue = parser.map().get(Influencer.INFLUENCER_SCORE.getPreferredName()).     assertNotNull(serialisedFieldValue).     assertNotEquals("bar", serialisedFieldValue). }
false;public;0;6;;public void testId() {     String influencerFieldValue = "wopr".     Influencer influencer = new Influencer("job-foo", "host", influencerFieldValue, new Date(1000), 300L).     int valueHash = Objects.hashCode(influencerFieldValue).     assertEquals("job-foo_influencer_1000_300_host_" + valueHash + "_" + influencerFieldValue.length(), influencer.getId()). }
false;public;0;7;;public void testLenientParser() throws IOException {     String json = "{\"job_id\":\"job_1\", \"timestamp\": 123544456, \"bucket_span\": 3600," + "\"influencer_field_name\":\"foo_1\", \"influencer_field_value\": \"foo_2\", \"foo\":\"bar\"}".     try (XContentParser parser = createParser(JsonXContent.jsonXContent, json)) {         Influencer.LENIENT_PARSER.apply(parser, null).     } }
