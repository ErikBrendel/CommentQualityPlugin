commented;modifiers;parameterAmount;loc;comment;code
false;public;0;20;;@Before public void registerAggregationNamedObjects() throws Exception {     // register aggregations as NamedWriteable     SearchModule searchModule = new SearchModule(Settings.EMPTY, false, emptyList()).     List<NamedWriteableRegistry.Entry> namedWriteables = searchModule.getNamedWriteables().     namedWriteables.add(new NamedWriteableRegistry.Entry(QueryBuilder.class, MockDeprecatedQueryBuilder.NAME, MockDeprecatedQueryBuilder::new)).     namedWriteables.add(new NamedWriteableRegistry.Entry(AggregationBuilder.class, MockDeprecatedAggregationBuilder.NAME, MockDeprecatedAggregationBuilder::new)).     List<NamedXContentRegistry.Entry> namedXContents = searchModule.getNamedXContents().     namedXContents.add(new NamedXContentRegistry.Entry(QueryBuilder.class, new ParseField(MockDeprecatedQueryBuilder.NAME), (p, c) -> MockDeprecatedQueryBuilder.fromXContent(p))).     namedXContents.add(new NamedXContentRegistry.Entry(BaseAggregationBuilder.class, new ParseField(MockDeprecatedAggregationBuilder.NAME), (p, c) -> MockDeprecatedAggregationBuilder.fromXContent(p))).     namedWriteableRegistry = new NamedWriteableRegistry(namedWriteables).     namedXContentRegistry = new NamedXContentRegistry(namedXContents). }
false;protected;0;4;;@Override protected NamedWriteableRegistry getNamedWriteableRegistry() {     return namedWriteableRegistry. }
false;protected;0;4;;@Override protected NamedXContentRegistry xContentRegistry() {     return namedXContentRegistry. }
