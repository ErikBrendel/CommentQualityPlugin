commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * @param name The name of header  * @return A list of values for this header  */ ;/**  * @param name The name of header  * @return A list of values for this header  */ public List<String> get(String name) {     return headers.get(name). }
true;;2;12;/**  * Adds a new header to this headers object  * @param name Name of the header  * @param value Value of the header  */ ;/**  * Adds a new header to this headers object  * @param name Name of the header  * @param value Value of the header  */ void add(String name, String value) {     this.headers.compute(name, (k, v) -> {         if (v == null) {             return Collections.singletonList(value).         } else {             List<String> list = new ArrayList<>().             list.addAll(v).             list.add(value).             return list.         }     }). }
true;;1;3;/**  * @param name Name of the header  * @return Returns the first header value or null if none exists  */ ;/**  * @param name Name of the header  * @return Returns the first header value or null if none exists  */ String getFirst(String name) {     return headers.getFirst(name). }
