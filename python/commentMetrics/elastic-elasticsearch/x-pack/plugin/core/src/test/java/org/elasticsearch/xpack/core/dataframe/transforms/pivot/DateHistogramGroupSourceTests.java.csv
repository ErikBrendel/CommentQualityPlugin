commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;17;;public static DateHistogramGroupSource randomDateHistogramGroupSource() {     String field = randomAlphaOfLengthBetween(1, 20).     DateHistogramGroupSource dateHistogramGroupSource = new DateHistogramGroupSource(field).     if (randomBoolean()) {         dateHistogramGroupSource.setInterval(randomLongBetween(1, 10_000)).     } else {         dateHistogramGroupSource.setDateHistogramInterval(randomFrom(DateHistogramInterval.days(10), DateHistogramInterval.minutes(1), DateHistogramInterval.weeks(1))).     }     if (randomBoolean()) {         dateHistogramGroupSource.setTimeZone(randomZone()).     }     if (randomBoolean()) {         dateHistogramGroupSource.setFormat(randomAlphaOfLength(10)).     }     return dateHistogramGroupSource. }
false;protected;1;4;;@Override protected DateHistogramGroupSource doParseInstance(XContentParser parser) throws IOException {     return DateHistogramGroupSource.fromXContent(parser, false). }
false;protected;0;4;;@Override protected DateHistogramGroupSource createTestInstance() {     return randomDateHistogramGroupSource(). }
false;protected;0;4;;@Override protected Reader<DateHistogramGroupSource> instanceReader() {     return DateHistogramGroupSource::new. }
