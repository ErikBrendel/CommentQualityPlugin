# id;timestamp;commentText;codeText;commentWords;codeWords
TestUtils -> public static License generateSignedLicense(String type, int version, long issueDate, TimeValue expiryDuration) throws Exception;1524684173;This method which chooses the license type randomly if the type is null. However, it will not randomly_choose trial or basic types as those types can only be self-generated.;public static License generateSignedLicense(String type, int version, long issueDate, TimeValue expiryDuration) throws Exception {_        long issue = (issueDate != -1L) ? issueDate : System.currentTimeMillis() - TimeValue.timeValueHours(2).getMillis()__        final String licenseType__        if (version < License.VERSION_NO_FEATURE_TYPE) {_            licenseType = randomFrom("subscription", "internal", "development")__        } else {_            licenseType = (type != null) ? type : randomFrom("silver", "dev", "gold", "platinum")__        }_        final License.Builder builder = License.builder()_                .uid(UUID.randomUUID().toString())_                .version(version)_                .expiryDate(System.currentTimeMillis() + expiryDuration.getMillis())_                .issueDate(issue)_                .type(licenseType)_                .issuedTo("customer")_                .issuer("elasticsearch")_                .maxNodes(5)__        if (version == License.VERSION_START) {_            builder.subscriptionType((type != null) ? type : randomFrom("dev", "gold", "platinum", "silver"))__            builder.feature(randomAlphaOfLength(10))__        }_        LicenseSigner signer = new LicenseSigner(getTestPriKeyPath(), getTestPubKeyPath())__        return signer.sign(builder.build())__    };this,method,which,chooses,the,license,type,randomly,if,the,type,is,null,however,it,will,not,randomly,choose,trial,or,basic,types,as,those,types,can,only,be,self,generated;public,static,license,generate,signed,license,string,type,int,version,long,issue,date,time,value,expiry,duration,throws,exception,long,issue,issue,date,1l,issue,date,system,current,time,millis,time,value,time,value,hours,2,get,millis,final,string,license,type,if,version,license,license,type,random,from,subscription,internal,development,else,license,type,type,null,type,random,from,silver,dev,gold,platinum,final,license,builder,builder,license,builder,uid,uuid,random,uuid,to,string,version,version,expiry,date,system,current,time,millis,expiry,duration,get,millis,issue,date,issue,type,license,type,issued,to,customer,issuer,elasticsearch,max,nodes,5,if,version,license,builder,subscription,type,type,null,type,random,from,dev,gold,platinum,silver,builder,feature,random,alpha,of,length,10,license,signer,signer,new,license,signer,get,test,pri,key,path,get,test,pub,key,path,return,signer,sign,builder,build
TestUtils -> public static License generateSignedLicense(String type, int version, long issueDate, TimeValue expiryDuration) throws Exception;1525334055;This method which chooses the license type randomly if the type is null. However, it will not randomly_choose trial or basic types as those types can only be self-generated.;public static License generateSignedLicense(String type, int version, long issueDate, TimeValue expiryDuration) throws Exception {_        long issue = (issueDate != -1L) ? issueDate : System.currentTimeMillis() - TimeValue.timeValueHours(2).getMillis()__        final String licenseType__        if (version < License.VERSION_NO_FEATURE_TYPE) {_            licenseType = randomFrom("subscription", "internal", "development")__        } else {_            licenseType = (type != null) ? type : randomFrom("silver", "dev", "gold", "platinum")__        }_        final License.Builder builder = License.builder()_                .uid(UUID.randomUUID().toString())_                .version(version)_                .expiryDate(System.currentTimeMillis() + expiryDuration.getMillis())_                .issueDate(issue)_                .type(licenseType)_                .issuedTo("customer")_                .issuer("elasticsearch")_                .maxNodes(5)__        if (version == License.VERSION_START) {_            builder.subscriptionType((type != null) ? type : randomFrom("dev", "gold", "platinum", "silver"))__            builder.feature(randomAlphaOfLength(10))__        }_        final LicenseSigner signer = new LicenseSigner(getTestPriKeyPath(), getTestPubKeyPath())__        return signer.sign(builder.build())__    };this,method,which,chooses,the,license,type,randomly,if,the,type,is,null,however,it,will,not,randomly,choose,trial,or,basic,types,as,those,types,can,only,be,self,generated;public,static,license,generate,signed,license,string,type,int,version,long,issue,date,time,value,expiry,duration,throws,exception,long,issue,issue,date,1l,issue,date,system,current,time,millis,time,value,time,value,hours,2,get,millis,final,string,license,type,if,version,license,license,type,random,from,subscription,internal,development,else,license,type,type,null,type,random,from,silver,dev,gold,platinum,final,license,builder,builder,license,builder,uid,uuid,random,uuid,to,string,version,version,expiry,date,system,current,time,millis,expiry,duration,get,millis,issue,date,issue,type,license,type,issued,to,customer,issuer,elasticsearch,max,nodes,5,if,version,license,builder,subscription,type,type,null,type,random,from,dev,gold,platinum,silver,builder,feature,random,alpha,of,length,10,final,license,signer,signer,new,license,signer,get,test,pri,key,path,get,test,pub,key,path,return,signer,sign,builder,build
TestUtils -> public static License generateSignedLicense(String type, int version, long issueDate, TimeValue expiryDuration) throws Exception;1532069817;This method which chooses the license type randomly if the type is null. However, it will not randomly_choose trial or basic types as those types can only be self-generated.;public static License generateSignedLicense(String type, int version, long issueDate, TimeValue expiryDuration) throws Exception {_        long issue = (issueDate != -1L) ? issueDate : System.currentTimeMillis() - TimeValue.timeValueHours(2).getMillis()__        final String licenseType__        if (version < License.VERSION_NO_FEATURE_TYPE) {_            licenseType = randomFrom("subscription", "internal", "development")__        } else {_            licenseType = (type != null) ? type : randomFrom("silver", "dev", "gold", "platinum")__        }_        final License.Builder builder = License.builder()_                .uid(UUID.randomUUID().toString())_                .version(version)_                .expiryDate(System.currentTimeMillis() + expiryDuration.getMillis())_                .issueDate(issue)_                .type(licenseType)_                .issuedTo("customer")_                .issuer("elasticsearch")_                .maxNodes(5)__        if (version == License.VERSION_START) {_            builder.subscriptionType((type != null) ? type : randomFrom("dev", "gold", "platinum", "silver"))__            builder.feature(randomAlphaOfLength(10))__        }_        final LicenseSigner signer = new LicenseSigner(getTestPriKeyPath(), getTestPubKeyPath())__        return signer.sign(builder.build())__    };this,method,which,chooses,the,license,type,randomly,if,the,type,is,null,however,it,will,not,randomly,choose,trial,or,basic,types,as,those,types,can,only,be,self,generated;public,static,license,generate,signed,license,string,type,int,version,long,issue,date,time,value,expiry,duration,throws,exception,long,issue,issue,date,1l,issue,date,system,current,time,millis,time,value,time,value,hours,2,get,millis,final,string,license,type,if,version,license,license,type,random,from,subscription,internal,development,else,license,type,type,null,type,random,from,silver,dev,gold,platinum,final,license,builder,builder,license,builder,uid,uuid,random,uuid,to,string,version,version,expiry,date,system,current,time,millis,expiry,duration,get,millis,issue,date,issue,type,license,type,issued,to,customer,issuer,elasticsearch,max,nodes,5,if,version,license,builder,subscription,type,type,null,type,random,from,dev,gold,platinum,silver,builder,feature,random,alpha,of,length,10,final,license,signer,signer,new,license,signer,get,test,pri,key,path,get,test,pub,key,path,return,signer,sign,builder,build
TestUtils -> public static License generateSignedLicense(String type, int version, long issueDate, TimeValue expiryDuration) throws Exception;1532456624;This method which chooses the license type randomly if the type is null. However, it will not randomly_choose trial or basic types as those types can only be self-generated.;public static License generateSignedLicense(String type, int version, long issueDate, TimeValue expiryDuration) throws Exception {_        long issue = (issueDate != -1L) ? issueDate : System.currentTimeMillis() - TimeValue.timeValueHours(2).getMillis()__        final String licenseType__        if (version < License.VERSION_NO_FEATURE_TYPE) {_            licenseType = randomFrom("subscription", "internal", "development")__        } else {_            licenseType = (type != null) ? type : randomFrom("silver", "dev", "gold", "platinum")__        }_        final License.Builder builder = License.builder()_                .uid(UUID.randomUUID().toString())_                .version(version)_                .expiryDate(System.currentTimeMillis() + expiryDuration.getMillis())_                .issueDate(issue)_                .type(licenseType)_                .issuedTo("customer")_                .issuer("elasticsearch")_                .maxNodes(5)__        if (version == License.VERSION_START) {_            builder.subscriptionType((type != null) ? type : randomFrom("dev", "gold", "platinum", "silver"))__            builder.feature(randomAlphaOfLength(10))__        }_        final LicenseSigner signer = new LicenseSigner(getTestPriKeyPath(), getTestPubKeyPath())__        return signer.sign(builder.build())__    };this,method,which,chooses,the,license,type,randomly,if,the,type,is,null,however,it,will,not,randomly,choose,trial,or,basic,types,as,those,types,can,only,be,self,generated;public,static,license,generate,signed,license,string,type,int,version,long,issue,date,time,value,expiry,duration,throws,exception,long,issue,issue,date,1l,issue,date,system,current,time,millis,time,value,time,value,hours,2,get,millis,final,string,license,type,if,version,license,license,type,random,from,subscription,internal,development,else,license,type,type,null,type,random,from,silver,dev,gold,platinum,final,license,builder,builder,license,builder,uid,uuid,random,uuid,to,string,version,version,expiry,date,system,current,time,millis,expiry,duration,get,millis,issue,date,issue,type,license,type,issued,to,customer,issuer,elasticsearch,max,nodes,5,if,version,license,builder,subscription,type,type,null,type,random,from,dev,gold,platinum,silver,builder,feature,random,alpha,of,length,10,final,license,signer,signer,new,license,signer,get,test,pri,key,path,get,test,pub,key,path,return,signer,sign,builder,build
TestUtils -> public static License generateSignedLicense(String type, int version, long issueDate, TimeValue expiryDuration) throws Exception;1538067637;This method which chooses the license type randomly if the type is null. However, it will not randomly_choose trial or basic types as those types can only be self-generated.;public static License generateSignedLicense(String type, int version, long issueDate, TimeValue expiryDuration) throws Exception {_        long issue = (issueDate != -1L) ? issueDate : System.currentTimeMillis() - TimeValue.timeValueHours(2).getMillis()__        final String licenseType__        if (version < License.VERSION_NO_FEATURE_TYPE) {_            licenseType = randomFrom("subscription", "internal", "development")__        } else {_            licenseType = (type != null) ? type : randomFrom("silver", "dev", "gold", "platinum")__        }_        final License.Builder builder = License.builder()_                .uid(UUID.randomUUID().toString())_                .version(version)_                .expiryDate(System.currentTimeMillis() + expiryDuration.getMillis())_                .issueDate(issue)_                .type(licenseType)_                .issuedTo("customer")_                .issuer("elasticsearch")_                .maxNodes(5)__        if (version == License.VERSION_START) {_            builder.subscriptionType((type != null) ? type : randomFrom("dev", "gold", "platinum", "silver"))__            builder.feature(randomAlphaOfLength(10))__        }_        final LicenseSigner signer = new LicenseSigner(getTestPriKeyPath(), getTestPubKeyPath())__        return signer.sign(builder.build())__    };this,method,which,chooses,the,license,type,randomly,if,the,type,is,null,however,it,will,not,randomly,choose,trial,or,basic,types,as,those,types,can,only,be,self,generated;public,static,license,generate,signed,license,string,type,int,version,long,issue,date,time,value,expiry,duration,throws,exception,long,issue,issue,date,1l,issue,date,system,current,time,millis,time,value,time,value,hours,2,get,millis,final,string,license,type,if,version,license,license,type,random,from,subscription,internal,development,else,license,type,type,null,type,random,from,silver,dev,gold,platinum,final,license,builder,builder,license,builder,uid,uuid,random,uuid,to,string,version,version,expiry,date,system,current,time,millis,expiry,duration,get,millis,issue,date,issue,type,license,type,issued,to,customer,issuer,elasticsearch,max,nodes,5,if,version,license,builder,subscription,type,type,null,type,random,from,dev,gold,platinum,silver,builder,feature,random,alpha,of,length,10,final,license,signer,signer,new,license,signer,get,test,pri,key,path,get,test,pub,key,path,return,signer,sign,builder,build
TestUtils -> public static License generateSignedLicense(String type, int version, long issueDate, TimeValue expiryDuration) throws Exception;1544232221;This method which chooses the license type randomly if the type is null. However, it will not randomly_choose trial or basic types as those types can only be self-generated.;public static License generateSignedLicense(String type, int version, long issueDate, TimeValue expiryDuration) throws Exception {_        long issue = (issueDate != -1L) ? issueDate : System.currentTimeMillis() - TimeValue.timeValueHours(2).getMillis()__        final String licenseType__        if (version < License.VERSION_NO_FEATURE_TYPE) {_            licenseType = randomFrom("subscription", "internal", "development")__        } else {_            licenseType = (type != null) ? type : randomFrom("silver", "dev", "gold", "platinum")__        }_        final License.Builder builder = License.builder()_                .uid(UUID.randomUUID().toString())_                .version(version)_                .expiryDate(System.currentTimeMillis() + expiryDuration.getMillis())_                .issueDate(issue)_                .type(licenseType)_                .issuedTo("customer")_                .issuer("elasticsearch")_                .maxNodes(5)__        if (version == License.VERSION_START) {_            builder.subscriptionType((type != null) ? type : randomFrom("dev", "gold", "platinum", "silver"))__            builder.feature(randomAlphaOfLength(10))__        }_        final LicenseSigner signer = new LicenseSigner(getTestPriKeyPath(), getTestPubKeyPath())__        return signer.sign(builder.build())__    };this,method,which,chooses,the,license,type,randomly,if,the,type,is,null,however,it,will,not,randomly,choose,trial,or,basic,types,as,those,types,can,only,be,self,generated;public,static,license,generate,signed,license,string,type,int,version,long,issue,date,time,value,expiry,duration,throws,exception,long,issue,issue,date,1l,issue,date,system,current,time,millis,time,value,time,value,hours,2,get,millis,final,string,license,type,if,version,license,license,type,random,from,subscription,internal,development,else,license,type,type,null,type,random,from,silver,dev,gold,platinum,final,license,builder,builder,license,builder,uid,uuid,random,uuid,to,string,version,version,expiry,date,system,current,time,millis,expiry,duration,get,millis,issue,date,issue,type,license,type,issued,to,customer,issuer,elasticsearch,max,nodes,5,if,version,license,builder,subscription,type,type,null,type,random,from,dev,gold,platinum,silver,builder,feature,random,alpha,of,length,10,final,license,signer,signer,new,license,signer,get,test,pri,key,path,get,test,pub,key,path,return,signer,sign,builder,build
TestUtils -> public static License generateSignedLicense(String type, int version, long issueDate, TimeValue expiryDuration) throws Exception;1544458001;This method which chooses the license type randomly if the type is null. However, it will not randomly_choose trial or basic types as those types can only be self-generated.;public static License generateSignedLicense(String type, int version, long issueDate, TimeValue expiryDuration) throws Exception {_        long issue = (issueDate != -1L) ? issueDate : System.currentTimeMillis() - TimeValue.timeValueHours(2).getMillis()__        final String licenseType__        if (version < License.VERSION_NO_FEATURE_TYPE) {_            licenseType = randomFrom("subscription", "internal", "development")__        } else {_            licenseType = (type != null) ? type : randomFrom("silver", "dev", "gold", "platinum")__        }_        final License.Builder builder = License.builder()_                .uid(UUID.randomUUID().toString())_                .version(version)_                .expiryDate(System.currentTimeMillis() + expiryDuration.getMillis())_                .issueDate(issue)_                .type(licenseType)_                .issuedTo("customer")_                .issuer("elasticsearch")_                .maxNodes(5)__        if (version == License.VERSION_START) {_            builder.subscriptionType((type != null) ? type : randomFrom("dev", "gold", "platinum", "silver"))__            builder.feature(randomAlphaOfLength(10))__        }_        final LicenseSigner signer = new LicenseSigner(getTestPriKeyPath(), getTestPubKeyPath())__        return signer.sign(builder.build())__    };this,method,which,chooses,the,license,type,randomly,if,the,type,is,null,however,it,will,not,randomly,choose,trial,or,basic,types,as,those,types,can,only,be,self,generated;public,static,license,generate,signed,license,string,type,int,version,long,issue,date,time,value,expiry,duration,throws,exception,long,issue,issue,date,1l,issue,date,system,current,time,millis,time,value,time,value,hours,2,get,millis,final,string,license,type,if,version,license,license,type,random,from,subscription,internal,development,else,license,type,type,null,type,random,from,silver,dev,gold,platinum,final,license,builder,builder,license,builder,uid,uuid,random,uuid,to,string,version,version,expiry,date,system,current,time,millis,expiry,duration,get,millis,issue,date,issue,type,license,type,issued,to,customer,issuer,elasticsearch,max,nodes,5,if,version,license,builder,subscription,type,type,null,type,random,from,dev,gold,platinum,silver,builder,feature,random,alpha,of,length,10,final,license,signer,signer,new,license,signer,get,test,pri,key,path,get,test,pub,key,path,return,signer,sign,builder,build
TestUtils -> public static License generateSignedLicense(String type, int version, long issueDate, TimeValue expiryDuration) throws Exception;1544600864;This method which chooses the license type randomly if the type is null. However, it will not randomly_choose trial or basic types as those types can only be self-generated.;public static License generateSignedLicense(String type, int version, long issueDate, TimeValue expiryDuration) throws Exception {_        long issue = (issueDate != -1L) ? issueDate : System.currentTimeMillis() - TimeValue.timeValueHours(2).getMillis()__        final String licenseType__        if (version < License.VERSION_NO_FEATURE_TYPE) {_            licenseType = randomFrom("subscription", "internal", "development")__        } else {_            licenseType = (type != null) ? type : randomFrom("silver", "dev", "gold", "platinum")__        }_        final License.Builder builder = License.builder()_                .uid(UUID.randomUUID().toString())_                .version(version)_                .expiryDate(System.currentTimeMillis() + expiryDuration.getMillis())_                .issueDate(issue)_                .type(licenseType)_                .issuedTo("customer")_                .issuer("elasticsearch")_                .maxNodes(5)__        if (version == License.VERSION_START) {_            builder.subscriptionType((type != null) ? type : randomFrom("dev", "gold", "platinum", "silver"))__            builder.feature(randomAlphaOfLength(10))__        }_        final LicenseSigner signer = new LicenseSigner(getTestPriKeyPath(), getTestPubKeyPath())__        return signer.sign(builder.build())__    };this,method,which,chooses,the,license,type,randomly,if,the,type,is,null,however,it,will,not,randomly,choose,trial,or,basic,types,as,those,types,can,only,be,self,generated;public,static,license,generate,signed,license,string,type,int,version,long,issue,date,time,value,expiry,duration,throws,exception,long,issue,issue,date,1l,issue,date,system,current,time,millis,time,value,time,value,hours,2,get,millis,final,string,license,type,if,version,license,license,type,random,from,subscription,internal,development,else,license,type,type,null,type,random,from,silver,dev,gold,platinum,final,license,builder,builder,license,builder,uid,uuid,random,uuid,to,string,version,version,expiry,date,system,current,time,millis,expiry,duration,get,millis,issue,date,issue,type,license,type,issued,to,customer,issuer,elasticsearch,max,nodes,5,if,version,license,builder,subscription,type,type,null,type,random,from,dev,gold,platinum,silver,builder,feature,random,alpha,of,length,10,final,license,signer,signer,new,license,signer,get,test,pri,key,path,get,test,pub,key,path,return,signer,sign,builder,build
TestUtils -> public static License generateSignedLicense(String type, int version, long issueDate, TimeValue expiryDuration) throws Exception;1548236405;This method which chooses the license type randomly if the type is null. However, it will not randomly_choose trial or basic types as those types can only be self-generated.;public static License generateSignedLicense(String type, int version, long issueDate, TimeValue expiryDuration) throws Exception {_        long issue = (issueDate != -1L) ? issueDate : System.currentTimeMillis() - TimeValue.timeValueHours(2).getMillis()__        final String licenseType__        if (version < License.VERSION_NO_FEATURE_TYPE) {_            licenseType = randomFrom("subscription", "internal", "development")__        } else {_            licenseType = (type != null) ? type : randomFrom("silver", "dev", "gold", "platinum")__        }_        final License.Builder builder = License.builder()_                .uid(UUID.randomUUID().toString())_                .version(version)_                .expiryDate(System.currentTimeMillis() + expiryDuration.getMillis())_                .issueDate(issue)_                .type(licenseType)_                .issuedTo("customer")_                .issuer("elasticsearch")_                .maxNodes(5)__        if (version == License.VERSION_START) {_            builder.subscriptionType((type != null) ? type : randomFrom("dev", "gold", "platinum", "silver"))__            builder.feature(randomAlphaOfLength(10))__        }_        final LicenseSigner signer = new LicenseSigner(getTestPriKeyPath(), getTestPubKeyPath())__        return signer.sign(builder.build())__    };this,method,which,chooses,the,license,type,randomly,if,the,type,is,null,however,it,will,not,randomly,choose,trial,or,basic,types,as,those,types,can,only,be,self,generated;public,static,license,generate,signed,license,string,type,int,version,long,issue,date,time,value,expiry,duration,throws,exception,long,issue,issue,date,1l,issue,date,system,current,time,millis,time,value,time,value,hours,2,get,millis,final,string,license,type,if,version,license,license,type,random,from,subscription,internal,development,else,license,type,type,null,type,random,from,silver,dev,gold,platinum,final,license,builder,builder,license,builder,uid,uuid,random,uuid,to,string,version,version,expiry,date,system,current,time,millis,expiry,duration,get,millis,issue,date,issue,type,license,type,issued,to,customer,issuer,elasticsearch,max,nodes,5,if,version,license,builder,subscription,type,type,null,type,random,from,dev,gold,platinum,silver,builder,feature,random,alpha,of,length,10,final,license,signer,signer,new,license,signer,get,test,pri,key,path,get,test,pub,key,path,return,signer,sign,builder,build
