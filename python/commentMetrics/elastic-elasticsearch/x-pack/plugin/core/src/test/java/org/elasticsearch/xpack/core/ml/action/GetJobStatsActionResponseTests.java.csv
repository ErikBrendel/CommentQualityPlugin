commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;44;;@Override protected Response createTestInstance() {     final Response result.     int listSize = randomInt(10).     List<Response.JobStats> jobStatsList = new ArrayList<>(listSize).     for (int j = 0. j < listSize. j++) {         String jobId = randomAlphaOfLength(10).         DataCounts dataCounts = new DataCountsTests().createTestInstance().         ModelSizeStats sizeStats = null.         if (randomBoolean()) {             sizeStats = new ModelSizeStats.Builder("foo").build().         }         ForecastStats forecastStats = null.         if (randomBoolean()) {             forecastStats = new ForecastStatsTests().createTestInstance().         }         JobState jobState = randomFrom(EnumSet.allOf(JobState.class)).         DiscoveryNode node = null.         if (randomBoolean()) {             node = new DiscoveryNode("_id", new TransportAddress(InetAddress.getLoopbackAddress(), 9300), Version.CURRENT).         }         String explanation = null.         if (randomBoolean()) {             explanation = randomAlphaOfLength(3).         }         TimeValue openTime = null.         if (randomBoolean()) {             openTime = parseTimeValue(randomPositiveTimeValue(), "open_time-Test").         }         Response.JobStats jobStats = new Response.JobStats(jobId, dataCounts, sizeStats, forecastStats, jobState, node, explanation, openTime).         jobStatsList.add(jobStats).     }     result = new Response(new QueryPage<>(jobStatsList, jobStatsList.size(), Job.RESULTS_FIELD)).     return result. }
false;protected;0;4;;@Override protected Writeable.Reader<Response> instanceReader() {     return Response::new. }
