commented;modifiers;parameterAmount;loc;comment;code
true;public,final;0;6;/**  * Generic test that creates new instance of HLRC request/response from the test instance and checks  * both for equality and asserts equality on the two queries.  */ ;/**  * Generic test that creates new instance of HLRC request/response from the test instance and checks  * both for equality and asserts equality on the two queries.  */ public final void testHlrcFromXContent() throws IOException {     AbstractXContentTestCase.testFromXContent(NUMBER_OF_TEST_RUNS, this::createTestInstance, supportsUnknownFields(), getShuffleFieldsExceptions(), getRandomFieldsExcludeFilter(), this::createParser, p -> convertHlrcToInternal(doHlrcParseInstance(p)), this::assertEqualInstances, assertToXContentEquivalence(), getToXContentParams()). }
true;public,abstract;1;1;/**  * Parses to a new HLRC instance using the provided {@link XContentParser}  */ ;/**  * Parses to a new HLRC instance using the provided {@link XContentParser}  */ public abstract H doHlrcParseInstance(XContentParser parser) throws IOException.
true;public,abstract;1;1;/**  * Converts a HLRC instance to a XPack instance  */ ;/**  * Converts a HLRC instance to a XPack instance  */ public abstract T convertHlrcToInternal(H instance).
