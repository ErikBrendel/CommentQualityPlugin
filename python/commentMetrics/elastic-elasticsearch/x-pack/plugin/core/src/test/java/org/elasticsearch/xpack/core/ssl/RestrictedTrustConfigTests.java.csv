commented;modifiers;parameterAmount;loc;comment;code
false;;1;4;;@Override X509ExtendedTrustManager createTrustManager(Environment environment) {     return null. }
false;;1;4;;@Override Collection<CertificateInfo> certificates(Environment environment) throws GeneralSecurityException, IOException {     return Collections.emptyList(). }
false;;1;4;;@Override List<Path> filesToMonitor(Environment environment) {     return otherFiles. }
false;public;0;4;;@Override public String toString() {     return null. }
false;public;1;4;;@Override public boolean equals(Object o) {     return false. }
false;public;0;4;;@Override public int hashCode() {     return 0. }
false;public;0;52;;public void testDelegationOfFilesToMonitor() throws Exception {     Path homeDir = createTempDir().     Settings settings = Settings.builder().put("path.home", homeDir).build().     Environment environment = TestEnvironment.newEnvironment(settings).     final int numOtherFiles = randomIntBetween(0, 4).     List<Path> otherFiles = new ArrayList<>(numOtherFiles).     for (int i = 0. i < numOtherFiles. i++) {         otherFiles.add(Files.createFile(homeDir.resolve("otherFile" + i))).     }     Path groupConfigPath = Files.createFile(homeDir.resolve("groupConfig")).     TrustConfig delegate = new TrustConfig() {          @Override         X509ExtendedTrustManager createTrustManager(Environment environment) {             return null.         }          @Override         Collection<CertificateInfo> certificates(Environment environment) throws GeneralSecurityException, IOException {             return Collections.emptyList().         }          @Override         List<Path> filesToMonitor(Environment environment) {             return otherFiles.         }          @Override         public String toString() {             return null.         }          @Override         public boolean equals(Object o) {             return false.         }          @Override         public int hashCode() {             return 0.         }     }.     final RestrictedTrustConfig restrictedTrustConfig = new RestrictedTrustConfig(groupConfigPath.toString(), delegate).     List<Path> filesToMonitor = restrictedTrustConfig.filesToMonitor(environment).     List<Path> expectedPathList = new ArrayList<>(otherFiles).     expectedPathList.add(groupConfigPath).     assertEquals(numOtherFiles + 1, filesToMonitor.size()).     assertThat(filesToMonitor, Matchers.contains(expectedPathList.toArray(new Path[0]))). }
