commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;54;;@Override protected Response createTestInstance() {     int listSize = randomInt(10).     List<Bucket> hits = new ArrayList<>(listSize).     for (int j = 0. j < listSize. j++) {         String jobId = "foo".         Bucket bucket = new Bucket(jobId, new Date(randomLong()), randomNonNegativeLong()).         if (randomBoolean()) {             bucket.setAnomalyScore(randomDouble()).         }         if (randomBoolean()) {             int size = randomInt(10).             List<BucketInfluencer> bucketInfluencers = new ArrayList<>(size).             for (int i = 0. i < size. i++) {                 BucketInfluencer bucketInfluencer = new BucketInfluencer("foo", bucket.getTimestamp(), bucket.getBucketSpan()).                 bucketInfluencer.setAnomalyScore(randomDouble()).                 bucketInfluencer.setInfluencerFieldName(randomAlphaOfLengthBetween(1, 20)).                 bucketInfluencer.setInitialAnomalyScore(randomDouble()).                 bucketInfluencer.setProbability(randomDouble()).                 bucketInfluencer.setRawAnomalyScore(randomDouble()).                 bucketInfluencers.add(bucketInfluencer).             }             bucket.setBucketInfluencers(bucketInfluencers).         }         if (randomBoolean()) {             bucket.setEventCount(randomNonNegativeLong()).         }         if (randomBoolean()) {             bucket.setInitialAnomalyScore(randomDouble()).         }         if (randomBoolean()) {             bucket.setInterim(randomBoolean()).         }         if (randomBoolean()) {             bucket.setProcessingTimeMs(randomLong()).         }         if (randomBoolean()) {             int size = randomInt(10).             List<AnomalyRecord> records = new ArrayList<>(size).             for (int i = 0. i < size. i++) {                 AnomalyRecord anomalyRecord = new AnomalyRecord(jobId, new Date(randomLong()), randomNonNegativeLong()).                 anomalyRecord.setActual(Collections.singletonList(randomDouble())).                 anomalyRecord.setTypical(Collections.singletonList(randomDouble())).                 anomalyRecord.setProbability(randomDouble()).                 anomalyRecord.setInterim(randomBoolean()).                 records.add(anomalyRecord).             }             bucket.setRecords(records).         }         hits.add(bucket).     }     QueryPage<Bucket> buckets = new QueryPage<>(hits, listSize, Bucket.RESULTS_FIELD).     return new Response(buckets). }
false;protected;0;4;;@Override protected Response createBlankInstance() {     return new GetBucketsAction.Response(). }
