commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;public void testShouldCollectReturnsFalseIfMonitoringNotAllowed() {     // this controls the blockage     when(licenseState.isMonitoringAllowed()).thenReturn(false).     final boolean isElectedMaster = randomBoolean().     whenLocalNodeElectedMaster(isElectedMaster).     final IndexStatsCollector collector = new IndexStatsCollector(clusterService, licenseState, client).     assertThat(collector.shouldCollect(isElectedMaster), is(false)).     if (isElectedMaster) {         verify(licenseState).isMonitoringAllowed().     } }
false;public;0;6;;public void testShouldCollectReturnsFalseIfNotMaster() {     when(licenseState.isMonitoringAllowed()).thenReturn(true).     final IndexStatsCollector collector = new IndexStatsCollector(clusterService, licenseState, client).     assertThat(collector.shouldCollect(false), is(false)). }
false;public;0;7;;public void testShouldCollectReturnsTrue() {     when(licenseState.isMonitoringAllowed()).thenReturn(true).     final IndexStatsCollector collector = new IndexStatsCollector(clusterService, licenseState, client).     assertThat(collector.shouldCollect(true), is(true)).     verify(licenseState).isMonitoringAllowed(). }
false;public;0;111;;public void testDoCollect() throws Exception {     final TimeValue timeout = TimeValue.timeValueSeconds(randomIntBetween(1, 120)).     withCollectionTimeout(IndexStatsCollector.INDEX_STATS_TIMEOUT, timeout).     whenLocalNodeElectedMaster(true).     final String clusterName = randomAlphaOfLength(10).     whenClusterStateWithName(clusterName).     final String clusterUUID = UUID.randomUUID().toString().     whenClusterStateWithUUID(clusterUUID).     final RoutingTable routingTable = mock(RoutingTable.class).     when(clusterState.routingTable()).thenReturn(routingTable).     final IndicesStatsResponse indicesStatsResponse = mock(IndicesStatsResponse.class).     final MonitoringDoc.Node node = randomMonitoringNode(random()).     // Number of indices that exist in the cluster state and returned in the IndicesStatsResponse     final int existingIndices = randomIntBetween(0, 10).     // Number of indices returned in the IndicesStatsResponse only     final int createdIndices = randomIntBetween(0, 10).     // Number of indices returned in the local cluster state only     final int deletedIndices = randomIntBetween(0, 10).     // Total number of indices     final int indices = existingIndices + createdIndices + deletedIndices.     final Map<String, IndexStats> indicesStats = new HashMap<>(indices).     final Map<String, IndexMetaData> indicesMetaData = new HashMap<>(indices).     final Map<String, IndexRoutingTable> indicesRoutingTable = new HashMap<>(indices).     for (int i = 0. i < indices. i++) {         final String index = "_index_" + i.         final IndexStats indexStats = mock(IndexStats.class).         when(indexStats.getIndex()).thenReturn(index).         final IndexMetaData indexMetaData = mock(IndexMetaData.class).         final IndexRoutingTable indexRoutingTable = mock(IndexRoutingTable.class).         if (i < (createdIndices + existingIndices)) {             when(indicesStatsResponse.getIndex(index)).thenReturn(indexStats).         }         if (i >= createdIndices) {             indicesMetaData.put(index, indexMetaData).             when(metaData.index(index)).thenReturn(indexMetaData).             indicesRoutingTable.put(index, indexRoutingTable).             when(routingTable.index(index)).thenReturn(indexRoutingTable).             if (i < (createdIndices + existingIndices)) {                 indicesStats.put(index, indexStats).             }         }     }     final String[] indexNames = indicesMetaData.keySet().toArray(new String[0]).     when(metaData.getConcreteAllIndices()).thenReturn(indexNames).     final IndicesStatsRequestBuilder indicesStatsRequestBuilder = spy(new IndicesStatsRequestBuilder(mock(ElasticsearchClient.class), IndicesStatsAction.INSTANCE)).     doReturn(indicesStatsResponse).when(indicesStatsRequestBuilder).get(eq(timeout)).     final IndicesAdminClient indicesAdminClient = mock(IndicesAdminClient.class).     when(indicesAdminClient.prepareStats()).thenReturn(indicesStatsRequestBuilder).     final AdminClient adminClient = mock(AdminClient.class).     when(adminClient.indices()).thenReturn(indicesAdminClient).     final Client client = mock(Client.class).     when(client.admin()).thenReturn(adminClient).     final IndexStatsCollector collector = new IndexStatsCollector(clusterService, licenseState, client).     assertEquals(timeout, collector.getCollectionTimeout()).     final long interval = randomNonNegativeLong().     final Collection<MonitoringDoc> results = collector.doCollect(node, interval, clusterState).     verify(indicesAdminClient).prepareStats().     verify(indicesStatsResponse, times(existingIndices + deletedIndices)).getIndex(anyString()).     verify(metaData, times(existingIndices)).index(anyString()).     verify(routingTable, times(existingIndices)).index(anyString()).     verify(metaData).clusterUUID().     assertEquals(1 + existingIndices, results.size()).     for (final MonitoringDoc document : results) {         assertThat(document.getCluster(), equalTo(clusterUUID)).         assertThat(document.getTimestamp(), greaterThan(0L)).         assertThat(document.getIntervalMillis(), equalTo(interval)).         assertThat(document.getNode(), equalTo(node)).         assertThat(document.getSystem(), is(MonitoredSystem.ES)).         assertThat(document.getId(), nullValue()).         if (document instanceof IndicesStatsMonitoringDoc) {             assertThat(document.getType(), equalTo(IndicesStatsMonitoringDoc.TYPE)).             final List<IndexStats> actualIndicesStats = ((IndicesStatsMonitoringDoc) document).getIndicesStats().             actualIndicesStats.forEach((value) -> assertThat(value, is(indicesStats.get(value.getIndex())))).             assertThat(actualIndicesStats.size(), equalTo(indicesStats.size())).         } else {             assertThat(document.getType(), equalTo(IndexStatsMonitoringDoc.TYPE)).             final IndexStatsMonitoringDoc indexStatsDocument = (IndexStatsMonitoringDoc) document.             final String index = indexStatsDocument.getIndexStats().getIndex().             assertThat(indexStatsDocument.getIndexStats(), is(indicesStats.get(index))).             assertThat(indexStatsDocument.getIndexMetaData(), is(indicesMetaData.get(index))).             assertThat(indexStatsDocument.getIndexRoutingTable(), is(indicesRoutingTable.get(index))).         }     } }
