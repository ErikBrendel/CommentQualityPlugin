commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;@Override protected Collection<Class<? extends Plugin>> nodePlugins() {     ArrayList<Class<? extends Plugin>> plugins = new ArrayList<>(super.nodePlugins()).     plugins.add(InternalSettingsPlugin.class).     return plugins. }
false;protected;1;8;;@Override protected Settings nodeSettings(int nodeOrdinal) {     return Settings.builder().put(super.nodeSettings(nodeOrdinal)).put("xpack.monitoring.exporters._local.type", LocalExporter.TYPE).put("xpack.watcher.history.cleaner_service.enabled", cleanUpWatcherHistory).build(). }
false;protected;2;6;;@Override protected void createIndex(String name, ZonedDateTime creationDate) {     long creationMillis = creationDate.toInstant().toEpochMilli().     assertAcked(prepareCreate(name).setSettings(Settings.builder().put(IndexMetaData.SETTING_CREATION_DATE, creationMillis).build())). }
false;protected;1;12;;@Override protected void assertIndicesCount(int count) throws Exception {     assertBusy(() -> {         // we set ignore_unavailable to true for this request as the monitoring index gets deleted concurrently with this assertion         // in some cases. When the plugin security is enabled, it expands wildcards to the existing index, which then gets deleted,         // so when es core gets the request with the explicit index name, it throws an index not found exception as that index         // doesn't exist anymore. If we ignore unavailable instead no error will be thrown.         GetSettingsResponse getSettingsResponse = client().admin().indices().prepareGetSettings().setIndicesOptions(IndicesOptions.fromOptions(true, true, true, true)).get().         assertThat(getSettingsResponse.getIndexToSettings().size(), equalTo(count)).     }). }
false;public;0;25;;public void testHandlesWatcherHistory() throws Exception {     internalCluster().startNode().     // Will be deleted (if we delete them)     createWatcherHistoryIndex(now().minusDays(7)).     createWatcherHistoryIndex(now().minusDays(10), "6").     createWatcherHistoryIndex(now().minusDays(14), "3").     createWatcherHistoryIndex(now().minusDays(30), "2").     createWatcherHistoryIndex(now().minusYears(1), "1").     createWatcherHistoryIndex(now().minusDays(10), String.valueOf(Integer.MAX_VALUE)).     // Won't be deleted     createWatcherHistoryIndex(now()).     assertIndicesCount(7).     CleanerService.Listener listener = getListener().     listener.onCleanUpIndices(days(3)).     if (cleanUpWatcherHistory) {         assertIndicesCount(1).     } else {         assertIndicesCount(7).     } }
