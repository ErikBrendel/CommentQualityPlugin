# id;timestamp;commentText;codeText;commentWords;codeWords
PipelineHttpResource -> HttpEntity pipelineToHttpEntity();1524684173;Create a {@link HttpEntity} for the {@link #pipeline}.__@return Never {@code null}.;HttpEntity pipelineToHttpEntity() {_        return new ByteArrayEntity(pipeline.get(), ContentType.APPLICATION_JSON)__    };create,a,link,http,entity,for,the,link,pipeline,return,never,code,null;http,entity,pipeline,to,http,entity,return,new,byte,array,entity,pipeline,get,content,type
PipelineHttpResource -> HttpEntity pipelineToHttpEntity();1540847035;Create a {@link HttpEntity} for the {@link #pipeline}.__@return Never {@code null}.;HttpEntity pipelineToHttpEntity() {_        return new ByteArrayEntity(pipeline.get(), ContentType.APPLICATION_JSON)__    };create,a,link,http,entity,for,the,link,pipeline,return,never,code,null;http,entity,pipeline,to,http,entity,return,new,byte,array,entity,pipeline,get,content,type
PipelineHttpResource -> HttpEntity pipelineToHttpEntity();1543346894;Create a {@link HttpEntity} for the {@link #pipeline}.__@return Never {@code null}.;HttpEntity pipelineToHttpEntity() {_        return new ByteArrayEntity(pipeline.get(), ContentType.APPLICATION_JSON)__    };create,a,link,http,entity,for,the,link,pipeline,return,never,code,null;http,entity,pipeline,to,http,entity,return,new,byte,array,entity,pipeline,get,content,type
PipelineHttpResource -> HttpEntity pipelineToHttpEntity();1550177579;Create a {@link HttpEntity} for the {@link #pipeline}.__@return Never {@code null}.;HttpEntity pipelineToHttpEntity() {_        return new ByteArrayEntity(pipeline.get(), ContentType.APPLICATION_JSON)__    };create,a,link,http,entity,for,the,link,pipeline,return,never,code,null;http,entity,pipeline,to,http,entity,return,new,byte,array,entity,pipeline,get,content,type
PipelineHttpResource -> @Override     protected void doPublish(final RestClient client, final ActionListener<Boolean> listener);1543346894;Publish the current {@linkplain #pipelineName pipeline}.;@Override_    protected void doPublish(final RestClient client, final ActionListener<Boolean> listener) {_        putResource(client, listener, logger,_                    "/_ingest/pipeline", pipelineName, this::pipelineToHttpEntity, "monitoring pipeline",_                    resourceOwnerName, "monitoring cluster")__    };publish,the,current,linkplain,pipeline,name,pipeline;override,protected,void,do,publish,final,rest,client,client,final,action,listener,boolean,listener,put,resource,client,listener,logger,pipeline,pipeline,name,this,pipeline,to,http,entity,monitoring,pipeline,resource,owner,name,monitoring,cluster
PipelineHttpResource -> @Override     protected void doPublish(final RestClient client, final ActionListener<Boolean> listener);1550177579;Publish the current {@linkplain #pipelineName pipeline}.;@Override_    protected void doPublish(final RestClient client, final ActionListener<Boolean> listener) {_        putResource(client, listener, logger,_                    "/_ingest/pipeline", pipelineName, Collections.emptyMap(), this::pipelineToHttpEntity, "monitoring pipeline",_                    resourceOwnerName, "monitoring cluster")__    };publish,the,current,linkplain,pipeline,name,pipeline;override,protected,void,do,publish,final,rest,client,client,final,action,listener,boolean,listener,put,resource,client,listener,logger,pipeline,pipeline,name,collections,empty,map,this,pipeline,to,http,entity,monitoring,pipeline,resource,owner,name,monitoring,cluster
PipelineHttpResource -> @Override     protected boolean doPublish(final RestClient client);1524684173;Publish the current {@linkplain #pipelineName pipeline}.;@Override_    protected boolean doPublish(final RestClient client) {_        return putResource(client, logger,_                           "/_ingest/pipeline", pipelineName, this::pipelineToHttpEntity, "monitoring pipeline",_                           resourceOwnerName, "monitoring cluster")__    };publish,the,current,linkplain,pipeline,name,pipeline;override,protected,boolean,do,publish,final,rest,client,client,return,put,resource,client,logger,pipeline,pipeline,name,this,pipeline,to,http,entity,monitoring,pipeline,resource,owner,name,monitoring,cluster
PipelineHttpResource -> @Override     protected boolean doPublish(final RestClient client);1540847035;Publish the current {@linkplain #pipelineName pipeline}.;@Override_    protected boolean doPublish(final RestClient client) {_        return putResource(client, logger,_                           "/_ingest/pipeline", pipelineName, this::pipelineToHttpEntity, "monitoring pipeline",_                           resourceOwnerName, "monitoring cluster")__    };publish,the,current,linkplain,pipeline,name,pipeline;override,protected,boolean,do,publish,final,rest,client,client,return,put,resource,client,logger,pipeline,pipeline,name,this,pipeline,to,http,entity,monitoring,pipeline,resource,owner,name,monitoring,cluster
PipelineHttpResource -> public PipelineHttpResource(final String resourceOwnerName, @Nullable final TimeValue masterTimeout,                                 final String pipelineName, final Supplier<byte[]> pipeline);1524684173;Create a new {@link PipelineHttpResource}.__@param resourceOwnerName The user-recognizable name_@param masterTimeout Master timeout to use with any request._@param pipelineName The name of the template (e.g., ".pipeline123")._@param pipeline The pipeline provider.;public PipelineHttpResource(final String resourceOwnerName, @Nullable final TimeValue masterTimeout,_                                final String pipelineName, final Supplier<byte[]> pipeline) {_        super(resourceOwnerName, masterTimeout, PublishableHttpResource.RESOURCE_VERSION_PARAMETERS)___        this.pipelineName = Objects.requireNonNull(pipelineName)__        this.pipeline = Objects.requireNonNull(pipeline)__    };create,a,new,link,pipeline,http,resource,param,resource,owner,name,the,user,recognizable,name,param,master,timeout,master,timeout,to,use,with,any,request,param,pipeline,name,the,name,of,the,template,e,g,pipeline123,param,pipeline,the,pipeline,provider;public,pipeline,http,resource,final,string,resource,owner,name,nullable,final,time,value,master,timeout,final,string,pipeline,name,final,supplier,byte,pipeline,super,resource,owner,name,master,timeout,publishable,http,resource,this,pipeline,name,objects,require,non,null,pipeline,name,this,pipeline,objects,require,non,null,pipeline
PipelineHttpResource -> public PipelineHttpResource(final String resourceOwnerName, @Nullable final TimeValue masterTimeout,                                 final String pipelineName, final Supplier<byte[]> pipeline);1540847035;Create a new {@link PipelineHttpResource}.__@param resourceOwnerName The user-recognizable name_@param masterTimeout Master timeout to use with any request._@param pipelineName The name of the template (e.g., ".pipeline123")._@param pipeline The pipeline provider.;public PipelineHttpResource(final String resourceOwnerName, @Nullable final TimeValue masterTimeout,_                                final String pipelineName, final Supplier<byte[]> pipeline) {_        super(resourceOwnerName, masterTimeout, PublishableHttpResource.RESOURCE_VERSION_PARAMETERS)___        this.pipelineName = Objects.requireNonNull(pipelineName)__        this.pipeline = Objects.requireNonNull(pipeline)__    };create,a,new,link,pipeline,http,resource,param,resource,owner,name,the,user,recognizable,name,param,master,timeout,master,timeout,to,use,with,any,request,param,pipeline,name,the,name,of,the,template,e,g,pipeline123,param,pipeline,the,pipeline,provider;public,pipeline,http,resource,final,string,resource,owner,name,nullable,final,time,value,master,timeout,final,string,pipeline,name,final,supplier,byte,pipeline,super,resource,owner,name,master,timeout,publishable,http,resource,this,pipeline,name,objects,require,non,null,pipeline,name,this,pipeline,objects,require,non,null,pipeline
PipelineHttpResource -> public PipelineHttpResource(final String resourceOwnerName, @Nullable final TimeValue masterTimeout,                                 final String pipelineName, final Supplier<byte[]> pipeline);1543346894;Create a new {@link PipelineHttpResource}.__@param resourceOwnerName The user-recognizable name_@param masterTimeout Master timeout to use with any request._@param pipelineName The name of the template (e.g., ".pipeline123")._@param pipeline The pipeline provider.;public PipelineHttpResource(final String resourceOwnerName, @Nullable final TimeValue masterTimeout,_                                final String pipelineName, final Supplier<byte[]> pipeline) {_        super(resourceOwnerName, masterTimeout, PublishableHttpResource.RESOURCE_VERSION_PARAMETERS)___        this.pipelineName = Objects.requireNonNull(pipelineName)__        this.pipeline = Objects.requireNonNull(pipeline)__    };create,a,new,link,pipeline,http,resource,param,resource,owner,name,the,user,recognizable,name,param,master,timeout,master,timeout,to,use,with,any,request,param,pipeline,name,the,name,of,the,template,e,g,pipeline123,param,pipeline,the,pipeline,provider;public,pipeline,http,resource,final,string,resource,owner,name,nullable,final,time,value,master,timeout,final,string,pipeline,name,final,supplier,byte,pipeline,super,resource,owner,name,master,timeout,publishable,http,resource,this,pipeline,name,objects,require,non,null,pipeline,name,this,pipeline,objects,require,non,null,pipeline
PipelineHttpResource -> public PipelineHttpResource(final String resourceOwnerName, @Nullable final TimeValue masterTimeout,                                 final String pipelineName, final Supplier<byte[]> pipeline);1550177579;Create a new {@link PipelineHttpResource}.__@param resourceOwnerName The user-recognizable name_@param masterTimeout Master timeout to use with any request._@param pipelineName The name of the template (e.g., ".pipeline123")._@param pipeline The pipeline provider.;public PipelineHttpResource(final String resourceOwnerName, @Nullable final TimeValue masterTimeout,_                                final String pipelineName, final Supplier<byte[]> pipeline) {_        super(resourceOwnerName, masterTimeout, PublishableHttpResource.RESOURCE_VERSION_PARAMETERS)___        this.pipelineName = Objects.requireNonNull(pipelineName)__        this.pipeline = Objects.requireNonNull(pipeline)__    };create,a,new,link,pipeline,http,resource,param,resource,owner,name,the,user,recognizable,name,param,master,timeout,master,timeout,to,use,with,any,request,param,pipeline,name,the,name,of,the,template,e,g,pipeline123,param,pipeline,the,pipeline,provider;public,pipeline,http,resource,final,string,resource,owner,name,nullable,final,time,value,master,timeout,final,string,pipeline,name,final,supplier,byte,pipeline,super,resource,owner,name,master,timeout,publishable,http,resource,this,pipeline,name,objects,require,non,null,pipeline,name,this,pipeline,objects,require,non,null,pipeline
PipelineHttpResource -> @Override     protected CheckResponse doCheck(final RestClient client);1524684173;Determine if the current {@linkplain #pipelineName pipeline} exists.;@Override_    protected CheckResponse doCheck(final RestClient client) {_        return versionCheckForResource(client, logger,_                                       "/_ingest/pipeline", pipelineName, "monitoring pipeline",_                                       resourceOwnerName, "monitoring cluster",_                                       XContentType.JSON.xContent(), MonitoringTemplateUtils.LAST_UPDATED_VERSION)__    };determine,if,the,current,linkplain,pipeline,name,pipeline,exists;override,protected,check,response,do,check,final,rest,client,client,return,version,check,for,resource,client,logger,pipeline,pipeline,name,monitoring,pipeline,resource,owner,name,monitoring,cluster,xcontent,type,json,x,content,monitoring,template,utils
PipelineHttpResource -> @Override     protected CheckResponse doCheck(final RestClient client);1540847035;Determine if the current {@linkplain #pipelineName pipeline} exists.;@Override_    protected CheckResponse doCheck(final RestClient client) {_        return versionCheckForResource(client, logger,_                                       "/_ingest/pipeline", pipelineName, "monitoring pipeline",_                                       resourceOwnerName, "monitoring cluster",_                                       XContentType.JSON.xContent(), MonitoringTemplateUtils.LAST_UPDATED_VERSION)__    };determine,if,the,current,linkplain,pipeline,name,pipeline,exists;override,protected,check,response,do,check,final,rest,client,client,return,version,check,for,resource,client,logger,pipeline,pipeline,name,monitoring,pipeline,resource,owner,name,monitoring,cluster,xcontent,type,json,x,content,monitoring,template,utils
PipelineHttpResource -> @Override     protected void doCheck(final RestClient client, final ActionListener<Boolean> listener);1543346894;Determine if the current {@linkplain #pipelineName pipeline} exists.;@Override_    protected void doCheck(final RestClient client, final ActionListener<Boolean> listener) {_        versionCheckForResource(client, listener, logger,_                                "/_ingest/pipeline", pipelineName, "monitoring pipeline",_                                resourceOwnerName, "monitoring cluster",_                                XContentType.JSON.xContent(), MonitoringTemplateUtils.LAST_UPDATED_VERSION)__    };determine,if,the,current,linkplain,pipeline,name,pipeline,exists;override,protected,void,do,check,final,rest,client,client,final,action,listener,boolean,listener,version,check,for,resource,client,listener,logger,pipeline,pipeline,name,monitoring,pipeline,resource,owner,name,monitoring,cluster,xcontent,type,json,x,content,monitoring,template,utils
PipelineHttpResource -> @Override     protected void doCheck(final RestClient client, final ActionListener<Boolean> listener);1550177579;Determine if the current {@linkplain #pipelineName pipeline} exists.;@Override_    protected void doCheck(final RestClient client, final ActionListener<Boolean> listener) {_        versionCheckForResource(client, listener, logger,_                                "/_ingest/pipeline", pipelineName, "monitoring pipeline",_                                resourceOwnerName, "monitoring cluster",_                                XContentType.JSON.xContent(), MonitoringTemplateUtils.LAST_UPDATED_VERSION)__    };determine,if,the,current,linkplain,pipeline,name,pipeline,exists;override,protected,void,do,check,final,rest,client,client,final,action,listener,boolean,listener,version,check,for,resource,client,listener,logger,pipeline,pipeline,name,monitoring,pipeline,resource,owner,name,monitoring,cluster,xcontent,type,json,x,content,monitoring,template,utils
