commented;modifiers;parameterAmount;loc;comment;code
true;public;0;4;/**  * Get the {@link Sniffer} that is notified upon node failure.  *  * @return Can be {@code null}.  */ ;/**  * Get the {@link Sniffer} that is notified upon node failure.  *  * @return Can be {@code null}.  */ @Nullable public Sniffer getSniffer() {     return sniffer.get(). }
true;public;1;3;/**  * Set the {@link Sniffer} that is notified upon node failure.  *  * @param sniffer The sniffer to notify  * @throws SetOnce.AlreadySetException if called more than once  */ ;/**  * Set the {@link Sniffer} that is notified upon node failure.  *  * @param sniffer The sniffer to notify  * @throws SetOnce.AlreadySetException if called more than once  */ public void setSniffer(@Nullable final Sniffer sniffer) {     this.sniffer.set(sniffer). }
true;public;0;4;/**  * Get the {@link HttpResource} that is notified upon node failure.  *  * @return Can be {@code null}.  */ ;/**  * Get the {@link HttpResource} that is notified upon node failure.  *  * @return Can be {@code null}.  */ @Nullable public HttpResource getResource() {     return resource.get(). }
true;public;1;3;/**  * Set the {@link HttpResource} that is notified upon node failure.  *  * @param resource The resource to notify  * @throws SetOnce.AlreadySetException if called more than once  */ ;/**  * Set the {@link HttpResource} that is notified upon node failure.  *  * @param resource The resource to notify  * @throws SetOnce.AlreadySetException if called more than once  */ public void setResource(@Nullable final HttpResource resource) {     this.resource.set(resource). }
false;public;1;15;;@Override public void onFailure(final Node node) {     HttpHost host = node.getHost().     logger.warn("connection failed to node at [{}://{}:{}]", host.getSchemeName(), host.getHostName(), host.getPort()).     final HttpResource resource = this.resource.get().     final Sniffer sniffer = this.sniffer.get().     if (resource != null) {         resource.markDirty().     }     if (sniffer != null) {         sniffer.sniffOnFailure().     } }
