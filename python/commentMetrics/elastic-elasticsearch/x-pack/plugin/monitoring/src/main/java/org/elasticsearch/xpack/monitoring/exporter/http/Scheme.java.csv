commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String toString() {     return scheme. }
true;public,static;1;10;/**  * Determine the {@link Scheme} from the {@code scheme}.  * <pre><code>  * Scheme http = Scheme.fromString("http").  * Scheme https = Scheme.fromString("https").  * Scheme httpsCaps = Scheme.fromString("HTTPS"). // same as https  * </code></pre>  *  * @param scheme The scheme to check.  * @return Never {@code null}.  * @throws NullPointerException if {@code scheme} is {@code null}.  * @throws IllegalArgumentException if the {@code scheme} is not supported.  */ ;/**  * Determine the {@link Scheme} from the {@code scheme}.  * <pre><code>  * Scheme http = Scheme.fromString("http").  * Scheme https = Scheme.fromString("https").  * Scheme httpsCaps = Scheme.fromString("HTTPS"). // same as https  * </code></pre>  *  * @param scheme The scheme to check.  * @return Never {@code null}.  * @throws NullPointerException if {@code scheme} is {@code null}.  * @throws IllegalArgumentException if the {@code scheme} is not supported.  */ public static Scheme fromString(final String scheme) {     switch(scheme.toLowerCase(Locale.ROOT)) {         case "http":             return HTTP.         case "https":             return HTTPS.     }     throw new IllegalArgumentException("unsupported scheme: [" + scheme + "]"). }
