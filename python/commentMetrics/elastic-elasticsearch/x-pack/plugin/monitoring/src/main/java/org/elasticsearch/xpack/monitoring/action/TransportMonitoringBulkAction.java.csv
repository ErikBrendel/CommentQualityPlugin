# id;timestamp;commentText;codeText;commentWords;codeWords
TransportMonitoringBulkAction -> AsyncAction -> Collection<MonitoringDoc> createMonitoringDocs(Collection<MonitoringBulkDoc> bulkDocs);1524684173;Iterate over the list of {@link MonitoringBulkDoc} to create the corresponding_list of {@link MonitoringDoc}.;Collection<MonitoringDoc> createMonitoringDocs(Collection<MonitoringBulkDoc> bulkDocs) {_            return bulkDocs.stream()_                           .filter(bulkDoc -> bulkDoc.getSystem() != MonitoredSystem.UNKNOWN)_                           .map(this::createMonitoringDoc)_                           .collect(Collectors.toList())__        };iterate,over,the,list,of,link,monitoring,bulk,doc,to,create,the,corresponding,list,of,link,monitoring,doc;collection,monitoring,doc,create,monitoring,docs,collection,monitoring,bulk,doc,bulk,docs,return,bulk,docs,stream,filter,bulk,doc,bulk,doc,get,system,monitored,system,unknown,map,this,create,monitoring,doc,collect,collectors,to,list
TransportMonitoringBulkAction -> AsyncAction -> Collection<MonitoringDoc> createMonitoringDocs(Collection<MonitoringBulkDoc> bulkDocs);1529487105;Iterate over the list of {@link MonitoringBulkDoc} to create the corresponding_list of {@link MonitoringDoc}.;Collection<MonitoringDoc> createMonitoringDocs(Collection<MonitoringBulkDoc> bulkDocs) {_            return bulkDocs.stream()_                           .filter(bulkDoc -> bulkDoc.getSystem() != MonitoredSystem.UNKNOWN)_                           .map(this::createMonitoringDoc)_                           .collect(Collectors.toList())__        };iterate,over,the,list,of,link,monitoring,bulk,doc,to,create,the,corresponding,list,of,link,monitoring,doc;collection,monitoring,doc,create,monitoring,docs,collection,monitoring,bulk,doc,bulk,docs,return,bulk,docs,stream,filter,bulk,doc,bulk,doc,get,system,monitored,system,unknown,map,this,create,monitoring,doc,collect,collectors,to,list
TransportMonitoringBulkAction -> AsyncAction -> Collection<MonitoringDoc> createMonitoringDocs(Collection<MonitoringBulkDoc> bulkDocs);1529658035;Iterate over the list of {@link MonitoringBulkDoc} to create the corresponding_list of {@link MonitoringDoc}.;Collection<MonitoringDoc> createMonitoringDocs(Collection<MonitoringBulkDoc> bulkDocs) {_            return bulkDocs.stream()_                           .filter(bulkDoc -> bulkDoc.getSystem() != MonitoredSystem.UNKNOWN)_                           .map(this::createMonitoringDoc)_                           .collect(Collectors.toList())__        };iterate,over,the,list,of,link,monitoring,bulk,doc,to,create,the,corresponding,list,of,link,monitoring,doc;collection,monitoring,doc,create,monitoring,docs,collection,monitoring,bulk,doc,bulk,docs,return,bulk,docs,stream,filter,bulk,doc,bulk,doc,get,system,monitored,system,unknown,map,this,create,monitoring,doc,collect,collectors,to,list
TransportMonitoringBulkAction -> AsyncAction -> Collection<MonitoringDoc> createMonitoringDocs(Collection<MonitoringBulkDoc> bulkDocs);1529916082;Iterate over the list of {@link MonitoringBulkDoc} to create the corresponding_list of {@link MonitoringDoc}.;Collection<MonitoringDoc> createMonitoringDocs(Collection<MonitoringBulkDoc> bulkDocs) {_            return bulkDocs.stream()_                           .filter(bulkDoc -> bulkDoc.getSystem() != MonitoredSystem.UNKNOWN)_                           .map(this::createMonitoringDoc)_                           .collect(Collectors.toList())__        };iterate,over,the,list,of,link,monitoring,bulk,doc,to,create,the,corresponding,list,of,link,monitoring,doc;collection,monitoring,doc,create,monitoring,docs,collection,monitoring,bulk,doc,bulk,docs,return,bulk,docs,stream,filter,bulk,doc,bulk,doc,get,system,monitored,system,unknown,map,this,create,monitoring,doc,collect,collectors,to,list
TransportMonitoringBulkAction -> AsyncAction -> Collection<MonitoringDoc> createMonitoringDocs(Collection<MonitoringBulkDoc> bulkDocs);1541419698;Iterate over the list of {@link MonitoringBulkDoc} to create the corresponding_list of {@link MonitoringDoc}.;Collection<MonitoringDoc> createMonitoringDocs(Collection<MonitoringBulkDoc> bulkDocs) {_            return bulkDocs.stream()_                           .filter(bulkDoc -> bulkDoc.getSystem() != MonitoredSystem.UNKNOWN)_                           .map(this::createMonitoringDoc)_                           .collect(Collectors.toList())__        };iterate,over,the,list,of,link,monitoring,bulk,doc,to,create,the,corresponding,list,of,link,monitoring,doc;collection,monitoring,doc,create,monitoring,docs,collection,monitoring,bulk,doc,bulk,docs,return,bulk,docs,stream,filter,bulk,doc,bulk,doc,get,system,monitored,system,unknown,map,this,create,monitoring,doc,collect,collectors,to,list
TransportMonitoringBulkAction -> AsyncAction -> void executeExport(final Collection<MonitoringDoc> docs, final long startTimeNanos,                            final ActionListener<MonitoringBulkResponse> delegate);1524684173;Exports the documents;void executeExport(final Collection<MonitoringDoc> docs, final long startTimeNanos,_                           final ActionListener<MonitoringBulkResponse> delegate) {_            threadPool.executor(ThreadPool.Names.GENERIC).execute(new ActionRunnable<MonitoringBulkResponse>(delegate) {_                @Override_                protected void doRun() {_                    exportService.export(_                        docs,_                        ActionListener.wrap(_                            r -> listener.onResponse(response(startTimeNanos)),_                            this::onFailure_                        )_                    )__                }__                @Override_                public void onFailure(Exception e) {_                    listener.onResponse(response(startTimeNanos, e))__                }_            })__        };exports,the,documents;void,execute,export,final,collection,monitoring,doc,docs,final,long,start,time,nanos,final,action,listener,monitoring,bulk,response,delegate,thread,pool,executor,thread,pool,names,generic,execute,new,action,runnable,monitoring,bulk,response,delegate,override,protected,void,do,run,export,service,export,docs,action,listener,wrap,r,listener,on,response,response,start,time,nanos,this,on,failure,override,public,void,on,failure,exception,e,listener,on,response,response,start,time,nanos,e
TransportMonitoringBulkAction -> AsyncAction -> void executeExport(final Collection<MonitoringDoc> docs, final long startTimeNanos,                            final ActionListener<MonitoringBulkResponse> delegate);1529487105;Exports the documents;void executeExport(final Collection<MonitoringDoc> docs, final long startTimeNanos,_                           final ActionListener<MonitoringBulkResponse> delegate) {_            threadPool.executor(ThreadPool.Names.GENERIC).execute(new ActionRunnable<MonitoringBulkResponse>(delegate) {_                @Override_                protected void doRun() {_                    exportService.export(_                        docs,_                        ActionListener.wrap(_                            r -> listener.onResponse(response(startTimeNanos)),_                            this::onFailure_                        )_                    )__                }__                @Override_                public void onFailure(Exception e) {_                    listener.onResponse(response(startTimeNanos, e))__                }_            })__        };exports,the,documents;void,execute,export,final,collection,monitoring,doc,docs,final,long,start,time,nanos,final,action,listener,monitoring,bulk,response,delegate,thread,pool,executor,thread,pool,names,generic,execute,new,action,runnable,monitoring,bulk,response,delegate,override,protected,void,do,run,export,service,export,docs,action,listener,wrap,r,listener,on,response,response,start,time,nanos,this,on,failure,override,public,void,on,failure,exception,e,listener,on,response,response,start,time,nanos,e
TransportMonitoringBulkAction -> AsyncAction -> void executeExport(final Collection<MonitoringDoc> docs, final long startTimeNanos,                            final ActionListener<MonitoringBulkResponse> delegate);1529658035;Exports the documents;void executeExport(final Collection<MonitoringDoc> docs, final long startTimeNanos,_                           final ActionListener<MonitoringBulkResponse> delegate) {_            threadPool.executor(ThreadPool.Names.GENERIC).execute(new ActionRunnable<MonitoringBulkResponse>(delegate) {_                @Override_                protected void doRun() {_                    exportService.export(_                        docs,_                        ActionListener.wrap(_                            r -> listener.onResponse(response(startTimeNanos)),_                            this::onFailure_                        )_                    )__                }__                @Override_                public void onFailure(Exception e) {_                    listener.onResponse(response(startTimeNanos, e))__                }_            })__        };exports,the,documents;void,execute,export,final,collection,monitoring,doc,docs,final,long,start,time,nanos,final,action,listener,monitoring,bulk,response,delegate,thread,pool,executor,thread,pool,names,generic,execute,new,action,runnable,monitoring,bulk,response,delegate,override,protected,void,do,run,export,service,export,docs,action,listener,wrap,r,listener,on,response,response,start,time,nanos,this,on,failure,override,public,void,on,failure,exception,e,listener,on,response,response,start,time,nanos,e
TransportMonitoringBulkAction -> AsyncAction -> void executeExport(final Collection<MonitoringDoc> docs, final long startTimeNanos,                            final ActionListener<MonitoringBulkResponse> delegate);1529916082;Exports the documents;void executeExport(final Collection<MonitoringDoc> docs, final long startTimeNanos,_                           final ActionListener<MonitoringBulkResponse> delegate) {_            threadPool.executor(ThreadPool.Names.GENERIC).execute(new ActionRunnable<MonitoringBulkResponse>(delegate) {_                @Override_                protected void doRun() {_                    exportService.export(_                        docs,_                        ActionListener.wrap(_                            r -> listener.onResponse(response(startTimeNanos)),_                            this::onFailure_                        )_                    )__                }__                @Override_                public void onFailure(Exception e) {_                    listener.onResponse(response(startTimeNanos, e))__                }_            })__        };exports,the,documents;void,execute,export,final,collection,monitoring,doc,docs,final,long,start,time,nanos,final,action,listener,monitoring,bulk,response,delegate,thread,pool,executor,thread,pool,names,generic,execute,new,action,runnable,monitoring,bulk,response,delegate,override,protected,void,do,run,export,service,export,docs,action,listener,wrap,r,listener,on,response,response,start,time,nanos,this,on,failure,override,public,void,on,failure,exception,e,listener,on,response,response,start,time,nanos,e
TransportMonitoringBulkAction -> AsyncAction -> void executeExport(final Collection<MonitoringDoc> docs, final long startTimeNanos,                            final ActionListener<MonitoringBulkResponse> delegate);1541419698;Exports the documents;void executeExport(final Collection<MonitoringDoc> docs, final long startTimeNanos,_                           final ActionListener<MonitoringBulkResponse> delegate) {_            threadPool.executor(ThreadPool.Names.GENERIC).execute(new ActionRunnable<MonitoringBulkResponse>(delegate) {_                @Override_                protected void doRun() {_                    exportService.export(_                        docs,_                        ActionListener.wrap(_                            r -> listener.onResponse(response(startTimeNanos)),_                            this::onFailure_                        )_                    )__                }__                @Override_                public void onFailure(Exception e) {_                    listener.onResponse(response(startTimeNanos, e))__                }_            })__        };exports,the,documents;void,execute,export,final,collection,monitoring,doc,docs,final,long,start,time,nanos,final,action,listener,monitoring,bulk,response,delegate,thread,pool,executor,thread,pool,names,generic,execute,new,action,runnable,monitoring,bulk,response,delegate,override,protected,void,do,run,export,service,export,docs,action,listener,wrap,r,listener,on,response,response,start,time,nanos,this,on,failure,override,public,void,on,failure,exception,e,listener,on,response,response,start,time,nanos,e
TransportMonitoringBulkAction -> AsyncAction -> MonitoringDoc createMonitoringDoc(final MonitoringBulkDoc bulkDoc);1524684173;Create a {@link MonitoringDoc} from a {@link MonitoringBulkDoc}.__@param bulkDoc the {@link MonitoringBulkDoc}_@return the {@link MonitoringDoc} to export;MonitoringDoc createMonitoringDoc(final MonitoringBulkDoc bulkDoc) {_            final MonitoredSystem system = bulkDoc.getSystem()__            final String type = bulkDoc.getType()__            final String id = bulkDoc.getId()__            final long intervalMillis = bulkDoc.getIntervalMillis()__            final XContentType xContentType = bulkDoc.getXContentType()__            final BytesReference source = bulkDoc.getSource()___            final long timestamp__            if (bulkDoc.getTimestamp() != 0L) {_                timestamp = bulkDoc.getTimestamp()__            } else {_                timestamp = defaultTimestamp__            }__            return new BytesReferenceMonitoringDoc(defaultClusterUUID, timestamp, intervalMillis,_                                                   defaultNode, system, type, id, xContentType, source)__        };create,a,link,monitoring,doc,from,a,link,monitoring,bulk,doc,param,bulk,doc,the,link,monitoring,bulk,doc,return,the,link,monitoring,doc,to,export;monitoring,doc,create,monitoring,doc,final,monitoring,bulk,doc,bulk,doc,final,monitored,system,system,bulk,doc,get,system,final,string,type,bulk,doc,get,type,final,string,id,bulk,doc,get,id,final,long,interval,millis,bulk,doc,get,interval,millis,final,xcontent,type,x,content,type,bulk,doc,get,xcontent,type,final,bytes,reference,source,bulk,doc,get,source,final,long,timestamp,if,bulk,doc,get,timestamp,0l,timestamp,bulk,doc,get,timestamp,else,timestamp,default,timestamp,return,new,bytes,reference,monitoring,doc,default,cluster,uuid,timestamp,interval,millis,default,node,system,type,id,x,content,type,source
TransportMonitoringBulkAction -> AsyncAction -> MonitoringDoc createMonitoringDoc(final MonitoringBulkDoc bulkDoc);1529487105;Create a {@link MonitoringDoc} from a {@link MonitoringBulkDoc}.__@param bulkDoc the {@link MonitoringBulkDoc}_@return the {@link MonitoringDoc} to export;MonitoringDoc createMonitoringDoc(final MonitoringBulkDoc bulkDoc) {_            final MonitoredSystem system = bulkDoc.getSystem()__            final String type = bulkDoc.getType()__            final String id = bulkDoc.getId()__            final long intervalMillis = bulkDoc.getIntervalMillis()__            final XContentType xContentType = bulkDoc.getXContentType()__            final BytesReference source = bulkDoc.getSource()___            final long timestamp__            if (bulkDoc.getTimestamp() != 0L) {_                timestamp = bulkDoc.getTimestamp()__            } else {_                timestamp = defaultTimestamp__            }__            return new BytesReferenceMonitoringDoc(defaultClusterUUID, timestamp, intervalMillis,_                                                   defaultNode, system, type, id, xContentType, source)__        };create,a,link,monitoring,doc,from,a,link,monitoring,bulk,doc,param,bulk,doc,the,link,monitoring,bulk,doc,return,the,link,monitoring,doc,to,export;monitoring,doc,create,monitoring,doc,final,monitoring,bulk,doc,bulk,doc,final,monitored,system,system,bulk,doc,get,system,final,string,type,bulk,doc,get,type,final,string,id,bulk,doc,get,id,final,long,interval,millis,bulk,doc,get,interval,millis,final,xcontent,type,x,content,type,bulk,doc,get,xcontent,type,final,bytes,reference,source,bulk,doc,get,source,final,long,timestamp,if,bulk,doc,get,timestamp,0l,timestamp,bulk,doc,get,timestamp,else,timestamp,default,timestamp,return,new,bytes,reference,monitoring,doc,default,cluster,uuid,timestamp,interval,millis,default,node,system,type,id,x,content,type,source
TransportMonitoringBulkAction -> AsyncAction -> MonitoringDoc createMonitoringDoc(final MonitoringBulkDoc bulkDoc);1529658035;Create a {@link MonitoringDoc} from a {@link MonitoringBulkDoc}.__@param bulkDoc the {@link MonitoringBulkDoc}_@return the {@link MonitoringDoc} to export;MonitoringDoc createMonitoringDoc(final MonitoringBulkDoc bulkDoc) {_            final MonitoredSystem system = bulkDoc.getSystem()__            final String type = bulkDoc.getType()__            final String id = bulkDoc.getId()__            final long intervalMillis = bulkDoc.getIntervalMillis()__            final XContentType xContentType = bulkDoc.getXContentType()__            final BytesReference source = bulkDoc.getSource()___            final long timestamp__            if (bulkDoc.getTimestamp() != 0L) {_                timestamp = bulkDoc.getTimestamp()__            } else {_                timestamp = defaultTimestamp__            }__            return new BytesReferenceMonitoringDoc(defaultClusterUUID, timestamp, intervalMillis,_                                                   defaultNode, system, type, id, xContentType, source)__        };create,a,link,monitoring,doc,from,a,link,monitoring,bulk,doc,param,bulk,doc,the,link,monitoring,bulk,doc,return,the,link,monitoring,doc,to,export;monitoring,doc,create,monitoring,doc,final,monitoring,bulk,doc,bulk,doc,final,monitored,system,system,bulk,doc,get,system,final,string,type,bulk,doc,get,type,final,string,id,bulk,doc,get,id,final,long,interval,millis,bulk,doc,get,interval,millis,final,xcontent,type,x,content,type,bulk,doc,get,xcontent,type,final,bytes,reference,source,bulk,doc,get,source,final,long,timestamp,if,bulk,doc,get,timestamp,0l,timestamp,bulk,doc,get,timestamp,else,timestamp,default,timestamp,return,new,bytes,reference,monitoring,doc,default,cluster,uuid,timestamp,interval,millis,default,node,system,type,id,x,content,type,source
TransportMonitoringBulkAction -> AsyncAction -> MonitoringDoc createMonitoringDoc(final MonitoringBulkDoc bulkDoc);1529916082;Create a {@link MonitoringDoc} from a {@link MonitoringBulkDoc}.__@param bulkDoc the {@link MonitoringBulkDoc}_@return the {@link MonitoringDoc} to export;MonitoringDoc createMonitoringDoc(final MonitoringBulkDoc bulkDoc) {_            final MonitoredSystem system = bulkDoc.getSystem()__            final String type = bulkDoc.getType()__            final String id = bulkDoc.getId()__            final long intervalMillis = bulkDoc.getIntervalMillis()__            final XContentType xContentType = bulkDoc.getXContentType()__            final BytesReference source = bulkDoc.getSource()___            final long timestamp__            if (bulkDoc.getTimestamp() != 0L) {_                timestamp = bulkDoc.getTimestamp()__            } else {_                timestamp = defaultTimestamp__            }__            return new BytesReferenceMonitoringDoc(defaultClusterUUID, timestamp, intervalMillis,_                                                   defaultNode, system, type, id, xContentType, source)__        };create,a,link,monitoring,doc,from,a,link,monitoring,bulk,doc,param,bulk,doc,the,link,monitoring,bulk,doc,return,the,link,monitoring,doc,to,export;monitoring,doc,create,monitoring,doc,final,monitoring,bulk,doc,bulk,doc,final,monitored,system,system,bulk,doc,get,system,final,string,type,bulk,doc,get,type,final,string,id,bulk,doc,get,id,final,long,interval,millis,bulk,doc,get,interval,millis,final,xcontent,type,x,content,type,bulk,doc,get,xcontent,type,final,bytes,reference,source,bulk,doc,get,source,final,long,timestamp,if,bulk,doc,get,timestamp,0l,timestamp,bulk,doc,get,timestamp,else,timestamp,default,timestamp,return,new,bytes,reference,monitoring,doc,default,cluster,uuid,timestamp,interval,millis,default,node,system,type,id,x,content,type,source
TransportMonitoringBulkAction -> AsyncAction -> MonitoringDoc createMonitoringDoc(final MonitoringBulkDoc bulkDoc);1541419698;Create a {@link MonitoringDoc} from a {@link MonitoringBulkDoc}.__@param bulkDoc the {@link MonitoringBulkDoc}_@return the {@link MonitoringDoc} to export;MonitoringDoc createMonitoringDoc(final MonitoringBulkDoc bulkDoc) {_            final MonitoredSystem system = bulkDoc.getSystem()__            final String type = bulkDoc.getType()__            final String id = bulkDoc.getId()__            final long intervalMillis = bulkDoc.getIntervalMillis()__            final XContentType xContentType = bulkDoc.getXContentType()__            final BytesReference source = bulkDoc.getSource()___            final long timestamp__            if (bulkDoc.getTimestamp() != 0L) {_                timestamp = bulkDoc.getTimestamp()__            } else {_                timestamp = defaultTimestamp__            }__            return new BytesReferenceMonitoringDoc(defaultClusterUUID, timestamp, intervalMillis,_                                                   defaultNode, system, type, id, xContentType, source)__        };create,a,link,monitoring,doc,from,a,link,monitoring,bulk,doc,param,bulk,doc,the,link,monitoring,bulk,doc,return,the,link,monitoring,doc,to,export;monitoring,doc,create,monitoring,doc,final,monitoring,bulk,doc,bulk,doc,final,monitored,system,system,bulk,doc,get,system,final,string,type,bulk,doc,get,type,final,string,id,bulk,doc,get,id,final,long,interval,millis,bulk,doc,get,interval,millis,final,xcontent,type,x,content,type,bulk,doc,get,xcontent,type,final,bytes,reference,source,bulk,doc,get,source,final,long,timestamp,if,bulk,doc,get,timestamp,0l,timestamp,bulk,doc,get,timestamp,else,timestamp,default,timestamp,return,new,bytes,reference,monitoring,doc,default,cluster,uuid,timestamp,interval,millis,default,node,system,type,id,x,content,type,source
