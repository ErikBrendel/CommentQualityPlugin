# id;timestamp;commentText;codeText;commentWords;codeWords
Collector -> protected static long timestamp();1524684173;Returns a timestamp to use in {@link MonitoringDoc}__@return the timestamp;protected static long timestamp() {_        return System.currentTimeMillis()__    };returns,a,timestamp,to,use,in,link,monitoring,doc,return,the,timestamp;protected,static,long,timestamp,return,system,current,time,millis
Collector -> protected static long timestamp();1541092382;Returns a timestamp to use in {@link MonitoringDoc}__@return the timestamp;protected static long timestamp() {_        return System.currentTimeMillis()__    };returns,a,timestamp,to,use,in,link,monitoring,doc,return,the,timestamp;protected,static,long,timestamp,return,system,current,time,millis
Collector -> protected static long timestamp();1543343306;Returns a timestamp to use in {@link MonitoringDoc}__@return the timestamp;protected static long timestamp() {_        return System.currentTimeMillis()__    };returns,a,timestamp,to,use,in,link,monitoring,doc,return,the,timestamp;protected,static,long,timestamp,return,system,current,time,millis
Collector -> public String[] getCollectionIndices();1524684173;Returns the names of indices Monitoring collects data from.__@return a array of indices;public String[] getCollectionIndices() {_        final List<String> indices = clusterService.getClusterSettings().get(INDICES)__        assert indices != null__        if (indices.isEmpty()) {_            return Strings.EMPTY_ARRAY__        } else {_            return indices.toArray(new String[indices.size()])__        }_    };returns,the,names,of,indices,monitoring,collects,data,from,return,a,array,of,indices;public,string,get,collection,indices,final,list,string,indices,cluster,service,get,cluster,settings,get,indices,assert,indices,null,if,indices,is,empty,return,strings,else,return,indices,to,array,new,string,indices,size
Collector -> public String[] getCollectionIndices();1541092382;Returns the names of indices Monitoring collects data from.__@return a array of indices;public String[] getCollectionIndices() {_        final List<String> indices = clusterService.getClusterSettings().get(INDICES)__        assert indices != null__        if (indices.isEmpty()) {_            return Strings.EMPTY_ARRAY__        } else {_            return indices.toArray(new String[indices.size()])__        }_    };returns,the,names,of,indices,monitoring,collects,data,from,return,a,array,of,indices;public,string,get,collection,indices,final,list,string,indices,cluster,service,get,cluster,settings,get,indices,assert,indices,null,if,indices,is,empty,return,strings,else,return,indices,to,array,new,string,indices,size
Collector -> public String[] getCollectionIndices();1543343306;Returns the names of indices Monitoring collects data from.__@return a array of indices;public String[] getCollectionIndices() {_        final List<String> indices = clusterService.getClusterSettings().get(INDICES)__        assert indices != null__        if (indices.isEmpty()) {_            return Strings.EMPTY_ARRAY__        } else {_            return indices.toArray(new String[indices.size()])__        }_    };returns,the,names,of,indices,monitoring,collects,data,from,return,a,array,of,indices;public,string,get,collection,indices,final,list,string,indices,cluster,service,get,cluster,settings,get,indices,assert,indices,null,if,indices,is,empty,return,strings,else,return,indices,to,array,new,string,indices,size
Collector -> public static MonitoringDoc.Node convertNode(final long timestamp, final @Nullable DiscoveryNode node);1524684173;Creates a {@link MonitoringDoc.Node} from a {@link DiscoveryNode} and a timestamp, copying over the_required information.__@param timestamp the node's timestamp_@param node the {@link DiscoveryNode}__@return a {@link MonitoringDoc.Node} instance, or {@code null} if the given discovery node is null.;public static MonitoringDoc.Node convertNode(final long timestamp, final @Nullable DiscoveryNode node) {_        if (node == null) {_            return null__        }_        return new MonitoringDoc.Node(node.getId(),_                                      node.getHostName(),_                                      node.getAddress().toString(),_                                      node.getHostAddress(),_                                      node.getName(),_                                      timestamp)__    };creates,a,link,monitoring,doc,node,from,a,link,discovery,node,and,a,timestamp,copying,over,the,required,information,param,timestamp,the,node,s,timestamp,param,node,the,link,discovery,node,return,a,link,monitoring,doc,node,instance,or,code,null,if,the,given,discovery,node,is,null;public,static,monitoring,doc,node,convert,node,final,long,timestamp,final,nullable,discovery,node,node,if,node,null,return,null,return,new,monitoring,doc,node,node,get,id,node,get,host,name,node,get,address,to,string,node,get,host,address,node,get,name,timestamp
Collector -> public static MonitoringDoc.Node convertNode(final long timestamp, final @Nullable DiscoveryNode node);1541092382;Creates a {@link MonitoringDoc.Node} from a {@link DiscoveryNode} and a timestamp, copying over the_required information.__@param timestamp the node's timestamp_@param node the {@link DiscoveryNode}__@return a {@link MonitoringDoc.Node} instance, or {@code null} if the given discovery node is null.;public static MonitoringDoc.Node convertNode(final long timestamp, final @Nullable DiscoveryNode node) {_        if (node == null) {_            return null__        }_        return new MonitoringDoc.Node(node.getId(),_                                      node.getHostName(),_                                      node.getAddress().toString(),_                                      node.getHostAddress(),_                                      node.getName(),_                                      timestamp)__    };creates,a,link,monitoring,doc,node,from,a,link,discovery,node,and,a,timestamp,copying,over,the,required,information,param,timestamp,the,node,s,timestamp,param,node,the,link,discovery,node,return,a,link,monitoring,doc,node,instance,or,code,null,if,the,given,discovery,node,is,null;public,static,monitoring,doc,node,convert,node,final,long,timestamp,final,nullable,discovery,node,node,if,node,null,return,null,return,new,monitoring,doc,node,node,get,id,node,get,host,name,node,get,address,to,string,node,get,host,address,node,get,name,timestamp
Collector -> public static MonitoringDoc.Node convertNode(final long timestamp, final @Nullable DiscoveryNode node);1543343306;Creates a {@link MonitoringDoc.Node} from a {@link DiscoveryNode} and a timestamp, copying over the_required information.__@param timestamp the node's timestamp_@param node the {@link DiscoveryNode}__@return a {@link MonitoringDoc.Node} instance, or {@code null} if the given discovery node is null.;public static MonitoringDoc.Node convertNode(final long timestamp, final @Nullable DiscoveryNode node) {_        if (node == null) {_            return null__        }_        return new MonitoringDoc.Node(node.getId(),_                                      node.getHostName(),_                                      node.getAddress().toString(),_                                      node.getHostAddress(),_                                      node.getName(),_                                      timestamp)__    };creates,a,link,monitoring,doc,node,from,a,link,discovery,node,and,a,timestamp,copying,over,the,required,information,param,timestamp,the,node,s,timestamp,param,node,the,link,discovery,node,return,a,link,monitoring,doc,node,instance,or,code,null,if,the,given,discovery,node,is,null;public,static,monitoring,doc,node,convert,node,final,long,timestamp,final,nullable,discovery,node,node,if,node,null,return,null,return,new,monitoring,doc,node,node,get,id,node,get,host,name,node,get,address,to,string,node,get,host,address,node,get,name,timestamp
Collector -> protected boolean shouldCollect(final boolean isElectedMaster);1524684173;Indicates if the current collector is allowed to collect data__@param isElectedMaster true if the current local node is the elected master node;protected boolean shouldCollect(final boolean isElectedMaster) {_        if (licenseState.isMonitoringAllowed() == false) {_            logger.trace("collector [{}] can not collect data due to invalid license", name())__            return false__        }_        return true__    };indicates,if,the,current,collector,is,allowed,to,collect,data,param,is,elected,master,true,if,the,current,local,node,is,the,elected,master,node;protected,boolean,should,collect,final,boolean,is,elected,master,if,license,state,is,monitoring,allowed,false,logger,trace,collector,can,not,collect,data,due,to,invalid,license,name,return,false,return,true
Collector -> protected boolean shouldCollect(final boolean isElectedMaster);1541092382;Indicates if the current collector is allowed to collect data__@param isElectedMaster true if the current local node is the elected master node;protected boolean shouldCollect(final boolean isElectedMaster) {_        if (licenseState.isMonitoringAllowed() == false) {_            logger.trace("collector [{}] can not collect data due to invalid license", name())__            return false__        }_        return true__    };indicates,if,the,current,collector,is,allowed,to,collect,data,param,is,elected,master,true,if,the,current,local,node,is,the,elected,master,node;protected,boolean,should,collect,final,boolean,is,elected,master,if,license,state,is,monitoring,allowed,false,logger,trace,collector,can,not,collect,data,due,to,invalid,license,name,return,false,return,true
Collector -> protected boolean shouldCollect(final boolean isElectedMaster);1543343306;Indicates if the current collector is allowed to collect data__@param isElectedMaster true if the current local node is the elected master node;protected boolean shouldCollect(final boolean isElectedMaster) {_        if (licenseState.isMonitoringAllowed() == false) {_            logger.trace("collector [{}] can not collect data due to invalid license", name())__            return false__        }_        return true__    };indicates,if,the,current,collector,is,allowed,to,collect,data,param,is,elected,master,true,if,the,current,local,node,is,the,elected,master,node;protected,boolean,should,collect,final,boolean,is,elected,master,if,license,state,is,monitoring,allowed,false,logger,trace,collector,can,not,collect,data,due,to,invalid,license,name,return,false,return,true
Collector -> protected static String clusterUuid(final ClusterState clusterState);1524684173;Extracts the current cluster's UUID from a {@link ClusterState}__@param clusterState the {@link ClusterState}_@return the cluster's UUID;protected static String clusterUuid(final ClusterState clusterState) {_        return clusterState.metaData().clusterUUID()__    };extracts,the,current,cluster,s,uuid,from,a,link,cluster,state,param,cluster,state,the,link,cluster,state,return,the,cluster,s,uuid;protected,static,string,cluster,uuid,final,cluster,state,cluster,state,return,cluster,state,meta,data,cluster,uuid
Collector -> protected static String clusterUuid(final ClusterState clusterState);1541092382;Extracts the current cluster's UUID from a {@link ClusterState}__@param clusterState the {@link ClusterState}_@return the cluster's UUID;protected static String clusterUuid(final ClusterState clusterState) {_        return clusterState.metaData().clusterUUID()__    };extracts,the,current,cluster,s,uuid,from,a,link,cluster,state,param,cluster,state,the,link,cluster,state,return,the,cluster,s,uuid;protected,static,string,cluster,uuid,final,cluster,state,cluster,state,return,cluster,state,meta,data,cluster,uuid
Collector -> protected static String clusterUuid(final ClusterState clusterState);1543343306;Extracts the current cluster's UUID from a {@link ClusterState}__@param clusterState the {@link ClusterState}_@return the cluster's UUID;protected static String clusterUuid(final ClusterState clusterState) {_        return clusterState.metaData().clusterUUID()__    };extracts,the,current,cluster,s,uuid,from,a,link,cluster,state,param,cluster,state,the,link,cluster,state,return,the,cluster,s,uuid;protected,static,string,cluster,uuid,final,cluster,state,cluster,state,return,cluster,state,meta,data,cluster,uuid
Collector -> public TimeValue getCollectionTimeout();1524684173;Returns the value of the collection timeout configured for the current {@link Collector}.__@return the collection timeout, or {@code null} if the collector has not timeout defined.;public TimeValue getCollectionTimeout() {_        if (collectionTimeoutSetting == null) {_            return null__        }_        return clusterService.getClusterSettings().get(collectionTimeoutSetting)__    };returns,the,value,of,the,collection,timeout,configured,for,the,current,link,collector,return,the,collection,timeout,or,code,null,if,the,collector,has,not,timeout,defined;public,time,value,get,collection,timeout,if,collection,timeout,setting,null,return,null,return,cluster,service,get,cluster,settings,get,collection,timeout,setting
Collector -> public TimeValue getCollectionTimeout();1541092382;Returns the value of the collection timeout configured for the current {@link Collector}.__@return the collection timeout, or {@code null} if the collector has not timeout defined.;public TimeValue getCollectionTimeout() {_        if (collectionTimeoutSetting == null) {_            return null__        }_        return clusterService.getClusterSettings().get(collectionTimeoutSetting)__    };returns,the,value,of,the,collection,timeout,configured,for,the,current,link,collector,return,the,collection,timeout,or,code,null,if,the,collector,has,not,timeout,defined;public,time,value,get,collection,timeout,if,collection,timeout,setting,null,return,null,return,cluster,service,get,cluster,settings,get,collection,timeout,setting
Collector -> public TimeValue getCollectionTimeout();1543343306;Returns the value of the collection timeout configured for the current {@link Collector}.__@return the collection timeout, or {@code null} if the collector has not timeout defined.;public TimeValue getCollectionTimeout() {_        if (collectionTimeoutSetting == null) {_            return null__        }_        return clusterService.getClusterSettings().get(collectionTimeoutSetting)__    };returns,the,value,of,the,collection,timeout,configured,for,the,current,link,collector,return,the,collection,timeout,or,code,null,if,the,collector,has,not,timeout,defined;public,time,value,get,collection,timeout,if,collection,timeout,setting,null,return,null,return,cluster,service,get,cluster,settings,get,collection,timeout,setting
