# id;timestamp;commentText;codeText;commentWords;codeWords
VersionHttpResource -> public VersionHttpResource(final String resourceOwnerName, final Version minimumVersion);1524684173;Create a new {@link VersionHttpResource}.__@param resourceOwnerName The user-recognizable name._@param minimumVersion The minimum supported version of Elasticsearch.;public VersionHttpResource(final String resourceOwnerName, final Version minimumVersion) {_        super(resourceOwnerName)___        this.minimumVersion = Objects.requireNonNull(minimumVersion)__    };create,a,new,link,version,http,resource,param,resource,owner,name,the,user,recognizable,name,param,minimum,version,the,minimum,supported,version,of,elasticsearch;public,version,http,resource,final,string,resource,owner,name,final,version,minimum,version,super,resource,owner,name,this,minimum,version,objects,require,non,null,minimum,version
VersionHttpResource -> public VersionHttpResource(final String resourceOwnerName, final Version minimumVersion);1532434432;Create a new {@link VersionHttpResource}.__@param resourceOwnerName The user-recognizable name._@param minimumVersion The minimum supported version of Elasticsearch.;public VersionHttpResource(final String resourceOwnerName, final Version minimumVersion) {_        super(resourceOwnerName)___        this.minimumVersion = Objects.requireNonNull(minimumVersion)__    };create,a,new,link,version,http,resource,param,resource,owner,name,the,user,recognizable,name,param,minimum,version,the,minimum,supported,version,of,elasticsearch;public,version,http,resource,final,string,resource,owner,name,final,version,minimum,version,super,resource,owner,name,this,minimum,version,objects,require,non,null,minimum,version
VersionHttpResource -> public VersionHttpResource(final String resourceOwnerName, final Version minimumVersion);1540847035;Create a new {@link VersionHttpResource}.__@param resourceOwnerName The user-recognizable name._@param minimumVersion The minimum supported version of Elasticsearch.;public VersionHttpResource(final String resourceOwnerName, final Version minimumVersion) {_        super(resourceOwnerName)___        this.minimumVersion = Objects.requireNonNull(minimumVersion)__    };create,a,new,link,version,http,resource,param,resource,owner,name,the,user,recognizable,name,param,minimum,version,the,minimum,supported,version,of,elasticsearch;public,version,http,resource,final,string,resource,owner,name,final,version,minimum,version,super,resource,owner,name,this,minimum,version,objects,require,non,null,minimum,version
VersionHttpResource -> public VersionHttpResource(final String resourceOwnerName, final Version minimumVersion);1543346894;Create a new {@link VersionHttpResource}.__@param resourceOwnerName The user-recognizable name._@param minimumVersion The minimum supported version of Elasticsearch.;public VersionHttpResource(final String resourceOwnerName, final Version minimumVersion) {_        super(resourceOwnerName)___        this.minimumVersion = Objects.requireNonNull(minimumVersion)__    };create,a,new,link,version,http,resource,param,resource,owner,name,the,user,recognizable,name,param,minimum,version,the,minimum,supported,version,of,elasticsearch;public,version,http,resource,final,string,resource,owner,name,final,version,minimum,version,super,resource,owner,name,this,minimum,version,objects,require,non,null,minimum,version
VersionHttpResource -> public VersionHttpResource(final String resourceOwnerName, final Version minimumVersion);1543473699;Create a new {@link VersionHttpResource}.__@param resourceOwnerName The user-recognizable name._@param minimumVersion The minimum supported version of Elasticsearch.;public VersionHttpResource(final String resourceOwnerName, final Version minimumVersion) {_        super(resourceOwnerName)___        this.minimumVersion = Objects.requireNonNull(minimumVersion)__    };create,a,new,link,version,http,resource,param,resource,owner,name,the,user,recognizable,name,param,minimum,version,the,minimum,supported,version,of,elasticsearch;public,version,http,resource,final,string,resource,owner,name,final,version,minimum,version,super,resource,owner,name,this,minimum,version,objects,require,non,null,minimum,version
VersionHttpResource -> @Override     protected void doCheckAndPublish(final RestClient client, final ActionListener<Boolean> listener);1543346894;Verify that the minimum {@link Version} is supported on the remote cluster._<p>_If it does not, then there is nothing that can be done except wait until it does. There is no publishing aspect to this operation.;@Override_    protected void doCheckAndPublish(final RestClient client, final ActionListener<Boolean> listener) {_        logger.trace("checking [{}] to ensure that it supports the minimum version [{}]", resourceOwnerName, minimumVersion)___        final Request request = new Request("GET", "/")__        request.addParameter("filter_path", "version.number")___        client.performRequestAsync(request, new ResponseListener() {_            @Override_            public void onSuccess(final Response response) {_                try {_                    _                    listener.onResponse(validateVersion(response))__                } catch (Exception e) {_                    onFailure(e)__                }_            }__            @Override_            public void onFailure(final Exception exception) {_                logger.error((Supplier<?>) () ->_                             new ParameterizedMessage("failed to verify minimum version [{}] on the [{}] monitoring cluster",_                                                      minimumVersion, resourceOwnerName),_                             exception)___                listener.onFailure(exception)__            }_        })__    };verify,that,the,minimum,link,version,is,supported,on,the,remote,cluster,p,if,it,does,not,then,there,is,nothing,that,can,be,done,except,wait,until,it,does,there,is,no,publishing,aspect,to,this,operation;override,protected,void,do,check,and,publish,final,rest,client,client,final,action,listener,boolean,listener,logger,trace,checking,to,ensure,that,it,supports,the,minimum,version,resource,owner,name,minimum,version,final,request,request,new,request,get,request,add,parameter,version,number,client,perform,request,async,request,new,response,listener,override,public,void,on,success,final,response,response,try,listener,on,response,validate,version,response,catch,exception,e,on,failure,e,override,public,void,on,failure,final,exception,exception,logger,error,supplier,new,parameterized,message,failed,to,verify,minimum,version,on,the,monitoring,cluster,minimum,version,resource,owner,name,exception,listener,on,failure,exception
VersionHttpResource -> @Override     protected void doCheckAndPublish(final RestClient client, final ActionListener<Boolean> listener);1543473699;Verify that the minimum {@link Version} is supported on the remote cluster._<p>_If it does not, then there is nothing that can be done except wait until it does. There is no publishing aspect to this operation.;@Override_    protected void doCheckAndPublish(final RestClient client, final ActionListener<Boolean> listener) {_        logger.trace("checking [{}] to ensure that it supports the minimum version [{}]", resourceOwnerName, minimumVersion)___        final Request request = new Request("GET", "/")__        request.addParameter("filter_path", "version.number")___        client.performRequestAsync(request, new ResponseListener() {_            @Override_            public void onSuccess(final Response response) {_                try {_                    _                    listener.onResponse(validateVersion(response))__                } catch (Exception e) {_                    onFailure(e)__                }_            }__            @Override_            public void onFailure(final Exception exception) {_                logger.error((Supplier<?>) () ->_                             new ParameterizedMessage("failed to verify minimum version [{}] on the [{}] monitoring cluster",_                                                      minimumVersion, resourceOwnerName),_                             exception)___                listener.onFailure(exception)__            }_        })__    };verify,that,the,minimum,link,version,is,supported,on,the,remote,cluster,p,if,it,does,not,then,there,is,nothing,that,can,be,done,except,wait,until,it,does,there,is,no,publishing,aspect,to,this,operation;override,protected,void,do,check,and,publish,final,rest,client,client,final,action,listener,boolean,listener,logger,trace,checking,to,ensure,that,it,supports,the,minimum,version,resource,owner,name,minimum,version,final,request,request,new,request,get,request,add,parameter,version,number,client,perform,request,async,request,new,response,listener,override,public,void,on,success,final,response,response,try,listener,on,response,validate,version,response,catch,exception,e,on,failure,e,override,public,void,on,failure,final,exception,exception,logger,error,supplier,new,parameterized,message,failed,to,verify,minimum,version,on,the,monitoring,cluster,minimum,version,resource,owner,name,exception,listener,on,failure,exception
VersionHttpResource -> private boolean validateVersion(final Response response) throws IOException;1524684173;Ensure that the {@code response} contains a {@link Version} that is {@linkplain Version#onOrAfter(Version) on or after} the_{@link #minimumVersion}.__@param response The response to parse._@return {@code true} if the remote cluster is running a supported version._@throws NullPointerException if the response is malformed._@throws ClassCastException if the response is malformed._@throws IOException if any parsing issue occurs.;private boolean validateVersion(final Response response) throws IOException {_        Map<String, Object> map = XContentHelper.convertToMap(JsonXContent.jsonXContent, response.getEntity().getContent(), false)__        _        @SuppressWarnings("unchecked")_        final String versionNumber = (String) ((Map<String, Object>) map.get("version")).get("number")__        final Version version = Version.fromString(versionNumber)___        if (version.onOrAfter(minimumVersion)) {_            logger.debug("version [{}] >= [{}] and supported for [{}]", version, minimumVersion, resourceOwnerName)__            return true__        } else {_            logger.error("version [{}] < [{}] and NOT supported for [{}]", version, minimumVersion, resourceOwnerName)__            return false__        }_    };ensure,that,the,code,response,contains,a,link,version,that,is,linkplain,version,on,or,after,version,on,or,after,the,link,minimum,version,param,response,the,response,to,parse,return,code,true,if,the,remote,cluster,is,running,a,supported,version,throws,null,pointer,exception,if,the,response,is,malformed,throws,class,cast,exception,if,the,response,is,malformed,throws,ioexception,if,any,parsing,issue,occurs;private,boolean,validate,version,final,response,response,throws,ioexception,map,string,object,map,xcontent,helper,convert,to,map,json,xcontent,json,xcontent,response,get,entity,get,content,false,suppress,warnings,unchecked,final,string,version,number,string,map,string,object,map,get,version,get,number,final,version,version,version,from,string,version,number,if,version,on,or,after,minimum,version,logger,debug,version,and,supported,for,version,minimum,version,resource,owner,name,return,true,else,logger,error,version,and,not,supported,for,version,minimum,version,resource,owner,name,return,false
VersionHttpResource -> private boolean validateVersion(final Response response) throws IOException;1532434432;Ensure that the {@code response} contains a {@link Version} that is {@linkplain Version#onOrAfter(Version) on or after} the_{@link #minimumVersion}.__@param response The response to parse._@return {@code true} if the remote cluster is running a supported version._@throws NullPointerException if the response is malformed._@throws ClassCastException if the response is malformed._@throws IOException if any parsing issue occurs.;private boolean validateVersion(final Response response) throws IOException {_        Map<String, Object> map = XContentHelper.convertToMap(JsonXContent.jsonXContent, response.getEntity().getContent(), false)__        _        @SuppressWarnings("unchecked")_        final String versionNumber = (String) ((Map<String, Object>) map.get("version")).get("number")__        final Version version = Version.fromString(versionNumber)___        if (version.onOrAfter(minimumVersion)) {_            logger.debug("version [{}] >= [{}] and supported for [{}]", version, minimumVersion, resourceOwnerName)__            return true__        } else {_            logger.error("version [{}] < [{}] and NOT supported for [{}]", version, minimumVersion, resourceOwnerName)__            return false__        }_    };ensure,that,the,code,response,contains,a,link,version,that,is,linkplain,version,on,or,after,version,on,or,after,the,link,minimum,version,param,response,the,response,to,parse,return,code,true,if,the,remote,cluster,is,running,a,supported,version,throws,null,pointer,exception,if,the,response,is,malformed,throws,class,cast,exception,if,the,response,is,malformed,throws,ioexception,if,any,parsing,issue,occurs;private,boolean,validate,version,final,response,response,throws,ioexception,map,string,object,map,xcontent,helper,convert,to,map,json,xcontent,json,xcontent,response,get,entity,get,content,false,suppress,warnings,unchecked,final,string,version,number,string,map,string,object,map,get,version,get,number,final,version,version,version,from,string,version,number,if,version,on,or,after,minimum,version,logger,debug,version,and,supported,for,version,minimum,version,resource,owner,name,return,true,else,logger,error,version,and,not,supported,for,version,minimum,version,resource,owner,name,return,false
VersionHttpResource -> private boolean validateVersion(final Response response) throws IOException;1540847035;Ensure that the {@code response} contains a {@link Version} that is {@linkplain Version#onOrAfter(Version) on or after} the_{@link #minimumVersion}.__@param response The response to parse._@return {@code true} if the remote cluster is running a supported version._@throws NullPointerException if the response is malformed._@throws ClassCastException if the response is malformed._@throws IOException if any parsing issue occurs.;private boolean validateVersion(final Response response) throws IOException {_        Map<String, Object> map = XContentHelper.convertToMap(JsonXContent.jsonXContent, response.getEntity().getContent(), false)__        _        @SuppressWarnings("unchecked")_        final String versionNumber = (String) ((Map<String, Object>) map.get("version")).get("number")__        final Version version = Version.fromString(versionNumber)___        if (version.onOrAfter(minimumVersion)) {_            logger.debug("version [{}] >= [{}] and supported for [{}]", version, minimumVersion, resourceOwnerName)__            return true__        } else {_            logger.error("version [{}] < [{}] and NOT supported for [{}]", version, minimumVersion, resourceOwnerName)__            return false__        }_    };ensure,that,the,code,response,contains,a,link,version,that,is,linkplain,version,on,or,after,version,on,or,after,the,link,minimum,version,param,response,the,response,to,parse,return,code,true,if,the,remote,cluster,is,running,a,supported,version,throws,null,pointer,exception,if,the,response,is,malformed,throws,class,cast,exception,if,the,response,is,malformed,throws,ioexception,if,any,parsing,issue,occurs;private,boolean,validate,version,final,response,response,throws,ioexception,map,string,object,map,xcontent,helper,convert,to,map,json,xcontent,json,xcontent,response,get,entity,get,content,false,suppress,warnings,unchecked,final,string,version,number,string,map,string,object,map,get,version,get,number,final,version,version,version,from,string,version,number,if,version,on,or,after,minimum,version,logger,debug,version,and,supported,for,version,minimum,version,resource,owner,name,return,true,else,logger,error,version,and,not,supported,for,version,minimum,version,resource,owner,name,return,false
VersionHttpResource -> private boolean validateVersion(final Response response) throws IOException;1543346894;Ensure that the {@code response} contains a {@link Version} that is {@linkplain Version#onOrAfter(Version) on or after} the_{@link #minimumVersion}.__@param response The response to parse._@return {@code true} if the remote cluster is running a supported version._@throws NullPointerException if the response is malformed._@throws ClassCastException if the response is malformed._@throws IOException if any parsing issue occurs.;private boolean validateVersion(final Response response) throws IOException {_        Map<String, Object> map = XContentHelper.convertToMap(JsonXContent.jsonXContent, response.getEntity().getContent(), false)__        _        @SuppressWarnings("unchecked")_        final String versionNumber = (String) ((Map<String, Object>) map.get("version")).get("number")__        final Version version = Version.fromString(versionNumber)___        if (version.onOrAfter(minimumVersion)) {_            logger.debug("version [{}] >= [{}] and supported for [{}]", version, minimumVersion, resourceOwnerName)__            return true__        } else {_            logger.error("version [{}] < [{}] and NOT supported for [{}]", version, minimumVersion, resourceOwnerName)__            return false__        }_    };ensure,that,the,code,response,contains,a,link,version,that,is,linkplain,version,on,or,after,version,on,or,after,the,link,minimum,version,param,response,the,response,to,parse,return,code,true,if,the,remote,cluster,is,running,a,supported,version,throws,null,pointer,exception,if,the,response,is,malformed,throws,class,cast,exception,if,the,response,is,malformed,throws,ioexception,if,any,parsing,issue,occurs;private,boolean,validate,version,final,response,response,throws,ioexception,map,string,object,map,xcontent,helper,convert,to,map,json,xcontent,json,xcontent,response,get,entity,get,content,false,suppress,warnings,unchecked,final,string,version,number,string,map,string,object,map,get,version,get,number,final,version,version,version,from,string,version,number,if,version,on,or,after,minimum,version,logger,debug,version,and,supported,for,version,minimum,version,resource,owner,name,return,true,else,logger,error,version,and,not,supported,for,version,minimum,version,resource,owner,name,return,false
VersionHttpResource -> private boolean validateVersion(final Response response) throws IOException;1543473699;Ensure that the {@code response} contains a {@link Version} that is {@linkplain Version#onOrAfter(Version) on or after} the_{@link #minimumVersion}.__@param response The response to parse._@return {@code true} if the remote cluster is running a supported version._@throws NullPointerException if the response is malformed._@throws ClassCastException if the response is malformed._@throws IOException if any parsing issue occurs.;private boolean validateVersion(final Response response) throws IOException {_        Map<String, Object> map = XContentHelper.convertToMap(JsonXContent.jsonXContent, response.getEntity().getContent(), false)__        _        @SuppressWarnings("unchecked")_        final String versionNumber = (String) ((Map<String, Object>) map.get("version")).get("number")__        final Version version = Version.fromString(_            versionNumber_                .replace("-SNAPSHOT", "")_                .replaceFirst("-(alpha\\d+|beta\\d+|rc\\d+)", "")_        )___        if (version.onOrAfter(minimumVersion)) {_            logger.debug("version [{}] >= [{}] and supported for [{}]", version, minimumVersion, resourceOwnerName)__            return true__        } else {_            logger.error("version [{}] < [{}] and NOT supported for [{}]", version, minimumVersion, resourceOwnerName)__            return false__        }_    };ensure,that,the,code,response,contains,a,link,version,that,is,linkplain,version,on,or,after,version,on,or,after,the,link,minimum,version,param,response,the,response,to,parse,return,code,true,if,the,remote,cluster,is,running,a,supported,version,throws,null,pointer,exception,if,the,response,is,malformed,throws,class,cast,exception,if,the,response,is,malformed,throws,ioexception,if,any,parsing,issue,occurs;private,boolean,validate,version,final,response,response,throws,ioexception,map,string,object,map,xcontent,helper,convert,to,map,json,xcontent,json,xcontent,response,get,entity,get,content,false,suppress,warnings,unchecked,final,string,version,number,string,map,string,object,map,get,version,get,number,final,version,version,version,from,string,version,number,replace,snapshot,replace,first,alpha,d,beta,d,rc,d,if,version,on,or,after,minimum,version,logger,debug,version,and,supported,for,version,minimum,version,resource,owner,name,return,true,else,logger,error,version,and,not,supported,for,version,minimum,version,resource,owner,name,return,false
VersionHttpResource -> @Override     protected boolean doCheckAndPublish(final RestClient client);1524684173;Verify that the minimum {@link Version} is supported on the remote cluster._<p>_If it does not, then there is nothing that can be done except wait until it does. There is no publishing aspect to this operation.;@Override_    protected boolean doCheckAndPublish(final RestClient client) {_        logger.trace("checking [{}] to ensure that it supports the minimum version [{}]", resourceOwnerName, minimumVersion)___        try {_            return validateVersion(client.performRequest("GET", "/", PARAMETERS))__        } catch (IOException | RuntimeException e) {_            logger.error(_                    (Supplier<?>)() ->_                        new ParameterizedMessage("failed to verify minimum version [{}] on the [{}] monitoring cluster",_                                                 minimumVersion, resourceOwnerName),_                    e)__        }__        return false__    };verify,that,the,minimum,link,version,is,supported,on,the,remote,cluster,p,if,it,does,not,then,there,is,nothing,that,can,be,done,except,wait,until,it,does,there,is,no,publishing,aspect,to,this,operation;override,protected,boolean,do,check,and,publish,final,rest,client,client,logger,trace,checking,to,ensure,that,it,supports,the,minimum,version,resource,owner,name,minimum,version,try,return,validate,version,client,perform,request,get,parameters,catch,ioexception,runtime,exception,e,logger,error,supplier,new,parameterized,message,failed,to,verify,minimum,version,on,the,monitoring,cluster,minimum,version,resource,owner,name,e,return,false
VersionHttpResource -> @Override     protected boolean doCheckAndPublish(final RestClient client);1532434432;Verify that the minimum {@link Version} is supported on the remote cluster._<p>_If it does not, then there is nothing that can be done except wait until it does. There is no publishing aspect to this operation.;@Override_    protected boolean doCheckAndPublish(final RestClient client) {_        logger.trace("checking [{}] to ensure that it supports the minimum version [{}]", resourceOwnerName, minimumVersion)___        try {_            Request request = new Request("GET", "/")__            request.addParameter("filter_path", "version.number")__            return validateVersion(client.performRequest(request))__        } catch (IOException | RuntimeException e) {_            logger.error(_                    (Supplier<?>)() ->_                        new ParameterizedMessage("failed to verify minimum version [{}] on the [{}] monitoring cluster",_                                                 minimumVersion, resourceOwnerName),_                    e)__        }__        return false__    };verify,that,the,minimum,link,version,is,supported,on,the,remote,cluster,p,if,it,does,not,then,there,is,nothing,that,can,be,done,except,wait,until,it,does,there,is,no,publishing,aspect,to,this,operation;override,protected,boolean,do,check,and,publish,final,rest,client,client,logger,trace,checking,to,ensure,that,it,supports,the,minimum,version,resource,owner,name,minimum,version,try,request,request,new,request,get,request,add,parameter,version,number,return,validate,version,client,perform,request,request,catch,ioexception,runtime,exception,e,logger,error,supplier,new,parameterized,message,failed,to,verify,minimum,version,on,the,monitoring,cluster,minimum,version,resource,owner,name,e,return,false
VersionHttpResource -> @Override     protected boolean doCheckAndPublish(final RestClient client);1540847035;Verify that the minimum {@link Version} is supported on the remote cluster._<p>_If it does not, then there is nothing that can be done except wait until it does. There is no publishing aspect to this operation.;@Override_    protected boolean doCheckAndPublish(final RestClient client) {_        logger.trace("checking [{}] to ensure that it supports the minimum version [{}]", resourceOwnerName, minimumVersion)___        try {_            Request request = new Request("GET", "/")__            request.addParameter("filter_path", "version.number")__            return validateVersion(client.performRequest(request))__        } catch (IOException | RuntimeException e) {_            logger.error(_                    (Supplier<?>)() ->_                        new ParameterizedMessage("failed to verify minimum version [{}] on the [{}] monitoring cluster",_                                                 minimumVersion, resourceOwnerName),_                    e)__        }__        return false__    };verify,that,the,minimum,link,version,is,supported,on,the,remote,cluster,p,if,it,does,not,then,there,is,nothing,that,can,be,done,except,wait,until,it,does,there,is,no,publishing,aspect,to,this,operation;override,protected,boolean,do,check,and,publish,final,rest,client,client,logger,trace,checking,to,ensure,that,it,supports,the,minimum,version,resource,owner,name,minimum,version,try,request,request,new,request,get,request,add,parameter,version,number,return,validate,version,client,perform,request,request,catch,ioexception,runtime,exception,e,logger,error,supplier,new,parameterized,message,failed,to,verify,minimum,version,on,the,monitoring,cluster,minimum,version,resource,owner,name,e,return,false
