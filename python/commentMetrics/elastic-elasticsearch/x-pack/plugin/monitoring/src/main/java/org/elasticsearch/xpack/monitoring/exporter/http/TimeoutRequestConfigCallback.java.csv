commented;modifiers;parameterAmount;loc;comment;code
true;;0;4;/**  * Get the initial connection timeout.  *  * @return Can be {@code null} for default (1 second).  */ ;/**  * Get the initial connection timeout.  *  * @return Can be {@code null} for default (1 second).  */ @Nullable TimeValue getConnectTimeout() {     return connectTimeout. }
true;;0;4;/**  * Get the socket timeout.  *  * @return Can be {@code null} for default (10 seconds).  */ ;/**  * Get the socket timeout.  *  * @return Can be {@code null} for default (10 seconds).  */ @Nullable TimeValue getSocketTimeout() {     return socketTimeout. }
true;public;1;11;/**  * Sets the {@linkplain Builder#setConnectTimeout(int) connect timeout} and {@linkplain Builder#setSocketTimeout(int) socket timeout}.  *  * @param requestConfigBuilder The request to configure.  * @return Always {@code requestConfigBuilder}.  */ ;/**  * Sets the {@linkplain Builder#setConnectTimeout(int) connect timeout} and {@linkplain Builder#setSocketTimeout(int) socket timeout}.  *  * @param requestConfigBuilder The request to configure.  * @return Always {@code requestConfigBuilder}.  */ @Override public Builder customizeRequestConfig(Builder requestConfigBuilder) {     if (connectTimeout != null) {         requestConfigBuilder.setConnectTimeout((int) connectTimeout.millis()).     }     if (socketTimeout != null) {         requestConfigBuilder.setSocketTimeout((int) socketTimeout.millis()).     }     return requestConfigBuilder. }
