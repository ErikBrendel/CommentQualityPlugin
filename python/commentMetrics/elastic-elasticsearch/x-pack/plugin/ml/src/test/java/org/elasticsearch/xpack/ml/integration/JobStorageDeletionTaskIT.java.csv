commented;modifiers;parameterAmount;loc;comment;code
false;public;0;25;;public void testUnrelatedIndexNotTouched() throws Exception {     internalCluster().ensureAtLeastNumDataNodes(1).     ensureStableCluster(1).     client().admin().indices().prepareCreate(UNRELATED_INDEX).get().     enableIndexBlock(UNRELATED_INDEX, IndexMetaData.SETTING_READ_ONLY).     Job.Builder job = createJob("delete-aliases-test-job", new ByteSizeValue(2, ByteSizeUnit.MB)).     PutJobAction.Request putJobRequest = new PutJobAction.Request(job).     client().execute(PutJobAction.INSTANCE, putJobRequest).actionGet().     OpenJobAction.Request openJobRequest = new OpenJobAction.Request(job.getId()).     client().execute(OpenJobAction.INSTANCE, openJobRequest).actionGet().     awaitJobOpenedAndAssigned(job.getId(), null).     DeleteJobAction.Request deleteJobRequest = new DeleteJobAction.Request(job.getId()).     deleteJobRequest.setForce(true).     client().execute(DeleteJobAction.INSTANCE, deleteJobRequest).actionGet().     // If the deletion of aliases touches the unrelated index with the block     // then the line above will throw a ClusterBlockException     disableIndexBlock(UNRELATED_INDEX, IndexMetaData.SETTING_READ_ONLY). }
