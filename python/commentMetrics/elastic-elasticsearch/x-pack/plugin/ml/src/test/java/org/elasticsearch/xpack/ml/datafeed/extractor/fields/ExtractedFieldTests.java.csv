commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;public void testValueGivenDocValue() {     SearchHit hit = new SearchHitBuilder(42).addField("single", "bar").addField("array", Arrays.asList("a", "b")).build().     ExtractedField single = ExtractedField.newField("single", ExtractedField.ExtractionMethod.DOC_VALUE).     assertThat(single.value(hit), equalTo(new String[] { "bar" })).     ExtractedField array = ExtractedField.newField("array", ExtractedField.ExtractionMethod.DOC_VALUE).     assertThat(array.value(hit), equalTo(new String[] { "a", "b" })).     ExtractedField missing = ExtractedField.newField("missing", ExtractedField.ExtractionMethod.DOC_VALUE).     assertThat(missing.value(hit), equalTo(new Object[0])). }
false;public;0;12;;public void testValueGivenScriptField() {     SearchHit hit = new SearchHitBuilder(42).addField("single", "bar").addField("array", Arrays.asList("a", "b")).build().     ExtractedField single = ExtractedField.newField("single", ExtractedField.ExtractionMethod.SCRIPT_FIELD).     assertThat(single.value(hit), equalTo(new String[] { "bar" })).     ExtractedField array = ExtractedField.newField("array", ExtractedField.ExtractionMethod.SCRIPT_FIELD).     assertThat(array.value(hit), equalTo(new String[] { "a", "b" })).     ExtractedField missing = ExtractedField.newField("missing", ExtractedField.ExtractionMethod.SCRIPT_FIELD).     assertThat(missing.value(hit), equalTo(new Object[0])). }
false;public;0;12;;public void testValueGivenSource() {     SearchHit hit = new SearchHitBuilder(42).setSource("{\"single\":\"bar\",\"array\":[\"a\",\"b\"]}").build().     ExtractedField single = ExtractedField.newField("single", ExtractedField.ExtractionMethod.SOURCE).     assertThat(single.value(hit), equalTo(new String[] { "bar" })).     ExtractedField array = ExtractedField.newField("array", ExtractedField.ExtractionMethod.SOURCE).     assertThat(array.value(hit), equalTo(new String[] { "a", "b" })).     ExtractedField missing = ExtractedField.newField("missing", ExtractedField.ExtractionMethod.SOURCE).     assertThat(missing.value(hit), equalTo(new Object[0])). }
false;public;0;6;;public void testValueGivenNestedSource() {     SearchHit hit = new SearchHitBuilder(42).setSource("{\"level_1\":{\"level_2\":{\"foo\":\"bar\"}}}").build().     ExtractedField nested = ExtractedField.newField("alias", "level_1.level_2.foo", ExtractedField.ExtractionMethod.SOURCE).     assertThat(nested.value(hit), equalTo(new String[] { "bar" })). }
false;public;0;4;;public void testValueGivenSourceAndHitWithNoSource() {     ExtractedField missing = ExtractedField.newField("missing", ExtractedField.ExtractionMethod.SOURCE).     assertThat(missing.value(new SearchHitBuilder(3).build()), equalTo(new Object[0])). }
false;public;0;13;;public void testValueGivenMismatchingMethod() {     SearchHit hit = new SearchHitBuilder(42).addField("a", 1).setSource("{\"b\":2}").build().     ExtractedField invalidA = ExtractedField.newField("a", ExtractedField.ExtractionMethod.SOURCE).     assertThat(invalidA.value(hit), equalTo(new Object[0])).     ExtractedField validA = ExtractedField.newField("a", ExtractedField.ExtractionMethod.DOC_VALUE).     assertThat(validA.value(hit), equalTo(new Integer[] { 1 })).     ExtractedField invalidB = ExtractedField.newField("b", ExtractedField.ExtractionMethod.DOC_VALUE).     assertThat(invalidB.value(hit), equalTo(new Object[0])).     ExtractedField validB = ExtractedField.newField("b", ExtractedField.ExtractionMethod.SOURCE).     assertThat(validB.value(hit), equalTo(new Integer[] { 2 })). }
false;public;0;9;;public void testValueGivenEmptyHit() {     SearchHit hit = new SearchHitBuilder(42).build().     ExtractedField docValue = ExtractedField.newField("a", ExtractedField.ExtractionMethod.SOURCE).     assertThat(docValue.value(hit), equalTo(new Object[0])).     ExtractedField sourceField = ExtractedField.newField("b", ExtractedField.ExtractionMethod.DOC_VALUE).     assertThat(sourceField.value(hit), equalTo(new Object[0])). }
false;public;0;3;;public void testNewTimeFieldGivenSource() {     expectThrows(IllegalArgumentException.class, () -> ExtractedField.newTimeField("time", ExtractedField.ExtractionMethod.SOURCE)). }
false;public;0;6;;public void testValueGivenStringTimeField() {     final long millis = randomLong().     final SearchHit hit = new SearchHitBuilder(randomInt()).addField("time", Long.toString(millis)).build().     final ExtractedField timeField = ExtractedField.newTimeField("time", ExtractedField.ExtractionMethod.DOC_VALUE).     assertThat(timeField.value(hit), equalTo(new Object[] { millis })). }
false;public;0;6;;public void testValueGivenLongTimeField() {     final long millis = randomLong().     final SearchHit hit = new SearchHitBuilder(randomInt()).addField("time", millis).build().     final ExtractedField timeField = ExtractedField.newTimeField("time", ExtractedField.ExtractionMethod.DOC_VALUE).     assertThat(timeField.value(hit), equalTo(new Object[] { millis })). }
false;public;0;7;;public void testValueGivenPre6xTimeField() {     // Prior to 6.x, timestamps were simply `long` milliseconds-past-the-epoch values     final long millis = randomLong().     final SearchHit hit = new SearchHitBuilder(randomInt()).addField("time", millis).build().     final ExtractedField timeField = ExtractedField.newTimeField("time", ExtractedField.ExtractionMethod.DOC_VALUE).     assertThat(timeField.value(hit), equalTo(new Object[] { millis })). }
false;public;0;6;;public void testValueGivenUnknownFormatTimeField() {     final SearchHit hit = new SearchHitBuilder(randomInt()).addField("time", new Object()).build().     final ExtractedField timeField = ExtractedField.newTimeField("time", ExtractedField.ExtractionMethod.DOC_VALUE).     assertThat(expectThrows(IllegalStateException.class, () -> timeField.value(hit)).getMessage(), startsWith("Unexpected value for a time field")). }
false;public;0;15;;public void testAliasVersusName() {     SearchHit hit = new SearchHitBuilder(42).addField("a", 1).addField("b", 2).build().     ExtractedField field = ExtractedField.newField("a", "a", ExtractedField.ExtractionMethod.DOC_VALUE).     assertThat(field.getAlias(), equalTo("a")).     assertThat(field.getName(), equalTo("a")).     assertThat(field.value(hit), equalTo(new Integer[] { 1 })).     hit = new SearchHitBuilder(42).addField("a", 1).addField("b", 2).build().     field = ExtractedField.newField("a", "b", ExtractedField.ExtractionMethod.DOC_VALUE).     assertThat(field.getAlias(), equalTo("a")).     assertThat(field.getName(), equalTo("b")).     assertThat(field.value(hit), equalTo(new Integer[] { 2 })). }
false;public;0;9;;public void testGetDocValueFormat() {     for (ExtractedField.ExtractionMethod method : ExtractedField.ExtractionMethod.values()) {         assertThat(ExtractedField.newField("f", method).getDocValueFormat(), equalTo(null)).     }     assertThat(ExtractedField.newTimeField("doc_value_time", ExtractedField.ExtractionMethod.DOC_VALUE).getDocValueFormat(), equalTo("epoch_millis")).     assertThat(ExtractedField.newTimeField("source_time", ExtractedField.ExtractionMethod.SCRIPT_FIELD).getDocValueFormat(), equalTo("epoch_millis")). }
