commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;// CSV - no need to check NDJSON or XML because they come earlier in the order we check formats public void testCanCreateCsvFromSampleGivenCsv() {     assertTrue(csvFactory.canCreateFromSample(explanation, CSV_SAMPLE)). }
false;public;0;4;;public void testCanCreateCsvFromSampleGivenTsv() {     assertFalse(csvFactory.canCreateFromSample(explanation, TSV_SAMPLE)). }
false;public;0;4;;public void testCanCreateCsvFromSampleGivenSemiColonDelimited() {     assertFalse(csvFactory.canCreateFromSample(explanation, SEMI_COLON_DELIMITED_SAMPLE)). }
false;public;0;4;;public void testCanCreateCsvFromSampleGivenPipeDelimited() {     assertFalse(csvFactory.canCreateFromSample(explanation, PIPE_DELIMITED_SAMPLE)). }
false;public;0;4;;public void testCanCreateCsvFromSampleGivenText() {     assertFalse(csvFactory.canCreateFromSample(explanation, TEXT_SAMPLE)). }
false;public;0;4;;// TSV - no need to check NDJSON, XML or CSV because they come earlier in the order we check formats public void testCanCreateTsvFromSampleGivenTsv() {     assertTrue(tsvFactory.canCreateFromSample(explanation, TSV_SAMPLE)). }
false;public;0;4;;public void testCanCreateTsvFromSampleGivenSemiColonDelimited() {     assertFalse(tsvFactory.canCreateFromSample(explanation, SEMI_COLON_DELIMITED_SAMPLE)). }
false;public;0;4;;public void testCanCreateTsvFromSampleGivenPipeDelimited() {     assertFalse(tsvFactory.canCreateFromSample(explanation, PIPE_DELIMITED_SAMPLE)). }
false;public;0;4;;public void testCanCreateTsvFromSampleGivenText() {     assertFalse(tsvFactory.canCreateFromSample(explanation, TEXT_SAMPLE)). }
false;public;0;4;;// Semi-colon delimited - no need to check NDJSON, XML, CSV or TSV because they come earlier in the order we check formats public void testCanCreateSemiColonDelimitedFromSampleGivenSemiColonDelimited() {     assertTrue(semiColonDelimitedfactory.canCreateFromSample(explanation, SEMI_COLON_DELIMITED_SAMPLE)). }
false;public;0;4;;public void testCanCreateSemiColonDelimitedFromSampleGivenPipeDelimited() {     assertFalse(semiColonDelimitedfactory.canCreateFromSample(explanation, PIPE_DELIMITED_SAMPLE)). }
false;public;0;4;;public void testCanCreateSemiColonDelimitedFromSampleGivenText() {     assertFalse(semiColonDelimitedfactory.canCreateFromSample(explanation, TEXT_SAMPLE)). }
false;public;0;4;;// Pipe delimited - no need to check NDJSON, XML, CSV, TSV or semi-colon delimited // values because they come earlier in the order we check formats public void testCanCreatePipeDelimitedFromSampleGivenPipeDelimited() {     assertTrue(pipeDelimitedFactory.canCreateFromSample(explanation, PIPE_DELIMITED_SAMPLE)). }
false;public;0;4;;public void testCanCreatePipeDelimitedFromSampleGivenText() {     assertFalse(pipeDelimitedFactory.canCreateFromSample(explanation, TEXT_SAMPLE)). }
