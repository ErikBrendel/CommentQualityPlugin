commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;public void testDoubleQuoteIfNotAlphaNumeric() {     assertEquals("foo2", MlStrings.doubleQuoteIfNotAlphaNumeric("foo2")).     assertEquals("\"fo o\"", MlStrings.doubleQuoteIfNotAlphaNumeric("fo o")).     assertEquals("\" \"", MlStrings.doubleQuoteIfNotAlphaNumeric(" ")).     assertEquals("\"ba\\\"r\\\"\"", MlStrings.doubleQuoteIfNotAlphaNumeric("ba\"r\"")). }
false;public;0;13;;public void testIsValidId() {     assertThat(MlStrings.isValidId("1_-.a"), is(true)).     assertThat(MlStrings.isValidId("b.-_3"), is(true)).     assertThat(MlStrings.isValidId("a-b.c_d"), is(true)).     assertThat(MlStrings.isValidId("a1_-."), is(false)).     assertThat(MlStrings.isValidId("-.a1_"), is(false)).     assertThat(MlStrings.isValidId(".a1_-"), is(false)).     assertThat(MlStrings.isValidId("_-.a1"), is(false)).     assertThat(MlStrings.isValidId("A"), is(false)).     assertThat(MlStrings.isValidId("!afafd"), is(false)).     assertThat(MlStrings.isValidId("_all"), is(false)). }
false;public;0;6;;public void testGetParentField() {     assertThat(MlStrings.getParentField(null), is(nullValue())).     assertThat(MlStrings.getParentField("foo"), equalTo("foo")).     assertThat(MlStrings.getParentField("foo.bar"), equalTo("foo")).     assertThat(MlStrings.getParentField("x.y.z"), equalTo("x.y")). }
false;public;0;4;;public void testHasValidLengthForId() {     assertThat(MlStrings.hasValidLengthForId(randomAlphaOfLength(64)), is(true)).     assertThat(MlStrings.hasValidLengthForId(randomAlphaOfLength(65)), is(false)). }
