commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;9;;@Override protected Settings nodeSettings() {     Settings.Builder newSettings = Settings.builder().     newSettings.put(super.nodeSettings()).     newSettings.put(XPackSettings.MONITORING_ENABLED.getKey(), false).     newSettings.put(XPackSettings.SECURITY_ENABLED.getKey(), false).     newSettings.put(XPackSettings.WATCHER_ENABLED.getKey(), false).     return newSettings.build(). }
false;protected;0;4;;@Override protected Collection<Class<? extends Plugin>> getPlugins() {     return pluginList(LocalStateMachineLearning.class). }
false;public;0;4;;@Before public void createComponents() throws Exception {     waitForMlTemplates(). }
false;public;0;8;;public void testNotCreatedWhenNoOtherMlIndices() {     // Ask a few times to increase the chance of failure if the .ml-annotations index is created when no other ML index exists     for (int i = 0. i < 10. ++i) {         assertFalse(annotationsIndexExists()).         assertEquals(0, numberOfAnnotationsAliases()).     } }
false;public;0;13;;public void testCreatedWhenAfterOtherMlIndex() throws Exception {     Auditor auditor = new Auditor(client(), "node_1").     auditor.info("whatever", "blah").     // Creating a document in the .ml-notifications index should cause .ml-annotations     // to be created, as it should get created as soon as any other ML index exists     assertBusy(() -> {         assertTrue(annotationsIndexExists()).         assertEquals(2, numberOfAnnotationsAliases()).     }). }
false;private;0;3;;private boolean annotationsIndexExists() {     return client().admin().indices().prepareExists(AnnotationIndex.INDEX_NAME).get().isExists(). }
false;private;0;11;;private int numberOfAnnotationsAliases() {     int count = 0.     ImmutableOpenMap<String, List<AliasMetaData>> aliases = client().admin().indices().prepareGetAliases(AnnotationIndex.READ_ALIAS_NAME, AnnotationIndex.WRITE_ALIAS_NAME).get().getAliases().     if (aliases != null) {         for (ObjectObjectCursor<String, List<AliasMetaData>> entry : aliases) {             count += entry.value.size().         }     }     return count. }
