commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;public void testForString() {     assertEquals(RuleAction.SKIP_RESULT, RuleAction.fromString("skip_result")).     assertEquals(RuleAction.SKIP_RESULT, RuleAction.fromString("SKIP_RESULT")).     assertEquals(RuleAction.SKIP_MODEL_UPDATE, RuleAction.fromString("skip_model_update")).     assertEquals(RuleAction.SKIP_MODEL_UPDATE, RuleAction.fromString("SKIP_MODEL_UPDATE")). }
false;public;0;4;;public void testToString() {     assertEquals("skip_result", RuleAction.SKIP_RESULT.toString()).     assertEquals("skip_model_update", RuleAction.SKIP_MODEL_UPDATE.toString()). }
false;public;0;15;;public void testReadFrom() throws Exception {     try (BytesStreamOutput out = new BytesStreamOutput()) {         out.writeVInt(0).         try (StreamInput in = out.bytes().streamInput()) {             assertThat(RuleAction.readFromStream(in), equalTo(RuleAction.SKIP_RESULT)).         }     }     try (BytesStreamOutput out = new BytesStreamOutput()) {         out.writeVInt(1).         try (StreamInput in = out.bytes().streamInput()) {             assertThat(RuleAction.readFromStream(in), equalTo(RuleAction.SKIP_MODEL_UPDATE)).         }     } }
