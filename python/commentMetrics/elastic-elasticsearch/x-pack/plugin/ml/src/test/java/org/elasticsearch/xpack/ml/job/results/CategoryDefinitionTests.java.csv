commented;modifiers;parameterAmount;loc;comment;code
false;public;1;12;;public CategoryDefinition createTestInstance(String jobId) {     CategoryDefinition categoryDefinition = new CategoryDefinition(jobId).     categoryDefinition.setCategoryId(randomLong()).     categoryDefinition.setTerms(randomAlphaOfLength(10)).     categoryDefinition.setRegex(randomAlphaOfLength(10)).     categoryDefinition.setMaxMatchingLength(randomLong()).     categoryDefinition.setExamples(Arrays.asList(generateRandomStringArray(10, 10, false))).     if (randomBoolean()) {         categoryDefinition.setGrokPattern(randomAlphaOfLength(50)).     }     return categoryDefinition. }
false;protected;0;4;;@Override protected CategoryDefinition createTestInstance() {     return createTestInstance(randomAlphaOfLength(10)). }
false;protected;0;4;;@Override protected Writeable.Reader<CategoryDefinition> instanceReader() {     return CategoryDefinition::new. }
false;protected;1;4;;@Override protected CategoryDefinition doParseInstance(XContentParser parser) {     return CategoryDefinition.STRICT_PARSER.apply(parser, null). }
false;public;0;5;;public void testEquals_GivenSameObject() {     CategoryDefinition category = new CategoryDefinition(randomAlphaOfLength(10)).     assertTrue(category.equals(category)). }
false;public;0;5;;public void testEquals_GivenObjectOfDifferentClass() {     CategoryDefinition category = new CategoryDefinition(randomAlphaOfLength(10)).     assertFalse(category.equals("a string")). }
false;public;0;8;;public void testEquals_GivenEqualCategoryDefinitions() {     CategoryDefinition category1 = createFullyPopulatedCategoryDefinition().     CategoryDefinition category2 = createFullyPopulatedCategoryDefinition().     assertTrue(category1.equals(category2)).     assertTrue(category2.equals(category1)).     assertEquals(category1.hashCode(), category2.hashCode()). }
false;public;0;8;;public void testEquals_GivenCategoryDefinitionsWithDifferentIds() {     CategoryDefinition category1 = createFullyPopulatedCategoryDefinition().     CategoryDefinition category2 = createFullyPopulatedCategoryDefinition().     category2.setCategoryId(category1.getCategoryId() + 1).     assertFalse(category1.equals(category2)).     assertFalse(category2.equals(category1)). }
false;public;0;8;;public void testEquals_GivenCategoryDefinitionsWithDifferentTerms() {     CategoryDefinition category1 = createFullyPopulatedCategoryDefinition().     CategoryDefinition category2 = createFullyPopulatedCategoryDefinition().     category2.setTerms(category1.getTerms() + " additional").     assertFalse(category1.equals(category2)).     assertFalse(category2.equals(category1)). }
false;public;0;8;;public void testEquals_GivenCategoryDefinitionsWithDifferentRegex() {     CategoryDefinition category1 = createFullyPopulatedCategoryDefinition().     CategoryDefinition category2 = createFullyPopulatedCategoryDefinition().     category2.setRegex(category1.getRegex() + ".*additional.*").     assertFalse(category1.equals(category2)).     assertFalse(category2.equals(category1)). }
false;public;0;8;;public void testEquals_GivenCategoryDefinitionsWithDifferentMaxMatchingLength() {     CategoryDefinition category1 = createFullyPopulatedCategoryDefinition().     CategoryDefinition category2 = createFullyPopulatedCategoryDefinition().     category2.setMaxMatchingLength(category1.getMaxMatchingLength() + 1).     assertFalse(category1.equals(category2)).     assertFalse(category2.equals(category1)). }
false;public;0;8;;public void testEquals_GivenCategoryDefinitionsWithDifferentExamples() {     CategoryDefinition category1 = createFullyPopulatedCategoryDefinition().     CategoryDefinition category2 = createFullyPopulatedCategoryDefinition().     category2.addExample("additional").     assertFalse(category1.equals(category2)).     assertFalse(category2.equals(category1)). }
false;public;0;5;;public void testId() {     CategoryDefinition category = new CategoryDefinition("job-foo").     category.setCategoryId(5L).     assertEquals("job-foo_category_definition_5", category.getId()). }
false;private,static;0;10;;private static CategoryDefinition createFullyPopulatedCategoryDefinition() {     CategoryDefinition category = new CategoryDefinition("jobName").     category.setCategoryId(42).     category.setTerms("foo bar").     category.setRegex(".*?foo.*?bar.*").     category.setMaxMatchingLength(120L).     category.addExample("foo").     category.addExample("bar").     return category. }
false;public;0;9;;public void testStrictParser() throws IOException {     String json = "{\"job_id\":\"job_1\", \"foo\":\"bar\"}".     try (XContentParser parser = createParser(JsonXContent.jsonXContent, json)) {         IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> CategoryDefinition.STRICT_PARSER.apply(parser, null)).         assertThat(e.getMessage(), containsString("unknown field [foo]")).     } }
false;public;0;6;;public void testLenientParser() throws IOException {     String json = "{\"job_id\":\"job_1\", \"foo\":\"bar\"}".     try (XContentParser parser = createParser(JsonXContent.jsonXContent, json)) {         CategoryDefinition.LENIENT_PARSER.apply(parser, null).     } }
