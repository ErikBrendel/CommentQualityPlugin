commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;public void testModelSnapshots_GivenNegativeFrom() {     IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> new GetModelSnapshotsAction.Request("foo", null).setPageParams(new PageParams(-5, 10))).     assertEquals("Parameter [from] cannot be < 0", e.getMessage()). }
false;public;0;5;;public void testModelSnapshots_GivenNegativeSize() {     IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> new GetModelSnapshotsAction.Request("foo", null).setPageParams(new PageParams(10, -5))).     assertEquals("Parameter [size] cannot be < 0", e.getMessage()). }
false;public;0;12;;public void testModelSnapshots_clearQuantiles() {     ModelSnapshot m1 = new ModelSnapshot.Builder("jobId").setQuantiles(new Quantiles("jobId", new Date(), "quantileState")).build().     ModelSnapshot m2 = new ModelSnapshot.Builder("jobId").build().     QueryPage<ModelSnapshot> page = new QueryPage<>(Arrays.asList(m1, m2), 2, new ParseField("field")).     page = TransportGetModelSnapshotsAction.clearQuantiles(page).     assertEquals(2, page.results().size()).     for (ModelSnapshot modelSnapshot : page.results()) {         assertNull(modelSnapshot.getQuantiles()).     } }
