commented;modifiers;parameterAmount;loc;comment;code
false;public;0;26;;public void testPrepareRequest() throws Exception {     RestStartDatafeedAction action = new RestStartDatafeedAction(Settings.EMPTY, mock(RestController.class)).     Map<String, String> params = new HashMap<>().     params.put("start", "not-a-date").     params.put("datafeed_id", "foo-datafeed").     RestRequest restRequest1 = new FakeRestRequest.Builder(NamedXContentRegistry.EMPTY).withParams(params).build().     ElasticsearchParseException e = expectThrows(ElasticsearchParseException.class, () -> action.prepareRequest(restRequest1, mock(NodeClient.class))).     assertEquals("Query param [start] with value [not-a-date] cannot be parsed as a date or " + "converted to a number (epoch).", e.getMessage()).     params = new HashMap<>().     params.put("start", "now").     params.put("end", "not-a-date").     params.put("datafeed_id", "foo-datafeed").     RestRequest restRequest2 = new FakeRestRequest.Builder(NamedXContentRegistry.EMPTY).withParams(params).build().     e = expectThrows(ElasticsearchParseException.class, () -> action.prepareRequest(restRequest2, mock(NodeClient.class))).     assertEquals("Query param [end] with value [not-a-date] cannot be parsed as a date or " + "converted to a number (epoch).", e.getMessage()). }
