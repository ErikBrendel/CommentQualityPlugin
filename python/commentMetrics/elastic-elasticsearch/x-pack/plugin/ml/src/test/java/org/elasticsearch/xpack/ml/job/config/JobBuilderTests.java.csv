commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;54;;@Override protected Job.Builder createTestInstance() {     Job.Builder builder = new Job.Builder().     if (randomBoolean()) {         builder.setId(randomValidJobId()).     }     if (randomBoolean()) {         builder.setDescription(randomAlphaOfLength(10)).     }     if (randomBoolean()) {         builder.setCreateTime(new Date(randomNonNegativeLong())).     }     if (randomBoolean()) {         builder.setFinishedTime(new Date(randomNonNegativeLong())).     }     if (randomBoolean()) {         builder.setAnalysisConfig(AnalysisConfigTests.createRandomized()).     }     if (randomBoolean()) {         builder.setAnalysisLimits(AnalysisLimitsTests.createRandomized()).     }     if (randomBoolean()) {         DataDescription.Builder dataDescription = new DataDescription.Builder().         dataDescription.setFormat(randomFrom(DataDescription.DataFormat.values())).         builder.setDataDescription(dataDescription).     }     if (randomBoolean()) {         builder.setModelPlotConfig(new ModelPlotConfig(randomBoolean(), randomAlphaOfLength(10))).     }     if (randomBoolean()) {         builder.setRenormalizationWindowDays(randomNonNegativeLong()).     }     if (randomBoolean()) {         builder.setBackgroundPersistInterval(TimeValue.timeValueHours(randomIntBetween(1, 24))).     }     if (randomBoolean()) {         builder.setModelSnapshotRetentionDays(randomNonNegativeLong()).     }     if (randomBoolean()) {         builder.setResultsRetentionDays(randomNonNegativeLong()).     }     if (randomBoolean()) {         builder.setCustomSettings(Collections.singletonMap(randomAlphaOfLength(10), randomAlphaOfLength(10))).     }     if (randomBoolean()) {         builder.setModelSnapshotId(randomAlphaOfLength(10)).     }     if (randomBoolean()) {         builder.setResultsIndexName(randomValidJobId()).     }     return builder. }
false;protected;0;4;;@Override protected Writeable.Reader<Job.Builder> instanceReader() {     return Job.Builder::new. }
false;protected;1;4;;@Override protected Job.Builder doParseInstance(XContentParser parser) {     return Job.STRICT_PARSER.apply(parser, null). }
