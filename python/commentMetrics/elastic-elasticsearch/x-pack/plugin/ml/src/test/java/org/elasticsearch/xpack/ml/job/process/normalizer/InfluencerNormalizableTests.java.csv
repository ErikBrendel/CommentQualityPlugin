commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Before public void setUpInfluencer() {     influencer = new Influencer("foo", "airline", "AAL", new Date(), 600).     influencer.setInfluencerScore(1.0).     influencer.setInitialInfluencerScore(2.0).     influencer.setProbability(0.05). }
false;public;0;3;;public void testIsContainerOnly() {     assertFalse(new InfluencerNormalizable(influencer, INDEX_NAME).isContainerOnly()). }
false;public;0;3;;public void testGetLevel() {     assertEquals(Level.INFLUENCER, new InfluencerNormalizable(influencer, INDEX_NAME).getLevel()). }
false;public;0;3;;public void testGetPartitionFieldName() {     assertNull(new InfluencerNormalizable(influencer, INDEX_NAME).getPartitionFieldName()). }
false;public;0;3;;public void testGetPartitionFieldValue() {     assertNull(new InfluencerNormalizable(influencer, INDEX_NAME).getPartitionFieldValue()). }
false;public;0;3;;public void testGetPersonFieldName() {     assertEquals("airline", new InfluencerNormalizable(influencer, INDEX_NAME).getPersonFieldName()). }
false;public;0;3;;public void testGetPersonFieldValue() {     assertEquals("AAL", new InfluencerNormalizable(influencer, INDEX_NAME).getPersonFieldValue()). }
false;public;0;3;;public void testGetFunctionName() {     assertNull(new InfluencerNormalizable(influencer, INDEX_NAME).getFunctionName()). }
false;public;0;3;;public void testGetValueFieldName() {     assertNull(new InfluencerNormalizable(influencer, INDEX_NAME).getValueFieldName()). }
false;public;0;3;;public void testGetProbability() {     assertEquals(0.05, new InfluencerNormalizable(influencer, INDEX_NAME).getProbability(), EPSILON). }
false;public;0;3;;public void testGetNormalizedScore() {     assertEquals(1.0, new InfluencerNormalizable(influencer, INDEX_NAME).getNormalizedScore(), EPSILON). }
false;public;0;8;;public void testSetNormalizedScore() {     InfluencerNormalizable normalizable = new InfluencerNormalizable(influencer, INDEX_NAME).     normalizable.setNormalizedScore(99.0).     assertEquals(99.0, normalizable.getNormalizedScore(), EPSILON).     assertEquals(99.0, influencer.getInfluencerScore(), EPSILON). }
false;public;0;3;;public void testGetChildrenTypes() {     assertTrue(new InfluencerNormalizable(influencer, INDEX_NAME).getChildrenTypes().isEmpty()). }
false;public;0;4;;public void testGetChildren_ByType() {     expectThrows(UnsupportedOperationException.class, () -> new InfluencerNormalizable(influencer, INDEX_NAME).getChildren(Normalizable.ChildType.BUCKET_INFLUENCER)). }
false;public;0;3;;public void testGetChildren() {     assertTrue(new InfluencerNormalizable(influencer, INDEX_NAME).getChildren().isEmpty()). }
false;public;0;4;;public void testSetMaxChildrenScore() {     expectThrows(UnsupportedOperationException.class, () -> new InfluencerNormalizable(influencer, INDEX_NAME).setMaxChildrenScore(Normalizable.ChildType.BUCKET_INFLUENCER, 42.0)). }
false;public;0;3;;public void testSetParentScore() {     expectThrows(IllegalStateException.class, () -> new InfluencerNormalizable(influencer, INDEX_NAME).setParentScore(42.0)). }
false;public;0;6;;public void testResetBigChangeFlag() {     InfluencerNormalizable normalizable = new InfluencerNormalizable(influencer, INDEX_NAME).     normalizable.raiseBigChangeFlag().     normalizable.resetBigChangeFlag().     assertFalse(normalizable.hadBigNormalizedUpdate()). }
false;public;0;6;;public void testRaiseBigChangeFlag() {     InfluencerNormalizable normalizable = new InfluencerNormalizable(influencer, INDEX_NAME).     normalizable.resetBigChangeFlag().     normalizable.raiseBigChangeFlag().     assertTrue(normalizable.hadBigNormalizedUpdate()). }
