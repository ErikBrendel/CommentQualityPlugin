# id;timestamp;commentText;codeText;commentWords;codeWords
MockClientBuilder -> @SuppressWarnings("unchecked")     public MockClientBuilder prepareSearch(String indexName, List<BytesReference> docs);1545155131;Creates a {@link SearchResponse} with a {@link SearchHit} for each element of {@code docs}_@param indexName Index being searched_@param docs Returned in the SearchResponse_@return this;@SuppressWarnings("unchecked")_    public MockClientBuilder prepareSearch(String indexName, List<BytesReference> docs) {_        SearchRequestBuilder builder = mock(SearchRequestBuilder.class)__        when(builder.setIndicesOptions(any())).thenReturn(builder)__        when(builder.setQuery(any())).thenReturn(builder)__        when(builder.setSource(any())).thenReturn(builder)__        when(builder.setSize(anyInt())).thenReturn(builder)__        SearchRequest request = new SearchRequest(indexName)__        when(builder.request()).thenReturn(request)___        when(client.prepareSearch(eq(indexName))).thenReturn(builder)___        SearchHit hits [] = new SearchHit[docs.size()]__        for (int i=0_ i<docs.size()_ i++) {_            SearchHit hit = new SearchHit(10)__            hit.sourceRef(docs.get(i))__            hits[i] = hit__        }__        SearchResponse response = mock(SearchResponse.class)__        SearchHits searchHits = new SearchHits(hits, new TotalHits(hits.length, TotalHits.Relation.EQUAL_TO), 0.0f)__        when(response.getHits()).thenReturn(searchHits)___        doAnswer(new Answer<Void>() {_            @Override_            public Void answer(InvocationOnMock invocationOnMock) {_                ActionListener<SearchResponse> listener = (ActionListener<SearchResponse>) invocationOnMock.getArguments()[1]__                listener.onResponse(response)__                return null__            }_        }).when(client).search(eq(request), any())___        return this__    };creates,a,link,search,response,with,a,link,search,hit,for,each,element,of,code,docs,param,index,name,index,being,searched,param,docs,returned,in,the,search,response,return,this;suppress,warnings,unchecked,public,mock,client,builder,prepare,search,string,index,name,list,bytes,reference,docs,search,request,builder,builder,mock,search,request,builder,class,when,builder,set,indices,options,any,then,return,builder,when,builder,set,query,any,then,return,builder,when,builder,set,source,any,then,return,builder,when,builder,set,size,any,int,then,return,builder,search,request,request,new,search,request,index,name,when,builder,request,then,return,request,when,client,prepare,search,eq,index,name,then,return,builder,search,hit,hits,new,search,hit,docs,size,for,int,i,0,i,docs,size,i,search,hit,hit,new,search,hit,10,hit,source,ref,docs,get,i,hits,i,hit,search,response,response,mock,search,response,class,search,hits,search,hits,new,search,hits,hits,new,total,hits,hits,length,total,hits,relation,0,0f,when,response,get,hits,then,return,search,hits,do,answer,new,answer,void,override,public,void,answer,invocation,on,mock,invocation,on,mock,action,listener,search,response,listener,action,listener,search,response,invocation,on,mock,get,arguments,1,listener,on,response,response,return,null,when,client,search,eq,request,any,return,this
MockClientBuilder -> @SuppressWarnings("unchecked")     public MockClientBuilder prepareSearch(String indexName, List<BytesReference> docs);1547215421;Creates a {@link SearchResponse} with a {@link SearchHit} for each element of {@code docs}_@param indexName Index being searched_@param docs Returned in the SearchResponse_@return this;@SuppressWarnings("unchecked")_    public MockClientBuilder prepareSearch(String indexName, List<BytesReference> docs) {_        SearchRequestBuilder builder = mock(SearchRequestBuilder.class)__        when(builder.setIndicesOptions(any())).thenReturn(builder)__        when(builder.setQuery(any())).thenReturn(builder)__        when(builder.setSource(any())).thenReturn(builder)__        when(builder.setSize(anyInt())).thenReturn(builder)__        SearchRequest request = new SearchRequest(indexName)__        when(builder.request()).thenReturn(request)___        when(client.prepareSearch(eq(indexName))).thenReturn(builder)___        SearchHit hits [] = new SearchHit[docs.size()]__        for (int i=0_ i<docs.size()_ i++) {_            SearchHit hit = new SearchHit(10)__            hit.sourceRef(docs.get(i))__            hits[i] = hit__        }__        SearchResponse response = mock(SearchResponse.class)__        SearchHits searchHits = new SearchHits(hits, new TotalHits(hits.length, TotalHits.Relation.EQUAL_TO), 0.0f)__        when(response.getHits()).thenReturn(searchHits)___        doAnswer(new Answer<Void>() {_            @Override_            public Void answer(InvocationOnMock invocationOnMock) {_                ActionListener<SearchResponse> listener = (ActionListener<SearchResponse>) invocationOnMock.getArguments()[1]__                listener.onResponse(response)__                return null__            }_        }).when(client).search(eq(request), any())___        return this__    };creates,a,link,search,response,with,a,link,search,hit,for,each,element,of,code,docs,param,index,name,index,being,searched,param,docs,returned,in,the,search,response,return,this;suppress,warnings,unchecked,public,mock,client,builder,prepare,search,string,index,name,list,bytes,reference,docs,search,request,builder,builder,mock,search,request,builder,class,when,builder,set,indices,options,any,then,return,builder,when,builder,set,query,any,then,return,builder,when,builder,set,source,any,then,return,builder,when,builder,set,size,any,int,then,return,builder,search,request,request,new,search,request,index,name,when,builder,request,then,return,request,when,client,prepare,search,eq,index,name,then,return,builder,search,hit,hits,new,search,hit,docs,size,for,int,i,0,i,docs,size,i,search,hit,hit,new,search,hit,10,hit,source,ref,docs,get,i,hits,i,hit,search,response,response,mock,search,response,class,search,hits,search,hits,new,search,hits,hits,new,total,hits,hits,length,total,hits,relation,0,0f,when,response,get,hits,then,return,search,hits,do,answer,new,answer,void,override,public,void,answer,invocation,on,mock,invocation,on,mock,action,listener,search,response,listener,action,listener,search,response,invocation,on,mock,get,arguments,1,listener,on,response,response,return,null,when,client,search,eq,request,any,return,this
