commented;modifiers;parameterAmount;loc;comment;code
false;public;0;20;;public void testStartProcessCommand() throws IOException {     NamedPipeHelper namedPipeHelper = Mockito.mock(NamedPipeHelper.class).     ByteArrayInputStream logStream = new ByteArrayInputStream(new byte[1]).     when(namedPipeHelper.openNamedPipeInputStream(contains("log"), any(Duration.class))).thenReturn(logStream).     ByteArrayOutputStream commandStream = new ByteArrayOutputStream().     when(namedPipeHelper.openNamedPipeOutputStream(contains("command"), any(Duration.class))).thenReturn(commandStream).     List<String> command = new ArrayList<>().     command.add("my_process").     command.add("--arg1").     command.add("--arg2=42").     command.add("--arg3=something with spaces").     NativeController nativeController = new NativeController(TestEnvironment.newEnvironment(settings), namedPipeHelper).     nativeController.startProcess(command).     assertEquals("start\tmy_process\t--arg1\t--arg2=42\t--arg3=something with spaces\n", commandStream.toString(StandardCharsets.UTF_8.name())). }
false;public;0;17;;public void testGetNativeCodeInfo() throws IOException, TimeoutException {     NamedPipeHelper namedPipeHelper = Mockito.mock(NamedPipeHelper.class).     ByteArrayInputStream logStream = new ByteArrayInputStream(TEST_MESSAGE.getBytes(StandardCharsets.UTF_8)).     when(namedPipeHelper.openNamedPipeInputStream(contains("log"), any(Duration.class))).thenReturn(logStream).     ByteArrayOutputStream commandStream = new ByteArrayOutputStream().     when(namedPipeHelper.openNamedPipeOutputStream(contains("command"), any(Duration.class))).thenReturn(commandStream).     NativeController nativeController = new NativeController(TestEnvironment.newEnvironment(settings), namedPipeHelper).     nativeController.tailLogsInThread().     Map<String, Object> nativeCodeInfo = nativeController.getNativeCodeInfo().     assertNotNull(nativeCodeInfo).     assertEquals(2, nativeCodeInfo.size()).     assertEquals("6.0.0-alpha1-SNAPSHOT", nativeCodeInfo.get("version")).     assertEquals("a0d6ef8819418c", nativeCodeInfo.get("build_hash")). }
false;public;0;19;;public void testControllerDeath() throws Exception {     NamedPipeHelper namedPipeHelper = Mockito.mock(NamedPipeHelper.class).     ByteArrayInputStream logStream = new ByteArrayInputStream(TEST_MESSAGE.getBytes(StandardCharsets.UTF_8)).     when(namedPipeHelper.openNamedPipeInputStream(contains("log"), any(Duration.class))).thenReturn(logStream).     ByteArrayOutputStream commandStream = new ByteArrayOutputStream().     when(namedPipeHelper.openNamedPipeOutputStream(contains("command"), any(Duration.class))).thenReturn(commandStream).     NativeController nativeController = new NativeController(TestEnvironment.newEnvironment(settings), namedPipeHelper).     nativeController.tailLogsInThread().     // As soon as the log stream ends startProcess should think the native controller has died     assertBusy(() -> {         ElasticsearchException e = expectThrows(ElasticsearchException.class, () -> nativeController.startProcess(Collections.singletonList("my process"))).         assertEquals("Cannot start process [my process]: native controller process has stopped", e.getMessage()).     }). }
