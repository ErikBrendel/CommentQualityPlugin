# id;timestamp;commentText;codeText;commentWords;codeWords
DataCountsReporter -> public void reportLatestTimeIncrementalStats(long latestRecordTimeMs);1524684173;Update only the incremental stats with the newest record time__@param latestRecordTimeMs latest record time as epoch millis;public void reportLatestTimeIncrementalStats(long latestRecordTimeMs) {_        incrementalRecordStats.setLatestRecordTimeStamp(new Date(latestRecordTimeMs))__    };update,only,the,incremental,stats,with,the,newest,record,time,param,latest,record,time,ms,latest,record,time,as,epoch,millis;public,void,report,latest,time,incremental,stats,long,latest,record,time,ms,incremental,record,stats,set,latest,record,time,stamp,new,date,latest,record,time,ms
DataCountsReporter -> public void reportLatestTimeIncrementalStats(long latestRecordTimeMs);1525248068;Update only the incremental stats with the newest record time__@param latestRecordTimeMs latest record time as epoch millis;public void reportLatestTimeIncrementalStats(long latestRecordTimeMs) {_        incrementalRecordStats.setLatestRecordTimeStamp(new Date(latestRecordTimeMs))__    };update,only,the,incremental,stats,with,the,newest,record,time,param,latest,record,time,ms,latest,record,time,as,epoch,millis;public,void,report,latest,time,incremental,stats,long,latest,record,time,ms,incremental,record,stats,set,latest,record,time,stamp,new,date,latest,record,time,ms
DataCountsReporter -> public void reportLatestTimeIncrementalStats(long latestRecordTimeMs);1525645056;Update only the incremental stats with the newest record time__@param latestRecordTimeMs latest record time as epoch millis;public void reportLatestTimeIncrementalStats(long latestRecordTimeMs) {_        incrementalRecordStats.setLatestRecordTimeStamp(new Date(latestRecordTimeMs))__    };update,only,the,incremental,stats,with,the,newest,record,time,param,latest,record,time,ms,latest,record,time,as,epoch,millis;public,void,report,latest,time,incremental,stats,long,latest,record,time,ms,incremental,record,stats,set,latest,record,time,stamp,new,date,latest,record,time,ms
DataCountsReporter -> public void reportLatestTimeIncrementalStats(long latestRecordTimeMs);1538067637;Update only the incremental stats with the newest record time__@param latestRecordTimeMs latest record time as epoch millis;public void reportLatestTimeIncrementalStats(long latestRecordTimeMs) {_        incrementalRecordStats.setLatestRecordTimeStamp(new Date(latestRecordTimeMs))__    };update,only,the,incremental,stats,with,the,newest,record,time,param,latest,record,time,ms,latest,record,time,as,epoch,millis;public,void,report,latest,time,incremental,stats,long,latest,record,time,ms,incremental,record,stats,set,latest,record,time,stamp,new,date,latest,record,time,ms
DataCountsReporter -> public void reportLatestTimeIncrementalStats(long latestRecordTimeMs);1538424609;Update only the incremental stats with the newest record time__@param latestRecordTimeMs latest record time as epoch millis;public void reportLatestTimeIncrementalStats(long latestRecordTimeMs) {_        incrementalRecordStats.setLatestRecordTimeStamp(new Date(latestRecordTimeMs))__    };update,only,the,incremental,stats,with,the,newest,record,time,param,latest,record,time,ms,latest,record,time,as,epoch,millis;public,void,report,latest,time,incremental,stats,long,latest,record,time,ms,incremental,record,stats,set,latest,record,time,stamp,new,date,latest,record,time,ms
DataCountsReporter -> public void reportLatestTimeIncrementalStats(long latestRecordTimeMs);1541092382;Update only the incremental stats with the newest record time__@param latestRecordTimeMs latest record time as epoch millis;public void reportLatestTimeIncrementalStats(long latestRecordTimeMs) {_        incrementalRecordStats.setLatestRecordTimeStamp(new Date(latestRecordTimeMs))__    };update,only,the,incremental,stats,with,the,newest,record,time,param,latest,record,time,ms,latest,record,time,as,epoch,millis;public,void,report,latest,time,incremental,stats,long,latest,record,time,ms,incremental,record,stats,set,latest,record,time,stamp,new,date,latest,record,time,ms
DataCountsReporter -> public void reportLatestTimeIncrementalStats(long latestRecordTimeMs);1543343306;Update only the incremental stats with the newest record time__@param latestRecordTimeMs latest record time as epoch millis;public void reportLatestTimeIncrementalStats(long latestRecordTimeMs) {_        incrementalRecordStats.setLatestRecordTimeStamp(new Date(latestRecordTimeMs))__    };update,only,the,incremental,stats,with,the,newest,record,time,param,latest,record,time,ms,latest,record,time,as,epoch,millis;public,void,report,latest,time,incremental,stats,long,latest,record,time,ms,incremental,record,stats,set,latest,record,time,stamp,new,date,latest,record,time,ms
DataCountsReporter -> protected boolean logStatus(long totalRecords);1524684173;Log the status.  This is done progressively less frequently as the job_processes more data.  Logging every 10000 records when the data rate is_40000 per second quickly rolls the logs.;protected boolean logStatus(long totalRecords) {_        if (++logCount % logEvery != 0) {_            return false__        }__        String status = String.format(Locale.ROOT,_                "[%s] %d records written to autodetect_ missingFieldCount=%d, invalidDateCount=%d, outOfOrderCount=%d", job.getId(),_                getProcessedRecordCount(), getMissingFieldErrorCount(), getDateParseErrorsCount(), getOutOfOrderRecordCount())___        logger.info(status)___        int log10TotalRecords = (int) Math.floor(Math.log10(totalRecords))__        _        if (log10TotalRecords > 5) {_            logEvery = (int) Math.pow(10.0, log10TotalRecords - 5)__            logCount = 0__        }_        return true__    };log,the,status,this,is,done,progressively,less,frequently,as,the,job,processes,more,data,logging,every,10000,records,when,the,data,rate,is,40000,per,second,quickly,rolls,the,logs;protected,boolean,log,status,long,total,records,if,log,count,log,every,0,return,false,string,status,string,format,locale,root,s,d,records,written,to,autodetect,missing,field,count,d,invalid,date,count,d,out,of,order,count,d,job,get,id,get,processed,record,count,get,missing,field,error,count,get,date,parse,errors,count,get,out,of,order,record,count,logger,info,status,int,log10total,records,int,math,floor,math,log10,total,records,if,log10total,records,5,log,every,int,math,pow,10,0,log10total,records,5,log,count,0,return,true
DataCountsReporter -> protected boolean logStatus(long totalRecords);1525248068;Log the status.  This is done progressively less frequently as the job_processes more data.  Logging every 10000 records when the data rate is_40000 per second quickly rolls the logs.;protected boolean logStatus(long totalRecords) {_        if (++logCount % logEvery != 0) {_            return false__        }__        String status = String.format(Locale.ROOT,_                "[%s] %d records written to autodetect_ missingFieldCount=%d, invalidDateCount=%d, outOfOrderCount=%d", job.getId(),_                getProcessedRecordCount(), getMissingFieldErrorCount(), getDateParseErrorsCount(), getOutOfOrderRecordCount())___        logger.info(status)___        int log10TotalRecords = (int) Math.floor(Math.log10(totalRecords))__        _        if (log10TotalRecords > 5) {_            logEvery = (int) Math.pow(10.0, log10TotalRecords - 5)__            logCount = 0__        }_        return true__    };log,the,status,this,is,done,progressively,less,frequently,as,the,job,processes,more,data,logging,every,10000,records,when,the,data,rate,is,40000,per,second,quickly,rolls,the,logs;protected,boolean,log,status,long,total,records,if,log,count,log,every,0,return,false,string,status,string,format,locale,root,s,d,records,written,to,autodetect,missing,field,count,d,invalid,date,count,d,out,of,order,count,d,job,get,id,get,processed,record,count,get,missing,field,error,count,get,date,parse,errors,count,get,out,of,order,record,count,logger,info,status,int,log10total,records,int,math,floor,math,log10,total,records,if,log10total,records,5,log,every,int,math,pow,10,0,log10total,records,5,log,count,0,return,true
DataCountsReporter -> protected boolean logStatus(long totalRecords);1525645056;Log the status.  This is done progressively less frequently as the job_processes more data.  Logging every 10000 records when the data rate is_40000 per second quickly rolls the logs.;protected boolean logStatus(long totalRecords) {_        if (++logCount % logEvery != 0) {_            return false__        }__        String status = String.format(Locale.ROOT,_                "[%s] %d records written to autodetect_ missingFieldCount=%d, invalidDateCount=%d, outOfOrderCount=%d", job.getId(),_                getProcessedRecordCount(), getMissingFieldErrorCount(), getDateParseErrorsCount(), getOutOfOrderRecordCount())___        logger.info(status)___        int log10TotalRecords = (int) Math.floor(Math.log10(totalRecords))__        _        if (log10TotalRecords > 5) {_            logEvery = (int) Math.pow(10.0, log10TotalRecords - 5)__            logCount = 0__        }_        return true__    };log,the,status,this,is,done,progressively,less,frequently,as,the,job,processes,more,data,logging,every,10000,records,when,the,data,rate,is,40000,per,second,quickly,rolls,the,logs;protected,boolean,log,status,long,total,records,if,log,count,log,every,0,return,false,string,status,string,format,locale,root,s,d,records,written,to,autodetect,missing,field,count,d,invalid,date,count,d,out,of,order,count,d,job,get,id,get,processed,record,count,get,missing,field,error,count,get,date,parse,errors,count,get,out,of,order,record,count,logger,info,status,int,log10total,records,int,math,floor,math,log10,total,records,if,log10total,records,5,log,every,int,math,pow,10,0,log10total,records,5,log,count,0,return,true
DataCountsReporter -> protected boolean logStatus(long totalRecords);1538067637;Log the status.  This is done progressively less frequently as the job_processes more data.  Logging every 10000 records when the data rate is_40000 per second quickly rolls the logs.;protected boolean logStatus(long totalRecords) {_        if (++logCount % logEvery != 0) {_            return false__        }__        String status = String.format(Locale.ROOT,_                "[%s] %d records written to autodetect_ missingFieldCount=%d, invalidDateCount=%d, outOfOrderCount=%d", job.getId(),_                getProcessedRecordCount(), getMissingFieldErrorCount(), getDateParseErrorsCount(), getOutOfOrderRecordCount())___        logger.info(status)___        int log10TotalRecords = (int) Math.floor(Math.log10(totalRecords))__        _        if (log10TotalRecords > 5) {_            logEvery = (int) Math.pow(10.0, log10TotalRecords - 5)__            logCount = 0__        }_        return true__    };log,the,status,this,is,done,progressively,less,frequently,as,the,job,processes,more,data,logging,every,10000,records,when,the,data,rate,is,40000,per,second,quickly,rolls,the,logs;protected,boolean,log,status,long,total,records,if,log,count,log,every,0,return,false,string,status,string,format,locale,root,s,d,records,written,to,autodetect,missing,field,count,d,invalid,date,count,d,out,of,order,count,d,job,get,id,get,processed,record,count,get,missing,field,error,count,get,date,parse,errors,count,get,out,of,order,record,count,logger,info,status,int,log10total,records,int,math,floor,math,log10,total,records,if,log10total,records,5,log,every,int,math,pow,10,0,log10total,records,5,log,count,0,return,true
DataCountsReporter -> protected boolean logStatus(long totalRecords);1538424609;Log the status.  This is done progressively less frequently as the job_processes more data.  Logging every 10000 records when the data rate is_40000 per second quickly rolls the logs.;protected boolean logStatus(long totalRecords) {_        if (++logCount % logEvery != 0) {_            return false__        }__        String status = String.format(Locale.ROOT,_                "[%s] %d records written to autodetect_ missingFieldCount=%d, invalidDateCount=%d, outOfOrderCount=%d", job.getId(),_                getProcessedRecordCount(), getMissingFieldErrorCount(), getDateParseErrorsCount(), getOutOfOrderRecordCount())___        logger.info(status)___        int log10TotalRecords = (int) Math.floor(Math.log10(totalRecords))__        _        if (log10TotalRecords > 5) {_            logEvery = (int) Math.pow(10.0, log10TotalRecords - 5)__            logCount = 0__        }_        return true__    };log,the,status,this,is,done,progressively,less,frequently,as,the,job,processes,more,data,logging,every,10000,records,when,the,data,rate,is,40000,per,second,quickly,rolls,the,logs;protected,boolean,log,status,long,total,records,if,log,count,log,every,0,return,false,string,status,string,format,locale,root,s,d,records,written,to,autodetect,missing,field,count,d,invalid,date,count,d,out,of,order,count,d,job,get,id,get,processed,record,count,get,missing,field,error,count,get,date,parse,errors,count,get,out,of,order,record,count,logger,info,status,int,log10total,records,int,math,floor,math,log10,total,records,if,log10total,records,5,log,every,int,math,pow,10,0,log10total,records,5,log,count,0,return,true
DataCountsReporter -> protected boolean logStatus(long totalRecords);1541092382;Log the status.  This is done progressively less frequently as the job_processes more data.  Logging every 10000 records when the data rate is_40000 per second quickly rolls the logs.;protected boolean logStatus(long totalRecords) {_        if (++logCount % logEvery != 0) {_            return false__        }__        String status = String.format(Locale.ROOT,_                "[%s] %d records written to autodetect_ missingFieldCount=%d, invalidDateCount=%d, outOfOrderCount=%d", job.getId(),_                getProcessedRecordCount(), getMissingFieldErrorCount(), getDateParseErrorsCount(), getOutOfOrderRecordCount())___        logger.info(status)___        int log10TotalRecords = (int) Math.floor(Math.log10(totalRecords))__        _        if (log10TotalRecords > 5) {_            logEvery = (int) Math.pow(10.0, log10TotalRecords - 5)__            logCount = 0__        }_        return true__    };log,the,status,this,is,done,progressively,less,frequently,as,the,job,processes,more,data,logging,every,10000,records,when,the,data,rate,is,40000,per,second,quickly,rolls,the,logs;protected,boolean,log,status,long,total,records,if,log,count,log,every,0,return,false,string,status,string,format,locale,root,s,d,records,written,to,autodetect,missing,field,count,d,invalid,date,count,d,out,of,order,count,d,job,get,id,get,processed,record,count,get,missing,field,error,count,get,date,parse,errors,count,get,out,of,order,record,count,logger,info,status,int,log10total,records,int,math,floor,math,log10,total,records,if,log10total,records,5,log,every,int,math,pow,10,0,log10total,records,5,log,count,0,return,true
DataCountsReporter -> protected boolean logStatus(long totalRecords);1543343306;Log the status.  This is done progressively less frequently as the job_processes more data.  Logging every 10000 records when the data rate is_40000 per second quickly rolls the logs.;protected boolean logStatus(long totalRecords) {_        if (++logCount % logEvery != 0) {_            return false__        }__        String status = String.format(Locale.ROOT,_                "[%s] %d records written to autodetect_ missingFieldCount=%d, invalidDateCount=%d, outOfOrderCount=%d", job.getId(),_                getProcessedRecordCount(), getMissingFieldErrorCount(), getDateParseErrorsCount(), getOutOfOrderRecordCount())___        logger.info(status)___        int log10TotalRecords = (int) Math.floor(Math.log10(totalRecords))__        _        if (log10TotalRecords > 5) {_            logEvery = (int) Math.pow(10.0, log10TotalRecords - 5)__            logCount = 0__        }_        return true__    };log,the,status,this,is,done,progressively,less,frequently,as,the,job,processes,more,data,logging,every,10000,records,when,the,data,rate,is,40000,per,second,quickly,rolls,the,logs;protected,boolean,log,status,long,total,records,if,log,count,log,every,0,return,false,string,status,string,format,locale,root,s,d,records,written,to,autodetect,missing,field,count,d,invalid,date,count,d,out,of,order,count,d,job,get,id,get,processed,record,count,get,missing,field,error,count,get,date,parse,errors,count,get,out,of,order,record,count,logger,info,status,int,log10total,records,int,math,floor,math,log10,total,records,if,log10total,records,5,log,every,int,math,pow,10,0,log10total,records,5,log,count,0,return,true
DataCountsReporter -> public long getInputRecordCount();1524684173;Total records seen = records written to the Engine (processed record_count) + date parse error records count + out of order record count._<p>_Records with missing fields are counted as they are still written.;public long getInputRecordCount() {_        return totalRecordStats.getInputRecordCount()__    };total,records,seen,records,written,to,the,engine,processed,record,count,date,parse,error,records,count,out,of,order,record,count,p,records,with,missing,fields,are,counted,as,they,are,still,written;public,long,get,input,record,count,return,total,record,stats,get,input,record,count
DataCountsReporter -> public long getInputRecordCount();1525248068;Total records seen = records written to the Engine (processed record_count) + date parse error records count + out of order record count._<p>_Records with missing fields are counted as they are still written.;public long getInputRecordCount() {_        return totalRecordStats.getInputRecordCount()__    };total,records,seen,records,written,to,the,engine,processed,record,count,date,parse,error,records,count,out,of,order,record,count,p,records,with,missing,fields,are,counted,as,they,are,still,written;public,long,get,input,record,count,return,total,record,stats,get,input,record,count
DataCountsReporter -> public long getInputRecordCount();1525645056;Total records seen = records written to the Engine (processed record_count) + date parse error records count + out of order record count._<p>_Records with missing fields are counted as they are still written.;public long getInputRecordCount() {_        return totalRecordStats.getInputRecordCount()__    };total,records,seen,records,written,to,the,engine,processed,record,count,date,parse,error,records,count,out,of,order,record,count,p,records,with,missing,fields,are,counted,as,they,are,still,written;public,long,get,input,record,count,return,total,record,stats,get,input,record,count
DataCountsReporter -> public long getInputRecordCount();1538067637;Total records seen = records written to the Engine (processed record_count) + date parse error records count + out of order record count._<p>_Records with missing fields are counted as they are still written.;public long getInputRecordCount() {_        return totalRecordStats.getInputRecordCount()__    };total,records,seen,records,written,to,the,engine,processed,record,count,date,parse,error,records,count,out,of,order,record,count,p,records,with,missing,fields,are,counted,as,they,are,still,written;public,long,get,input,record,count,return,total,record,stats,get,input,record,count
DataCountsReporter -> public long getInputRecordCount();1538424609;Total records seen = records written to the Engine (processed record_count) + date parse error records count + out of order record count._<p>_Records with missing fields are counted as they are still written.;public long getInputRecordCount() {_        return totalRecordStats.getInputRecordCount()__    };total,records,seen,records,written,to,the,engine,processed,record,count,date,parse,error,records,count,out,of,order,record,count,p,records,with,missing,fields,are,counted,as,they,are,still,written;public,long,get,input,record,count,return,total,record,stats,get,input,record,count
DataCountsReporter -> public long getInputRecordCount();1541092382;Total records seen = records written to the Engine (processed record_count) + date parse error records count + out of order record count._<p>_Records with missing fields are counted as they are still written.;public long getInputRecordCount() {_        return totalRecordStats.getInputRecordCount()__    };total,records,seen,records,written,to,the,engine,processed,record,count,date,parse,error,records,count,out,of,order,record,count,p,records,with,missing,fields,are,counted,as,they,are,still,written;public,long,get,input,record,count,return,total,record,stats,get,input,record,count
DataCountsReporter -> public long getInputRecordCount();1543343306;Total records seen = records written to the Engine (processed record_count) + date parse error records count + out of order record count._<p>_Records with missing fields are counted as they are still written.;public long getInputRecordCount() {_        return totalRecordStats.getInputRecordCount()__    };total,records,seen,records,written,to,the,engine,processed,record,count,date,parse,error,records,count,out,of,order,record,count,p,records,with,missing,fields,are,counted,as,they,are,still,written;public,long,get,input,record,count,return,total,record,stats,get,input,record,count
DataCountsReporter -> public void reportDateParseError(long inputFieldCount);1524684173;Increments the date parse error count;public void reportDateParseError(long inputFieldCount) {_        totalRecordStats.incrementInvalidDateCount(1)__        totalRecordStats.incrementInputFieldCount(inputFieldCount)___        incrementalRecordStats.incrementInvalidDateCount(1)__        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__    };increments,the,date,parse,error,count;public,void,report,date,parse,error,long,input,field,count,total,record,stats,increment,invalid,date,count,1,total,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,invalid,date,count,1,incremental,record,stats,increment,input,field,count,input,field,count
DataCountsReporter -> public void reportDateParseError(long inputFieldCount);1525248068;Increments the date parse error count;public void reportDateParseError(long inputFieldCount) {_        totalRecordStats.incrementInvalidDateCount(1)__        totalRecordStats.incrementInputFieldCount(inputFieldCount)___        incrementalRecordStats.incrementInvalidDateCount(1)__        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__    };increments,the,date,parse,error,count;public,void,report,date,parse,error,long,input,field,count,total,record,stats,increment,invalid,date,count,1,total,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,invalid,date,count,1,incremental,record,stats,increment,input,field,count,input,field,count
DataCountsReporter -> public void reportDateParseError(long inputFieldCount);1525645056;Increments the date parse error count;public void reportDateParseError(long inputFieldCount) {_        totalRecordStats.incrementInvalidDateCount(1)__        totalRecordStats.incrementInputFieldCount(inputFieldCount)___        incrementalRecordStats.incrementInvalidDateCount(1)__        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__    };increments,the,date,parse,error,count;public,void,report,date,parse,error,long,input,field,count,total,record,stats,increment,invalid,date,count,1,total,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,invalid,date,count,1,incremental,record,stats,increment,input,field,count,input,field,count
DataCountsReporter -> public void reportDateParseError(long inputFieldCount);1538067637;Increments the date parse error count;public void reportDateParseError(long inputFieldCount) {_        totalRecordStats.incrementInvalidDateCount(1)__        totalRecordStats.incrementInputFieldCount(inputFieldCount)___        incrementalRecordStats.incrementInvalidDateCount(1)__        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__    };increments,the,date,parse,error,count;public,void,report,date,parse,error,long,input,field,count,total,record,stats,increment,invalid,date,count,1,total,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,invalid,date,count,1,incremental,record,stats,increment,input,field,count,input,field,count
DataCountsReporter -> public void reportDateParseError(long inputFieldCount);1538424609;Increments the date parse error count;public void reportDateParseError(long inputFieldCount) {_        totalRecordStats.incrementInvalidDateCount(1)__        totalRecordStats.incrementInputFieldCount(inputFieldCount)___        incrementalRecordStats.incrementInvalidDateCount(1)__        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__    };increments,the,date,parse,error,count;public,void,report,date,parse,error,long,input,field,count,total,record,stats,increment,invalid,date,count,1,total,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,invalid,date,count,1,incremental,record,stats,increment,input,field,count,input,field,count
DataCountsReporter -> public void reportDateParseError(long inputFieldCount);1541092382;Increments the date parse error count;public void reportDateParseError(long inputFieldCount) {_        totalRecordStats.incrementInvalidDateCount(1)__        totalRecordStats.incrementInputFieldCount(inputFieldCount)___        incrementalRecordStats.incrementInvalidDateCount(1)__        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__    };increments,the,date,parse,error,count;public,void,report,date,parse,error,long,input,field,count,total,record,stats,increment,invalid,date,count,1,total,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,invalid,date,count,1,incremental,record,stats,increment,input,field,count,input,field,count
DataCountsReporter -> public void reportDateParseError(long inputFieldCount);1543343306;Increments the date parse error count;public void reportDateParseError(long inputFieldCount) {_        totalRecordStats.incrementInvalidDateCount(1)__        totalRecordStats.incrementInputFieldCount(inputFieldCount)___        incrementalRecordStats.incrementInvalidDateCount(1)__        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__    };increments,the,date,parse,error,count;public,void,report,date,parse,error,long,input,field,count,total,record,stats,increment,invalid,date,count,1,total,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,invalid,date,count,1,incremental,record,stats,increment,input,field,count,input,field,count
DataCountsReporter -> public void reportOutOfOrderRecord(long inputFieldCount);1524684173;Increments the out of order record count;public void reportOutOfOrderRecord(long inputFieldCount) {_        totalRecordStats.incrementOutOfOrderTimeStampCount(1)__        totalRecordStats.incrementInputFieldCount(inputFieldCount)___        incrementalRecordStats.incrementOutOfOrderTimeStampCount(1)__        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__    };increments,the,out,of,order,record,count;public,void,report,out,of,order,record,long,input,field,count,total,record,stats,increment,out,of,order,time,stamp,count,1,total,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,out,of,order,time,stamp,count,1,incremental,record,stats,increment,input,field,count,input,field,count
DataCountsReporter -> public void reportOutOfOrderRecord(long inputFieldCount);1525248068;Increments the out of order record count;public void reportOutOfOrderRecord(long inputFieldCount) {_        totalRecordStats.incrementOutOfOrderTimeStampCount(1)__        totalRecordStats.incrementInputFieldCount(inputFieldCount)___        incrementalRecordStats.incrementOutOfOrderTimeStampCount(1)__        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__    };increments,the,out,of,order,record,count;public,void,report,out,of,order,record,long,input,field,count,total,record,stats,increment,out,of,order,time,stamp,count,1,total,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,out,of,order,time,stamp,count,1,incremental,record,stats,increment,input,field,count,input,field,count
DataCountsReporter -> public void reportOutOfOrderRecord(long inputFieldCount);1525645056;Increments the out of order record count;public void reportOutOfOrderRecord(long inputFieldCount) {_        totalRecordStats.incrementOutOfOrderTimeStampCount(1)__        totalRecordStats.incrementInputFieldCount(inputFieldCount)___        incrementalRecordStats.incrementOutOfOrderTimeStampCount(1)__        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__    };increments,the,out,of,order,record,count;public,void,report,out,of,order,record,long,input,field,count,total,record,stats,increment,out,of,order,time,stamp,count,1,total,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,out,of,order,time,stamp,count,1,incremental,record,stats,increment,input,field,count,input,field,count
DataCountsReporter -> public void reportOutOfOrderRecord(long inputFieldCount);1538067637;Increments the out of order record count;public void reportOutOfOrderRecord(long inputFieldCount) {_        totalRecordStats.incrementOutOfOrderTimeStampCount(1)__        totalRecordStats.incrementInputFieldCount(inputFieldCount)___        incrementalRecordStats.incrementOutOfOrderTimeStampCount(1)__        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__    };increments,the,out,of,order,record,count;public,void,report,out,of,order,record,long,input,field,count,total,record,stats,increment,out,of,order,time,stamp,count,1,total,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,out,of,order,time,stamp,count,1,incremental,record,stats,increment,input,field,count,input,field,count
DataCountsReporter -> public void reportOutOfOrderRecord(long inputFieldCount);1538424609;Increments the out of order record count;public void reportOutOfOrderRecord(long inputFieldCount) {_        totalRecordStats.incrementOutOfOrderTimeStampCount(1)__        totalRecordStats.incrementInputFieldCount(inputFieldCount)___        incrementalRecordStats.incrementOutOfOrderTimeStampCount(1)__        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__    };increments,the,out,of,order,record,count;public,void,report,out,of,order,record,long,input,field,count,total,record,stats,increment,out,of,order,time,stamp,count,1,total,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,out,of,order,time,stamp,count,1,incremental,record,stats,increment,input,field,count,input,field,count
DataCountsReporter -> public void reportOutOfOrderRecord(long inputFieldCount);1541092382;Increments the out of order record count;public void reportOutOfOrderRecord(long inputFieldCount) {_        totalRecordStats.incrementOutOfOrderTimeStampCount(1)__        totalRecordStats.incrementInputFieldCount(inputFieldCount)___        incrementalRecordStats.incrementOutOfOrderTimeStampCount(1)__        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__    };increments,the,out,of,order,record,count;public,void,report,out,of,order,record,long,input,field,count,total,record,stats,increment,out,of,order,time,stamp,count,1,total,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,out,of,order,time,stamp,count,1,incremental,record,stats,increment,input,field,count,input,field,count
DataCountsReporter -> public void reportOutOfOrderRecord(long inputFieldCount);1543343306;Increments the out of order record count;public void reportOutOfOrderRecord(long inputFieldCount) {_        totalRecordStats.incrementOutOfOrderTimeStampCount(1)__        totalRecordStats.incrementInputFieldCount(inputFieldCount)___        incrementalRecordStats.incrementOutOfOrderTimeStampCount(1)__        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__    };increments,the,out,of,order,record,count;public,void,report,out,of,order,record,long,input,field,count,total,record,stats,increment,out,of,order,time,stamp,count,1,total,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,out,of,order,time,stamp,count,1,incremental,record,stats,increment,input,field,count,input,field,count
DataCountsReporter -> public void finishReporting(ActionListener<Boolean> listener);1524684173;Report the counts now regardless of whether or not we are at a reporting boundary.;public void finishReporting(ActionListener<Boolean> listener) {_        Date now = new Date()__        incrementalRecordStats.setLastDataTimeStamp(now)__        totalRecordStats.setLastDataTimeStamp(now)__        diagnostics.flush()__        retrieveDiagnosticsIntermediateResults()__        dataCountsPersister.persistDataCounts(job.getId(), runningTotalStats(), listener)__    };report,the,counts,now,regardless,of,whether,or,not,we,are,at,a,reporting,boundary;public,void,finish,reporting,action,listener,boolean,listener,date,now,new,date,incremental,record,stats,set,last,data,time,stamp,now,total,record,stats,set,last,data,time,stamp,now,diagnostics,flush,retrieve,diagnostics,intermediate,results,data,counts,persister,persist,data,counts,job,get,id,running,total,stats,listener
DataCountsReporter -> public void finishReporting(ActionListener<Boolean> listener);1525248068;Report the counts now regardless of whether or not we are at a reporting boundary.;public void finishReporting(ActionListener<Boolean> listener) {_        Date now = new Date()__        incrementalRecordStats.setLastDataTimeStamp(now)__        totalRecordStats.setLastDataTimeStamp(now)__        diagnostics.flush()__        retrieveDiagnosticsIntermediateResults()__        dataCountsPersister.persistDataCounts(job.getId(), runningTotalStats(), listener)__    };report,the,counts,now,regardless,of,whether,or,not,we,are,at,a,reporting,boundary;public,void,finish,reporting,action,listener,boolean,listener,date,now,new,date,incremental,record,stats,set,last,data,time,stamp,now,total,record,stats,set,last,data,time,stamp,now,diagnostics,flush,retrieve,diagnostics,intermediate,results,data,counts,persister,persist,data,counts,job,get,id,running,total,stats,listener
DataCountsReporter -> public void finishReporting(ActionListener<Boolean> listener);1525645056;Report the counts now regardless of whether or not we are at a reporting boundary.;public void finishReporting(ActionListener<Boolean> listener) {_        Date now = new Date()__        incrementalRecordStats.setLastDataTimeStamp(now)__        totalRecordStats.setLastDataTimeStamp(now)__        diagnostics.flush()__        retrieveDiagnosticsIntermediateResults()__        dataCountsPersister.persistDataCounts(job.getId(), runningTotalStats(), listener)__    };report,the,counts,now,regardless,of,whether,or,not,we,are,at,a,reporting,boundary;public,void,finish,reporting,action,listener,boolean,listener,date,now,new,date,incremental,record,stats,set,last,data,time,stamp,now,total,record,stats,set,last,data,time,stamp,now,diagnostics,flush,retrieve,diagnostics,intermediate,results,data,counts,persister,persist,data,counts,job,get,id,running,total,stats,listener
DataCountsReporter -> public void finishReporting(ActionListener<Boolean> listener);1538067637;Report the counts now regardless of whether or not we are at a reporting boundary.;public void finishReporting(ActionListener<Boolean> listener) {_        Date now = new Date()__        incrementalRecordStats.setLastDataTimeStamp(now)__        totalRecordStats.setLastDataTimeStamp(now)__        diagnostics.flush()__        retrieveDiagnosticsIntermediateResults()__        dataCountsPersister.persistDataCounts(job.getId(), runningTotalStats(), listener)__    };report,the,counts,now,regardless,of,whether,or,not,we,are,at,a,reporting,boundary;public,void,finish,reporting,action,listener,boolean,listener,date,now,new,date,incremental,record,stats,set,last,data,time,stamp,now,total,record,stats,set,last,data,time,stamp,now,diagnostics,flush,retrieve,diagnostics,intermediate,results,data,counts,persister,persist,data,counts,job,get,id,running,total,stats,listener
DataCountsReporter -> public void finishReporting(ActionListener<Boolean> listener);1538424609;Report the counts now regardless of whether or not we are at a reporting boundary.;public void finishReporting(ActionListener<Boolean> listener) {_        Date now = new Date()__        incrementalRecordStats.setLastDataTimeStamp(now)__        totalRecordStats.setLastDataTimeStamp(now)__        diagnostics.flush()__        retrieveDiagnosticsIntermediateResults()__        dataCountsPersister.persistDataCounts(job.getId(), runningTotalStats(), listener)__    };report,the,counts,now,regardless,of,whether,or,not,we,are,at,a,reporting,boundary;public,void,finish,reporting,action,listener,boolean,listener,date,now,new,date,incremental,record,stats,set,last,data,time,stamp,now,total,record,stats,set,last,data,time,stamp,now,diagnostics,flush,retrieve,diagnostics,intermediate,results,data,counts,persister,persist,data,counts,job,get,id,running,total,stats,listener
DataCountsReporter -> public void finishReporting(ActionListener<Boolean> listener);1541092382;Report the counts now regardless of whether or not we are at a reporting boundary.;public void finishReporting(ActionListener<Boolean> listener) {_        Date now = new Date()__        incrementalRecordStats.setLastDataTimeStamp(now)__        totalRecordStats.setLastDataTimeStamp(now)__        diagnostics.flush()__        retrieveDiagnosticsIntermediateResults()__        dataCountsPersister.persistDataCounts(job.getId(), runningTotalStats(), listener)__    };report,the,counts,now,regardless,of,whether,or,not,we,are,at,a,reporting,boundary;public,void,finish,reporting,action,listener,boolean,listener,date,now,new,date,incremental,record,stats,set,last,data,time,stamp,now,total,record,stats,set,last,data,time,stamp,now,diagnostics,flush,retrieve,diagnostics,intermediate,results,data,counts,persister,persist,data,counts,job,get,id,running,total,stats,listener
DataCountsReporter -> public void finishReporting(ActionListener<Boolean> listener);1543343306;Report the counts now regardless of whether or not we are at a reporting boundary.;public void finishReporting(ActionListener<Boolean> listener) {_        Date now = new Date()__        incrementalRecordStats.setLastDataTimeStamp(now)__        totalRecordStats.setLastDataTimeStamp(now)__        diagnostics.flush()__        retrieveDiagnosticsIntermediateResults()__        dataCountsPersister.persistDataCounts(job.getId(), runningTotalStats(), listener)__    };report,the,counts,now,regardless,of,whether,or,not,we,are,at,a,reporting,boundary;public,void,finish,reporting,action,listener,boolean,listener,date,now,new,date,incremental,record,stats,set,last,data,time,stamp,now,total,record,stats,set,last,data,time,stamp,now,diagnostics,flush,retrieve,diagnostics,intermediate,results,data,counts,persister,persist,data,counts,job,get,id,running,total,stats,listener
DataCountsReporter -> public void reportRecordWritten(long inputFieldCount, long recordTimeMs);1524684173;Increment the number of records written by 1 and increment_the total number of fields read.__@param inputFieldCount Number of fields in the record._Note this is not the number of processed fields (by field etc)_but the actual number of fields in the record_@param recordTimeMs    The time of the record written_in milliseconds from the epoch.;public void reportRecordWritten(long inputFieldCount, long recordTimeMs) {_        Date recordDate = new Date(recordTimeMs)___        totalRecordStats.incrementInputFieldCount(inputFieldCount)__        totalRecordStats.incrementProcessedRecordCount(1)__        totalRecordStats.setLatestRecordTimeStamp(recordDate)___        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__        incrementalRecordStats.incrementProcessedRecordCount(1)__        incrementalRecordStats.setLatestRecordTimeStamp(recordDate)___        boolean isFirstReport = totalRecordStats.getEarliestRecordTimeStamp() == null__        if (isFirstReport) {_            totalRecordStats.setEarliestRecordTimeStamp(recordDate)__            incrementalRecordStats.setEarliestRecordTimeStamp(recordDate)__        }__        _        long totalRecords = getInputRecordCount()__        if (reportingBoundaryFunction.apply(totalRecords)) {_            logStatus(totalRecords)__        }__        diagnostics.checkRecord(recordTimeMs)__    };increment,the,number,of,records,written,by,1,and,increment,the,total,number,of,fields,read,param,input,field,count,number,of,fields,in,the,record,note,this,is,not,the,number,of,processed,fields,by,field,etc,but,the,actual,number,of,fields,in,the,record,param,record,time,ms,the,time,of,the,record,written,in,milliseconds,from,the,epoch;public,void,report,record,written,long,input,field,count,long,record,time,ms,date,record,date,new,date,record,time,ms,total,record,stats,increment,input,field,count,input,field,count,total,record,stats,increment,processed,record,count,1,total,record,stats,set,latest,record,time,stamp,record,date,incremental,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,processed,record,count,1,incremental,record,stats,set,latest,record,time,stamp,record,date,boolean,is,first,report,total,record,stats,get,earliest,record,time,stamp,null,if,is,first,report,total,record,stats,set,earliest,record,time,stamp,record,date,incremental,record,stats,set,earliest,record,time,stamp,record,date,long,total,records,get,input,record,count,if,reporting,boundary,function,apply,total,records,log,status,total,records,diagnostics,check,record,record,time,ms
DataCountsReporter -> public void reportRecordWritten(long inputFieldCount, long recordTimeMs);1525248068;Increment the number of records written by 1 and increment_the total number of fields read.__@param inputFieldCount Number of fields in the record._Note this is not the number of processed fields (by field etc)_but the actual number of fields in the record_@param recordTimeMs    The time of the record written_in milliseconds from the epoch.;public void reportRecordWritten(long inputFieldCount, long recordTimeMs) {_        Date recordDate = new Date(recordTimeMs)___        totalRecordStats.incrementInputFieldCount(inputFieldCount)__        totalRecordStats.incrementProcessedRecordCount(1)__        totalRecordStats.setLatestRecordTimeStamp(recordDate)___        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__        incrementalRecordStats.incrementProcessedRecordCount(1)__        incrementalRecordStats.setLatestRecordTimeStamp(recordDate)___        boolean isFirstReport = totalRecordStats.getEarliestRecordTimeStamp() == null__        if (isFirstReport) {_            totalRecordStats.setEarliestRecordTimeStamp(recordDate)__            incrementalRecordStats.setEarliestRecordTimeStamp(recordDate)__        }__        _        long totalRecords = getInputRecordCount()__        if (reportingBoundaryFunction.apply(totalRecords)) {_            logStatus(totalRecords)__        }__        diagnostics.checkRecord(recordTimeMs)__    };increment,the,number,of,records,written,by,1,and,increment,the,total,number,of,fields,read,param,input,field,count,number,of,fields,in,the,record,note,this,is,not,the,number,of,processed,fields,by,field,etc,but,the,actual,number,of,fields,in,the,record,param,record,time,ms,the,time,of,the,record,written,in,milliseconds,from,the,epoch;public,void,report,record,written,long,input,field,count,long,record,time,ms,date,record,date,new,date,record,time,ms,total,record,stats,increment,input,field,count,input,field,count,total,record,stats,increment,processed,record,count,1,total,record,stats,set,latest,record,time,stamp,record,date,incremental,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,processed,record,count,1,incremental,record,stats,set,latest,record,time,stamp,record,date,boolean,is,first,report,total,record,stats,get,earliest,record,time,stamp,null,if,is,first,report,total,record,stats,set,earliest,record,time,stamp,record,date,incremental,record,stats,set,earliest,record,time,stamp,record,date,long,total,records,get,input,record,count,if,reporting,boundary,function,apply,total,records,log,status,total,records,diagnostics,check,record,record,time,ms
DataCountsReporter -> public void reportRecordWritten(long inputFieldCount, long recordTimeMs);1525645056;Increment the number of records written by 1 and increment_the total number of fields read.__@param inputFieldCount Number of fields in the record._Note this is not the number of processed fields (by field etc)_but the actual number of fields in the record_@param recordTimeMs    The time of the record written_in milliseconds from the epoch.;public void reportRecordWritten(long inputFieldCount, long recordTimeMs) {_        Date recordDate = new Date(recordTimeMs)___        totalRecordStats.incrementInputFieldCount(inputFieldCount)__        totalRecordStats.incrementProcessedRecordCount(1)__        totalRecordStats.setLatestRecordTimeStamp(recordDate)___        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__        incrementalRecordStats.incrementProcessedRecordCount(1)__        incrementalRecordStats.setLatestRecordTimeStamp(recordDate)___        boolean isFirstReport = totalRecordStats.getEarliestRecordTimeStamp() == null__        if (isFirstReport) {_            totalRecordStats.setEarliestRecordTimeStamp(recordDate)__            incrementalRecordStats.setEarliestRecordTimeStamp(recordDate)__        }__        _        long totalRecords = getInputRecordCount()__        if (reportingBoundaryFunction.apply(totalRecords)) {_            logStatus(totalRecords)__        }__        diagnostics.checkRecord(recordTimeMs)__    };increment,the,number,of,records,written,by,1,and,increment,the,total,number,of,fields,read,param,input,field,count,number,of,fields,in,the,record,note,this,is,not,the,number,of,processed,fields,by,field,etc,but,the,actual,number,of,fields,in,the,record,param,record,time,ms,the,time,of,the,record,written,in,milliseconds,from,the,epoch;public,void,report,record,written,long,input,field,count,long,record,time,ms,date,record,date,new,date,record,time,ms,total,record,stats,increment,input,field,count,input,field,count,total,record,stats,increment,processed,record,count,1,total,record,stats,set,latest,record,time,stamp,record,date,incremental,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,processed,record,count,1,incremental,record,stats,set,latest,record,time,stamp,record,date,boolean,is,first,report,total,record,stats,get,earliest,record,time,stamp,null,if,is,first,report,total,record,stats,set,earliest,record,time,stamp,record,date,incremental,record,stats,set,earliest,record,time,stamp,record,date,long,total,records,get,input,record,count,if,reporting,boundary,function,apply,total,records,log,status,total,records,diagnostics,check,record,record,time,ms
DataCountsReporter -> public void reportRecordWritten(long inputFieldCount, long recordTimeMs);1538067637;Increment the number of records written by 1 and increment_the total number of fields read.__@param inputFieldCount Number of fields in the record._Note this is not the number of processed fields (by field etc)_but the actual number of fields in the record_@param recordTimeMs    The time of the record written_in milliseconds from the epoch.;public void reportRecordWritten(long inputFieldCount, long recordTimeMs) {_        Date recordDate = new Date(recordTimeMs)___        totalRecordStats.incrementInputFieldCount(inputFieldCount)__        totalRecordStats.incrementProcessedRecordCount(1)__        totalRecordStats.setLatestRecordTimeStamp(recordDate)___        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__        incrementalRecordStats.incrementProcessedRecordCount(1)__        incrementalRecordStats.setLatestRecordTimeStamp(recordDate)___        boolean isFirstReport = totalRecordStats.getEarliestRecordTimeStamp() == null__        if (isFirstReport) {_            totalRecordStats.setEarliestRecordTimeStamp(recordDate)__            incrementalRecordStats.setEarliestRecordTimeStamp(recordDate)__        }__        _        long totalRecords = getInputRecordCount()__        if (reportingBoundaryFunction.apply(totalRecords)) {_            logStatus(totalRecords)__        }__        diagnostics.checkRecord(recordTimeMs)__    };increment,the,number,of,records,written,by,1,and,increment,the,total,number,of,fields,read,param,input,field,count,number,of,fields,in,the,record,note,this,is,not,the,number,of,processed,fields,by,field,etc,but,the,actual,number,of,fields,in,the,record,param,record,time,ms,the,time,of,the,record,written,in,milliseconds,from,the,epoch;public,void,report,record,written,long,input,field,count,long,record,time,ms,date,record,date,new,date,record,time,ms,total,record,stats,increment,input,field,count,input,field,count,total,record,stats,increment,processed,record,count,1,total,record,stats,set,latest,record,time,stamp,record,date,incremental,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,processed,record,count,1,incremental,record,stats,set,latest,record,time,stamp,record,date,boolean,is,first,report,total,record,stats,get,earliest,record,time,stamp,null,if,is,first,report,total,record,stats,set,earliest,record,time,stamp,record,date,incremental,record,stats,set,earliest,record,time,stamp,record,date,long,total,records,get,input,record,count,if,reporting,boundary,function,apply,total,records,log,status,total,records,diagnostics,check,record,record,time,ms
DataCountsReporter -> public void reportRecordWritten(long inputFieldCount, long recordTimeMs);1538424609;Increment the number of records written by 1 and increment_the total number of fields read.__@param inputFieldCount Number of fields in the record._Note this is not the number of processed fields (by field etc)_but the actual number of fields in the record_@param recordTimeMs    The time of the record written_in milliseconds from the epoch.;public void reportRecordWritten(long inputFieldCount, long recordTimeMs) {_        Date recordDate = new Date(recordTimeMs)___        totalRecordStats.incrementInputFieldCount(inputFieldCount)__        totalRecordStats.incrementProcessedRecordCount(1)__        totalRecordStats.setLatestRecordTimeStamp(recordDate)___        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__        incrementalRecordStats.incrementProcessedRecordCount(1)__        incrementalRecordStats.setLatestRecordTimeStamp(recordDate)___        boolean isFirstReport = totalRecordStats.getEarliestRecordTimeStamp() == null__        if (isFirstReport) {_            totalRecordStats.setEarliestRecordTimeStamp(recordDate)__            incrementalRecordStats.setEarliestRecordTimeStamp(recordDate)__        }__        _        long totalRecords = getInputRecordCount()__        if (reportingBoundaryFunction.apply(totalRecords)) {_            logStatus(totalRecords)__        }__        diagnostics.checkRecord(recordTimeMs)__    };increment,the,number,of,records,written,by,1,and,increment,the,total,number,of,fields,read,param,input,field,count,number,of,fields,in,the,record,note,this,is,not,the,number,of,processed,fields,by,field,etc,but,the,actual,number,of,fields,in,the,record,param,record,time,ms,the,time,of,the,record,written,in,milliseconds,from,the,epoch;public,void,report,record,written,long,input,field,count,long,record,time,ms,date,record,date,new,date,record,time,ms,total,record,stats,increment,input,field,count,input,field,count,total,record,stats,increment,processed,record,count,1,total,record,stats,set,latest,record,time,stamp,record,date,incremental,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,processed,record,count,1,incremental,record,stats,set,latest,record,time,stamp,record,date,boolean,is,first,report,total,record,stats,get,earliest,record,time,stamp,null,if,is,first,report,total,record,stats,set,earliest,record,time,stamp,record,date,incremental,record,stats,set,earliest,record,time,stamp,record,date,long,total,records,get,input,record,count,if,reporting,boundary,function,apply,total,records,log,status,total,records,diagnostics,check,record,record,time,ms
DataCountsReporter -> public void reportRecordWritten(long inputFieldCount, long recordTimeMs);1541092382;Increment the number of records written by 1 and increment_the total number of fields read.__@param inputFieldCount Number of fields in the record._Note this is not the number of processed fields (by field etc)_but the actual number of fields in the record_@param recordTimeMs    The time of the record written_in milliseconds from the epoch.;public void reportRecordWritten(long inputFieldCount, long recordTimeMs) {_        Date recordDate = new Date(recordTimeMs)___        totalRecordStats.incrementInputFieldCount(inputFieldCount)__        totalRecordStats.incrementProcessedRecordCount(1)__        totalRecordStats.setLatestRecordTimeStamp(recordDate)___        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__        incrementalRecordStats.incrementProcessedRecordCount(1)__        incrementalRecordStats.setLatestRecordTimeStamp(recordDate)___        boolean isFirstReport = totalRecordStats.getEarliestRecordTimeStamp() == null__        if (isFirstReport) {_            totalRecordStats.setEarliestRecordTimeStamp(recordDate)__            incrementalRecordStats.setEarliestRecordTimeStamp(recordDate)__        }__        _        long totalRecords = getInputRecordCount()__        if (reportingBoundaryFunction.apply(totalRecords)) {_            logStatus(totalRecords)__        }__        diagnostics.checkRecord(recordTimeMs)__    };increment,the,number,of,records,written,by,1,and,increment,the,total,number,of,fields,read,param,input,field,count,number,of,fields,in,the,record,note,this,is,not,the,number,of,processed,fields,by,field,etc,but,the,actual,number,of,fields,in,the,record,param,record,time,ms,the,time,of,the,record,written,in,milliseconds,from,the,epoch;public,void,report,record,written,long,input,field,count,long,record,time,ms,date,record,date,new,date,record,time,ms,total,record,stats,increment,input,field,count,input,field,count,total,record,stats,increment,processed,record,count,1,total,record,stats,set,latest,record,time,stamp,record,date,incremental,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,processed,record,count,1,incremental,record,stats,set,latest,record,time,stamp,record,date,boolean,is,first,report,total,record,stats,get,earliest,record,time,stamp,null,if,is,first,report,total,record,stats,set,earliest,record,time,stamp,record,date,incremental,record,stats,set,earliest,record,time,stamp,record,date,long,total,records,get,input,record,count,if,reporting,boundary,function,apply,total,records,log,status,total,records,diagnostics,check,record,record,time,ms
DataCountsReporter -> public void reportRecordWritten(long inputFieldCount, long recordTimeMs);1543343306;Increment the number of records written by 1 and increment_the total number of fields read.__@param inputFieldCount Number of fields in the record._Note this is not the number of processed fields (by field etc)_but the actual number of fields in the record_@param recordTimeMs    The time of the record written_in milliseconds from the epoch.;public void reportRecordWritten(long inputFieldCount, long recordTimeMs) {_        Date recordDate = new Date(recordTimeMs)___        totalRecordStats.incrementInputFieldCount(inputFieldCount)__        totalRecordStats.incrementProcessedRecordCount(1)__        totalRecordStats.setLatestRecordTimeStamp(recordDate)___        incrementalRecordStats.incrementInputFieldCount(inputFieldCount)__        incrementalRecordStats.incrementProcessedRecordCount(1)__        incrementalRecordStats.setLatestRecordTimeStamp(recordDate)___        boolean isFirstReport = totalRecordStats.getEarliestRecordTimeStamp() == null__        if (isFirstReport) {_            totalRecordStats.setEarliestRecordTimeStamp(recordDate)__            incrementalRecordStats.setEarliestRecordTimeStamp(recordDate)__        }__        _        long totalRecords = getInputRecordCount()__        if (reportingBoundaryFunction.apply(totalRecords)) {_            logStatus(totalRecords)__        }__        diagnostics.checkRecord(recordTimeMs)__    };increment,the,number,of,records,written,by,1,and,increment,the,total,number,of,fields,read,param,input,field,count,number,of,fields,in,the,record,note,this,is,not,the,number,of,processed,fields,by,field,etc,but,the,actual,number,of,fields,in,the,record,param,record,time,ms,the,time,of,the,record,written,in,milliseconds,from,the,epoch;public,void,report,record,written,long,input,field,count,long,record,time,ms,date,record,date,new,date,record,time,ms,total,record,stats,increment,input,field,count,input,field,count,total,record,stats,increment,processed,record,count,1,total,record,stats,set,latest,record,time,stamp,record,date,incremental,record,stats,increment,input,field,count,input,field,count,incremental,record,stats,increment,processed,record,count,1,incremental,record,stats,set,latest,record,time,stamp,record,date,boolean,is,first,report,total,record,stats,get,earliest,record,time,stamp,null,if,is,first,report,total,record,stats,set,earliest,record,time,stamp,record,date,incremental,record,stats,set,earliest,record,time,stamp,record,date,long,total,records,get,input,record,count,if,reporting,boundary,function,apply,total,records,log,status,total,records,diagnostics,check,record,record,time,ms
DataCountsReporter -> public void reportBytesRead(long newBytes);1524684173;Add <code>newBytes</code> to the total volume processed;public void reportBytesRead(long newBytes) {_        totalRecordStats.incrementInputBytes(newBytes)__        incrementalRecordStats.incrementInputBytes(newBytes)__    };add,code,new,bytes,code,to,the,total,volume,processed;public,void,report,bytes,read,long,new,bytes,total,record,stats,increment,input,bytes,new,bytes,incremental,record,stats,increment,input,bytes,new,bytes
DataCountsReporter -> public void reportBytesRead(long newBytes);1525248068;Add <code>newBytes</code> to the total volume processed;public void reportBytesRead(long newBytes) {_        totalRecordStats.incrementInputBytes(newBytes)__        incrementalRecordStats.incrementInputBytes(newBytes)__    };add,code,new,bytes,code,to,the,total,volume,processed;public,void,report,bytes,read,long,new,bytes,total,record,stats,increment,input,bytes,new,bytes,incremental,record,stats,increment,input,bytes,new,bytes
DataCountsReporter -> public void reportBytesRead(long newBytes);1525645056;Add <code>newBytes</code> to the total volume processed;public void reportBytesRead(long newBytes) {_        totalRecordStats.incrementInputBytes(newBytes)__        incrementalRecordStats.incrementInputBytes(newBytes)__    };add,code,new,bytes,code,to,the,total,volume,processed;public,void,report,bytes,read,long,new,bytes,total,record,stats,increment,input,bytes,new,bytes,incremental,record,stats,increment,input,bytes,new,bytes
DataCountsReporter -> public void reportBytesRead(long newBytes);1538067637;Add <code>newBytes</code> to the total volume processed;public void reportBytesRead(long newBytes) {_        totalRecordStats.incrementInputBytes(newBytes)__        incrementalRecordStats.incrementInputBytes(newBytes)__    };add,code,new,bytes,code,to,the,total,volume,processed;public,void,report,bytes,read,long,new,bytes,total,record,stats,increment,input,bytes,new,bytes,incremental,record,stats,increment,input,bytes,new,bytes
DataCountsReporter -> public void reportBytesRead(long newBytes);1538424609;Add <code>newBytes</code> to the total volume processed;public void reportBytesRead(long newBytes) {_        totalRecordStats.incrementInputBytes(newBytes)__        incrementalRecordStats.incrementInputBytes(newBytes)__    };add,code,new,bytes,code,to,the,total,volume,processed;public,void,report,bytes,read,long,new,bytes,total,record,stats,increment,input,bytes,new,bytes,incremental,record,stats,increment,input,bytes,new,bytes
DataCountsReporter -> public void reportBytesRead(long newBytes);1541092382;Add <code>newBytes</code> to the total volume processed;public void reportBytesRead(long newBytes) {_        totalRecordStats.incrementInputBytes(newBytes)__        incrementalRecordStats.incrementInputBytes(newBytes)__    };add,code,new,bytes,code,to,the,total,volume,processed;public,void,report,bytes,read,long,new,bytes,total,record,stats,increment,input,bytes,new,bytes,incremental,record,stats,increment,input,bytes,new,bytes
DataCountsReporter -> public void reportBytesRead(long newBytes);1543343306;Add <code>newBytes</code> to the total volume processed;public void reportBytesRead(long newBytes) {_        totalRecordStats.incrementInputBytes(newBytes)__        incrementalRecordStats.incrementInputBytes(newBytes)__    };add,code,new,bytes,code,to,the,total,volume,processed;public,void,report,bytes,read,long,new,bytes,total,record,stats,increment,input,bytes,new,bytes,incremental,record,stats,increment,input,bytes,new,bytes
DataCountsReporter -> public void reportMissingField();1524684173;Increments the missing field count_Records with missing fields are still processed;public void reportMissingField() {_        totalRecordStats.incrementMissingFieldCount(1)__        incrementalRecordStats.incrementMissingFieldCount(1)__    };increments,the,missing,field,count,records,with,missing,fields,are,still,processed;public,void,report,missing,field,total,record,stats,increment,missing,field,count,1,incremental,record,stats,increment,missing,field,count,1
DataCountsReporter -> public void reportMissingField();1525248068;Increments the missing field count_Records with missing fields are still processed;public void reportMissingField() {_        totalRecordStats.incrementMissingFieldCount(1)__        incrementalRecordStats.incrementMissingFieldCount(1)__    };increments,the,missing,field,count,records,with,missing,fields,are,still,processed;public,void,report,missing,field,total,record,stats,increment,missing,field,count,1,incremental,record,stats,increment,missing,field,count,1
DataCountsReporter -> public void reportMissingField();1525645056;Increments the missing field count_Records with missing fields are still processed;public void reportMissingField() {_        totalRecordStats.incrementMissingFieldCount(1)__        incrementalRecordStats.incrementMissingFieldCount(1)__    };increments,the,missing,field,count,records,with,missing,fields,are,still,processed;public,void,report,missing,field,total,record,stats,increment,missing,field,count,1,incremental,record,stats,increment,missing,field,count,1
DataCountsReporter -> public void reportMissingField();1538067637;Increments the missing field count_Records with missing fields are still processed;public void reportMissingField() {_        totalRecordStats.incrementMissingFieldCount(1)__        incrementalRecordStats.incrementMissingFieldCount(1)__    };increments,the,missing,field,count,records,with,missing,fields,are,still,processed;public,void,report,missing,field,total,record,stats,increment,missing,field,count,1,incremental,record,stats,increment,missing,field,count,1
DataCountsReporter -> public void reportMissingField();1538424609;Increments the missing field count_Records with missing fields are still processed;public void reportMissingField() {_        totalRecordStats.incrementMissingFieldCount(1)__        incrementalRecordStats.incrementMissingFieldCount(1)__    };increments,the,missing,field,count,records,with,missing,fields,are,still,processed;public,void,report,missing,field,total,record,stats,increment,missing,field,count,1,incremental,record,stats,increment,missing,field,count,1
DataCountsReporter -> public void reportMissingField();1541092382;Increments the missing field count_Records with missing fields are still processed;public void reportMissingField() {_        totalRecordStats.incrementMissingFieldCount(1)__        incrementalRecordStats.incrementMissingFieldCount(1)__    };increments,the,missing,field,count,records,with,missing,fields,are,still,processed;public,void,report,missing,field,total,record,stats,increment,missing,field,count,1,incremental,record,stats,increment,missing,field,count,1
DataCountsReporter -> public void reportMissingField();1543343306;Increments the missing field count_Records with missing fields are still processed;public void reportMissingField() {_        totalRecordStats.incrementMissingFieldCount(1)__        incrementalRecordStats.incrementMissingFieldCount(1)__    };increments,the,missing,field,count,records,with,missing,fields,are,still,processed;public,void,report,missing,field,total,record,stats,increment,missing,field,count,1,incremental,record,stats,increment,missing,field,count,1
