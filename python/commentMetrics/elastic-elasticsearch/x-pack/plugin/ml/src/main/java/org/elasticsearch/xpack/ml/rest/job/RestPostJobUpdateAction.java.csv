commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "ml_post_job_update_action". }
false;protected;2;10;;@Override protected RestChannelConsumer prepareRequest(RestRequest restRequest, NodeClient client) throws IOException {     String jobId = restRequest.param(Job.ID.getPreferredName()).     XContentParser parser = restRequest.contentParser().     UpdateJobAction.Request updateJobRequest = UpdateJobAction.Request.parseRequest(jobId, parser).     updateJobRequest.timeout(restRequest.paramAsTime("timeout", updateJobRequest.timeout())).     updateJobRequest.masterNodeTimeout(restRequest.paramAsTime("master_timeout", updateJobRequest.masterNodeTimeout())).     return channel -> client.execute(UpdateJobAction.INSTANCE, updateJobRequest, new RestToXContentListener<>(channel)). }
