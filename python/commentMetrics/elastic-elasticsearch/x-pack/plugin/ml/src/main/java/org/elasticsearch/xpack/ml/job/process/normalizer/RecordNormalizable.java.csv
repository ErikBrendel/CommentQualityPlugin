commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getId() {     return record.getId(). }
false;public;0;4;;@Override public Level getLevel() {     return Level.LEAF. }
false;public;0;4;;@Override public String getPartitionFieldName() {     return record.getPartitionFieldName(). }
false;public;0;4;;@Override public String getPartitionFieldValue() {     return record.getPartitionFieldValue(). }
false;public;0;5;;@Override public String getPersonFieldName() {     String over = record.getOverFieldName().     return over != null ? over : record.getByFieldName(). }
false;public;0;5;;@Override public String getPersonFieldValue() {     String over = record.getOverFieldValue().     return over != null ? over : record.getByFieldValue(). }
false;public;0;4;;@Override public String getFunctionName() {     return record.getFunction(). }
false;public;0;4;;@Override public String getValueFieldName() {     return record.getFieldName(). }
false;public;0;4;;@Override public double getProbability() {     return record.getProbability(). }
false;public;0;4;;@Override public double getNormalizedScore() {     return record.getRecordScore(). }
false;public;1;4;;@Override public void setNormalizedScore(double normalizedScore) {     record.setRecordScore(normalizedScore). }
false;public;1;4;;@Override public void setParentScore(double parentScore) { // nothing to do }
false;public;2;4;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     return record.toXContent(builder, params). }
false;public;0;3;;public AnomalyRecord getRecord() {     return record. }
