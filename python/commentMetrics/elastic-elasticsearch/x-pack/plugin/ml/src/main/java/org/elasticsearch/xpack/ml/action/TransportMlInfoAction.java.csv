commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;8;;@Override protected void doExecute(Task task, MlInfoAction.Request request, ActionListener<MlInfoAction.Response> listener) {     Map<String, Object> info = new HashMap<>().     info.put("defaults", defaults()).     info.put("limits", limits()).     info.put(MlMetadata.UPGRADE_MODE.getPreferredName(), upgradeMode()).     listener.onResponse(new MlInfoAction.Response(info)). }
false;private;0;6;;private Map<String, Object> defaults() {     Map<String, Object> defaults = new HashMap<>().     defaults.put("anomaly_detectors", anomalyDetectorsDefaults()).     defaults.put("datafeeds", datafeedsDefaults()).     return defaults. }
false;private;0;3;;private boolean upgradeMode() {     return MlMetadata.getMlMetadata(clusterService.state()).isUpgradeMode(). }
false;private;0;7;;private Map<String, Object> anomalyDetectorsDefaults() {     Map<String, Object> defaults = new HashMap<>().     defaults.put(AnalysisLimits.MODEL_MEMORY_LIMIT.getPreferredName(), defaultModelMemoryLimit()).     defaults.put(AnalysisLimits.CATEGORIZATION_EXAMPLES_LIMIT.getPreferredName(), AnalysisLimits.DEFAULT_CATEGORIZATION_EXAMPLES_LIMIT).     defaults.put(Job.MODEL_SNAPSHOT_RETENTION_DAYS.getPreferredName(), Job.DEFAULT_MODEL_SNAPSHOT_RETENTION_DAYS).     return defaults. }
false;private;0;9;;private ByteSizeValue defaultModelMemoryLimit() {     ByteSizeValue defaultLimit = new ByteSizeValue(AnalysisLimits.DEFAULT_MODEL_MEMORY_LIMIT_MB, ByteSizeUnit.MB).     ByteSizeValue maxModelMemoryLimit = clusterService.getClusterSettings().get(MachineLearningField.MAX_MODEL_MEMORY_LIMIT).     if (maxModelMemoryLimit != null && maxModelMemoryLimit.getBytes() > 0 && maxModelMemoryLimit.getBytes() < defaultLimit.getBytes()) {         return maxModelMemoryLimit.     }     return defaultLimit. }
false;private;0;5;;private Map<String, Object> datafeedsDefaults() {     Map<String, Object> anomalyDetectorsDefaults = new HashMap<>().     anomalyDetectorsDefaults.put(DatafeedConfig.SCROLL_SIZE.getPreferredName(), DatafeedConfig.DEFAULT_SCROLL_SIZE).     return anomalyDetectorsDefaults. }
false;private;0;8;;private Map<String, Object> limits() {     Map<String, Object> limits = new HashMap<>().     ByteSizeValue maxModelMemoryLimit = clusterService.getClusterSettings().get(MachineLearningField.MAX_MODEL_MEMORY_LIMIT).     if (maxModelMemoryLimit != null && maxModelMemoryLimit.getBytes() > 0) {         limits.put("max_model_memory_limit", maxModelMemoryLimit).     }     return limits. }
