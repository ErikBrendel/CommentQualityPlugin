commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "ml_delete_forecast_action". }
false;protected;2;9;;@Override protected RestChannelConsumer prepareRequest(RestRequest restRequest, NodeClient client) throws IOException {     String jobId = restRequest.param(Job.ID.getPreferredName()).     String forecastId = restRequest.param(Forecast.FORECAST_ID.getPreferredName(), MetaData.ALL).     final DeleteForecastAction.Request request = new DeleteForecastAction.Request(jobId, forecastId).     request.timeout(restRequest.paramAsTime("timeout", request.timeout())).     request.setAllowNoForecasts(restRequest.paramAsBoolean("allow_no_forecasts", request.isAllowNoForecasts())).     return channel -> client.execute(DeleteForecastAction.INSTANCE, request, new RestToXContentListener<>(channel)). }
