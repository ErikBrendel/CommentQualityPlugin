commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "ml_forecast_job_action". }
false;protected;2;19;;@Override protected RestChannelConsumer prepareRequest(RestRequest restRequest, NodeClient client) throws IOException {     String jobId = restRequest.param(Job.ID.getPreferredName()).     final ForecastJobAction.Request request.     if (restRequest.hasContentOrSourceParam()) {         XContentParser parser = restRequest.contentOrSourceParamParser().         request = ForecastJobAction.Request.parseRequest(jobId, parser).     } else {         request = new ForecastJobAction.Request(restRequest.param(Job.ID.getPreferredName())).         if (restRequest.hasParam(ForecastJobAction.Request.DURATION.getPreferredName())) {             request.setDuration(restRequest.param(ForecastJobAction.Request.DURATION.getPreferredName())).         }         if (restRequest.hasParam(ForecastJobAction.Request.EXPIRES_IN.getPreferredName())) {             request.setExpiresIn(restRequest.param(ForecastJobAction.Request.EXPIRES_IN.getPreferredName())).         }     }     return channel -> client.execute(ForecastJobAction.INSTANCE, request, new RestToXContentListener<>(channel)). }
