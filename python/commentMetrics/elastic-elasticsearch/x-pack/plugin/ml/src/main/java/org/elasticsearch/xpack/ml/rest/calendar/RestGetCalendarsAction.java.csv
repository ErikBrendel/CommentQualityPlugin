commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "ml_get_calendars_action". }
false;protected;2;23;;@Override protected RestChannelConsumer prepareRequest(RestRequest restRequest, NodeClient client) throws IOException {     String calendarId = restRequest.param(Calendar.ID.getPreferredName()).     GetCalendarsAction.Request request.     if (restRequest.hasContentOrSourceParam()) {         try (XContentParser parser = restRequest.contentOrSourceParamParser()) {             request = GetCalendarsAction.Request.parseRequest(calendarId, parser).         }     } else {         request = new GetCalendarsAction.Request().         if (!Strings.isNullOrEmpty(calendarId)) {             request.setCalendarId(calendarId).         }         if (restRequest.hasParam(PageParams.FROM.getPreferredName()) || restRequest.hasParam(PageParams.SIZE.getPreferredName())) {             request.setPageParams(new PageParams(restRequest.paramAsInt(PageParams.FROM.getPreferredName(), PageParams.DEFAULT_FROM), restRequest.paramAsInt(PageParams.SIZE.getPreferredName(), PageParams.DEFAULT_SIZE))).         }     }     return channel -> client.execute(GetCalendarsAction.INSTANCE, request, new RestStatusToXContentListener<>(channel)). }
