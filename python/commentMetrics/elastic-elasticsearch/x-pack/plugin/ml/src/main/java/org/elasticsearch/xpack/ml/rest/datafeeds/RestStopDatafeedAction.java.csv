commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "ml_stop_datafeed_action". }
false;public;2;7;;@Override public RestResponse buildResponse(Response response, XContentBuilder builder) throws Exception {     builder.startObject().     builder.field("stopped", response.isStopped()).     builder.endObject().     return new BytesRestResponse(RestStatus.OK, builder). }
false;protected;2;33;;@Override protected RestChannelConsumer prepareRequest(RestRequest restRequest, NodeClient client) throws IOException {     String datafeedId = restRequest.param(DatafeedConfig.ID.getPreferredName()).     StopDatafeedAction.Request request.     if (restRequest.hasContentOrSourceParam()) {         XContentParser parser = restRequest.contentOrSourceParamParser().         request = StopDatafeedAction.Request.parseRequest(datafeedId, parser).     } else {         request = new StopDatafeedAction.Request(datafeedId).         if (restRequest.hasParam(StopDatafeedAction.Request.TIMEOUT.getPreferredName())) {             TimeValue stopTimeout = restRequest.paramAsTime(StopDatafeedAction.Request.TIMEOUT.getPreferredName(), StopDatafeedAction.DEFAULT_TIMEOUT).             request.setStopTimeout(stopTimeout).         }         if (restRequest.hasParam(StopDatafeedAction.Request.FORCE.getPreferredName())) {             request.setForce(restRequest.paramAsBoolean(StopDatafeedAction.Request.FORCE.getPreferredName(), request.isForce())).         }         if (restRequest.hasParam(StopDatafeedAction.Request.ALLOW_NO_DATAFEEDS.getPreferredName())) {             request.setAllowNoDatafeeds(restRequest.paramAsBoolean(StopDatafeedAction.Request.ALLOW_NO_DATAFEEDS.getPreferredName(), request.allowNoDatafeeds())).         }     }     return channel -> client.execute(StopDatafeedAction.INSTANCE, request, new RestBuilderListener<Response>(channel) {          @Override         public RestResponse buildResponse(Response response, XContentBuilder builder) throws Exception {             builder.startObject().             builder.field("stopped", response.isStopped()).             builder.endObject().             return new BytesRestResponse(RestStatus.OK, builder).         }     }). }
