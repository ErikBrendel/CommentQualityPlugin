# id;timestamp;commentText;codeText;commentWords;codeWords
ScoresUpdater -> public void update(String quantilesState, long endBucketEpochMs, long windowExtensionMs);1534338685;Update the anomaly score field on all previously persisted buckets_and all contained records;public void update(String quantilesState, long endBucketEpochMs, long windowExtensionMs) {_        Normalizer normalizer = normalizerFactory.create(jobId)__        int[] counts = {0, 0}__        updateBuckets(normalizer, quantilesState, endBucketEpochMs, windowExtensionMs, counts)__        updateRecords(normalizer, quantilesState, endBucketEpochMs, windowExtensionMs, counts)__        updateInfluencers(normalizer, quantilesState, endBucketEpochMs, windowExtensionMs, counts)___        _        _        updatesPersister.executeRequest()___        LOGGER.debug("[{}] Normalization resulted in: {} updates, {} no-ops", jobId, counts[0], counts[1])__    };update,the,anomaly,score,field,on,all,previously,persisted,buckets,and,all,contained,records;public,void,update,string,quantiles,state,long,end,bucket,epoch,ms,long,window,extension,ms,normalizer,normalizer,normalizer,factory,create,job,id,int,counts,0,0,update,buckets,normalizer,quantiles,state,end,bucket,epoch,ms,window,extension,ms,counts,update,records,normalizer,quantiles,state,end,bucket,epoch,ms,window,extension,ms,counts,update,influencers,normalizer,quantiles,state,end,bucket,epoch,ms,window,extension,ms,counts,updates,persister,execute,request,logger,debug,normalization,resulted,in,updates,no,ops,job,id,counts,0,counts,1
ScoresUpdater -> public void update(String quantilesState, long endBucketEpochMs, long windowExtensionMs);1540847035;Update the anomaly score field on all previously persisted buckets_and all contained records;public void update(String quantilesState, long endBucketEpochMs, long windowExtensionMs) {_        Normalizer normalizer = normalizerFactory.create(jobId)__        int[] counts = {0, 0}__        updateBuckets(normalizer, quantilesState, endBucketEpochMs, windowExtensionMs, counts)__        updateRecords(normalizer, quantilesState, endBucketEpochMs, windowExtensionMs, counts)__        updateInfluencers(normalizer, quantilesState, endBucketEpochMs, windowExtensionMs, counts)___        _        _        updatesPersister.executeRequest()___        LOGGER.debug("[{}] Normalization resulted in: {} updates, {} no-ops", jobId, counts[0], counts[1])__    };update,the,anomaly,score,field,on,all,previously,persisted,buckets,and,all,contained,records;public,void,update,string,quantiles,state,long,end,bucket,epoch,ms,long,window,extension,ms,normalizer,normalizer,normalizer,factory,create,job,id,int,counts,0,0,update,buckets,normalizer,quantiles,state,end,bucket,epoch,ms,window,extension,ms,counts,update,records,normalizer,quantiles,state,end,bucket,epoch,ms,window,extension,ms,counts,update,influencers,normalizer,quantiles,state,end,bucket,epoch,ms,window,extension,ms,counts,updates,persister,execute,request,logger,debug,normalization,resulted,in,updates,no,ops,job,id,counts,0,counts,1
ScoresUpdater -> public void shutdown();1524684173;Tell the scores updater to shut down ASAP.;public void shutdown() {_        shutdown = true__    };tell,the,scores,updater,to,shut,down,asap;public,void,shutdown,shutdown,true
ScoresUpdater -> public void shutdown();1533230566;Tell the scores updater to shut down ASAP.;public void shutdown() {_        shutdown = true__    };tell,the,scores,updater,to,shut,down,asap;public,void,shutdown,shutdown,true
ScoresUpdater -> public void shutdown();1534338685;Tell the scores updater to shut down ASAP.;public void shutdown() {_        shutdown = true__    };tell,the,scores,updater,to,shut,down,asap;public,void,shutdown,shutdown,true
ScoresUpdater -> public void shutdown();1540847035;Tell the scores updater to shut down ASAP.;public void shutdown() {_        shutdown = true__    };tell,the,scores,updater,to,shut,down,asap;public,void,shutdown,shutdown,true
ScoresUpdater -> public void update(String quantilesState, long endBucketEpochMs, long windowExtensionMs, boolean perPartitionNormalization);1524684173;Update the anomaly score field on all previously persisted buckets_and all contained records;public void update(String quantilesState, long endBucketEpochMs, long windowExtensionMs, boolean perPartitionNormalization) {_        Normalizer normalizer = normalizerFactory.create(jobId)__        int[] counts = {0, 0}__        updateBuckets(normalizer, quantilesState, endBucketEpochMs, windowExtensionMs, counts, perPartitionNormalization)__        updateRecords(normalizer, quantilesState, endBucketEpochMs, windowExtensionMs, counts, perPartitionNormalization)__        updateInfluencers(normalizer, quantilesState, endBucketEpochMs, windowExtensionMs, counts, perPartitionNormalization)___        _        _        updatesPersister.executeRequest()___        LOGGER.debug("[{}] Normalization resulted in: {} updates, {} no-ops", jobId, counts[0], counts[1])__    };update,the,anomaly,score,field,on,all,previously,persisted,buckets,and,all,contained,records;public,void,update,string,quantiles,state,long,end,bucket,epoch,ms,long,window,extension,ms,boolean,per,partition,normalization,normalizer,normalizer,normalizer,factory,create,job,id,int,counts,0,0,update,buckets,normalizer,quantiles,state,end,bucket,epoch,ms,window,extension,ms,counts,per,partition,normalization,update,records,normalizer,quantiles,state,end,bucket,epoch,ms,window,extension,ms,counts,per,partition,normalization,update,influencers,normalizer,quantiles,state,end,bucket,epoch,ms,window,extension,ms,counts,per,partition,normalization,updates,persister,execute,request,logger,debug,normalization,resulted,in,updates,no,ops,job,id,counts,0,counts,1
ScoresUpdater -> public void update(String quantilesState, long endBucketEpochMs, long windowExtensionMs, boolean perPartitionNormalization);1533230566;Update the anomaly score field on all previously persisted buckets_and all contained records;public void update(String quantilesState, long endBucketEpochMs, long windowExtensionMs, boolean perPartitionNormalization) {_        Normalizer normalizer = normalizerFactory.create(jobId)__        int[] counts = {0, 0}__        updateBuckets(normalizer, quantilesState, endBucketEpochMs, windowExtensionMs, counts, perPartitionNormalization)__        updateRecords(normalizer, quantilesState, endBucketEpochMs, windowExtensionMs, counts, perPartitionNormalization)__        updateInfluencers(normalizer, quantilesState, endBucketEpochMs, windowExtensionMs, counts, perPartitionNormalization)___        _        _        updatesPersister.executeRequest()___        LOGGER.debug("[{}] Normalization resulted in: {} updates, {} no-ops", jobId, counts[0], counts[1])__    };update,the,anomaly,score,field,on,all,previously,persisted,buckets,and,all,contained,records;public,void,update,string,quantiles,state,long,end,bucket,epoch,ms,long,window,extension,ms,boolean,per,partition,normalization,normalizer,normalizer,normalizer,factory,create,job,id,int,counts,0,0,update,buckets,normalizer,quantiles,state,end,bucket,epoch,ms,window,extension,ms,counts,per,partition,normalization,update,records,normalizer,quantiles,state,end,bucket,epoch,ms,window,extension,ms,counts,per,partition,normalization,update,influencers,normalizer,quantiles,state,end,bucket,epoch,ms,window,extension,ms,counts,per,partition,normalization,updates,persister,execute,request,logger,debug,normalization,resulted,in,updates,no,ops,job,id,counts,0,counts,1
