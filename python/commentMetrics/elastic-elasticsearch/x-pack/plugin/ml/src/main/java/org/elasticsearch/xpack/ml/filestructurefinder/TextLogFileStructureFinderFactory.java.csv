# id;timestamp;commentText;codeText;commentWords;codeWords
TextLogFileStructureFinderFactory -> @Override     public boolean canCreateFromSample(List<String> explanation, String sample);1536314350;This format matches if the sample contains at least one newline and at least two_non-blank lines.;@Override_    public boolean canCreateFromSample(List<String> explanation, String sample) {_        if (sample.indexOf('\n') < 0) {_            explanation.add("Not text because sample contains no newlines")__            return false__        }_        if (TWO_NON_BLANK_LINES_PATTERN.matcher(sample).find() == false) {_            explanation.add("Not text because sample contains fewer than two non-blank lines")__            return false__        }__        explanation.add("Deciding sample is text")__        return true__    };this,format,matches,if,the,sample,contains,at,least,one,newline,and,at,least,two,non,blank,lines;override,public,boolean,can,create,from,sample,list,string,explanation,string,sample,if,sample,index,of,n,0,explanation,add,not,text,because,sample,contains,no,newlines,return,false,if,matcher,sample,find,false,explanation,add,not,text,because,sample,contains,fewer,than,two,non,blank,lines,return,false,explanation,add,deciding,sample,is,text,return,true
TextLogFileStructureFinderFactory -> @Override     public boolean canCreateFromSample(List<String> explanation, String sample);1536964057;This format matches if the sample contains at least one newline and at least two_non-blank lines.;@Override_    public boolean canCreateFromSample(List<String> explanation, String sample) {_        if (sample.indexOf('\n') < 0) {_            explanation.add("Not text because sample contains no newlines")__            return false__        }_        if (TWO_NON_BLANK_LINES_PATTERN.matcher(sample).find() == false) {_            explanation.add("Not text because sample contains fewer than two non-blank lines")__            return false__        }__        explanation.add("Deciding sample is text")__        return true__    };this,format,matches,if,the,sample,contains,at,least,one,newline,and,at,least,two,non,blank,lines;override,public,boolean,can,create,from,sample,list,string,explanation,string,sample,if,sample,index,of,n,0,explanation,add,not,text,because,sample,contains,no,newlines,return,false,if,matcher,sample,find,false,explanation,add,not,text,because,sample,contains,fewer,than,two,non,blank,lines,return,false,explanation,add,deciding,sample,is,text,return,true
TextLogFileStructureFinderFactory -> @Override     public boolean canCreateFromSample(List<String> explanation, String sample);1538170812;This format matches if the sample contains at least one newline and at least two_non-blank lines.;@Override_    public boolean canCreateFromSample(List<String> explanation, String sample) {_        if (sample.indexOf('\n') < 0) {_            explanation.add("Not text because sample contains no newlines")__            return false__        }_        if (TWO_NON_BLANK_LINES_PATTERN.matcher(sample).find() == false) {_            explanation.add("Not text because sample contains fewer than two non-blank lines")__            return false__        }__        explanation.add("Deciding sample is text")__        return true__    };this,format,matches,if,the,sample,contains,at,least,one,newline,and,at,least,two,non,blank,lines;override,public,boolean,can,create,from,sample,list,string,explanation,string,sample,if,sample,index,of,n,0,explanation,add,not,text,because,sample,contains,no,newlines,return,false,if,matcher,sample,find,false,explanation,add,not,text,because,sample,contains,fewer,than,two,non,blank,lines,return,false,explanation,add,deciding,sample,is,text,return,true
