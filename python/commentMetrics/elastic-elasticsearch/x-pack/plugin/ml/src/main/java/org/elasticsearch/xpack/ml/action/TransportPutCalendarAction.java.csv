commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void onResponse(IndexResponse indexResponse) {     listener.onResponse(new PutCalendarAction.Response(calendar)). }
false;public;1;10;;@Override public void onFailure(Exception e) {     if (e instanceof VersionConflictEngineException) {         listener.onFailure(ExceptionsHelper.badRequestException("Cannot create calendar with id [" + calendar.getId() + "] as it already exists")).     } else {         listener.onFailure(ExceptionsHelper.serverError("Error putting calendar with id [" + calendar.getId() + "]", e)).     } }
false;protected;3;35;;@Override protected void doExecute(Task task, PutCalendarAction.Request request, ActionListener<PutCalendarAction.Response> listener) {     Calendar calendar = request.getCalendar().     IndexRequest indexRequest = new IndexRequest(MlMetaIndex.INDEX_NAME).id(calendar.documentId()).     try (XContentBuilder builder = XContentFactory.jsonBuilder()) {         indexRequest.source(calendar.toXContent(builder, new ToXContent.MapParams(Collections.singletonMap(ToXContentParams.INCLUDE_TYPE, "true")))).     } catch (IOException e) {         throw new IllegalStateException("Failed to serialise calendar with id [" + calendar.getId() + "]", e).     }     // Make it an error to overwrite an existing calendar     indexRequest.opType(DocWriteRequest.OpType.CREATE).     indexRequest.setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE).     executeAsyncWithOrigin(client, ML_ORIGIN, IndexAction.INSTANCE, indexRequest, new ActionListener<IndexResponse>() {          @Override         public void onResponse(IndexResponse indexResponse) {             listener.onResponse(new PutCalendarAction.Response(calendar)).         }          @Override         public void onFailure(Exception e) {             if (e instanceof VersionConflictEngineException) {                 listener.onFailure(ExceptionsHelper.badRequestException("Cannot create calendar with id [" + calendar.getId() + "] as it already exists")).             } else {                 listener.onFailure(ExceptionsHelper.serverError("Error putting calendar with id [" + calendar.getId() + "]", e)).             }         }     }). }
