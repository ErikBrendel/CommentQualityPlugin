commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected String executor() {     return ThreadPool.Names.SAME. }
false;protected;0;4;;@Override protected PutJobAction.Response newResponse() {     return new PutJobAction.Response(). }
false;protected;3;5;;@Override protected void masterOperation(PutJobAction.Request request, ClusterState state, ActionListener<PutJobAction.Response> listener) throws Exception {     jobManager.putJob(request, analysisRegistry, state, listener). }
false;protected;2;4;;@Override protected ClusterBlockException checkBlock(PutJobAction.Request request, ClusterState state) {     return state.blocks().globalBlockedException(ClusterBlockLevel.METADATA_WRITE). }
false;protected;3;8;;@Override protected void doExecute(Task task, PutJobAction.Request request, ActionListener<PutJobAction.Response> listener) {     if (licenseState.isMachineLearningAllowed()) {         super.doExecute(task, request, listener).     } else {         listener.onFailure(LicenseUtils.newComplianceException(XPackField.MACHINE_LEARNING)).     } }
