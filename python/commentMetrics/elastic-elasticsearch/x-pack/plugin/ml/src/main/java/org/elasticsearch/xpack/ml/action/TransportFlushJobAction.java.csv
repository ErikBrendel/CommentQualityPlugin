commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;26;;@Override protected void taskOperation(FlushJobAction.Request request, TransportOpenJobAction.JobTask task, ActionListener<FlushJobAction.Response> listener) {     FlushJobParams.Builder paramsBuilder = FlushJobParams.builder().     paramsBuilder.calcInterim(request.getCalcInterim()).     if (request.getAdvanceTime() != null) {         paramsBuilder.advanceTime(request.getAdvanceTime()).     }     if (request.getSkipTime() != null) {         paramsBuilder.skipTime(request.getSkipTime()).     }     TimeRange.Builder timeRangeBuilder = TimeRange.builder().     if (request.getStart() != null) {         timeRangeBuilder.startTime(request.getStart()).     }     if (request.getEnd() != null) {         timeRangeBuilder.endTime(request.getEnd()).     }     paramsBuilder.forTimeRange(timeRangeBuilder.build()).     processManager.flushJob(task, paramsBuilder.build(), ActionListener.wrap(flushAcknowledgement -> {         listener.onResponse(new FlushJobAction.Response(true, flushAcknowledgement == null ? null : flushAcknowledgement.getLastFinalizedBucketEnd())).     }, listener::onFailure)). }
