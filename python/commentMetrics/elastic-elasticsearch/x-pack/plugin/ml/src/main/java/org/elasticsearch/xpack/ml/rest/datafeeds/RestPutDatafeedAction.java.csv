commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "ml_put_datafeed_action". }
false;protected;2;9;;@Override protected RestChannelConsumer prepareRequest(RestRequest restRequest, NodeClient client) throws IOException {     String datafeedId = restRequest.param(DatafeedConfig.ID.getPreferredName()).     XContentParser parser = restRequest.contentParser().     PutDatafeedAction.Request putDatafeedRequest = PutDatafeedAction.Request.parseRequest(datafeedId, parser).     putDatafeedRequest.timeout(restRequest.paramAsTime("timeout", putDatafeedRequest.timeout())).     putDatafeedRequest.masterNodeTimeout(restRequest.paramAsTime("master_timeout", putDatafeedRequest.masterNodeTimeout())).     return channel -> client.execute(PutDatafeedAction.INSTANCE, putDatafeedRequest, new RestToXContentListener<>(channel)). }
