commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;18;;@Override protected void doExecute(Task task, IsolateDatafeedAction.Request request, ActionListener<IsolateDatafeedAction.Response> listener) {     final ClusterState state = clusterService.state().     PersistentTasksCustomMetaData tasks = state.getMetaData().custom(PersistentTasksCustomMetaData.TYPE).     PersistentTasksCustomMetaData.PersistentTask<?> datafeedTask = MlTasks.getDatafeedTask(request.getDatafeedId(), tasks).     if (datafeedTask == null || datafeedTask.getExecutorNode() == null) {         // No running datafeed task to isolate         listener.onResponse(new IsolateDatafeedAction.Response(false)).         return.     }     String executorNode = datafeedTask.getExecutorNode().     DiscoveryNodes nodes = state.nodes().     request.setNodes(datafeedTask.getExecutorNode()).     super.doExecute(task, request, listener). }
false;protected;4;14;;@Override protected IsolateDatafeedAction.Response newResponse(IsolateDatafeedAction.Request request, List<IsolateDatafeedAction.Response> tasks, List<TaskOperationFailure> taskOperationFailures, List<FailedNodeException> failedNodeExceptions) {     if (taskOperationFailures.isEmpty() == false) {         throw org.elasticsearch.ExceptionsHelper.convertToElastic(taskOperationFailures.get(0).getCause()).     } else if (failedNodeExceptions.isEmpty() == false) {         throw org.elasticsearch.ExceptionsHelper.convertToElastic(failedNodeExceptions.get(0)).     } else {         return new IsolateDatafeedAction.Response(false).     } }
false;protected;3;6;;@Override protected void taskOperation(IsolateDatafeedAction.Request request, TransportStartDatafeedAction.DatafeedTask datafeedTask, ActionListener<IsolateDatafeedAction.Response> listener) {     datafeedTask.isolate().     listener.onResponse(new IsolateDatafeedAction.Response(false)). }
