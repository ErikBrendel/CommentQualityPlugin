commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "ml_delete_datafeed_action". }
false;protected;2;11;;@Override protected RestChannelConsumer prepareRequest(RestRequest restRequest, NodeClient client) throws IOException {     String datafeedId = restRequest.param(DatafeedConfig.ID.getPreferredName()).     DeleteDatafeedAction.Request request = new DeleteDatafeedAction.Request(datafeedId).     if (restRequest.hasParam(DeleteDatafeedAction.Request.FORCE.getPreferredName())) {         request.setForce(restRequest.paramAsBoolean(CloseJobAction.Request.FORCE.getPreferredName(), request.isForce())).     }     request.timeout(restRequest.paramAsTime("timeout", request.timeout())).     request.masterNodeTimeout(restRequest.paramAsTime("master_timeout", request.masterNodeTimeout())).     return channel -> client.execute(DeleteDatafeedAction.INSTANCE, request, new RestToXContentListener<>(channel)). }
