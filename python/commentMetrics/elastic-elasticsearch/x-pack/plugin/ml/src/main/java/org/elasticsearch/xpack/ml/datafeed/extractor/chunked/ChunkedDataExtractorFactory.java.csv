commented;modifiers;parameterAmount;loc;comment;code
false;public;2;19;;@Override public DataExtractor newExtractor(long start, long end) {     ChunkedDataExtractorContext.TimeAligner timeAligner = newTimeAligner().     ChunkedDataExtractorContext dataExtractorContext = new ChunkedDataExtractorContext(job.getId(), job.getDataDescription().getTimeField(), datafeedConfig.getIndices(), datafeedConfig.getParsedQuery(), datafeedConfig.getScrollSize(), timeAligner.alignToCeil(start), timeAligner.alignToFloor(end), datafeedConfig.getChunkingConfig().getTimeSpan(), timeAligner, datafeedConfig.getHeaders(), datafeedConfig.hasAggregations(), datafeedConfig.hasAggregations() ? datafeedConfig.getHistogramIntervalMillis() : null).     return new ChunkedDataExtractor(client, dataExtractorFactory, dataExtractorContext). }
false;private;0;11;;private ChunkedDataExtractorContext.TimeAligner newTimeAligner() {     if (datafeedConfig.hasAggregations()) {         // dropping or duplicating data.         return newIntervalTimeAligner(datafeedConfig.getHistogramIntervalMillis()).     }     return newIdentityTimeAligner(). }
false;public;1;4;;@Override public long alignToFloor(long value) {     return value. }
false;public;1;4;;@Override public long alignToCeil(long value) {     return value. }
false;static;0;13;;static ChunkedDataExtractorContext.TimeAligner newIdentityTimeAligner() {     return new ChunkedDataExtractorContext.TimeAligner() {          @Override         public long alignToFloor(long value) {             return value.         }          @Override         public long alignToCeil(long value) {             return value.         }     }. }
false;public;1;4;;@Override public long alignToFloor(long value) {     return Intervals.alignToFloor(value, interval). }
false;public;1;4;;@Override public long alignToCeil(long value) {     return Intervals.alignToCeil(value, interval). }
false;static;1;13;;static ChunkedDataExtractorContext.TimeAligner newIntervalTimeAligner(long interval) {     return new ChunkedDataExtractorContext.TimeAligner() {          @Override         public long alignToFloor(long value) {             return Intervals.alignToFloor(value, interval).         }          @Override         public long alignToCeil(long value) {             return Intervals.alignToCeil(value, interval).         }     }. }
