# id;timestamp;commentText;codeText;commentWords;codeWords
TransportPreviewDatafeedAction -> static DatafeedConfig.Builder buildPreviewDatafeed(DatafeedConfig datafeed);1524684173;Visible for testing;static DatafeedConfig.Builder buildPreviewDatafeed(DatafeedConfig datafeed) {__        _        _        _        _        _        _        _        DatafeedConfig.Builder previewDatafeed = new DatafeedConfig.Builder(datafeed)__        if (datafeed.hasAggregations() == false) {_            previewDatafeed.setChunkingConfig(ChunkingConfig.newAuto())__        }_        return previewDatafeed__    };visible,for,testing;static,datafeed,config,builder,build,preview,datafeed,datafeed,config,datafeed,datafeed,config,builder,preview,datafeed,new,datafeed,config,builder,datafeed,if,datafeed,has,aggregations,false,preview,datafeed,set,chunking,config,chunking,config,new,auto,return,preview,datafeed
TransportPreviewDatafeedAction -> static DatafeedConfig.Builder buildPreviewDatafeed(DatafeedConfig datafeed);1526467406;Visible for testing;static DatafeedConfig.Builder buildPreviewDatafeed(DatafeedConfig datafeed) {__        _        _        _        _        _        _        _        DatafeedConfig.Builder previewDatafeed = new DatafeedConfig.Builder(datafeed)__        if (datafeed.hasAggregations() == false) {_            previewDatafeed.setChunkingConfig(ChunkingConfig.newAuto())__        }_        return previewDatafeed__    };visible,for,testing;static,datafeed,config,builder,build,preview,datafeed,datafeed,config,datafeed,datafeed,config,builder,preview,datafeed,new,datafeed,config,builder,datafeed,if,datafeed,has,aggregations,false,preview,datafeed,set,chunking,config,chunking,config,new,auto,return,preview,datafeed
TransportPreviewDatafeedAction -> static DatafeedConfig.Builder buildPreviewDatafeed(DatafeedConfig datafeed);1526981569;Visible for testing;static DatafeedConfig.Builder buildPreviewDatafeed(DatafeedConfig datafeed) {__        _        _        _        _        _        _        _        DatafeedConfig.Builder previewDatafeed = new DatafeedConfig.Builder(datafeed)__        if (datafeed.hasAggregations() == false) {_            previewDatafeed.setChunkingConfig(ChunkingConfig.newAuto())__        }_        return previewDatafeed__    };visible,for,testing;static,datafeed,config,builder,build,preview,datafeed,datafeed,config,datafeed,datafeed,config,builder,preview,datafeed,new,datafeed,config,builder,datafeed,if,datafeed,has,aggregations,false,preview,datafeed,set,chunking,config,chunking,config,new,auto,return,preview,datafeed
TransportPreviewDatafeedAction -> static DatafeedConfig.Builder buildPreviewDatafeed(DatafeedConfig datafeed);1529487105;Visible for testing;static DatafeedConfig.Builder buildPreviewDatafeed(DatafeedConfig datafeed) {__        _        _        _        _        _        _        _        DatafeedConfig.Builder previewDatafeed = new DatafeedConfig.Builder(datafeed)__        if (datafeed.hasAggregations() == false) {_            previewDatafeed.setChunkingConfig(ChunkingConfig.newAuto())__        }_        return previewDatafeed__    };visible,for,testing;static,datafeed,config,builder,build,preview,datafeed,datafeed,config,datafeed,datafeed,config,builder,preview,datafeed,new,datafeed,config,builder,datafeed,if,datafeed,has,aggregations,false,preview,datafeed,set,chunking,config,chunking,config,new,auto,return,preview,datafeed
TransportPreviewDatafeedAction -> static DatafeedConfig.Builder buildPreviewDatafeed(DatafeedConfig datafeed);1529658035;Visible for testing;static DatafeedConfig.Builder buildPreviewDatafeed(DatafeedConfig datafeed) {__        _        _        _        _        _        _        _        DatafeedConfig.Builder previewDatafeed = new DatafeedConfig.Builder(datafeed)__        if (datafeed.hasAggregations() == false) {_            previewDatafeed.setChunkingConfig(ChunkingConfig.newAuto())__        }_        return previewDatafeed__    };visible,for,testing;static,datafeed,config,builder,build,preview,datafeed,datafeed,config,datafeed,datafeed,config,builder,preview,datafeed,new,datafeed,config,builder,datafeed,if,datafeed,has,aggregations,false,preview,datafeed,set,chunking,config,chunking,config,new,auto,return,preview,datafeed
TransportPreviewDatafeedAction -> static DatafeedConfig.Builder buildPreviewDatafeed(DatafeedConfig datafeed);1529916082;Visible for testing;static DatafeedConfig.Builder buildPreviewDatafeed(DatafeedConfig datafeed) {__        _        _        _        _        _        _        _        DatafeedConfig.Builder previewDatafeed = new DatafeedConfig.Builder(datafeed)__        if (datafeed.hasAggregations() == false) {_            previewDatafeed.setChunkingConfig(ChunkingConfig.newAuto())__        }_        return previewDatafeed__    };visible,for,testing;static,datafeed,config,builder,build,preview,datafeed,datafeed,config,datafeed,datafeed,config,builder,preview,datafeed,new,datafeed,config,builder,datafeed,if,datafeed,has,aggregations,false,preview,datafeed,set,chunking,config,chunking,config,new,auto,return,preview,datafeed
TransportPreviewDatafeedAction -> static DatafeedConfig.Builder buildPreviewDatafeed(DatafeedConfig datafeed);1541419698;Visible for testing;static DatafeedConfig.Builder buildPreviewDatafeed(DatafeedConfig datafeed) {__        _        _        _        _        _        _        _        DatafeedConfig.Builder previewDatafeed = new DatafeedConfig.Builder(datafeed)__        if (datafeed.hasAggregations() == false) {_            previewDatafeed.setChunkingConfig(ChunkingConfig.newAuto())__        }_        return previewDatafeed__    };visible,for,testing;static,datafeed,config,builder,build,preview,datafeed,datafeed,config,datafeed,datafeed,config,builder,preview,datafeed,new,datafeed,config,builder,datafeed,if,datafeed,has,aggregations,false,preview,datafeed,set,chunking,config,chunking,config,new,auto,return,preview,datafeed
TransportPreviewDatafeedAction -> static DatafeedConfig.Builder buildPreviewDatafeed(DatafeedConfig datafeed);1545155131;Visible for testing;static DatafeedConfig.Builder buildPreviewDatafeed(DatafeedConfig datafeed) {__        _        _        _        _        _        _        _        DatafeedConfig.Builder previewDatafeed = new DatafeedConfig.Builder(datafeed)__        if (datafeed.hasAggregations() == false) {_            previewDatafeed.setChunkingConfig(ChunkingConfig.newAuto())__        }_        return previewDatafeed__    };visible,for,testing;static,datafeed,config,builder,build,preview,datafeed,datafeed,config,datafeed,datafeed,config,builder,preview,datafeed,new,datafeed,config,builder,datafeed,if,datafeed,has,aggregations,false,preview,datafeed,set,chunking,config,chunking,config,new,auto,return,preview,datafeed
TransportPreviewDatafeedAction -> static void previewDatafeed(DataExtractor dataExtractor, ActionListener<PreviewDatafeedAction.Response> listener);1524684173;Visible for testing;static void previewDatafeed(DataExtractor dataExtractor, ActionListener<PreviewDatafeedAction.Response> listener) {_        try {_            Optional<InputStream> inputStream = dataExtractor.next()__            _            _            _            _            _            _            StringBuilder responseBuilder = new StringBuilder("[")__            if (inputStream.isPresent()) {_                try (BufferedReader buffer = new BufferedReader(new InputStreamReader(inputStream.get(), StandardCharsets.UTF_8))) {_                    responseBuilder.append(buffer.lines().collect(Collectors.joining(" ")).replace("} {", "},{"))__                }_            }_            responseBuilder.append("]")__            listener.onResponse(new PreviewDatafeedAction.Response(_                    new BytesArray(responseBuilder.toString().getBytes(StandardCharsets.UTF_8))))__        } catch (Exception e) {_            listener.onFailure(e)__        } finally {_            dataExtractor.cancel()__        }_    };visible,for,testing;static,void,preview,datafeed,data,extractor,data,extractor,action,listener,preview,datafeed,action,response,listener,try,optional,input,stream,input,stream,data,extractor,next,string,builder,response,builder,new,string,builder,if,input,stream,is,present,try,buffered,reader,buffer,new,buffered,reader,new,input,stream,reader,input,stream,get,standard,charsets,response,builder,append,buffer,lines,collect,collectors,joining,replace,response,builder,append,listener,on,response,new,preview,datafeed,action,response,new,bytes,array,response,builder,to,string,get,bytes,standard,charsets,catch,exception,e,listener,on,failure,e,finally,data,extractor,cancel
TransportPreviewDatafeedAction -> static void previewDatafeed(DataExtractor dataExtractor, ActionListener<PreviewDatafeedAction.Response> listener);1526467406;Visible for testing;static void previewDatafeed(DataExtractor dataExtractor, ActionListener<PreviewDatafeedAction.Response> listener) {_        try {_            Optional<InputStream> inputStream = dataExtractor.next()__            _            _            _            _            _            _            StringBuilder responseBuilder = new StringBuilder("[")__            if (inputStream.isPresent()) {_                try (BufferedReader buffer = new BufferedReader(new InputStreamReader(inputStream.get(), StandardCharsets.UTF_8))) {_                    responseBuilder.append(buffer.lines().collect(Collectors.joining(" ")).replace("} {", "},{"))__                }_            }_            responseBuilder.append("]")__            listener.onResponse(new PreviewDatafeedAction.Response(_                    new BytesArray(responseBuilder.toString().getBytes(StandardCharsets.UTF_8))))__        } catch (Exception e) {_            listener.onFailure(e)__        } finally {_            dataExtractor.cancel()__        }_    };visible,for,testing;static,void,preview,datafeed,data,extractor,data,extractor,action,listener,preview,datafeed,action,response,listener,try,optional,input,stream,input,stream,data,extractor,next,string,builder,response,builder,new,string,builder,if,input,stream,is,present,try,buffered,reader,buffer,new,buffered,reader,new,input,stream,reader,input,stream,get,standard,charsets,response,builder,append,buffer,lines,collect,collectors,joining,replace,response,builder,append,listener,on,response,new,preview,datafeed,action,response,new,bytes,array,response,builder,to,string,get,bytes,standard,charsets,catch,exception,e,listener,on,failure,e,finally,data,extractor,cancel
TransportPreviewDatafeedAction -> static void previewDatafeed(DataExtractor dataExtractor, ActionListener<PreviewDatafeedAction.Response> listener);1526981569;Visible for testing;static void previewDatafeed(DataExtractor dataExtractor, ActionListener<PreviewDatafeedAction.Response> listener) {_        try {_            Optional<InputStream> inputStream = dataExtractor.next()__            _            _            _            _            _            _            StringBuilder responseBuilder = new StringBuilder("[")__            if (inputStream.isPresent()) {_                try (BufferedReader buffer = new BufferedReader(new InputStreamReader(inputStream.get(), StandardCharsets.UTF_8))) {_                    responseBuilder.append(buffer.lines().collect(Collectors.joining(" ")).replace("} {", "},{"))__                }_            }_            responseBuilder.append("]")__            listener.onResponse(new PreviewDatafeedAction.Response(_                    new BytesArray(responseBuilder.toString().getBytes(StandardCharsets.UTF_8))))__        } catch (Exception e) {_            listener.onFailure(e)__        } finally {_            dataExtractor.cancel()__        }_    };visible,for,testing;static,void,preview,datafeed,data,extractor,data,extractor,action,listener,preview,datafeed,action,response,listener,try,optional,input,stream,input,stream,data,extractor,next,string,builder,response,builder,new,string,builder,if,input,stream,is,present,try,buffered,reader,buffer,new,buffered,reader,new,input,stream,reader,input,stream,get,standard,charsets,response,builder,append,buffer,lines,collect,collectors,joining,replace,response,builder,append,listener,on,response,new,preview,datafeed,action,response,new,bytes,array,response,builder,to,string,get,bytes,standard,charsets,catch,exception,e,listener,on,failure,e,finally,data,extractor,cancel
TransportPreviewDatafeedAction -> static void previewDatafeed(DataExtractor dataExtractor, ActionListener<PreviewDatafeedAction.Response> listener);1529487105;Visible for testing;static void previewDatafeed(DataExtractor dataExtractor, ActionListener<PreviewDatafeedAction.Response> listener) {_        try {_            Optional<InputStream> inputStream = dataExtractor.next()__            _            _            _            _            _            _            StringBuilder responseBuilder = new StringBuilder("[")__            if (inputStream.isPresent()) {_                try (BufferedReader buffer = new BufferedReader(new InputStreamReader(inputStream.get(), StandardCharsets.UTF_8))) {_                    responseBuilder.append(buffer.lines().collect(Collectors.joining(" ")).replace("} {", "},{"))__                }_            }_            responseBuilder.append("]")__            listener.onResponse(new PreviewDatafeedAction.Response(_                    new BytesArray(responseBuilder.toString().getBytes(StandardCharsets.UTF_8))))__        } catch (Exception e) {_            listener.onFailure(e)__        } finally {_            dataExtractor.cancel()__        }_    };visible,for,testing;static,void,preview,datafeed,data,extractor,data,extractor,action,listener,preview,datafeed,action,response,listener,try,optional,input,stream,input,stream,data,extractor,next,string,builder,response,builder,new,string,builder,if,input,stream,is,present,try,buffered,reader,buffer,new,buffered,reader,new,input,stream,reader,input,stream,get,standard,charsets,response,builder,append,buffer,lines,collect,collectors,joining,replace,response,builder,append,listener,on,response,new,preview,datafeed,action,response,new,bytes,array,response,builder,to,string,get,bytes,standard,charsets,catch,exception,e,listener,on,failure,e,finally,data,extractor,cancel
TransportPreviewDatafeedAction -> static void previewDatafeed(DataExtractor dataExtractor, ActionListener<PreviewDatafeedAction.Response> listener);1529658035;Visible for testing;static void previewDatafeed(DataExtractor dataExtractor, ActionListener<PreviewDatafeedAction.Response> listener) {_        try {_            Optional<InputStream> inputStream = dataExtractor.next()__            _            _            _            _            _            _            StringBuilder responseBuilder = new StringBuilder("[")__            if (inputStream.isPresent()) {_                try (BufferedReader buffer = new BufferedReader(new InputStreamReader(inputStream.get(), StandardCharsets.UTF_8))) {_                    responseBuilder.append(buffer.lines().collect(Collectors.joining(" ")).replace("} {", "},{"))__                }_            }_            responseBuilder.append("]")__            listener.onResponse(new PreviewDatafeedAction.Response(_                    new BytesArray(responseBuilder.toString().getBytes(StandardCharsets.UTF_8))))__        } catch (Exception e) {_            listener.onFailure(e)__        } finally {_            dataExtractor.cancel()__        }_    };visible,for,testing;static,void,preview,datafeed,data,extractor,data,extractor,action,listener,preview,datafeed,action,response,listener,try,optional,input,stream,input,stream,data,extractor,next,string,builder,response,builder,new,string,builder,if,input,stream,is,present,try,buffered,reader,buffer,new,buffered,reader,new,input,stream,reader,input,stream,get,standard,charsets,response,builder,append,buffer,lines,collect,collectors,joining,replace,response,builder,append,listener,on,response,new,preview,datafeed,action,response,new,bytes,array,response,builder,to,string,get,bytes,standard,charsets,catch,exception,e,listener,on,failure,e,finally,data,extractor,cancel
TransportPreviewDatafeedAction -> static void previewDatafeed(DataExtractor dataExtractor, ActionListener<PreviewDatafeedAction.Response> listener);1529916082;Visible for testing;static void previewDatafeed(DataExtractor dataExtractor, ActionListener<PreviewDatafeedAction.Response> listener) {_        try {_            Optional<InputStream> inputStream = dataExtractor.next()__            _            _            _            _            _            _            StringBuilder responseBuilder = new StringBuilder("[")__            if (inputStream.isPresent()) {_                try (BufferedReader buffer = new BufferedReader(new InputStreamReader(inputStream.get(), StandardCharsets.UTF_8))) {_                    responseBuilder.append(buffer.lines().collect(Collectors.joining(" ")).replace("} {", "},{"))__                }_            }_            responseBuilder.append("]")__            listener.onResponse(new PreviewDatafeedAction.Response(_                    new BytesArray(responseBuilder.toString().getBytes(StandardCharsets.UTF_8))))__        } catch (Exception e) {_            listener.onFailure(e)__        } finally {_            dataExtractor.cancel()__        }_    };visible,for,testing;static,void,preview,datafeed,data,extractor,data,extractor,action,listener,preview,datafeed,action,response,listener,try,optional,input,stream,input,stream,data,extractor,next,string,builder,response,builder,new,string,builder,if,input,stream,is,present,try,buffered,reader,buffer,new,buffered,reader,new,input,stream,reader,input,stream,get,standard,charsets,response,builder,append,buffer,lines,collect,collectors,joining,replace,response,builder,append,listener,on,response,new,preview,datafeed,action,response,new,bytes,array,response,builder,to,string,get,bytes,standard,charsets,catch,exception,e,listener,on,failure,e,finally,data,extractor,cancel
TransportPreviewDatafeedAction -> static void previewDatafeed(DataExtractor dataExtractor, ActionListener<PreviewDatafeedAction.Response> listener);1541419698;Visible for testing;static void previewDatafeed(DataExtractor dataExtractor, ActionListener<PreviewDatafeedAction.Response> listener) {_        try {_            Optional<InputStream> inputStream = dataExtractor.next()__            _            _            _            _            _            _            StringBuilder responseBuilder = new StringBuilder("[")__            if (inputStream.isPresent()) {_                try (BufferedReader buffer = new BufferedReader(new InputStreamReader(inputStream.get(), StandardCharsets.UTF_8))) {_                    responseBuilder.append(buffer.lines().collect(Collectors.joining(" ")).replace("} {", "},{"))__                }_            }_            responseBuilder.append("]")__            listener.onResponse(new PreviewDatafeedAction.Response(_                    new BytesArray(responseBuilder.toString().getBytes(StandardCharsets.UTF_8))))__        } catch (Exception e) {_            listener.onFailure(e)__        } finally {_            dataExtractor.cancel()__        }_    };visible,for,testing;static,void,preview,datafeed,data,extractor,data,extractor,action,listener,preview,datafeed,action,response,listener,try,optional,input,stream,input,stream,data,extractor,next,string,builder,response,builder,new,string,builder,if,input,stream,is,present,try,buffered,reader,buffer,new,buffered,reader,new,input,stream,reader,input,stream,get,standard,charsets,response,builder,append,buffer,lines,collect,collectors,joining,replace,response,builder,append,listener,on,response,new,preview,datafeed,action,response,new,bytes,array,response,builder,to,string,get,bytes,standard,charsets,catch,exception,e,listener,on,failure,e,finally,data,extractor,cancel
TransportPreviewDatafeedAction -> static void previewDatafeed(DataExtractor dataExtractor, ActionListener<PreviewDatafeedAction.Response> listener);1545155131;Visible for testing;static void previewDatafeed(DataExtractor dataExtractor, ActionListener<PreviewDatafeedAction.Response> listener) {_        try {_            Optional<InputStream> inputStream = dataExtractor.next()__            _            _            _            _            _            _            StringBuilder responseBuilder = new StringBuilder("[")__            if (inputStream.isPresent()) {_                try (BufferedReader buffer = new BufferedReader(new InputStreamReader(inputStream.get(), StandardCharsets.UTF_8))) {_                    responseBuilder.append(buffer.lines().collect(Collectors.joining(" ")).replace("} {", "},{"))__                }_            }_            responseBuilder.append("]")__            listener.onResponse(new PreviewDatafeedAction.Response(_                    new BytesArray(responseBuilder.toString().getBytes(StandardCharsets.UTF_8))))__        } catch (Exception e) {_            listener.onFailure(e)__        } finally {_            dataExtractor.cancel()__        }_    };visible,for,testing;static,void,preview,datafeed,data,extractor,data,extractor,action,listener,preview,datafeed,action,response,listener,try,optional,input,stream,input,stream,data,extractor,next,string,builder,response,builder,new,string,builder,if,input,stream,is,present,try,buffered,reader,buffer,new,buffered,reader,new,input,stream,reader,input,stream,get,standard,charsets,response,builder,append,buffer,lines,collect,collectors,joining,replace,response,builder,append,listener,on,response,new,preview,datafeed,action,response,new,bytes,array,response,builder,to,string,get,bytes,standard,charsets,catch,exception,e,listener,on,failure,e,finally,data,extractor,cancel
