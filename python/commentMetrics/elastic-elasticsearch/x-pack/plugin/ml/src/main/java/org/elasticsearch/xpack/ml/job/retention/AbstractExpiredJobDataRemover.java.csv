# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractExpiredJobDataRemover -> WrappedBatchedJobsIterator -> @Override         public Job next();1545155131;Before BatchedJobsIterator has run a search it reports hasNext == true_but the first search may return no results. In that case null is return_and clients have to handle null.;@Override_        public Job next() {_            if (currentBatch != null && currentBatch.hasNext()) {_                return currentBatch.next()__            }__            _            _            currentBatch = createBatchIteratorFromBatch(batchedIterator.next())___            _            _            return currentBatch.hasNext() ? currentBatch.next() : null__        };before,batched,jobs,iterator,has,run,a,search,it,reports,has,next,true,but,the,first,search,may,return,no,results,in,that,case,null,is,return,and,clients,have,to,handle,null;override,public,job,next,if,current,batch,null,current,batch,has,next,return,current,batch,next,current,batch,create,batch,iterator,from,batch,batched,iterator,next,return,current,batch,has,next,current,batch,next,null
AbstractExpiredJobDataRemover -> WrappedBatchedJobsIterator -> @Override         public Job next();1548236405;Before BatchedJobsIterator has run a search it reports hasNext == true_but the first search may return no results. In that case null is return_and clients have to handle null.;@Override_        public Job next() {_            if (currentBatch != null && currentBatch.hasNext()) {_                return currentBatch.next()__            }__            _            _            currentBatch = createBatchIteratorFromBatch(batchedIterator.next())___            _            _            return currentBatch.hasNext() ? currentBatch.next() : null__        };before,batched,jobs,iterator,has,run,a,search,it,reports,has,next,true,but,the,first,search,may,return,no,results,in,that,case,null,is,return,and,clients,have,to,handle,null;override,public,job,next,if,current,batch,null,current,batch,has,next,return,current,batch,next,current,batch,create,batch,iterator,from,batch,batched,iterator,next,return,current,batch,has,next,current,batch,next,null
AbstractExpiredJobDataRemover -> protected abstract void removeDataBefore(Job job, long cutoffEpochMs, ActionListener<Boolean> listener)_;1524684173;Template method to allow implementation details of various types of data (e.g. results, model snapshots)._Implementors need to call {@code listener.onResponse} when they are done in order to continue to the next job.;protected abstract void removeDataBefore(Job job, long cutoffEpochMs, ActionListener<Boolean> listener)_;template,method,to,allow,implementation,details,of,various,types,of,data,e,g,results,model,snapshots,implementors,need,to,call,code,listener,on,response,when,they,are,done,in,order,to,continue,to,the,next,job;protected,abstract,void,remove,data,before,job,job,long,cutoff,epoch,ms,action,listener,boolean,listener
AbstractExpiredJobDataRemover -> protected abstract void removeDataBefore(Job job, long cutoffEpochMs, ActionListener<Boolean> listener)_;1526981569;Template method to allow implementation details of various types of data (e.g. results, model snapshots)._Implementors need to call {@code listener.onResponse} when they are done in order to continue to the next job.;protected abstract void removeDataBefore(Job job, long cutoffEpochMs, ActionListener<Boolean> listener)_;template,method,to,allow,implementation,details,of,various,types,of,data,e,g,results,model,snapshots,implementors,need,to,call,code,listener,on,response,when,they,are,done,in,order,to,continue,to,the,next,job;protected,abstract,void,remove,data,before,job,job,long,cutoff,epoch,ms,action,listener,boolean,listener
AbstractExpiredJobDataRemover -> protected abstract void removeDataBefore(Job job, long cutoffEpochMs, ActionListener<Boolean> listener)_;1545155131;Template method to allow implementation details of various types of data (e.g. results, model snapshots)._Implementors need to call {@code listener.onResponse} when they are done in order to continue to the next job.;protected abstract void removeDataBefore(Job job, long cutoffEpochMs, ActionListener<Boolean> listener)_;template,method,to,allow,implementation,details,of,various,types,of,data,e,g,results,model,snapshots,implementors,need,to,call,code,listener,on,response,when,they,are,done,in,order,to,continue,to,the,next,job;protected,abstract,void,remove,data,before,job,job,long,cutoff,epoch,ms,action,listener,boolean,listener
AbstractExpiredJobDataRemover -> protected abstract void removeDataBefore(Job job, long cutoffEpochMs, ActionListener<Boolean> listener)_;1548236405;Template method to allow implementation details of various types of data (e.g. results, model snapshots)._Implementors need to call {@code listener.onResponse} when they are done in order to continue to the next job.;protected abstract void removeDataBefore(Job job, long cutoffEpochMs, ActionListener<Boolean> listener)_;template,method,to,allow,implementation,details,of,various,types,of,data,e,g,results,model,snapshots,implementors,need,to,call,code,listener,on,response,when,they,are,done,in,order,to,continue,to,the,next,job;protected,abstract,void,remove,data,before,job,job,long,cutoff,epoch,ms,action,listener,boolean,listener
