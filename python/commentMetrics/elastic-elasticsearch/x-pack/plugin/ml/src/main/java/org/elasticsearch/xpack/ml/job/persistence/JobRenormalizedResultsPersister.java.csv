commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;public void updateBucket(BucketNormalizable normalizable) {     updateResult(normalizable.getId(), normalizable.getOriginatingIndex(), normalizable.getBucket()).     updateBucketInfluencersStandalone(normalizable.getOriginatingIndex(), normalizable.getBucket().getBucketInfluencers()). }
false;private;2;7;;private void updateBucketInfluencersStandalone(String indexName, List<BucketInfluencer> bucketInfluencers) {     if (bucketInfluencers != null && bucketInfluencers.isEmpty() == false) {         for (BucketInfluencer bucketInfluencer : bucketInfluencers) {             updateResult(bucketInfluencer.getId(), indexName, bucketInfluencer).         }     } }
false;public;1;5;;public void updateResults(List<Normalizable> normalizables) {     for (Normalizable normalizable : normalizables) {         updateResult(normalizable.getId(), normalizable.getOriginatingIndex(), normalizable).     } }
false;public;3;10;;public void updateResult(String id, String index, ToXContent resultDoc) {     try (XContentBuilder content = toXContentBuilder(resultDoc)) {         bulkRequest.add(new IndexRequest(index).id(id).source(content)).     } catch (IOException e) {         logger.error(new ParameterizedMessage("[{}] Error serialising result", jobId), e).     }     if (bulkRequest.numberOfActions() >= BULK_LIMIT) {         executeRequest().     } }
false;private;1;5;;private XContentBuilder toXContentBuilder(ToXContent obj) throws IOException {     XContentBuilder builder = jsonBuilder().     obj.toXContent(builder, ToXContent.EMPTY_PARAMS).     return builder. }
true;public;0;15;/**  * Execute the bulk action  */ ;/**  * Execute the bulk action  */ public void executeRequest() {     if (bulkRequest.numberOfActions() == 0) {         return.     }     logger.trace("[{}] ES API CALL: bulk request with {} actions", jobId, bulkRequest.numberOfActions()).     try (ThreadContext.StoredContext ignore = stashWithOrigin(client.threadPool().getThreadContext(), ML_ORIGIN)) {         BulkResponse addRecordsResponse = client.bulk(bulkRequest).actionGet().         if (addRecordsResponse.hasFailures()) {             logger.error("[{}] Bulk index of results has errors: {}", jobId, addRecordsResponse.buildFailureMessage()).         }     }     bulkRequest = new BulkRequest(). }
false;;0;3;;BulkRequest getBulkRequest() {     return bulkRequest. }
