commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void onResponse(IndexResponse indexResponse) {     listener.onResponse(new PutFilterAction.Response(filter)). }
false;public;1;11;;@Override public void onFailure(Exception e) {     Exception reportedException.     if (e instanceof VersionConflictEngineException) {         reportedException = new ResourceAlreadyExistsException("A filter with id [" + filter.getId() + "] already exists").     } else {         reportedException = ExceptionsHelper.serverError("Error putting filter with id [" + filter.getId() + "]", e).     }     listener.onFailure(reportedException). }
false;protected;3;33;;@Override protected void doExecute(Task task, PutFilterAction.Request request, ActionListener<PutFilterAction.Response> listener) {     MlFilter filter = request.getFilter().     IndexRequest indexRequest = new IndexRequest(MlMetaIndex.INDEX_NAME).id(filter.documentId()).     indexRequest.opType(DocWriteRequest.OpType.CREATE).     indexRequest.setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE).     try (XContentBuilder builder = XContentFactory.jsonBuilder()) {         ToXContent.MapParams params = new ToXContent.MapParams(Collections.singletonMap(ToXContentParams.INCLUDE_TYPE, "true")).         indexRequest.source(filter.toXContent(builder, params)).     } catch (IOException e) {         throw new IllegalStateException("Failed to serialise filter with id [" + filter.getId() + "]", e).     }     executeAsyncWithOrigin(client, ML_ORIGIN, IndexAction.INSTANCE, indexRequest, new ActionListener<IndexResponse>() {          @Override         public void onResponse(IndexResponse indexResponse) {             listener.onResponse(new PutFilterAction.Response(filter)).         }          @Override         public void onFailure(Exception e) {             Exception reportedException.             if (e instanceof VersionConflictEngineException) {                 reportedException = new ResourceAlreadyExistsException("A filter with id [" + filter.getId() + "] already exists").             } else {                 reportedException = ExceptionsHelper.serverError("Error putting filter with id [" + filter.getId() + "]", e).             }             listener.onFailure(reportedException).         }     }). }
