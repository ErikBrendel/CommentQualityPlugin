commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "ml_start_datafeed_action". }
false;public;2;7;;@Override public RestResponse buildResponse(AcknowledgedResponse r, XContentBuilder builder) throws Exception {     builder.startObject().     builder.field("started", r.isAcknowledged()).     builder.endObject().     return new BytesRestResponse(RestStatus.OK, builder). }
false;protected;2;34;;@Override protected RestChannelConsumer prepareRequest(RestRequest restRequest, NodeClient client) throws IOException {     String datafeedId = restRequest.param(DatafeedConfig.ID.getPreferredName()).     StartDatafeedAction.Request jobDatafeedRequest.     if (restRequest.hasContentOrSourceParam()) {         XContentParser parser = restRequest.contentOrSourceParamParser().         jobDatafeedRequest = StartDatafeedAction.Request.parseRequest(datafeedId, parser).     } else {         String startTime = restRequest.param(StartDatafeedAction.START_TIME.getPreferredName(), DEFAULT_START).         StartDatafeedAction.DatafeedParams datafeedParams = new StartDatafeedAction.DatafeedParams(datafeedId, startTime).         if (restRequest.hasParam(StartDatafeedAction.END_TIME.getPreferredName())) {             datafeedParams.setEndTime(restRequest.param(StartDatafeedAction.END_TIME.getPreferredName())).         }         if (restRequest.hasParam(StartDatafeedAction.TIMEOUT.getPreferredName())) {             TimeValue openTimeout = restRequest.paramAsTime(StartDatafeedAction.TIMEOUT.getPreferredName(), TimeValue.timeValueSeconds(20)).             datafeedParams.setTimeout(openTimeout).         }         jobDatafeedRequest = new StartDatafeedAction.Request(datafeedParams).     }     return channel -> {         client.execute(StartDatafeedAction.INSTANCE, jobDatafeedRequest, new RestBuilderListener<AcknowledgedResponse>(channel) {              @Override             public RestResponse buildResponse(AcknowledgedResponse r, XContentBuilder builder) throws Exception {                 builder.startObject().                 builder.field("started", r.isAcknowledged()).                 builder.endObject().                 return new BytesRestResponse(RestStatus.OK, builder).             }         }).     }. }
