commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;7;;@Override protected Request createTestInstance() {     if (randomBoolean()) {         return new Request(MetaData.ALL).     }     return new Request(randomAlphaOfLengthBetween(1, 20)). }
false;protected;0;4;;@Override protected Writeable.Reader<Request> instanceReader() {     return Request::new. }
false;public;0;9;;public void testStateCheckNoPersistentTasks() {     GetRollupJobsAction.Request request = new GetRollupJobsAction.Request("foo").     ClusterState state = ClusterState.builder(new ClusterName("_name")).metaData(MetaData.builder().putCustom(PersistentTasksCustomMetaData.TYPE, new PersistentTasksCustomMetaData(0L, Collections.emptyMap()))).build().     boolean hasRollupJobs = TransportGetRollupJobAction.stateHasRollupJobs(request, state).     assertFalse(hasRollupJobs). }
false;public;0;9;;public void testStateCheckAllNoPersistentTasks() {     GetRollupJobsAction.Request request = new GetRollupJobsAction.Request("_all").     ClusterState state = ClusterState.builder(new ClusterName("_name")).metaData(MetaData.builder().putCustom(PersistentTasksCustomMetaData.TYPE, new PersistentTasksCustomMetaData(0L, Collections.emptyMap()))).build().     boolean hasRollupJobs = TransportGetRollupJobAction.stateHasRollupJobs(request, state).     assertFalse(hasRollupJobs). }
false;public;0;11;;public void testStateCheckNoMatchingPersistentTasks() {     GetRollupJobsAction.Request request = new GetRollupJobsAction.Request("foo").     Map<String, PersistentTasksCustomMetaData.PersistentTask<?>> tasks = Collections.singletonMap("bar", new PersistentTasksCustomMetaData.PersistentTask<>("bar", "bar", null, 1, null)).     ClusterState state = ClusterState.builder(new ClusterName("_name")).metaData(MetaData.builder().putCustom(PersistentTasksCustomMetaData.TYPE, new PersistentTasksCustomMetaData(0L, tasks))).build().     boolean hasRollupJobs = TransportGetRollupJobAction.stateHasRollupJobs(request, state).     assertFalse(hasRollupJobs). }
false;public;0;12;;public void testStateCheckMatchingPersistentTasks() {     GetRollupJobsAction.Request request = new GetRollupJobsAction.Request("foo").     RollupJob job = new RollupJob(ConfigTestHelpers.randomRollupJobConfig(random(), "foo"), Collections.emptyMap()).     Map<String, PersistentTasksCustomMetaData.PersistentTask<?>> tasks = Collections.singletonMap("foo", new PersistentTasksCustomMetaData.PersistentTask<>("foo", RollupJob.NAME, job, 1, null)).     ClusterState state = ClusterState.builder(new ClusterName("_name")).metaData(MetaData.builder().putCustom(PersistentTasksCustomMetaData.TYPE, new PersistentTasksCustomMetaData(0L, tasks))).build().     boolean hasRollupJobs = TransportGetRollupJobAction.stateHasRollupJobs(request, state).     assertTrue(hasRollupJobs). }
false;public;0;12;;public void testStateCheckAllMatchingPersistentTasks() {     GetRollupJobsAction.Request request = new GetRollupJobsAction.Request("_all").     RollupJob job = new RollupJob(ConfigTestHelpers.randomRollupJobConfig(random(), "foo"), Collections.emptyMap()).     Map<String, PersistentTasksCustomMetaData.PersistentTask<?>> tasks = Collections.singletonMap("foo", new PersistentTasksCustomMetaData.PersistentTask<>("foo", RollupJob.NAME, job, 1, null)).     ClusterState state = ClusterState.builder(new ClusterName("_name")).metaData(MetaData.builder().putCustom(PersistentTasksCustomMetaData.TYPE, new PersistentTasksCustomMetaData(0L, tasks))).build().     boolean hasRollupJobs = TransportGetRollupJobAction.stateHasRollupJobs(request, state).     assertTrue(hasRollupJobs). }
false;public;0;14;;public void testStateCheckAllWithSeveralMatchingPersistentTasks() {     GetRollupJobsAction.Request request = new GetRollupJobsAction.Request("_all").     RollupJob job = new RollupJob(ConfigTestHelpers.randomRollupJobConfig(random(), "foo"), Collections.emptyMap()).     RollupJob job2 = new RollupJob(ConfigTestHelpers.randomRollupJobConfig(random(), "bar"), Collections.emptyMap()).     Map<String, PersistentTasksCustomMetaData.PersistentTask<?>> tasks = new HashMap<>(2).     tasks.put("foo", new PersistentTasksCustomMetaData.PersistentTask<>("foo", RollupJob.NAME, job, 1, null)).     tasks.put("bar", new PersistentTasksCustomMetaData.PersistentTask<>("bar", RollupJob.NAME, job2, 1, null)).     ClusterState state = ClusterState.builder(new ClusterName("_name")).metaData(MetaData.builder().putCustom(PersistentTasksCustomMetaData.TYPE, new PersistentTasksCustomMetaData(0L, tasks))).build().     boolean hasRollupJobs = TransportGetRollupJobAction.stateHasRollupJobs(request, state).     assertTrue(hasRollupJobs). }
