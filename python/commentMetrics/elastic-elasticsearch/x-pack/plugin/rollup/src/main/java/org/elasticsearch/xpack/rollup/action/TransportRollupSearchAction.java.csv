# id;timestamp;commentText;codeText;commentWords;codeWords
TransportRollupSearchAction -> private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,                                                         Writeable.Reader<SearchSourceBuilder> reader) throws IOException;1524684173;Lifted from ESTestCase :s  Don't reuse this anywhere!__Create a copy of an original {@link SearchSourceBuilder} object by running it through a {@link BytesStreamOutput} and_reading it in again using a {@link Writeable.Reader}. The stream that is wrapped around the {@link StreamInput}_potentially need to use a {@link NamedWriteableRegistry}, so this needs to be provided too;private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,_                                                        Writeable.Reader<SearchSourceBuilder> reader) throws IOException {_        Writeable.Writer<SearchSourceBuilder> writer = (out, value) -> value.writeTo(out)__        try (BytesStreamOutput output = new BytesStreamOutput()) {_            output.setVersion(Version.CURRENT)__            writer.write(output, original)__            try (StreamInput in = new NamedWriteableAwareStreamInput(output.bytes().streamInput(), namedWriteableRegistry)) {_                in.setVersion(Version.CURRENT)__                return reader.read(in)__            }_        }_    };lifted,from,estest,case,s,don,t,reuse,this,anywhere,create,a,copy,of,an,original,link,search,source,builder,object,by,running,it,through,a,link,bytes,stream,output,and,reading,it,in,again,using,a,link,writeable,reader,the,stream,that,is,wrapped,around,the,link,stream,input,potentially,need,to,use,a,link,named,writeable,registry,so,this,needs,to,be,provided,too;private,static,search,source,builder,copy,writeable,search,source,builder,original,named,writeable,registry,named,writeable,registry,writeable,reader,search,source,builder,reader,throws,ioexception,writeable,writer,search,source,builder,writer,out,value,value,write,to,out,try,bytes,stream,output,output,new,bytes,stream,output,output,set,version,version,current,writer,write,output,original,try,stream,input,in,new,named,writeable,aware,stream,input,output,bytes,stream,input,named,writeable,registry,in,set,version,version,current,return,reader,read,in
TransportRollupSearchAction -> private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,                                                         Writeable.Reader<SearchSourceBuilder> reader) throws IOException;1525645056;Lifted from ESTestCase :s  Don't reuse this anywhere!__Create a copy of an original {@link SearchSourceBuilder} object by running it through a {@link BytesStreamOutput} and_reading it in again using a {@link Writeable.Reader}. The stream that is wrapped around the {@link StreamInput}_potentially need to use a {@link NamedWriteableRegistry}, so this needs to be provided too;private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,_                                                        Writeable.Reader<SearchSourceBuilder> reader) throws IOException {_        Writeable.Writer<SearchSourceBuilder> writer = (out, value) -> value.writeTo(out)__        try (BytesStreamOutput output = new BytesStreamOutput()) {_            output.setVersion(Version.CURRENT)__            writer.write(output, original)__            try (StreamInput in = new NamedWriteableAwareStreamInput(output.bytes().streamInput(), namedWriteableRegistry)) {_                in.setVersion(Version.CURRENT)__                return reader.read(in)__            }_        }_    };lifted,from,estest,case,s,don,t,reuse,this,anywhere,create,a,copy,of,an,original,link,search,source,builder,object,by,running,it,through,a,link,bytes,stream,output,and,reading,it,in,again,using,a,link,writeable,reader,the,stream,that,is,wrapped,around,the,link,stream,input,potentially,need,to,use,a,link,named,writeable,registry,so,this,needs,to,be,provided,too;private,static,search,source,builder,copy,writeable,search,source,builder,original,named,writeable,registry,named,writeable,registry,writeable,reader,search,source,builder,reader,throws,ioexception,writeable,writer,search,source,builder,writer,out,value,value,write,to,out,try,bytes,stream,output,output,new,bytes,stream,output,output,set,version,version,current,writer,write,output,original,try,stream,input,in,new,named,writeable,aware,stream,input,output,bytes,stream,input,named,writeable,registry,in,set,version,version,current,return,reader,read,in
TransportRollupSearchAction -> private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,                                                         Writeable.Reader<SearchSourceBuilder> reader) throws IOException;1528211342;Lifted from ESTestCase :s  Don't reuse this anywhere!__Create a copy of an original {@link SearchSourceBuilder} object by running it through a {@link BytesStreamOutput} and_reading it in again using a {@link Writeable.Reader}. The stream that is wrapped around the {@link StreamInput}_potentially need to use a {@link NamedWriteableRegistry}, so this needs to be provided too;private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,_                                                        Writeable.Reader<SearchSourceBuilder> reader) throws IOException {_        Writeable.Writer<SearchSourceBuilder> writer = (out, value) -> value.writeTo(out)__        try (BytesStreamOutput output = new BytesStreamOutput()) {_            output.setVersion(Version.CURRENT)__            writer.write(output, original)__            try (StreamInput in = new NamedWriteableAwareStreamInput(output.bytes().streamInput(), namedWriteableRegistry)) {_                in.setVersion(Version.CURRENT)__                return reader.read(in)__            }_        }_    };lifted,from,estest,case,s,don,t,reuse,this,anywhere,create,a,copy,of,an,original,link,search,source,builder,object,by,running,it,through,a,link,bytes,stream,output,and,reading,it,in,again,using,a,link,writeable,reader,the,stream,that,is,wrapped,around,the,link,stream,input,potentially,need,to,use,a,link,named,writeable,registry,so,this,needs,to,be,provided,too;private,static,search,source,builder,copy,writeable,search,source,builder,original,named,writeable,registry,named,writeable,registry,writeable,reader,search,source,builder,reader,throws,ioexception,writeable,writer,search,source,builder,writer,out,value,value,write,to,out,try,bytes,stream,output,output,new,bytes,stream,output,output,set,version,version,current,writer,write,output,original,try,stream,input,in,new,named,writeable,aware,stream,input,output,bytes,stream,input,named,writeable,registry,in,set,version,version,current,return,reader,read,in
TransportRollupSearchAction -> private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,                                                         Writeable.Reader<SearchSourceBuilder> reader) throws IOException;1529487105;Lifted from ESTestCase :s  Don't reuse this anywhere!__Create a copy of an original {@link SearchSourceBuilder} object by running it through a {@link BytesStreamOutput} and_reading it in again using a {@link Writeable.Reader}. The stream that is wrapped around the {@link StreamInput}_potentially need to use a {@link NamedWriteableRegistry}, so this needs to be provided too;private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,_                                                        Writeable.Reader<SearchSourceBuilder> reader) throws IOException {_        Writeable.Writer<SearchSourceBuilder> writer = (out, value) -> value.writeTo(out)__        try (BytesStreamOutput output = new BytesStreamOutput()) {_            output.setVersion(Version.CURRENT)__            writer.write(output, original)__            try (StreamInput in = new NamedWriteableAwareStreamInput(output.bytes().streamInput(), namedWriteableRegistry)) {_                in.setVersion(Version.CURRENT)__                return reader.read(in)__            }_        }_    };lifted,from,estest,case,s,don,t,reuse,this,anywhere,create,a,copy,of,an,original,link,search,source,builder,object,by,running,it,through,a,link,bytes,stream,output,and,reading,it,in,again,using,a,link,writeable,reader,the,stream,that,is,wrapped,around,the,link,stream,input,potentially,need,to,use,a,link,named,writeable,registry,so,this,needs,to,be,provided,too;private,static,search,source,builder,copy,writeable,search,source,builder,original,named,writeable,registry,named,writeable,registry,writeable,reader,search,source,builder,reader,throws,ioexception,writeable,writer,search,source,builder,writer,out,value,value,write,to,out,try,bytes,stream,output,output,new,bytes,stream,output,output,set,version,version,current,writer,write,output,original,try,stream,input,in,new,named,writeable,aware,stream,input,output,bytes,stream,input,named,writeable,registry,in,set,version,version,current,return,reader,read,in
TransportRollupSearchAction -> private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,                                                         Writeable.Reader<SearchSourceBuilder> reader) throws IOException;1529658035;Lifted from ESTestCase :s  Don't reuse this anywhere!__Create a copy of an original {@link SearchSourceBuilder} object by running it through a {@link BytesStreamOutput} and_reading it in again using a {@link Writeable.Reader}. The stream that is wrapped around the {@link StreamInput}_potentially need to use a {@link NamedWriteableRegistry}, so this needs to be provided too;private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,_                                                        Writeable.Reader<SearchSourceBuilder> reader) throws IOException {_        Writeable.Writer<SearchSourceBuilder> writer = (out, value) -> value.writeTo(out)__        try (BytesStreamOutput output = new BytesStreamOutput()) {_            output.setVersion(Version.CURRENT)__            writer.write(output, original)__            try (StreamInput in = new NamedWriteableAwareStreamInput(output.bytes().streamInput(), namedWriteableRegistry)) {_                in.setVersion(Version.CURRENT)__                return reader.read(in)__            }_        }_    };lifted,from,estest,case,s,don,t,reuse,this,anywhere,create,a,copy,of,an,original,link,search,source,builder,object,by,running,it,through,a,link,bytes,stream,output,and,reading,it,in,again,using,a,link,writeable,reader,the,stream,that,is,wrapped,around,the,link,stream,input,potentially,need,to,use,a,link,named,writeable,registry,so,this,needs,to,be,provided,too;private,static,search,source,builder,copy,writeable,search,source,builder,original,named,writeable,registry,named,writeable,registry,writeable,reader,search,source,builder,reader,throws,ioexception,writeable,writer,search,source,builder,writer,out,value,value,write,to,out,try,bytes,stream,output,output,new,bytes,stream,output,output,set,version,version,current,writer,write,output,original,try,stream,input,in,new,named,writeable,aware,stream,input,output,bytes,stream,input,named,writeable,registry,in,set,version,version,current,return,reader,read,in
TransportRollupSearchAction -> private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,                                                         Writeable.Reader<SearchSourceBuilder> reader) throws IOException;1529687475;Lifted from ESTestCase :s  Don't reuse this anywhere!__Create a copy of an original {@link SearchSourceBuilder} object by running it through a {@link BytesStreamOutput} and_reading it in again using a {@link Writeable.Reader}. The stream that is wrapped around the {@link StreamInput}_potentially need to use a {@link NamedWriteableRegistry}, so this needs to be provided too;private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,_                                                        Writeable.Reader<SearchSourceBuilder> reader) throws IOException {_        Writeable.Writer<SearchSourceBuilder> writer = (out, value) -> value.writeTo(out)__        try (BytesStreamOutput output = new BytesStreamOutput()) {_            output.setVersion(Version.CURRENT)__            writer.write(output, original)__            try (StreamInput in = new NamedWriteableAwareStreamInput(output.bytes().streamInput(), namedWriteableRegistry)) {_                in.setVersion(Version.CURRENT)__                return reader.read(in)__            }_        }_    };lifted,from,estest,case,s,don,t,reuse,this,anywhere,create,a,copy,of,an,original,link,search,source,builder,object,by,running,it,through,a,link,bytes,stream,output,and,reading,it,in,again,using,a,link,writeable,reader,the,stream,that,is,wrapped,around,the,link,stream,input,potentially,need,to,use,a,link,named,writeable,registry,so,this,needs,to,be,provided,too;private,static,search,source,builder,copy,writeable,search,source,builder,original,named,writeable,registry,named,writeable,registry,writeable,reader,search,source,builder,reader,throws,ioexception,writeable,writer,search,source,builder,writer,out,value,value,write,to,out,try,bytes,stream,output,output,new,bytes,stream,output,output,set,version,version,current,writer,write,output,original,try,stream,input,in,new,named,writeable,aware,stream,input,output,bytes,stream,input,named,writeable,registry,in,set,version,version,current,return,reader,read,in
TransportRollupSearchAction -> private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,                                                         Writeable.Reader<SearchSourceBuilder> reader) throws IOException;1529916082;Lifted from ESTestCase :s  Don't reuse this anywhere!__Create a copy of an original {@link SearchSourceBuilder} object by running it through a {@link BytesStreamOutput} and_reading it in again using a {@link Writeable.Reader}. The stream that is wrapped around the {@link StreamInput}_potentially need to use a {@link NamedWriteableRegistry}, so this needs to be provided too;private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,_                                                        Writeable.Reader<SearchSourceBuilder> reader) throws IOException {_        Writeable.Writer<SearchSourceBuilder> writer = (out, value) -> value.writeTo(out)__        try (BytesStreamOutput output = new BytesStreamOutput()) {_            output.setVersion(Version.CURRENT)__            writer.write(output, original)__            try (StreamInput in = new NamedWriteableAwareStreamInput(output.bytes().streamInput(), namedWriteableRegistry)) {_                in.setVersion(Version.CURRENT)__                return reader.read(in)__            }_        }_    };lifted,from,estest,case,s,don,t,reuse,this,anywhere,create,a,copy,of,an,original,link,search,source,builder,object,by,running,it,through,a,link,bytes,stream,output,and,reading,it,in,again,using,a,link,writeable,reader,the,stream,that,is,wrapped,around,the,link,stream,input,potentially,need,to,use,a,link,named,writeable,registry,so,this,needs,to,be,provided,too;private,static,search,source,builder,copy,writeable,search,source,builder,original,named,writeable,registry,named,writeable,registry,writeable,reader,search,source,builder,reader,throws,ioexception,writeable,writer,search,source,builder,writer,out,value,value,write,to,out,try,bytes,stream,output,output,new,bytes,stream,output,output,set,version,version,current,writer,write,output,original,try,stream,input,in,new,named,writeable,aware,stream,input,output,bytes,stream,input,named,writeable,registry,in,set,version,version,current,return,reader,read,in
TransportRollupSearchAction -> private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,                                                         Writeable.Reader<SearchSourceBuilder> reader) throws IOException;1533319589;Lifted from ESTestCase :s  Don't reuse this anywhere!__Create a copy of an original {@link SearchSourceBuilder} object by running it through a {@link BytesStreamOutput} and_reading it in again using a {@link Writeable.Reader}. The stream that is wrapped around the {@link StreamInput}_potentially need to use a {@link NamedWriteableRegistry}, so this needs to be provided too;private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,_                                                        Writeable.Reader<SearchSourceBuilder> reader) throws IOException {_        Writeable.Writer<SearchSourceBuilder> writer = (out, value) -> value.writeTo(out)__        try (BytesStreamOutput output = new BytesStreamOutput()) {_            output.setVersion(Version.CURRENT)__            writer.write(output, original)__            try (StreamInput in = new NamedWriteableAwareStreamInput(output.bytes().streamInput(), namedWriteableRegistry)) {_                in.setVersion(Version.CURRENT)__                return reader.read(in)__            }_        }_    };lifted,from,estest,case,s,don,t,reuse,this,anywhere,create,a,copy,of,an,original,link,search,source,builder,object,by,running,it,through,a,link,bytes,stream,output,and,reading,it,in,again,using,a,link,writeable,reader,the,stream,that,is,wrapped,around,the,link,stream,input,potentially,need,to,use,a,link,named,writeable,registry,so,this,needs,to,be,provided,too;private,static,search,source,builder,copy,writeable,search,source,builder,original,named,writeable,registry,named,writeable,registry,writeable,reader,search,source,builder,reader,throws,ioexception,writeable,writer,search,source,builder,writer,out,value,value,write,to,out,try,bytes,stream,output,output,new,bytes,stream,output,output,set,version,version,current,writer,write,output,original,try,stream,input,in,new,named,writeable,aware,stream,input,output,bytes,stream,input,named,writeable,registry,in,set,version,version,current,return,reader,read,in
TransportRollupSearchAction -> private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,                                                         Writeable.Reader<SearchSourceBuilder> reader) throws IOException;1535057785;Lifted from ESTestCase :s  Don't reuse this anywhere!__Create a copy of an original {@link SearchSourceBuilder} object by running it through a {@link BytesStreamOutput} and_reading it in again using a {@link Writeable.Reader}. The stream that is wrapped around the {@link StreamInput}_potentially need to use a {@link NamedWriteableRegistry}, so this needs to be provided too;private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,_                                                        Writeable.Reader<SearchSourceBuilder> reader) throws IOException {_        Writeable.Writer<SearchSourceBuilder> writer = (out, value) -> value.writeTo(out)__        try (BytesStreamOutput output = new BytesStreamOutput()) {_            output.setVersion(Version.CURRENT)__            writer.write(output, original)__            try (StreamInput in = new NamedWriteableAwareStreamInput(output.bytes().streamInput(), namedWriteableRegistry)) {_                in.setVersion(Version.CURRENT)__                return reader.read(in)__            }_        }_    };lifted,from,estest,case,s,don,t,reuse,this,anywhere,create,a,copy,of,an,original,link,search,source,builder,object,by,running,it,through,a,link,bytes,stream,output,and,reading,it,in,again,using,a,link,writeable,reader,the,stream,that,is,wrapped,around,the,link,stream,input,potentially,need,to,use,a,link,named,writeable,registry,so,this,needs,to,be,provided,too;private,static,search,source,builder,copy,writeable,search,source,builder,original,named,writeable,registry,named,writeable,registry,writeable,reader,search,source,builder,reader,throws,ioexception,writeable,writer,search,source,builder,writer,out,value,value,write,to,out,try,bytes,stream,output,output,new,bytes,stream,output,output,set,version,version,current,writer,write,output,original,try,stream,input,in,new,named,writeable,aware,stream,input,output,bytes,stream,input,named,writeable,registry,in,set,version,version,current,return,reader,read,in
TransportRollupSearchAction -> private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,                                                         Writeable.Reader<SearchSourceBuilder> reader) throws IOException;1540847035;Lifted from ESTestCase :s  Don't reuse this anywhere!__Create a copy of an original {@link SearchSourceBuilder} object by running it through a {@link BytesStreamOutput} and_reading it in again using a {@link Writeable.Reader}. The stream that is wrapped around the {@link StreamInput}_potentially need to use a {@link NamedWriteableRegistry}, so this needs to be provided too;private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,_                                                        Writeable.Reader<SearchSourceBuilder> reader) throws IOException {_        Writeable.Writer<SearchSourceBuilder> writer = (out, value) -> value.writeTo(out)__        try (BytesStreamOutput output = new BytesStreamOutput()) {_            output.setVersion(Version.CURRENT)__            writer.write(output, original)__            try (StreamInput in = new NamedWriteableAwareStreamInput(output.bytes().streamInput(), namedWriteableRegistry)) {_                in.setVersion(Version.CURRENT)__                return reader.read(in)__            }_        }_    };lifted,from,estest,case,s,don,t,reuse,this,anywhere,create,a,copy,of,an,original,link,search,source,builder,object,by,running,it,through,a,link,bytes,stream,output,and,reading,it,in,again,using,a,link,writeable,reader,the,stream,that,is,wrapped,around,the,link,stream,input,potentially,need,to,use,a,link,named,writeable,registry,so,this,needs,to,be,provided,too;private,static,search,source,builder,copy,writeable,search,source,builder,original,named,writeable,registry,named,writeable,registry,writeable,reader,search,source,builder,reader,throws,ioexception,writeable,writer,search,source,builder,writer,out,value,value,write,to,out,try,bytes,stream,output,output,new,bytes,stream,output,output,set,version,version,current,writer,write,output,original,try,stream,input,in,new,named,writeable,aware,stream,input,output,bytes,stream,input,named,writeable,registry,in,set,version,version,current,return,reader,read,in
TransportRollupSearchAction -> private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,                                                         Writeable.Reader<SearchSourceBuilder> reader) throws IOException;1541008027;Lifted from ESTestCase :s  Don't reuse this anywhere!__Create a copy of an original {@link SearchSourceBuilder} object by running it through a {@link BytesStreamOutput} and_reading it in again using a {@link Writeable.Reader}. The stream that is wrapped around the {@link StreamInput}_potentially need to use a {@link NamedWriteableRegistry}, so this needs to be provided too;private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,_                                                        Writeable.Reader<SearchSourceBuilder> reader) throws IOException {_        Writeable.Writer<SearchSourceBuilder> writer = (out, value) -> value.writeTo(out)__        try (BytesStreamOutput output = new BytesStreamOutput()) {_            output.setVersion(Version.CURRENT)__            writer.write(output, original)__            try (StreamInput in = new NamedWriteableAwareStreamInput(output.bytes().streamInput(), namedWriteableRegistry)) {_                in.setVersion(Version.CURRENT)__                return reader.read(in)__            }_        }_    };lifted,from,estest,case,s,don,t,reuse,this,anywhere,create,a,copy,of,an,original,link,search,source,builder,object,by,running,it,through,a,link,bytes,stream,output,and,reading,it,in,again,using,a,link,writeable,reader,the,stream,that,is,wrapped,around,the,link,stream,input,potentially,need,to,use,a,link,named,writeable,registry,so,this,needs,to,be,provided,too;private,static,search,source,builder,copy,writeable,search,source,builder,original,named,writeable,registry,named,writeable,registry,writeable,reader,search,source,builder,reader,throws,ioexception,writeable,writer,search,source,builder,writer,out,value,value,write,to,out,try,bytes,stream,output,output,new,bytes,stream,output,output,set,version,version,current,writer,write,output,original,try,stream,input,in,new,named,writeable,aware,stream,input,output,bytes,stream,input,named,writeable,registry,in,set,version,version,current,return,reader,read,in
TransportRollupSearchAction -> private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,                                                         Writeable.Reader<SearchSourceBuilder> reader) throws IOException;1541092382;Lifted from ESTestCase :s  Don't reuse this anywhere!__Create a copy of an original {@link SearchSourceBuilder} object by running it through a {@link BytesStreamOutput} and_reading it in again using a {@link Writeable.Reader}. The stream that is wrapped around the {@link StreamInput}_potentially need to use a {@link NamedWriteableRegistry}, so this needs to be provided too;private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,_                                                        Writeable.Reader<SearchSourceBuilder> reader) throws IOException {_        Writeable.Writer<SearchSourceBuilder> writer = (out, value) -> value.writeTo(out)__        try (BytesStreamOutput output = new BytesStreamOutput()) {_            output.setVersion(Version.CURRENT)__            writer.write(output, original)__            try (StreamInput in = new NamedWriteableAwareStreamInput(output.bytes().streamInput(), namedWriteableRegistry)) {_                in.setVersion(Version.CURRENT)__                return reader.read(in)__            }_        }_    };lifted,from,estest,case,s,don,t,reuse,this,anywhere,create,a,copy,of,an,original,link,search,source,builder,object,by,running,it,through,a,link,bytes,stream,output,and,reading,it,in,again,using,a,link,writeable,reader,the,stream,that,is,wrapped,around,the,link,stream,input,potentially,need,to,use,a,link,named,writeable,registry,so,this,needs,to,be,provided,too;private,static,search,source,builder,copy,writeable,search,source,builder,original,named,writeable,registry,named,writeable,registry,writeable,reader,search,source,builder,reader,throws,ioexception,writeable,writer,search,source,builder,writer,out,value,value,write,to,out,try,bytes,stream,output,output,new,bytes,stream,output,output,set,version,version,current,writer,write,output,original,try,stream,input,in,new,named,writeable,aware,stream,input,output,bytes,stream,input,named,writeable,registry,in,set,version,version,current,return,reader,read,in
TransportRollupSearchAction -> private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,                                                         Writeable.Reader<SearchSourceBuilder> reader) throws IOException;1541419698;Lifted from ESTestCase :s  Don't reuse this anywhere!__Create a copy of an original {@link SearchSourceBuilder} object by running it through a {@link BytesStreamOutput} and_reading it in again using a {@link Writeable.Reader}. The stream that is wrapped around the {@link StreamInput}_potentially need to use a {@link NamedWriteableRegistry}, so this needs to be provided too;private static SearchSourceBuilder copyWriteable(SearchSourceBuilder original, NamedWriteableRegistry namedWriteableRegistry,_                                                        Writeable.Reader<SearchSourceBuilder> reader) throws IOException {_        Writeable.Writer<SearchSourceBuilder> writer = (out, value) -> value.writeTo(out)__        try (BytesStreamOutput output = new BytesStreamOutput()) {_            output.setVersion(Version.CURRENT)__            writer.write(output, original)__            try (StreamInput in = new NamedWriteableAwareStreamInput(output.bytes().streamInput(), namedWriteableRegistry)) {_                in.setVersion(Version.CURRENT)__                return reader.read(in)__            }_        }_    };lifted,from,estest,case,s,don,t,reuse,this,anywhere,create,a,copy,of,an,original,link,search,source,builder,object,by,running,it,through,a,link,bytes,stream,output,and,reading,it,in,again,using,a,link,writeable,reader,the,stream,that,is,wrapped,around,the,link,stream,input,potentially,need,to,use,a,link,named,writeable,registry,so,this,needs,to,be,provided,too;private,static,search,source,builder,copy,writeable,search,source,builder,original,named,writeable,registry,named,writeable,registry,writeable,reader,search,source,builder,reader,throws,ioexception,writeable,writer,search,source,builder,writer,out,value,value,write,to,out,try,bytes,stream,output,output,new,bytes,stream,output,output,set,version,version,current,writer,write,output,original,try,stream,input,in,new,named,writeable,aware,stream,input,output,bytes,stream,input,named,writeable,registry,in,set,version,version,current,return,reader,read,in
