commented;modifiers;parameterAmount;loc;comment;code
true;public,static;0;5;/**  * Read an address for Elasticsearch suitable for the CLI from the system properties.  */ ;/**  * Read an address for Elasticsearch suitable for the CLI from the system properties.  */ public static String elasticsearchAddress() {     String cluster = System.getProperty("tests.rest.cluster").     // CLI only supports a single node at a time so we just give it one.     return cluster.split(",")[0]. }
true;public;0;4;/**  * Asks the CLI Fixture to start a CLI instance.  */ ;/**  * Asks the CLI Fixture to start a CLI instance.  */ @Before public void startCli() throws IOException {     cli = new EmbeddedCli(CliIntegrationTestCase.elasticsearchAddress(), true, securityConfig()). }
false;public;0;9;;@After public void orderlyShutdown() throws Exception {     if (cli == null) {         // failed to connect to the cli so there is nothing to do here         return.     }     cli.close().     assertNoSearchContexts(). }
true;protected;0;3;/**  * Override to add security configuration to the cli.  */ ;/**  * Override to add security configuration to the cli.  */ protected SecurityConfig securityConfig() {     return null. }
false;protected;2;9;;protected void index(String index, CheckedConsumer<XContentBuilder, IOException> body) throws IOException {     Request request = new Request("PUT", "/" + index + "/_doc/1").     request.addParameter("refresh", "true").     XContentBuilder builder = JsonXContent.contentBuilder().startObject().     body.accept(builder).     builder.endObject().     request.setJsonEntity(Strings.toString(builder)).     client().performRequest(request). }
false;public;1;3;;public String command(String command) throws IOException {     return cli.command(command). }
true;public;0;3;/**  * Read a line produced by the CLI.  * Note that these lines will contain {@code xterm-256color}  * escape sequences.  */ ;/**  * Read a line produced by the CLI.  * Note that these lines will contain {@code xterm-256color}  * escape sequences.  */ public String readLine() throws IOException {     return cli.readLine(). }
