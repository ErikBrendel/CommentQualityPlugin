commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;public void testSelect() throws IOException {     index("test", body -> body.field("test_field", "test_value")).     assertThat(command("SELECT * FROM test"), containsString("test_field")).     assertThat(readLine(), containsString("----------")).     assertThat(readLine(), containsString("test_value")).     assertEquals("", readLine()). }
false;public;0;7;;public void testMultiLineSelect() throws IOException {     index("test", body -> body.field("test_field", "test_value")).     assertThat(command("SELECT *\nFROM\ntest"), containsString("test_field")).     assertThat(readLine(), containsString("----------")).     assertThat(readLine(), containsString("test_value")).     assertEquals("", readLine()). }
false;public;0;8;;public void testSelectWithWhere() throws IOException {     index("test", body -> body.field("test_field", "test_value1").field("i", 1)).     index("test", body -> body.field("test_field", "test_value2").field("i", 2)).     assertThat(command("SELECT * FROM test WHERE i = 2"), RegexMatcher.matches("\\s*i\\s*\\|\\s*test_field\\s*")).     assertThat(readLine(), containsString("----------")).     assertThat(readLine(), RegexMatcher.matches("\\s*2\\s*\\|\\s*test_value2\\s*")).     assertEquals("", readLine()). }
