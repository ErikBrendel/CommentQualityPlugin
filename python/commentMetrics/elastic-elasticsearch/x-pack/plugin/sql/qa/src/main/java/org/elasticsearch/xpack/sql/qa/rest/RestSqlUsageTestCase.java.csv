# id;timestamp;commentText;codeText;commentWords;codeWords
RestSqlUsageTestCase -> @SuppressWarnings({ "unchecked", "rawtypes" })     @Before     private void getBaseMetrics() throws UnsupportedOperationException, IOException;1543209103;This method gets the metrics' values before the test runs, in case these values_were changed by other tests running in the same REST test cluster. The test itself_will count the new metrics' values starting from the base values initialized here.;@SuppressWarnings({ "unchecked", "rawtypes" })_    @Before_    private void getBaseMetrics() throws UnsupportedOperationException, IOException {_        Map<String, Object> baseStats = getStats()__        List<Map<String, Map<String, Map>>> nodesListStats = (List) baseStats.get("stats")__        _        _        clientType = randomFrom(ClientType.values()).toString()__        ignoreClientType = randomBoolean()__        _        _        _        if (ignoreClientType) {_            clientType = ClientType.REST.toString()__        }_        _        for (Map perNodeStats : nodesListStats) {_            Map featuresMetrics = (Map) ((Map) perNodeStats.get("stats")).get("features")__            Map queriesMetrics = (Map) ((Map) perNodeStats.get("stats")).get("queries")__            for (FeatureMetric metric : FeatureMetric.values()) {_                baseMetrics.put(metric.toString(), (Integer) featuresMetrics.get(metric.toString()))__            }_            _            _            baseClientTypeTotalQueries = ((Map<String,Integer>) queriesMetrics.get(clientType)).get("total")__            baseClientTypeFailedQueries = ((Map<String,Integer>) queriesMetrics.get(clientType)).get("failed")__            baseAllTotalQueries = ((Map<String,Integer>) queriesMetrics.get("_all")).get("total")__            baseAllFailedQueries = ((Map<String,Integer>) queriesMetrics.get("_all")).get("failed")__            baseTranslateRequests = ((Map<String,Integer>) queriesMetrics.get("translate")).get("count")__        }_    };this,method,gets,the,metrics,values,before,the,test,runs,in,case,these,values,were,changed,by,other,tests,running,in,the,same,rest,test,cluster,the,test,itself,will,count,the,new,metrics,values,starting,from,the,base,values,initialized,here;suppress,warnings,unchecked,rawtypes,before,private,void,get,base,metrics,throws,unsupported,operation,exception,ioexception,map,string,object,base,stats,get,stats,list,map,string,map,string,map,nodes,list,stats,list,base,stats,get,stats,client,type,random,from,client,type,values,to,string,ignore,client,type,random,boolean,if,ignore,client,type,client,type,client,type,rest,to,string,for,map,per,node,stats,nodes,list,stats,map,features,metrics,map,map,per,node,stats,get,stats,get,features,map,queries,metrics,map,map,per,node,stats,get,stats,get,queries,for,feature,metric,metric,feature,metric,values,base,metrics,put,metric,to,string,integer,features,metrics,get,metric,to,string,base,client,type,total,queries,map,string,integer,queries,metrics,get,client,type,get,total,base,client,type,failed,queries,map,string,integer,queries,metrics,get,client,type,get,failed,base,all,total,queries,map,string,integer,queries,metrics,get,get,total,base,all,failed,queries,map,string,integer,queries,metrics,get,get,failed,base,translate,requests,map,string,integer,queries,metrics,get,translate,get,count
RestSqlUsageTestCase -> @SuppressWarnings({ "unchecked", "rawtypes" })     @Before     private void getBaseMetrics() throws UnsupportedOperationException, IOException;1543374981;This method gets the metrics' values before the test runs, in case these values_were changed by other tests running in the same REST test cluster. The test itself_will count the new metrics' values starting from the base values initialized here.;@SuppressWarnings({ "unchecked", "rawtypes" })_    @Before_    private void getBaseMetrics() throws UnsupportedOperationException, IOException {_        Map<String, Object> baseStats = getStats()__        List<Map<String, Map<String, Map>>> nodesListStats = (List) baseStats.get("stats")__        _        _        clientType = randomFrom(ClientType.values()).toString()__        ignoreClientType = randomBoolean()__        _        _        _        if (ignoreClientType) {_            clientType = ClientType.REST.toString()__        }_        _        for (Map perNodeStats : nodesListStats) {_            Map featuresMetrics = (Map) ((Map) perNodeStats.get("stats")).get("features")__            Map queriesMetrics = (Map) ((Map) perNodeStats.get("stats")).get("queries")__            for (FeatureMetric metric : FeatureMetric.values()) {_                baseMetrics.put(metric.toString(), (Integer) featuresMetrics.get(metric.toString()))__            }_            _            _            baseClientTypeTotalQueries = ((Map<String,Integer>) queriesMetrics.get(clientType)).get("total")__            baseClientTypeFailedQueries = ((Map<String,Integer>) queriesMetrics.get(clientType)).get("failed")__            baseAllTotalQueries = ((Map<String,Integer>) queriesMetrics.get("_all")).get("total")__            baseAllFailedQueries = ((Map<String,Integer>) queriesMetrics.get("_all")).get("failed")__            baseTranslateRequests = ((Map<String,Integer>) queriesMetrics.get("translate")).get("count")__        }_    };this,method,gets,the,metrics,values,before,the,test,runs,in,case,these,values,were,changed,by,other,tests,running,in,the,same,rest,test,cluster,the,test,itself,will,count,the,new,metrics,values,starting,from,the,base,values,initialized,here;suppress,warnings,unchecked,rawtypes,before,private,void,get,base,metrics,throws,unsupported,operation,exception,ioexception,map,string,object,base,stats,get,stats,list,map,string,map,string,map,nodes,list,stats,list,base,stats,get,stats,client,type,random,from,client,type,values,to,string,ignore,client,type,random,boolean,if,ignore,client,type,client,type,client,type,rest,to,string,for,map,per,node,stats,nodes,list,stats,map,features,metrics,map,map,per,node,stats,get,stats,get,features,map,queries,metrics,map,map,per,node,stats,get,stats,get,queries,for,feature,metric,metric,feature,metric,values,base,metrics,put,metric,to,string,integer,features,metrics,get,metric,to,string,base,client,type,total,queries,map,string,integer,queries,metrics,get,client,type,get,total,base,client,type,failed,queries,map,string,integer,queries,metrics,get,client,type,get,failed,base,all,total,queries,map,string,integer,queries,metrics,get,get,total,base,all,failed,queries,map,string,integer,queries,metrics,get,get,failed,base,translate,requests,map,string,integer,queries,metrics,get,translate,get,count
RestSqlUsageTestCase -> @SuppressWarnings({ "unchecked", "rawtypes" })     @Before     private void getBaseMetrics() throws UnsupportedOperationException, IOException;1544548671;This method gets the metrics' values before the test runs, in case these values_were changed by other tests running in the same REST test cluster. The test itself_will count the new metrics' values starting from the base values initialized here.;@SuppressWarnings({ "unchecked", "rawtypes" })_    @Before_    private void getBaseMetrics() throws UnsupportedOperationException, IOException {_        Map<String, Object> baseStats = getStats()__        List<Map<String, Map<String, Map>>> nodesListStats = (List) baseStats.get("stats")__        _        _        clientType = randomFrom(ClientType.values()).toString()__        ignoreClientType = randomBoolean()__        _        _        _        if (ignoreClientType) {_            clientType = ClientType.REST.toString()__        }_        _        for (Map perNodeStats : nodesListStats) {_            Map featuresMetrics = (Map) ((Map) perNodeStats.get("stats")).get("features")__            Map queriesMetrics = (Map) ((Map) perNodeStats.get("stats")).get("queries")__            for (FeatureMetric metric : FeatureMetric.values()) {_                baseMetrics.put(metric.toString(), (Integer) featuresMetrics.get(metric.toString()))__            }_            _            _            baseClientTypeTotalQueries = ((Map<String,Integer>) queriesMetrics.get(clientType)).get("total")__            baseClientTypeFailedQueries = ((Map<String,Integer>) queriesMetrics.get(clientType)).get("failed")__            baseAllTotalQueries = ((Map<String,Integer>) queriesMetrics.get("_all")).get("total")__            baseAllFailedQueries = ((Map<String,Integer>) queriesMetrics.get("_all")).get("failed")__            baseTranslateRequests = ((Map<String,Integer>) queriesMetrics.get("translate")).get("count")__        }_    };this,method,gets,the,metrics,values,before,the,test,runs,in,case,these,values,were,changed,by,other,tests,running,in,the,same,rest,test,cluster,the,test,itself,will,count,the,new,metrics,values,starting,from,the,base,values,initialized,here;suppress,warnings,unchecked,rawtypes,before,private,void,get,base,metrics,throws,unsupported,operation,exception,ioexception,map,string,object,base,stats,get,stats,list,map,string,map,string,map,nodes,list,stats,list,base,stats,get,stats,client,type,random,from,client,type,values,to,string,ignore,client,type,random,boolean,if,ignore,client,type,client,type,client,type,rest,to,string,for,map,per,node,stats,nodes,list,stats,map,features,metrics,map,map,per,node,stats,get,stats,get,features,map,queries,metrics,map,map,per,node,stats,get,stats,get,queries,for,feature,metric,metric,feature,metric,values,base,metrics,put,metric,to,string,integer,features,metrics,get,metric,to,string,base,client,type,total,queries,map,string,integer,queries,metrics,get,client,type,get,total,base,client,type,failed,queries,map,string,integer,queries,metrics,get,client,type,get,failed,base,all,total,queries,map,string,integer,queries,metrics,get,get,total,base,all,failed,queries,map,string,integer,queries,metrics,get,get,failed,base,translate,requests,map,string,integer,queries,metrics,get,translate,get,count
RestSqlUsageTestCase -> @SuppressWarnings({ "unchecked", "rawtypes" })     @Before     private void getBaseMetrics() throws UnsupportedOperationException, IOException;1545132589;This method gets the metrics' values before the test runs, in case these values_were changed by other tests running in the same REST test cluster. The test itself_will count the new metrics' values starting from the base values initialized here.;@SuppressWarnings({ "unchecked", "rawtypes" })_    @Before_    private void getBaseMetrics() throws UnsupportedOperationException, IOException {_        Map<String, Object> baseStats = getStats()__        List<Map<String, Map<String, Map>>> nodesListStats = (List) baseStats.get("stats")__        _        _        clientType = randomFrom(ClientType.values()).toString()__        ignoreClientType = randomBoolean()__        _        _        _        if (ignoreClientType) {_            clientType = ClientType.REST.toString()__        }_        _        for (Map perNodeStats : nodesListStats) {_            Map featuresMetrics = (Map) ((Map) perNodeStats.get("stats")).get("features")__            Map queriesMetrics = (Map) ((Map) perNodeStats.get("stats")).get("queries")__            for (FeatureMetric metric : FeatureMetric.values()) {_                baseMetrics.put(metric.toString(), (Integer) featuresMetrics.get(metric.toString()))__            }_            _            _            baseClientTypeTotalQueries = ((Map<String,Integer>) queriesMetrics.get(clientType)).get("total")__            baseClientTypeFailedQueries = ((Map<String,Integer>) queriesMetrics.get(clientType)).get("failed")__            baseAllTotalQueries = ((Map<String,Integer>) queriesMetrics.get("_all")).get("total")__            baseAllFailedQueries = ((Map<String,Integer>) queriesMetrics.get("_all")).get("failed")__            baseTranslateRequests = ((Map<String,Integer>) queriesMetrics.get("translate")).get("count")__        }_    };this,method,gets,the,metrics,values,before,the,test,runs,in,case,these,values,were,changed,by,other,tests,running,in,the,same,rest,test,cluster,the,test,itself,will,count,the,new,metrics,values,starting,from,the,base,values,initialized,here;suppress,warnings,unchecked,rawtypes,before,private,void,get,base,metrics,throws,unsupported,operation,exception,ioexception,map,string,object,base,stats,get,stats,list,map,string,map,string,map,nodes,list,stats,list,base,stats,get,stats,client,type,random,from,client,type,values,to,string,ignore,client,type,random,boolean,if,ignore,client,type,client,type,client,type,rest,to,string,for,map,per,node,stats,nodes,list,stats,map,features,metrics,map,map,per,node,stats,get,stats,get,features,map,queries,metrics,map,map,per,node,stats,get,stats,get,queries,for,feature,metric,metric,feature,metric,values,base,metrics,put,metric,to,string,integer,features,metrics,get,metric,to,string,base,client,type,total,queries,map,string,integer,queries,metrics,get,client,type,get,total,base,client,type,failed,queries,map,string,integer,queries,metrics,get,client,type,get,failed,base,all,total,queries,map,string,integer,queries,metrics,get,get,total,base,all,failed,queries,map,string,integer,queries,metrics,get,get,failed,base,translate,requests,map,string,integer,queries,metrics,get,translate,get,count
RestSqlUsageTestCase -> @SuppressWarnings({ "unchecked", "rawtypes" })     @Before     private void getBaseMetrics() throws UnsupportedOperationException, IOException;1547634995;This method gets the metrics' values before the test runs, in case these values_were changed by other tests running in the same REST test cluster. The test itself_will count the new metrics' values starting from the base values initialized here.;@SuppressWarnings({ "unchecked", "rawtypes" })_    @Before_    private void getBaseMetrics() throws UnsupportedOperationException, IOException {_        Map<String, Object> baseStats = getStats()__        List<Map<String, Map<String, Map>>> nodesListStats = (List) baseStats.get("stats")__        _        _        clientType = randomFrom(ClientType.values()).toString()__        ignoreClientType = randomBoolean()__        _        _        _        if (ignoreClientType) {_            clientType = ClientType.REST.toString()__        }_        _        for (Map perNodeStats : nodesListStats) {_            Map featuresMetrics = (Map) ((Map) perNodeStats.get("stats")).get("features")__            Map queriesMetrics = (Map) ((Map) perNodeStats.get("stats")).get("queries")__            for (FeatureMetric metric : FeatureMetric.values()) {_                baseMetrics.put(metric.toString(), (Integer) featuresMetrics.get(metric.toString()))__            }_            _            _            baseClientTypeTotalQueries = ((Map<String,Integer>) queriesMetrics.get(clientType)).get("total")__            baseClientTypeFailedQueries = ((Map<String,Integer>) queriesMetrics.get(clientType)).get("failed")__            baseAllTotalQueries = ((Map<String,Integer>) queriesMetrics.get("_all")).get("total")__            baseAllFailedQueries = ((Map<String,Integer>) queriesMetrics.get("_all")).get("failed")__            baseTranslateRequests = ((Map<String,Integer>) queriesMetrics.get("translate")).get("count")__        }_    };this,method,gets,the,metrics,values,before,the,test,runs,in,case,these,values,were,changed,by,other,tests,running,in,the,same,rest,test,cluster,the,test,itself,will,count,the,new,metrics,values,starting,from,the,base,values,initialized,here;suppress,warnings,unchecked,rawtypes,before,private,void,get,base,metrics,throws,unsupported,operation,exception,ioexception,map,string,object,base,stats,get,stats,list,map,string,map,string,map,nodes,list,stats,list,base,stats,get,stats,client,type,random,from,client,type,values,to,string,ignore,client,type,random,boolean,if,ignore,client,type,client,type,client,type,rest,to,string,for,map,per,node,stats,nodes,list,stats,map,features,metrics,map,map,per,node,stats,get,stats,get,features,map,queries,metrics,map,map,per,node,stats,get,stats,get,queries,for,feature,metric,metric,feature,metric,values,base,metrics,put,metric,to,string,integer,features,metrics,get,metric,to,string,base,client,type,total,queries,map,string,integer,queries,metrics,get,client,type,get,total,base,client,type,failed,queries,map,string,integer,queries,metrics,get,client,type,get,failed,base,all,total,queries,map,string,integer,queries,metrics,get,get,total,base,all,failed,queries,map,string,integer,queries,metrics,get,get,failed,base,translate,requests,map,string,integer,queries,metrics,get,translate,get,count
RestSqlUsageTestCase -> @SuppressWarnings({ "unchecked", "rawtypes" })     @Before     private void getBaseMetrics() throws UnsupportedOperationException, IOException;1548144111;This method gets the metrics' values before the test runs, in case these values_were changed by other tests running in the same REST test cluster. The test itself_will count the new metrics' values starting from the base values initialized here.;@SuppressWarnings({ "unchecked", "rawtypes" })_    @Before_    private void getBaseMetrics() throws UnsupportedOperationException, IOException {_        Map<String, Object> baseStats = getStats()__        List<Map<String, Map<String, Map>>> nodesListStats = (List) baseStats.get("stats")__        _        _        clientType = randomFrom(ClientType.values()).toString()__        ignoreClientType = randomBoolean()__        _        _        _        if (ignoreClientType) {_            clientType = ClientType.REST.toString()__        }_        _        for (Map perNodeStats : nodesListStats) {_            Map featuresMetrics = (Map) ((Map) perNodeStats.get("stats")).get("features")__            Map queriesMetrics = (Map) ((Map) perNodeStats.get("stats")).get("queries")__            for (FeatureMetric metric : FeatureMetric.values()) {_                baseMetrics.put(metric.toString(), (Integer) featuresMetrics.get(metric.toString()))__            }_            _            _            baseClientTypeTotalQueries = ((Map<String,Integer>) queriesMetrics.get(clientType)).get("total")__            baseClientTypeFailedQueries = ((Map<String,Integer>) queriesMetrics.get(clientType)).get("failed")__            baseAllTotalQueries = ((Map<String,Integer>) queriesMetrics.get("_all")).get("total")__            baseAllFailedQueries = ((Map<String,Integer>) queriesMetrics.get("_all")).get("failed")__            baseTranslateRequests = ((Map<String,Integer>) queriesMetrics.get("translate")).get("count")__        }_    };this,method,gets,the,metrics,values,before,the,test,runs,in,case,these,values,were,changed,by,other,tests,running,in,the,same,rest,test,cluster,the,test,itself,will,count,the,new,metrics,values,starting,from,the,base,values,initialized,here;suppress,warnings,unchecked,rawtypes,before,private,void,get,base,metrics,throws,unsupported,operation,exception,ioexception,map,string,object,base,stats,get,stats,list,map,string,map,string,map,nodes,list,stats,list,base,stats,get,stats,client,type,random,from,client,type,values,to,string,ignore,client,type,random,boolean,if,ignore,client,type,client,type,client,type,rest,to,string,for,map,per,node,stats,nodes,list,stats,map,features,metrics,map,map,per,node,stats,get,stats,get,features,map,queries,metrics,map,map,per,node,stats,get,stats,get,queries,for,feature,metric,metric,feature,metric,values,base,metrics,put,metric,to,string,integer,features,metrics,get,metric,to,string,base,client,type,total,queries,map,string,integer,queries,metrics,get,client,type,get,total,base,client,type,failed,queries,map,string,integer,queries,metrics,get,client,type,get,failed,base,all,total,queries,map,string,integer,queries,metrics,get,get,total,base,all,failed,queries,map,string,integer,queries,metrics,get,get,failed,base,translate,requests,map,string,integer,queries,metrics,get,translate,get,count
RestSqlUsageTestCase -> @SuppressWarnings({ "unchecked", "rawtypes" })     @Before     private void getBaseMetrics() throws UnsupportedOperationException, IOException;1548161728;This method gets the metrics' values before the test runs, in case these values_were changed by other tests running in the same REST test cluster. The test itself_will count the new metrics' values starting from the base values initialized here.;@SuppressWarnings({ "unchecked", "rawtypes" })_    @Before_    private void getBaseMetrics() throws UnsupportedOperationException, IOException {_        Map<String, Object> baseStats = getStats()__        List<Map<String, Map<String, Map>>> nodesListStats = (List) baseStats.get("stats")__        _        _        clientType = randomFrom(ClientType.values()).toString()__        ignoreClientType = randomBoolean()__        _        _        _        if (ignoreClientType) {_            clientType = ClientType.REST.toString()__        }_        _        for (Map perNodeStats : nodesListStats) {_            Map featuresMetrics = (Map) ((Map) perNodeStats.get("stats")).get("features")__            Map queriesMetrics = (Map) ((Map) perNodeStats.get("stats")).get("queries")__            for (FeatureMetric metric : FeatureMetric.values()) {_                baseMetrics.put(metric.toString(), (Integer) featuresMetrics.get(metric.toString()))__            }_            _            _            baseClientTypeTotalQueries = ((Map<String,Integer>) queriesMetrics.get(clientType)).get("total")__            baseClientTypeFailedQueries = ((Map<String,Integer>) queriesMetrics.get(clientType)).get("failed")__            baseAllTotalQueries = ((Map<String,Integer>) queriesMetrics.get("_all")).get("total")__            baseAllFailedQueries = ((Map<String,Integer>) queriesMetrics.get("_all")).get("failed")__            baseTranslateRequests = ((Map<String,Integer>) queriesMetrics.get("translate")).get("count")__        }_    };this,method,gets,the,metrics,values,before,the,test,runs,in,case,these,values,were,changed,by,other,tests,running,in,the,same,rest,test,cluster,the,test,itself,will,count,the,new,metrics,values,starting,from,the,base,values,initialized,here;suppress,warnings,unchecked,rawtypes,before,private,void,get,base,metrics,throws,unsupported,operation,exception,ioexception,map,string,object,base,stats,get,stats,list,map,string,map,string,map,nodes,list,stats,list,base,stats,get,stats,client,type,random,from,client,type,values,to,string,ignore,client,type,random,boolean,if,ignore,client,type,client,type,client,type,rest,to,string,for,map,per,node,stats,nodes,list,stats,map,features,metrics,map,map,per,node,stats,get,stats,get,features,map,queries,metrics,map,map,per,node,stats,get,stats,get,queries,for,feature,metric,metric,feature,metric,values,base,metrics,put,metric,to,string,integer,features,metrics,get,metric,to,string,base,client,type,total,queries,map,string,integer,queries,metrics,get,client,type,get,total,base,client,type,failed,queries,map,string,integer,queries,metrics,get,client,type,get,failed,base,all,total,queries,map,string,integer,queries,metrics,get,get,total,base,all,failed,queries,map,string,integer,queries,metrics,get,get,failed,base,translate,requests,map,string,integer,queries,metrics,get,translate,get,count
