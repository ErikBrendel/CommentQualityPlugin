commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Override public ActionRequestValidationException validate() {     ActionRequestValidationException validationException = null.     if ((false == Strings.hasText(query()))) {         validationException = addValidationError("query is required", validationException).     }     return validationException. }
false;public;0;4;;@Override public String getDescription() {     return "SQL Translate [" + query() + "][" + filter() + "]". }
false;public,static;1;4;;public static SqlTranslateRequest fromXContent(XContentParser parser) {     SqlTranslateRequest request = PARSER.apply(parser, null).     return request. }
false;public;2;7;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     // This is needed just to test parsing of SqlTranslateRequest, so we can reuse SqlQuerySerialization     return new SqlQueryRequest(query(), params(), zoneId(), fetchSize(), requestTimeout(), pageTimeout(), filter(), null, null, requestInfo()).toXContent(builder, params). }
