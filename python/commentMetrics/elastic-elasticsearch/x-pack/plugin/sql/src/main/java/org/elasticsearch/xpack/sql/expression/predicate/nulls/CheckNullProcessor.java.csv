commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String symbol() {     return symbol. }
false;public;0;4;;@Override public String toString() {     return symbol. }
false;public;1;4;;@Override public Boolean apply(Object o) {     return process.apply(o). }
false;public;0;4;;@Override public String getWriteableName() {     return NAME. }
false;public;1;4;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeEnum(operation). }
false;public;1;4;;@Override public Object process(Object input) {     return operation.apply(input). }
false;public;1;11;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     CheckNullProcessor that = (CheckNullProcessor) o.     return operation == that.operation. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(operation). }
