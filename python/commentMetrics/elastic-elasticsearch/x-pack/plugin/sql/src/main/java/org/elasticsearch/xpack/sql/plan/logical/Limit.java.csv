commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected NodeInfo<Limit> info() {     return NodeInfo.create(this, Limit::new, limit, child()). }
false;protected;1;4;;@Override protected Limit replaceChild(LogicalPlan newChild) {     return new Limit(source(), limit, newChild). }
false;public;0;3;;public Expression limit() {     return limit. }
false;public;0;4;;@Override public boolean expressionsResolved() {     return limit.resolved(). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(limit, child()). }
false;public;1;14;;@Override public boolean equals(Object obj) {     if (this == obj) {         return true.     }     if (obj == null || getClass() != obj.getClass()) {         return false.     }     Limit other = (Limit) obj.     return Objects.equals(limit, other.limit) && Objects.equals(child(), other.child()). }
