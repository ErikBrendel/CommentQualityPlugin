commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;7;;@Override protected TypeResolution resolveType() {     for (Expression e : children()) {         dataType = DataTypeConversion.commonType(dataType, e.dataType()).     }     return TypeResolution.TYPE_RESOLVED. }
false;protected;0;4;;@Override protected Pipe makePipe() {     return new ConditionalPipe(source(), this, Expressions.pipe(children()), operation). }
false;public;0;17;;@Override public ScriptTemplate asScript() {     List<ScriptTemplate> templates = new ArrayList<>().     for (Expression ex : children()) {         templates.add(asScript(ex)).     }     StringJoiner template = new StringJoiner(",", "{sql}." + operation.scriptMethodName() + "([", "])").     ParamsBuilder params = paramsBuilder().     for (ScriptTemplate scriptTemplate : templates) {         template.add(scriptTemplate.template()).         params.script(scriptTemplate.params()).     }     return new ScriptTemplate(formatTemplate(template.toString()), params.build(), dataType()). }
