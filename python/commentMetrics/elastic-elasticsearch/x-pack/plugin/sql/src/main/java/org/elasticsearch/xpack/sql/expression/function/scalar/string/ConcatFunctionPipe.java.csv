commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected NodeInfo<ConcatFunctionPipe> info() {     return NodeInfo.create(this, ConcatFunctionPipe::new, expression(), left(), right()). }
false;protected;2;4;;@Override protected BinaryPipe replaceChildren(Pipe left, Pipe right) {     return new ConcatFunctionPipe(source(), expression(), left, right). }
false;public;0;4;;@Override public ConcatFunctionProcessor asProcessor() {     return new ConcatFunctionProcessor(left().asProcessor(), right().asProcessor()). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(left(), right()). }
false;public;1;14;;@Override public boolean equals(Object obj) {     if (this == obj) {         return true.     }     if (obj == null || getClass() != obj.getClass()) {         return false.     }     ConcatFunctionPipe other = (ConcatFunctionPipe) obj.     return Objects.equals(left(), other.left()) && Objects.equals(right(), other.right()). }
