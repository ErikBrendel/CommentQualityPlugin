# id;timestamp;commentText;codeText;commentWords;codeWords
NodeInfo -> final <E> T transform(Function<? super E, ? extends E> rule, Class<E> typeToken);1524684173;Transform the properties on {@code node}, returning a new instance_of {@code N} if any properties change.;final <E> T transform(Function<? super E, ? extends E> rule, Class<E> typeToken) {_        List<?> children = node.children()___        Function<Object, Object> realRule = p -> {_            if (p != children && false == children.contains(p)_                    && (p == null || typeToken.isInstance(p))) {_                return rule.apply(typeToken.cast(p))__            }_            return p__        }__        return innerTransform(realRule)__    };transform,the,properties,on,code,node,returning,a,new,instance,of,code,n,if,any,properties,change;final,e,t,transform,function,super,e,extends,e,rule,class,e,type,token,list,children,node,children,function,object,object,real,rule,p,if,p,children,false,children,contains,p,p,null,type,token,is,instance,p,return,rule,apply,type,token,cast,p,return,p,return,inner,transform,real,rule
NodeInfo -> final <E> T transform(Function<? super E, ? extends E> rule, Class<E> typeToken);1546556270;Transform the properties on {@code node}, returning a new instance_of {@code N} if any properties change.;final <E> T transform(Function<? super E, ? extends E> rule, Class<E> typeToken) {_        List<?> children = node.children()___        Function<Object, Object> realRule = p -> {_            if (p != children && false == children.contains(p)_                    && (p == null || typeToken.isInstance(p))) {_                return rule.apply(typeToken.cast(p))__            }_            return p__        }__        return innerTransform(realRule)__    };transform,the,properties,on,code,node,returning,a,new,instance,of,code,n,if,any,properties,change;final,e,t,transform,function,super,e,extends,e,rule,class,e,type,token,list,children,node,children,function,object,object,real,rule,p,if,p,children,false,children,contains,p,p,null,type,token,is,instance,p,return,rule,apply,type,token,cast,p,return,p,return,inner,transform,real,rule
NodeInfo -> final <E> T transform(Function<? super E, ? extends E> rule, Class<E> typeToken);1549064305;Transform the properties on {@code node}, returning a new instance_of {@code N} if any properties change.;final <E> T transform(Function<? super E, ? extends E> rule, Class<E> typeToken) {_        List<?> children = node.children()___        Function<Object, Object> realRule = p -> {_            if (p != children && false == children.contains(p)_                    && (p == null || typeToken.isInstance(p))) {_                return rule.apply(typeToken.cast(p))__            }_            return p__        }__        return innerTransform(realRule)__    };transform,the,properties,on,code,node,returning,a,new,instance,of,code,n,if,any,properties,change;final,e,t,transform,function,super,e,extends,e,rule,class,e,type,token,list,children,node,children,function,object,object,real,rule,p,if,p,children,false,children,contains,p,p,null,type,token,is,instance,p,return,rule,apply,type,token,cast,p,return,p,return,inner,transform,real,rule
NodeInfo -> public final List<Object> properties();1524684173;Values for all properties on the instance that created_this {@linkplain NodeInfo}.;public final List<Object> properties() {_        return unmodifiableList(innerProperties())__    };values,for,all,properties,on,the,instance,that,created,this,linkplain,node,info;public,final,list,object,properties,return,unmodifiable,list,inner,properties
NodeInfo -> public final List<Object> properties();1546556270;Values for all properties on the instance that created_this {@linkplain NodeInfo}.;public final List<Object> properties() {_        return unmodifiableList(innerProperties())__    };values,for,all,properties,on,the,instance,that,created,this,linkplain,node,info;public,final,list,object,properties,return,unmodifiable,list,inner,properties
NodeInfo -> public final List<Object> properties();1549064305;Values for all properties on the instance that created_this {@linkplain NodeInfo}.;public final List<Object> properties() {_        return unmodifiableList(innerProperties())__    };values,for,all,properties,on,the,instance,that,created,this,linkplain,node,info;public,final,list,object,properties,return,unmodifiable,list,inner,properties
NodeInfo -> public static <T extends Node<?>> NodeInfo<T> create(T n);1524684173;Builds a {@link NodeInfo} for Nodes without any properties.;public static <T extends Node<?>> NodeInfo<T> create(T n) {_        return new NodeInfo<T>(n) {_            @Override_            protected List<Object> innerProperties() {_                return emptyList()__            }__            protected T innerTransform(Function<Object, Object> rule) {_                return node__            }_        }__    };builds,a,link,node,info,for,nodes,without,any,properties;public,static,t,extends,node,node,info,t,create,t,n,return,new,node,info,t,n,override,protected,list,object,inner,properties,return,empty,list,protected,t,inner,transform,function,object,object,rule,return,node
NodeInfo -> public static <T extends Node<?>> NodeInfo<T> create(T n);1546556270;Builds a {@link NodeInfo} for Nodes without any properties.;public static <T extends Node<?>> NodeInfo<T> create(T n) {_        return new NodeInfo<T>(n) {_            @Override_            protected List<Object> innerProperties() {_                return emptyList()__            }__            protected T innerTransform(Function<Object, Object> rule) {_                return node__            }_        }__    };builds,a,link,node,info,for,nodes,without,any,properties;public,static,t,extends,node,node,info,t,create,t,n,return,new,node,info,t,n,override,protected,list,object,inner,properties,return,empty,list,protected,t,inner,transform,function,object,object,rule,return,node
NodeInfo -> public static <T extends Node<?>> NodeInfo<T> create(T n);1549064305;Builds a {@link NodeInfo} for Nodes without any properties.;public static <T extends Node<?>> NodeInfo<T> create(T n) {_        return new NodeInfo<T>(n) {_            @Override_            protected List<Object> innerProperties() {_                return emptyList()__            }__            protected T innerTransform(Function<Object, Object> rule) {_                return node__            }_        }__    };builds,a,link,node,info,for,nodes,without,any,properties;public,static,t,extends,node,node,info,t,create,t,n,return,new,node,info,t,n,override,protected,list,object,inner,properties,return,empty,list,protected,t,inner,transform,function,object,object,rule,return,node
