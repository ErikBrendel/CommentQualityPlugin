# id;timestamp;commentText;codeText;commentWords;codeWords
StringProcessor -> StringOperation -> StringOperation(Function<Object, Object> apply, boolean nullAware);1531729807;Wrapper for nulls around the given function._If true, nulls are passed through, otherwise the function is short-circuited_and null returned.;StringOperation(Function<Object, Object> apply, boolean nullAware) {_            if (nullAware) {_                this.apply = apply__            } else {_                this.apply = l -> l == null ? null : apply.apply(l)__            }_        };wrapper,for,nulls,around,the,given,function,if,true,nulls,are,passed,through,otherwise,the,function,is,short,circuited,and,null,returned;string,operation,function,object,object,apply,boolean,null,aware,if,null,aware,this,apply,apply,else,this,apply,l,l,null,null,apply,apply,l
StringProcessor -> StringOperation -> StringOperation(Function<Object, Object> apply, boolean nullAware);1538170812;Wrapper for nulls around the given function._If true, nulls are passed through, otherwise the function is short-circuited_and null returned.;StringOperation(Function<Object, Object> apply, boolean nullAware) {_            if (nullAware) {_                this.apply = apply__            } else {_                this.apply = l -> l == null ? null : apply.apply(l)__            }_        };wrapper,for,nulls,around,the,given,function,if,true,nulls,are,passed,through,otherwise,the,function,is,short,circuited,and,null,returned;string,operation,function,object,object,apply,boolean,null,aware,if,null,aware,this,apply,apply,else,this,apply,l,l,null,null,apply,apply,l
StringProcessor -> StringOperation -> StringOperation(Function<Object, Object> apply, boolean nullAware);1539615817;Wrapper for nulls around the given function._If true, nulls are passed through, otherwise the function is short-circuited_and null returned.;StringOperation(Function<Object, Object> apply, boolean nullAware) {_            if (nullAware) {_                this.apply = apply__            } else {_                this.apply = l -> l == null ? null : apply.apply(l)__            }_        };wrapper,for,nulls,around,the,given,function,if,true,nulls,are,passed,through,otherwise,the,function,is,short,circuited,and,null,returned;string,operation,function,object,object,apply,boolean,null,aware,if,null,aware,this,apply,apply,else,this,apply,l,l,null,null,apply,apply,l
StringProcessor -> StringOperation -> @Override         public String toString();1531729807;"translate" the function name ("char") into a function name that is not a reserved keyword in java._Used in {@code InternalSqlScriptUtils#character(Number)}.;@Override_        public String toString() {_            return this == CHAR ? "character" : super.toString()__        };translate,the,function,name,char,into,a,function,name,that,is,not,a,reserved,keyword,in,java,used,in,code,internal,sql,script,utils,character,number;override,public,string,to,string,return,this,char,character,super,to,string
StringProcessor -> StringOperation -> @Override         public String toString();1538170812;"translate" the function name ("char") into a function name that is not a reserved keyword in java._Used in {@code InternalSqlScriptUtils#character(Number)}.;@Override_        public String toString() {_            return this == CHAR ? "character" : super.toString()__        };translate,the,function,name,char,into,a,function,name,that,is,not,a,reserved,keyword,in,java,used,in,code,internal,sql,script,utils,character,number;override,public,string,to,string,return,this,char,character,super,to,string
StringProcessor -> StringOperation -> @Override         public String toString();1539615817;"translate" the function name ("char") into a function name that is not a reserved keyword in java._Used in {@code InternalSqlScriptUtils#character(Number)}.;@Override_        public String toString() {_            return this == CHAR ? "character" : super.toString()__        };translate,the,function,name,char,into,a,function,name,that,is,not,a,reserved,keyword,in,java,used,in,code,internal,sql,script,utils,character,number;override,public,string,to,string,return,this,char,character,super,to,string
StringProcessor -> StringOperation -> @Override         public String toString();1540238977;"translate" the function name ("char") into a function name that is not a reserved keyword in java._Used in {@code InternalSqlScriptUtils#character(Number)}.;@Override_        public String toString() {_            return this == CHAR ? "character" : super.toString()__        };translate,the,function,name,char,into,a,function,name,that,is,not,a,reserved,keyword,in,java,used,in,code,internal,sql,script,utils,character,number;override,public,string,to,string,return,this,char,character,super,to,string
StringProcessor -> StringOperation -> @Override         public String toString();1548422582;"translate" the function name ("char") into a function name that is not a reserved keyword in java._Used in {@code InternalSqlScriptUtils#character(Number)}.;@Override_        public String toString() {_            return this == CHAR ? "character" : super.toString()__        };translate,the,function,name,char,into,a,function,name,that,is,not,a,reserved,keyword,in,java,used,in,code,internal,sql,script,utils,character,number;override,public,string,to,string,return,this,char,character,super,to,string
