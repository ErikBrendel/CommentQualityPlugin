commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;4;;@Override protected TypeResolution resolveInputType(Expression e, Expressions.ParamOrdinal paramOrdinal) {     return TypeResolutions.isExact(e, sourceText(), paramOrdinal). }
false;protected;0;4;;@Override protected Expression canonicalize() {     return left().hashCode() > right().hashCode() ? swapLeftAndRight() : this. }
false;public;0;4;;@Override public DataType dataType() {     return DataType.BOOLEAN. }
false;protected;0;4;;@Override protected Pipe makePipe() {     return new BinaryComparisonPipe(source(), this, Expressions.pipe(left()), Expressions.pipe(right()), function()). }
false;public,static;2;3;;public static Integer compare(Object left, Object right) {     return Comparisons.compare(left, right). }
