commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;6;/**  * Expands common tokens inside the script:  *  * <pre>  * {sql} -&gt. InternalSqlScriptUtils  * doc[{}].value -&gt. InternalSqlScriptUtils.docValue(doc, {})  * {}    -&gt. params.%s  * </pre>  */ ;/**  * Expands common tokens inside the script:  *  * <pre>  * {sql} -&gt. InternalSqlScriptUtils  * doc[{}].value -&gt. InternalSqlScriptUtils.docValue(doc, {})  * {}    -&gt. params.%s  * </pre>  */ public static String formatTemplate(String template) {     for (Entry<Pattern, String> entry : FORMATTING_PATTERNS.entrySet()) {         template = entry.getKey().matcher(template).replaceAll(entry.getValue()).     }     return template. }
false;public,static;1;6;;public static ScriptTemplate nullSafeFilter(ScriptTemplate script) {     return new ScriptTemplate(formatTemplate(format(Locale.ROOT, "{sql}.nullSafeFilter(%s)", script.template())), script.params(), DataType.BOOLEAN). }
false;public,static;1;7;;public static ScriptTemplate nullSafeSort(ScriptTemplate script) {     String methodName = script.outputType().isNumeric() ? "nullSafeSortNumeric" : "nullSafeSortString".     return new ScriptTemplate(formatTemplate(format(Locale.ROOT, "{sql}.%s(%s)", methodName, script.template())), script.params(), script.outputType()). }
false;public,static;2;3;;public static ScriptTemplate and(ScriptTemplate left, ScriptTemplate right) {     return binaryMethod("and", left, right, DataType.BOOLEAN). }
false;public,static;2;3;;public static ScriptTemplate or(ScriptTemplate left, ScriptTemplate right) {     return binaryMethod("or", left, right, DataType.BOOLEAN). }
false;public,static;4;12;;public static ScriptTemplate binaryMethod(String methodName, ScriptTemplate leftScript, ScriptTemplate rightScript, DataType dataType) {     return new ScriptTemplate(format(Locale.ROOT, formatTemplate("{sql}.%s(%s,%s)"), methodName, leftScript.template(), rightScript.template()), paramsBuilder().script(leftScript.params()).script(rightScript.params()).build(), dataType). }
