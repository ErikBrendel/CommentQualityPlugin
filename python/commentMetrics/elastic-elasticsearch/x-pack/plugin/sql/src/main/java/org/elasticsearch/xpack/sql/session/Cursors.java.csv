# id;timestamp;commentText;codeText;commentWords;codeWords
Cursors -> public static String encodeToString(Version version, Cursor info);1524684173;Write a {@linkplain Cursor} to a string for serialization across xcontent.;public static String encodeToString(Version version, Cursor info) {_        if (info == Cursor.EMPTY) {_            return ""__        }_        try (ByteArrayOutputStream os = new ByteArrayOutputStream()) {_            try (OutputStream base64 = Base64.getEncoder().wrap(os)_ StreamOutput out = new OutputStreamStreamOutput(base64)) {_                Version.writeVersion(version, out)__                out.writeNamedWriteable(info)__            }_            return os.toString(StandardCharsets.UTF_8.name())__        } catch (Exception ex) {_            throw new SqlIllegalArgumentException("Unexpected failure retriving next page", ex)__        }_    };write,a,linkplain,cursor,to,a,string,for,serialization,across,xcontent;public,static,string,encode,to,string,version,version,cursor,info,if,info,cursor,empty,return,try,byte,array,output,stream,os,new,byte,array,output,stream,try,output,stream,base64,base64,get,encoder,wrap,os,stream,output,out,new,output,stream,stream,output,base64,version,write,version,version,out,out,write,named,writeable,info,return,os,to,string,standard,charsets,name,catch,exception,ex,throw,new,sql,illegal,argument,exception,unexpected,failure,retriving,next,page,ex
Cursors -> public static String encodeToString(Version version, Cursor info);1542807959;Write a {@linkplain Cursor} to a string for serialization across xcontent.;public static String encodeToString(Version version, Cursor info) {_        if (info == Cursor.EMPTY) {_            return ""__        }_        try (ByteArrayOutputStream os = new ByteArrayOutputStream()) {_            try (OutputStream base64 = Base64.getEncoder().wrap(os)_ StreamOutput out = new OutputStreamStreamOutput(base64)) {_                Version.writeVersion(version, out)__                out.writeNamedWriteable(info)__            }_            return os.toString(StandardCharsets.UTF_8.name())__        } catch (Exception ex) {_            throw new SqlIllegalArgumentException("Unexpected failure retriving next page", ex)__        }_    };write,a,linkplain,cursor,to,a,string,for,serialization,across,xcontent;public,static,string,encode,to,string,version,version,cursor,info,if,info,cursor,empty,return,try,byte,array,output,stream,os,new,byte,array,output,stream,try,output,stream,base64,base64,get,encoder,wrap,os,stream,output,out,new,output,stream,stream,output,base64,version,write,version,version,out,out,write,named,writeable,info,return,os,to,string,standard,charsets,name,catch,exception,ex,throw,new,sql,illegal,argument,exception,unexpected,failure,retriving,next,page,ex
Cursors -> public static String encodeToString(Version version, Cursor info);1548161728;Write a {@linkplain Cursor} to a string for serialization across xcontent.;public static String encodeToString(Version version, Cursor info) {_        if (info == Cursor.EMPTY) {_            return ""__        }_        try (ByteArrayOutputStream os = new ByteArrayOutputStream()) {_            try (OutputStream base64 = Base64.getEncoder().wrap(os)_ StreamOutput out = new OutputStreamStreamOutput(base64)) {_                Version.writeVersion(version, out)__                out.writeNamedWriteable(info)__            }_            return os.toString(StandardCharsets.UTF_8.name())__        } catch (Exception ex) {_            throw new SqlIllegalArgumentException("Unexpected failure retriving next page", ex)__        }_    };write,a,linkplain,cursor,to,a,string,for,serialization,across,xcontent;public,static,string,encode,to,string,version,version,cursor,info,if,info,cursor,empty,return,try,byte,array,output,stream,os,new,byte,array,output,stream,try,output,stream,base64,base64,get,encoder,wrap,os,stream,output,out,new,output,stream,stream,output,base64,version,write,version,version,out,out,write,named,writeable,info,return,os,to,string,standard,charsets,name,catch,exception,ex,throw,new,sql,illegal,argument,exception,unexpected,failure,retriving,next,page,ex
Cursors -> public static String encodeToString(Version version, Cursor info);1548422582;Write a {@linkplain Cursor} to a string for serialization across xcontent.;public static String encodeToString(Version version, Cursor info) {_        if (info == Cursor.EMPTY) {_            return ""__        }_        try (ByteArrayOutputStream os = new ByteArrayOutputStream()) {_            try (OutputStream base64 = Base64.getEncoder().wrap(os)_ StreamOutput out = new OutputStreamStreamOutput(base64)) {_                Version.writeVersion(version, out)__                out.writeNamedWriteable(info)__            }_            return os.toString(StandardCharsets.UTF_8.name())__        } catch (Exception ex) {_            throw new SqlIllegalArgumentException("Unexpected failure retriving next page", ex)__        }_    };write,a,linkplain,cursor,to,a,string,for,serialization,across,xcontent;public,static,string,encode,to,string,version,version,cursor,info,if,info,cursor,empty,return,try,byte,array,output,stream,os,new,byte,array,output,stream,try,output,stream,base64,base64,get,encoder,wrap,os,stream,output,out,new,output,stream,stream,output,base64,version,write,version,version,out,out,write,named,writeable,info,return,os,to,string,standard,charsets,name,catch,exception,ex,throw,new,sql,illegal,argument,exception,unexpected,failure,retriving,next,page,ex
Cursors -> public static String encodeToString(Version version, Cursor info);1549064305;Write a {@linkplain Cursor} to a string for serialization across xcontent.;public static String encodeToString(Version version, Cursor info) {_        if (info == Cursor.EMPTY) {_            return ""__        }_        try (ByteArrayOutputStream os = new ByteArrayOutputStream()) {_            try (OutputStream base64 = Base64.getEncoder().wrap(os)_ StreamOutput out = new OutputStreamStreamOutput(base64)) {_                Version.writeVersion(version, out)__                out.writeNamedWriteable(info)__            }_            return os.toString(StandardCharsets.UTF_8.name())__        } catch (Exception ex) {_            throw new SqlIllegalArgumentException("Unexpected failure retriving next page", ex)__        }_    };write,a,linkplain,cursor,to,a,string,for,serialization,across,xcontent;public,static,string,encode,to,string,version,version,cursor,info,if,info,cursor,empty,return,try,byte,array,output,stream,os,new,byte,array,output,stream,try,output,stream,base64,base64,get,encoder,wrap,os,stream,output,out,new,output,stream,stream,output,base64,version,write,version,version,out,out,write,named,writeable,info,return,os,to,string,standard,charsets,name,catch,exception,ex,throw,new,sql,illegal,argument,exception,unexpected,failure,retriving,next,page,ex
Cursors -> public static List<NamedWriteableRegistry.Entry> getNamedWriteables();1524684173;The {@link NamedWriteable}s required to deserialize {@link Cursor}s.;public static List<NamedWriteableRegistry.Entry> getNamedWriteables() {_        List<NamedWriteableRegistry.Entry> entries = new ArrayList<>()___        _        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, EmptyCursor.NAME, in -> Cursor.EMPTY))__        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, ScrollCursor.NAME, ScrollCursor::new))__        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, CompositeAggregationCursor.NAME, CompositeAggregationCursor::new))__        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, CliFormatterCursor.NAME, CliFormatterCursor::new))___        _        entries.addAll(Processors.getNamedWriteables())__        entries.addAll(HitExtractors.getNamedWriteables())__        entries.addAll(BucketExtractors.getNamedWriteables())___        return entries__    };the,link,named,writeable,s,required,to,deserialize,link,cursor,s;public,static,list,named,writeable,registry,entry,get,named,writeables,list,named,writeable,registry,entry,entries,new,array,list,entries,add,new,named,writeable,registry,entry,cursor,class,empty,cursor,name,in,cursor,empty,entries,add,new,named,writeable,registry,entry,cursor,class,scroll,cursor,name,scroll,cursor,new,entries,add,new,named,writeable,registry,entry,cursor,class,composite,aggregation,cursor,name,composite,aggregation,cursor,new,entries,add,new,named,writeable,registry,entry,cursor,class,cli,formatter,cursor,name,cli,formatter,cursor,new,entries,add,all,processors,get,named,writeables,entries,add,all,hit,extractors,get,named,writeables,entries,add,all,bucket,extractors,get,named,writeables,return,entries
Cursors -> public static List<NamedWriteableRegistry.Entry> getNamedWriteables();1542807959;The {@link NamedWriteable}s required to deserialize {@link Cursor}s.;public static List<NamedWriteableRegistry.Entry> getNamedWriteables() {_        List<NamedWriteableRegistry.Entry> entries = new ArrayList<>()___        _        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, EmptyCursor.NAME, in -> Cursor.EMPTY))__        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, ScrollCursor.NAME, ScrollCursor::new))__        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, CompositeAggregationCursor.NAME, CompositeAggregationCursor::new))__        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, CliFormatterCursor.NAME, CliFormatterCursor::new))___        _        entries.addAll(Processors.getNamedWriteables())__        entries.addAll(HitExtractors.getNamedWriteables())__        entries.addAll(BucketExtractors.getNamedWriteables())___        _        entries.addAll(Intervals.getNamedWriteables())___        return entries__    };the,link,named,writeable,s,required,to,deserialize,link,cursor,s;public,static,list,named,writeable,registry,entry,get,named,writeables,list,named,writeable,registry,entry,entries,new,array,list,entries,add,new,named,writeable,registry,entry,cursor,class,empty,cursor,name,in,cursor,empty,entries,add,new,named,writeable,registry,entry,cursor,class,scroll,cursor,name,scroll,cursor,new,entries,add,new,named,writeable,registry,entry,cursor,class,composite,aggregation,cursor,name,composite,aggregation,cursor,new,entries,add,new,named,writeable,registry,entry,cursor,class,cli,formatter,cursor,name,cli,formatter,cursor,new,entries,add,all,processors,get,named,writeables,entries,add,all,hit,extractors,get,named,writeables,entries,add,all,bucket,extractors,get,named,writeables,entries,add,all,intervals,get,named,writeables,return,entries
Cursors -> public static List<NamedWriteableRegistry.Entry> getNamedWriteables();1548161728;The {@link NamedWriteable}s required to deserialize {@link Cursor}s.;public static List<NamedWriteableRegistry.Entry> getNamedWriteables() {_        List<NamedWriteableRegistry.Entry> entries = new ArrayList<>()___        _        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, EmptyCursor.NAME, in -> Cursor.EMPTY))__        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, ScrollCursor.NAME, ScrollCursor::new))__        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, CompositeAggregationCursor.NAME, CompositeAggregationCursor::new))__        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, TextFormatterCursor.NAME, TextFormatterCursor::new))___        _        entries.addAll(Processors.getNamedWriteables())__        entries.addAll(HitExtractors.getNamedWriteables())__        entries.addAll(BucketExtractors.getNamedWriteables())___        _        entries.addAll(Intervals.getNamedWriteables())___        return entries__    };the,link,named,writeable,s,required,to,deserialize,link,cursor,s;public,static,list,named,writeable,registry,entry,get,named,writeables,list,named,writeable,registry,entry,entries,new,array,list,entries,add,new,named,writeable,registry,entry,cursor,class,empty,cursor,name,in,cursor,empty,entries,add,new,named,writeable,registry,entry,cursor,class,scroll,cursor,name,scroll,cursor,new,entries,add,new,named,writeable,registry,entry,cursor,class,composite,aggregation,cursor,name,composite,aggregation,cursor,new,entries,add,new,named,writeable,registry,entry,cursor,class,text,formatter,cursor,name,text,formatter,cursor,new,entries,add,all,processors,get,named,writeables,entries,add,all,hit,extractors,get,named,writeables,entries,add,all,bucket,extractors,get,named,writeables,entries,add,all,intervals,get,named,writeables,return,entries
Cursors -> public static List<NamedWriteableRegistry.Entry> getNamedWriteables();1548422582;The {@link NamedWriteable}s required to deserialize {@link Cursor}s.;public static List<NamedWriteableRegistry.Entry> getNamedWriteables() {_        List<NamedWriteableRegistry.Entry> entries = new ArrayList<>()___        _        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, EmptyCursor.NAME, in -> Cursor.EMPTY))__        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, ScrollCursor.NAME, ScrollCursor::new))__        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, CompositeAggregationCursor.NAME, CompositeAggregationCursor::new))__        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, TextFormatterCursor.NAME, TextFormatterCursor::new))___        _        entries.addAll(Processors.getNamedWriteables())__        entries.addAll(HitExtractors.getNamedWriteables())__        entries.addAll(BucketExtractors.getNamedWriteables())___        _        entries.addAll(Intervals.getNamedWriteables())___        return entries__    };the,link,named,writeable,s,required,to,deserialize,link,cursor,s;public,static,list,named,writeable,registry,entry,get,named,writeables,list,named,writeable,registry,entry,entries,new,array,list,entries,add,new,named,writeable,registry,entry,cursor,class,empty,cursor,name,in,cursor,empty,entries,add,new,named,writeable,registry,entry,cursor,class,scroll,cursor,name,scroll,cursor,new,entries,add,new,named,writeable,registry,entry,cursor,class,composite,aggregation,cursor,name,composite,aggregation,cursor,new,entries,add,new,named,writeable,registry,entry,cursor,class,text,formatter,cursor,name,text,formatter,cursor,new,entries,add,all,processors,get,named,writeables,entries,add,all,hit,extractors,get,named,writeables,entries,add,all,bucket,extractors,get,named,writeables,entries,add,all,intervals,get,named,writeables,return,entries
Cursors -> public static List<NamedWriteableRegistry.Entry> getNamedWriteables();1549064305;The {@link NamedWriteable}s required to deserialize {@link Cursor}s.;public static List<NamedWriteableRegistry.Entry> getNamedWriteables() {_        List<NamedWriteableRegistry.Entry> entries = new ArrayList<>()___        _        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, EmptyCursor.NAME, in -> Cursor.EMPTY))__        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, ScrollCursor.NAME, ScrollCursor::new))__        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, CompositeAggregationCursor.NAME, CompositeAggregationCursor::new))__        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, TextFormatterCursor.NAME, TextFormatterCursor::new))__        entries.add(new NamedWriteableRegistry.Entry(Cursor.class, PagingListCursor.NAME, PagingListCursor::new))___        _        entries.addAll(Processors.getNamedWriteables())__        entries.addAll(HitExtractors.getNamedWriteables())__        entries.addAll(BucketExtractors.getNamedWriteables())___        _        entries.addAll(Intervals.getNamedWriteables())___        return entries__    };the,link,named,writeable,s,required,to,deserialize,link,cursor,s;public,static,list,named,writeable,registry,entry,get,named,writeables,list,named,writeable,registry,entry,entries,new,array,list,entries,add,new,named,writeable,registry,entry,cursor,class,empty,cursor,name,in,cursor,empty,entries,add,new,named,writeable,registry,entry,cursor,class,scroll,cursor,name,scroll,cursor,new,entries,add,new,named,writeable,registry,entry,cursor,class,composite,aggregation,cursor,name,composite,aggregation,cursor,new,entries,add,new,named,writeable,registry,entry,cursor,class,text,formatter,cursor,name,text,formatter,cursor,new,entries,add,new,named,writeable,registry,entry,cursor,class,paging,list,cursor,name,paging,list,cursor,new,entries,add,all,processors,get,named,writeables,entries,add,all,hit,extractors,get,named,writeables,entries,add,all,bucket,extractors,get,named,writeables,entries,add,all,intervals,get,named,writeables,return,entries
Cursors -> public static Cursor decodeFromString(String info);1524684173;Read a {@linkplain Cursor} from a string.;public static Cursor decodeFromString(String info) {_        if (info.isEmpty()) {_            return Cursor.EMPTY__        }_        byte[] bytes = info.getBytes(StandardCharsets.UTF_8)__        try (StreamInput in = new NamedWriteableAwareStreamInput(StreamInput.wrap(Base64.getDecoder().decode(bytes)), WRITEABLE_REGISTRY)) {_            Version version = Version.readVersion(in)__            if (version.after(Version.CURRENT)) {_                throw new SqlIllegalArgumentException("Unsupported cursor version " + version)__            }_            in.setVersion(version)__            return in.readNamedWriteable(Cursor.class)__        } catch (SqlIllegalArgumentException ex) {_            throw ex__        } catch (Exception ex) {_            throw new SqlIllegalArgumentException("Unexpected failure decoding cursor", ex)__        }_    };read,a,linkplain,cursor,from,a,string;public,static,cursor,decode,from,string,string,info,if,info,is,empty,return,cursor,empty,byte,bytes,info,get,bytes,standard,charsets,try,stream,input,in,new,named,writeable,aware,stream,input,stream,input,wrap,base64,get,decoder,decode,bytes,version,version,version,read,version,in,if,version,after,version,current,throw,new,sql,illegal,argument,exception,unsupported,cursor,version,version,in,set,version,version,return,in,read,named,writeable,cursor,class,catch,sql,illegal,argument,exception,ex,throw,ex,catch,exception,ex,throw,new,sql,illegal,argument,exception,unexpected,failure,decoding,cursor,ex
Cursors -> public static Cursor decodeFromString(String info);1542807959;Read a {@linkplain Cursor} from a string.;public static Cursor decodeFromString(String info) {_        if (info.isEmpty()) {_            return Cursor.EMPTY__        }_        byte[] bytes = info.getBytes(StandardCharsets.UTF_8)__        try (StreamInput in = new NamedWriteableAwareStreamInput(StreamInput.wrap(Base64.getDecoder().decode(bytes)), WRITEABLE_REGISTRY)) {_            Version version = Version.readVersion(in)__            if (version.after(Version.CURRENT)) {_                throw new SqlIllegalArgumentException("Unsupported cursor version " + version)__            }_            in.setVersion(version)__            return in.readNamedWriteable(Cursor.class)__        } catch (SqlIllegalArgumentException ex) {_            throw ex__        } catch (Exception ex) {_            throw new SqlIllegalArgumentException("Unexpected failure decoding cursor", ex)__        }_    };read,a,linkplain,cursor,from,a,string;public,static,cursor,decode,from,string,string,info,if,info,is,empty,return,cursor,empty,byte,bytes,info,get,bytes,standard,charsets,try,stream,input,in,new,named,writeable,aware,stream,input,stream,input,wrap,base64,get,decoder,decode,bytes,version,version,version,read,version,in,if,version,after,version,current,throw,new,sql,illegal,argument,exception,unsupported,cursor,version,version,in,set,version,version,return,in,read,named,writeable,cursor,class,catch,sql,illegal,argument,exception,ex,throw,ex,catch,exception,ex,throw,new,sql,illegal,argument,exception,unexpected,failure,decoding,cursor,ex
Cursors -> public static Cursor decodeFromString(String info);1548161728;Read a {@linkplain Cursor} from a string.;public static Cursor decodeFromString(String info) {_        if (info.isEmpty()) {_            return Cursor.EMPTY__        }_        byte[] bytes = info.getBytes(StandardCharsets.UTF_8)__        try (StreamInput in = new NamedWriteableAwareStreamInput(StreamInput.wrap(Base64.getDecoder().decode(bytes)), WRITEABLE_REGISTRY)) {_            Version version = Version.readVersion(in)__            if (version.after(Version.CURRENT)) {_                throw new SqlIllegalArgumentException("Unsupported cursor version " + version)__            }_            in.setVersion(version)__            return in.readNamedWriteable(Cursor.class)__        } catch (SqlIllegalArgumentException ex) {_            throw ex__        } catch (Exception ex) {_            throw new SqlIllegalArgumentException("Unexpected failure decoding cursor", ex)__        }_    };read,a,linkplain,cursor,from,a,string;public,static,cursor,decode,from,string,string,info,if,info,is,empty,return,cursor,empty,byte,bytes,info,get,bytes,standard,charsets,try,stream,input,in,new,named,writeable,aware,stream,input,stream,input,wrap,base64,get,decoder,decode,bytes,version,version,version,read,version,in,if,version,after,version,current,throw,new,sql,illegal,argument,exception,unsupported,cursor,version,version,in,set,version,version,return,in,read,named,writeable,cursor,class,catch,sql,illegal,argument,exception,ex,throw,ex,catch,exception,ex,throw,new,sql,illegal,argument,exception,unexpected,failure,decoding,cursor,ex
Cursors -> public static Cursor decodeFromString(String info);1548422582;Read a {@linkplain Cursor} from a string.;public static Cursor decodeFromString(String info) {_        if (info.isEmpty()) {_            return Cursor.EMPTY__        }_        byte[] bytes = info.getBytes(StandardCharsets.UTF_8)__        try (StreamInput in = new NamedWriteableAwareStreamInput(StreamInput.wrap(Base64.getDecoder().decode(bytes)), WRITEABLE_REGISTRY)) {_            Version version = Version.readVersion(in)__            if (version.after(Version.CURRENT)) {_                throw new SqlIllegalArgumentException("Unsupported cursor version " + version)__            }_            in.setVersion(version)__            return in.readNamedWriteable(Cursor.class)__        } catch (SqlIllegalArgumentException ex) {_            throw ex__        } catch (Exception ex) {_            throw new SqlIllegalArgumentException("Unexpected failure decoding cursor", ex)__        }_    };read,a,linkplain,cursor,from,a,string;public,static,cursor,decode,from,string,string,info,if,info,is,empty,return,cursor,empty,byte,bytes,info,get,bytes,standard,charsets,try,stream,input,in,new,named,writeable,aware,stream,input,stream,input,wrap,base64,get,decoder,decode,bytes,version,version,version,read,version,in,if,version,after,version,current,throw,new,sql,illegal,argument,exception,unsupported,cursor,version,version,in,set,version,version,return,in,read,named,writeable,cursor,class,catch,sql,illegal,argument,exception,ex,throw,ex,catch,exception,ex,throw,new,sql,illegal,argument,exception,unexpected,failure,decoding,cursor,ex
Cursors -> public static Cursor decodeFromString(String info);1549064305;Read a {@linkplain Cursor} from a string.;public static Cursor decodeFromString(String info) {_        if (info.isEmpty()) {_            return Cursor.EMPTY__        }_        byte[] bytes = info.getBytes(StandardCharsets.UTF_8)__        try (StreamInput in = new NamedWriteableAwareStreamInput(StreamInput.wrap(Base64.getDecoder().decode(bytes)), WRITEABLE_REGISTRY)) {_            Version version = Version.readVersion(in)__            if (version.after(Version.CURRENT)) {_                throw new SqlIllegalArgumentException("Unsupported cursor version " + version)__            }_            in.setVersion(version)__            return in.readNamedWriteable(Cursor.class)__        } catch (SqlIllegalArgumentException ex) {_            throw ex__        } catch (Exception ex) {_            throw new SqlIllegalArgumentException("Unexpected failure decoding cursor", ex)__        }_    };read,a,linkplain,cursor,from,a,string;public,static,cursor,decode,from,string,string,info,if,info,is,empty,return,cursor,empty,byte,bytes,info,get,bytes,standard,charsets,try,stream,input,in,new,named,writeable,aware,stream,input,stream,input,wrap,base64,get,decoder,decode,bytes,version,version,version,read,version,in,if,version,after,version,current,throw,new,sql,illegal,argument,exception,unsupported,cursor,version,version,in,set,version,version,return,in,read,named,writeable,cursor,class,catch,sql,illegal,argument,exception,ex,throw,ex,catch,exception,ex,throw,new,sql,illegal,argument,exception,unexpected,failure,decoding,cursor,ex
