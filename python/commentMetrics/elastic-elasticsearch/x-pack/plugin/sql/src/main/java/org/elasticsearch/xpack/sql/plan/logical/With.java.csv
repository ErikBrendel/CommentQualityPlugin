commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected NodeInfo<With> info() {     return NodeInfo.create(this, With::new, child(), subQueries). }
false;protected;1;4;;@Override protected With replaceChild(LogicalPlan newChild) {     return new With(source(), newChild, subQueries). }
false;public;0;3;;public Map<String, SubQueryAlias> subQueries() {     return subQueries. }
false;public;0;4;;@Override public boolean expressionsResolved() {     return true. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(child(), subQueries). }
false;public;1;9;;@Override public boolean equals(Object obj) {     if (!super.equals(obj)) {         return false.     }     With other = (With) obj.     return Objects.equals(subQueries, other.subQueries). }
