commented;modifiers;parameterAmount;loc;comment;code
false;public,final;0;3;;public final List<Expression> arguments() {     return children(). }
false;public;0;4;;@Override public String name() {     return name. }
false;public;0;4;;@Override public Nullability nullable() {     return Expressions.nullable(children()). }
false;public;0;3;;public String functionName() {     return functionName. }
true;public;0;3;// TODO: ExpressionId might be converted into an Int which could make the String an int as well ;// TODO: ExpressionId might be converted into an Int which could make the String an int as well public String functionId() {     return id().toString(). }
false;public;1;3;;public boolean functionEquals(Function f) {     return f != null && getClass() == f.getClass() && arguments().equals(f.arguments()). }
