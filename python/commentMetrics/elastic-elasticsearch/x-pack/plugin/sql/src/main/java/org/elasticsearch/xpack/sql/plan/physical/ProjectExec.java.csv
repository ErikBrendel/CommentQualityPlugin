commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected NodeInfo<ProjectExec> info() {     return NodeInfo.create(this, ProjectExec::new, child(), projections). }
false;protected;1;4;;@Override protected ProjectExec replaceChild(PhysicalPlan newChild) {     return new ProjectExec(source(), newChild, projections). }
false;public;0;3;;public List<? extends NamedExpression> projections() {     return projections. }
false;public;0;4;;@Override public List<Attribute> output() {     return Expressions.asAttributes(projections). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(projections, child()). }
false;public;1;14;;@Override public boolean equals(Object obj) {     if (this == obj) {         return true.     }     if (obj == null || getClass() != obj.getClass()) {         return false.     }     ProjectExec other = (ProjectExec) obj.     return Objects.equals(projections, other.projections) && Objects.equals(child(), other.child()). }
