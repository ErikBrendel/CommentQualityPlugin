commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected NodeInfo<NotEquals> info() {     return NodeInfo.create(this, NotEquals::new, left(), right()). }
false;protected;2;4;;@Override protected NotEquals replaceChildren(Expression newLeft, Expression newRight) {     return new NotEquals(source(), newLeft, newRight). }
false;public;0;4;;@Override public NotEquals swapLeftAndRight() {     return new NotEquals(source(), right(), left()). }
false;public;0;4;;@Override public BinaryComparison negate() {     return new Equals(source(), left(), right()). }
