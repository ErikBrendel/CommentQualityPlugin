commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public I interval() {     return interval. }
false;public;0;3;;public DataType dataType() {     return intervalType. }
false;public,abstract;1;1;;public abstract Interval<I> add(Interval<I> interval).
false;public,abstract;1;1;;public abstract Interval<I> sub(Interval<I> interval).
false;public,abstract;1;1;;public abstract Interval<I> mul(long mul).
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(interval, intervalType). }
false;public;1;14;;@Override public boolean equals(Object obj) {     if (this == obj) {         return true.     }     if (obj == null || getClass() != obj.getClass()) {         return false.     }     Interval<?> other = (Interval<?>) obj.     return Objects.equals(other.interval, interval) && Objects.equals(other.intervalType, intervalType). }
false;public;2;4;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     return builder.value(interval). }
false;public;0;4;;@Override public String toString() {     return StringUtils.toString(interval). }
