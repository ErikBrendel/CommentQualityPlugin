# id;timestamp;commentText;codeText;commentWords;codeWords
Literal -> public static Literal of(Location loc, Object value);1536828374;Utility method for creating 'in-line' Literals (out of values instead of expressions).;public static Literal of(Location loc, Object value) {_        if (value instanceof Literal) {_            return (Literal) value__        }_        return new Literal(loc, value, DataTypes.fromJava(value))__    };utility,method,for,creating,in,line,literals,out,of,values,instead,of,expressions;public,static,literal,of,location,loc,object,value,if,value,instanceof,literal,return,literal,value,return,new,literal,loc,value,data,types,from,java,value
Literal -> public static Literal of(Location loc, Object value);1538170812;Utility method for creating 'in-line' Literals (out of values instead of expressions).;public static Literal of(Location loc, Object value) {_        if (value instanceof Literal) {_            return (Literal) value__        }_        return new Literal(loc, value, DataTypes.fromJava(value))__    };utility,method,for,creating,in,line,literals,out,of,values,instead,of,expressions;public,static,literal,of,location,loc,object,value,if,value,instanceof,literal,return,literal,value,return,new,literal,loc,value,data,types,from,java,value
Literal -> public static Literal of(Location loc, Object value);1540847035;Utility method for creating 'in-line' Literals (out of values instead of expressions).;public static Literal of(Location loc, Object value) {_        if (value instanceof Literal) {_            return (Literal) value__        }_        return new Literal(loc, value, DataTypes.fromJava(value))__    };utility,method,for,creating,in,line,literals,out,of,values,instead,of,expressions;public,static,literal,of,location,loc,object,value,if,value,instanceof,literal,return,literal,value,return,new,literal,loc,value,data,types,from,java,value
Literal -> public static Literal of(Location loc, Object value);1541008027;Utility method for creating 'in-line' Literals (out of values instead of expressions).;public static Literal of(Location loc, Object value) {_        if (value instanceof Literal) {_            return (Literal) value__        }_        return new Literal(loc, value, DataTypes.fromJava(value))__    };utility,method,for,creating,in,line,literals,out,of,values,instead,of,expressions;public,static,literal,of,location,loc,object,value,if,value,instanceof,literal,return,literal,value,return,new,literal,loc,value,data,types,from,java,value
Literal -> public static Literal of(Location loc, Object value);1542807959;Utility method for creating 'in-line' Literals (out of values instead of expressions).;public static Literal of(Location loc, Object value) {_        if (value instanceof Literal) {_            return (Literal) value__        }_        return new Literal(loc, value, DataTypes.fromJava(value))__    };utility,method,for,creating,in,line,literals,out,of,values,instead,of,expressions;public,static,literal,of,location,loc,object,value,if,value,instanceof,literal,return,literal,value,return,new,literal,loc,value,data,types,from,java,value
Literal -> public static Literal of(Expression foldable);1536828374;Utility method for creating a literal out of a foldable expression._Throws an exception if the expression is not foldable.;public static Literal of(Expression foldable) {_        return of((String) null, foldable)__    };utility,method,for,creating,a,literal,out,of,a,foldable,expression,throws,an,exception,if,the,expression,is,not,foldable;public,static,literal,of,expression,foldable,return,of,string,null,foldable
Literal -> public static Literal of(Expression foldable);1538170812;Utility method for creating a literal out of a foldable expression._Throws an exception if the expression is not foldable.;public static Literal of(Expression foldable) {_        return of((String) null, foldable)__    };utility,method,for,creating,a,literal,out,of,a,foldable,expression,throws,an,exception,if,the,expression,is,not,foldable;public,static,literal,of,expression,foldable,return,of,string,null,foldable
Literal -> public static Literal of(Expression foldable);1540847035;Utility method for creating a literal out of a foldable expression._Throws an exception if the expression is not foldable.;public static Literal of(Expression foldable) {_        return of((String) null, foldable)__    };utility,method,for,creating,a,literal,out,of,a,foldable,expression,throws,an,exception,if,the,expression,is,not,foldable;public,static,literal,of,expression,foldable,return,of,string,null,foldable
Literal -> public static Literal of(Expression foldable);1541008027;Utility method for creating a literal out of a foldable expression._Throws an exception if the expression is not foldable.;public static Literal of(Expression foldable) {_        return of((String) null, foldable)__    };utility,method,for,creating,a,literal,out,of,a,foldable,expression,throws,an,exception,if,the,expression,is,not,foldable;public,static,literal,of,expression,foldable,return,of,string,null,foldable
Literal -> public static Literal of(Expression foldable);1542807959;Utility method for creating a literal out of a foldable expression._Throws an exception if the expression is not foldable.;public static Literal of(Expression foldable) {_        return of((String) null, foldable)__    };utility,method,for,creating,a,literal,out,of,a,foldable,expression,throws,an,exception,if,the,expression,is,not,foldable;public,static,literal,of,expression,foldable,return,of,string,null,foldable
Literal -> public static Literal of(Expression foldable);1546556270;Utility method for creating a literal out of a foldable expression._Throws an exception if the expression is not foldable.;public static Literal of(Expression foldable) {_        return of((String) null, foldable)__    };utility,method,for,creating,a,literal,out,of,a,foldable,expression,throws,an,exception,if,the,expression,is,not,foldable;public,static,literal,of,expression,foldable,return,of,string,null,foldable
Literal -> public static Literal of(Expression foldable);1546792174;Utility method for creating a literal out of a foldable expression._Throws an exception if the expression is not foldable.;public static Literal of(Expression foldable) {_        return of((String) null, foldable)__    };utility,method,for,creating,a,literal,out,of,a,foldable,expression,throws,an,exception,if,the,expression,is,not,foldable;public,static,literal,of,expression,foldable,return,of,string,null,foldable
Literal -> public static Literal of(Expression foldable);1547336422;Utility method for creating a literal out of a foldable expression._Throws an exception if the expression is not foldable.;public static Literal of(Expression foldable) {_        return of((String) null, foldable)__    };utility,method,for,creating,a,literal,out,of,a,foldable,expression,throws,an,exception,if,the,expression,is,not,foldable;public,static,literal,of,expression,foldable,return,of,string,null,foldable
Literal -> public static Literal of(Source source, Object value);1546556270;Utility method for creating 'in-line' Literals (out of values instead of expressions).;public static Literal of(Source source, Object value) {_        if (value instanceof Literal) {_            return (Literal) value__        }_        return new Literal(source, value, DataTypes.fromJava(value))__    };utility,method,for,creating,in,line,literals,out,of,values,instead,of,expressions;public,static,literal,of,source,source,object,value,if,value,instanceof,literal,return,literal,value,return,new,literal,source,value,data,types,from,java,value
Literal -> public static Literal of(Source source, Object value);1546792174;Utility method for creating 'in-line' Literals (out of values instead of expressions).;public static Literal of(Source source, Object value) {_        if (value instanceof Literal) {_            return (Literal) value__        }_        return new Literal(source, value, DataTypes.fromJava(value))__    };utility,method,for,creating,in,line,literals,out,of,values,instead,of,expressions;public,static,literal,of,source,source,object,value,if,value,instanceof,literal,return,literal,value,return,new,literal,source,value,data,types,from,java,value
Literal -> public static Literal of(Source source, Object value);1547336422;Utility method for creating 'in-line' Literals (out of values instead of expressions).;public static Literal of(Source source, Object value) {_        if (value instanceof Literal) {_            return (Literal) value__        }_        return new Literal(source, value, DataTypes.fromJava(value))__    };utility,method,for,creating,in,line,literals,out,of,values,instead,of,expressions;public,static,literal,of,source,source,object,value,if,value,instanceof,literal,return,literal,value,return,new,literal,source,value,data,types,from,java,value
