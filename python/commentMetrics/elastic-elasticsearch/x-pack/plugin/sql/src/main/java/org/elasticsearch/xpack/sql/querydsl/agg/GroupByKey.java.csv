commented;modifiers;parameterAmount;loc;comment;code
false;public,final;0;28;;public final CompositeValuesSourceBuilder<?> asValueSource() {     CompositeValuesSourceBuilder<?> builder = createSourceBuilder().     if (script != null) {         builder.script(script.toPainless()).         if (script.outputType().isInteger()) {             builder.valueType(ValueType.LONG).         } else if (script.outputType().isRational()) {             builder.valueType(ValueType.DOUBLE).         } else if (script.outputType().isString()) {             builder.valueType(ValueType.STRING).         } else if (script.outputType() == DataType.DATE) {             builder.valueType(ValueType.LONG).         } else if (script.outputType() == DataType.DATETIME) {             builder.valueType(ValueType.DATE).         } else if (script.outputType() == DataType.BOOLEAN) {             builder.valueType(ValueType.BOOLEAN).         } else if (script.outputType() == DataType.IP) {             builder.valueType(ValueType.IP).         }     } else // field based     {         builder.field(fieldName()).     }     return builder.order(direction.asOrder()).missingBucket(true). }
false;protected,abstract;0;1;;protected abstract CompositeValuesSourceBuilder<?> createSourceBuilder().
false;protected,abstract;4;1;;protected abstract GroupByKey copy(String id, String fieldName, ScriptTemplate script, Direction direction).
false;public;1;3;;public GroupByKey with(Direction direction) {     return this.direction == direction ? this : copy(id(), fieldName(), script, direction). }
false;public;0;3;;public ScriptTemplate script() {     return script. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(id(), fieldName(), script, direction). }
false;public;1;6;;@Override public boolean equals(Object obj) {     return super.equals(obj) && Objects.equals(script, ((GroupByKey) obj).script) && Objects.equals(direction, ((GroupByKey) obj).direction). }
