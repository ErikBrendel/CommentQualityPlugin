commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected NodeInfo<LimitExec> info() {     return NodeInfo.create(this, LimitExec::new, child(), limit). }
false;protected;1;4;;@Override protected LimitExec replaceChild(PhysicalPlan newChild) {     return new LimitExec(source(), newChild, limit). }
false;public;0;3;;public Expression limit() {     return limit. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(limit, child()). }
false;public;1;14;;@Override public boolean equals(Object obj) {     if (this == obj) {         return true.     }     if (obj == null || getClass() != obj.getClass()) {         return false.     }     LimitExec other = (LimitExec) obj.     return Objects.equals(limit, other.limit) && Objects.equals(child(), other.child()). }
