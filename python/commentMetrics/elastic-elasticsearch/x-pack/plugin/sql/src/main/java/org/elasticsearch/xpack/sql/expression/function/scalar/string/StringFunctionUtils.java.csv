# id;timestamp;commentText;codeText;commentWords;codeWords
StringFunctionUtils -> static String substring(String s, int start, int length);1533143718;Extract a substring from the given string, using start index and length of the extracted substring.__@param s       the original String_@param start   starting position for the substring within the original string. 0-based index position_@param length  length in characters of the substracted substring_@return the resulting String;static String substring(String s, int start, int length) {_        if (!hasLength(s)) {_            return s__        }_        _        if (start < 0)_            start = 0__        _        if (start + 1 > s.length() || length < 0)_            return ""__        _        return (start + length > s.length()) ? s.substring(start) : s.substring(start, start + length)__    };extract,a,substring,from,the,given,string,using,start,index,and,length,of,the,extracted,substring,param,s,the,original,string,param,start,starting,position,for,the,substring,within,the,original,string,0,based,index,position,param,length,length,in,characters,of,the,substracted,substring,return,the,resulting,string;static,string,substring,string,s,int,start,int,length,if,has,length,s,return,s,if,start,0,start,0,if,start,1,s,length,length,0,return,return,start,length,s,length,s,substring,start,s,substring,start,start,length
StringFunctionUtils -> static String substring(String s, int start, int length);1533295538;Extract a substring from the given string, using start index and length of the extracted substring.__@param s       the original String_@param start   starting position for the substring within the original string. 0-based index position_@param length  length in characters of the substracted substring_@return the resulting String;static String substring(String s, int start, int length) {_        if (!hasLength(s)) {_            return s__        }_        _        if (start < 0)_            start = 0__        _        if (start + 1 > s.length() || length < 0)_            return ""__        _        return (start + length > s.length()) ? s.substring(start) : s.substring(start, start + length)__    };extract,a,substring,from,the,given,string,using,start,index,and,length,of,the,extracted,substring,param,s,the,original,string,param,start,starting,position,for,the,substring,within,the,original,string,0,based,index,position,param,length,length,in,characters,of,the,substracted,substring,return,the,resulting,string;static,string,substring,string,s,int,start,int,length,if,has,length,s,return,s,if,start,0,start,0,if,start,1,s,length,length,0,return,return,start,length,s,length,s,substring,start,s,substring,start,start,length
StringFunctionUtils -> static String substring(String s, int start, int length);1539615817;Extract a substring from the given string, using start index and length of the extracted substring.__@param s       the original String_@param start   starting position for the substring within the original string. 0-based index position_@param length  length in characters of the subtracted substring_@return the resulting String;static String substring(String s, int start, int length) {_        if (!hasLength(s)) {_            return s__        }_        _        if (start < 0)_            start = 0__        _        if (start + 1 > s.length() || length < 0)_            return ""__        _        return (start + length > s.length()) ? s.substring(start) : s.substring(start, start + length)__    };extract,a,substring,from,the,given,string,using,start,index,and,length,of,the,extracted,substring,param,s,the,original,string,param,start,starting,position,for,the,substring,within,the,original,string,0,based,index,position,param,length,length,in,characters,of,the,subtracted,substring,return,the,resulting,string;static,string,substring,string,s,int,start,int,length,if,has,length,s,return,s,if,start,0,start,0,if,start,1,s,length,length,0,return,return,start,length,s,length,s,substring,start,s,substring,start,start,length
StringFunctionUtils -> static String substring(String s, int start, int length);1540847035;Extract a substring from the given string, using start index and length of the extracted substring.__@param s       the original String_@param start   starting position for the substring within the original string. 0-based index position_@param length  length in characters of the subtracted substring_@return the resulting String;static String substring(String s, int start, int length) {_        if (!hasLength(s)) {_            return s__        }_        _        if (start < 0)_            start = 0__        _        if (start + 1 > s.length() || length < 0)_            return ""__        _        return (start + length > s.length()) ? s.substring(start) : s.substring(start, start + length)__    };extract,a,substring,from,the,given,string,using,start,index,and,length,of,the,extracted,substring,param,s,the,original,string,param,start,starting,position,for,the,substring,within,the,original,string,0,based,index,position,param,length,length,in,characters,of,the,subtracted,substring,return,the,resulting,string;static,string,substring,string,s,int,start,int,length,if,has,length,s,return,s,if,start,0,start,0,if,start,1,s,length,length,0,return,return,start,length,s,length,s,substring,start,s,substring,start,start,length
StringFunctionUtils -> static String trimLeadingWhitespaces(String s);1531729807;Trims the leading whitespace characters from the given String. Uses {@link Character#isWhitespace(char)}_to determine if a character is whitespace or not.__@param s       the original String_@return the resulting String;static String trimLeadingWhitespaces(String s) {_        if (!hasLength(s)) {_            return s__        }__        StringBuilder sb = new StringBuilder(s)__        while (sb.length() > 0 && Character.isWhitespace(sb.charAt(0))) {_            sb.deleteCharAt(0)__        }_        return sb.toString()__    };trims,the,leading,whitespace,characters,from,the,given,string,uses,link,character,is,whitespace,char,to,determine,if,a,character,is,whitespace,or,not,param,s,the,original,string,return,the,resulting,string;static,string,trim,leading,whitespaces,string,s,if,has,length,s,return,s,string,builder,sb,new,string,builder,s,while,sb,length,0,character,is,whitespace,sb,char,at,0,sb,delete,char,at,0,return,sb,to,string
StringFunctionUtils -> static String trimLeadingWhitespaces(String s);1533143718;Trims the leading whitespace characters from the given String. Uses {@link Character#isWhitespace(char)}_to determine if a character is whitespace or not.__@param s       the original String_@return the resulting String;static String trimLeadingWhitespaces(String s) {_        if (!hasLength(s)) {_            return s__        }__        StringBuilder sb = new StringBuilder(s)__        while (sb.length() > 0 && Character.isWhitespace(sb.charAt(0))) {_            sb.deleteCharAt(0)__        }_        return sb.toString()__    };trims,the,leading,whitespace,characters,from,the,given,string,uses,link,character,is,whitespace,char,to,determine,if,a,character,is,whitespace,or,not,param,s,the,original,string,return,the,resulting,string;static,string,trim,leading,whitespaces,string,s,if,has,length,s,return,s,string,builder,sb,new,string,builder,s,while,sb,length,0,character,is,whitespace,sb,char,at,0,sb,delete,char,at,0,return,sb,to,string
StringFunctionUtils -> static String trimLeadingWhitespaces(String s);1533295538;Trims the leading whitespace characters from the given String. Uses {@link Character#isWhitespace(char)}_to determine if a character is whitespace or not.__@param s       the original String_@return the resulting String;static String trimLeadingWhitespaces(String s) {_        if (!hasLength(s)) {_            return s__        }__        StringBuilder sb = new StringBuilder(s)__        while (sb.length() > 0 && Character.isWhitespace(sb.charAt(0))) {_            sb.deleteCharAt(0)__        }_        return sb.toString()__    };trims,the,leading,whitespace,characters,from,the,given,string,uses,link,character,is,whitespace,char,to,determine,if,a,character,is,whitespace,or,not,param,s,the,original,string,return,the,resulting,string;static,string,trim,leading,whitespaces,string,s,if,has,length,s,return,s,string,builder,sb,new,string,builder,s,while,sb,length,0,character,is,whitespace,sb,char,at,0,sb,delete,char,at,0,return,sb,to,string
StringFunctionUtils -> static String trimLeadingWhitespaces(String s);1539615817;Trims the leading whitespace characters from the given String. Uses {@link Character#isWhitespace(char)}_to determine if a character is whitespace or not.__@param s       the original String_@return the resulting String;static String trimLeadingWhitespaces(String s) {_        if (!hasLength(s)) {_            return s__        }__        StringBuilder sb = new StringBuilder(s)__        while (sb.length() > 0 && Character.isWhitespace(sb.charAt(0))) {_            sb.deleteCharAt(0)__        }_        return sb.toString()__    };trims,the,leading,whitespace,characters,from,the,given,string,uses,link,character,is,whitespace,char,to,determine,if,a,character,is,whitespace,or,not,param,s,the,original,string,return,the,resulting,string;static,string,trim,leading,whitespaces,string,s,if,has,length,s,return,s,string,builder,sb,new,string,builder,s,while,sb,length,0,character,is,whitespace,sb,char,at,0,sb,delete,char,at,0,return,sb,to,string
StringFunctionUtils -> static String trimLeadingWhitespaces(String s);1540847035;Trims the leading whitespace characters from the given String. Uses {@link Character#isWhitespace(char)}_to determine if a character is whitespace or not.__@param s       the original String_@return the resulting String;static String trimLeadingWhitespaces(String s) {_        if (!hasLength(s)) {_            return s__        }__        StringBuilder sb = new StringBuilder(s)__        while (sb.length() > 0 && Character.isWhitespace(sb.charAt(0))) {_            sb.deleteCharAt(0)__        }_        return sb.toString()__    };trims,the,leading,whitespace,characters,from,the,given,string,uses,link,character,is,whitespace,char,to,determine,if,a,character,is,whitespace,or,not,param,s,the,original,string,return,the,resulting,string;static,string,trim,leading,whitespaces,string,s,if,has,length,s,return,s,string,builder,sb,new,string,builder,s,while,sb,length,0,character,is,whitespace,sb,char,at,0,sb,delete,char,at,0,return,sb,to,string
StringFunctionUtils -> static String trimTrailingWhitespaces(String s);1531729807;Trims the trailing whitespace characters from the given String. Uses {@link Character#isWhitespace(char)}_to determine if a character is whitespace or not.__@param s       the original String_@return the resulting String;static String trimTrailingWhitespaces(String s) {_        if (!hasLength(s)) {_            return s__        }__        StringBuilder sb = new StringBuilder(s)__        while (sb.length() > 0 && Character.isWhitespace(sb.charAt(sb.length() - 1))) {_            sb.deleteCharAt(sb.length() - 1)__        }_        return sb.toString()__    };trims,the,trailing,whitespace,characters,from,the,given,string,uses,link,character,is,whitespace,char,to,determine,if,a,character,is,whitespace,or,not,param,s,the,original,string,return,the,resulting,string;static,string,trim,trailing,whitespaces,string,s,if,has,length,s,return,s,string,builder,sb,new,string,builder,s,while,sb,length,0,character,is,whitespace,sb,char,at,sb,length,1,sb,delete,char,at,sb,length,1,return,sb,to,string
StringFunctionUtils -> static String trimTrailingWhitespaces(String s);1533143718;Trims the trailing whitespace characters from the given String. Uses java.lang.Character.isWhitespace(char)_to determine if a character is whitespace or not.__@param s       the original String_@return the resulting String;static String trimTrailingWhitespaces(String s) {_        if (!hasLength(s)) {_            return s__        }__        StringBuilder sb = new StringBuilder(s)__        while (sb.length() > 0 && Character.isWhitespace(sb.charAt(sb.length() - 1))) {_            sb.deleteCharAt(sb.length() - 1)__        }_        return sb.toString()__    };trims,the,trailing,whitespace,characters,from,the,given,string,uses,java,lang,character,is,whitespace,char,to,determine,if,a,character,is,whitespace,or,not,param,s,the,original,string,return,the,resulting,string;static,string,trim,trailing,whitespaces,string,s,if,has,length,s,return,s,string,builder,sb,new,string,builder,s,while,sb,length,0,character,is,whitespace,sb,char,at,sb,length,1,sb,delete,char,at,sb,length,1,return,sb,to,string
StringFunctionUtils -> static String trimTrailingWhitespaces(String s);1533295538;Trims the trailing whitespace characters from the given String. Uses {@link Character#isWhitespace(char)}_to determine if a character is whitespace or not.__@param s       the original String_@return the resulting String;static String trimTrailingWhitespaces(String s) {_        if (!hasLength(s)) {_            return s__        }__        StringBuilder sb = new StringBuilder(s)__        while (sb.length() > 0 && Character.isWhitespace(sb.charAt(sb.length() - 1))) {_            sb.deleteCharAt(sb.length() - 1)__        }_        return sb.toString()__    };trims,the,trailing,whitespace,characters,from,the,given,string,uses,link,character,is,whitespace,char,to,determine,if,a,character,is,whitespace,or,not,param,s,the,original,string,return,the,resulting,string;static,string,trim,trailing,whitespaces,string,s,if,has,length,s,return,s,string,builder,sb,new,string,builder,s,while,sb,length,0,character,is,whitespace,sb,char,at,sb,length,1,sb,delete,char,at,sb,length,1,return,sb,to,string
StringFunctionUtils -> static String trimTrailingWhitespaces(String s);1539615817;Trims the trailing whitespace characters from the given String. Uses {@link Character#isWhitespace(char)}_to determine if a character is whitespace or not.__@param s       the original String_@return the resulting String;static String trimTrailingWhitespaces(String s) {_        if (!hasLength(s)) {_            return s__        }__        StringBuilder sb = new StringBuilder(s)__        while (sb.length() > 0 && Character.isWhitespace(sb.charAt(sb.length() - 1))) {_            sb.deleteCharAt(sb.length() - 1)__        }_        return sb.toString()__    };trims,the,trailing,whitespace,characters,from,the,given,string,uses,link,character,is,whitespace,char,to,determine,if,a,character,is,whitespace,or,not,param,s,the,original,string,return,the,resulting,string;static,string,trim,trailing,whitespaces,string,s,if,has,length,s,return,s,string,builder,sb,new,string,builder,s,while,sb,length,0,character,is,whitespace,sb,char,at,sb,length,1,sb,delete,char,at,sb,length,1,return,sb,to,string
StringFunctionUtils -> static String trimTrailingWhitespaces(String s);1540847035;Trims the trailing whitespace characters from the given String. Uses {@link Character#isWhitespace(char)}_to determine if a character is whitespace or not.__@param s       the original String_@return the resulting String;static String trimTrailingWhitespaces(String s) {_        if (!hasLength(s)) {_            return s__        }__        StringBuilder sb = new StringBuilder(s)__        while (sb.length() > 0 && Character.isWhitespace(sb.charAt(sb.length() - 1))) {_            sb.deleteCharAt(sb.length() - 1)__        }_        return sb.toString()__    };trims,the,trailing,whitespace,characters,from,the,given,string,uses,link,character,is,whitespace,char,to,determine,if,a,character,is,whitespace,or,not,param,s,the,original,string,return,the,resulting,string;static,string,trim,trailing,whitespaces,string,s,if,has,length,s,return,s,string,builder,sb,new,string,builder,s,while,sb,length,0,character,is,whitespace,sb,char,at,sb,length,1,sb,delete,char,at,sb,length,1,return,sb,to,string
