# id;timestamp;commentText;codeText;commentWords;codeWords
DataType -> public boolean isSigned();1542807959;Returns true if value is signed, false otherwise (including if the type is not numeric);public boolean isSigned() {_        _        return isNumeric()__    };returns,true,if,value,is,signed,false,otherwise,including,if,the,type,is,not,numeric;public,boolean,is,signed,return,is,numeric
DataType -> public boolean isSigned();1547713078;Returns true if value is signed, false otherwise (including if the type is not numeric);public boolean isSigned() {_        _        return isNumeric()__    };returns,true,if,value,is,signed,false,otherwise,including,if,the,type,is,not,numeric;public,boolean,is,signed,return,is,numeric
DataType -> public boolean isSigned();1548330118;Returns true if value is signed, false otherwise (including if the type is not numeric);public boolean isSigned() {_        _        return isNumeric()__    };returns,true,if,value,is,signed,false,otherwise,including,if,the,type,is,not,numeric;public,boolean,is,signed,return,is,numeric
DataType -> public boolean isSigned();1548945185;Returns true if value is signed, false otherwise (including if the type is not numeric);public boolean isSigned() {_        _        return isNumeric()__    };returns,true,if,value,is,signed,false,otherwise,including,if,the,type,is,not,numeric;public,boolean,is,signed,return,is,numeric
DataType -> public boolean isSigned();1549401172;Returns true if value is signed, false otherwise (including if the type is not numeric);public boolean isSigned() {_        _        return isNumeric()__    };returns,true,if,value,is,signed,false,otherwise,including,if,the,type,is,not,numeric;public,boolean,is,signed,return,is,numeric
DataType -> public static DataType fromTypeName(String esType);1542807959;Creates returns DataType enum corresponding to the specified es type_<p>_For any dataType DataType.fromTypeName(dataType.esType) == dataType;public static DataType fromTypeName(String esType) {_        try {_            return DataType.valueOf(esType.toUpperCase(Locale.ROOT))__        } catch (IllegalArgumentException ex) {_            return DataType.UNSUPPORTED__        }_    };creates,returns,data,type,enum,corresponding,to,the,specified,es,type,p,for,any,data,type,data,type,from,type,name,data,type,es,type,data,type;public,static,data,type,from,type,name,string,es,type,try,return,data,type,value,of,es,type,to,upper,case,locale,root,catch,illegal,argument,exception,ex,return,data,type,unsupported
DataType -> public static DataType fromTypeName(String esType);1547713078;Creates returns DataType enum corresponding to the specified es type_<p>_For any dataType DataType.fromTypeName(dataType.esType) == dataType;public static DataType fromTypeName(String esType) {_        String uppercase = esType.toUpperCase(Locale.ROOT)__        if (uppercase.equals("DATE")) {_            return DataType.DATETIME__        }_        try {_            return DataType.valueOf(uppercase)__        } catch (IllegalArgumentException ex) {_            return DataType.UNSUPPORTED__        }_    };creates,returns,data,type,enum,corresponding,to,the,specified,es,type,p,for,any,data,type,data,type,from,type,name,data,type,es,type,data,type;public,static,data,type,from,type,name,string,es,type,string,uppercase,es,type,to,upper,case,locale,root,if,uppercase,equals,date,return,data,type,datetime,try,return,data,type,value,of,uppercase,catch,illegal,argument,exception,ex,return,data,type,unsupported
DataType -> public static DataType fromTypeName(String esType);1548330118;Creates returns DataType enum corresponding to the specified es type_<p>_For any dataType DataType.fromTypeName(dataType.esType) == dataType;public static DataType fromTypeName(String esType) {_        String uppercase = esType.toUpperCase(Locale.ROOT)__        if (uppercase.equals("DATE")) {_            return DataType.DATETIME__        }_        try {_            return DataType.valueOf(uppercase)__        } catch (IllegalArgumentException ex) {_            return DataType.UNSUPPORTED__        }_    };creates,returns,data,type,enum,corresponding,to,the,specified,es,type,p,for,any,data,type,data,type,from,type,name,data,type,es,type,data,type;public,static,data,type,from,type,name,string,es,type,string,uppercase,es,type,to,upper,case,locale,root,if,uppercase,equals,date,return,data,type,datetime,try,return,data,type,value,of,uppercase,catch,illegal,argument,exception,ex,return,data,type,unsupported
DataType -> public static DataType fromTypeName(String esType);1548945185;Creates returns DataType enum corresponding to the specified es type_<p>_For any dataType DataType.fromTypeName(dataType.esType) == dataType;public static DataType fromTypeName(String esType) {_        String uppercase = esType.toUpperCase(Locale.ROOT)__        if (uppercase.equals("DATE")) {_            return DataType.DATETIME__        }_        try {_            return DataType.valueOf(uppercase)__        } catch (IllegalArgumentException ex) {_            return DataType.UNSUPPORTED__        }_    };creates,returns,data,type,enum,corresponding,to,the,specified,es,type,p,for,any,data,type,data,type,from,type,name,data,type,es,type,data,type;public,static,data,type,from,type,name,string,es,type,string,uppercase,es,type,to,upper,case,locale,root,if,uppercase,equals,date,return,data,type,datetime,try,return,data,type,value,of,uppercase,catch,illegal,argument,exception,ex,return,data,type,unsupported
DataType -> public static DataType fromTypeName(String esType);1549401172;Creates returns DataType enum corresponding to the specified es type;public static DataType fromTypeName(String esType) {_        String uppercase = esType.toUpperCase(Locale.ROOT)__        if (uppercase.equals("DATE")) {_            return DataType.DATETIME__        }_        try {_            return DataType.valueOf(uppercase)__        } catch (IllegalArgumentException ex) {_            return DataType.UNSUPPORTED__        }_    };creates,returns,data,type,enum,corresponding,to,the,specified,es,type;public,static,data,type,from,type,name,string,es,type,string,uppercase,es,type,to,upper,case,locale,root,if,uppercase,equals,date,return,data,type,datetime,try,return,data,type,value,of,uppercase,catch,illegal,argument,exception,ex,return,data,type,unsupported
