# id;timestamp;commentText;codeText;commentWords;codeWords
TransportSqlQueryAction -> public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener,                                  String username, String clusterName);1543411204;Actual implementation of the action. Statically available to support embedded mode.;public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener,_                                 String username, String clusterName) {_        _        _        Configuration cfg = new Configuration(request.timeZone(), request.fetchSize(), request.requestTimeout(), request.pageTimeout(),_                request.filter(), request.mode(), username, clusterName)___        _        QueryMetric metric = QueryMetric.from(request.mode(), request.clientId())__        planExecutor.metrics().total(metric)___        if (Strings.hasText(request.cursor()) == false) {_            planExecutor.sql(cfg, request.query(), request.params(),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(request, rowSet)),_                            e -> {_                                planExecutor.metrics().failed(metric)__                                listener.onFailure(e)__                            }))__        } else {_            planExecutor.metrics().paging(metric)__            planExecutor.nextPage(cfg, Cursors.decodeFromString(request.cursor()),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(rowSet, null)),_                            e -> {_                                planExecutor.metrics().failed(metric)__                                listener.onFailure(e)__                            }))__        }_    };actual,implementation,of,the,action,statically,available,to,support,embedded,mode;public,static,void,operation,plan,executor,plan,executor,sql,query,request,request,action,listener,sql,query,response,listener,string,username,string,cluster,name,configuration,cfg,new,configuration,request,time,zone,request,fetch,size,request,request,timeout,request,page,timeout,request,filter,request,mode,username,cluster,name,query,metric,metric,query,metric,from,request,mode,request,client,id,plan,executor,metrics,total,metric,if,strings,has,text,request,cursor,false,plan,executor,sql,cfg,request,query,request,params,action,listener,wrap,row,set,listener,on,response,create,response,request,row,set,e,plan,executor,metrics,failed,metric,listener,on,failure,e,else,plan,executor,metrics,paging,metric,plan,executor,next,page,cfg,cursors,decode,from,string,request,cursor,action,listener,wrap,row,set,listener,on,response,create,response,row,set,null,e,plan,executor,metrics,failed,metric,listener,on,failure,e
TransportSqlQueryAction -> public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener,                                  String username, String clusterName);1544548671;Actual implementation of the action. Statically available to support embedded mode.;public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener,_                                 String username, String clusterName) {_        _        _        Configuration cfg = new Configuration(request.timeZone(), request.fetchSize(), request.requestTimeout(), request.pageTimeout(),_                request.filter(), request.mode(), username, clusterName)___        _        QueryMetric metric = QueryMetric.from(request.mode(), request.clientId())__        planExecutor.metrics().total(metric)___        if (Strings.hasText(request.cursor()) == false) {_            planExecutor.sql(cfg, request.query(), request.params(),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(request, rowSet)),_                            e -> {_                                planExecutor.metrics().failed(metric)__                                listener.onFailure(e)__                            }))__        } else {_            planExecutor.metrics().paging(metric)__            planExecutor.nextPage(cfg, Cursors.decodeFromString(request.cursor()),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(request.mode(), rowSet, null)),_                            e -> {_                                planExecutor.metrics().failed(metric)__                                listener.onFailure(e)__                            }))__        }_    };actual,implementation,of,the,action,statically,available,to,support,embedded,mode;public,static,void,operation,plan,executor,plan,executor,sql,query,request,request,action,listener,sql,query,response,listener,string,username,string,cluster,name,configuration,cfg,new,configuration,request,time,zone,request,fetch,size,request,request,timeout,request,page,timeout,request,filter,request,mode,username,cluster,name,query,metric,metric,query,metric,from,request,mode,request,client,id,plan,executor,metrics,total,metric,if,strings,has,text,request,cursor,false,plan,executor,sql,cfg,request,query,request,params,action,listener,wrap,row,set,listener,on,response,create,response,request,row,set,e,plan,executor,metrics,failed,metric,listener,on,failure,e,else,plan,executor,metrics,paging,metric,plan,executor,next,page,cfg,cursors,decode,from,string,request,cursor,action,listener,wrap,row,set,listener,on,response,create,response,request,mode,row,set,null,e,plan,executor,metrics,failed,metric,listener,on,failure,e
TransportSqlQueryAction -> public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener,                                  String username, String clusterName);1545047744;Actual implementation of the action. Statically available to support embedded mode.;public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener,_                                 String username, String clusterName) {_        _        _        Configuration cfg = new Configuration(request.zoneId(), request.fetchSize(), request.requestTimeout(), request.pageTimeout(),_                request.filter(), request.mode(), username, clusterName)___        _        QueryMetric metric = QueryMetric.from(request.mode(), request.clientId())__        planExecutor.metrics().total(metric)___        if (Strings.hasText(request.cursor()) == false) {_            planExecutor.sql(cfg, request.query(), request.params(),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(request, rowSet)),_                            e -> {_                                planExecutor.metrics().failed(metric)__                                listener.onFailure(e)__                            }))__        } else {_            planExecutor.metrics().paging(metric)__            planExecutor.nextPage(cfg, Cursors.decodeFromString(request.cursor()),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(request.mode(), rowSet, null)),_                            e -> {_                                planExecutor.metrics().failed(metric)__                                listener.onFailure(e)__                            }))__        }_    };actual,implementation,of,the,action,statically,available,to,support,embedded,mode;public,static,void,operation,plan,executor,plan,executor,sql,query,request,request,action,listener,sql,query,response,listener,string,username,string,cluster,name,configuration,cfg,new,configuration,request,zone,id,request,fetch,size,request,request,timeout,request,page,timeout,request,filter,request,mode,username,cluster,name,query,metric,metric,query,metric,from,request,mode,request,client,id,plan,executor,metrics,total,metric,if,strings,has,text,request,cursor,false,plan,executor,sql,cfg,request,query,request,params,action,listener,wrap,row,set,listener,on,response,create,response,request,row,set,e,plan,executor,metrics,failed,metric,listener,on,failure,e,else,plan,executor,metrics,paging,metric,plan,executor,next,page,cfg,cursors,decode,from,string,request,cursor,action,listener,wrap,row,set,listener,on,response,create,response,request,mode,row,set,null,e,plan,executor,metrics,failed,metric,listener,on,failure,e
TransportSqlQueryAction -> public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener,                                  String username, String clusterName);1547648926;Actual implementation of the action. Statically available to support embedded mode.;public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener,_                                 String username, String clusterName) {_        _        _        Configuration cfg = new Configuration(request.zoneId(), request.fetchSize(), request.requestTimeout(), request.pageTimeout(),_                request.filter(), request.mode(), username, clusterName)___        _        QueryMetric metric = QueryMetric.from(request.mode(), request.clientId())__        planExecutor.metrics().total(metric)___        if (Strings.hasText(request.cursor()) == false) {_            planExecutor.sql(cfg, request.query(), request.params(),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(request, rowSet)),_                            e -> {_                                planExecutor.metrics().failed(metric)__                                listener.onFailure(e)__                            }))__        } else {_            planExecutor.metrics().paging(metric)__            planExecutor.nextPage(cfg, Cursors.decodeFromString(request.cursor()),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(request.mode(), rowSet, null)),_                            e -> {_                                planExecutor.metrics().failed(metric)__                                listener.onFailure(e)__                            }))__        }_    };actual,implementation,of,the,action,statically,available,to,support,embedded,mode;public,static,void,operation,plan,executor,plan,executor,sql,query,request,request,action,listener,sql,query,response,listener,string,username,string,cluster,name,configuration,cfg,new,configuration,request,zone,id,request,fetch,size,request,request,timeout,request,page,timeout,request,filter,request,mode,username,cluster,name,query,metric,metric,query,metric,from,request,mode,request,client,id,plan,executor,metrics,total,metric,if,strings,has,text,request,cursor,false,plan,executor,sql,cfg,request,query,request,params,action,listener,wrap,row,set,listener,on,response,create,response,request,row,set,e,plan,executor,metrics,failed,metric,listener,on,failure,e,else,plan,executor,metrics,paging,metric,plan,executor,next,page,cfg,cursors,decode,from,string,request,cursor,action,listener,wrap,row,set,listener,on,response,create,response,request,mode,row,set,null,e,plan,executor,metrics,failed,metric,listener,on,failure,e
TransportSqlQueryAction -> public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener,                                  String username, String clusterName);1549225895;Actual implementation of the action. Statically available to support embedded mode.;public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener,_                                 String username, String clusterName) {_        _        _        Configuration cfg = new Configuration(request.zoneId(), request.fetchSize(), request.requestTimeout(), request.pageTimeout(),_                request.filter(), request.mode(), request.clientId(), username, clusterName)___        if (Strings.hasText(request.cursor()) == false) {_            planExecutor.sql(cfg, request.query(), request.params(),_                    wrap(rowSet -> listener.onResponse(createResponse(request, rowSet)), listener::onFailure))__        } else {_            planExecutor.nextPage(cfg, Cursors.decodeFromString(request.cursor()),_                    wrap(rowSet -> listener.onResponse(createResponse(request.mode(), rowSet, null)), listener::onFailure))__        }_    };actual,implementation,of,the,action,statically,available,to,support,embedded,mode;public,static,void,operation,plan,executor,plan,executor,sql,query,request,request,action,listener,sql,query,response,listener,string,username,string,cluster,name,configuration,cfg,new,configuration,request,zone,id,request,fetch,size,request,request,timeout,request,page,timeout,request,filter,request,mode,request,client,id,username,cluster,name,if,strings,has,text,request,cursor,false,plan,executor,sql,cfg,request,query,request,params,wrap,row,set,listener,on,response,create,response,request,row,set,listener,on,failure,else,plan,executor,next,page,cfg,cursors,decode,from,string,request,cursor,wrap,row,set,listener,on,response,create,response,request,mode,row,set,null,listener,on,failure
TransportSqlQueryAction -> public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener,                                  String username, String clusterName);1549401172;Actual implementation of the action. Statically available to support embedded mode.;public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener,_                                 String username, String clusterName) {_        _        _        Configuration cfg = new Configuration(request.zoneId(), request.fetchSize(), request.requestTimeout(), request.pageTimeout(),_                request.filter(), request.mode(), request.clientId(), username, clusterName)___        if (Strings.hasText(request.cursor()) == false) {_            planExecutor.sql(cfg, request.query(), request.params(),_                    wrap(rowSet -> listener.onResponse(createResponse(request, rowSet)), listener::onFailure))__        } else {_            planExecutor.nextPage(cfg, Cursors.decodeFromString(request.cursor()),_                    wrap(rowSet -> listener.onResponse(createResponse(request.mode(), rowSet, null)), listener::onFailure))__        }_    };actual,implementation,of,the,action,statically,available,to,support,embedded,mode;public,static,void,operation,plan,executor,plan,executor,sql,query,request,request,action,listener,sql,query,response,listener,string,username,string,cluster,name,configuration,cfg,new,configuration,request,zone,id,request,fetch,size,request,request,timeout,request,page,timeout,request,filter,request,mode,request,client,id,username,cluster,name,if,strings,has,text,request,cursor,false,plan,executor,sql,cfg,request,query,request,params,wrap,row,set,listener,on,response,create,response,request,row,set,listener,on,failure,else,plan,executor,next,page,cfg,cursors,decode,from,string,request,cursor,wrap,row,set,listener,on,response,create,response,request,mode,row,set,null,listener,on,failure
TransportSqlQueryAction -> public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener,                                  String username, String clusterName);1551252292;Actual implementation of the action. Statically available to support embedded mode.;public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener,_                                 String username, String clusterName) {_        _        _        Configuration cfg = new Configuration(request.zoneId(), request.fetchSize(), request.requestTimeout(), request.pageTimeout(),_                request.filter(), request.mode(), request.clientId(), username, clusterName)___        if (Strings.hasText(request.cursor()) == false) {_            planExecutor.sql(cfg, request.query(), request.params(),_                    wrap(rowSet -> listener.onResponse(createResponse(request, rowSet)), listener::onFailure))__        } else {_            planExecutor.nextPage(cfg, Cursors.decodeFromString(request.cursor()),_                    wrap(rowSet -> listener.onResponse(createResponse(request.mode(), request.columnar(), rowSet, null)),_                            listener::onFailure))__        }_    };actual,implementation,of,the,action,statically,available,to,support,embedded,mode;public,static,void,operation,plan,executor,plan,executor,sql,query,request,request,action,listener,sql,query,response,listener,string,username,string,cluster,name,configuration,cfg,new,configuration,request,zone,id,request,fetch,size,request,request,timeout,request,page,timeout,request,filter,request,mode,request,client,id,username,cluster,name,if,strings,has,text,request,cursor,false,plan,executor,sql,cfg,request,query,request,params,wrap,row,set,listener,on,response,create,response,request,row,set,listener,on,failure,else,plan,executor,next,page,cfg,cursors,decode,from,string,request,cursor,wrap,row,set,listener,on,response,create,response,request,mode,request,columnar,row,set,null,listener,on,failure
TransportSqlQueryAction -> public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener);1524684173;Actual implementation of the action. Statically available to support embedded mode.;public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener) {_        _        _        Configuration cfg = new Configuration(request.timeZone(), request.fetchSize(), request.requestTimeout(), request.pageTimeout(),_                request.filter())___        if (Strings.hasText(request.cursor()) == false) {_            planExecutor.sql(cfg, request.query(), request.params(),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(request, rowSet)), listener::onFailure))__        } else {_            planExecutor.nextPage(cfg, Cursors.decodeFromString(request.cursor()),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(rowSet, null)), listener::onFailure))__        }_    };actual,implementation,of,the,action,statically,available,to,support,embedded,mode;public,static,void,operation,plan,executor,plan,executor,sql,query,request,request,action,listener,sql,query,response,listener,configuration,cfg,new,configuration,request,time,zone,request,fetch,size,request,request,timeout,request,page,timeout,request,filter,if,strings,has,text,request,cursor,false,plan,executor,sql,cfg,request,query,request,params,action,listener,wrap,row,set,listener,on,response,create,response,request,row,set,listener,on,failure,else,plan,executor,next,page,cfg,cursors,decode,from,string,request,cursor,action,listener,wrap,row,set,listener,on,response,create,response,row,set,null,listener,on,failure
TransportSqlQueryAction -> public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener);1526374795;Actual implementation of the action. Statically available to support embedded mode.;public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener) {_        _        _        Configuration cfg = new Configuration(request.timeZone(), request.fetchSize(), request.requestTimeout(), request.pageTimeout(),_                request.filter())___        if (Strings.hasText(request.cursor()) == false) {_            planExecutor.sql(cfg, request.query(), request.params(),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(request, rowSet)), listener::onFailure))__        } else {_            planExecutor.nextPage(cfg, Cursors.decodeFromString(request.cursor()),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(rowSet, null)), listener::onFailure))__        }_    };actual,implementation,of,the,action,statically,available,to,support,embedded,mode;public,static,void,operation,plan,executor,plan,executor,sql,query,request,request,action,listener,sql,query,response,listener,configuration,cfg,new,configuration,request,time,zone,request,fetch,size,request,request,timeout,request,page,timeout,request,filter,if,strings,has,text,request,cursor,false,plan,executor,sql,cfg,request,query,request,params,action,listener,wrap,row,set,listener,on,response,create,response,request,row,set,listener,on,failure,else,plan,executor,next,page,cfg,cursors,decode,from,string,request,cursor,action,listener,wrap,row,set,listener,on,response,create,response,row,set,null,listener,on,failure
TransportSqlQueryAction -> public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener);1529487105;Actual implementation of the action. Statically available to support embedded mode.;public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener) {_        _        _        Configuration cfg = new Configuration(request.timeZone(), request.fetchSize(), request.requestTimeout(), request.pageTimeout(),_                request.filter())___        if (Strings.hasText(request.cursor()) == false) {_            planExecutor.sql(cfg, request.query(), request.params(),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(request, rowSet)), listener::onFailure))__        } else {_            planExecutor.nextPage(cfg, Cursors.decodeFromString(request.cursor()),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(rowSet, null)), listener::onFailure))__        }_    };actual,implementation,of,the,action,statically,available,to,support,embedded,mode;public,static,void,operation,plan,executor,plan,executor,sql,query,request,request,action,listener,sql,query,response,listener,configuration,cfg,new,configuration,request,time,zone,request,fetch,size,request,request,timeout,request,page,timeout,request,filter,if,strings,has,text,request,cursor,false,plan,executor,sql,cfg,request,query,request,params,action,listener,wrap,row,set,listener,on,response,create,response,request,row,set,listener,on,failure,else,plan,executor,next,page,cfg,cursors,decode,from,string,request,cursor,action,listener,wrap,row,set,listener,on,response,create,response,row,set,null,listener,on,failure
TransportSqlQueryAction -> public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener);1529658035;Actual implementation of the action. Statically available to support embedded mode.;public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener) {_        _        _        Configuration cfg = new Configuration(request.timeZone(), request.fetchSize(), request.requestTimeout(), request.pageTimeout(),_                request.filter())___        if (Strings.hasText(request.cursor()) == false) {_            planExecutor.sql(cfg, request.query(), request.params(),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(request, rowSet)), listener::onFailure))__        } else {_            planExecutor.nextPage(cfg, Cursors.decodeFromString(request.cursor()),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(rowSet, null)), listener::onFailure))__        }_    };actual,implementation,of,the,action,statically,available,to,support,embedded,mode;public,static,void,operation,plan,executor,plan,executor,sql,query,request,request,action,listener,sql,query,response,listener,configuration,cfg,new,configuration,request,time,zone,request,fetch,size,request,request,timeout,request,page,timeout,request,filter,if,strings,has,text,request,cursor,false,plan,executor,sql,cfg,request,query,request,params,action,listener,wrap,row,set,listener,on,response,create,response,request,row,set,listener,on,failure,else,plan,executor,next,page,cfg,cursors,decode,from,string,request,cursor,action,listener,wrap,row,set,listener,on,response,create,response,row,set,null,listener,on,failure
TransportSqlQueryAction -> public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener);1529916082;Actual implementation of the action. Statically available to support embedded mode.;public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener) {_        _        _        Configuration cfg = new Configuration(request.timeZone(), request.fetchSize(), request.requestTimeout(), request.pageTimeout(),_                request.filter())___        if (Strings.hasText(request.cursor()) == false) {_            planExecutor.sql(cfg, request.query(), request.params(),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(request, rowSet)), listener::onFailure))__        } else {_            planExecutor.nextPage(cfg, Cursors.decodeFromString(request.cursor()),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(rowSet, null)), listener::onFailure))__        }_    };actual,implementation,of,the,action,statically,available,to,support,embedded,mode;public,static,void,operation,plan,executor,plan,executor,sql,query,request,request,action,listener,sql,query,response,listener,configuration,cfg,new,configuration,request,time,zone,request,fetch,size,request,request,timeout,request,page,timeout,request,filter,if,strings,has,text,request,cursor,false,plan,executor,sql,cfg,request,query,request,params,action,listener,wrap,row,set,listener,on,response,create,response,request,row,set,listener,on,failure,else,plan,executor,next,page,cfg,cursors,decode,from,string,request,cursor,action,listener,wrap,row,set,listener,on,response,create,response,row,set,null,listener,on,failure
TransportSqlQueryAction -> public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener);1531179852;Actual implementation of the action. Statically available to support embedded mode.;public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener) {_        _        _        Configuration cfg = new Configuration(request.timeZone(), request.fetchSize(), request.requestTimeout(), request.pageTimeout(),_                request.filter())___        if (Strings.hasText(request.cursor()) == false) {_            planExecutor.sql(cfg, request.query(), request.params(),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(request, rowSet)), listener::onFailure))__        } else {_            planExecutor.nextPage(cfg, Cursors.decodeFromString(request.cursor()),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(rowSet, null)), listener::onFailure))__        }_    };actual,implementation,of,the,action,statically,available,to,support,embedded,mode;public,static,void,operation,plan,executor,plan,executor,sql,query,request,request,action,listener,sql,query,response,listener,configuration,cfg,new,configuration,request,time,zone,request,fetch,size,request,request,timeout,request,page,timeout,request,filter,if,strings,has,text,request,cursor,false,plan,executor,sql,cfg,request,query,request,params,action,listener,wrap,row,set,listener,on,response,create,response,request,row,set,listener,on,failure,else,plan,executor,next,page,cfg,cursors,decode,from,string,request,cursor,action,listener,wrap,row,set,listener,on,response,create,response,row,set,null,listener,on,failure
TransportSqlQueryAction -> public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener);1540486836;Actual implementation of the action. Statically available to support embedded mode.;public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener) {_        _        _        Configuration cfg = new Configuration(request.timeZone(), request.fetchSize(), request.requestTimeout(), request.pageTimeout(),_                request.filter())___        if (Strings.hasText(request.cursor()) == false) {_            planExecutor.sql(cfg, request.query(), request.params(),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(request, rowSet)), listener::onFailure))__        } else {_            planExecutor.nextPage(cfg, Cursors.decodeFromString(request.cursor()),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(rowSet, null)), listener::onFailure))__        }_    };actual,implementation,of,the,action,statically,available,to,support,embedded,mode;public,static,void,operation,plan,executor,plan,executor,sql,query,request,request,action,listener,sql,query,response,listener,configuration,cfg,new,configuration,request,time,zone,request,fetch,size,request,request,timeout,request,page,timeout,request,filter,if,strings,has,text,request,cursor,false,plan,executor,sql,cfg,request,query,request,params,action,listener,wrap,row,set,listener,on,response,create,response,request,row,set,listener,on,failure,else,plan,executor,next,page,cfg,cursors,decode,from,string,request,cursor,action,listener,wrap,row,set,listener,on,response,create,response,row,set,null,listener,on,failure
TransportSqlQueryAction -> public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener);1541419698;Actual implementation of the action. Statically available to support embedded mode.;public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener) {_        _        _        Configuration cfg = new Configuration(request.timeZone(), request.fetchSize(), request.requestTimeout(), request.pageTimeout(),_                request.filter())___        if (Strings.hasText(request.cursor()) == false) {_            planExecutor.sql(cfg, request.query(), request.params(),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(request, rowSet)), listener::onFailure))__        } else {_            planExecutor.nextPage(cfg, Cursors.decodeFromString(request.cursor()),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(rowSet, null)), listener::onFailure))__        }_    };actual,implementation,of,the,action,statically,available,to,support,embedded,mode;public,static,void,operation,plan,executor,plan,executor,sql,query,request,request,action,listener,sql,query,response,listener,configuration,cfg,new,configuration,request,time,zone,request,fetch,size,request,request,timeout,request,page,timeout,request,filter,if,strings,has,text,request,cursor,false,plan,executor,sql,cfg,request,query,request,params,action,listener,wrap,row,set,listener,on,response,create,response,request,row,set,listener,on,failure,else,plan,executor,next,page,cfg,cursors,decode,from,string,request,cursor,action,listener,wrap,row,set,listener,on,response,create,response,row,set,null,listener,on,failure
TransportSqlQueryAction -> public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener);1542807959;Actual implementation of the action. Statically available to support embedded mode.;public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener) {_        _        _        Configuration cfg = new Configuration(request.timeZone(), request.fetchSize(), request.requestTimeout(), request.pageTimeout(),_                request.filter())___        if (Strings.hasText(request.cursor()) == false) {_            planExecutor.sql(cfg, request.query(), request.params(),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(request, rowSet)), listener::onFailure))__        } else {_            planExecutor.nextPage(cfg, Cursors.decodeFromString(request.cursor()),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(rowSet, null)), listener::onFailure))__        }_    };actual,implementation,of,the,action,statically,available,to,support,embedded,mode;public,static,void,operation,plan,executor,plan,executor,sql,query,request,request,action,listener,sql,query,response,listener,configuration,cfg,new,configuration,request,time,zone,request,fetch,size,request,request,timeout,request,page,timeout,request,filter,if,strings,has,text,request,cursor,false,plan,executor,sql,cfg,request,query,request,params,action,listener,wrap,row,set,listener,on,response,create,response,request,row,set,listener,on,failure,else,plan,executor,next,page,cfg,cursors,decode,from,string,request,cursor,action,listener,wrap,row,set,listener,on,response,create,response,row,set,null,listener,on,failure
TransportSqlQueryAction -> public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener);1543209103;Actual implementation of the action. Statically available to support embedded mode.;public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener) {_        _        _        Configuration cfg = new Configuration(request.timeZone(), request.fetchSize(), request.requestTimeout(), request.pageTimeout(),_                request.filter())__        _        _        QueryMetric metric = QueryMetric.from(request.mode(), request.clientId())__        planExecutor.metrics().total(metric)___        if (Strings.hasText(request.cursor()) == false) {_            planExecutor.sql(cfg, request.query(), request.params(),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(request, rowSet)),_                            e -> {_                                planExecutor.metrics().failed(metric)__                                listener.onFailure(e)__                            }))__        } else {_            planExecutor.metrics().paging(metric)__            planExecutor.nextPage(cfg, Cursors.decodeFromString(request.cursor()),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(rowSet, null)),_                            e -> {_                                planExecutor.metrics().failed(metric)__                                listener.onFailure(e)__                            }))__        }_    };actual,implementation,of,the,action,statically,available,to,support,embedded,mode;public,static,void,operation,plan,executor,plan,executor,sql,query,request,request,action,listener,sql,query,response,listener,configuration,cfg,new,configuration,request,time,zone,request,fetch,size,request,request,timeout,request,page,timeout,request,filter,query,metric,metric,query,metric,from,request,mode,request,client,id,plan,executor,metrics,total,metric,if,strings,has,text,request,cursor,false,plan,executor,sql,cfg,request,query,request,params,action,listener,wrap,row,set,listener,on,response,create,response,request,row,set,e,plan,executor,metrics,failed,metric,listener,on,failure,e,else,plan,executor,metrics,paging,metric,plan,executor,next,page,cfg,cursors,decode,from,string,request,cursor,action,listener,wrap,row,set,listener,on,response,create,response,row,set,null,e,plan,executor,metrics,failed,metric,listener,on,failure,e
TransportSqlQueryAction -> public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener);1543244349;Actual implementation of the action. Statically available to support embedded mode.;public static void operation(PlanExecutor planExecutor, SqlQueryRequest request, ActionListener<SqlQueryResponse> listener) {_        _        _        Configuration cfg = new Configuration(request.timeZone(), request.fetchSize(), request.requestTimeout(), request.pageTimeout(),_                request.filter(), request.mode())___        _        QueryMetric metric = QueryMetric.from(request.mode(), request.clientId())__        planExecutor.metrics().total(metric)___        if (Strings.hasText(request.cursor()) == false) {_            planExecutor.sql(cfg, request.query(), request.params(),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(request, rowSet)),_                            e -> {_                                planExecutor.metrics().failed(metric)__                                listener.onFailure(e)__                            }))__        } else {_            planExecutor.metrics().paging(metric)__            planExecutor.nextPage(cfg, Cursors.decodeFromString(request.cursor()),_                    ActionListener.wrap(rowSet -> listener.onResponse(createResponse(rowSet, null)),_                            e -> {_                                planExecutor.metrics().failed(metric)__                                listener.onFailure(e)__                            }))__        }_    };actual,implementation,of,the,action,statically,available,to,support,embedded,mode;public,static,void,operation,plan,executor,plan,executor,sql,query,request,request,action,listener,sql,query,response,listener,configuration,cfg,new,configuration,request,time,zone,request,fetch,size,request,request,timeout,request,page,timeout,request,filter,request,mode,query,metric,metric,query,metric,from,request,mode,request,client,id,plan,executor,metrics,total,metric,if,strings,has,text,request,cursor,false,plan,executor,sql,cfg,request,query,request,params,action,listener,wrap,row,set,listener,on,response,create,response,request,row,set,e,plan,executor,metrics,failed,metric,listener,on,failure,e,else,plan,executor,metrics,paging,metric,plan,executor,next,page,cfg,cursors,decode,from,string,request,cursor,action,listener,wrap,row,set,listener,on,response,create,response,row,set,null,e,plan,executor,metrics,failed,metric,listener,on,failure,e
