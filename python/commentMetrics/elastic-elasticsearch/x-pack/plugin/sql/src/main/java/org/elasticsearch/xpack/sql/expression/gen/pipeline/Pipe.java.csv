# id;timestamp;commentText;codeText;commentWords;codeWords
Pipe -> public abstract Pipe resolveAttributes(AttributeResolver resolver)_;1538170812;Resolve {@link Attribute}s which are unprocessable into_{@link Pipe}s that are.__@return {@code this} if the resolution doesn't change the_definition, a new {@link Pipe} otherwise;public abstract Pipe resolveAttributes(AttributeResolver resolver)_;resolve,link,attribute,s,which,are,unprocessable,into,link,pipe,s,that,are,return,code,this,if,the,resolution,doesn,t,change,the,definition,a,new,link,pipe,otherwise;public,abstract,pipe,resolve,attributes,attribute,resolver,resolver
Pipe -> public abstract Pipe resolveAttributes(AttributeResolver resolver)_;1540313026;Resolve {@link Attribute}s which are unprocessable into_{@link Pipe}s that are.__@return {@code this} if the resolution doesn't change the_definition, a new {@link Pipe} otherwise;public abstract Pipe resolveAttributes(AttributeResolver resolver)_;resolve,link,attribute,s,which,are,unprocessable,into,link,pipe,s,that,are,return,code,this,if,the,resolution,doesn,t,change,the,definition,a,new,link,pipe,otherwise;public,abstract,pipe,resolve,attributes,attribute,resolver,resolver
Pipe -> public Pipe resolveAttributes(AttributeResolver resolver);1541502744;Resolve {@link Attribute}s which are unprocessable into_{@link Pipe}s that are.__@return {@code this} if the resolution doesn't change the_definition, a new {@link Pipe} otherwise;public Pipe resolveAttributes(AttributeResolver resolver) {_        List<Pipe> newPipes = new ArrayList<>(children().size())__        for (Pipe p : children()) {_            newPipes.add(p.resolveAttributes(resolver))__        }__        return children().equals(newPipes) ? this : replaceChildren(newPipes)__    };resolve,link,attribute,s,which,are,unprocessable,into,link,pipe,s,that,are,return,code,this,if,the,resolution,doesn,t,change,the,definition,a,new,link,pipe,otherwise;public,pipe,resolve,attributes,attribute,resolver,resolver,list,pipe,new,pipes,new,array,list,children,size,for,pipe,p,children,new,pipes,add,p,resolve,attributes,resolver,return,children,equals,new,pipes,this,replace,children,new,pipes
Pipe -> public Pipe resolveAttributes(AttributeResolver resolver);1546556270;Resolve {@link Attribute}s which are unprocessable into_{@link Pipe}s that are.__@return {@code this} if the resolution doesn't change the_definition, a new {@link Pipe} otherwise;public Pipe resolveAttributes(AttributeResolver resolver) {_        List<Pipe> newPipes = new ArrayList<>(children().size())__        for (Pipe p : children()) {_            newPipes.add(p.resolveAttributes(resolver))__        }__        return children().equals(newPipes) ? this : replaceChildren(newPipes)__    };resolve,link,attribute,s,which,are,unprocessable,into,link,pipe,s,that,are,return,code,this,if,the,resolution,doesn,t,change,the,definition,a,new,link,pipe,otherwise;public,pipe,resolve,attributes,attribute,resolver,resolver,list,pipe,new,pipes,new,array,list,children,size,for,pipe,p,children,new,pipes,add,p,resolve,attributes,resolver,return,children,equals,new,pipes,this,replace,children,new,pipes
