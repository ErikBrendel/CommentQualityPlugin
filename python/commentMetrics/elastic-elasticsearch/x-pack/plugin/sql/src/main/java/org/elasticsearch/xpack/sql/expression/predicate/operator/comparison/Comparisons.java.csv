# id;timestamp;commentText;codeText;commentWords;codeWords
Comparisons -> @SuppressWarnings({ "rawtypes", "unchecked" })     static Integer compare(Object l, Object r);1538170812;Compares two expression arguments (typically Numbers), if possible._Otherwise returns null (the arguments are not comparable or at least_one of them is null).;@SuppressWarnings({ "rawtypes", "unchecked" })_    static Integer compare(Object l, Object r) {_        _        if (l instanceof Number && r instanceof Number) {_            return compare((Number) l, (Number) r)__        }__        if (l instanceof Comparable && r instanceof Comparable) {_            try {_                return Integer.valueOf(((Comparable) l).compareTo(r))__            } catch (ClassCastException cce) {_                _                _                return null__            }_        }__        return null__    };compares,two,expression,arguments,typically,numbers,if,possible,otherwise,returns,null,the,arguments,are,not,comparable,or,at,least,one,of,them,is,null;suppress,warnings,rawtypes,unchecked,static,integer,compare,object,l,object,r,if,l,instanceof,number,r,instanceof,number,return,compare,number,l,number,r,if,l,instanceof,comparable,r,instanceof,comparable,try,return,integer,value,of,comparable,l,compare,to,r,catch,class,cast,exception,cce,return,null,return,null
Comparisons -> @SuppressWarnings({ "rawtypes", "unchecked" })     static Integer compare(Object l, Object r);1540313026;Compares two expression arguments (typically Numbers), if possible._Otherwise returns null (the arguments are not comparable or at least_one of them is null).;@SuppressWarnings({ "rawtypes", "unchecked" })_    static Integer compare(Object l, Object r) {_        _        if (l instanceof Number && r instanceof Number) {_            return compare((Number) l, (Number) r)__        }__        if (l instanceof Comparable && r instanceof Comparable) {_            try {_                return Integer.valueOf(((Comparable) l).compareTo(r))__            } catch (ClassCastException cce) {_                _                _                return null__            }_        }__        return null__    };compares,two,expression,arguments,typically,numbers,if,possible,otherwise,returns,null,the,arguments,are,not,comparable,or,at,least,one,of,them,is,null;suppress,warnings,rawtypes,unchecked,static,integer,compare,object,l,object,r,if,l,instanceof,number,r,instanceof,number,return,compare,number,l,number,r,if,l,instanceof,comparable,r,instanceof,comparable,try,return,integer,value,of,comparable,l,compare,to,r,catch,class,cast,exception,cce,return,null,return,null
Comparisons -> @SuppressWarnings({ "rawtypes", "unchecked" })     static Integer compare(Object l, Object r);1541452987;Compares two expression arguments (typically Numbers), if possible._Otherwise returns null (the arguments are not comparable or at least_one of them is null).;@SuppressWarnings({ "rawtypes", "unchecked" })_    static Integer compare(Object l, Object r) {_        if (l == null || r == null) {_            return null__        }_        _        if (l instanceof Number && r instanceof Number) {_            return compare((Number) l, (Number) r)__        }__        if (l instanceof Comparable && r instanceof Comparable) {_            try {_                return Integer.valueOf(((Comparable) l).compareTo(r))__            } catch (ClassCastException cce) {_                _                _                return null__            }_        }__        return null__    };compares,two,expression,arguments,typically,numbers,if,possible,otherwise,returns,null,the,arguments,are,not,comparable,or,at,least,one,of,them,is,null;suppress,warnings,rawtypes,unchecked,static,integer,compare,object,l,object,r,if,l,null,r,null,return,null,if,l,instanceof,number,r,instanceof,number,return,compare,number,l,number,r,if,l,instanceof,comparable,r,instanceof,comparable,try,return,integer,value,of,comparable,l,compare,to,r,catch,class,cast,exception,cce,return,null,return,null
Comparisons -> @SuppressWarnings({ "rawtypes", "unchecked" })     static Integer compare(Object l, Object r);1543237322;Compares two expression arguments (typically Numbers), if possible._Otherwise returns null (the arguments are not comparable or at least_one of them is null).;@SuppressWarnings({ "rawtypes", "unchecked" })_    static Integer compare(Object l, Object r) {_        if (l == null || r == null) {_            return null__        }_        _        if (l instanceof Number && r instanceof Number) {_            return compare((Number) l, (Number) r)__        }__        if (l instanceof Comparable && r instanceof Comparable) {_            try {_                return Integer.valueOf(((Comparable) l).compareTo(r))__            } catch (ClassCastException cce) {_                _                _                return null__            }_        }__        return null__    };compares,two,expression,arguments,typically,numbers,if,possible,otherwise,returns,null,the,arguments,are,not,comparable,or,at,least,one,of,them,is,null;suppress,warnings,rawtypes,unchecked,static,integer,compare,object,l,object,r,if,l,null,r,null,return,null,if,l,instanceof,number,r,instanceof,number,return,compare,number,l,number,r,if,l,instanceof,comparable,r,instanceof,comparable,try,return,integer,value,of,comparable,l,compare,to,r,catch,class,cast,exception,cce,return,null,return,null
Comparisons -> @SuppressWarnings({ "rawtypes", "unchecked" })     static Integer compare(Object l, Object r);1543252896;Compares two expression arguments (typically Numbers), if possible._Otherwise returns null (the arguments are not comparable or at least_one of them is null).;@SuppressWarnings({ "rawtypes", "unchecked" })_    static Integer compare(Object l, Object r) {_        if (l == null || r == null) {_            return null__        }_        _        if (l instanceof Number && r instanceof Number) {_            return compare((Number) l, (Number) r)__        }__        if (l instanceof Comparable && r instanceof Comparable) {_            try {_                return Integer.valueOf(((Comparable) l).compareTo(r))__            } catch (ClassCastException cce) {_                _                _                return null__            }_        }__        return null__    };compares,two,expression,arguments,typically,numbers,if,possible,otherwise,returns,null,the,arguments,are,not,comparable,or,at,least,one,of,them,is,null;suppress,warnings,rawtypes,unchecked,static,integer,compare,object,l,object,r,if,l,null,r,null,return,null,if,l,instanceof,number,r,instanceof,number,return,compare,number,l,number,r,if,l,instanceof,comparable,r,instanceof,comparable,try,return,integer,value,of,comparable,l,compare,to,r,catch,class,cast,exception,cce,return,null,return,null
