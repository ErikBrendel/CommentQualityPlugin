commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected NodeInfo<Sub> info() {     return NodeInfo.create(this, Sub::new, left(), right()). }
false;protected;2;4;;@Override protected Sub replaceChildren(Expression newLeft, Expression newRight) {     return new Sub(source(), newLeft, newRight). }
false;protected;0;8;;@Override protected TypeResolution resolveWithIntervals() {     if (right().dataType().isDateBased() && DataTypes.isInterval(left().dataType())) {         return new TypeResolution(format(null, "Cannot subtract a {}[{}] from an interval[{}]. do you mean the reverse?", right().dataType().typeName, right().source().text(), left().source().text())).     }     return TypeResolution.TYPE_RESOLVED. }
