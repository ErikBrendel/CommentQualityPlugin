commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getWriteableName() {     return NAME. }
false;public;1;4;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeEnum(conversion). }
false;public;1;4;;@Override public Object process(Object input) {     return conversion.convert(input). }
false;;0;3;;Conversion converter() {     return conversion. }
false;public;1;13;;@Override public boolean equals(Object obj) {     if (this == obj) {         return true.     }     if (obj == null || getClass() != obj.getClass()) {         return false.     }     CastProcessor other = (CastProcessor) obj.     return Objects.equals(conversion, other.conversion). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(conversion). }
false;public;0;4;;@Override public String toString() {     return conversion.name(). }
