commented;modifiers;parameterAmount;loc;comment;code
false;public,final;1;3;;public final Number apply(Number number) {     return process.apply(number). }
false;public;0;3;;public String symbol() {     return "-". }
false;public;0;4;;@Override public String getWriteableName() {     return NAME. }
false;public;1;4;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeEnum(operation). }
false;public;1;11;;@Override public Object process(Object input) {     if (input == null) {         return null.     }     if (input instanceof Number) {         return operation.apply((Number) input).     }     throw new SqlIllegalArgumentException("A number is required. received {}", input). }
false;public;0;4;;@Override public String toString() {     return operation.symbol() + super.toString(). }
