# id;timestamp;commentText;codeText;commentWords;codeWords
UnresolvedFunction -> ResolutionType -> protected abstract boolean isValidAlternative(FunctionDefinition def)_;1524684173;Is {@code def} a valid alternative for function invocations_of this kind. Used to filter the list of "did you mean"_options sent back to the user when they specify a missing_function.;protected abstract boolean isValidAlternative(FunctionDefinition def)_;is,code,def,a,valid,alternative,for,function,invocations,of,this,kind,used,to,filter,the,list,of,did,you,mean,options,sent,back,to,the,user,when,they,specify,a,missing,function;protected,abstract,boolean,is,valid,alternative,function,definition,def
UnresolvedFunction -> ResolutionType -> protected abstract boolean isValidAlternative(FunctionDefinition def)_;1538170812;Is {@code def} a valid alternative for function invocations_of this kind. Used to filter the list of "did you mean"_options sent back to the user when they specify a missing_function.;protected abstract boolean isValidAlternative(FunctionDefinition def)_;is,code,def,a,valid,alternative,for,function,invocations,of,this,kind,used,to,filter,the,list,of,did,you,mean,options,sent,back,to,the,user,when,they,specify,a,missing,function;protected,abstract,boolean,is,valid,alternative,function,definition,def
UnresolvedFunction -> ResolutionType -> protected abstract boolean isValidAlternative(FunctionDefinition def)_;1543411204;Is {@code def} a valid alternative for function invocations_of this kind. Used to filter the list of "did you mean"_options sent back to the user when they specify a missing_function.;protected abstract boolean isValidAlternative(FunctionDefinition def)_;is,code,def,a,valid,alternative,for,function,invocations,of,this,kind,used,to,filter,the,list,of,did,you,mean,options,sent,back,to,the,user,when,they,specify,a,missing,function;protected,abstract,boolean,is,valid,alternative,function,definition,def
UnresolvedFunction -> ResolutionType -> protected abstract boolean isValidAlternative(FunctionDefinition def)_;1544794956;Is {@code def} a valid alternative for function invocations_of this kind. Used to filter the list of "did you mean"_options sent back to the user when they specify a missing_function.;protected abstract boolean isValidAlternative(FunctionDefinition def)_;is,code,def,a,valid,alternative,for,function,invocations,of,this,kind,used,to,filter,the,list,of,did,you,mean,options,sent,back,to,the,user,when,they,specify,a,missing,function;protected,abstract,boolean,is,valid,alternative,function,definition,def
UnresolvedFunction -> ResolutionType -> protected abstract boolean isValidAlternative(FunctionDefinition def)_;1546556270;Is {@code def} a valid alternative for function invocations_of this kind. Used to filter the list of "did you mean"_options sent back to the user when they specify a missing_function.;protected abstract boolean isValidAlternative(FunctionDefinition def)_;is,code,def,a,valid,alternative,for,function,invocations,of,this,kind,used,to,filter,the,list,of,did,you,mean,options,sent,back,to,the,user,when,they,specify,a,missing,function;protected,abstract,boolean,is,valid,alternative,function,definition,def
UnresolvedFunction -> ResolutionType -> protected abstract boolean isValidAlternative(FunctionDefinition def)_;1546792174;Is {@code def} a valid alternative for function invocations_of this kind. Used to filter the list of "did you mean"_options sent back to the user when they specify a missing_function.;protected abstract boolean isValidAlternative(FunctionDefinition def)_;is,code,def,a,valid,alternative,for,function,invocations,of,this,kind,used,to,filter,the,list,of,did,you,mean,options,sent,back,to,the,user,when,they,specify,a,missing,function;protected,abstract,boolean,is,valid,alternative,function,definition,def
UnresolvedFunction -> ResolutionType -> protected abstract boolean isValidAlternative(FunctionDefinition def)_;1547106711;Is {@code def} a valid alternative for function invocations_of this kind. Used to filter the list of "did you mean"_options sent back to the user when they specify a missing_function.;protected abstract boolean isValidAlternative(FunctionDefinition def)_;is,code,def,a,valid,alternative,for,function,invocations,of,this,kind,used,to,filter,the,list,of,did,you,mean,options,sent,back,to,the,user,when,they,specify,a,missing,function;protected,abstract,boolean,is,valid,alternative,function,definition,def
UnresolvedFunction -> ResolutionType -> protected abstract boolean isValidAlternative(FunctionDefinition def)_;1547336422;Is {@code def} a valid alternative for function invocations_of this kind. Used to filter the list of "did you mean"_options sent back to the user when they specify a missing_function.;protected abstract boolean isValidAlternative(FunctionDefinition def)_;is,code,def,a,valid,alternative,for,function,invocations,of,this,kind,used,to,filter,the,list,of,did,you,mean,options,sent,back,to,the,user,when,they,specify,a,missing,function;protected,abstract,boolean,is,valid,alternative,function,definition,def
UnresolvedFunction -> ResolutionType -> protected abstract boolean isValidAlternative(FunctionDefinition def)_;1549064305;Is {@code def} a valid alternative for function invocations_of this kind. Used to filter the list of "did you mean"_options sent back to the user when they specify a missing_function.;protected abstract boolean isValidAlternative(FunctionDefinition def)_;is,code,def,a,valid,alternative,for,function,invocations,of,this,kind,used,to,filter,the,list,of,did,you,mean,options,sent,back,to,the,user,when,they,specify,a,missing,function;protected,abstract,boolean,is,valid,alternative,function,definition,def
UnresolvedFunction -> ResolutionType -> protected abstract String type()_;1524684173;The name of the kind of thing being resolved. Used when_building the error message sent back to the user when_they specify a function that doesn't exist.;protected abstract String type()_;the,name,of,the,kind,of,thing,being,resolved,used,when,building,the,error,message,sent,back,to,the,user,when,they,specify,a,function,that,doesn,t,exist;protected,abstract,string,type
UnresolvedFunction -> ResolutionType -> protected abstract String type()_;1538170812;The name of the kind of thing being resolved. Used when_building the error message sent back to the user when_they specify a function that doesn't exist.;protected abstract String type()_;the,name,of,the,kind,of,thing,being,resolved,used,when,building,the,error,message,sent,back,to,the,user,when,they,specify,a,function,that,doesn,t,exist;protected,abstract,string,type
UnresolvedFunction -> ResolutionType -> protected abstract String type()_;1543411204;The name of the kind of thing being resolved. Used when_building the error message sent back to the user when_they specify a function that doesn't exist.;protected abstract String type()_;the,name,of,the,kind,of,thing,being,resolved,used,when,building,the,error,message,sent,back,to,the,user,when,they,specify,a,function,that,doesn,t,exist;protected,abstract,string,type
UnresolvedFunction -> ResolutionType -> protected abstract String type()_;1544794956;The name of the kind of thing being resolved. Used when_building the error message sent back to the user when_they specify a function that doesn't exist.;protected abstract String type()_;the,name,of,the,kind,of,thing,being,resolved,used,when,building,the,error,message,sent,back,to,the,user,when,they,specify,a,function,that,doesn,t,exist;protected,abstract,string,type
UnresolvedFunction -> ResolutionType -> protected abstract String type()_;1546556270;The name of the kind of thing being resolved. Used when_building the error message sent back to the user when_they specify a function that doesn't exist.;protected abstract String type()_;the,name,of,the,kind,of,thing,being,resolved,used,when,building,the,error,message,sent,back,to,the,user,when,they,specify,a,function,that,doesn,t,exist;protected,abstract,string,type
UnresolvedFunction -> ResolutionType -> protected abstract String type()_;1546792174;The name of the kind of thing being resolved. Used when_building the error message sent back to the user when_they specify a function that doesn't exist.;protected abstract String type()_;the,name,of,the,kind,of,thing,being,resolved,used,when,building,the,error,message,sent,back,to,the,user,when,they,specify,a,function,that,doesn,t,exist;protected,abstract,string,type
UnresolvedFunction -> ResolutionType -> protected abstract String type()_;1547106711;The name of the kind of thing being resolved. Used when_building the error message sent back to the user when_they specify a function that doesn't exist.;protected abstract String type()_;the,name,of,the,kind,of,thing,being,resolved,used,when,building,the,error,message,sent,back,to,the,user,when,they,specify,a,function,that,doesn,t,exist;protected,abstract,string,type
UnresolvedFunction -> ResolutionType -> protected abstract String type()_;1547336422;The name of the kind of thing being resolved. Used when_building the error message sent back to the user when_they specify a function that doesn't exist.;protected abstract String type()_;the,name,of,the,kind,of,thing,being,resolved,used,when,building,the,error,message,sent,back,to,the,user,when,they,specify,a,function,that,doesn,t,exist;protected,abstract,string,type
UnresolvedFunction -> ResolutionType -> protected abstract String type()_;1549064305;The name of the kind of thing being resolved. Used when_building the error message sent back to the user when_they specify a function that doesn't exist.;protected abstract String type()_;the,name,of,the,kind,of,thing,being,resolved,used,when,building,the,error,message,sent,back,to,the,user,when,they,specify,a,function,that,doesn,t,exist;protected,abstract,string,type
UnresolvedFunction -> UnresolvedFunction(Source source, String name, ResolutionType resolutionType, List<Expression> children,             boolean analyzed, String unresolvedMessage);1546556270;Constructor used for specifying a more descriptive message (typically_'did you mean') instead of the default one._@see #withMessage(String);UnresolvedFunction(Source source, String name, ResolutionType resolutionType, List<Expression> children,_            boolean analyzed, String unresolvedMessage) {_        super(source, children)__        this.name = name__        this.resolutionType = resolutionType__        this.analyzed = analyzed__        this.unresolvedMsg = unresolvedMessage == null ? "Unknown " + resolutionType.type() + " [" + name + "]" : unresolvedMessage__    };constructor,used,for,specifying,a,more,descriptive,message,typically,did,you,mean,instead,of,the,default,one,see,with,message,string;unresolved,function,source,source,string,name,resolution,type,resolution,type,list,expression,children,boolean,analyzed,string,unresolved,message,super,source,children,this,name,name,this,resolution,type,resolution,type,this,analyzed,analyzed,this,unresolved,msg,unresolved,message,null,unknown,resolution,type,type,name,unresolved,message
UnresolvedFunction -> UnresolvedFunction(Source source, String name, ResolutionType resolutionType, List<Expression> children,             boolean analyzed, String unresolvedMessage);1546792174;Constructor used for specifying a more descriptive message (typically_'did you mean') instead of the default one._@see #withMessage(String);UnresolvedFunction(Source source, String name, ResolutionType resolutionType, List<Expression> children,_            boolean analyzed, String unresolvedMessage) {_        super(source, children)__        this.name = name__        this.resolutionType = resolutionType__        this.analyzed = analyzed__        this.unresolvedMsg = unresolvedMessage == null ? "Unknown " + resolutionType.type() + " [" + name + "]" : unresolvedMessage__    };constructor,used,for,specifying,a,more,descriptive,message,typically,did,you,mean,instead,of,the,default,one,see,with,message,string;unresolved,function,source,source,string,name,resolution,type,resolution,type,list,expression,children,boolean,analyzed,string,unresolved,message,super,source,children,this,name,name,this,resolution,type,resolution,type,this,analyzed,analyzed,this,unresolved,msg,unresolved,message,null,unknown,resolution,type,type,name,unresolved,message
UnresolvedFunction -> UnresolvedFunction(Source source, String name, ResolutionType resolutionType, List<Expression> children,             boolean analyzed, String unresolvedMessage);1547106711;Constructor used for specifying a more descriptive message (typically_'did you mean') instead of the default one._@see #withMessage(String);UnresolvedFunction(Source source, String name, ResolutionType resolutionType, List<Expression> children,_            boolean analyzed, String unresolvedMessage) {_        super(source, children)__        this.name = name__        this.resolutionType = resolutionType__        this.analyzed = analyzed__        this.unresolvedMsg = unresolvedMessage == null ? "Unknown " + resolutionType.type() + " [" + name + "]" : unresolvedMessage__    };constructor,used,for,specifying,a,more,descriptive,message,typically,did,you,mean,instead,of,the,default,one,see,with,message,string;unresolved,function,source,source,string,name,resolution,type,resolution,type,list,expression,children,boolean,analyzed,string,unresolved,message,super,source,children,this,name,name,this,resolution,type,resolution,type,this,analyzed,analyzed,this,unresolved,msg,unresolved,message,null,unknown,resolution,type,type,name,unresolved,message
UnresolvedFunction -> UnresolvedFunction(Source source, String name, ResolutionType resolutionType, List<Expression> children,             boolean analyzed, String unresolvedMessage);1547336422;Constructor used for specifying a more descriptive message (typically_'did you mean') instead of the default one._@see #withMessage(String);UnresolvedFunction(Source source, String name, ResolutionType resolutionType, List<Expression> children,_            boolean analyzed, String unresolvedMessage) {_        super(source, children)__        this.name = name__        this.resolutionType = resolutionType__        this.analyzed = analyzed__        this.unresolvedMsg = unresolvedMessage == null ? "Unknown " + resolutionType.type() + " [" + name + "]" : unresolvedMessage__    };constructor,used,for,specifying,a,more,descriptive,message,typically,did,you,mean,instead,of,the,default,one,see,with,message,string;unresolved,function,source,source,string,name,resolution,type,resolution,type,list,expression,children,boolean,analyzed,string,unresolved,message,super,source,children,this,name,name,this,resolution,type,resolution,type,this,analyzed,analyzed,this,unresolved,msg,unresolved,message,null,unknown,resolution,type,type,name,unresolved,message
UnresolvedFunction -> UnresolvedFunction(Source source, String name, ResolutionType resolutionType, List<Expression> children,             boolean analyzed, String unresolvedMessage);1549064305;Constructor used for specifying a more descriptive message (typically_'did you mean') instead of the default one._@see #withMessage(String);UnresolvedFunction(Source source, String name, ResolutionType resolutionType, List<Expression> children,_            boolean analyzed, String unresolvedMessage) {_        super(source, children)__        this.name = name__        this.resolutionType = resolutionType__        this.analyzed = analyzed__        this.unresolvedMsg = unresolvedMessage == null ? "Unknown " + resolutionType.type() + " [" + name + "]" : unresolvedMessage__    };constructor,used,for,specifying,a,more,descriptive,message,typically,did,you,mean,instead,of,the,default,one,see,with,message,string;unresolved,function,source,source,string,name,resolution,type,resolution,type,list,expression,children,boolean,analyzed,string,unresolved,message,super,source,children,this,name,name,this,resolution,type,resolution,type,this,analyzed,analyzed,this,unresolved,msg,unresolved,message,null,unknown,resolution,type,type,name,unresolved,message
UnresolvedFunction -> ResolutionType -> protected abstract Function buildResolved(UnresolvedFunction uf, Configuration cfg, FunctionDefinition def)_;1543411204;Build the real function from this one and resolution metadata.;protected abstract Function buildResolved(UnresolvedFunction uf, Configuration cfg, FunctionDefinition def)_;build,the,real,function,from,this,one,and,resolution,metadata;protected,abstract,function,build,resolved,unresolved,function,uf,configuration,cfg,function,definition,def
UnresolvedFunction -> ResolutionType -> protected abstract Function buildResolved(UnresolvedFunction uf, Configuration cfg, FunctionDefinition def)_;1544794956;Build the real function from this one and resolution metadata.;protected abstract Function buildResolved(UnresolvedFunction uf, Configuration cfg, FunctionDefinition def)_;build,the,real,function,from,this,one,and,resolution,metadata;protected,abstract,function,build,resolved,unresolved,function,uf,configuration,cfg,function,definition,def
UnresolvedFunction -> ResolutionType -> protected abstract Function buildResolved(UnresolvedFunction uf, Configuration cfg, FunctionDefinition def)_;1546556270;Build the real function from this one and resolution metadata.;protected abstract Function buildResolved(UnresolvedFunction uf, Configuration cfg, FunctionDefinition def)_;build,the,real,function,from,this,one,and,resolution,metadata;protected,abstract,function,build,resolved,unresolved,function,uf,configuration,cfg,function,definition,def
UnresolvedFunction -> ResolutionType -> protected abstract Function buildResolved(UnresolvedFunction uf, Configuration cfg, FunctionDefinition def)_;1546792174;Build the real function from this one and resolution metadata.;protected abstract Function buildResolved(UnresolvedFunction uf, Configuration cfg, FunctionDefinition def)_;build,the,real,function,from,this,one,and,resolution,metadata;protected,abstract,function,build,resolved,unresolved,function,uf,configuration,cfg,function,definition,def
UnresolvedFunction -> ResolutionType -> protected abstract Function buildResolved(UnresolvedFunction uf, Configuration cfg, FunctionDefinition def)_;1547106711;Build the real function from this one and resolution metadata.;protected abstract Function buildResolved(UnresolvedFunction uf, Configuration cfg, FunctionDefinition def)_;build,the,real,function,from,this,one,and,resolution,metadata;protected,abstract,function,build,resolved,unresolved,function,uf,configuration,cfg,function,definition,def
UnresolvedFunction -> ResolutionType -> protected abstract Function buildResolved(UnresolvedFunction uf, Configuration cfg, FunctionDefinition def)_;1547336422;Build the real function from this one and resolution metadata.;protected abstract Function buildResolved(UnresolvedFunction uf, Configuration cfg, FunctionDefinition def)_;build,the,real,function,from,this,one,and,resolution,metadata;protected,abstract,function,build,resolved,unresolved,function,uf,configuration,cfg,function,definition,def
UnresolvedFunction -> ResolutionType -> protected abstract Function buildResolved(UnresolvedFunction uf, Configuration cfg, FunctionDefinition def)_;1549064305;Build the real function from this one and resolution metadata.;protected abstract Function buildResolved(UnresolvedFunction uf, Configuration cfg, FunctionDefinition def)_;build,the,real,function,from,this,one,and,resolution,metadata;protected,abstract,function,build,resolved,unresolved,function,uf,configuration,cfg,function,definition,def
UnresolvedFunction -> public Function buildResolved(TimeZone timeZone, FunctionDefinition def);1524684173;Build a function to replace this one after resolving the function.;public Function buildResolved(TimeZone timeZone, FunctionDefinition def) {_        return resolutionType.buildResolved(this, timeZone, def)__    };build,a,function,to,replace,this,one,after,resolving,the,function;public,function,build,resolved,time,zone,time,zone,function,definition,def,return,resolution,type,build,resolved,this,time,zone,def
UnresolvedFunction -> public Function buildResolved(TimeZone timeZone, FunctionDefinition def);1538170812;Build a function to replace this one after resolving the function.;public Function buildResolved(TimeZone timeZone, FunctionDefinition def) {_        return resolutionType.buildResolved(this, timeZone, def)__    };build,a,function,to,replace,this,one,after,resolving,the,function;public,function,build,resolved,time,zone,time,zone,function,definition,def,return,resolution,type,build,resolved,this,time,zone,def
UnresolvedFunction -> public Function buildResolved(Configuration configuration, FunctionDefinition def);1543411204;Build a function to replace this one after resolving the function.;public Function buildResolved(Configuration configuration, FunctionDefinition def) {_        return resolutionType.buildResolved(this, configuration, def)__    };build,a,function,to,replace,this,one,after,resolving,the,function;public,function,build,resolved,configuration,configuration,function,definition,def,return,resolution,type,build,resolved,this,configuration,def
UnresolvedFunction -> public Function buildResolved(Configuration configuration, FunctionDefinition def);1544794956;Build a function to replace this one after resolving the function.;public Function buildResolved(Configuration configuration, FunctionDefinition def) {_        return resolutionType.buildResolved(this, configuration, def)__    };build,a,function,to,replace,this,one,after,resolving,the,function;public,function,build,resolved,configuration,configuration,function,definition,def,return,resolution,type,build,resolved,this,configuration,def
UnresolvedFunction -> public Function buildResolved(Configuration configuration, FunctionDefinition def);1546556270;Build a function to replace this one after resolving the function.;public Function buildResolved(Configuration configuration, FunctionDefinition def) {_        return resolutionType.buildResolved(this, configuration, def)__    };build,a,function,to,replace,this,one,after,resolving,the,function;public,function,build,resolved,configuration,configuration,function,definition,def,return,resolution,type,build,resolved,this,configuration,def
UnresolvedFunction -> public Function buildResolved(Configuration configuration, FunctionDefinition def);1546792174;Build a function to replace this one after resolving the function.;public Function buildResolved(Configuration configuration, FunctionDefinition def) {_        return resolutionType.buildResolved(this, configuration, def)__    };build,a,function,to,replace,this,one,after,resolving,the,function;public,function,build,resolved,configuration,configuration,function,definition,def,return,resolution,type,build,resolved,this,configuration,def
UnresolvedFunction -> public Function buildResolved(Configuration configuration, FunctionDefinition def);1547106711;Build a function to replace this one after resolving the function.;public Function buildResolved(Configuration configuration, FunctionDefinition def) {_        return resolutionType.buildResolved(this, configuration, def)__    };build,a,function,to,replace,this,one,after,resolving,the,function;public,function,build,resolved,configuration,configuration,function,definition,def,return,resolution,type,build,resolved,this,configuration,def
UnresolvedFunction -> public Function buildResolved(Configuration configuration, FunctionDefinition def);1547336422;Build a function to replace this one after resolving the function.;public Function buildResolved(Configuration configuration, FunctionDefinition def) {_        return resolutionType.buildResolved(this, configuration, def)__    };build,a,function,to,replace,this,one,after,resolving,the,function;public,function,build,resolved,configuration,configuration,function,definition,def,return,resolution,type,build,resolved,this,configuration,def
UnresolvedFunction -> public Function buildResolved(Configuration configuration, FunctionDefinition def);1549064305;Build a function to replace this one after resolving the function.;public Function buildResolved(Configuration configuration, FunctionDefinition def) {_        return resolutionType.buildResolved(this, configuration, def)__    };build,a,function,to,replace,this,one,after,resolving,the,function;public,function,build,resolved,configuration,configuration,function,definition,def,return,resolution,type,build,resolved,this,configuration,def
UnresolvedFunction -> UnresolvedFunction(Location location, String name, ResolutionType resolutionType, List<Expression> children,             boolean analyzed, String unresolvedMessage);1524684173;Constructor used for specifying a more descriptive message (typically_'did you mean') instead of the default one._@see #withMessage(String);UnresolvedFunction(Location location, String name, ResolutionType resolutionType, List<Expression> children,_            boolean analyzed, String unresolvedMessage) {_        super(location, children)__        this.name = name__        this.resolutionType = resolutionType__        this.analyzed = analyzed__        this.unresolvedMsg = unresolvedMessage == null ? "Unknown " + resolutionType.type() + " [" + name + "]" : unresolvedMessage__    };constructor,used,for,specifying,a,more,descriptive,message,typically,did,you,mean,instead,of,the,default,one,see,with,message,string;unresolved,function,location,location,string,name,resolution,type,resolution,type,list,expression,children,boolean,analyzed,string,unresolved,message,super,location,children,this,name,name,this,resolution,type,resolution,type,this,analyzed,analyzed,this,unresolved,msg,unresolved,message,null,unknown,resolution,type,type,name,unresolved,message
UnresolvedFunction -> UnresolvedFunction(Location location, String name, ResolutionType resolutionType, List<Expression> children,             boolean analyzed, String unresolvedMessage);1538170812;Constructor used for specifying a more descriptive message (typically_'did you mean') instead of the default one._@see #withMessage(String);UnresolvedFunction(Location location, String name, ResolutionType resolutionType, List<Expression> children,_            boolean analyzed, String unresolvedMessage) {_        super(location, children)__        this.name = name__        this.resolutionType = resolutionType__        this.analyzed = analyzed__        this.unresolvedMsg = unresolvedMessage == null ? "Unknown " + resolutionType.type() + " [" + name + "]" : unresolvedMessage__    };constructor,used,for,specifying,a,more,descriptive,message,typically,did,you,mean,instead,of,the,default,one,see,with,message,string;unresolved,function,location,location,string,name,resolution,type,resolution,type,list,expression,children,boolean,analyzed,string,unresolved,message,super,location,children,this,name,name,this,resolution,type,resolution,type,this,analyzed,analyzed,this,unresolved,msg,unresolved,message,null,unknown,resolution,type,type,name,unresolved,message
UnresolvedFunction -> UnresolvedFunction(Location location, String name, ResolutionType resolutionType, List<Expression> children,             boolean analyzed, String unresolvedMessage);1543411204;Constructor used for specifying a more descriptive message (typically_'did you mean') instead of the default one._@see #withMessage(String);UnresolvedFunction(Location location, String name, ResolutionType resolutionType, List<Expression> children,_            boolean analyzed, String unresolvedMessage) {_        super(location, children)__        this.name = name__        this.resolutionType = resolutionType__        this.analyzed = analyzed__        this.unresolvedMsg = unresolvedMessage == null ? "Unknown " + resolutionType.type() + " [" + name + "]" : unresolvedMessage__    };constructor,used,for,specifying,a,more,descriptive,message,typically,did,you,mean,instead,of,the,default,one,see,with,message,string;unresolved,function,location,location,string,name,resolution,type,resolution,type,list,expression,children,boolean,analyzed,string,unresolved,message,super,location,children,this,name,name,this,resolution,type,resolution,type,this,analyzed,analyzed,this,unresolved,msg,unresolved,message,null,unknown,resolution,type,type,name,unresolved,message
UnresolvedFunction -> UnresolvedFunction(Location location, String name, ResolutionType resolutionType, List<Expression> children,             boolean analyzed, String unresolvedMessage);1544794956;Constructor used for specifying a more descriptive message (typically_'did you mean') instead of the default one._@see #withMessage(String);UnresolvedFunction(Location location, String name, ResolutionType resolutionType, List<Expression> children,_            boolean analyzed, String unresolvedMessage) {_        super(location, children)__        this.name = name__        this.resolutionType = resolutionType__        this.analyzed = analyzed__        this.unresolvedMsg = unresolvedMessage == null ? "Unknown " + resolutionType.type() + " [" + name + "]" : unresolvedMessage__    };constructor,used,for,specifying,a,more,descriptive,message,typically,did,you,mean,instead,of,the,default,one,see,with,message,string;unresolved,function,location,location,string,name,resolution,type,resolution,type,list,expression,children,boolean,analyzed,string,unresolved,message,super,location,children,this,name,name,this,resolution,type,resolution,type,this,analyzed,analyzed,this,unresolved,msg,unresolved,message,null,unknown,resolution,type,type,name,unresolved,message
UnresolvedFunction -> ResolutionType -> protected abstract UnresolvedFunction preprocessStar(UnresolvedFunction uf)_;1524684173;Preprocess a function that contains a star to some other_form before attempting to resolve it. For example,_{@code DISTINCT} doesn't support {@code *} so it converts_this function into a dead end, unresolveable function._Or {@code COUNT(*)} can be rewritten to {@code COUNT(1)}_so we don't have to resolve {@code *}.;protected abstract UnresolvedFunction preprocessStar(UnresolvedFunction uf)_;preprocess,a,function,that,contains,a,star,to,some,other,form,before,attempting,to,resolve,it,for,example,code,distinct,doesn,t,support,code,so,it,converts,this,function,into,a,dead,end,unresolveable,function,or,code,count,can,be,rewritten,to,code,count,1,so,we,don,t,have,to,resolve,code;protected,abstract,unresolved,function,preprocess,star,unresolved,function,uf
UnresolvedFunction -> ResolutionType -> protected abstract UnresolvedFunction preprocessStar(UnresolvedFunction uf)_;1538170812;Preprocess a function that contains a star to some other_form before attempting to resolve it. For example,_{@code DISTINCT} doesn't support {@code *} so it converts_this function into a dead end, unresolveable function._Or {@code COUNT(*)} can be rewritten to {@code COUNT(1)}_so we don't have to resolve {@code *}.;protected abstract UnresolvedFunction preprocessStar(UnresolvedFunction uf)_;preprocess,a,function,that,contains,a,star,to,some,other,form,before,attempting,to,resolve,it,for,example,code,distinct,doesn,t,support,code,so,it,converts,this,function,into,a,dead,end,unresolveable,function,or,code,count,can,be,rewritten,to,code,count,1,so,we,don,t,have,to,resolve,code;protected,abstract,unresolved,function,preprocess,star,unresolved,function,uf
UnresolvedFunction -> ResolutionType -> protected abstract UnresolvedFunction preprocessStar(UnresolvedFunction uf)_;1543411204;Preprocess a function that contains a star to some other_form before attempting to resolve it. For example,_{@code DISTINCT} doesn't support {@code *} so it converts_this function into a dead end, unresolveable function._Or {@code COUNT(*)} can be rewritten to {@code COUNT(1)}_so we don't have to resolve {@code *}.;protected abstract UnresolvedFunction preprocessStar(UnresolvedFunction uf)_;preprocess,a,function,that,contains,a,star,to,some,other,form,before,attempting,to,resolve,it,for,example,code,distinct,doesn,t,support,code,so,it,converts,this,function,into,a,dead,end,unresolveable,function,or,code,count,can,be,rewritten,to,code,count,1,so,we,don,t,have,to,resolve,code;protected,abstract,unresolved,function,preprocess,star,unresolved,function,uf
UnresolvedFunction -> ResolutionType -> protected abstract UnresolvedFunction preprocessStar(UnresolvedFunction uf)_;1544794956;Preprocess a function that contains a star to some other_form before attempting to resolve it. For example,_{@code DISTINCT} doesn't support {@code *} so it converts_this function into a dead end, unresolveable function._Or {@code COUNT(*)} can be rewritten to {@code COUNT(1)}_so we don't have to resolve {@code *}.;protected abstract UnresolvedFunction preprocessStar(UnresolvedFunction uf)_;preprocess,a,function,that,contains,a,star,to,some,other,form,before,attempting,to,resolve,it,for,example,code,distinct,doesn,t,support,code,so,it,converts,this,function,into,a,dead,end,unresolveable,function,or,code,count,can,be,rewritten,to,code,count,1,so,we,don,t,have,to,resolve,code;protected,abstract,unresolved,function,preprocess,star,unresolved,function,uf
UnresolvedFunction -> ResolutionType -> protected abstract UnresolvedFunction preprocessStar(UnresolvedFunction uf)_;1546556270;Preprocess a function that contains a star to some other_form before attempting to resolve it. For example,_{@code DISTINCT} doesn't support {@code *} so it converts_this function into a dead end, unresolveable function._Or {@code COUNT(*)} can be rewritten to {@code COUNT(1)}_so we don't have to resolve {@code *}.;protected abstract UnresolvedFunction preprocessStar(UnresolvedFunction uf)_;preprocess,a,function,that,contains,a,star,to,some,other,form,before,attempting,to,resolve,it,for,example,code,distinct,doesn,t,support,code,so,it,converts,this,function,into,a,dead,end,unresolveable,function,or,code,count,can,be,rewritten,to,code,count,1,so,we,don,t,have,to,resolve,code;protected,abstract,unresolved,function,preprocess,star,unresolved,function,uf
UnresolvedFunction -> ResolutionType -> protected abstract UnresolvedFunction preprocessStar(UnresolvedFunction uf)_;1546792174;Preprocess a function that contains a star to some other_form before attempting to resolve it. For example,_{@code DISTINCT} doesn't support {@code *} so it converts_this function into a dead end, unresolveable function._Or {@code COUNT(*)} can be rewritten to {@code COUNT(1)}_so we don't have to resolve {@code *}.;protected abstract UnresolvedFunction preprocessStar(UnresolvedFunction uf)_;preprocess,a,function,that,contains,a,star,to,some,other,form,before,attempting,to,resolve,it,for,example,code,distinct,doesn,t,support,code,so,it,converts,this,function,into,a,dead,end,unresolveable,function,or,code,count,can,be,rewritten,to,code,count,1,so,we,don,t,have,to,resolve,code;protected,abstract,unresolved,function,preprocess,star,unresolved,function,uf
UnresolvedFunction -> ResolutionType -> protected abstract UnresolvedFunction preprocessStar(UnresolvedFunction uf)_;1547106711;Preprocess a function that contains a star to some other_form before attempting to resolve it. For example,_{@code DISTINCT} doesn't support {@code *} so it converts_this function into a dead end, unresolveable function._Or {@code COUNT(*)} can be rewritten to {@code COUNT(1)}_so we don't have to resolve {@code *}.;protected abstract UnresolvedFunction preprocessStar(UnresolvedFunction uf)_;preprocess,a,function,that,contains,a,star,to,some,other,form,before,attempting,to,resolve,it,for,example,code,distinct,doesn,t,support,code,so,it,converts,this,function,into,a,dead,end,unresolveable,function,or,code,count,can,be,rewritten,to,code,count,1,so,we,don,t,have,to,resolve,code;protected,abstract,unresolved,function,preprocess,star,unresolved,function,uf
UnresolvedFunction -> ResolutionType -> protected abstract UnresolvedFunction preprocessStar(UnresolvedFunction uf)_;1547336422;Preprocess a function that contains a star to some other_form before attempting to resolve it. For example,_{@code DISTINCT} doesn't support {@code *} so it converts_this function into a dead end, unresolveable function._Or {@code COUNT(*)} can be rewritten to {@code COUNT(1)}_so we don't have to resolve {@code *}.;protected abstract UnresolvedFunction preprocessStar(UnresolvedFunction uf)_;preprocess,a,function,that,contains,a,star,to,some,other,form,before,attempting,to,resolve,it,for,example,code,distinct,doesn,t,support,code,so,it,converts,this,function,into,a,dead,end,unresolveable,function,or,code,count,can,be,rewritten,to,code,count,1,so,we,don,t,have,to,resolve,code;protected,abstract,unresolved,function,preprocess,star,unresolved,function,uf
UnresolvedFunction -> ResolutionType -> protected abstract UnresolvedFunction preprocessStar(UnresolvedFunction uf)_;1549064305;Preprocess a function that contains a star to some other_form before attempting to resolve it. For example,_{@code DISTINCT} doesn't support {@code *} so it converts_this function into a dead end, unresolveable function._Or {@code COUNT(*)} can be rewritten to {@code COUNT(1)}_so we don't have to resolve {@code *}.;protected abstract UnresolvedFunction preprocessStar(UnresolvedFunction uf)_;preprocess,a,function,that,contains,a,star,to,some,other,form,before,attempting,to,resolve,it,for,example,code,distinct,doesn,t,support,code,so,it,converts,this,function,into,a,dead,end,unresolveable,function,or,code,count,can,be,rewritten,to,code,count,1,so,we,don,t,have,to,resolve,code;protected,abstract,unresolved,function,preprocess,star,unresolved,function,uf
UnresolvedFunction -> ResolutionType -> protected abstract Function buildResolved(UnresolvedFunction uf, TimeZone tz, FunctionDefinition def)_;1524684173;Build the real function from this one and resolution metadata.;protected abstract Function buildResolved(UnresolvedFunction uf, TimeZone tz, FunctionDefinition def)_;build,the,real,function,from,this,one,and,resolution,metadata;protected,abstract,function,build,resolved,unresolved,function,uf,time,zone,tz,function,definition,def
UnresolvedFunction -> ResolutionType -> protected abstract Function buildResolved(UnresolvedFunction uf, TimeZone tz, FunctionDefinition def)_;1538170812;Build the real function from this one and resolution metadata.;protected abstract Function buildResolved(UnresolvedFunction uf, TimeZone tz, FunctionDefinition def)_;build,the,real,function,from,this,one,and,resolution,metadata;protected,abstract,function,build,resolved,unresolved,function,uf,time,zone,tz,function,definition,def
UnresolvedFunction -> public UnresolvedFunction missing(String normalizedName, Iterable<FunctionDefinition> alternatives);1524684173;Build a marker {@link UnresolvedFunction} with an error message_about the function being missing.;public UnresolvedFunction missing(String normalizedName, Iterable<FunctionDefinition> alternatives) {_        _        Set<String> names = new LinkedHashSet<>()__        for (FunctionDefinition def : alternatives) {_            if (resolutionType.isValidAlternative(def)) {_                names.add(def.name())__                names.addAll(def.aliases())__            }_        }__        List<String> matches = StringUtils.findSimilar(normalizedName, names)__        if (matches.isEmpty()) {_            return this__        }_        String matchesMessage = matches.size() == 1 ? "[" + matches.get(0) + "]" : "any of " + matches__        return withMessage("Unknown " + resolutionType.type() + " [" + name + "], did you mean " + matchesMessage + "?")__    };build,a,marker,link,unresolved,function,with,an,error,message,about,the,function,being,missing;public,unresolved,function,missing,string,normalized,name,iterable,function,definition,alternatives,set,string,names,new,linked,hash,set,for,function,definition,def,alternatives,if,resolution,type,is,valid,alternative,def,names,add,def,name,names,add,all,def,aliases,list,string,matches,string,utils,find,similar,normalized,name,names,if,matches,is,empty,return,this,string,matches,message,matches,size,1,matches,get,0,any,of,matches,return,with,message,unknown,resolution,type,type,name,did,you,mean,matches,message
UnresolvedFunction -> public UnresolvedFunction missing(String normalizedName, Iterable<FunctionDefinition> alternatives);1538170812;Build a marker {@link UnresolvedFunction} with an error message_about the function being missing.;public UnresolvedFunction missing(String normalizedName, Iterable<FunctionDefinition> alternatives) {_        _        Set<String> names = new LinkedHashSet<>()__        for (FunctionDefinition def : alternatives) {_            if (resolutionType.isValidAlternative(def)) {_                names.add(def.name())__                names.addAll(def.aliases())__            }_        }__        List<String> matches = StringUtils.findSimilar(normalizedName, names)__        if (matches.isEmpty()) {_            return this__        }_        String matchesMessage = matches.size() == 1 ? "[" + matches.get(0) + "]" : "any of " + matches__        return withMessage("Unknown " + resolutionType.type() + " [" + name + "], did you mean " + matchesMessage + "?")__    };build,a,marker,link,unresolved,function,with,an,error,message,about,the,function,being,missing;public,unresolved,function,missing,string,normalized,name,iterable,function,definition,alternatives,set,string,names,new,linked,hash,set,for,function,definition,def,alternatives,if,resolution,type,is,valid,alternative,def,names,add,def,name,names,add,all,def,aliases,list,string,matches,string,utils,find,similar,normalized,name,names,if,matches,is,empty,return,this,string,matches,message,matches,size,1,matches,get,0,any,of,matches,return,with,message,unknown,resolution,type,type,name,did,you,mean,matches,message
UnresolvedFunction -> public UnresolvedFunction missing(String normalizedName, Iterable<FunctionDefinition> alternatives);1543411204;Build a marker {@link UnresolvedFunction} with an error message_about the function being missing.;public UnresolvedFunction missing(String normalizedName, Iterable<FunctionDefinition> alternatives) {_        _        Set<String> names = new LinkedHashSet<>()__        for (FunctionDefinition def : alternatives) {_            if (resolutionType.isValidAlternative(def)) {_                names.add(def.name())__                names.addAll(def.aliases())__            }_        }__        List<String> matches = StringUtils.findSimilar(normalizedName, names)__        if (matches.isEmpty()) {_            return this__        }_        String matchesMessage = matches.size() == 1 ? "[" + matches.get(0) + "]" : "any of " + matches__        return withMessage("Unknown " + resolutionType.type() + " [" + name + "], did you mean " + matchesMessage + "?")__    };build,a,marker,link,unresolved,function,with,an,error,message,about,the,function,being,missing;public,unresolved,function,missing,string,normalized,name,iterable,function,definition,alternatives,set,string,names,new,linked,hash,set,for,function,definition,def,alternatives,if,resolution,type,is,valid,alternative,def,names,add,def,name,names,add,all,def,aliases,list,string,matches,string,utils,find,similar,normalized,name,names,if,matches,is,empty,return,this,string,matches,message,matches,size,1,matches,get,0,any,of,matches,return,with,message,unknown,resolution,type,type,name,did,you,mean,matches,message
UnresolvedFunction -> public UnresolvedFunction missing(String normalizedName, Iterable<FunctionDefinition> alternatives);1544794956;Build a marker {@link UnresolvedFunction} with an error message_about the function being missing.;public UnresolvedFunction missing(String normalizedName, Iterable<FunctionDefinition> alternatives) {_        _        Set<String> names = new LinkedHashSet<>()__        for (FunctionDefinition def : alternatives) {_            if (resolutionType.isValidAlternative(def)) {_                names.add(def.name())__                names.addAll(def.aliases())__            }_        }__        List<String> matches = StringUtils.findSimilar(normalizedName, names)__        if (matches.isEmpty()) {_            return this__        }_        String matchesMessage = matches.size() == 1 ? "[" + matches.get(0) + "]" : "any of " + matches__        return withMessage("Unknown " + resolutionType.type() + " [" + name + "], did you mean " + matchesMessage + "?")__    };build,a,marker,link,unresolved,function,with,an,error,message,about,the,function,being,missing;public,unresolved,function,missing,string,normalized,name,iterable,function,definition,alternatives,set,string,names,new,linked,hash,set,for,function,definition,def,alternatives,if,resolution,type,is,valid,alternative,def,names,add,def,name,names,add,all,def,aliases,list,string,matches,string,utils,find,similar,normalized,name,names,if,matches,is,empty,return,this,string,matches,message,matches,size,1,matches,get,0,any,of,matches,return,with,message,unknown,resolution,type,type,name,did,you,mean,matches,message
UnresolvedFunction -> public UnresolvedFunction missing(String normalizedName, Iterable<FunctionDefinition> alternatives);1546556270;Build a marker {@link UnresolvedFunction} with an error message_about the function being missing.;public UnresolvedFunction missing(String normalizedName, Iterable<FunctionDefinition> alternatives) {_        _        Set<String> names = new LinkedHashSet<>()__        for (FunctionDefinition def : alternatives) {_            if (resolutionType.isValidAlternative(def)) {_                names.add(def.name())__                names.addAll(def.aliases())__            }_        }__        List<String> matches = StringUtils.findSimilar(normalizedName, names)__        if (matches.isEmpty()) {_            return this__        }_        String matchesMessage = matches.size() == 1 ? "[" + matches.get(0) + "]" : "any of " + matches__        return withMessage("Unknown " + resolutionType.type() + " [" + name + "], did you mean " + matchesMessage + "?")__    };build,a,marker,link,unresolved,function,with,an,error,message,about,the,function,being,missing;public,unresolved,function,missing,string,normalized,name,iterable,function,definition,alternatives,set,string,names,new,linked,hash,set,for,function,definition,def,alternatives,if,resolution,type,is,valid,alternative,def,names,add,def,name,names,add,all,def,aliases,list,string,matches,string,utils,find,similar,normalized,name,names,if,matches,is,empty,return,this,string,matches,message,matches,size,1,matches,get,0,any,of,matches,return,with,message,unknown,resolution,type,type,name,did,you,mean,matches,message
UnresolvedFunction -> public UnresolvedFunction missing(String normalizedName, Iterable<FunctionDefinition> alternatives);1546792174;Build a marker {@link UnresolvedFunction} with an error message_about the function being missing.;public UnresolvedFunction missing(String normalizedName, Iterable<FunctionDefinition> alternatives) {_        _        Set<String> names = new LinkedHashSet<>()__        for (FunctionDefinition def : alternatives) {_            if (resolutionType.isValidAlternative(def)) {_                names.add(def.name())__                names.addAll(def.aliases())__            }_        }__        List<String> matches = StringUtils.findSimilar(normalizedName, names)__        if (matches.isEmpty()) {_            return this__        }_        String matchesMessage = matches.size() == 1 ? "[" + matches.get(0) + "]" : "any of " + matches__        return withMessage("Unknown " + resolutionType.type() + " [" + name + "], did you mean " + matchesMessage + "?")__    };build,a,marker,link,unresolved,function,with,an,error,message,about,the,function,being,missing;public,unresolved,function,missing,string,normalized,name,iterable,function,definition,alternatives,set,string,names,new,linked,hash,set,for,function,definition,def,alternatives,if,resolution,type,is,valid,alternative,def,names,add,def,name,names,add,all,def,aliases,list,string,matches,string,utils,find,similar,normalized,name,names,if,matches,is,empty,return,this,string,matches,message,matches,size,1,matches,get,0,any,of,matches,return,with,message,unknown,resolution,type,type,name,did,you,mean,matches,message
UnresolvedFunction -> public UnresolvedFunction missing(String normalizedName, Iterable<FunctionDefinition> alternatives);1547106711;Build a marker {@link UnresolvedFunction} with an error message_about the function being missing.;public UnresolvedFunction missing(String normalizedName, Iterable<FunctionDefinition> alternatives) {_        _        Set<String> names = new LinkedHashSet<>()__        for (FunctionDefinition def : alternatives) {_            if (resolutionType.isValidAlternative(def)) {_                names.add(def.name())__                names.addAll(def.aliases())__            }_        }__        List<String> matches = StringUtils.findSimilar(normalizedName, names)__        if (matches.isEmpty()) {_            return this__        }_        String matchesMessage = matches.size() == 1 ? "[" + matches.get(0) + "]" : "any of " + matches__        return withMessage("Unknown " + resolutionType.type() + " [" + name + "], did you mean " + matchesMessage + "?")__    };build,a,marker,link,unresolved,function,with,an,error,message,about,the,function,being,missing;public,unresolved,function,missing,string,normalized,name,iterable,function,definition,alternatives,set,string,names,new,linked,hash,set,for,function,definition,def,alternatives,if,resolution,type,is,valid,alternative,def,names,add,def,name,names,add,all,def,aliases,list,string,matches,string,utils,find,similar,normalized,name,names,if,matches,is,empty,return,this,string,matches,message,matches,size,1,matches,get,0,any,of,matches,return,with,message,unknown,resolution,type,type,name,did,you,mean,matches,message
UnresolvedFunction -> public UnresolvedFunction missing(String normalizedName, Iterable<FunctionDefinition> alternatives);1547336422;Build a marker {@link UnresolvedFunction} with an error message_about the function being missing.;public UnresolvedFunction missing(String normalizedName, Iterable<FunctionDefinition> alternatives) {_        _        Set<String> names = new LinkedHashSet<>()__        for (FunctionDefinition def : alternatives) {_            if (resolutionType.isValidAlternative(def)) {_                names.add(def.name())__                names.addAll(def.aliases())__            }_        }__        List<String> matches = StringUtils.findSimilar(normalizedName, names)__        if (matches.isEmpty()) {_            return this__        }_        String matchesMessage = matches.size() == 1 ? "[" + matches.get(0) + "]" : "any of " + matches__        return withMessage("Unknown " + resolutionType.type() + " [" + name + "], did you mean " + matchesMessage + "?")__    };build,a,marker,link,unresolved,function,with,an,error,message,about,the,function,being,missing;public,unresolved,function,missing,string,normalized,name,iterable,function,definition,alternatives,set,string,names,new,linked,hash,set,for,function,definition,def,alternatives,if,resolution,type,is,valid,alternative,def,names,add,def,name,names,add,all,def,aliases,list,string,matches,string,utils,find,similar,normalized,name,names,if,matches,is,empty,return,this,string,matches,message,matches,size,1,matches,get,0,any,of,matches,return,with,message,unknown,resolution,type,type,name,did,you,mean,matches,message
UnresolvedFunction -> public UnresolvedFunction missing(String normalizedName, Iterable<FunctionDefinition> alternatives);1549064305;Build a marker {@link UnresolvedFunction} with an error message_about the function being missing.;public UnresolvedFunction missing(String normalizedName, Iterable<FunctionDefinition> alternatives) {_        _        Set<String> names = new LinkedHashSet<>()__        for (FunctionDefinition def : alternatives) {_            if (resolutionType.isValidAlternative(def)) {_                names.add(def.name())__                names.addAll(def.aliases())__            }_        }__        List<String> matches = StringUtils.findSimilar(normalizedName, names)__        if (matches.isEmpty()) {_            return this__        }_        String matchesMessage = matches.size() == 1 ? "[" + matches.get(0) + "]" : "any of " + matches__        return withMessage("Unknown " + resolutionType.type() + " [" + name + "], did you mean " + matchesMessage + "?")__    };build,a,marker,link,unresolved,function,with,an,error,message,about,the,function,being,missing;public,unresolved,function,missing,string,normalized,name,iterable,function,definition,alternatives,set,string,names,new,linked,hash,set,for,function,definition,def,alternatives,if,resolution,type,is,valid,alternative,def,names,add,def,name,names,add,all,def,aliases,list,string,matches,string,utils,find,similar,normalized,name,names,if,matches,is,empty,return,this,string,matches,message,matches,size,1,matches,get,0,any,of,matches,return,with,message,unknown,resolution,type,type,name,did,you,mean,matches,message
