commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getWriteableName() {     return NAME. }
false;public;1;2;;@Override public void writeTo(StreamOutput out) throws IOException { }
false;public;1;4;;@Override public Object process(Object input) {     return apply(input). }
false;public,static;1;11;;public static Boolean apply(Object input) {     if (input == null) {         return null.     }     if (!(input instanceof Boolean)) {         throw new SqlIllegalArgumentException("A boolean is required. received {}", input).     }     return ((Boolean) input).booleanValue() ? Boolean.FALSE : Boolean.TRUE. }
false;public;0;4;;@Override public int hashCode() {     return NotProcessor.class.hashCode(). }
false;public;1;8;;@Override public boolean equals(Object obj) {     if (this == obj) {         return true.     }     return obj == null || getClass() != obj.getClass(). }
