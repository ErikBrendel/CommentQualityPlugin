commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;public void testSupportedByAggsOnlyQuery() {     Pipe supported = new DummyPipe(true).     Pipe unsupported = new DummyPipe(false).     assertFalse(newUnaryProcessor(unsupported).supportedByAggsOnlyQuery()).     assertTrue(newUnaryProcessor(supported).supportedByAggsOnlyQuery()). }
false;public;1;4;;@Override public Pipe resolveAttributes(AttributeResolver resolver) {     return resolvesTo. }
false;public;0;21;;public void testResolveAttributes() {     Pipe needsNothing = new DummyPipe(randomBoolean()).     Pipe resolvesTo = new DummyPipe(randomBoolean()).     Pipe needsResolution = new DummyPipe(randomBoolean()) {          @Override         public Pipe resolveAttributes(AttributeResolver resolver) {             return resolvesTo.         }     }.     AttributeResolver resolver = a -> {         fail("not exepected").         return null.     }.     Pipe d = newUnaryProcessor(needsNothing).     assertSame(d, d.resolveAttributes(resolver)).     d = newUnaryProcessor(needsResolution).     Pipe expected = newUnaryProcessor(resolvesTo).     assertEquals(expected, d.resolveAttributes(resolver)). }
false;public;1;4;;@Override public void collectFields(SqlSourceBuilder sourceBuilder) {     sourceBuilder.trackScores(). }
false;public;0;11;;public void testCollectFields() {     DummyPipe wantsScore = new DummyPipe(randomBoolean()) {          @Override         public void collectFields(SqlSourceBuilder sourceBuilder) {             sourceBuilder.trackScores().         }     }.     DummyPipe wantsNothing = new DummyPipe(randomBoolean()).     assertFalse(tracksScores(newUnaryProcessor(wantsNothing))).     assertTrue(tracksScores(newUnaryProcessor(wantsScore))). }
false;private;1;3;;private Pipe newUnaryProcessor(Pipe child) {     return new UnaryPipe(Source.EMPTY, null, child, null). }
