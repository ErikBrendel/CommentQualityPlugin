commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;3;;public static CurrentDateTime randomCurrentDateTime() {     return new CurrentDateTime(EMPTY, Literal.of(EMPTY, randomInt(10)), TestUtils.randomConfiguration()). }
false;protected;0;4;;@Override protected CurrentDateTime randomInstance() {     return randomCurrentDateTime(). }
false;protected;1;4;;@Override protected CurrentDateTime copy(CurrentDateTime instance) {     return new CurrentDateTime(instance.source(), instance.precision(), instance.configuration()). }
false;protected;1;7;;@Override protected CurrentDateTime mutate(CurrentDateTime instance) {     ZonedDateTime now = instance.configuration().now().     ZoneId mutatedZoneId = randomValueOtherThanMany(o -> Objects.equals(now.getOffset(), o.getRules().getOffset(now.toInstant())), () -> randomZone()).     return new CurrentDateTime(instance.source(), Literal.of(EMPTY, randomInt(10)), TestUtils.randomConfiguration(mutatedZoneId)). }
false;public;0;3;;@Override public void testTransform() { }
false;public;0;3;;@Override public void testReplaceChildren() { }
false;public;0;13;;public void testNanoPrecision() {     ZonedDateTime zdt = ZonedDateTime.parse("2018-01-23T12:34:45.123456789Z").     assertEquals(000_000_000, CurrentDateTime.nanoPrecision(zdt, Literal.of(EMPTY, 0)).getNano()).     assertEquals(100_000_000, CurrentDateTime.nanoPrecision(zdt, Literal.of(EMPTY, 1)).getNano()).     assertEquals(120_000_000, CurrentDateTime.nanoPrecision(zdt, Literal.of(EMPTY, 2)).getNano()).     assertEquals(123_000_000, CurrentDateTime.nanoPrecision(zdt, Literal.of(EMPTY, 3)).getNano()).     assertEquals(123_400_000, CurrentDateTime.nanoPrecision(zdt, Literal.of(EMPTY, 4)).getNano()).     assertEquals(123_450_000, CurrentDateTime.nanoPrecision(zdt, Literal.of(EMPTY, 5)).getNano()).     assertEquals(123_456_000, CurrentDateTime.nanoPrecision(zdt, Literal.of(EMPTY, 6)).getNano()).     assertEquals(123_456_700, CurrentDateTime.nanoPrecision(zdt, Literal.of(EMPTY, 7)).getNano()).     assertEquals(123_456_780, CurrentDateTime.nanoPrecision(zdt, Literal.of(EMPTY, 8)).getNano()).     assertEquals(123_456_789, CurrentDateTime.nanoPrecision(zdt, Literal.of(EMPTY, 9)).getNano()). }
false;public;0;10;;public void testDefaultPrecision() {     Configuration configuration = TestUtils.randomConfiguration().     // null precision means default precision     CurrentDateTime cdt = new CurrentDateTime(EMPTY, null, configuration).     ZonedDateTime now = configuration.now().     assertEquals(now.get(ChronoField.MILLI_OF_SECOND), ((ZonedDateTime) cdt.fold()).get(ChronoField.MILLI_OF_SECOND)).     ZonedDateTime zdt = ZonedDateTime.parse("2019-02-26T12:34:56.123456789Z").     assertEquals(123_000_000, CurrentDateTime.nanoPrecision(zdt, null).getNano()). }
