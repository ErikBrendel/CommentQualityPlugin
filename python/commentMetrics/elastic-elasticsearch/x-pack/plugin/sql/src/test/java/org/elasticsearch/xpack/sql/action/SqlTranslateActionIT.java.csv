commented;modifiers;parameterAmount;loc;comment;code
false;public;0;22;;public void testSqlTranslateAction() {     assertAcked(client().admin().indices().prepareCreate("test").get()).     client().prepareBulk().add(new IndexRequest("test").id("1").source("data", "bar", "count", 42)).add(new IndexRequest("test").id("2").source("data", "baz", "count", 43)).setRefreshPolicy(WriteRequest.RefreshPolicy.IMMEDIATE).get().     ensureYellow("test").     boolean columnOrder = randomBoolean().     String columns = columnOrder ? "data, count" : "count, data".     SqlTranslateResponse response = new SqlTranslateRequestBuilder(client(), SqlTranslateAction.INSTANCE).query("SELECT " + columns + " FROM test ORDER BY count").get().     SearchSourceBuilder source = response.source().     FetchSourceContext fetch = source.fetchSource().     assertTrue(fetch.fetchSource()).     assertArrayEquals(new String[] { "data" }, fetch.includes()).     assertEquals(singletonList(new DocValueFieldsContext.FieldAndFormat("count", null)), source.docValueFields()).     assertEquals(singletonList(SortBuilders.fieldSort("count").missing("_last").unmappedType("long")), source.sorts()). }
