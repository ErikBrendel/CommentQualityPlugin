commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;public void testNoQueryNoFilter() {     QueryContainer container = new QueryContainer().     SearchSourceBuilder sourceBuilder = SourceGenerator.sourceBuilder(container, null, randomIntBetween(1, 10)).     assertNull(sourceBuilder.query()). }
false;public;0;5;;public void testQueryNoFilter() {     QueryContainer container = new QueryContainer().with(new MatchQuery(Source.EMPTY, "foo", "bar")).     SearchSourceBuilder sourceBuilder = SourceGenerator.sourceBuilder(container, null, randomIntBetween(1, 10)).     assertEquals(matchQuery("foo", "bar").operator(Operator.OR), sourceBuilder.query()). }
false;public;0;6;;public void testNoQueryFilter() {     QueryContainer container = new QueryContainer().     QueryBuilder filter = matchQuery("bar", "baz").     SearchSourceBuilder sourceBuilder = SourceGenerator.sourceBuilder(container, filter, randomIntBetween(1, 10)).     assertEquals(boolQuery().filter(matchQuery("bar", "baz")), sourceBuilder.query()). }
false;public;0;7;;public void testQueryFilter() {     QueryContainer container = new QueryContainer().with(new MatchQuery(Source.EMPTY, "foo", "bar")).     QueryBuilder filter = matchQuery("bar", "baz").     SearchSourceBuilder sourceBuilder = SourceGenerator.sourceBuilder(container, filter, randomIntBetween(1, 10)).     assertEquals(boolQuery().must(matchQuery("foo", "bar").operator(Operator.OR)).filter(matchQuery("bar", "baz")), sourceBuilder.query()). }
false;public;0;9;;public void testLimit() {     QueryContainer container = new QueryContainer().withLimit(10).addGroups(singletonList(new GroupByValue("1", "field"))).     int size = randomIntBetween(1, 10).     SearchSourceBuilder sourceBuilder = SourceGenerator.sourceBuilder(container, null, size).     Builder aggBuilder = sourceBuilder.aggregations().     assertEquals(1, aggBuilder.count()).     CompositeAggregationBuilder composite = (CompositeAggregationBuilder) aggBuilder.getAggregatorFactories().iterator().next().     assertEquals(size, composite.size()). }
false;public;0;5;;public void testSortNoneSpecified() {     QueryContainer container = new QueryContainer().     SearchSourceBuilder sourceBuilder = SourceGenerator.sourceBuilder(container, null, randomIntBetween(1, 10)).     assertEquals(singletonList(fieldSort("_doc")), sourceBuilder.sorts()). }
false;public;0;5;;public void testSelectScoreForcesTrackingScore() {     QueryContainer container = new QueryContainer().addColumn(new Score(Source.EMPTY).toAttribute()).     SearchSourceBuilder sourceBuilder = SourceGenerator.sourceBuilder(container, null, randomIntBetween(1, 10)).     assertTrue(sourceBuilder.trackScores()). }
false;public;0;6;;public void testSortScoreSpecified() {     QueryContainer container = new QueryContainer().addSort(new ScoreSort(Direction.DESC, null)).     SearchSourceBuilder sourceBuilder = SourceGenerator.sourceBuilder(container, null, randomIntBetween(1, 10)).     assertEquals(singletonList(scoreSort()), sourceBuilder.sorts()). }
false;public;0;15;;public void testSortFieldSpecified() {     FieldSortBuilder sortField = fieldSort("test").unmappedType("keyword").     QueryContainer container = new QueryContainer().addSort(new AttributeSort(new FieldAttribute(Source.EMPTY, "test", new KeywordEsField("test")), Direction.ASC, Missing.LAST)).     SearchSourceBuilder sourceBuilder = SourceGenerator.sourceBuilder(container, null, randomIntBetween(1, 10)).     assertEquals(singletonList(sortField.order(SortOrder.ASC).missing("_last")), sourceBuilder.sorts()).     container = new QueryContainer().addSort(new AttributeSort(new FieldAttribute(Source.EMPTY, "test", new KeywordEsField("test")), Direction.DESC, Missing.FIRST)).     sourceBuilder = SourceGenerator.sourceBuilder(container, null, randomIntBetween(1, 10)).     assertEquals(singletonList(sortField.order(SortOrder.DESC).missing("_first")), sourceBuilder.sorts()). }
false;public;0;4;;public void testNoSort() {     SearchSourceBuilder sourceBuilder = SourceGenerator.sourceBuilder(new QueryContainer(), null, randomIntBetween(1, 10)).     assertEquals(singletonList(fieldSort("_doc").order(SortOrder.ASC)), sourceBuilder.sorts()). }
false;public;0;6;;public void testTrackHits() {     SearchSourceBuilder sourceBuilder = SourceGenerator.sourceBuilder(new QueryContainer().withTrackHits(), null, randomIntBetween(1, 10)).     assertEquals("Should have tracked hits", Integer.valueOf(SearchContext.TRACK_TOTAL_HITS_ACCURATE), sourceBuilder.trackTotalHitsUpTo()). }
false;public;0;7;;public void testNoSortIfAgg() {     QueryContainer container = new QueryContainer().addGroups(singletonList(new GroupByValue("group_id", "group_column"))).addAgg("group_id", new AvgAgg("agg_id", "avg_column")).     SearchSourceBuilder sourceBuilder = SourceGenerator.sourceBuilder(container, null, randomIntBetween(1, 10)).     assertNull(sourceBuilder.sorts()). }
