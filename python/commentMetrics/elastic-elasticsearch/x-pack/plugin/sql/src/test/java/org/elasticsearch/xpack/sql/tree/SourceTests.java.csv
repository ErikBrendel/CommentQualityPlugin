commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;3;;public static Source randomSource() {     return new Source(between(1, Integer.MAX_VALUE), between(1, Integer.MAX_VALUE), randomAlphaOfLength(25)). }
false;public,static;1;12;;public static Source mutate(Source source) {     List<Function<Source, Source>> options = Arrays.asList(l -> new Source(randomValueOtherThan(l.source().getLineNumber(), () -> between(1, Integer.MAX_VALUE)), l.source().getColumnNumber() - 1, l.text()), l -> new Source(l.source().getLineNumber(), randomValueOtherThan(l.source().getColumnNumber() - 1, () -> between(1, Integer.MAX_VALUE)), l.text())).     return randomFrom(options).apply(source). }
false;public;0;5;;public void testEqualsAndHashCode() {     checkEqualsAndHashCode(randomSource(), l -> new Source(l.source().getLineNumber(), l.source().getColumnNumber() - 1, l.text()), SourceTests::mutate). }
