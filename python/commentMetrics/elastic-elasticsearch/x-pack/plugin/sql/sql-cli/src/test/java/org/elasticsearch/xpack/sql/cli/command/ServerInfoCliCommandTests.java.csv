commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;public void testInvalidCommand() throws Exception {     TestTerminal testTerminal = new TestTerminal().     HttpClient client = mock(HttpClient.class).     CliSession cliSession = new CliSession(client).     ServerInfoCliCommand cliCommand = new ServerInfoCliCommand().     assertFalse(cliCommand.handle(testTerminal, cliSession, "blah")).     assertEquals(testTerminal.toString(), "").     verifyNoMoreInteractions(client). }
false;public;0;12;;public void testShowInfo() throws Exception {     TestTerminal testTerminal = new TestTerminal().     HttpClient client = mock(HttpClient.class).     CliSession cliSession = new CliSession(client).     when(client.serverInfo()).thenReturn(new MainResponse("my_node", "1.2.3", new ClusterName("my_cluster").value(), UUIDs.randomBase64UUID())).     ServerInfoCliCommand cliCommand = new ServerInfoCliCommand().     assertTrue(cliCommand.handle(testTerminal, cliSession, "info")).     assertEquals(testTerminal.toString(), "Node:<em>my_node</em> Cluster:<em>my_cluster</em> Version:<em>1.2.3</em>\n").     verify(client, times(1)).serverInfo().     verifyNoMoreInteractions(client). }
