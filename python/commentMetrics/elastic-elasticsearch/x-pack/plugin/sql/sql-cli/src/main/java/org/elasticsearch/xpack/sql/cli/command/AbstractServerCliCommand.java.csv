commented;modifiers;parameterAmount;loc;comment;code
false;public,final;3;9;;@Override public final boolean handle(CliTerminal terminal, CliSession cliSession, String line) {     try {         return doHandle(terminal, cliSession, line).     } catch (RuntimeException e) {         handleExceptionWhileCommunicatingWithServer(terminal, cliSession, e).     }     return true. }
false;protected,abstract;3;1;;protected abstract boolean doHandle(CliTerminal cliTerminal, CliSession cliSession, String line).
true;protected;3;7;/**  * Handle an exception while communication with the server. Extracted  * into a method so that tests can bubble the failure.  */ ;/**  * Handle an exception while communication with the server. Extracted  * into a method so that tests can bubble the failure.  */ protected void handleExceptionWhileCommunicatingWithServer(CliTerminal terminal, CliSession cliSession, RuntimeException e) {     terminal.line().error("Communication error [").param(e.getMessage() == null ? e.getClass().getName() : e.getMessage()).error("]").ln().     if (cliSession.isDebug()) {         terminal.printStackTrace(e).     } }
