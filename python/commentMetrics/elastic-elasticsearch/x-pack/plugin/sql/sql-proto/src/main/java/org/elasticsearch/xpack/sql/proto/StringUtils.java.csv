commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;63;;public static String toString(Object value) {     if (value == null) {         return "null".     }     if (value instanceof Timestamp) {         Timestamp ts = (Timestamp) value.         return ts.toInstant().toString().     }     if (value instanceof ZonedDateTime) {         return ((ZonedDateTime) value).format(ISO_WITH_MILLIS).     }     // YEAR/MONTH/YEAR TO MONTH -> YEAR TO MONTH     if (value instanceof Period) {         // +yyy-mm - 7 chars         StringBuilder sb = new StringBuilder(7).         Period p = (Period) value.         if (p.isNegative()) {             sb.append("-").             p = p.negated().         } else {             sb.append("+").         }         sb.append(p.getYears()).         sb.append("-").         sb.append(p.getMonths()).         return sb.toString().     }     // DAY/HOUR/MINUTE/SECOND (and variations) -> DAY_TO_SECOND     if (value instanceof Duration) {         // +ddd hh:mm:ss.mmmmmmmmm - 23 chars         StringBuilder sb = new StringBuilder(23).         Duration d = (Duration) value.         if (d.isNegative()) {             sb.append("-").             d = d.negated().         } else {             sb.append("+").         }         long durationInSec = d.getSeconds().         sb.append(durationInSec / SECONDS_PER_DAY).         sb.append(" ").         durationInSec = durationInSec % SECONDS_PER_DAY.         sb.append(indent(durationInSec / SECONDS_PER_HOUR)).         sb.append(":").         durationInSec = durationInSec % SECONDS_PER_HOUR.         sb.append(indent(durationInSec / SECONDS_PER_MINUTE)).         sb.append(":").         durationInSec = durationInSec % SECONDS_PER_MINUTE.         sb.append(indent(durationInSec)).         sb.append(".").         sb.append(TimeUnit.NANOSECONDS.toMillis(d.getNano())).         return sb.toString().     }     return Objects.toString(value). }
false;private,static;1;3;;private static String indent(long timeUnit) {     return timeUnit < 10 ? "0" + timeUnit : Long.toString(timeUnit). }
