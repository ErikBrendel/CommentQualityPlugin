# id;timestamp;commentText;codeText;commentWords;codeWords
ExecutableIndexAction -> private Map<String, Object> mutableMap(Map<String, Object> data);1524684173;Guarantees that the {@code data} is mutable for any code that needs to modify the {@linkplain Map} before using it (e.g., from_singleton, immutable {@code Map}s).__@param data The map to make mutable_@return Always a {@linkplain HashMap};private Map<String, Object> mutableMap(Map<String, Object> data) {_        return data instanceof HashMap ? data : new HashMap<>(data)__    };guarantees,that,the,code,data,is,mutable,for,any,code,that,needs,to,modify,the,linkplain,map,before,using,it,e,g,from,singleton,immutable,code,map,s,param,data,the,map,to,make,mutable,return,always,a,linkplain,hash,map;private,map,string,object,mutable,map,map,string,object,data,return,data,instanceof,hash,map,data,new,hash,map,data
ExecutableIndexAction -> private Map<String, Object> mutableMap(Map<String, Object> data);1526467406;Guarantees that the {@code data} is mutable for any code that needs to modify the {@linkplain Map} before using it (e.g., from_singleton, immutable {@code Map}s).__@param data The map to make mutable_@return Always a {@linkplain HashMap};private Map<String, Object> mutableMap(Map<String, Object> data) {_        return data instanceof HashMap ? data : new HashMap<>(data)__    };guarantees,that,the,code,data,is,mutable,for,any,code,that,needs,to,modify,the,linkplain,map,before,using,it,e,g,from,singleton,immutable,code,map,s,param,data,the,map,to,make,mutable,return,always,a,linkplain,hash,map;private,map,string,object,mutable,map,map,string,object,data,return,data,instanceof,hash,map,data,new,hash,map,data
ExecutableIndexAction -> private Map<String, Object> mutableMap(Map<String, Object> data);1549289311;Guarantees that the {@code data} is mutable for any code that needs to modify the {@linkplain Map} before using it (e.g., from_singleton, immutable {@code Map}s).__@param data The map to make mutable_@return Always a {@linkplain HashMap};private Map<String, Object> mutableMap(Map<String, Object> data) {_        return data instanceof HashMap ? data : new HashMap<>(data)__    };guarantees,that,the,code,data,is,mutable,for,any,code,that,needs,to,modify,the,linkplain,map,before,using,it,e,g,from,singleton,immutable,code,map,s,param,data,the,map,to,make,mutable,return,always,a,linkplain,hash,map;private,map,string,object,mutable,map,map,string,object,data,return,data,instanceof,hash,map,data,new,hash,map,data
ExecutableIndexAction -> private String getField(String actionId, String watchId, String name, Map<String, Object> data, String fieldName, String defaultValue);1524684173;Extracts the specified field out of data map, or alternative falls back to the action value;private String getField(String actionId, String watchId, String name, Map<String, Object> data, String fieldName, String defaultValue) {_        Object obj = data.remove(fieldName)__        if (obj != null) {_            if (defaultValue != null) {_                throw illegalState("could not execute action [{}] of watch [{}]. " +_                                "[ctx.payload.{}] or [ctx.payload._doc.{}] were set together with action [{}] field. Only set one of them",_                        actionId, watchId, fieldName, fieldName, name)__            } else {_                return obj.toString()__            }_        }__        return defaultValue__    };extracts,the,specified,field,out,of,data,map,or,alternative,falls,back,to,the,action,value;private,string,get,field,string,action,id,string,watch,id,string,name,map,string,object,data,string,field,name,string,default,value,object,obj,data,remove,field,name,if,obj,null,if,default,value,null,throw,illegal,state,could,not,execute,action,of,watch,ctx,payload,or,ctx,payload,were,set,together,with,action,field,only,set,one,of,them,action,id,watch,id,field,name,field,name,name,else,return,obj,to,string,return,default,value
ExecutableIndexAction -> private String getField(String actionId, String watchId, String name, Map<String, Object> data, String fieldName, String defaultValue);1526467406;Extracts the specified field out of data map, or alternative falls back to the action value;private String getField(String actionId, String watchId, String name, Map<String, Object> data, String fieldName, String defaultValue) {_        Object obj = data.remove(fieldName)__        if (obj != null) {_            if (defaultValue != null) {_                throw illegalState("could not execute action [{}] of watch [{}]. " +_                                "[ctx.payload.{}] or [ctx.payload._doc.{}] were set together with action [{}] field. Only set one of them",_                        actionId, watchId, fieldName, fieldName, name)__            } else {_                return obj.toString()__            }_        }__        return defaultValue__    };extracts,the,specified,field,out,of,data,map,or,alternative,falls,back,to,the,action,value;private,string,get,field,string,action,id,string,watch,id,string,name,map,string,object,data,string,field,name,string,default,value,object,obj,data,remove,field,name,if,obj,null,if,default,value,null,throw,illegal,state,could,not,execute,action,of,watch,ctx,payload,or,ctx,payload,were,set,together,with,action,field,only,set,one,of,them,action,id,watch,id,field,name,field,name,name,else,return,obj,to,string,return,default,value
ExecutableIndexAction -> private String getField(String actionId, String watchId, String name, Map<String, Object> data, String fieldName, String defaultValue);1549289311;Extracts the specified field out of data map, or alternative falls back to the action value;private String getField(String actionId, String watchId, String name, Map<String, Object> data, String fieldName, String defaultValue) {_        Object obj = data.remove(fieldName)__        if (obj != null) {_            if (defaultValue != null) {_                throw illegalState("could not execute action [{}] of watch [{}]. " +_                                "[ctx.payload.{}] or [ctx.payload._doc.{}] were set together with action [{}] field. Only set one of them",_                        actionId, watchId, fieldName, fieldName, name)__            } else {_                return obj.toString()__            }_        }__        return defaultValue__    };extracts,the,specified,field,out,of,data,map,or,alternative,falls,back,to,the,action,value;private,string,get,field,string,action,id,string,watch,id,string,name,map,string,object,data,string,field,name,string,default,value,object,obj,data,remove,field,name,if,obj,null,if,default,value,null,throw,illegal,state,could,not,execute,action,of,watch,ctx,payload,or,ctx,payload,were,set,together,with,action,field,only,set,one,of,them,action,id,watch,id,field,name,field,name,name,else,return,obj,to,string,return,default,value
