commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * @return A type to identify the email attachment, same as the parser identifier  */ ;/**  * @return A type to identify the email attachment, same as the parser identifier  */ String type().
true;;0;1;/**  * @return The id of this attachment  */ ;/**  * @return The id of this attachment  */ String id().
true;;0;1;/**  * Allows the attachment to decide of it should be of disposition type attachment or inline, which is important  * for being able to display inside of desktop email clients  *  * @return a boolean flagging this attachment as being inline  */ ;/**  * Allows the attachment to decide of it should be of disposition type attachment or inline, which is important  * for being able to display inside of desktop email clients  *  * @return a boolean flagging this attachment as being inline  */ boolean inline().
true;;0;1;/**  * @return An identifier of this parser  */ ;/**  * @return An identifier of this parser  */ String type().
true;;2;1;/**  * A parser to create an EmailAttachment, that is serializable and does not execute anything  *  * @param id The id of this attachment, parsed from the outer content  * @param parser The XContentParser used for parsing  * @return A concrete EmailAttachment  * @throws IOException in case parsing fails  */ ;/**  * A parser to create an EmailAttachment, that is serializable and does not execute anything  *  * @param id The id of this attachment, parsed from the outer content  * @param parser The XContentParser used for parsing  * @return A concrete EmailAttachment  * @throws IOException in case parsing fails  */ T parse(String id, XContentParser parser) throws IOException.
true;;3;1;/**  * Converts an email attachment to an attachment, potentially executing code like an HTTP request  * @param context The WatchExecutionContext supplied with the whole watch execution  * @param payload The Payload supplied with the action  * @param attachment The typed attachment  * @return An attachment that is ready to be used in a MimeMessage  */ ;/**  * Converts an email attachment to an attachment, potentially executing code like an HTTP request  * @param context The WatchExecutionContext supplied with the whole watch execution  * @param payload The Payload supplied with the action  * @param attachment The typed attachment  * @return An attachment that is ready to be used in a MimeMessage  */ Attachment toAttachment(WatchExecutionContext context, Payload payload, T attachment) throws IOException.
