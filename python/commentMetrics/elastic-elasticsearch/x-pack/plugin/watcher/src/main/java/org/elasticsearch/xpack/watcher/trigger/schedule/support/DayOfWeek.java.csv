commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;10;;public static String cronPart(EnumSet<DayOfWeek> days) {     StringBuilder sb = new StringBuilder().     for (DayOfWeek day : days) {         if (sb.length() != 0) {             sb.append(",").         }         sb.append(day.cronKey).     }     return sb.toString(). }
false;public,static;1;13;;public static DayOfWeek resolve(int day) {     switch(day) {         case 1:             return SUNDAY.         case 2:             return MONDAY.         case 3:             return TUESDAY.         case 4:             return WEDNESDAY.         case 5:             return THURSDAY.         case 6:             return FRIDAY.         case 7:             return SATURDAY.         default:             throw new ElasticsearchParseException("unknown day of week number [{}]", day).     } }
false;public,static;1;27;;public static DayOfWeek resolve(String day) {     switch(day.toLowerCase(Locale.ROOT)) {         case "1":         case "sun":         case "sunday":             return SUNDAY.         case "2":         case "mon":         case "monday":             return MONDAY.         case "3":         case "tue":         case "tuesday":             return TUESDAY.         case "4":         case "wed":         case "wednesday":             return WEDNESDAY.         case "5":         case "thu":         case "thursday":             return THURSDAY.         case "6":         case "fri":         case "friday":             return FRIDAY.         case "7":         case "sat":         case "saturday":             return SATURDAY.         default:             throw new ElasticsearchParseException("unknown day of week [{}]", day).     } }
false;public;0;4;;@Override public String toString() {     return cronKey. }
