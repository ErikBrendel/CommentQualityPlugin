# id;timestamp;commentText;codeText;commentWords;codeWords
ReportingAttachmentParser -> private long getSleepMillis(WatchExecutionContext context, ReportingAttachment attachment);1524684173;Use the default time to sleep between polls if it was not set;private long getSleepMillis(WatchExecutionContext context, ReportingAttachment attachment) {_        long sleepMillis__        if (attachment.interval() == null) {_            sleepMillis = interval.millis()__            logger.trace("Watch[{}] reporting[{}] invalid interval configuration [{}], using configured default [{}]", context.watch().id(),_                    attachment.id(), attachment.interval(), this.interval)__        } else {_            sleepMillis = attachment.interval().millis()__        }_        return sleepMillis__    };use,the,default,time,to,sleep,between,polls,if,it,was,not,set;private,long,get,sleep,millis,watch,execution,context,context,reporting,attachment,attachment,long,sleep,millis,if,attachment,interval,null,sleep,millis,interval,millis,logger,trace,watch,reporting,invalid,interval,configuration,using,configured,default,context,watch,id,attachment,id,attachment,interval,this,interval,else,sleep,millis,attachment,interval,millis,return,sleep,millis
ReportingAttachmentParser -> private long getSleepMillis(WatchExecutionContext context, ReportingAttachment attachment);1534338685;Use the default time to sleep between polls if it was not set;private long getSleepMillis(WatchExecutionContext context, ReportingAttachment attachment) {_        long sleepMillis__        if (attachment.interval() == null) {_            sleepMillis = interval.millis()__            logger.trace("Watch[{}] reporting[{}] invalid interval configuration [{}], using configured default [{}]", context.watch().id(),_                    attachment.id(), attachment.interval(), this.interval)__        } else {_            sleepMillis = attachment.interval().millis()__        }_        return sleepMillis__    };use,the,default,time,to,sleep,between,polls,if,it,was,not,set;private,long,get,sleep,millis,watch,execution,context,context,reporting,attachment,attachment,long,sleep,millis,if,attachment,interval,null,sleep,millis,interval,millis,logger,trace,watch,reporting,invalid,interval,configuration,using,configured,default,context,watch,id,attachment,id,attachment,interval,this,interval,else,sleep,millis,attachment,interval,millis,return,sleep,millis
ReportingAttachmentParser -> private long getSleepMillis(WatchExecutionContext context, ReportingAttachment attachment);1538170812;Use the default time to sleep between polls if it was not set;private long getSleepMillis(WatchExecutionContext context, ReportingAttachment attachment) {_        long sleepMillis__        if (attachment.interval() == null) {_            sleepMillis = interval.millis()__            logger.trace("Watch[{}] reporting[{}] invalid interval configuration [{}], using configured default [{}]", context.watch().id(),_                    attachment.id(), attachment.interval(), this.interval)__        } else {_            sleepMillis = attachment.interval().millis()__        }_        return sleepMillis__    };use,the,default,time,to,sleep,between,polls,if,it,was,not,set;private,long,get,sleep,millis,watch,execution,context,context,reporting,attachment,attachment,long,sleep,millis,if,attachment,interval,null,sleep,millis,interval,millis,logger,trace,watch,reporting,invalid,interval,configuration,using,configured,default,context,watch,id,attachment,id,attachment,interval,this,interval,else,sleep,millis,attachment,interval,millis,return,sleep,millis
ReportingAttachmentParser -> private long getSleepMillis(WatchExecutionContext context, ReportingAttachment attachment);1540847035;Use the default time to sleep between polls if it was not set;private long getSleepMillis(WatchExecutionContext context, ReportingAttachment attachment) {_        long sleepMillis__        if (attachment.interval() == null) {_            sleepMillis = interval.millis()__            logger.trace("Watch[{}] reporting[{}] invalid interval configuration [{}], using configured default [{}]", context.watch().id(),_                    attachment.id(), attachment.interval(), this.interval)__        } else {_            sleepMillis = attachment.interval().millis()__        }_        return sleepMillis__    };use,the,default,time,to,sleep,between,polls,if,it,was,not,set;private,long,get,sleep,millis,watch,execution,context,context,reporting,attachment,attachment,long,sleep,millis,if,attachment,interval,null,sleep,millis,interval,millis,logger,trace,watch,reporting,invalid,interval,configuration,using,configured,default,context,watch,id,attachment,id,attachment,interval,this,interval,else,sleep,millis,attachment,interval,millis,return,sleep,millis
ReportingAttachmentParser -> private String extractIdFromJson(String watchId, String attachmentId, BytesReference body) throws IOException;1524684173;Extract the id from JSON payload, so we know which ID to poll for;private String extractIdFromJson(String watchId, String attachmentId, BytesReference body) throws IOException {_        _        try (InputStream stream = body.streamInput()__             XContentParser parser = JsonXContent.jsonXContent_                     .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, stream)) {_            KibanaReportingPayload payload = new KibanaReportingPayload()__            PAYLOAD_PARSER.parse(parser, payload, null)__            String path = payload.getPath()__            if (Strings.isEmpty(path)) {_                throw new ElasticsearchException("Watch[{}] reporting[{}] field path found in JSON payload, payload was {}",_                        watchId, attachmentId, body.utf8ToString())__            }_            return path__        }_    };extract,the,id,from,json,payload,so,we,know,which,id,to,poll,for;private,string,extract,id,from,json,string,watch,id,string,attachment,id,bytes,reference,body,throws,ioexception,try,input,stream,stream,body,stream,input,xcontent,parser,parser,json,xcontent,json,xcontent,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,stream,kibana,reporting,payload,payload,new,kibana,reporting,payload,parse,parser,payload,null,string,path,payload,get,path,if,strings,is,empty,path,throw,new,elasticsearch,exception,watch,reporting,field,path,found,in,json,payload,payload,was,watch,id,attachment,id,body,utf8to,string,return,path
ReportingAttachmentParser -> private String extractIdFromJson(String watchId, String attachmentId, BytesReference body) throws IOException;1534338685;Extract the id from JSON payload, so we know which ID to poll for;private String extractIdFromJson(String watchId, String attachmentId, BytesReference body) throws IOException {_        _        try (InputStream stream = body.streamInput()__             XContentParser parser = JsonXContent.jsonXContent_                     .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, stream)) {_            KibanaReportingPayload payload = new KibanaReportingPayload()__            PAYLOAD_PARSER.parse(parser, payload, null)__            String path = payload.getPath()__            if (Strings.isEmpty(path)) {_                throw new ElasticsearchException("Watch[{}] reporting[{}] field path found in JSON payload, payload was {}",_                        watchId, attachmentId, body.utf8ToString())__            }_            return path__        }_    };extract,the,id,from,json,payload,so,we,know,which,id,to,poll,for;private,string,extract,id,from,json,string,watch,id,string,attachment,id,bytes,reference,body,throws,ioexception,try,input,stream,stream,body,stream,input,xcontent,parser,parser,json,xcontent,json,xcontent,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,stream,kibana,reporting,payload,payload,new,kibana,reporting,payload,parse,parser,payload,null,string,path,payload,get,path,if,strings,is,empty,path,throw,new,elasticsearch,exception,watch,reporting,field,path,found,in,json,payload,payload,was,watch,id,attachment,id,body,utf8to,string,return,path
ReportingAttachmentParser -> private String extractIdFromJson(String watchId, String attachmentId, BytesReference body) throws IOException;1538170812;Extract the id from JSON payload, so we know which ID to poll for;private String extractIdFromJson(String watchId, String attachmentId, BytesReference body) throws IOException {_        _        try (InputStream stream = body.streamInput()__             XContentParser parser = JsonXContent.jsonXContent_                     .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, stream)) {_            KibanaReportingPayload payload = new KibanaReportingPayload()__            PAYLOAD_PARSER.parse(parser, payload, null)__            String path = payload.getPath()__            if (Strings.isEmpty(path)) {_                throw new ElasticsearchException("Watch[{}] reporting[{}] field path found in JSON payload, payload was {}",_                        watchId, attachmentId, body.utf8ToString())__            }_            return path__        }_    };extract,the,id,from,json,payload,so,we,know,which,id,to,poll,for;private,string,extract,id,from,json,string,watch,id,string,attachment,id,bytes,reference,body,throws,ioexception,try,input,stream,stream,body,stream,input,xcontent,parser,parser,json,xcontent,json,xcontent,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,stream,kibana,reporting,payload,payload,new,kibana,reporting,payload,parse,parser,payload,null,string,path,payload,get,path,if,strings,is,empty,path,throw,new,elasticsearch,exception,watch,reporting,field,path,found,in,json,payload,payload,was,watch,id,attachment,id,body,utf8to,string,return,path
ReportingAttachmentParser -> private String extractIdFromJson(String watchId, String attachmentId, BytesReference body) throws IOException;1540847035;Extract the id from JSON payload, so we know which ID to poll for;private String extractIdFromJson(String watchId, String attachmentId, BytesReference body) throws IOException {_        _        try (InputStream stream = body.streamInput()__             XContentParser parser = JsonXContent.jsonXContent_                     .createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, stream)) {_            KibanaReportingPayload payload = new KibanaReportingPayload()__            PAYLOAD_PARSER.parse(parser, payload, null)__            String path = payload.getPath()__            if (Strings.isEmpty(path)) {_                throw new ElasticsearchException("Watch[{}] reporting[{}] field path found in JSON payload, payload was {}",_                        watchId, attachmentId, body.utf8ToString())__            }_            return path__        }_    };extract,the,id,from,json,payload,so,we,know,which,id,to,poll,for;private,string,extract,id,from,json,string,watch,id,string,attachment,id,bytes,reference,body,throws,ioexception,try,input,stream,stream,body,stream,input,xcontent,parser,parser,json,xcontent,json,xcontent,create,parser,named,xcontent,registry,empty,logging,deprecation,handler,instance,stream,kibana,reporting,payload,payload,new,kibana,reporting,payload,parse,parser,payload,null,string,path,payload,get,path,if,strings,is,empty,path,throw,new,elasticsearch,exception,watch,reporting,field,path,found,in,json,payload,payload,was,watch,id,attachment,id,body,utf8to,string,return,path
ReportingAttachmentParser -> private HttpResponse requestReportGeneration(String watchId, String attachmentId, HttpRequest request) throws IOException;1524684173;Trigger the initial report generation and catch possible exceptions;private HttpResponse requestReportGeneration(String watchId, String attachmentId, HttpRequest request) throws IOException {_        HttpResponse response = httpClient.execute(request)__        if (response.status() != 200) {_            throw new ElasticsearchException("Watch[{}] reporting[{}] Error response when trying to trigger reporting generation " +_                    "host[{}], port[{}] method[{}], path[{}], status[{}]", watchId, attachmentId, request.host(),_                    request.port(), request.method(), request.path(), response.status())__        }__        return response__    };trigger,the,initial,report,generation,and,catch,possible,exceptions;private,http,response,request,report,generation,string,watch,id,string,attachment,id,http,request,request,throws,ioexception,http,response,response,http,client,execute,request,if,response,status,200,throw,new,elasticsearch,exception,watch,reporting,error,response,when,trying,to,trigger,reporting,generation,host,port,method,path,status,watch,id,attachment,id,request,host,request,port,request,method,request,path,response,status,return,response
ReportingAttachmentParser -> private HttpResponse requestReportGeneration(String watchId, String attachmentId, HttpRequest request) throws IOException;1534338685;Trigger the initial report generation and catch possible exceptions;private HttpResponse requestReportGeneration(String watchId, String attachmentId, HttpRequest request) throws IOException {_        HttpResponse response = httpClient.execute(request)__        if (response.status() != 200) {_            throw new ElasticsearchException("Watch[{}] reporting[{}] Error response when trying to trigger reporting generation " +_                    "host[{}], port[{}] method[{}], path[{}], status[{}]", watchId, attachmentId, request.host(),_                    request.port(), request.method(), request.path(), response.status())__        }__        return response__    };trigger,the,initial,report,generation,and,catch,possible,exceptions;private,http,response,request,report,generation,string,watch,id,string,attachment,id,http,request,request,throws,ioexception,http,response,response,http,client,execute,request,if,response,status,200,throw,new,elasticsearch,exception,watch,reporting,error,response,when,trying,to,trigger,reporting,generation,host,port,method,path,status,watch,id,attachment,id,request,host,request,port,request,method,request,path,response,status,return,response
ReportingAttachmentParser -> private HttpResponse requestReportGeneration(String watchId, String attachmentId, HttpRequest request) throws IOException;1538170812;Trigger the initial report generation and catch possible exceptions;private HttpResponse requestReportGeneration(String watchId, String attachmentId, HttpRequest request) throws IOException {_        HttpResponse response = httpClient.execute(request)__        if (response.status() != 200) {_            throw new ElasticsearchException("Watch[{}] reporting[{}] Error response when trying to trigger reporting generation " +_                    "host[{}], port[{}] method[{}], path[{}], status[{}]", watchId, attachmentId, request.host(),_                    request.port(), request.method(), request.path(), response.status())__        }__        return response__    };trigger,the,initial,report,generation,and,catch,possible,exceptions;private,http,response,request,report,generation,string,watch,id,string,attachment,id,http,request,request,throws,ioexception,http,response,response,http,client,execute,request,if,response,status,200,throw,new,elasticsearch,exception,watch,reporting,error,response,when,trying,to,trigger,reporting,generation,host,port,method,path,status,watch,id,attachment,id,request,host,request,port,request,method,request,path,response,status,return,response
ReportingAttachmentParser -> private HttpResponse requestReportGeneration(String watchId, String attachmentId, HttpRequest request) throws IOException;1540847035;Trigger the initial report generation and catch possible exceptions;private HttpResponse requestReportGeneration(String watchId, String attachmentId, HttpRequest request) throws IOException {_        HttpResponse response = httpClient.execute(request)__        if (response.status() != 200) {_            throw new ElasticsearchException("Watch[{}] reporting[{}] Error response when trying to trigger reporting generation " +_                    "host[{}], port[{}] method[{}], path[{}], status[{}]", watchId, attachmentId, request.host(),_                    request.port(), request.method(), request.path(), response.status())__        }__        return response__    };trigger,the,initial,report,generation,and,catch,possible,exceptions;private,http,response,request,report,generation,string,watch,id,string,attachment,id,http,request,request,throws,ioexception,http,response,response,http,client,execute,request,if,response,status,200,throw,new,elasticsearch,exception,watch,reporting,error,response,when,trying,to,trigger,reporting,generation,host,port,method,path,status,watch,id,attachment,id,request,host,request,port,request,method,request,path,response,status,return,response
