commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Wid id() {     return id. }
false;public;0;3;;public TriggerEvent triggerEvent() {     return triggerEvent. }
false;public;2;7;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(Field.TRIGGER_EVENT.getPreferredName()).startObject().field(triggerEvent.type(), triggerEvent, params).endObject().     builder.endObject().     return builder. }
false;public;3;9;;public TriggeredWatch parse(String id, long version, BytesReference source) {     // EMPTY is safe here because we never use namedObject     try (XContentParser parser = XContentHelper.createParser(NamedXContentRegistry.EMPTY, LoggingDeprecationHandler.INSTANCE, source)) {         return parse(id, version, parser).     } catch (IOException e) {         throw new ElasticsearchException("unable to parse watch record", e).     } }
false;public;3;25;;public TriggeredWatch parse(String id, long version, XContentParser parser) throws IOException {     assert id != null : "watch record id is missing".     Wid wid = new Wid(id).     TriggerEvent triggerEvent = null.     String currentFieldName = null.     XContentParser.Token token = parser.nextToken().     assert token == XContentParser.Token.START_OBJECT.     while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {         if (token == XContentParser.Token.FIELD_NAME) {             currentFieldName = parser.currentName().         } else if (token == XContentParser.Token.START_OBJECT) {             if (Field.TRIGGER_EVENT.match(currentFieldName, parser.getDeprecationHandler())) {                 triggerEvent = triggerService.parseTriggerEvent(wid.watchId(), id, parser).             } else {                 parser.skipChildren().             }         }     }     TriggeredWatch record = new TriggeredWatch(wid, triggerEvent).     assert record.triggerEvent() != null : "watch record [" + id + "] is missing trigger".     return record. }
false;public;1;10;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     TriggeredWatch entry = (TriggeredWatch) o.     if (!id.equals(entry.id))         return false.     return true. }
false;public;0;4;;@Override public int hashCode() {     return id.hashCode(). }
false;public;0;4;;@Override public String toString() {     return id.toString(). }
