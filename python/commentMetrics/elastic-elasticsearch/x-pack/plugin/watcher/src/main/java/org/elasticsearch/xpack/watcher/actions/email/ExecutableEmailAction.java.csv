commented;modifiers;parameterAmount;loc;comment;code
false;public;3;32;;public Action.Result execute(String actionId, WatchExecutionContext ctx, Payload payload) throws Exception {     Map<String, Object> model = Variables.createCtxParamsMap(ctx, payload).     Map<String, Attachment> attachments = new HashMap<>().     DataAttachment dataAttachment = action.getDataAttachment().     if (dataAttachment != null) {         Attachment attachment = dataAttachment.create("data", model).         attachments.put(attachment.id(), attachment).     }     if (action.getAttachments() != null && action.getAttachments().getAttachments().size() > 0) {         for (EmailAttachmentParser.EmailAttachment emailAttachment : action.getAttachments().getAttachments()) {             EmailAttachmentParser parser = emailAttachmentParsers.get(emailAttachment.type()).             try {                 Attachment attachment = parser.toAttachment(ctx, payload, emailAttachment).                 attachments.put(attachment.id(), attachment).             } catch (ElasticsearchException | IOException e) {                 return new EmailAction.Result.FailureWithException(action.type(), e).             }         }     }     Email.Builder email = action.getEmail().render(templateEngine, model, htmlSanitizer, attachments).     email.id(actionId + "_" + ctx.id().value()).     if (ctx.simulateAction(actionId)) {         return new EmailAction.Result.Simulated(email.build()).     }     EmailService.EmailSent sent = emailService.send(email.build(), action.getAuth(), action.getProfile(), action.getAccount()).     return new EmailAction.Result.Success(sent.account(), sent.email()). }
