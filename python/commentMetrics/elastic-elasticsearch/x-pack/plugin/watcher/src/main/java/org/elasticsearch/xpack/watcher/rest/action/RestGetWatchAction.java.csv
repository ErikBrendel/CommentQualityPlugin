commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "watcher_get_watch". }
false;public;2;8;;@Override public RestResponse buildResponse(GetWatchResponse response, XContentBuilder builder) throws Exception {     builder.startObject().     response.toXContent(builder, request).     builder.endObject().     RestStatus status = response.isFound() ? OK : NOT_FOUND.     return new BytesRestResponse(status, builder). }
false;protected;2;14;;@Override protected RestChannelConsumer doPrepareRequest(final RestRequest request, WatcherClient client) {     final GetWatchRequest getWatchRequest = new GetWatchRequest(request.param("id")).     return channel -> client.getWatch(getWatchRequest, new RestBuilderListener<GetWatchResponse>(channel) {          @Override         public RestResponse buildResponse(GetWatchResponse response, XContentBuilder builder) throws Exception {             builder.startObject().             response.toXContent(builder, request).             builder.endObject().             RestStatus status = response.isFound() ? OK : NOT_FOUND.             return new BytesRestResponse(status, builder).         }     }). }
