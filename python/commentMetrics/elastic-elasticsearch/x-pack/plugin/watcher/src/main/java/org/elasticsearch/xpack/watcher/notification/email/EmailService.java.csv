commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;5;;@Override protected Account createAccount(String name, Settings accountSettings) {     Account.Config config = new Account.Config(name, accountSettings).     return new Account(config, cryptoService, logger). }
false;public;4;8;;public EmailSent send(Email email, Authentication auth, Profile profile, String accountName) throws MessagingException {     Account account = getAccount(accountName).     if (account == null) {         throw new IllegalArgumentException("failed to send email with subject [" + email.subject() + "] via account [" + accountName + "]. account does not exist").     }     return send(email, auth, profile, account). }
false;private;4;10;;private EmailSent send(Email email, Authentication auth, Profile profile, Account account) throws MessagingException {     assert account != null.     try {         email = account.send(email, auth, profile).     } catch (MessagingException me) {         throw new MessagingException("failed to send email with subject [" + email.subject() + "] via account [" + account.name() + "]", me).     }     return new EmailSent(account.name(), email). }
false;public;0;3;;public String account() {     return account. }
false;public;0;3;;public Email email() {     return email. }
false;private,static;0;6;;private static List<Setting<?>> getDynamicSettings() {     return Arrays.asList(SETTING_DEFAULT_ACCOUNT, SETTING_PROFILE, SETTING_EMAIL_DEFAULTS, SETTING_SMTP_AUTH, SETTING_SMTP_HOST, SETTING_SMTP_PORT, SETTING_SMTP_STARTTLS_ENABLE, SETTING_SMTP_USER, SETTING_SMTP_STARTTLS_REQUIRED, SETTING_SMTP_TIMEOUT, SETTING_SMTP_CONNECTION_TIMEOUT, SETTING_SMTP_WRITE_TIMEOUT, SETTING_SMTP_LOCAL_ADDRESS, SETTING_SMTP_LOCAL_PORT, SETTING_SMTP_SEND_PARTIAL, SETTING_SMTP_WAIT_ON_QUIT, SETTING_SMTP_SSL_TRUST_ADDRESS). }
false;private,static;0;3;;private static List<Setting<?>> getSecureSettings() {     return Arrays.asList(SETTING_SECURE_PASSWORD). }
false;public,static;0;5;;public static List<Setting<?>> getSettings() {     List<Setting<?>> allSettings = new ArrayList<Setting<?>>(EmailService.getDynamicSettings()).     allSettings.addAll(EmailService.getSecureSettings()).     return allSettings. }
