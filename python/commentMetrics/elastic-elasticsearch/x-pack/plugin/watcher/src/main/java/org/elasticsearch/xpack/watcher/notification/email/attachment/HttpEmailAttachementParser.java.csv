commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String type() {     return TYPE. }
false;public;2;29;;@Override public HttpRequestAttachment parse(String id, XContentParser parser) throws IOException {     boolean inline = false.     String contentType = null.     HttpRequestTemplate requestTemplate = null.     String currentFieldName = null.     XContentParser.Token token.     while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {         if (token == XContentParser.Token.FIELD_NAME) {             currentFieldName = parser.currentName().         } else if (Fields.CONTENT_TYPE.match(currentFieldName, parser.getDeprecationHandler())) {             contentType = parser.text().         } else if (Fields.INLINE.match(currentFieldName, parser.getDeprecationHandler())) {             inline = parser.booleanValue().         } else if (Fields.REQUEST.match(currentFieldName, parser.getDeprecationHandler())) {             requestTemplate = HttpRequestTemplate.Parser.parse(parser).         } else {             String msg = "Unknown field name [" + currentFieldName + "] in http request attachment configuration".             throw new ElasticsearchParseException(msg).         }     }     if (requestTemplate != null) {         return new HttpRequestAttachment(id, requestTemplate, inline, contentType).     }     throw new ElasticsearchParseException("Could not parse http request attachment"). }
false;public;3;27;;@Override public Attachment toAttachment(WatchExecutionContext context, Payload payload, HttpRequestAttachment attachment) throws IOException {     Map<String, Object> model = Variables.createCtxParamsMap(context, payload).     HttpRequest httpRequest = attachment.getRequestTemplate().render(templateEngine, model).     HttpResponse response = httpClient.execute(httpRequest).     // check for status 200, only then append attachment     if (response.status() >= 200 && response.status() < 300) {         if (response.hasContent()) {             String contentType = attachment.getContentType().             String attachmentContentType = Strings.hasLength(contentType) ? contentType : response.contentType().             return new Attachment.Bytes(attachment.id(), BytesReference.toBytes(response.body()), attachmentContentType, attachment.inline()).         } else {             throw new ElasticsearchException("Watch[{}] attachment[{}] HTTP empty response body host[{}], port[{}], " + "method[{}], path[{}], status[{}]", context.watch().id(), attachment.id(), httpRequest.host(), httpRequest.port(), httpRequest.method(), httpRequest.path(), response.status()).         }     } else {         throw new ElasticsearchException("Watch[{}] attachment[{}] HTTP error status host[{}], port[{}], " + "method[{}], path[{}], status[{}]", context.watch().id(), attachment.id(), httpRequest.host(), httpRequest.port(), httpRequest.method(), httpRequest.path(), response.status()).     } }
