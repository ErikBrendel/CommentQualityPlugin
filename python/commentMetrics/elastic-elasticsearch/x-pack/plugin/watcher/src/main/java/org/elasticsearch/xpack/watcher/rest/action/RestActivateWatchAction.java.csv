commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "watcher_activate_watch". }
false;public;2;6;;@Override public RestResponse buildResponse(ActivateWatchResponse response, XContentBuilder builder) throws Exception {     return new BytesRestResponse(RestStatus.OK, builder.startObject().field(WatchField.STATUS.getPreferredName(), response.getStatus(), WatcherParams.HIDE_SECRETS).endObject()). }
false;public;2;13;;@Override public RestChannelConsumer doPrepareRequest(RestRequest request, WatcherClient client) throws IOException {     String watchId = request.param("id").     return channel -> client.activateWatch(new ActivateWatchRequest(watchId, true), new RestBuilderListener<ActivateWatchResponse>(channel) {          @Override         public RestResponse buildResponse(ActivateWatchResponse response, XContentBuilder builder) throws Exception {             return new BytesRestResponse(RestStatus.OK, builder.startObject().field(WatchField.STATUS.getPreferredName(), response.getStatus(), WatcherParams.HIDE_SECRETS).endObject()).         }     }). }
false;public;0;4;;@Override public String getName() {     return "watcher_deactivate_watch". }
false;public;2;6;;@Override public RestResponse buildResponse(ActivateWatchResponse response, XContentBuilder builder) throws Exception {     return new BytesRestResponse(RestStatus.OK, builder.startObject().field(WatchField.STATUS.getPreferredName(), response.getStatus(), WatcherParams.HIDE_SECRETS).endObject()). }
false;public;2;13;;@Override public RestChannelConsumer doPrepareRequest(RestRequest request, WatcherClient client) throws IOException {     String watchId = request.param("id").     return channel -> client.activateWatch(new ActivateWatchRequest(watchId, false), new RestBuilderListener<ActivateWatchResponse>(channel) {          @Override         public RestResponse buildResponse(ActivateWatchResponse response, XContentBuilder builder) throws Exception {             return new BytesRestResponse(RestStatus.OK, builder.startObject().field(WatchField.STATUS.getPreferredName(), response.getStatus(), WatcherParams.HIDE_SECRETS).endObject()).         }     }). }
