commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;5;;@Override protected WatcherStatsResponse newResponse(WatcherStatsRequest request, List<WatcherStatsResponse.Node> nodes, List<FailedNodeException> failures) {     return new WatcherStatsResponse(clusterService.getClusterName(), getWatcherMetaData(), nodes, failures). }
false;protected;2;4;;@Override protected WatcherStatsRequest.Node newNodeRequest(String nodeId, WatcherStatsRequest request) {     return new WatcherStatsRequest.Node(request, nodeId). }
false;protected;0;4;;@Override protected WatcherStatsResponse.Node newNodeResponse() {     return new WatcherStatsResponse.Node(). }
false;protected;1;19;;@Override protected WatcherStatsResponse.Node nodeOperation(WatcherStatsRequest.Node request) {     WatcherStatsResponse.Node statsResponse = new WatcherStatsResponse.Node(clusterService.localNode()).     statsResponse.setWatcherState(lifeCycleService.getState()).     statsResponse.setThreadPoolQueueSize(executionService.executionThreadPoolQueueSize()).     statsResponse.setThreadPoolMaxSize(executionService.executionThreadPoolMaxSize()).     if (request.includeCurrentWatches()) {         statsResponse.setSnapshots(executionService.currentExecutions()).     }     if (request.includeQueuedWatches()) {         statsResponse.setQueuedWatches(executionService.queuedWatches()).     }     if (request.includeStats()) {         Counters stats = Counters.merge(Arrays.asList(triggerService.stats(), executionService.executionTimes())).         statsResponse.setStats(stats).     }     statsResponse.setWatchesCount(triggerService.count()).     return statsResponse. }
false;private;0;7;;private WatcherMetaData getWatcherMetaData() {     WatcherMetaData watcherMetaData = clusterService.state().getMetaData().custom(WatcherMetaData.TYPE).     if (watcherMetaData == null) {         watcherMetaData = new WatcherMetaData(false).     }     return watcherMetaData. }
