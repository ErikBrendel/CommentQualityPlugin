commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public org.elasticsearch.xpack.watcher.notification.email.DataAttachment getDataAttachment() {     return dataAttachment. }
false;public;2;10;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject(id).startObject(DataAttachmentParser.TYPE).     if (dataAttachment == org.elasticsearch.xpack.watcher.notification.email.DataAttachment.YAML) {         builder.field("format", "yaml").     } else {         builder.field("format", "json").     }     return builder.endObject().endObject(). }
false;public;0;4;;@Override public String type() {     return DataAttachmentParser.TYPE. }
false;public;1;8;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     DataAttachment otherDataAttachment = (DataAttachment) o.     return Objects.equals(id, otherDataAttachment.id) && Objects.equals(dataAttachment, otherDataAttachment.dataAttachment). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(id, dataAttachment). }
false;public;0;4;;@Override public String id() {     return id. }
false;public;0;4;;@Override public boolean inline() {     return false. }
false;public,static;1;3;;public static Builder builder(String id) {     return new Builder(id). }
false;public;1;4;;public Builder dataAttachment(org.elasticsearch.xpack.watcher.notification.email.DataAttachment dataAttachment) {     this.dataAttachment = dataAttachment.     return this. }
false;public;0;3;;public DataAttachment build() {     return new DataAttachment(id, dataAttachment). }
