commented;modifiers;parameterAmount;loc;comment;code
false;public;2;18;;@Override public ChainInput.Result execute(WatchExecutionContext ctx, Payload payload) {     List<Tuple<String, Input.Result>> results = new ArrayList<>().     Map<String, Object> payloads = new HashMap<>().     try {         for (Tuple<String, ExecutableInput> tuple : inputs) {             Input.Result result = tuple.v2().execute(ctx, new Payload.Simple(payloads)).             results.add(new Tuple<>(tuple.v1(), result)).             payloads.put(tuple.v1(), result.payload().data()).         }         return new ChainInput.Result(results, new Payload.Simple(payloads)).     } catch (Exception e) {         logger.error("failed to execute [{}] input for watch [{}], reason [{}]", TYPE, ctx.watch().id(), e.getMessage()).         return new ChainInput.Result(e).     } }
