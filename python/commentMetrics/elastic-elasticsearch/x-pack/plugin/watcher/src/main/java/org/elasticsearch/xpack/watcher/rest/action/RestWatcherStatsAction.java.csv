commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return "watcher_stats". }
false;protected;2;20;;@Override protected RestChannelConsumer doPrepareRequest(final RestRequest restRequest, WatcherClient client) throws IOException {     Set<String> metrics = Strings.tokenizeByCommaToSet(restRequest.param("metric", "")).     WatcherStatsRequest request = new WatcherStatsRequest().     if (metrics.contains("_all")) {         request.includeCurrentWatches(true).         request.includeQueuedWatches(true).     } else {         request.includeCurrentWatches(metrics.contains("current_watches")).         request.includeQueuedWatches(metrics.contains("queued_watches") || metrics.contains("pending_watches")).     }     if (metrics.contains("pending_watches")) {         deprecationLogger.deprecated("The pending_watches parameter is deprecated, use queued_watches instead").     }     return channel -> client.watcherStats(request, new RestActions.NodesResponseRestListener<>(channel)). }
false;protected;0;6;;@Override protected Set<String> responseParams() {     // it's used in the WatchExecutionContext.toXContent() method     return RESPONSE_PARAMS. }
