commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Override public void setUp() throws Exception {     super.setUp().     server = EmailServer.localhost(logger). }
false;public;0;4;;@After public void cleanup() throws Exception {     server.stop(). }
false;protected;1;15;;@Override protected Settings nodeSettings(int nodeOrdinal) {     final MockSecureSettings secureSettings = new MockSecureSettings().     secureSettings.setString("xpack.notification.email.account.test.smtp.secure_password", EmailServer.PASSWORD).     return Settings.builder().put(super.nodeSettings(nodeOrdinal)).put("xpack.notification.email.account.test.smtp.auth", true).put("xpack.notification.email.account.test.smtp.user", EmailServer.USERNAME).put("xpack.notification.email.account.test.smtp.port", server.port()).put("xpack.notification.email.account.test.smtp.host", "localhost").setSecureSettings(secureSettings).build(). }
false;public;0;74;;public void testEmailFields() throws Exception {     PutWatchResponse putWatchResponse = watcherClient().preparePutWatch("_id").setSource(watchBuilder().trigger(schedule(interval("5s"))).input(simpleInput()).condition(InternalAlwaysCondition.INSTANCE).addAction("_email", emailAction(EmailTemplate.builder().from("from@example.com").to("to1@example.com", "to2@example.com").cc("cc1@example.com", "cc2@example.com").bcc("bcc1@example.com", "bcc2@example.com").replyTo("rt1@example.com", "rt2@example.com").subject("_subject").textBody("_body")))).get().     assertThat(putWatchResponse.isCreated(), is(true)).     timeWarp().trigger("_id").     flush().     refresh().     // the action should fail as no email server is available     assertWatchWithMinimumActionsCount("_id", ExecutionState.EXECUTED, 1).     SearchResponse response = client().prepareSearch(HistoryStoreField.INDEX_PREFIX_WITH_TEMPLATE + "*").setSource(searchSource().aggregation(terms("from").field("result.actions.email.message.from")).aggregation(terms("to").field("result.actions.email.message.to")).aggregation(terms("cc").field("result.actions.email.message.cc")).aggregation(terms("bcc").field("result.actions.email.message.bcc")).aggregation(terms("reply_to").field("result.actions.email.message.reply_to"))).get().     assertThat(response, notNullValue()).     assertThat(response.getHits().getTotalHits().value, is(1L)).     Aggregations aggs = response.getAggregations().     assertThat(aggs, notNullValue()).     Terms terms = aggs.get("from").     assertThat(terms, notNullValue()).     assertThat(terms.getBuckets().size(), is(1)).     assertThat(terms.getBucketByKey("from@example.com"), notNullValue()).     assertThat(terms.getBucketByKey("from@example.com").getDocCount(), is(1L)).     terms = aggs.get("to").     assertThat(terms, notNullValue()).     assertThat(terms.getBuckets().size(), is(2)).     assertThat(terms.getBucketByKey("to1@example.com"), notNullValue()).     assertThat(terms.getBucketByKey("to1@example.com").getDocCount(), is(1L)).     assertThat(terms.getBucketByKey("to2@example.com"), notNullValue()).     assertThat(terms.getBucketByKey("to2@example.com").getDocCount(), is(1L)).     terms = aggs.get("cc").     assertThat(terms, notNullValue()).     assertThat(terms.getBuckets().size(), is(2)).     assertThat(terms.getBucketByKey("cc1@example.com"), notNullValue()).     assertThat(terms.getBucketByKey("cc1@example.com").getDocCount(), is(1L)).     assertThat(terms.getBucketByKey("cc2@example.com"), notNullValue()).     assertThat(terms.getBucketByKey("cc2@example.com").getDocCount(), is(1L)).     terms = aggs.get("bcc").     assertThat(terms, notNullValue()).     assertThat(terms.getBuckets().size(), is(2)).     assertThat(terms.getBucketByKey("bcc1@example.com"), notNullValue()).     assertThat(terms.getBucketByKey("bcc1@example.com").getDocCount(), is(1L)).     assertThat(terms.getBucketByKey("bcc2@example.com"), notNullValue()).     assertThat(terms.getBucketByKey("bcc2@example.com").getDocCount(), is(1L)).     terms = aggs.get("reply_to").     assertThat(terms, notNullValue()).     assertThat(terms.getBuckets().size(), is(2)).     assertThat(terms.getBucketByKey("rt1@example.com"), notNullValue()).     assertThat(terms.getBucketByKey("rt1@example.com").getDocCount(), is(1L)).     assertThat(terms.getBucketByKey("rt2@example.com"), notNullValue()).     assertThat(terms.getBucketByKey("rt2@example.com").getDocCount(), is(1L)). }
