commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;public void testXContentSerializationOneSignedWatcher() throws Exception {     boolean manuallyStopped = randomBoolean().     WatcherMetaData watcherMetaData = new WatcherMetaData(manuallyStopped).     XContentBuilder builder = XContentFactory.jsonBuilder().     builder.startObject().     builder.startObject("watcher").     watcherMetaData.toXContent(builder, ToXContent.EMPTY_PARAMS).     builder.endObject().     builder.endObject().     WatcherMetaData watchersMetaDataFromXContent = getWatcherMetaDataFromXContent(createParser(builder)).     assertThat(watchersMetaDataFromXContent.manuallyStopped(), equalTo(manuallyStopped)). }
false;public;0;28;;public void testWatcherMetadataParsingDoesNotSwallowOtherMetaData() throws Exception {     Settings settings = Settings.builder().put("path.home", createTempDir()).build().     // makes sure WatcherMetaData is registered in Custom MetaData     new Watcher(settings).     boolean manuallyStopped = randomBoolean().     WatcherMetaData watcherMetaData = new WatcherMetaData(manuallyStopped).     RepositoryMetaData repositoryMetaData = new RepositoryMetaData("repo", "fs", Settings.EMPTY).     RepositoriesMetaData repositoriesMetaData = new RepositoriesMetaData(Collections.singletonList(repositoryMetaData)).     final MetaData.Builder metaDataBuilder = MetaData.builder().     if (randomBoolean()) {         // random order of insertion         metaDataBuilder.putCustom(watcherMetaData.getWriteableName(), watcherMetaData).         metaDataBuilder.putCustom(repositoriesMetaData.getWriteableName(), repositoriesMetaData).     } else {         metaDataBuilder.putCustom(repositoriesMetaData.getWriteableName(), repositoriesMetaData).         metaDataBuilder.putCustom(watcherMetaData.getWriteableName(), watcherMetaData).     }     // serialize metadata     XContentBuilder builder = XContentFactory.jsonBuilder().     ToXContent.Params params = new ToXContent.MapParams(Collections.singletonMap(MetaData.CONTEXT_MODE_PARAM, MetaData.CONTEXT_MODE_GATEWAY)).     builder.startObject().     builder = metaDataBuilder.build().toXContent(builder, params).     builder.endObject().     // deserialize metadata again     MetaData metaData = MetaData.Builder.fromXContent(createParser(builder)).     // check that custom metadata still present     assertThat(metaData.custom(watcherMetaData.getWriteableName()), notNullValue()).     assertThat(metaData.custom(repositoriesMetaData.getWriteableName()), notNullValue()). }
false;private,static;1;8;;private static WatcherMetaData getWatcherMetaDataFromXContent(XContentParser parser) throws Exception {     // consume null     parser.nextToken().     // consume "watcher"     parser.nextToken().     WatcherMetaData watcherMetaDataFromXContent = (WatcherMetaData) WatcherMetaData.fromXContent(parser).     // consume endObject     parser.nextToken().     assertThat(parser.nextToken(), nullValue()).     return watcherMetaDataFromXContent. }
false;protected;0;7;;@Override protected NamedXContentRegistry xContentRegistry() {     return new NamedXContentRegistry(Stream.concat(new XPackClientPlugin(Settings.builder().put("path.home", createTempDir()).build()).getNamedXContent().stream(), ClusterModule.getNamedXWriteables().stream()).collect(Collectors.toList())). }
