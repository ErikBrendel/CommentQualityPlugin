commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;public void testExecute() throws Exception {     ExecutableCondition executable = NeverCondition.INSTANCE.     assertFalse(executable.execute(null).met()). }
false;public;0;10;;public void testParserValid() throws Exception {     XContentBuilder builder = jsonBuilder().     builder.startObject().     builder.endObject().     XContentParser parser = createParser(builder).     parser.nextToken().     ExecutableCondition executable = NeverCondition.parse("_id", parser).     assertFalse(executable.execute(null).met()). }
false;public;0;15;;public void testParserInvalid() throws Exception {     XContentBuilder builder = jsonBuilder().     builder.startObject().     builder.field("foo", "bar").     builder.endObject().     XContentParser parser = createParser(builder).     parser.nextToken().     try {         NeverCondition.parse("_id", parser).         fail("expected a condition exception trying to parse an invalid condition XContent, [" + InternalAlwaysCondition.TYPE + "] condition should not parse with a body").     } catch (ElasticsearchParseException e) {         assertThat(e.getMessage(), containsString("expected an empty object but found [foo]")).     } }
