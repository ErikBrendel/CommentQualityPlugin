commented;modifiers;parameterAmount;loc;comment;code
false;public;0;25;;public void testTimeThrottle() {     String id = randomAlphaOfLength(20).     PutWatchResponse putWatchResponse = watcherClient().preparePutWatch().setId(id).setSource(watchBuilder().trigger(schedule(interval("5s"))).input(simpleInput()).addAction("my-logging-action", loggingAction("foo")).defaultThrottlePeriod(TimeValue.timeValueSeconds(30))).get().     assertThat(putWatchResponse.isCreated(), is(true)).     timeWarp().trigger(id).     assertHistoryEntryExecuted(id).     timeWarp().clock().fastForward(TimeValue.timeValueMillis(4000)).     timeWarp().trigger(id).     assertHistoryEntryThrottled(id).     timeWarp().clock().fastForwardSeconds(30).     timeWarp().trigger(id).     assertHistoryEntryExecuted(id).     assertTotalHistoryEntries(id, 3). }
false;public;0;24;;public void testTimeThrottleDefaults() {     String id = randomAlphaOfLength(30).     PutWatchResponse putWatchResponse = watcherClient().preparePutWatch().setId(id).setSource(watchBuilder().trigger(schedule(interval("1s"))).input(simpleInput()).addAction("my-logging-action", indexAction("my_watcher_index", "action"))).get().     assertThat(putWatchResponse.isCreated(), is(true)).     timeWarp().trigger(id).     assertHistoryEntryExecuted(id).     timeWarp().clock().fastForwardSeconds(2).     timeWarp().trigger(id).     assertHistoryEntryThrottled(id).     timeWarp().clock().fastForwardSeconds(10).     timeWarp().trigger(id).     assertHistoryEntryExecuted(id).     assertTotalHistoryEntries(id, 3). }
false;private;1;5;;private void assertHistoryEntryExecuted(String id) {     Map<String, Object> map = assertLatestHistoryEntry(id).     String actionStatus = ObjectPath.eval("result.actions.0.status", map).     assertThat(actionStatus, is("success")). }
false;private;1;5;;private void assertHistoryEntryThrottled(String id) {     Map<String, Object> map = assertLatestHistoryEntry(id).     String actionStatus = ObjectPath.eval("result.actions.0.status", map).     assertThat(actionStatus, is("throttled")). }
false;private;1;15;;private Map<String, Object> assertLatestHistoryEntry(String id) {     refresh(HistoryStoreField.INDEX_PREFIX_WITH_TEMPLATE + "*").     SearchResponse searchResponse = client().prepareSearch(HistoryStoreField.INDEX_PREFIX_WITH_TEMPLATE + "*").setSize(1).setSource(new SearchSourceBuilder().query(QueryBuilders.boolQuery().must(termQuery("watch_id", id)))).addSort(SortBuilders.fieldSort("result.execution_time").order(SortOrder.DESC)).get().     Map<String, Object> map = searchResponse.getHits().getHits()[0].getSourceAsMap().     String actionId = ObjectPath.eval("result.actions.0.id", map).     assertThat(actionId, is("my-logging-action")).     return map. }
false;private;2;8;;private void assertTotalHistoryEntries(String id, long expectedCount) {     SearchResponse searchResponse = client().prepareSearch(HistoryStoreField.INDEX_PREFIX_WITH_TEMPLATE + "*").setSize(0).setSource(new SearchSourceBuilder().query(QueryBuilders.boolQuery().must(termQuery("watch_id", id)))).get().     assertHitCount(searchResponse, expectedCount). }
