commented;modifiers;parameterAmount;loc;comment;code
false;public;0;21;;public void testSerializationWorks() throws Exception {     Map<String, EmailAttachmentParser> attachmentParsers = new HashMap<>().     attachmentParsers.put(DataAttachmentParser.TYPE, new DataAttachmentParser()).     EmailAttachmentsParser emailAttachmentsParser = new EmailAttachmentsParser(attachmentParsers).     String id = "some-id".     XContentBuilder builder = jsonBuilder().startObject().startObject(id).startObject(DataAttachmentParser.TYPE).field("format", randomFrom("yaml", "json")).endObject().endObject().endObject().     XContentParser parser = createParser(JsonXContent.jsonXContent, BytesReference.bytes(builder)).     logger.info("JSON: {}", Strings.toString(builder)).     EmailAttachments emailAttachments = emailAttachmentsParser.parse(parser).     assertThat(emailAttachments.getAttachments(), hasSize(1)).     XContentBuilder toXcontentBuilder = jsonBuilder().startObject().     List<EmailAttachmentParser.EmailAttachment> attachments = new ArrayList<>(emailAttachments.getAttachments()).     attachments.get(0).toXContent(toXcontentBuilder, ToXContent.EMPTY_PARAMS).     toXcontentBuilder.endObject().     assertThat(Strings.toString(toXcontentBuilder), is(Strings.toString(builder))). }
