commented;modifiers;parameterAmount;loc;comment;code
false;public;0;20;;public void testThatFlagsCanBeSpecifiedViaParameters() throws Exception {     String randomId = randomAlphaOfLength(10).     for (String recordExecution : Arrays.asList("true", "false", null)) {         for (String ignoreCondition : Arrays.asList("true", "false", null)) {             for (String debugCondition : Arrays.asList("true", "false", null)) {                 ExecuteWatchRequestBuilder builder = new ExecuteWatchRequestBuilder(client).                 when(watcherClient.prepareExecuteWatch()).thenReturn(builder).                 RestExecuteWatchAction restExecuteWatchAction = new RestExecuteWatchAction(Settings.EMPTY, restController).                 restExecuteWatchAction.doPrepareRequest(createFakeRestRequest(randomId, recordExecution, ignoreCondition, debugCondition), watcherClient).                 assertThat(builder.request().getId(), is(randomId)).                 assertThat(builder.request().isRecordExecution(), is(Boolean.parseBoolean(recordExecution))).                 assertThat(builder.request().isIgnoreCondition(), is(Boolean.parseBoolean(ignoreCondition))).                 assertThat(builder.request().isDebug(), is(Boolean.parseBoolean(debugCondition))).             }         }     } }
false;private;4;13;;private FakeRestRequest createFakeRestRequest(String randomId, String recordExecution, String ignoreCondition, String debugCondition) {     FakeRestRequest.Builder builder = new Builder(NamedXContentRegistry.EMPTY).     builder.withContent(new BytesArray("{}"), XContentType.JSON).     Map<String, String> params = new HashMap<>().     params.put("id", randomId).     // make sure we test true/false/no params     if (recordExecution != null)         params.put("record_execution", recordExecution).     if (ignoreCondition != null)         params.put("ignore_condition", ignoreCondition).     if (debugCondition != null)         params.put("debug", debugCondition).     builder.withParams(params).     return builder.build(). }
