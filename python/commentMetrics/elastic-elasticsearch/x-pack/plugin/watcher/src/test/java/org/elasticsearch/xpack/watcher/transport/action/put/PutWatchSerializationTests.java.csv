commented;modifiers;parameterAmount;loc;comment;code
true;public;0;19;// https://github.com/elastic/x-plugins/issues/2490 ;// https://github.com/elastic/x-plugins/issues/2490 public void testPutWatchSerialization() throws Exception {     PutWatchRequest request = new PutWatchRequest().     request.setId(randomAlphaOfLength(10)).     request.setActive(randomBoolean()).     request.setSource(new BytesArray(Strings.toString(JsonXContent.contentBuilder().startObject().field("foo", randomAlphaOfLength(20)).endObject())), XContentType.JSON).     BytesStreamOutput streamOutput = new BytesStreamOutput().     request.writeTo(streamOutput).     PutWatchRequest readRequest = new PutWatchRequest(streamOutput.bytes().streamInput()).     assertThat(readRequest.isActive(), is(request.isActive())).     assertThat(readRequest.getId(), is(request.getId())).     assertThat(readRequest.getSource(), is(request.getSource())).     assertThat(readRequest.xContentType(), is(request.xContentType())).     assertThat(readRequest.getVersion(), is(request.getVersion())). }
false;public;0;20;;public void testPutWatchSerializationXContent() throws Exception {     PutWatchRequest request = new PutWatchRequest().     request.setId(randomAlphaOfLength(10)).     request.setActive(randomBoolean()).     request.setSource(new BytesArray(Strings.toString(JsonXContent.contentBuilder().startObject().field("foo", randomAlphaOfLength(20)).endObject())), XContentType.JSON).     assertEquals(XContentType.JSON, request.xContentType()).     BytesStreamOutput streamOutput = new BytesStreamOutput().     request.writeTo(streamOutput).     PutWatchRequest readRequest = new PutWatchRequest(streamOutput.bytes().streamInput()).     assertThat(readRequest.isActive(), is(request.isActive())).     assertThat(readRequest.getId(), is(request.getId())).     assertThat(readRequest.getSource(), is(request.getSource())).     assertThat(readRequest.xContentType(), is(XContentType.JSON)).     assertThat(readRequest.getVersion(), is(Versions.MATCH_ANY)). }
