commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;public void testAcknowledgeWatchInvalidWatchId() {     ActionRequestValidationException e = new AckWatchRequest("id with whitespaces").validate().     assertThat(e, is(notNullValue())).     assertThat(e.validationErrors(), hasItem("watch id contains whitespace")). }
false;public;0;5;;public void testAcknowledgeWatchInvalidActionId() {     ActionRequestValidationException e = new AckWatchRequest("_id", "action id with whitespaces").validate().     assertThat(e, is(notNullValue())).     assertThat(e.validationErrors(), hasItem("action id [action id with whitespaces] contains whitespace")). }
false;public;0;6;;public void testAcknowledgeWatchNullActionArray() {     // need this to prevent some compilation errors, i.e. in 1.8.0_91     String[] nullArray = null.     ActionRequestValidationException e = new AckWatchRequest("_id", nullArray).validate().     assertThat(e, is(nullValue())). }
false;public;0;5;;public void testAcknowledgeWatchNullActionId() {     ActionRequestValidationException e = new AckWatchRequest("_id", new String[] { null }).validate().     assertThat(e, is(notNullValue())).     assertThat(e.validationErrors(), hasItem("action id may not be null")). }
false;public;0;5;;public void testActivateWatchInvalidWatchId() {     ActionRequestValidationException e = new ActivateWatchRequest("id with whitespaces", randomBoolean()).validate().     assertThat(e, is(notNullValue())).     assertThat(e.validationErrors(), hasItem("watch id contains whitespace")). }
false;public;0;5;;public void testDeleteWatchInvalidWatchId() {     ActionRequestValidationException e = new DeleteWatchRequest("id with whitespaces").validate().     assertThat(e, is(notNullValue())).     assertThat(e.validationErrors(), hasItem("watch id contains whitespace")). }
false;public;0;5;;public void testDeleteWatchNullId() {     ActionRequestValidationException e = new DeleteWatchRequest(null).validate().     assertThat(e, is(notNullValue())).     assertThat(e.validationErrors(), hasItem("watch id is missing")). }
false;public;0;5;;public void testPutWatchInvalidWatchId() {     ActionRequestValidationException e = new PutWatchRequest("id with whitespaces", BytesArray.EMPTY, XContentType.JSON).validate().     assertThat(e, is(notNullValue())).     assertThat(e.validationErrors(), hasItem("watch id contains whitespace")). }
false;public;0;5;;public void testPutWatchNullId() {     ActionRequestValidationException e = new PutWatchRequest(null, BytesArray.EMPTY, XContentType.JSON).validate().     assertThat(e, is(notNullValue())).     assertThat(e.validationErrors(), hasItem("watch id is missing")). }
false;public;0;5;;public void testPutWatchSourceNull() {     ActionRequestValidationException e = new PutWatchRequest("foo", (BytesReference) null, XContentType.JSON).validate().     assertThat(e, is(notNullValue())).     assertThat(e.validationErrors(), hasItem("watch source is missing")). }
false;public;0;5;;public void testPutWatchContentNull() {     ActionRequestValidationException e = new PutWatchRequest("foo", BytesArray.EMPTY, null).validate().     assertThat(e, is(notNullValue())).     assertThat(e.validationErrors(), hasItem("request body is missing")). }
false;public;0;5;;public void testGetWatchInvalidWatchId() {     ActionRequestValidationException e = new GetWatchRequest("id with whitespaces").validate().     assertThat(e, is(notNullValue())).     assertThat(e.validationErrors(), hasItem("watch id contains whitespace")). }
false;public;0;5;;public void testGetWatchNullId() {     ActionRequestValidationException e = new GetWatchRequest((String) null).validate().     assertThat(e, is(notNullValue())).     assertThat(e.validationErrors(), hasItem("watch id is missing")). }
false;public;0;5;;public void testExecuteWatchInvalidWatchId() {     ActionRequestValidationException e = new ExecuteWatchRequest("id with whitespaces").validate().     assertThat(e, is(notNullValue())).     assertThat(e.validationErrors(), hasItem("watch id contains whitespace")). }
false;public;0;6;;public void testExecuteWatchMissingWatchIdNoSource() {     ActionRequestValidationException e = new ExecuteWatchRequest((String) null).validate().     assertThat(e, is(notNullValue())).     assertThat(e.validationErrors(), hasItem("a watch execution request must either have a watch id or an inline watch source, but both are missing")). }
false;public;0;7;;public void testExecuteWatchInvalidActionId() {     ExecuteWatchRequest request = new ExecuteWatchRequest("foo").     request.setActionMode("foo bar baz", ActionExecutionMode.EXECUTE).     ActionRequestValidationException e = request.validate().     assertThat(e, is(notNullValue())).     assertThat(e.validationErrors(), hasItem("action id [foo bar baz] contains whitespace")). }
false;public;0;8;;public void testExecuteWatchWatchIdAndSource() {     ExecuteWatchRequest request = new ExecuteWatchRequest("foo").     request.setWatchSource(BytesArray.EMPTY, XContentType.JSON).     ActionRequestValidationException e = request.validate().     assertThat(e, is(notNullValue())).     assertThat(e.validationErrors(), hasItem("a watch execution request must either have a watch id or an inline watch source but not both")). }
false;public;0;8;;public void testExecuteWatchSourceAndRecordExecution() {     ExecuteWatchRequest request = new ExecuteWatchRequest().     request.setWatchSource(BytesArray.EMPTY, XContentType.JSON).     request.setRecordExecution(true).     ActionRequestValidationException e = request.validate().     assertThat(e, is(notNullValue())).     assertThat(e.validationErrors(), hasItem("the execution of an inline watch cannot be recorded")). }
false;public;0;7;;public void testExecuteWatchNullActionMode() {     ExecuteWatchRequest request = new ExecuteWatchRequest().     request.setActionMode(null, ActionExecutionMode.EXECUTE).     ActionRequestValidationException e = request.validate().     assertThat(e, is(notNullValue())).     assertThat(e.validationErrors(), hasItem("action id may not be null")). }
