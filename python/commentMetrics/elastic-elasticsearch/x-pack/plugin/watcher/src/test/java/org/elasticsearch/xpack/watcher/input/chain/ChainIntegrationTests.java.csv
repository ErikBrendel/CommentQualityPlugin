commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected boolean addMockHttpTransport() {     // enable http     return false. }
false;protected;1;6;;@Override protected Settings nodeSettings(int nodeOrdinal) {     return Settings.builder().put(super.nodeSettings(nodeOrdinal)).build(). }
false;protected;0;6;;@Override protected Collection<Class<? extends Plugin>> nodePlugins() {     ArrayList<Class<? extends Plugin>> plugins = new ArrayList<>(super.nodePlugins()).     // for http     plugins.add(Netty4Plugin.class).     return plugins. }
false;public;0;26;;public void testChainedInputsAreWorking() throws Exception {     String index = "the-most-awesome-index-ever".     createIndex(index).     client().prepareIndex(index, "type", "id").setSource("{}", XContentType.JSON).setRefreshPolicy(IMMEDIATE).get().     InetSocketAddress address = internalCluster().httpAddresses()[0].     HttpInput.Builder httpInputBuilder = httpInput(HttpRequestTemplate.builder(address.getHostString(), address.getPort()).path("/" + index + "/_search").body(Strings.toString(jsonBuilder().startObject().field("size", 1).endObject()))).     ChainInput.Builder chainedInputBuilder = chainInput().add("first", simpleInput("url", "/" + index + "/_search")).add("second", httpInputBuilder).     watcherClient().preparePutWatch("_name").setSource(watchBuilder().trigger(schedule(interval(5, SECONDS))).input(chainedInputBuilder).addAction("indexAction", indexAction("my-index", "my-type"))).get().     timeWarp().trigger("_name").     refresh().     assertWatchWithMinimumPerformedActionsCount("_name", 1, false). }
false;public;0;10;;public void assertWatchExecuted() {     try {         refresh().         SearchResponse searchResponse = client().prepareSearch("my-index").setTypes("my-type").get().         assertHitCount(searchResponse, 1).         assertThat(searchResponse.getHits().getAt(0).getSourceAsString(), containsString("the-most-awesome-index-ever")).     } catch (IndexNotFoundException e) {         fail("Index not found: [" + e.getIndex() + "]").     } }
