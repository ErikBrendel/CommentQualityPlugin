commented;modifiers;parameterAmount;loc;comment;code
true;public;0;49;/**  * This test makes sure that when an action encounters an error it should  * not be subject to throttling. Also, the ack status of the action in the  * watch should remain awaits_successful_execution as long as the execution  * fails.  */ ;/**  * This test makes sure that when an action encounters an error it should  * not be subject to throttling. Also, the ack status of the action in the  * watch should remain awaits_successful_execution as long as the execution  * fails.  */ public void testErrorInAction() throws Exception {     createIndex("foo").     client().admin().indices().prepareUpdateSettings("foo").setSettings(Settings.builder().put("index.blocks.write", true)).get().     PutWatchResponse putWatchResponse = watcherClient().preparePutWatch("_id").setSource(watchBuilder().trigger(schedule(interval("10m"))).addAction("_action", TimeValue.timeValueMinutes(60), IndexAction.builder("foo", "bar"))).get().     assertThat(putWatchResponse.isCreated(), is(true)).     timeWarp().trigger("_id").     flush().     // there should be a single history record with a failure status for the action:     assertBusy(() -> {         long count = watchRecordCount(QueryBuilders.boolQuery().must(termsQuery("result.actions.id", "_action")).must(termsQuery("result.actions.status", "failure"))).         assertThat(count, is(1L)).     }).     // now we'll trigger the watch again and make sure that it's not throttled and instead     // writes another record to the history     // within the 60 minute throttling period     timeWarp().clock().fastForward(TimeValue.timeValueMinutes(randomIntBetween(1, 50))).     timeWarp().trigger("_id").     flush().     // there should be a single history record with a failure status for the action:     assertBusy(() -> {         long count = watchRecordCount(QueryBuilders.boolQuery().must(termsQuery("result.actions.id", "_action")).must(termsQuery("result.actions.status", "failure"))).         assertThat(count, is(2L)).     }).     // now lets confirm that the ack status of the action is awaits_successful_execution     GetWatchResponse getWatchResponse = watcherClient().prepareGetWatch("_id").get().     XContentSource watch = getWatchResponse.getSource().     watch.getValue("status.actions._action.ack.awaits_successful_execution"). }
