commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected String executor() {     return ThreadPool.Names.SAME. }
false;protected;0;4;;@Override protected Response newResponse() {     return new Response(). }
false;public;1;5;;@Override public ClusterState execute(ClusterState currentState) {     return indexLifecycleService.moveClusterStateToStep(currentState, request.getIndex(), request.getCurrentStepKey(), request.getNextStepKey()). }
false;public;3;11;;@Override public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {     IndexMetaData newIndexMetaData = newState.metaData().index(indexMetaData.getIndex()).     if (newIndexMetaData == null) {         // The index has somehow been deleted - there shouldn't be any opportunity for this to happen, but just in case.         logger.debug("index [" + indexMetaData.getIndex() + "] has been deleted after moving to step [" + request.getNextStepKey() + "], skipping async action check").         return.     }     indexLifecycleService.maybeRunAsyncAction(newState, newIndexMetaData, request.getNextStepKey()). }
false;protected;1;4;;@Override protected Response newResponse(boolean acknowledged) {     return new Response(acknowledged). }
false;protected;3;33;;@Override protected void masterOperation(Request request, ClusterState state, ActionListener<Response> listener) {     IndexMetaData indexMetaData = state.metaData().index(request.getIndex()).     if (indexMetaData == null) {         listener.onFailure(new IllegalArgumentException("index [" + request.getIndex() + "] does not exist")).         return.     }     clusterService.submitStateUpdateTask("index[" + request.getIndex() + "]-move-to-step", new AckedClusterStateUpdateTask<Response>(request, listener) {          @Override         public ClusterState execute(ClusterState currentState) {             return indexLifecycleService.moveClusterStateToStep(currentState, request.getIndex(), request.getCurrentStepKey(), request.getNextStepKey()).         }          @Override         public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {             IndexMetaData newIndexMetaData = newState.metaData().index(indexMetaData.getIndex()).             if (newIndexMetaData == null) {                 // The index has somehow been deleted - there shouldn't be any opportunity for this to happen, but just in case.                 logger.debug("index [" + indexMetaData.getIndex() + "] has been deleted after moving to step [" + request.getNextStepKey() + "], skipping async action check").                 return.             }             indexLifecycleService.maybeRunAsyncAction(newState, newIndexMetaData, request.getNextStepKey()).         }          @Override         protected Response newResponse(boolean acknowledged) {             return new Response(acknowledged).         }     }). }
false;protected;2;4;;@Override protected ClusterBlockException checkBlock(Request request, ClusterState state) {     return state.blocks().globalBlockedException(ClusterBlockLevel.METADATA_WRITE). }
