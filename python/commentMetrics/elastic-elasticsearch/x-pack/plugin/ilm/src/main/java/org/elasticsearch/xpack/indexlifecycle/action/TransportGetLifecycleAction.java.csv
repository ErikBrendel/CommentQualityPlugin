commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected String executor() {     return ThreadPool.Names.SAME. }
false;protected;0;4;;@Override protected Response newResponse() {     return new Response(). }
false;protected;3;34;;@Override protected void masterOperation(Request request, ClusterState state, ActionListener<Response> listener) {     IndexLifecycleMetadata metadata = clusterService.state().metaData().custom(IndexLifecycleMetadata.TYPE).     if (metadata == null) {         if (request.getPolicyNames().length == 0) {             listener.onResponse(new Response(Collections.emptyList())).         } else {             listener.onFailure(new ResourceNotFoundException("Lifecycle policy not found: {}", Arrays.toString(request.getPolicyNames()))).         }     } else {         List<LifecyclePolicyResponseItem> requestedPolicies.         // if no policies explicitly provided, behave as if `*` was specified         if (request.getPolicyNames().length == 0) {             requestedPolicies = new ArrayList<>(metadata.getPolicyMetadatas().size()).             for (LifecyclePolicyMetadata policyMetadata : metadata.getPolicyMetadatas().values()) {                 requestedPolicies.add(new LifecyclePolicyResponseItem(policyMetadata.getPolicy(), policyMetadata.getVersion(), policyMetadata.getModifiedDateString())).             }         } else {             requestedPolicies = new ArrayList<>(request.getPolicyNames().length).             for (String name : request.getPolicyNames()) {                 LifecyclePolicyMetadata policyMetadata = metadata.getPolicyMetadatas().get(name).                 if (policyMetadata == null) {                     listener.onFailure(new ResourceNotFoundException("Lifecycle policy not found: {}", name)).                     return.                 }                 requestedPolicies.add(new LifecyclePolicyResponseItem(policyMetadata.getPolicy(), policyMetadata.getVersion(), policyMetadata.getModifiedDateString())).             }         }         listener.onResponse(new Response(requestedPolicies)).     } }
false;protected;2;4;;@Override protected ClusterBlockException checkBlock(Request request, ClusterState state) {     return state.blocks().globalBlockedException(ClusterBlockLevel.METADATA_WRITE). }
