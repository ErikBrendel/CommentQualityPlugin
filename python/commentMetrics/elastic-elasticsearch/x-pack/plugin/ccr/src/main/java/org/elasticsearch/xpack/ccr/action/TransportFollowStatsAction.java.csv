commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;20;;@Override protected void doExecute(final Task task, final FollowStatsAction.StatsRequest request, final ActionListener<FollowStatsAction.StatsResponses> listener) {     if (ccrLicenseChecker.isCcrAllowed() == false) {         listener.onFailure(LicenseUtils.newComplianceException("ccr")).         return.     }     if (Strings.isAllOrWildcard(request.indices()) == false) {         final ClusterState state = clusterService.state().         Set<String> shardFollowTaskFollowerIndices = findFollowerIndicesFromShardFollowTasks(state, request.indices()).         if (shardFollowTaskFollowerIndices.isEmpty()) {             String resources = String.join(",", request.indices()).             throw new ResourceNotFoundException("No shard follow tasks for follower indices [{}]", resources).         }     }     super.doExecute(task, request, listener). }
false;protected;4;8;;@Override protected FollowStatsAction.StatsResponses newResponse(final FollowStatsAction.StatsRequest request, final List<FollowStatsAction.StatsResponse> statsRespons, final List<TaskOperationFailure> taskOperationFailures, final List<FailedNodeException> failedNodeExceptions) {     return new FollowStatsAction.StatsResponses(taskOperationFailures, failedNodeExceptions, statsRespons). }
false;protected;2;14;;@Override protected void processTasks(final FollowStatsAction.StatsRequest request, final Consumer<ShardFollowNodeTask> operation) {     final ClusterState state = clusterService.state().     final Set<String> followerIndices = findFollowerIndicesFromShardFollowTasks(state, request.indices()).     for (final Task task : taskManager.getTasks().values()) {         if (task instanceof ShardFollowNodeTask) {             final ShardFollowNodeTask shardFollowNodeTask = (ShardFollowNodeTask) task.             if (followerIndices.contains(shardFollowNodeTask.getFollowShardId().getIndexName())) {                 operation.accept(shardFollowNodeTask).             }         }     } }
false;protected;3;7;;@Override protected void taskOperation(final FollowStatsAction.StatsRequest request, final ShardFollowNodeTask task, final ActionListener<FollowStatsAction.StatsResponse> listener) {     listener.onResponse(new FollowStatsAction.StatsResponse(task.getStatus())). }
false;static;2;17;;static Set<String> findFollowerIndicesFromShardFollowTasks(ClusterState state, String[] indices) {     final PersistentTasksCustomMetaData persistentTasksMetaData = state.metaData().custom(PersistentTasksCustomMetaData.TYPE).     if (persistentTasksMetaData == null) {         return Collections.emptySet().     }     final Set<String> requestedFollowerIndices = indices != null ? new HashSet<>(Arrays.asList(indices)) : Collections.emptySet().     return persistentTasksMetaData.tasks().stream().filter(persistentTask -> persistentTask.getTaskName().equals(ShardFollowTask.NAME)).map(persistentTask -> {         ShardFollowTask shardFollowTask = (ShardFollowTask) persistentTask.getParams().         return shardFollowTask.getFollowShardId().getIndexName().     }).filter(followerIndex -> Strings.isAllOrWildcard(indices) || requestedFollowerIndices.contains(followerIndex)).collect(Collectors.toSet()). }
