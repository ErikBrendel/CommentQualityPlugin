# id;timestamp;commentText;codeText;commentWords;codeWords
Ccr -> public List<Setting<?>> getSettings();1535965276;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1536218260;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1536611444;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1536828374;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1536964057;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1537806831;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1538067637;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1538170812;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1538424609;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1538509426;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1539615817;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1540486836;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1540847035;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1541092382;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1541643651;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1543959410;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1544013554;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1544022707;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1544221624;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1544615244;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1545052496;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1545077972;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1545157393;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1545381400;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1545634431;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1547496475;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1547625930;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1547762326;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1547825841;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1547848100;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1547854281;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1548268873;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1548349980;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1548664204;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1548831506;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1549663373;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> public List<Setting<?>> getSettings();1550243660;The settings defined by CCR.__@return the settings;public List<Setting<?>> getSettings() {_        return CcrSettings.getSettings()__    };the,settings,defined,by,ccr,return,the,settings;public,list,setting,get,settings,return,ccr,settings,get,settings
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1535965276;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1536218260;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1536611444;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1536828374;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1536964057;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1537806831;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1538067637;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1538170812;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1538424609;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1538509426;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1539615817;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1540486836;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1540847035;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1541092382;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1541643651;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1543959410;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1544013554;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1544022707;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1544221624;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1544615244;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1545052496;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1545077972;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1545157393;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1545381400;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1545634431;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1547496475;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1547625930;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1547762326;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1547825841;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1547848100;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1547854281;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1548268873;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1548349980;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1548664204;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1548831506;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1549663373;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> @SuppressWarnings("unused")      public Ccr(final Settings settings);1550243660;Construct an instance of the CCR container with the specified settings.__@param settings the settings;@SuppressWarnings("unused") _    public Ccr(final Settings settings) {_        this(settings, new CcrLicenseChecker())__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,param,settings,the,settings;suppress,warnings,unused,public,ccr,final,settings,settings,this,settings,new,ccr,license,checker
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1535965276;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1536218260;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1536611444;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1536828374;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1536964057;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1537806831;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1538067637;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1538170812;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1538424609;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1538509426;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1539615817;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1540486836;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1540847035;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1541092382;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1541643651;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1543959410;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1544013554;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1544022707;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1544221624;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1544615244;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1545052496;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1545077972;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1545157393;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1545381400;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1545634431;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1547496475;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1547625930;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1547762326;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1547825841;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1547848100;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1547854281;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1548268873;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1548349980;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1548664204;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1548831506;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1549663373;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings);1550243660;The optional engine factory for CCR. This method inspects the index settings for the {@link CcrSettings#CCR_FOLLOWING_INDEX_SETTING}_setting to determine whether or not the engine implementation should be a following engine.__@return the optional engine factory;public Optional<EngineFactory> getEngineFactory(final IndexSettings indexSettings) {_        if (CCR_FOLLOWING_INDEX_SETTING.get(indexSettings.getSettings())) {_            return Optional.of(new FollowingEngineFactory())__        } else {_            return Optional.empty()__        }_    };the,optional,engine,factory,for,ccr,this,method,inspects,the,index,settings,for,the,link,ccr,settings,setting,to,determine,whether,or,not,the,engine,implementation,should,be,a,following,engine,return,the,optional,engine,factory;public,optional,engine,factory,get,engine,factory,final,index,settings,index,settings,if,get,index,settings,get,settings,return,optional,of,new,following,engine,factory,else,return,optional,empty
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1535965276;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1536218260;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1536611444;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1536828374;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1536964057;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1537806831;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1538067637;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1538170812;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1538424609;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1538509426;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1539615817;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1540486836;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1540847035;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1541092382;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1541643651;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1543959410;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1544013554;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1544022707;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1544221624;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1544615244;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1545052496;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1545077972;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1545157393;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1545381400;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1545634431;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1547496475;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1547625930;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1547762326;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1547825841;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1547848100;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1547854281;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1548268873;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1548349980;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1548664204;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1548831506;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__        this.transportClientMode = XPackPlugin.transportClientMode(settings)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker,this,transport,client,mode,xpack,plugin,transport,client,mode,settings
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1549663373;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__        this.transportClientMode = XPackPlugin.transportClientMode(settings)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker,this,transport,client,mode,xpack,plugin,transport,client,mode,settings
Ccr -> Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker);1550243660;Construct an instance of the CCR container with the specified settings and license checker.__@param settings          the settings_@param ccrLicenseChecker the CCR license checker;Ccr(final Settings settings, final CcrLicenseChecker ccrLicenseChecker) {_        this.settings = settings__        this.enabled = CCR_ENABLED_SETTING.get(settings)__        this.ccrLicenseChecker = Objects.requireNonNull(ccrLicenseChecker)__        this.transportClientMode = XPackPlugin.transportClientMode(settings)__    };construct,an,instance,of,the,ccr,container,with,the,specified,settings,and,license,checker,param,settings,the,settings,param,ccr,license,checker,the,ccr,license,checker;ccr,final,settings,settings,final,ccr,license,checker,ccr,license,checker,this,settings,settings,this,enabled,get,settings,this,ccr,license,checker,objects,require,non,null,ccr,license,checker,this,transport,client,mode,xpack,plugin,transport,client,mode,settings
