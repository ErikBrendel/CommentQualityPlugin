# id;timestamp;commentText;codeText;commentWords;codeWords
CcrRetentionLeases -> public static void asyncRemoveRetentionLease(             final ShardId leaderShardId,             final String retentionLeaseId,             final Client remoteClient,             final ActionListener<RetentionLeaseActions.Response> listener);1550664347;Asynchronously requests to remove a retention lease with the specified retention lease ID on the specified leader shard using the_given remote client. Note that this method will return immediately, with the specified listener callback invoked to indicate a_response or failure.__@param leaderShardId    the leader shard ID_@param retentionLeaseId the retention lease ID_@param remoteClient     the remote client on which to execute this request_@param listener         the listener;public static void asyncRemoveRetentionLease(_            final ShardId leaderShardId,_            final String retentionLeaseId,_            final Client remoteClient,_            final ActionListener<RetentionLeaseActions.Response> listener) {_        final RetentionLeaseActions.RemoveRequest request = new RetentionLeaseActions.RemoveRequest(leaderShardId, retentionLeaseId)__        remoteClient.execute(RetentionLeaseActions.Remove.INSTANCE, request, listener)__    };asynchronously,requests,to,remove,a,retention,lease,with,the,specified,retention,lease,id,on,the,specified,leader,shard,using,the,given,remote,client,note,that,this,method,will,return,immediately,with,the,specified,listener,callback,invoked,to,indicate,a,response,or,failure,param,leader,shard,id,the,leader,shard,id,param,retention,lease,id,the,retention,lease,id,param,remote,client,the,remote,client,on,which,to,execute,this,request,param,listener,the,listener;public,static,void,async,remove,retention,lease,final,shard,id,leader,shard,id,final,string,retention,lease,id,final,client,remote,client,final,action,listener,retention,lease,actions,response,listener,final,retention,lease,actions,remove,request,request,new,retention,lease,actions,remove,request,leader,shard,id,retention,lease,id,remote,client,execute,retention,lease,actions,remove,instance,request,listener
CcrRetentionLeases -> public static void asyncRemoveRetentionLease(             final ShardId leaderShardId,             final String retentionLeaseId,             final Client remoteClient,             final ActionListener<RetentionLeaseActions.Response> listener);1551132475;Asynchronously requests to remove a retention lease with the specified retention lease ID on the specified leader shard using the_given remote client. Note that this method will return immediately, with the specified listener callback invoked to indicate a_response or failure.__@param leaderShardId    the leader shard ID_@param retentionLeaseId the retention lease ID_@param remoteClient     the remote client on which to execute this request_@param listener         the listener;public static void asyncRemoveRetentionLease(_            final ShardId leaderShardId,_            final String retentionLeaseId,_            final Client remoteClient,_            final ActionListener<RetentionLeaseActions.Response> listener) {_        final RetentionLeaseActions.RemoveRequest request = new RetentionLeaseActions.RemoveRequest(leaderShardId, retentionLeaseId)__        remoteClient.execute(RetentionLeaseActions.Remove.INSTANCE, request, listener)__    };asynchronously,requests,to,remove,a,retention,lease,with,the,specified,retention,lease,id,on,the,specified,leader,shard,using,the,given,remote,client,note,that,this,method,will,return,immediately,with,the,specified,listener,callback,invoked,to,indicate,a,response,or,failure,param,leader,shard,id,the,leader,shard,id,param,retention,lease,id,the,retention,lease,id,param,remote,client,the,remote,client,on,which,to,execute,this,request,param,listener,the,listener;public,static,void,async,remove,retention,lease,final,shard,id,leader,shard,id,final,string,retention,lease,id,final,client,remote,client,final,action,listener,retention,lease,actions,response,listener,final,retention,lease,actions,remove,request,request,new,retention,lease,actions,remove,request,leader,shard,id,retention,lease,id,remote,client,execute,retention,lease,actions,remove,instance,request,listener
CcrRetentionLeases -> public static String retentionLeaseId(             final String localClusterName,             final Index followerIndex,             final String remoteClusterAlias,             final Index leaderIndex);1550348884;The retention lease ID used by followers.__@param localClusterName   the local cluster name_@param followerIndex      the follower index_@param remoteClusterAlias the remote cluster alias_@param leaderIndex        the leader index_@return the retention lease ID;public static String retentionLeaseId(_            final String localClusterName,_            final Index followerIndex,_            final String remoteClusterAlias,_            final Index leaderIndex) {_        return String.format(_                Locale.ROOT,_                "%s/%s/%s-following-%s/%s/%s",_                localClusterName,_                followerIndex.getName(),_                followerIndex.getUUID(),_                remoteClusterAlias,_                leaderIndex.getName(),_                leaderIndex.getUUID())__    };the,retention,lease,id,used,by,followers,param,local,cluster,name,the,local,cluster,name,param,follower,index,the,follower,index,param,remote,cluster,alias,the,remote,cluster,alias,param,leader,index,the,leader,index,return,the,retention,lease,id;public,static,string,retention,lease,id,final,string,local,cluster,name,final,index,follower,index,final,string,remote,cluster,alias,final,index,leader,index,return,string,format,locale,root,s,s,s,following,s,s,s,local,cluster,name,follower,index,get,name,follower,index,get,uuid,remote,cluster,alias,leader,index,get,name,leader,index,get,uuid
CcrRetentionLeases -> public static String retentionLeaseId(             final String localClusterName,             final Index followerIndex,             final String remoteClusterAlias,             final Index leaderIndex);1550664347;The retention lease ID used by followers.__@param localClusterName   the local cluster name_@param followerIndex      the follower index_@param remoteClusterAlias the remote cluster alias_@param leaderIndex        the leader index_@return the retention lease ID;public static String retentionLeaseId(_            final String localClusterName,_            final Index followerIndex,_            final String remoteClusterAlias,_            final Index leaderIndex) {_        return String.format(_                Locale.ROOT,_                "%s/%s/%s-following-%s/%s/%s",_                localClusterName,_                followerIndex.getName(),_                followerIndex.getUUID(),_                remoteClusterAlias,_                leaderIndex.getName(),_                leaderIndex.getUUID())__    };the,retention,lease,id,used,by,followers,param,local,cluster,name,the,local,cluster,name,param,follower,index,the,follower,index,param,remote,cluster,alias,the,remote,cluster,alias,param,leader,index,the,leader,index,return,the,retention,lease,id;public,static,string,retention,lease,id,final,string,local,cluster,name,final,index,follower,index,final,string,remote,cluster,alias,final,index,leader,index,return,string,format,locale,root,s,s,s,following,s,s,s,local,cluster,name,follower,index,get,name,follower,index,get,uuid,remote,cluster,alias,leader,index,get,name,leader,index,get,uuid
CcrRetentionLeases -> public static String retentionLeaseId(             final String localClusterName,             final Index followerIndex,             final String remoteClusterAlias,             final Index leaderIndex);1551132475;The retention lease ID used by followers.__@param localClusterName   the local cluster name_@param followerIndex      the follower index_@param remoteClusterAlias the remote cluster alias_@param leaderIndex        the leader index_@return the retention lease ID;public static String retentionLeaseId(_            final String localClusterName,_            final Index followerIndex,_            final String remoteClusterAlias,_            final Index leaderIndex) {_        return String.format(_                Locale.ROOT,_                "%s/%s/%s-following-%s/%s/%s",_                localClusterName,_                followerIndex.getName(),_                followerIndex.getUUID(),_                remoteClusterAlias,_                leaderIndex.getName(),_                leaderIndex.getUUID())__    };the,retention,lease,id,used,by,followers,param,local,cluster,name,the,local,cluster,name,param,follower,index,the,follower,index,param,remote,cluster,alias,the,remote,cluster,alias,param,leader,index,the,leader,index,return,the,retention,lease,id;public,static,string,retention,lease,id,final,string,local,cluster,name,final,index,follower,index,final,string,remote,cluster,alias,final,index,leader,index,return,string,format,locale,root,s,s,s,following,s,s,s,local,cluster,name,follower,index,get,name,follower,index,get,uuid,remote,cluster,alias,leader,index,get,name,leader,index,get,uuid
