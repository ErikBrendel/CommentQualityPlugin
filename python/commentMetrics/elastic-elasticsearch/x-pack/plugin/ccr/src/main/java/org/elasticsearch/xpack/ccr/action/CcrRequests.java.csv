# id;timestamp;commentText;codeText;commentWords;codeWords
CcrRequests -> public static void getIndexMetadata(Client client, Index index, long mappingVersion, long metadataVersion,                                         Supplier<TimeValue> timeoutSupplier, ActionListener<IndexMetaData> listener);1549320821;Gets an {@link IndexMetaData} of the given index. The mapping version and metadata version of the returned {@link IndexMetaData}_must be at least the provided {@code mappingVersion} and {@code metadataVersion} respectively.;public static void getIndexMetadata(Client client, Index index, long mappingVersion, long metadataVersion,_                                        Supplier<TimeValue> timeoutSupplier, ActionListener<IndexMetaData> listener) {_        final ClusterStateRequest request = CcrRequests.metaDataRequest(index.getName())__        if (metadataVersion > 0) {_            request.waitForMetaDataVersion(metadataVersion).waitForTimeout(timeoutSupplier.get())__        }_        client.admin().cluster().state(request, ActionListener.wrap(_            response -> {_                if (response.getState() == null) {_                    assert metadataVersion > 0 : metadataVersion__                    throw new IllegalStateException("timeout to get cluster state with" +_                        " metadata version [" + metadataVersion + "], mapping version [" + mappingVersion + "]")__                }_                final MetaData metaData = response.getState().metaData()__                final IndexMetaData indexMetaData = metaData.getIndexSafe(index)__                if (indexMetaData.getMappingVersion() >= mappingVersion) {_                    listener.onResponse(indexMetaData)__                    return__                }_                if (timeoutSupplier.get().nanos() < 0) {_                    throw new IllegalStateException("timeout to get cluster state with mapping version [" + mappingVersion + "]")__                }_                _                getIndexMetadata(client, index, mappingVersion, metaData.version() + 1, timeoutSupplier, listener)__            },_            listener::onFailure_        ))__    };gets,an,link,index,meta,data,of,the,given,index,the,mapping,version,and,metadata,version,of,the,returned,link,index,meta,data,must,be,at,least,the,provided,code,mapping,version,and,code,metadata,version,respectively;public,static,void,get,index,metadata,client,client,index,index,long,mapping,version,long,metadata,version,supplier,time,value,timeout,supplier,action,listener,index,meta,data,listener,final,cluster,state,request,request,ccr,requests,meta,data,request,index,get,name,if,metadata,version,0,request,wait,for,meta,data,version,metadata,version,wait,for,timeout,timeout,supplier,get,client,admin,cluster,state,request,action,listener,wrap,response,if,response,get,state,null,assert,metadata,version,0,metadata,version,throw,new,illegal,state,exception,timeout,to,get,cluster,state,with,metadata,version,metadata,version,mapping,version,mapping,version,final,meta,data,meta,data,response,get,state,meta,data,final,index,meta,data,index,meta,data,meta,data,get,index,safe,index,if,index,meta,data,get,mapping,version,mapping,version,listener,on,response,index,meta,data,return,if,timeout,supplier,get,nanos,0,throw,new,illegal,state,exception,timeout,to,get,cluster,state,with,mapping,version,mapping,version,get,index,metadata,client,index,mapping,version,meta,data,version,1,timeout,supplier,listener,listener,on,failure
CcrRequests -> public static void getIndexMetadata(Client client, Index index, long mappingVersion, long metadataVersion,                                         Supplier<TimeValue> timeoutSupplier, ActionListener<IndexMetaData> listener);1549748457;Gets an {@link IndexMetaData} of the given index. The mapping version and metadata version of the returned {@link IndexMetaData}_must be at least the provided {@code mappingVersion} and {@code metadataVersion} respectively.;public static void getIndexMetadata(Client client, Index index, long mappingVersion, long metadataVersion,_                                        Supplier<TimeValue> timeoutSupplier, ActionListener<IndexMetaData> listener) {_        final ClusterStateRequest request = CcrRequests.metaDataRequest(index.getName())__        if (metadataVersion > 0) {_            request.waitForMetaDataVersion(metadataVersion).waitForTimeout(timeoutSupplier.get())__        }_        client.admin().cluster().state(request, ActionListener.wrap(_            response -> {_                if (response.getState() == null) { _                    assert metadataVersion > 0 : metadataVersion__                    if (timeoutSupplier.get().nanos() < 0) {_                        listener.onFailure(new IllegalStateException("timeout to get cluster state with" +_                            " metadata version [" + metadataVersion + "], mapping version [" + mappingVersion + "]"))__                    } else {_                        getIndexMetadata(client, index, mappingVersion, metadataVersion, timeoutSupplier, listener)__                    }_                } else {_                    final MetaData metaData = response.getState().metaData()__                    final IndexMetaData indexMetaData = metaData.getIndexSafe(index)__                    if (indexMetaData.getMappingVersion() >= mappingVersion) {_                        listener.onResponse(indexMetaData)__                        return__                    }_                    if (timeoutSupplier.get().nanos() < 0) {_                        listener.onFailure(new IllegalStateException(_                            "timeout to get cluster state with mapping version [" + mappingVersion + "]"))__                    } else {_                        _                        getIndexMetadata(client, index, mappingVersion, metaData.version() + 1, timeoutSupplier, listener)__                    }_                }_            },_            listener::onFailure_        ))__    };gets,an,link,index,meta,data,of,the,given,index,the,mapping,version,and,metadata,version,of,the,returned,link,index,meta,data,must,be,at,least,the,provided,code,mapping,version,and,code,metadata,version,respectively;public,static,void,get,index,metadata,client,client,index,index,long,mapping,version,long,metadata,version,supplier,time,value,timeout,supplier,action,listener,index,meta,data,listener,final,cluster,state,request,request,ccr,requests,meta,data,request,index,get,name,if,metadata,version,0,request,wait,for,meta,data,version,metadata,version,wait,for,timeout,timeout,supplier,get,client,admin,cluster,state,request,action,listener,wrap,response,if,response,get,state,null,assert,metadata,version,0,metadata,version,if,timeout,supplier,get,nanos,0,listener,on,failure,new,illegal,state,exception,timeout,to,get,cluster,state,with,metadata,version,metadata,version,mapping,version,mapping,version,else,get,index,metadata,client,index,mapping,version,metadata,version,timeout,supplier,listener,else,final,meta,data,meta,data,response,get,state,meta,data,final,index,meta,data,index,meta,data,meta,data,get,index,safe,index,if,index,meta,data,get,mapping,version,mapping,version,listener,on,response,index,meta,data,return,if,timeout,supplier,get,nanos,0,listener,on,failure,new,illegal,state,exception,timeout,to,get,cluster,state,with,mapping,version,mapping,version,else,get,index,metadata,client,index,mapping,version,meta,data,version,1,timeout,supplier,listener,listener,on,failure
