commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;6;;public static ShardFollowTask readFrom(StreamInput in) throws IOException {     String remoteCluster = in.readString().     ShardId followShardId = ShardId.readShardId(in).     ShardId leaderShardId = ShardId.readShardId(in).     return new ShardFollowTask(remoteCluster, followShardId, leaderShardId, in). }
false;public;0;3;;public String getRemoteCluster() {     return remoteCluster. }
false;public;0;3;;public ShardId getFollowShardId() {     return followShardId. }
false;public;0;3;;public ShardId getLeaderShardId() {     return leaderShardId. }
false;public;0;3;;public Map<String, String> getHeaders() {     return headers. }
false;public;0;4;;@Override public String getWriteableName() {     return NAME. }
false;public;1;8;;@Override public void writeTo(StreamOutput out) throws IOException {     out.writeString(remoteCluster).     followShardId.writeTo(out).     leaderShardId.writeTo(out).     super.writeTo(out).     out.writeMap(headers, StreamOutput::writeString, StreamOutput::writeString). }
false;public,static;1;3;;public static ShardFollowTask fromXContent(XContentParser parser) {     return PARSER.apply(parser, null). }
false;public;2;14;;@Override public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {     builder.startObject().     builder.field(REMOTE_CLUSTER_FIELD.getPreferredName(), remoteCluster).     builder.field(FOLLOW_SHARD_INDEX_FIELD.getPreferredName(), followShardId.getIndex().getName()).     builder.field(FOLLOW_SHARD_INDEX_UUID_FIELD.getPreferredName(), followShardId.getIndex().getUUID()).     builder.field(FOLLOW_SHARD_SHARDID_FIELD.getPreferredName(), followShardId.id()).     builder.field(LEADER_SHARD_INDEX_FIELD.getPreferredName(), leaderShardId.getIndex().getName()).     builder.field(LEADER_SHARD_INDEX_UUID_FIELD.getPreferredName(), leaderShardId.getIndex().getUUID()).     builder.field(LEADER_SHARD_SHARDID_FIELD.getPreferredName(), leaderShardId.id()).     toXContentFragment(builder).     builder.field(HEADERS.getPreferredName(), headers).     return builder.endObject(). }
false;public;1;11;;@Override public boolean equals(Object o) {     if (this == o)         return true.     if (o == null || getClass() != o.getClass())         return false.     if (!super.equals(o))         return false.     ShardFollowTask that = (ShardFollowTask) o.     return Objects.equals(remoteCluster, that.remoteCluster) && Objects.equals(followShardId, that.followShardId) && Objects.equals(leaderShardId, that.leaderShardId) && Objects.equals(headers, that.headers). }
false;public;0;10;;@Override public int hashCode() {     return Objects.hash(super.hashCode(), remoteCluster, followShardId, leaderShardId, headers). }
false;public;0;3;;public String toString() {     return Strings.toString(this). }
false;public;0;4;;@Override public Version getMinimalSupportedVersion() {     return Version.V_6_5_0. }
