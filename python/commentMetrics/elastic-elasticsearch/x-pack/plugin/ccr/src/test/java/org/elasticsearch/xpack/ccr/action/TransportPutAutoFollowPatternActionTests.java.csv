commented;modifiers;parameterAmount;loc;comment;code
false;public;0;24;;public void testInnerPut() {     PutAutoFollowPatternAction.Request request = new PutAutoFollowPatternAction.Request().     request.setName("name1").     request.setRemoteCluster("eu_cluster").     request.setLeaderIndexPatterns(Collections.singletonList("logs-*")).     ClusterState localState = ClusterState.builder(new ClusterName("us_cluster")).metaData(MetaData.builder()).build().     ClusterState remoteState = ClusterState.builder(new ClusterName("eu_cluster")).metaData(MetaData.builder()).build().     ClusterState result = TransportPutAutoFollowPatternAction.innerPut(request, null, localState, remoteState).     AutoFollowMetadata autoFollowMetadata = result.metaData().custom(AutoFollowMetadata.TYPE).     assertThat(autoFollowMetadata, notNullValue()).     assertThat(autoFollowMetadata.getPatterns().size(), equalTo(1)).     assertThat(autoFollowMetadata.getPatterns().get("name1").getRemoteCluster(), equalTo("eu_cluster")).     assertThat(autoFollowMetadata.getPatterns().get("name1").getLeaderIndexPatterns().size(), equalTo(1)).     assertThat(autoFollowMetadata.getPatterns().get("name1").getLeaderIndexPatterns().get(0), equalTo("logs-*")).     assertThat(autoFollowMetadata.getFollowedLeaderIndexUUIDs().size(), equalTo(1)).     assertThat(autoFollowMetadata.getFollowedLeaderIndexUUIDs().get("name1").size(), equalTo(0)). }
false;public;0;40;;public void testInnerPut_existingLeaderIndices() {     PutAutoFollowPatternAction.Request request = new PutAutoFollowPatternAction.Request().     request.setName("name1").     request.setRemoteCluster("eu_cluster").     request.setLeaderIndexPatterns(Collections.singletonList("logs-*")).     ClusterState localState = ClusterState.builder(new ClusterName("us_cluster")).metaData(MetaData.builder()).build().     int numLeaderIndices = randomIntBetween(1, 8).     int numMatchingLeaderIndices = randomIntBetween(1, 8).     MetaData.Builder mdBuilder = MetaData.builder().     for (int i = 0. i < numLeaderIndices. i++) {         mdBuilder.put(IndexMetaData.builder("transactions-" + i).settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(0)).     }     for (int i = 0. i < numMatchingLeaderIndices. i++) {         mdBuilder.put(IndexMetaData.builder("logs-" + i).settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(0)).     }     ClusterState remoteState = ClusterState.builder(new ClusterName("eu_cluster")).metaData(mdBuilder).build().     ClusterState result = TransportPutAutoFollowPatternAction.innerPut(request, null, localState, remoteState).     AutoFollowMetadata autoFollowMetadata = result.metaData().custom(AutoFollowMetadata.TYPE).     assertThat(autoFollowMetadata, notNullValue()).     assertThat(autoFollowMetadata.getPatterns().size(), equalTo(1)).     assertThat(autoFollowMetadata.getPatterns().get("name1").getRemoteCluster(), equalTo("eu_cluster")).     assertThat(autoFollowMetadata.getPatterns().get("name1").getLeaderIndexPatterns().size(), equalTo(1)).     assertThat(autoFollowMetadata.getPatterns().get("name1").getLeaderIndexPatterns().get(0), equalTo("logs-*")).     assertThat(autoFollowMetadata.getFollowedLeaderIndexUUIDs().size(), equalTo(1)).     assertThat(autoFollowMetadata.getFollowedLeaderIndexUUIDs().get("name1").size(), equalTo(numMatchingLeaderIndices)). }
false;public;0;49;;public void testInnerPut_existingLeaderIndicesAndAutoFollowMetadata() {     PutAutoFollowPatternAction.Request request = new PutAutoFollowPatternAction.Request().     request.setName("name1").     request.setRemoteCluster("eu_cluster").     request.setLeaderIndexPatterns(Arrays.asList("logs-*", "transactions-*")).     Map<String, AutoFollowPattern> existingAutoFollowPatterns = new HashMap<>().     List<String> existingPatterns = new ArrayList<>().     existingPatterns.add("transactions-*").     existingAutoFollowPatterns.put("name1", new AutoFollowPattern("eu_cluster", existingPatterns, null, null, null, null, null, null, null, null, null, null, null)).     Map<String, List<String>> existingAlreadyFollowedIndexUUIDS = new HashMap<>().     List<String> existingUUIDS = new ArrayList<>().     existingUUIDS.add("_val").     existingAlreadyFollowedIndexUUIDS.put("name1", existingUUIDS).     Map<String, Map<String, String>> existingHeaders = new HashMap<>().     existingHeaders.put("name1", Collections.singletonMap("key", "val")).     ClusterState localState = ClusterState.builder(new ClusterName("us_cluster")).metaData(MetaData.builder().putCustom(AutoFollowMetadata.TYPE, new AutoFollowMetadata(existingAutoFollowPatterns, existingAlreadyFollowedIndexUUIDS, existingHeaders))).build().     int numLeaderIndices = randomIntBetween(1, 8).     MetaData.Builder mdBuilder = MetaData.builder().     for (int i = 0. i < numLeaderIndices. i++) {         mdBuilder.put(IndexMetaData.builder("logs-" + i).settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(0)).     }     ClusterState remoteState = ClusterState.builder(new ClusterName("eu_cluster")).metaData(mdBuilder).build().     ClusterState result = TransportPutAutoFollowPatternAction.innerPut(request, null, localState, remoteState).     AutoFollowMetadata autoFollowMetadata = result.metaData().custom(AutoFollowMetadata.TYPE).     assertThat(autoFollowMetadata, notNullValue()).     assertThat(autoFollowMetadata.getPatterns().size(), equalTo(1)).     assertThat(autoFollowMetadata.getPatterns().get("name1").getRemoteCluster(), equalTo("eu_cluster")).     assertThat(autoFollowMetadata.getPatterns().get("name1").getLeaderIndexPatterns().size(), equalTo(2)).     assertThat(autoFollowMetadata.getPatterns().get("name1").getLeaderIndexPatterns().get(0), equalTo("logs-*")).     assertThat(autoFollowMetadata.getPatterns().get("name1").getLeaderIndexPatterns().get(1), equalTo("transactions-*")).     assertThat(autoFollowMetadata.getFollowedLeaderIndexUUIDs().size(), equalTo(1)).     assertThat(autoFollowMetadata.getFollowedLeaderIndexUUIDs().get("name1").size(), equalTo(numLeaderIndices + 1)).     assertThat(autoFollowMetadata.getHeaders().size(), equalTo(1)).     assertThat(autoFollowMetadata.getHeaders().get("name1"), notNullValue()). }
