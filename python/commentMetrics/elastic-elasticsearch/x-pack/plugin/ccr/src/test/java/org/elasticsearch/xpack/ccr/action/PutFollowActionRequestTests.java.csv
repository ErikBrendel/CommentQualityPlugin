commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected Writeable.Reader<PutFollowAction.Request> instanceReader() {     return PutFollowAction.Request::new. }
false;protected;0;12;;@Override protected PutFollowAction.Request createTestInstance() {     PutFollowAction.Request request = new PutFollowAction.Request().     request.setFollowerIndex(randomAlphaOfLength(4)).     request.waitForActiveShards(randomFrom(ActiveShardCount.DEFAULT, ActiveShardCount.NONE, ActiveShardCount.ONE, ActiveShardCount.ALL)).     request.setRemoteCluster(randomAlphaOfLength(4)).     request.setLeaderIndex(randomAlphaOfLength(4)).     ResumeFollowActionRequestTests.generateFollowParameters(request.getParameters()).     return request. }
false;protected;1;11;;@Override protected PutFollowAction.Request createXContextTestInstance(XContentType xContentType) {     // follower index parameter and wait for active shards params are not part of the request body and     // are provided in the url path. So these fields cannot be used for creating a test instance for xcontent testing.     PutFollowAction.Request request = new PutFollowAction.Request().     request.setRemoteCluster(randomAlphaOfLength(4)).     request.setLeaderIndex(randomAlphaOfLength(4)).     request.setFollowerIndex("followerIndex").     ResumeFollowActionRequestTests.generateFollowParameters(request.getParameters()).     return request. }
false;protected;1;4;;@Override protected PutFollowAction.Request doParseInstance(XContentParser parser) throws IOException {     return PutFollowAction.Request.fromXContent(parser, "followerIndex", ActiveShardCount.DEFAULT). }
false;protected;0;4;;@Override protected boolean supportsUnknownFields() {     return false. }
