commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected Writeable.Reader<ResumeFollowAction.Request> instanceReader() {     return ResumeFollowAction.Request::new. }
false;protected;0;8;;@Override protected ResumeFollowAction.Request createTestInstance() {     ResumeFollowAction.Request request = new ResumeFollowAction.Request().     request.setFollowerIndex(randomAlphaOfLength(4)).     generateFollowParameters(request.getParameters()).     return request. }
false;protected;1;8;;@Override protected ResumeFollowAction.Request createXContextTestInstance(XContentType type) {     // follower index parameter is not part of the request body and is provided in the url path.     // So this field cannot be used for creating a test instance for xcontent testing.     ResumeFollowAction.Request request = new ResumeFollowAction.Request().     generateFollowParameters(request.getParameters()).     return request. }
false;protected;1;4;;@Override protected ResumeFollowAction.Request doParseInstance(XContentParser parser) throws IOException {     return ResumeFollowAction.Request.fromXContent(parser, null). }
false;protected;0;4;;@Override protected boolean supportsUnknownFields() {     return false. }
false;static;1;32;;static void generateFollowParameters(FollowParameters followParameters) {     if (randomBoolean()) {         followParameters.setMaxReadRequestOperationCount(randomIntBetween(1, Integer.MAX_VALUE)).     }     if (randomBoolean()) {         followParameters.setMaxOutstandingReadRequests(randomIntBetween(1, Integer.MAX_VALUE)).     }     if (randomBoolean()) {         followParameters.setMaxOutstandingWriteRequests(randomIntBetween(1, Integer.MAX_VALUE)).     }     if (randomBoolean()) {         followParameters.setMaxReadRequestSize(new ByteSizeValue(randomNonNegativeLong(), ByteSizeUnit.BYTES)).     }     if (randomBoolean()) {         followParameters.setMaxWriteBufferCount(randomIntBetween(1, Integer.MAX_VALUE)).     }     if (randomBoolean()) {         followParameters.setMaxWriteRequestOperationCount(randomIntBetween(1, Integer.MAX_VALUE)).     }     if (randomBoolean()) {         followParameters.setMaxWriteRequestSize(new ByteSizeValue(randomNonNegativeLong())).     }     if (randomBoolean()) {         followParameters.setMaxWriteBufferSize(new ByteSizeValue(randomNonNegativeLong(), ByteSizeUnit.BYTES)).     }     if (randomBoolean()) {         followParameters.setMaxRetryDelay(TimeValue.timeValueMillis(500)).     }     if (randomBoolean()) {         followParameters.setReadPollTimeout(TimeValue.timeValueMillis(500)).     } }
false;public;0;18;;public void testValidate() {     ResumeFollowAction.Request request = new ResumeFollowAction.Request().     request.setFollowerIndex("index2").     request.getParameters().setMaxRetryDelay(TimeValue.ZERO).     ActionRequestValidationException validationException = request.validate().     assertThat(validationException, notNullValue()).     assertThat(validationException.getMessage(), containsString("[max_retry_delay] must be positive but was [0ms]")).     request.getParameters().setMaxRetryDelay(TimeValue.timeValueMinutes(10)).     validationException = request.validate().     assertThat(validationException, notNullValue()).     assertThat(validationException.getMessage(), containsString("[max_retry_delay] must be less than [5m] but was [10m]")).     request.getParameters().setMaxRetryDelay(TimeValue.timeValueMinutes(1)).     validationException = request.validate().     assertThat(validationException, nullValue()). }
