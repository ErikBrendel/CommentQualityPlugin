commented;modifiers;parameterAmount;loc;comment;code
false;public;0;22;;public void testUnfollow() {     final long settingsVersion = randomNonNegativeLong().     IndexMetaData.Builder followerIndex = IndexMetaData.builder("follow_index").settings(settings(Version.CURRENT).put(CcrSettings.CCR_FOLLOWING_INDEX_SETTING.getKey(), true)).settingsVersion(settingsVersion).numberOfShards(1).numberOfReplicas(0).state(IndexMetaData.State.CLOSE).putCustom(Ccr.CCR_CUSTOM_METADATA_KEY, new HashMap<>()).     ClusterState current = ClusterState.builder(new ClusterName("cluster_name")).metaData(MetaData.builder().put(followerIndex).build()).build().     ClusterState result = TransportUnfollowAction.unfollow("follow_index", current).     IndexMetaData resultIMD = result.metaData().index("follow_index").     assertThat(resultIMD.getSettings().get(CcrSettings.CCR_FOLLOWING_INDEX_SETTING.getKey()), nullValue()).     assertThat(resultIMD.getCustomData(Ccr.CCR_CUSTOM_METADATA_KEY), nullValue()).     assertThat(resultIMD.getSettingsVersion(), equalTo(settingsVersion + 1)). }
false;public;0;16;;public void testUnfollowIndexOpen() {     IndexMetaData.Builder followerIndex = IndexMetaData.builder("follow_index").settings(settings(Version.CURRENT).put(CcrSettings.CCR_FOLLOWING_INDEX_SETTING.getKey(), true)).numberOfShards(1).numberOfReplicas(0).putCustom(Ccr.CCR_CUSTOM_METADATA_KEY, new HashMap<>()).     ClusterState current = ClusterState.builder(new ClusterName("cluster_name")).metaData(MetaData.builder().put(followerIndex).build()).build().     Exception e = expectThrows(IllegalArgumentException.class, () -> TransportUnfollowAction.unfollow("follow_index", current)).     assertThat(e.getMessage(), equalTo("cannot convert the follower index [follow_index] to a non-follower, because it has not been closed")). }
false;public;0;38;;public void testUnfollowRunningShardFollowTasks() {     IndexMetaData.Builder followerIndex = IndexMetaData.builder("follow_index").settings(settings(Version.CURRENT).put(CcrSettings.CCR_FOLLOWING_INDEX_SETTING.getKey(), true)).numberOfShards(1).numberOfReplicas(0).state(IndexMetaData.State.CLOSE).putCustom(Ccr.CCR_CUSTOM_METADATA_KEY, new HashMap<>()).     ShardFollowTask params = new ShardFollowTask(null, new ShardId("follow_index", "", 0), new ShardId("leader_index", "", 0), 1024, 1024, 1, 1, TransportResumeFollowAction.DEFAULT_MAX_READ_REQUEST_SIZE, TransportResumeFollowAction.DEFAULT_MAX_READ_REQUEST_SIZE, 10240, new ByteSizeValue(512, ByteSizeUnit.MB), TimeValue.timeValueMillis(10), TimeValue.timeValueMillis(10), Collections.emptyMap()).     PersistentTasksCustomMetaData.PersistentTask<?> task = new PersistentTasksCustomMetaData.PersistentTask<>("id", ShardFollowTask.NAME, params, 0, null).     ClusterState current = ClusterState.builder(new ClusterName("cluster_name")).metaData(MetaData.builder().put(followerIndex).putCustom(PersistentTasksCustomMetaData.TYPE, new PersistentTasksCustomMetaData(0, Collections.singletonMap("id", task))).build()).build().     Exception e = expectThrows(IllegalArgumentException.class, () -> TransportUnfollowAction.unfollow("follow_index", current)).     assertThat(e.getMessage(), equalTo("cannot convert the follower index [follow_index] to a non-follower, because it has not been paused")). }
false;public;0;15;;public void testUnfollowMissingIndex() {     IndexMetaData.Builder followerIndex = IndexMetaData.builder("follow_index").settings(settings(Version.CURRENT).put(CcrSettings.CCR_FOLLOWING_INDEX_SETTING.getKey(), true)).numberOfShards(1).numberOfReplicas(0).state(IndexMetaData.State.CLOSE).putCustom(Ccr.CCR_CUSTOM_METADATA_KEY, new HashMap<>()).     ClusterState current = ClusterState.builder(new ClusterName("cluster_name")).metaData(MetaData.builder().put(followerIndex).build()).build().     expectThrows(IndexNotFoundException.class, () -> TransportUnfollowAction.unfollow("another_index", current)). }
false;public;0;14;;public void testUnfollowNoneFollowIndex() {     IndexMetaData.Builder followerIndex = IndexMetaData.builder("follow_index").settings(settings(Version.CURRENT).put(CcrSettings.CCR_FOLLOWING_INDEX_SETTING.getKey(), true)).numberOfShards(1).numberOfReplicas(0).state(IndexMetaData.State.CLOSE).     ClusterState current = ClusterState.builder(new ClusterName("cluster_name")).metaData(MetaData.builder().put(followerIndex).build()).build().     expectThrows(IllegalArgumentException.class, () -> TransportUnfollowAction.unfollow("follow_index", current)). }
