# id;timestamp;commentText;codeText;commentWords;codeWords
FollowingEngineTests -> public void testVerifyShardBeforeIndexClosingIsNoOp() throws IOException;1549891630;Test that {@link FollowingEngine#verifyEngineBeforeIndexClosing()} never fails_whatever the value of the global checkpoint to check is.;public void testVerifyShardBeforeIndexClosingIsNoOp() throws IOException {_        final long seqNo = randomIntBetween(0, Integer.MAX_VALUE)__        runIndexTest(_            seqNo,_            Engine.Operation.Origin.PRIMARY,_            (followingEngine, index) -> {_                globalCheckpoint.set(randomNonNegativeLong())__                try {_                    followingEngine.verifyEngineBeforeIndexClosing()__                } catch (final IllegalStateException e) {_                    fail("Following engine pre-closing verifications failed")__                }_            })__    };test,that,link,following,engine,verify,engine,before,index,closing,never,fails,whatever,the,value,of,the,global,checkpoint,to,check,is;public,void,test,verify,shard,before,index,closing,is,no,op,throws,ioexception,final,long,seq,no,random,int,between,0,integer,run,index,test,seq,no,engine,operation,origin,primary,following,engine,index,global,checkpoint,set,random,non,negative,long,try,following,engine,verify,engine,before,index,closing,catch,final,illegal,state,exception,e,fail,following,engine,pre,closing,verifications,failed
FollowingEngineTests -> public void testVerifyShardBeforeIndexClosingIsNoOp() throws IOException;1550256122;Test that {@link FollowingEngine#verifyEngineBeforeIndexClosing()} never fails_whatever the value of the global checkpoint to check is.;public void testVerifyShardBeforeIndexClosingIsNoOp() throws IOException {_        final long seqNo = randomIntBetween(0, Integer.MAX_VALUE)__        runIndexTest(_            seqNo,_            Engine.Operation.Origin.PRIMARY,_            (followingEngine, index) -> {_                globalCheckpoint.set(randomNonNegativeLong())__                try {_                    followingEngine.verifyEngineBeforeIndexClosing()__                } catch (final IllegalStateException e) {_                    fail("Following engine pre-closing verifications failed")__                }_            })__    };test,that,link,following,engine,verify,engine,before,index,closing,never,fails,whatever,the,value,of,the,global,checkpoint,to,check,is;public,void,test,verify,shard,before,index,closing,is,no,op,throws,ioexception,final,long,seq,no,random,int,between,0,integer,run,index,test,seq,no,engine,operation,origin,primary,following,engine,index,global,checkpoint,set,random,non,negative,long,try,following,engine,verify,engine,before,index,closing,catch,final,illegal,state,exception,e,fail,following,engine,pre,closing,verifications,failed
FollowingEngineTests -> public void testVerifyShardBeforeIndexClosingIsNoOp() throws IOException;1551110274;Test that {@link FollowingEngine#verifyEngineBeforeIndexClosing()} never fails_whatever the value of the global checkpoint to check is.;public void testVerifyShardBeforeIndexClosingIsNoOp() throws IOException {_        final long seqNo = randomIntBetween(0, Integer.MAX_VALUE)__        runIndexTest(_            seqNo,_            Engine.Operation.Origin.PRIMARY,_            (followingEngine, index) -> {_                globalCheckpoint.set(randomNonNegativeLong())__                try {_                    followingEngine.verifyEngineBeforeIndexClosing()__                } catch (final IllegalStateException e) {_                    fail("Following engine pre-closing verifications failed")__                }_            })__    };test,that,link,following,engine,verify,engine,before,index,closing,never,fails,whatever,the,value,of,the,global,checkpoint,to,check,is;public,void,test,verify,shard,before,index,closing,is,no,op,throws,ioexception,final,long,seq,no,random,int,between,0,integer,run,index,test,seq,no,engine,operation,origin,primary,following,engine,index,global,checkpoint,set,random,non,negative,long,try,following,engine,verify,engine,before,index,closing,catch,final,illegal,state,exception,e,fail,following,engine,pre,closing,verifications,failed
