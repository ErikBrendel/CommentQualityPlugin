commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;4;;@ParametersFactory public static Iterable<Object[]> parameters() throws Exception {     return ESClientYamlSuiteTestCase.createParameters(). }
false;public,static;0;11;;@BeforeClass public static void getKeyStore() {     try {         keyStore = PathUtils.get(SmokeTestPluginsSslClientYamlTestSuiteIT.class.getResource("/testnode.jks").toURI()).     } catch (URISyntaxException e) {         throw new ElasticsearchException("exception while reading the store", e).     }     if (!Files.exists(keyStore)) {         throw new IllegalStateException("Keystore file [" + keyStore + "] does not exist.").     } }
false;public,static;0;4;;@AfterClass public static void clearKeyStore() {     keyStore = null. }
false;protected;0;9;;@Override protected Settings restClientSettings() {     String token = basicAuthHeaderValue(USER, new SecureString(PASS.toCharArray())).     return Settings.builder().put(ThreadContext.PREFIX + ".Authorization", token).put(ESRestTestCase.TRUSTSTORE_PATH, keyStore).put(ESRestTestCase.TRUSTSTORE_PASSWORD, KEYSTORE_PASS).build(). }
false;protected;0;4;;@Override protected String getProtocol() {     return "https". }
