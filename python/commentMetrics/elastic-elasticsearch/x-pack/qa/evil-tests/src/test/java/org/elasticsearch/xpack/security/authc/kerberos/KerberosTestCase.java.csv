# id;timestamp;commentText;codeText;commentWords;codeWords
KerberosTestCase -> static <T> T doAsWrapper(final Subject subject, final PrivilegedExceptionAction<T> action) throws PrivilegedActionException;1536964057;Invokes Subject.doAs inside a doPrivileged block__@param subject {@link Subject}_@param action {@link PrivilegedExceptionAction} action for performing inside_Subject.doAs_@return T Type of value as returned by PrivilegedAction_@throws PrivilegedActionException when privileged action threw exception;static <T> T doAsWrapper(final Subject subject, final PrivilegedExceptionAction<T> action) throws PrivilegedActionException {_        return AccessController.doPrivileged((PrivilegedExceptionAction<T>) () -> Subject.doAs(subject, action))__    };invokes,subject,do,as,inside,a,do,privileged,block,param,subject,link,subject,param,action,link,privileged,exception,action,action,for,performing,inside,subject,do,as,return,t,type,of,value,as,returned,by,privileged,action,throws,privileged,action,exception,when,privileged,action,threw,exception;static,t,t,do,as,wrapper,final,subject,subject,final,privileged,exception,action,t,action,throws,privileged,action,exception,return,access,controller,do,privileged,privileged,exception,action,t,subject,do,as,subject,action
KerberosTestCase -> static <T> T doAsWrapper(final Subject subject, final PrivilegedExceptionAction<T> action) throws PrivilegedActionException;1539723533;Invokes Subject.doAs inside a doPrivileged block__@param subject {@link Subject}_@param action {@link PrivilegedExceptionAction} action for performing inside_Subject.doAs_@return T Type of value as returned by PrivilegedAction_@throws PrivilegedActionException when privileged action threw exception;static <T> T doAsWrapper(final Subject subject, final PrivilegedExceptionAction<T> action) throws PrivilegedActionException {_        return AccessController.doPrivileged((PrivilegedExceptionAction<T>) () -> Subject.doAs(subject, action))__    };invokes,subject,do,as,inside,a,do,privileged,block,param,subject,link,subject,param,action,link,privileged,exception,action,action,for,performing,inside,subject,do,as,return,t,type,of,value,as,returned,by,privileged,action,throws,privileged,action,exception,when,privileged,action,threw,exception;static,t,t,do,as,wrapper,final,subject,subject,final,privileged,exception,action,t,action,throws,privileged,action,exception,return,access,controller,do,privileged,privileged,exception,action,t,subject,do,as,subject,action
KerberosTestCase -> static <T> T doAsWrapper(final Subject subject, final PrivilegedExceptionAction<T> action) throws PrivilegedActionException;1540847035;Invokes Subject.doAs inside a doPrivileged block__@param subject {@link Subject}_@param action {@link PrivilegedExceptionAction} action for performing inside_Subject.doAs_@return T Type of value as returned by PrivilegedAction_@throws PrivilegedActionException when privileged action threw exception;static <T> T doAsWrapper(final Subject subject, final PrivilegedExceptionAction<T> action) throws PrivilegedActionException {_        return AccessController.doPrivileged((PrivilegedExceptionAction<T>) () -> Subject.doAs(subject, action))__    };invokes,subject,do,as,inside,a,do,privileged,block,param,subject,link,subject,param,action,link,privileged,exception,action,action,for,performing,inside,subject,do,as,return,t,type,of,value,as,returned,by,privileged,action,throws,privileged,action,exception,when,privileged,action,threw,exception;static,t,t,do,as,wrapper,final,subject,subject,final,privileged,exception,action,t,action,throws,privileged,action,exception,return,access,controller,do,privileged,privileged,exception,action,t,subject,do,as,subject,action
KerberosTestCase -> static <T> T doAsWrapper(final Subject subject, final PrivilegedExceptionAction<T> action) throws PrivilegedActionException;1541476610;Invokes Subject.doAs inside a doPrivileged block__@param subject {@link Subject}_@param action  {@link PrivilegedExceptionAction} action for performing inside_Subject.doAs_@return T Type of value as returned by PrivilegedAction_@throws PrivilegedActionException when privileged action threw exception;static <T> T doAsWrapper(final Subject subject, final PrivilegedExceptionAction<T> action) throws PrivilegedActionException {_        return AccessController.doPrivileged((PrivilegedExceptionAction<T>) () -> Subject.doAs(subject, action))__    };invokes,subject,do,as,inside,a,do,privileged,block,param,subject,link,subject,param,action,link,privileged,exception,action,action,for,performing,inside,subject,do,as,return,t,type,of,value,as,returned,by,privileged,action,throws,privileged,action,exception,when,privileged,action,threw,exception;static,t,t,do,as,wrapper,final,subject,subject,final,privileged,exception,action,t,action,throws,privileged,action,exception,return,access,controller,do,privileged,privileged,exception,action,t,subject,do,as,subject,action
KerberosTestCase -> static <T> T doAsWrapper(final Subject subject, final PrivilegedExceptionAction<T> action) throws PrivilegedActionException;1549324873;Invokes Subject.doAs inside a doPrivileged block__@param subject {@link Subject}_@param action  {@link PrivilegedExceptionAction} action for performing inside_Subject.doAs_@return T Type of value as returned by PrivilegedAction_@throws PrivilegedActionException when privileged action threw exception;static <T> T doAsWrapper(final Subject subject, final PrivilegedExceptionAction<T> action) throws PrivilegedActionException {_        return AccessController.doPrivileged((PrivilegedExceptionAction<T>) () -> Subject.doAs(subject, action))__    };invokes,subject,do,as,inside,a,do,privileged,block,param,subject,link,subject,param,action,link,privileged,exception,action,action,for,performing,inside,subject,do,as,return,t,type,of,value,as,returned,by,privileged,action,throws,privileged,action,exception,when,privileged,action,threw,exception;static,t,t,do,as,wrapper,final,subject,subject,final,privileged,exception,action,t,action,throws,privileged,action,exception,return,access,controller,do,privileged,privileged,exception,action,t,subject,do,as,subject,action
KerberosTestCase -> static <T> T doAsWrapper(final Subject subject, final PrivilegedExceptionAction<T> action) throws PrivilegedActionException;1550558701;Invokes Subject.doAs inside a doPrivileged block__@param subject {@link Subject}_@param action  {@link PrivilegedExceptionAction} action for performing inside_Subject.doAs_@return T Type of value as returned by PrivilegedAction_@throws PrivilegedActionException when privileged action threw exception;static <T> T doAsWrapper(final Subject subject, final PrivilegedExceptionAction<T> action) throws PrivilegedActionException {_        return AccessController.doPrivileged((PrivilegedExceptionAction<T>) () -> Subject.doAs(subject, action))__    };invokes,subject,do,as,inside,a,do,privileged,block,param,subject,link,subject,param,action,link,privileged,exception,action,action,for,performing,inside,subject,do,as,return,t,type,of,value,as,returned,by,privileged,action,throws,privileged,action,exception,when,privileged,action,threw,exception;static,t,t,do,as,wrapper,final,subject,subject,final,privileged,exception,action,t,action,throws,privileged,action,exception,return,access,controller,do,privileged,privileged,exception,action,t,subject,do,as,subject,action
KerberosTestCase -> protected Path createPrincipalKeyTab(final Path dir, final String... princNames) throws Exception;1536964057;Creates principals and exports them to the keytab created in the directory.__@param dir Directory where the key tab would be created._@param princNames principal names to be created_@return {@link Path} to key tab file._@throws Exception thrown if principal or keytab could not be created;protected Path createPrincipalKeyTab(final Path dir, final String... princNames) throws Exception {_        final Path path = dir.resolve(randomAlphaOfLength(10) + ".keytab")__        simpleKdcLdapServer.createPrincipal(path, princNames)__        return path__    };creates,principals,and,exports,them,to,the,keytab,created,in,the,directory,param,dir,directory,where,the,key,tab,would,be,created,param,princ,names,principal,names,to,be,created,return,link,path,to,key,tab,file,throws,exception,thrown,if,principal,or,keytab,could,not,be,created;protected,path,create,principal,key,tab,final,path,dir,final,string,princ,names,throws,exception,final,path,path,dir,resolve,random,alpha,of,length,10,keytab,simple,kdc,ldap,server,create,principal,path,princ,names,return,path
KerberosTestCase -> protected Path createPrincipalKeyTab(final Path dir, final String... princNames) throws Exception;1539723533;Creates principals and exports them to the keytab created in the directory.__@param dir Directory where the key tab would be created._@param princNames principal names to be created_@return {@link Path} to key tab file._@throws Exception thrown if principal or keytab could not be created;protected Path createPrincipalKeyTab(final Path dir, final String... princNames) throws Exception {_        final Path path = dir.resolve(randomAlphaOfLength(10) + ".keytab")__        simpleKdcLdapServer.createPrincipal(path, princNames)__        return path__    };creates,principals,and,exports,them,to,the,keytab,created,in,the,directory,param,dir,directory,where,the,key,tab,would,be,created,param,princ,names,principal,names,to,be,created,return,link,path,to,key,tab,file,throws,exception,thrown,if,principal,or,keytab,could,not,be,created;protected,path,create,principal,key,tab,final,path,dir,final,string,princ,names,throws,exception,final,path,path,dir,resolve,random,alpha,of,length,10,keytab,simple,kdc,ldap,server,create,principal,path,princ,names,return,path
KerberosTestCase -> protected Path createPrincipalKeyTab(final Path dir, final String... princNames) throws Exception;1540847035;Creates principals and exports them to the keytab created in the directory.__@param dir Directory where the key tab would be created._@param princNames principal names to be created_@return {@link Path} to key tab file._@throws Exception thrown if principal or keytab could not be created;protected Path createPrincipalKeyTab(final Path dir, final String... princNames) throws Exception {_        final Path path = dir.resolve(randomAlphaOfLength(10) + ".keytab")__        simpleKdcLdapServer.createPrincipal(path, princNames)__        return path__    };creates,principals,and,exports,them,to,the,keytab,created,in,the,directory,param,dir,directory,where,the,key,tab,would,be,created,param,princ,names,principal,names,to,be,created,return,link,path,to,key,tab,file,throws,exception,thrown,if,principal,or,keytab,could,not,be,created;protected,path,create,principal,key,tab,final,path,dir,final,string,princ,names,throws,exception,final,path,path,dir,resolve,random,alpha,of,length,10,keytab,simple,kdc,ldap,server,create,principal,path,princ,names,return,path
KerberosTestCase -> protected Path createPrincipalKeyTab(final Path dir, final String... princNames) throws Exception;1541476610;Creates principals and exports them to the keytab created in the directory.__@param dir        Directory where the key tab would be created._@param princNames principal names to be created_@return {@link Path} to key tab file._@throws Exception thrown if principal or keytab could not be created;protected Path createPrincipalKeyTab(final Path dir, final String... princNames) throws Exception {_        final Path path = dir.resolve(randomAlphaOfLength(10) + ".keytab")__        simpleKdcLdapServer.createPrincipal(path, princNames)__        return path__    };creates,principals,and,exports,them,to,the,keytab,created,in,the,directory,param,dir,directory,where,the,key,tab,would,be,created,param,princ,names,principal,names,to,be,created,return,link,path,to,key,tab,file,throws,exception,thrown,if,principal,or,keytab,could,not,be,created;protected,path,create,principal,key,tab,final,path,dir,final,string,princ,names,throws,exception,final,path,path,dir,resolve,random,alpha,of,length,10,keytab,simple,kdc,ldap,server,create,principal,path,princ,names,return,path
KerberosTestCase -> protected Path createPrincipalKeyTab(final Path dir, final String... princNames) throws Exception;1549324873;Creates principals and exports them to the keytab created in the directory.__@param dir        Directory where the key tab would be created._@param princNames principal names to be created_@return {@link Path} to key tab file._@throws Exception thrown if principal or keytab could not be created;protected Path createPrincipalKeyTab(final Path dir, final String... princNames) throws Exception {_        final Path path = dir.resolve(randomAlphaOfLength(10) + ".keytab")__        simpleKdcLdapServer.createPrincipal(path, princNames)__        return path__    };creates,principals,and,exports,them,to,the,keytab,created,in,the,directory,param,dir,directory,where,the,key,tab,would,be,created,param,princ,names,principal,names,to,be,created,return,link,path,to,key,tab,file,throws,exception,thrown,if,principal,or,keytab,could,not,be,created;protected,path,create,principal,key,tab,final,path,dir,final,string,princ,names,throws,exception,final,path,path,dir,resolve,random,alpha,of,length,10,keytab,simple,kdc,ldap,server,create,principal,path,princ,names,return,path
KerberosTestCase -> protected Path createPrincipalKeyTab(final Path dir, final String... princNames) throws Exception;1550558701;Creates principals and exports them to the keytab created in the directory.__@param dir        Directory where the key tab would be created._@param princNames principal names to be created_@return {@link Path} to key tab file._@throws Exception thrown if principal or keytab could not be created;protected Path createPrincipalKeyTab(final Path dir, final String... princNames) throws Exception {_        final Path path = dir.resolve(randomAlphaOfLength(10) + ".keytab")__        simpleKdcLdapServer.createPrincipal(path, princNames)__        return path__    };creates,principals,and,exports,them,to,the,keytab,created,in,the,directory,param,dir,directory,where,the,key,tab,would,be,created,param,princ,names,principal,names,to,be,created,return,link,path,to,key,tab,file,throws,exception,thrown,if,principal,or,keytab,could,not,be,created;protected,path,create,principal,key,tab,final,path,dir,final,string,princ,names,throws,exception,final,path,path,dir,resolve,random,alpha,of,length,10,keytab,simple,kdc,ldap,server,create,principal,path,princ,names,return,path
KerberosTestCase -> protected String principalName(final String user);1536964057;Appends realm name to user to form principal name__@param user user name_@return principal name in the form user@REALM;protected String principalName(final String user) {_        return user + "@" + simpleKdcLdapServer.getRealm()__    };appends,realm,name,to,user,to,form,principal,name,param,user,user,name,return,principal,name,in,the,form,user,realm;protected,string,principal,name,final,string,user,return,user,simple,kdc,ldap,server,get,realm
KerberosTestCase -> protected String principalName(final String user);1539723533;Appends realm name to user to form principal name__@param user user name_@return principal name in the form user@REALM;protected String principalName(final String user) {_        return user + "@" + simpleKdcLdapServer.getRealm()__    };appends,realm,name,to,user,to,form,principal,name,param,user,user,name,return,principal,name,in,the,form,user,realm;protected,string,principal,name,final,string,user,return,user,simple,kdc,ldap,server,get,realm
KerberosTestCase -> protected String principalName(final String user);1540847035;Appends realm name to user to form principal name__@param user user name_@return principal name in the form user@REALM;protected String principalName(final String user) {_        return user + "@" + simpleKdcLdapServer.getRealm()__    };appends,realm,name,to,user,to,form,principal,name,param,user,user,name,return,principal,name,in,the,form,user,realm;protected,string,principal,name,final,string,user,return,user,simple,kdc,ldap,server,get,realm
KerberosTestCase -> protected String principalName(final String user);1541476610;Appends realm name to user to form principal name__@param user user name_@return principal name in the form user@REALM;protected String principalName(final String user) {_        return user + "@" + simpleKdcLdapServer.getRealm()__    };appends,realm,name,to,user,to,form,principal,name,param,user,user,name,return,principal,name,in,the,form,user,realm;protected,string,principal,name,final,string,user,return,user,simple,kdc,ldap,server,get,realm
KerberosTestCase -> protected String principalName(final String user);1549324873;Appends realm name to user to form principal name__@param user user name_@return principal name in the form user@REALM;protected String principalName(final String user) {_        return user + "@" + simpleKdcLdapServer.getRealm()__    };appends,realm,name,to,user,to,form,principal,name,param,user,user,name,return,principal,name,in,the,form,user,realm;protected,string,principal,name,final,string,user,return,user,simple,kdc,ldap,server,get,realm
KerberosTestCase -> protected String principalName(final String user);1550558701;Appends realm name to user to form principal name__@param user user name_@return principal name in the form user@REALM;protected String principalName(final String user) {_        return user + "@" + simpleKdcLdapServer.getRealm()__    };appends,realm,name,to,user,to,form,principal,name,param,user,user,name,return,principal,name,in,the,form,user,realm;protected,string,principal,name,final,string,user,return,user,simple,kdc,ldap,server,get,realm
KerberosTestCase -> protected void createPrincipal(final String principalName, final char[] password) throws Exception;1536964057;Creates principal with given name and password.__@param principalName Principal name_@param password Password_@throws Exception thrown if principal could not be created;protected void createPrincipal(final String principalName, final char[] password) throws Exception {_        simpleKdcLdapServer.createPrincipal(principalName, new String(password))__    };creates,principal,with,given,name,and,password,param,principal,name,principal,name,param,password,password,throws,exception,thrown,if,principal,could,not,be,created;protected,void,create,principal,final,string,principal,name,final,char,password,throws,exception,simple,kdc,ldap,server,create,principal,principal,name,new,string,password
KerberosTestCase -> protected void createPrincipal(final String principalName, final char[] password) throws Exception;1539723533;Creates principal with given name and password.__@param principalName Principal name_@param password Password_@throws Exception thrown if principal could not be created;protected void createPrincipal(final String principalName, final char[] password) throws Exception {_        simpleKdcLdapServer.createPrincipal(principalName, new String(password))__    };creates,principal,with,given,name,and,password,param,principal,name,principal,name,param,password,password,throws,exception,thrown,if,principal,could,not,be,created;protected,void,create,principal,final,string,principal,name,final,char,password,throws,exception,simple,kdc,ldap,server,create,principal,principal,name,new,string,password
KerberosTestCase -> protected void createPrincipal(final String principalName, final char[] password) throws Exception;1540847035;Creates principal with given name and password.__@param principalName Principal name_@param password Password_@throws Exception thrown if principal could not be created;protected void createPrincipal(final String principalName, final char[] password) throws Exception {_        simpleKdcLdapServer.createPrincipal(principalName, new String(password))__    };creates,principal,with,given,name,and,password,param,principal,name,principal,name,param,password,password,throws,exception,thrown,if,principal,could,not,be,created;protected,void,create,principal,final,string,principal,name,final,char,password,throws,exception,simple,kdc,ldap,server,create,principal,principal,name,new,string,password
KerberosTestCase -> protected void createPrincipal(final String principalName, final char[] password) throws Exception;1541476610;Creates principal with given name and password.__@param principalName Principal name_@param password      Password_@throws Exception thrown if principal could not be created;protected void createPrincipal(final String principalName, final char[] password) throws Exception {_        simpleKdcLdapServer.createPrincipal(principalName, new String(password))__    };creates,principal,with,given,name,and,password,param,principal,name,principal,name,param,password,password,throws,exception,thrown,if,principal,could,not,be,created;protected,void,create,principal,final,string,principal,name,final,char,password,throws,exception,simple,kdc,ldap,server,create,principal,principal,name,new,string,password
KerberosTestCase -> protected void createPrincipal(final String principalName, final char[] password) throws Exception;1549324873;Creates principal with given name and password.__@param principalName Principal name_@param password      Password_@throws Exception thrown if principal could not be created;protected void createPrincipal(final String principalName, final char[] password) throws Exception {_        simpleKdcLdapServer.createPrincipal(principalName, new String(password))__    };creates,principal,with,given,name,and,password,param,principal,name,principal,name,param,password,password,throws,exception,thrown,if,principal,could,not,be,created;protected,void,create,principal,final,string,principal,name,final,char,password,throws,exception,simple,kdc,ldap,server,create,principal,principal,name,new,string,password
KerberosTestCase -> protected void createPrincipal(final String principalName, final char[] password) throws Exception;1550558701;Creates principal with given name and password.__@param principalName Principal name_@param password      Password_@throws Exception thrown if principal could not be created;protected void createPrincipal(final String principalName, final char[] password) throws Exception {_        simpleKdcLdapServer.createPrincipal(principalName, new String(password))__    };creates,principal,with,given,name,and,password,param,principal,name,principal,name,param,password,password,throws,exception,thrown,if,principal,could,not,be,created;protected,void,create,principal,final,string,principal,name,final,char,password,throws,exception,simple,kdc,ldap,server,create,principal,principal,name,new,string,password
