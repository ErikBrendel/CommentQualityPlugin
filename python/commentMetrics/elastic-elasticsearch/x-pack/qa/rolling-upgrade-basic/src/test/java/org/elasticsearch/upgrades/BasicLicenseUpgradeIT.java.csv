commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;public void testOldAndMixedClusterHaveActiveBasic() throws Exception {     assumeTrue("only runs against old or mixed cluster", clusterType == CLUSTER_TYPE.OLD || clusterType == CLUSTER_TYPE.MIXED).     assertBusy(this::checkBasicLicense). }
false;public;0;4;;public void testNewClusterHasActiveNonExpiringBasic() throws Exception {     assumeTrue("only runs against upgraded cluster", clusterType == CLUSTER_TYPE.UPGRADED).     assertBusy(this::checkNonExpiringBasicLicense). }
false;private;0;7;;private void checkBasicLicense() throws Exception {     Response licenseResponse = client().performRequest(new Request("GET", "/_license")).     Map<String, Object> licenseResponseMap = entityAsMap(licenseResponse).     Map<String, Object> licenseMap = (Map<String, Object>) licenseResponseMap.get("license").     assertEquals("basic", licenseMap.get("type")).     assertEquals("active", licenseMap.get("status")). }
false;private;0;8;;private void checkNonExpiringBasicLicense() throws Exception {     Response licenseResponse = client().performRequest(new Request("GET", "/_license")).     Map<String, Object> licenseResponseMap = entityAsMap(licenseResponse).     Map<String, Object> licenseMap = (Map<String, Object>) licenseResponseMap.get("license").     assertEquals("basic", licenseMap.get("type")).     assertEquals("active", licenseMap.get("status")).     assertNull(licenseMap.get("expiry_date_in_millis")). }
