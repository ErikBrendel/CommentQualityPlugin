commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;public void testResolveSubTree() throws Exception {     Settings settings = Settings.builder().put(getFullSettingKey(REALM_ID, SearchGroupsResolverSettings.BASE_DN), "dc=oldap,dc=test,dc=elasticsearch,dc=com").put(getFullSettingKey(REALM_ID.getName(), SearchGroupsResolverSettings.USER_ATTRIBUTE), "uid").build().     SearchGroupsResolver resolver = new SearchGroupsResolver(config(REALM_ID, settings)).     List<String> groups = resolveBlocking(resolver, ldapConnection, BRUCE_BANNER_DN, TimeValue.timeValueSeconds(10), NoOpLogger.INSTANCE, null).     assertThat(groups, containsInAnyOrder(containsString("Avengers"), containsString("SHIELD"), containsString("Geniuses"), containsString("Philanthropists"))). }
false;public;0;17;;public void testResolveOneLevel() throws Exception {     Settings settings = Settings.builder().put(getFullSettingKey(REALM_ID, SearchGroupsResolverSettings.BASE_DN), "ou=people,dc=oldap,dc=test,dc=elasticsearch,dc=com").put("group_search.scope", LdapSearchScope.ONE_LEVEL).put(getFullSettingKey(REALM_ID.getName(), SearchGroupsResolverSettings.USER_ATTRIBUTE), "uid").build().     SearchGroupsResolver resolver = new SearchGroupsResolver(config(REALM_ID, settings)).     List<String> groups = resolveBlocking(resolver, ldapConnection, BRUCE_BANNER_DN, TimeValue.timeValueSeconds(10), NoOpLogger.INSTANCE, null).     assertThat(groups, containsInAnyOrder(containsString("Avengers"), containsString("SHIELD"), containsString("Geniuses"), containsString("Philanthropists"))). }
false;public;0;13;;public void testResolveBase() throws Exception {     Settings settings = Settings.builder().put(getFullSettingKey(REALM_ID, SearchGroupsResolverSettings.BASE_DN), "cn=Avengers,ou=People,dc=oldap,dc=test,dc=elasticsearch,dc=com").put("group_search.scope", LdapSearchScope.BASE).put(getFullSettingKey(REALM_ID.getName(), SearchGroupsResolverSettings.USER_ATTRIBUTE), "uid").build().     SearchGroupsResolver resolver = new SearchGroupsResolver(config(REALM_ID, settings)).     List<String> groups = resolveBlocking(resolver, ldapConnection, BRUCE_BANNER_DN, TimeValue.timeValueSeconds(10), NoOpLogger.INSTANCE, null).     assertThat(groups, hasItem(containsString("Avengers"))). }
false;public;0;13;;public void testResolveCustomFilter() throws Exception {     Settings settings = Settings.builder().put(getFullSettingKey(REALM_ID, SearchGroupsResolverSettings.BASE_DN), "dc=oldap,dc=test,dc=elasticsearch,dc=com").put("group_search.filter", "(&(objectclass=posixGroup)(memberUID={0}))").put(getFullSettingKey(REALM_ID.getName(), SearchGroupsResolverSettings.USER_ATTRIBUTE), "uid").build().     SearchGroupsResolver resolver = new SearchGroupsResolver(config(REALM_ID, settings)).     List<String> groups = resolveBlocking(resolver, ldapConnection, "uid=selvig,ou=people,dc=oldap,dc=test,dc=elasticsearch,dc=com", TimeValue.timeValueSeconds(10), NoOpLogger.INSTANCE, null).     assertThat(groups, hasItem(containsString("Geniuses"))). }
false;public;0;12;;public void testFilterIncludesPosixGroups() throws Exception {     Settings settings = Settings.builder().put(getFullSettingKey(REALM_ID, SearchGroupsResolverSettings.BASE_DN), "dc=oldap,dc=test,dc=elasticsearch,dc=com").put(getFullSettingKey(REALM_ID.getName(), SearchGroupsResolverSettings.USER_ATTRIBUTE), "uid").build().     SearchGroupsResolver resolver = new SearchGroupsResolver(config(REALM_ID, settings)).     List<String> groups = resolveBlocking(resolver, ldapConnection, "uid=selvig,ou=people,dc=oldap,dc=test,dc=elasticsearch,dc=com", TimeValue.timeValueSeconds(10), NoOpLogger.INSTANCE, null).     assertThat(groups, hasItem(containsString("Geniuses"))). }
false;public;0;12;;public void testCreateWithoutSpecifyingBaseDN() throws Exception {     Settings settings = Settings.builder().put("group_search.scope", LdapSearchScope.SUB_TREE).build().     try {         new SearchGroupsResolver(config(REALM_ID, settings)).         fail("base_dn must be specified and an exception should have been thrown").     } catch (IllegalArgumentException e) {         assertThat(e.getMessage(), containsString("base_dn must be specified")).     } }
false;public;0;9;;public void testReadUserAttributeUid() throws Exception {     Settings settings = Settings.builder().put(getFullSettingKey(REALM_ID, SearchGroupsResolverSettings.BASE_DN), "dc=oldap,dc=test,dc=elasticsearch,dc=com").put(getFullSettingKey(REALM_ID.getName(), SearchGroupsResolverSettings.USER_ATTRIBUTE), "uid").build().     SearchGroupsResolver resolver = new SearchGroupsResolver(config(REALM_ID, settings)).     PlainActionFuture<String> future = new PlainActionFuture<>().     resolver.readUserAttribute(ldapConnection, BRUCE_BANNER_DN, TimeValue.timeValueSeconds(5), future).     assertThat(future.actionGet(), is("hulk")). }
false;public;0;11;;public void testReadUserAttributeCn() throws Exception {     Settings settings = Settings.builder().put(getFullSettingKey(REALM_ID, SearchGroupsResolverSettings.BASE_DN), "dc=oldap,dc=test,dc=elasticsearch,dc=com").put(getFullSettingKey(REALM_ID.getName(), SearchGroupsResolverSettings.USER_ATTRIBUTE), "cn").build().     SearchGroupsResolver resolver = new SearchGroupsResolver(config(REALM_ID, settings)).     PlainActionFuture<String> future = new PlainActionFuture<>().     resolver.readUserAttribute(ldapConnection, BRUCE_BANNER_DN, TimeValue.timeValueSeconds(5), future).     assertThat(future.actionGet(), is("Bruce Banner")). }
false;public;0;11;;public void testReadNonExistentUserAttribute() throws Exception {     Settings settings = Settings.builder().put(getFullSettingKey(REALM_ID, SearchGroupsResolverSettings.BASE_DN), "dc=oldap,dc=test,dc=elasticsearch,dc=com").put(getFullSettingKey(REALM_ID.getName(), SearchGroupsResolverSettings.USER_ATTRIBUTE), "doesntExists").build().     SearchGroupsResolver resolver = new SearchGroupsResolver(config(REALM_ID, settings)).     PlainActionFuture<String> future = new PlainActionFuture<>().     resolver.readUserAttribute(ldapConnection, BRUCE_BANNER_DN, TimeValue.timeValueSeconds(5), future).     assertNull(future.actionGet()). }
false;public;0;12;;public void testReadBinaryUserAttribute() throws Exception {     Settings settings = Settings.builder().put(getFullSettingKey(REALM_ID, SearchGroupsResolverSettings.BASE_DN), "dc=oldap,dc=test,dc=elasticsearch,dc=com").put(getFullSettingKey(REALM_ID.getName(), SearchGroupsResolverSettings.USER_ATTRIBUTE), "userPassword").build().     SearchGroupsResolver resolver = new SearchGroupsResolver(config(REALM_ID, settings)).     PlainActionFuture<String> future = new PlainActionFuture<>().     resolver.readUserAttribute(ldapConnection, BRUCE_BANNER_DN, TimeValue.timeValueSeconds(5), future).     String attribute = future.actionGet().     assertThat(attribute, is(notNullValue())). }
false;protected;0;4;;@Override protected String ldapUrl() {     return OpenLdapTests.OPEN_LDAP_DNS_URL. }
false;protected;0;4;;@Override protected String bindDN() {     return BRUCE_BANNER_DN. }
false;protected;0;4;;@Override protected String bindPassword() {     return OpenLdapTests.PASSWORD. }
false;protected;0;4;;@Override protected String trustPath() {     return "/idptrust.jks". }
