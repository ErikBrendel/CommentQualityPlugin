commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public boolean supports(AuthenticationToken token) {     return token instanceof UsernamePasswordToken. }
false;public;1;11;;@Override public UsernamePasswordToken token(ThreadContext threadContext) {     String user = threadContext.getHeader(USER_HEADER).     if (user != null) {         String password = threadContext.getHeader(PW_HEADER).         if (password != null) {             return new UsernamePasswordToken(user, new SecureString(password.toCharArray())).         }     }     return null. }
false;public;2;14;;@Override public void authenticate(AuthenticationToken authToken, ActionListener<AuthenticationResult> listener) {     UsernamePasswordToken token = (UsernamePasswordToken) authToken.     final String actualUser = token.principal().     if (KNOWN_USER.equals(actualUser)) {         if (CharArrays.constantTimeEquals(token.credentials().getChars(), KNOWN_PW.getChars())) {             listener.onResponse(AuthenticationResult.success(new User(actualUser, ROLES))).         } else {             listener.onResponse(AuthenticationResult.unsuccessful("Invalid password for user " + actualUser, null)).         }     } else {         listener.onResponse(AuthenticationResult.notHandled()).     } }
false;public;2;4;;@Override public void lookupUser(String username, ActionListener<User> listener) {     listener.onResponse(null). }
