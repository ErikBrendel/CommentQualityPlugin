commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public Map<String, Realm.Factory> getRealms(ResourceWatcherService resourceWatcherService) {     return Collections.singletonMap(CustomRealm.TYPE, CustomRealm::new). }
false;public;0;4;;@Override public AuthenticationFailureHandler getAuthenticationFailureHandler() {     return new CustomAuthenticationFailureHandler(). }
false;public;2;10;;@Override public List<BiConsumer<Set<String>, ActionListener<RoleRetrievalResult>>> getRolesProviders(Settings settings, ResourceWatcherService resourceWatcherService) {     CustomInMemoryRolesProvider rp1 = new CustomInMemoryRolesProvider(Collections.singletonMap(ROLE_A, "read")).     Map<String, String> roles = new HashMap<>().     roles.put(ROLE_A, "all").     roles.put(ROLE_B, "all").     CustomInMemoryRolesProvider rp2 = new CustomInMemoryRolesProvider(roles).     return Arrays.asList(rp1, rp2). }
