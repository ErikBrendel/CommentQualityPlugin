commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;public void testAuthenticate() {     Settings globalSettings = Settings.builder().put("path.home", createTempDir()).build().     CustomRealm realm = new CustomRealm(new RealmConfig(new RealmConfig.RealmIdentifier(CustomRealm.TYPE, "test"), globalSettings, TestEnvironment.newEnvironment(globalSettings), new ThreadContext(globalSettings))).     SecureString password = CustomRealm.KNOWN_PW.clone().     UsernamePasswordToken token = new UsernamePasswordToken(CustomRealm.KNOWN_USER, password).     PlainActionFuture<AuthenticationResult> plainActionFuture = new PlainActionFuture<>().     realm.authenticate(token, plainActionFuture).     User user = plainActionFuture.actionGet().getUser().     assertThat(user, notNullValue()).     assertThat(user.roles(), equalTo(CustomRealm.ROLES)).     assertThat(user.principal(), equalTo(CustomRealm.KNOWN_USER)). }
false;public;0;11;;public void testAuthenticateBadUser() {     Settings globalSettings = Settings.builder().put("path.home", createTempDir()).build().     CustomRealm realm = new CustomRealm(new RealmConfig(new RealmConfig.RealmIdentifier(CustomRealm.TYPE, "test"), globalSettings, TestEnvironment.newEnvironment(globalSettings), new ThreadContext(globalSettings))).     SecureString password = CustomRealm.KNOWN_PW.clone().     UsernamePasswordToken token = new UsernamePasswordToken(CustomRealm.KNOWN_USER + "1", password).     PlainActionFuture<AuthenticationResult> plainActionFuture = new PlainActionFuture<>().     realm.authenticate(token, plainActionFuture).     final AuthenticationResult result = plainActionFuture.actionGet().     assertThat(result.getStatus(), equalTo(AuthenticationResult.Status.CONTINUE)). }
