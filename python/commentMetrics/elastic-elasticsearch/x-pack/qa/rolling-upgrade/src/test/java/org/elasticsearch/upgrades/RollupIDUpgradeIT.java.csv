# id;timestamp;commentText;codeText;commentWords;codeWords
RollupIDUpgradeIT -> public void testIDsUpgradeCorrectly() throws Exception;1533319589;This test verifies that as a cluster is upgraded incrementally, new documents eventually switch_over to the "new" form of ID (128 bit Murmur3 ids).__Rollup IDs are essentially the hashed concatenation of keys returned by the composite aggregation,_so the field values that are being indexed (timestamp, value, etc) directly affect the_ID that is generated.__We don't know which node will get the Rollup task to start, so we don't know when it will migrate._The first doc is guaranteed to be the "old" style since all nodes are un-upgraded.  The second_and third phase will have a mixed cluster, and the rollup task may or may not migrate.  In those_phases we have two options (old and new) for the document added in the phase.__The last phase is guaranteed to be new as it's a fully upgraded cluster.;public void testIDsUpgradeCorrectly() throws Exception {_        switch (CLUSTER_TYPE) {_            case OLD:_                break__            case MIXED:_                Request waitForYellow = new Request("GET", "/_cluster/health")__                waitForYellow.addParameter("wait_for_nodes", "3")__                waitForYellow.addParameter("wait_for_status", "yellow")__                client().performRequest(waitForYellow)__                break__            case UPGRADED:_                Request waitForGreen = new Request("GET", "/_cluster/health/target,rollup")__                waitForGreen.addParameter("wait_for_nodes", "3")__                waitForGreen.addParameter("wait_for_status", "green")__                _                waitForGreen.addParameter("timeout", "70s")__                waitForGreen.addParameter("level", "shards")__                client().performRequest(waitForGreen)__                break__            default:_                throw new UnsupportedOperationException("Unknown cluster type [" + CLUSTER_TYPE + "]")__        }__        OffsetDateTime timestamp = Instant.parse("2018-01-01T00:00:01.000Z").atOffset(ZoneOffset.UTC)___        if (CLUSTER_TYPE == ClusterType.OLD) {_            String recoverQuickly = "{\"settings\": {\"index.unassigned.node_left.delayed_timeout\": \"100ms\"}}"___            Request createTargetIndex = new Request("PUT", "/target")__            createTargetIndex.setJsonEntity(recoverQuickly)__            client().performRequest(createTargetIndex)___            final Request indexRequest = new Request("POST", "/target/_doc/1")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.toString() + "\",\"value\":123}")__            client().performRequest(indexRequest)___            _            final Request createRollupJobRequest = new Request("PUT", "/_xpack/rollup/job/rollup-id-test")__            createRollupJobRequest.setJsonEntity("{"_                + "\"index_pattern\":\"target\","_                + "\"rollup_index\":\"rollup\","_                + "\"cron\":\"*/1 * * * * ?\","_                + "\"page_size\":100,"_                + "\"groups\":{"_                + "    \"date_histogram\":{"_                + "        \"field\":\"timestamp\","_                + "        \"interval\":\"5m\""_                + "      },"_                +       "\"histogram\":{"_                + "        \"fields\": [\"value\"],"_                + "        \"interval\":1"_                + "      },"_                +       "\"terms\":{"_                + "        \"fields\": [\"value\"]"_                + "      }"_                + "},"_                + "\"metrics\":["_                + "    {\"field\":\"value\",\"metrics\":[\"min\",\"max\",\"sum\"]}"_                + "]"_                + "}")___            Map<String, Object> createRollupJobResponse = entityAsMap(client().performRequest(createRollupJobRequest))__            assertThat(createRollupJobResponse.get("acknowledged"), equalTo(Boolean.TRUE))___            Request updateSettings = new Request("PUT", "/rollup/_settings")__            updateSettings.setJsonEntity(recoverQuickly)__            client().performRequest(updateSettings)___            _            final Request startRollupJobRequest = new Request("POST", "_xpack/rollup/job/rollup-id-test/_start")__            Map<String, Object> startRollupJobResponse = entityAsMap(client().performRequest(startRollupJobRequest))__            assertThat(startRollupJobResponse.get("started"), equalTo(Boolean.TRUE))___            assertRollUpJob("rollup-id-test")__            List<String> ids = getSearchResults(1)__            assertThat(ids, containsInAnyOrder("3310683722"))___        }__        if (CLUSTER_TYPE == ClusterType.MIXED && Booleans.parseBoolean(System.getProperty("tests.first_round"))) {_            final Request indexRequest = new Request("POST", "/target/_doc/2")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(1).toString() + "\",\"value\":345}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(2)__            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA"))__            assertThat(ids.toString(),ids.size(), equalTo(0))__        }__        if (CLUSTER_TYPE == ClusterType.MIXED && Booleans.parseBoolean(System.getProperty("tests.first_round")) == false) {_            final Request indexRequest = new Request("POST", "/target/_doc/3")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(2).toString() + "\",\"value\":456}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(3)___            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "4288019978",_                "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA", "rollup-id-test$60RGDSb92YI5LH4_Fnq_1g"))__            assertThat(ids.toString(), ids.size(), equalTo(0))___        }__        if (CLUSTER_TYPE == ClusterType.UPGRADED) {_            final Request indexRequest = new Request("POST", "/target/_doc/4")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(3).toString() + "\",\"value\":567}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(4)__            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "4288019978",_                "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA", "rollup-id-test$60RGDSb92YI5LH4_Fnq_1g"))___            _            ids.remove("rollup-id-test$LAKZftDeQwsUtdPixrkkzQ")__            assertThat(ids.toString(), ids.size(), equalTo(0))__        }__    };this,test,verifies,that,as,a,cluster,is,upgraded,incrementally,new,documents,eventually,switch,over,to,the,new,form,of,id,128,bit,murmur3,ids,rollup,ids,are,essentially,the,hashed,concatenation,of,keys,returned,by,the,composite,aggregation,so,the,field,values,that,are,being,indexed,timestamp,value,etc,directly,affect,the,id,that,is,generated,we,don,t,know,which,node,will,get,the,rollup,task,to,start,so,we,don,t,know,when,it,will,migrate,the,first,doc,is,guaranteed,to,be,the,old,style,since,all,nodes,are,un,upgraded,the,second,and,third,phase,will,have,a,mixed,cluster,and,the,rollup,task,may,or,may,not,migrate,in,those,phases,we,have,two,options,old,and,new,for,the,document,added,in,the,phase,the,last,phase,is,guaranteed,to,be,new,as,it,s,a,fully,upgraded,cluster;public,void,test,ids,upgrade,correctly,throws,exception,switch,case,old,break,case,mixed,request,wait,for,yellow,new,request,get,health,wait,for,yellow,add,parameter,3,wait,for,yellow,add,parameter,yellow,client,perform,request,wait,for,yellow,break,case,upgraded,request,wait,for,green,new,request,get,health,target,rollup,wait,for,green,add,parameter,3,wait,for,green,add,parameter,green,wait,for,green,add,parameter,timeout,70s,wait,for,green,add,parameter,level,shards,client,perform,request,wait,for,green,break,default,throw,new,unsupported,operation,exception,unknown,cluster,type,offset,date,time,timestamp,instant,parse,2018,01,01t00,00,01,000z,at,offset,zone,offset,utc,if,cluster,type,old,string,recover,quickly,settings,index,unassigned,100ms,request,create,target,index,new,request,put,target,create,target,index,set,json,entity,recover,quickly,client,perform,request,create,target,index,final,request,index,request,new,request,post,target,1,index,request,set,json,entity,timestamp,timestamp,to,string,value,123,client,perform,request,index,request,final,request,create,rollup,job,request,new,request,put,rollup,job,rollup,id,test,create,rollup,job,request,set,json,entity,target,rollup,cron,1,100,groups,field,timestamp,interval,5m,histogram,fields,value,interval,1,terms,fields,value,metrics,field,value,metrics,min,max,sum,map,string,object,create,rollup,job,response,entity,as,map,client,perform,request,create,rollup,job,request,assert,that,create,rollup,job,response,get,acknowledged,equal,to,boolean,true,request,update,settings,new,request,put,rollup,update,settings,set,json,entity,recover,quickly,client,perform,request,update,settings,final,request,start,rollup,job,request,new,request,post,rollup,job,rollup,id,test,map,string,object,start,rollup,job,response,entity,as,map,client,perform,request,start,rollup,job,request,assert,that,start,rollup,job,response,get,started,equal,to,boolean,true,assert,roll,up,job,rollup,id,test,list,string,ids,get,search,results,1,assert,that,ids,contains,in,any,order,3310683722,if,cluster,type,mixed,booleans,parse,boolean,system,get,property,tests,final,request,index,request,new,request,post,target,2,index,request,set,json,entity,timestamp,timestamp,plus,days,1,to,string,value,345,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,2,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,assert,that,ids,to,string,ids,size,equal,to,0,if,cluster,type,mixed,booleans,parse,boolean,system,get,property,tests,false,final,request,index,request,new,request,post,target,3,index,request,set,json,entity,timestamp,timestamp,plus,days,2,to,string,value,456,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,3,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,4288019978,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,rollup,id,test,assert,that,ids,to,string,ids,size,equal,to,0,if,cluster,type,upgraded,final,request,index,request,new,request,post,target,4,index,request,set,json,entity,timestamp,timestamp,plus,days,3,to,string,value,567,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,4,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,4288019978,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,rollup,id,test,ids,remove,rollup,id,test,lakzft,de,qws,utd,pixrkkz,q,assert,that,ids,to,string,ids,size,equal,to,0
RollupIDUpgradeIT -> public void testIDsUpgradeCorrectly() throws Exception;1533323914;This test verifies that as a cluster is upgraded incrementally, new documents eventually switch_over to the "new" form of ID (128 bit Murmur3 ids).__Rollup IDs are essentially the hashed concatenation of keys returned by the composite aggregation,_so the field values that are being indexed (timestamp, value, etc) directly affect the_ID that is generated.__We don't know which node will get the Rollup task to start, so we don't know when it will migrate._The first doc is guaranteed to be the "old" style since all nodes are un-upgraded.  The second_and third phase will have a mixed cluster, and the rollup task may or may not migrate.  In those_phases we have two options (old and new) for the document added in the phase.__The last phase is guaranteed to be new as it's a fully upgraded cluster.;public void testIDsUpgradeCorrectly() throws Exception {_        assumeTrue("Rollup became available in 6.3", UPGRADE_FROM_VERSION.onOrAfter(Version.V_6_3_0))__        assumeTrue("Rollup ID change happened in 6.4", UPGRADE_FROM_VERSION.before(Version.V_6_4_0))__        switch (CLUSTER_TYPE) {_            case OLD:_                break__            case MIXED:_                Request waitForYellow = new Request("GET", "/_cluster/health")__                waitForYellow.addParameter("wait_for_nodes", "3")__                waitForYellow.addParameter("wait_for_status", "yellow")__                client().performRequest(waitForYellow)__                break__            case UPGRADED:_                Request waitForGreen = new Request("GET", "/_cluster/health/target,rollup")__                waitForGreen.addParameter("wait_for_nodes", "3")__                waitForGreen.addParameter("wait_for_status", "green")__                _                waitForGreen.addParameter("timeout", "70s")__                waitForGreen.addParameter("level", "shards")__                client().performRequest(waitForGreen)__                break__            default:_                throw new UnsupportedOperationException("Unknown cluster type [" + CLUSTER_TYPE + "]")__        }__        OffsetDateTime timestamp = Instant.parse("2018-01-01T00:00:01.000Z").atOffset(ZoneOffset.UTC)___        if (CLUSTER_TYPE == ClusterType.OLD) {_            String recoverQuickly = "{\"settings\": {\"index.unassigned.node_left.delayed_timeout\": \"100ms\"}}"___            Request createTargetIndex = new Request("PUT", "/target")__            createTargetIndex.setJsonEntity(recoverQuickly)__            client().performRequest(createTargetIndex)___            final Request indexRequest = new Request("POST", "/target/_doc/1")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.toString() + "\",\"value\":123}")__            client().performRequest(indexRequest)___            _            final Request createRollupJobRequest = new Request("PUT", "/_xpack/rollup/job/rollup-id-test")__            createRollupJobRequest.setJsonEntity("{"_                + "\"index_pattern\":\"target\","_                + "\"rollup_index\":\"rollup\","_                + "\"cron\":\"*/1 * * * * ?\","_                + "\"page_size\":100,"_                + "\"groups\":{"_                + "    \"date_histogram\":{"_                + "        \"field\":\"timestamp\","_                + "        \"interval\":\"5m\""_                + "      },"_                +       "\"histogram\":{"_                + "        \"fields\": [\"value\"],"_                + "        \"interval\":1"_                + "      },"_                +       "\"terms\":{"_                + "        \"fields\": [\"value\"]"_                + "      }"_                + "},"_                + "\"metrics\":["_                + "    {\"field\":\"value\",\"metrics\":[\"min\",\"max\",\"sum\"]}"_                + "]"_                + "}")___            Map<String, Object> createRollupJobResponse = entityAsMap(client().performRequest(createRollupJobRequest))__            assertThat(createRollupJobResponse.get("acknowledged"), equalTo(Boolean.TRUE))___            Request updateSettings = new Request("PUT", "/rollup/_settings")__            updateSettings.setJsonEntity(recoverQuickly)__            client().performRequest(updateSettings)___            _            final Request startRollupJobRequest = new Request("POST", "_xpack/rollup/job/rollup-id-test/_start")__            Map<String, Object> startRollupJobResponse = entityAsMap(client().performRequest(startRollupJobRequest))__            assertThat(startRollupJobResponse.get("started"), equalTo(Boolean.TRUE))___            assertRollUpJob("rollup-id-test")__            List<String> ids = getSearchResults(1)__            assertThat(ids, containsInAnyOrder("3310683722"))___        }__        if (CLUSTER_TYPE == ClusterType.MIXED && Booleans.parseBoolean(System.getProperty("tests.first_round"))) {_            final Request indexRequest = new Request("POST", "/target/_doc/2")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(1).toString() + "\",\"value\":345}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(2)__            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA"))__            assertThat(ids.toString(),ids.size(), equalTo(0))__        }__        if (CLUSTER_TYPE == ClusterType.MIXED && Booleans.parseBoolean(System.getProperty("tests.first_round")) == false) {_            final Request indexRequest = new Request("POST", "/target/_doc/3")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(2).toString() + "\",\"value\":456}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(3)___            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "4288019978",_                "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA", "rollup-id-test$60RGDSb92YI5LH4_Fnq_1g"))__            assertThat(ids.toString(), ids.size(), equalTo(0))___        }__        if (CLUSTER_TYPE == ClusterType.UPGRADED) {_            final Request indexRequest = new Request("POST", "/target/_doc/4")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(3).toString() + "\",\"value\":567}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(4)__            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "4288019978",_                "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA", "rollup-id-test$60RGDSb92YI5LH4_Fnq_1g"))___            _            ids.remove("rollup-id-test$LAKZftDeQwsUtdPixrkkzQ")__            assertThat(ids.toString(), ids.size(), equalTo(0))__        }__    };this,test,verifies,that,as,a,cluster,is,upgraded,incrementally,new,documents,eventually,switch,over,to,the,new,form,of,id,128,bit,murmur3,ids,rollup,ids,are,essentially,the,hashed,concatenation,of,keys,returned,by,the,composite,aggregation,so,the,field,values,that,are,being,indexed,timestamp,value,etc,directly,affect,the,id,that,is,generated,we,don,t,know,which,node,will,get,the,rollup,task,to,start,so,we,don,t,know,when,it,will,migrate,the,first,doc,is,guaranteed,to,be,the,old,style,since,all,nodes,are,un,upgraded,the,second,and,third,phase,will,have,a,mixed,cluster,and,the,rollup,task,may,or,may,not,migrate,in,those,phases,we,have,two,options,old,and,new,for,the,document,added,in,the,phase,the,last,phase,is,guaranteed,to,be,new,as,it,s,a,fully,upgraded,cluster;public,void,test,ids,upgrade,correctly,throws,exception,assume,true,rollup,became,available,in,6,3,on,or,after,version,assume,true,rollup,id,change,happened,in,6,4,before,version,switch,case,old,break,case,mixed,request,wait,for,yellow,new,request,get,health,wait,for,yellow,add,parameter,3,wait,for,yellow,add,parameter,yellow,client,perform,request,wait,for,yellow,break,case,upgraded,request,wait,for,green,new,request,get,health,target,rollup,wait,for,green,add,parameter,3,wait,for,green,add,parameter,green,wait,for,green,add,parameter,timeout,70s,wait,for,green,add,parameter,level,shards,client,perform,request,wait,for,green,break,default,throw,new,unsupported,operation,exception,unknown,cluster,type,offset,date,time,timestamp,instant,parse,2018,01,01t00,00,01,000z,at,offset,zone,offset,utc,if,cluster,type,old,string,recover,quickly,settings,index,unassigned,100ms,request,create,target,index,new,request,put,target,create,target,index,set,json,entity,recover,quickly,client,perform,request,create,target,index,final,request,index,request,new,request,post,target,1,index,request,set,json,entity,timestamp,timestamp,to,string,value,123,client,perform,request,index,request,final,request,create,rollup,job,request,new,request,put,rollup,job,rollup,id,test,create,rollup,job,request,set,json,entity,target,rollup,cron,1,100,groups,field,timestamp,interval,5m,histogram,fields,value,interval,1,terms,fields,value,metrics,field,value,metrics,min,max,sum,map,string,object,create,rollup,job,response,entity,as,map,client,perform,request,create,rollup,job,request,assert,that,create,rollup,job,response,get,acknowledged,equal,to,boolean,true,request,update,settings,new,request,put,rollup,update,settings,set,json,entity,recover,quickly,client,perform,request,update,settings,final,request,start,rollup,job,request,new,request,post,rollup,job,rollup,id,test,map,string,object,start,rollup,job,response,entity,as,map,client,perform,request,start,rollup,job,request,assert,that,start,rollup,job,response,get,started,equal,to,boolean,true,assert,roll,up,job,rollup,id,test,list,string,ids,get,search,results,1,assert,that,ids,contains,in,any,order,3310683722,if,cluster,type,mixed,booleans,parse,boolean,system,get,property,tests,final,request,index,request,new,request,post,target,2,index,request,set,json,entity,timestamp,timestamp,plus,days,1,to,string,value,345,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,2,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,assert,that,ids,to,string,ids,size,equal,to,0,if,cluster,type,mixed,booleans,parse,boolean,system,get,property,tests,false,final,request,index,request,new,request,post,target,3,index,request,set,json,entity,timestamp,timestamp,plus,days,2,to,string,value,456,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,3,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,4288019978,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,rollup,id,test,assert,that,ids,to,string,ids,size,equal,to,0,if,cluster,type,upgraded,final,request,index,request,new,request,post,target,4,index,request,set,json,entity,timestamp,timestamp,plus,days,3,to,string,value,567,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,4,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,4288019978,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,rollup,id,test,ids,remove,rollup,id,test,lakzft,de,qws,utd,pixrkkz,q,assert,that,ids,to,string,ids,size,equal,to,0
RollupIDUpgradeIT -> public void testIDsUpgradeCorrectly() throws Exception;1541171529;This test verifies that as a cluster is upgraded incrementally, new documents eventually switch_over to the "new" form of ID (128 bit Murmur3 ids).__Rollup IDs are essentially the hashed concatenation of keys returned by the composite aggregation,_so the field values that are being indexed (timestamp, value, etc) directly affect the_ID that is generated.__We don't know which node will get the Rollup task to start, so we don't know when it will migrate._The first doc is guaranteed to be the "old" style since all nodes are un-upgraded.  The second_and third phase will have a mixed cluster, and the rollup task may or may not migrate.  In those_phases we have two options (old and new) for the document added in the phase.__The last phase is guaranteed to be new as it's a fully upgraded cluster.;public void testIDsUpgradeCorrectly() throws Exception {_        assumeTrue("Rollup became available in 6.3", UPGRADE_FROM_VERSION.onOrAfter(Version.V_6_3_0))__        assumeTrue("Rollup ID change happened in 6.4", UPGRADE_FROM_VERSION.before(Version.V_6_4_0))__        switch (CLUSTER_TYPE) {_            case OLD:_                break__            case MIXED:_                Request waitForYellow = new Request("GET", "/_cluster/health")__                waitForYellow.addParameter("wait_for_nodes", "3")__                waitForYellow.addParameter("wait_for_status", "yellow")__                client().performRequest(waitForYellow)__                break__            case UPGRADED:_                Request waitForGreen = new Request("GET", "/_cluster/health/target,rollup")__                waitForGreen.addParameter("wait_for_nodes", "3")__                waitForGreen.addParameter("wait_for_status", "green")__                _                waitForGreen.addParameter("timeout", "70s")__                waitForGreen.addParameter("level", "shards")__                client().performRequest(waitForGreen)__                break__            default:_                throw new UnsupportedOperationException("Unknown cluster type [" + CLUSTER_TYPE + "]")__        }__        OffsetDateTime timestamp = Instant.parse("2018-01-01T00:00:01.000Z").atOffset(ZoneOffset.UTC)___        if (CLUSTER_TYPE == ClusterType.OLD) {_            String recoverQuickly = "{\"settings\": {\"index.unassigned.node_left.delayed_timeout\": \"100ms\"}}"___            Request createTargetIndex = new Request("PUT", "/target")__            createTargetIndex.setJsonEntity(recoverQuickly)__            client().performRequest(createTargetIndex)___            final Request indexRequest = new Request("POST", "/target/_doc/1")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.toString() + "\",\"value\":123}")__            client().performRequest(indexRequest)___            _            final Request createRollupJobRequest = new Request("PUT", "/_xpack/rollup/job/rollup-id-test")__            createRollupJobRequest.setJsonEntity("{"_                + "\"index_pattern\":\"target\","_                + "\"rollup_index\":\"rollup\","_                + "\"cron\":\"*/1 * * * * ?\","_                + "\"page_size\":100,"_                + "\"groups\":{"_                + "    \"date_histogram\":{"_                + "        \"field\":\"timestamp\","_                + "        \"interval\":\"5m\""_                + "      },"_                +       "\"histogram\":{"_                + "        \"fields\": [\"value\"],"_                + "        \"interval\":1"_                + "      },"_                +       "\"terms\":{"_                + "        \"fields\": [\"value\"]"_                + "      }"_                + "},"_                + "\"metrics\":["_                + "    {\"field\":\"value\",\"metrics\":[\"min\",\"max\",\"sum\"]}"_                + "]"_                + "}")___            Map<String, Object> createRollupJobResponse = entityAsMap(client().performRequest(createRollupJobRequest))__            assertThat(createRollupJobResponse.get("acknowledged"), equalTo(Boolean.TRUE))___            Request updateSettings = new Request("PUT", "/rollup/_settings")__            updateSettings.setJsonEntity(recoverQuickly)__            client().performRequest(updateSettings)___            _            final Request startRollupJobRequest = new Request("POST", "_xpack/rollup/job/rollup-id-test/_start")__            Map<String, Object> startRollupJobResponse = entityAsMap(client().performRequest(startRollupJobRequest))__            assertThat(startRollupJobResponse.get("started"), equalTo(Boolean.TRUE))___            assertRollUpJob("rollup-id-test")__            List<String> ids = getSearchResults(1)__            assertThat(ids, containsInAnyOrder("3310683722"))___        }__        if (CLUSTER_TYPE == ClusterType.MIXED && Booleans.parseBoolean(System.getProperty("tests.first_round"))) {_            final Request indexRequest = new Request("POST", "/target/_doc/2")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(1).toString() + "\",\"value\":345}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(2)__            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA"))__            assertThat(ids.toString(),ids.size(), equalTo(0))__        }__        if (CLUSTER_TYPE == ClusterType.MIXED && Booleans.parseBoolean(System.getProperty("tests.first_round")) == false) {_            final Request indexRequest = new Request("POST", "/target/_doc/3")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(2).toString() + "\",\"value\":456}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(3)___            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "4288019978",_                "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA", "rollup-id-test$60RGDSb92YI5LH4_Fnq_1g"))__            assertThat(ids.toString(), ids.size(), equalTo(0))___        }__        if (CLUSTER_TYPE == ClusterType.UPGRADED) {_            final Request indexRequest = new Request("POST", "/target/_doc/4")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(3).toString() + "\",\"value\":567}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(4)__            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "4288019978",_                "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA", "rollup-id-test$60RGDSb92YI5LH4_Fnq_1g"))___            _            ids.remove("rollup-id-test$LAKZftDeQwsUtdPixrkkzQ")__            assertThat(ids.toString(), ids.size(), equalTo(0))__        }__    };this,test,verifies,that,as,a,cluster,is,upgraded,incrementally,new,documents,eventually,switch,over,to,the,new,form,of,id,128,bit,murmur3,ids,rollup,ids,are,essentially,the,hashed,concatenation,of,keys,returned,by,the,composite,aggregation,so,the,field,values,that,are,being,indexed,timestamp,value,etc,directly,affect,the,id,that,is,generated,we,don,t,know,which,node,will,get,the,rollup,task,to,start,so,we,don,t,know,when,it,will,migrate,the,first,doc,is,guaranteed,to,be,the,old,style,since,all,nodes,are,un,upgraded,the,second,and,third,phase,will,have,a,mixed,cluster,and,the,rollup,task,may,or,may,not,migrate,in,those,phases,we,have,two,options,old,and,new,for,the,document,added,in,the,phase,the,last,phase,is,guaranteed,to,be,new,as,it,s,a,fully,upgraded,cluster;public,void,test,ids,upgrade,correctly,throws,exception,assume,true,rollup,became,available,in,6,3,on,or,after,version,assume,true,rollup,id,change,happened,in,6,4,before,version,switch,case,old,break,case,mixed,request,wait,for,yellow,new,request,get,health,wait,for,yellow,add,parameter,3,wait,for,yellow,add,parameter,yellow,client,perform,request,wait,for,yellow,break,case,upgraded,request,wait,for,green,new,request,get,health,target,rollup,wait,for,green,add,parameter,3,wait,for,green,add,parameter,green,wait,for,green,add,parameter,timeout,70s,wait,for,green,add,parameter,level,shards,client,perform,request,wait,for,green,break,default,throw,new,unsupported,operation,exception,unknown,cluster,type,offset,date,time,timestamp,instant,parse,2018,01,01t00,00,01,000z,at,offset,zone,offset,utc,if,cluster,type,old,string,recover,quickly,settings,index,unassigned,100ms,request,create,target,index,new,request,put,target,create,target,index,set,json,entity,recover,quickly,client,perform,request,create,target,index,final,request,index,request,new,request,post,target,1,index,request,set,json,entity,timestamp,timestamp,to,string,value,123,client,perform,request,index,request,final,request,create,rollup,job,request,new,request,put,rollup,job,rollup,id,test,create,rollup,job,request,set,json,entity,target,rollup,cron,1,100,groups,field,timestamp,interval,5m,histogram,fields,value,interval,1,terms,fields,value,metrics,field,value,metrics,min,max,sum,map,string,object,create,rollup,job,response,entity,as,map,client,perform,request,create,rollup,job,request,assert,that,create,rollup,job,response,get,acknowledged,equal,to,boolean,true,request,update,settings,new,request,put,rollup,update,settings,set,json,entity,recover,quickly,client,perform,request,update,settings,final,request,start,rollup,job,request,new,request,post,rollup,job,rollup,id,test,map,string,object,start,rollup,job,response,entity,as,map,client,perform,request,start,rollup,job,request,assert,that,start,rollup,job,response,get,started,equal,to,boolean,true,assert,roll,up,job,rollup,id,test,list,string,ids,get,search,results,1,assert,that,ids,contains,in,any,order,3310683722,if,cluster,type,mixed,booleans,parse,boolean,system,get,property,tests,final,request,index,request,new,request,post,target,2,index,request,set,json,entity,timestamp,timestamp,plus,days,1,to,string,value,345,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,2,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,assert,that,ids,to,string,ids,size,equal,to,0,if,cluster,type,mixed,booleans,parse,boolean,system,get,property,tests,false,final,request,index,request,new,request,post,target,3,index,request,set,json,entity,timestamp,timestamp,plus,days,2,to,string,value,456,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,3,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,4288019978,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,rollup,id,test,assert,that,ids,to,string,ids,size,equal,to,0,if,cluster,type,upgraded,final,request,index,request,new,request,post,target,4,index,request,set,json,entity,timestamp,timestamp,plus,days,3,to,string,value,567,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,4,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,4288019978,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,rollup,id,test,ids,remove,rollup,id,test,lakzft,de,qws,utd,pixrkkz,q,assert,that,ids,to,string,ids,size,equal,to,0
RollupIDUpgradeIT -> public void testIDsUpgradeCorrectly() throws Exception;1543368857;This test verifies that as a cluster is upgraded incrementally, new documents eventually switch_over to the "new" form of ID (128 bit Murmur3 ids).__Rollup IDs are essentially the hashed concatenation of keys returned by the composite aggregation,_so the field values that are being indexed (timestamp, value, etc) directly affect the_ID that is generated.__We don't know which node will get the Rollup task to start, so we don't know when it will migrate._The first doc is guaranteed to be the "old" style since all nodes are un-upgraded.  The second_and third phase will have a mixed cluster, and the rollup task may or may not migrate.  In those_phases we have two options (old and new) for the document added in the phase.__The last phase is guaranteed to be new as it's a fully upgraded cluster.;public void testIDsUpgradeCorrectly() throws Exception {_        assumeTrue("Rollup became available in 6.3", UPGRADE_FROM_VERSION.onOrAfter(Version.V_6_3_0))__        assumeTrue("Rollup ID change happened in 6.4", UPGRADE_FROM_VERSION.before(Version.V_6_4_0))__        switch (CLUSTER_TYPE) {_            case OLD:_                break__            case MIXED:_                Request waitForYellow = new Request("GET", "/_cluster/health")__                waitForYellow.addParameter("wait_for_nodes", "3")__                waitForYellow.addParameter("wait_for_status", "yellow")__                client().performRequest(waitForYellow)__                break__            case UPGRADED:_                Request waitForGreen = new Request("GET", "/_cluster/health/target,rollup")__                waitForGreen.addParameter("wait_for_nodes", "3")__                waitForGreen.addParameter("wait_for_status", "green")__                _                waitForGreen.addParameter("timeout", "70s")__                waitForGreen.addParameter("level", "shards")__                client().performRequest(waitForGreen)__                break__            default:_                throw new UnsupportedOperationException("Unknown cluster type [" + CLUSTER_TYPE + "]")__        }__        OffsetDateTime timestamp = Instant.parse("2018-01-01T00:00:01.000Z").atOffset(ZoneOffset.UTC)___        if (CLUSTER_TYPE == ClusterType.OLD) {_            String recoverQuickly = "{\"settings\": {\"index.unassigned.node_left.delayed_timeout\": \"100ms\"}}"___            Request createTargetIndex = new Request("PUT", "/target")__            createTargetIndex.setJsonEntity(recoverQuickly)__            client().performRequest(createTargetIndex)___            final Request indexRequest = new Request("POST", "/target/_doc/1")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.toString() + "\",\"value\":123}")__            client().performRequest(indexRequest)___            _            final Request createRollupJobRequest = new Request("PUT", "/_rollup/job/rollup-id-test")__            createRollupJobRequest.setJsonEntity("{"_                + "\"index_pattern\":\"target\","_                + "\"rollup_index\":\"rollup\","_                + "\"cron\":\"*/1 * * * * ?\","_                + "\"page_size\":100,"_                + "\"groups\":{"_                + "    \"date_histogram\":{"_                + "        \"field\":\"timestamp\","_                + "        \"interval\":\"5m\""_                + "      },"_                +       "\"histogram\":{"_                + "        \"fields\": [\"value\"],"_                + "        \"interval\":1"_                + "      },"_                +       "\"terms\":{"_                + "        \"fields\": [\"value\"]"_                + "      }"_                + "},"_                + "\"metrics\":["_                + "    {\"field\":\"value\",\"metrics\":[\"min\",\"max\",\"sum\"]}"_                + "]"_                + "}")___            Map<String, Object> createRollupJobResponse = entityAsMap(client().performRequest(createRollupJobRequest))__            assertThat(createRollupJobResponse.get("acknowledged"), equalTo(Boolean.TRUE))___            Request updateSettings = new Request("PUT", "/rollup/_settings")__            updateSettings.setJsonEntity(recoverQuickly)__            client().performRequest(updateSettings)___            _            final Request startRollupJobRequest = new Request("POST", "_rollup/job/rollup-id-test/_start")__            Map<String, Object> startRollupJobResponse = entityAsMap(client().performRequest(startRollupJobRequest))__            assertThat(startRollupJobResponse.get("started"), equalTo(Boolean.TRUE))___            assertRollUpJob("rollup-id-test")__            List<String> ids = getSearchResults(1)__            assertThat(ids, containsInAnyOrder("3310683722"))___        }__        if (CLUSTER_TYPE == ClusterType.MIXED && Booleans.parseBoolean(System.getProperty("tests.first_round"))) {_            final Request indexRequest = new Request("POST", "/target/_doc/2")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(1).toString() + "\",\"value\":345}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(2)__            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA"))__            assertThat(ids.toString(),ids.size(), equalTo(0))__        }__        if (CLUSTER_TYPE == ClusterType.MIXED && Booleans.parseBoolean(System.getProperty("tests.first_round")) == false) {_            final Request indexRequest = new Request("POST", "/target/_doc/3")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(2).toString() + "\",\"value\":456}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(3)___            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "4288019978",_                "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA", "rollup-id-test$60RGDSb92YI5LH4_Fnq_1g"))__            assertThat(ids.toString(), ids.size(), equalTo(0))___        }__        if (CLUSTER_TYPE == ClusterType.UPGRADED) {_            final Request indexRequest = new Request("POST", "/target/_doc/4")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(3).toString() + "\",\"value\":567}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(4)__            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "4288019978",_                "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA", "rollup-id-test$60RGDSb92YI5LH4_Fnq_1g"))___            _            ids.remove("rollup-id-test$LAKZftDeQwsUtdPixrkkzQ")__            assertThat(ids.toString(), ids.size(), equalTo(0))__        }__    };this,test,verifies,that,as,a,cluster,is,upgraded,incrementally,new,documents,eventually,switch,over,to,the,new,form,of,id,128,bit,murmur3,ids,rollup,ids,are,essentially,the,hashed,concatenation,of,keys,returned,by,the,composite,aggregation,so,the,field,values,that,are,being,indexed,timestamp,value,etc,directly,affect,the,id,that,is,generated,we,don,t,know,which,node,will,get,the,rollup,task,to,start,so,we,don,t,know,when,it,will,migrate,the,first,doc,is,guaranteed,to,be,the,old,style,since,all,nodes,are,un,upgraded,the,second,and,third,phase,will,have,a,mixed,cluster,and,the,rollup,task,may,or,may,not,migrate,in,those,phases,we,have,two,options,old,and,new,for,the,document,added,in,the,phase,the,last,phase,is,guaranteed,to,be,new,as,it,s,a,fully,upgraded,cluster;public,void,test,ids,upgrade,correctly,throws,exception,assume,true,rollup,became,available,in,6,3,on,or,after,version,assume,true,rollup,id,change,happened,in,6,4,before,version,switch,case,old,break,case,mixed,request,wait,for,yellow,new,request,get,health,wait,for,yellow,add,parameter,3,wait,for,yellow,add,parameter,yellow,client,perform,request,wait,for,yellow,break,case,upgraded,request,wait,for,green,new,request,get,health,target,rollup,wait,for,green,add,parameter,3,wait,for,green,add,parameter,green,wait,for,green,add,parameter,timeout,70s,wait,for,green,add,parameter,level,shards,client,perform,request,wait,for,green,break,default,throw,new,unsupported,operation,exception,unknown,cluster,type,offset,date,time,timestamp,instant,parse,2018,01,01t00,00,01,000z,at,offset,zone,offset,utc,if,cluster,type,old,string,recover,quickly,settings,index,unassigned,100ms,request,create,target,index,new,request,put,target,create,target,index,set,json,entity,recover,quickly,client,perform,request,create,target,index,final,request,index,request,new,request,post,target,1,index,request,set,json,entity,timestamp,timestamp,to,string,value,123,client,perform,request,index,request,final,request,create,rollup,job,request,new,request,put,job,rollup,id,test,create,rollup,job,request,set,json,entity,target,rollup,cron,1,100,groups,field,timestamp,interval,5m,histogram,fields,value,interval,1,terms,fields,value,metrics,field,value,metrics,min,max,sum,map,string,object,create,rollup,job,response,entity,as,map,client,perform,request,create,rollup,job,request,assert,that,create,rollup,job,response,get,acknowledged,equal,to,boolean,true,request,update,settings,new,request,put,rollup,update,settings,set,json,entity,recover,quickly,client,perform,request,update,settings,final,request,start,rollup,job,request,new,request,post,job,rollup,id,test,map,string,object,start,rollup,job,response,entity,as,map,client,perform,request,start,rollup,job,request,assert,that,start,rollup,job,response,get,started,equal,to,boolean,true,assert,roll,up,job,rollup,id,test,list,string,ids,get,search,results,1,assert,that,ids,contains,in,any,order,3310683722,if,cluster,type,mixed,booleans,parse,boolean,system,get,property,tests,final,request,index,request,new,request,post,target,2,index,request,set,json,entity,timestamp,timestamp,plus,days,1,to,string,value,345,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,2,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,assert,that,ids,to,string,ids,size,equal,to,0,if,cluster,type,mixed,booleans,parse,boolean,system,get,property,tests,false,final,request,index,request,new,request,post,target,3,index,request,set,json,entity,timestamp,timestamp,plus,days,2,to,string,value,456,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,3,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,4288019978,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,rollup,id,test,assert,that,ids,to,string,ids,size,equal,to,0,if,cluster,type,upgraded,final,request,index,request,new,request,post,target,4,index,request,set,json,entity,timestamp,timestamp,plus,days,3,to,string,value,567,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,4,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,4288019978,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,rollup,id,test,ids,remove,rollup,id,test,lakzft,de,qws,utd,pixrkkz,q,assert,that,ids,to,string,ids,size,equal,to,0
RollupIDUpgradeIT -> public void testIDsUpgradeCorrectly() throws Exception;1543514303;This test verifies that as a cluster is upgraded incrementally, new documents eventually switch_over to the "new" form of ID (128 bit Murmur3 ids).__Rollup IDs are essentially the hashed concatenation of keys returned by the composite aggregation,_so the field values that are being indexed (timestamp, value, etc) directly affect the_ID that is generated.__We don't know which node will get the Rollup task to start, so we don't know when it will migrate._The first doc is guaranteed to be the "old" style since all nodes are un-upgraded.  The second_and third phase will have a mixed cluster, and the rollup task may or may not migrate.  In those_phases we have two options (old and new) for the document added in the phase.__The last phase is guaranteed to be new as it's a fully upgraded cluster.;public void testIDsUpgradeCorrectly() throws Exception {_        assumeTrue("Rollup became available in 6.3", UPGRADE_FROM_VERSION.onOrAfter(Version.V_6_3_0))__        assumeTrue("Rollup ID change happened in 6.4", UPGRADE_FROM_VERSION.before(Version.V_6_4_0))__        switch (CLUSTER_TYPE) {_            case OLD:_                break__            case MIXED:_                Request waitForYellow = new Request("GET", "/_cluster/health")__                waitForYellow.addParameter("wait_for_nodes", "3")__                waitForYellow.addParameter("wait_for_status", "yellow")__                client().performRequest(waitForYellow)__                break__            case UPGRADED:_                Request waitForGreen = new Request("GET", "/_cluster/health/target,rollup")__                waitForGreen.addParameter("wait_for_nodes", "3")__                waitForGreen.addParameter("wait_for_status", "green")__                _                waitForGreen.addParameter("timeout", "70s")__                waitForGreen.addParameter("level", "shards")__                client().performRequest(waitForGreen)__                break__            default:_                throw new UnsupportedOperationException("Unknown cluster type [" + CLUSTER_TYPE + "]")__        }__        OffsetDateTime timestamp = Instant.parse("2018-01-01T00:00:01.000Z").atOffset(ZoneOffset.UTC)___        if (CLUSTER_TYPE == ClusterType.OLD) {_            String recoverQuickly = "{\"settings\": {\"index.unassigned.node_left.delayed_timeout\": \"100ms\"}}"___            Request createTargetIndex = new Request("PUT", "/target")__            createTargetIndex.setJsonEntity(recoverQuickly)__            client().performRequest(createTargetIndex)___            final Request indexRequest = new Request("POST", "/target/_doc/1")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.toString() + "\",\"value\":123}")__            client().performRequest(indexRequest)___            _            final Request createRollupJobRequest = new Request("PUT", "/_xpack/rollup/job/rollup-id-test")__            createRollupJobRequest.setJsonEntity("{"_                + "\"index_pattern\":\"target\","_                + "\"rollup_index\":\"rollup\","_                + "\"cron\":\"*/1 * * * * ?\","_                + "\"page_size\":100,"_                + "\"groups\":{"_                + "    \"date_histogram\":{"_                + "        \"field\":\"timestamp\","_                + "        \"interval\":\"5m\""_                + "      },"_                +       "\"histogram\":{"_                + "        \"fields\": [\"value\"],"_                + "        \"interval\":1"_                + "      },"_                +       "\"terms\":{"_                + "        \"fields\": [\"value\"]"_                + "      }"_                + "},"_                + "\"metrics\":["_                + "    {\"field\":\"value\",\"metrics\":[\"min\",\"max\",\"sum\"]}"_                + "]"_                + "}")___            Map<String, Object> createRollupJobResponse = entityAsMap(client().performRequest(createRollupJobRequest))__            assertThat(createRollupJobResponse.get("acknowledged"), equalTo(Boolean.TRUE))___            Request updateSettings = new Request("PUT", "/rollup/_settings")__            updateSettings.setJsonEntity(recoverQuickly)__            client().performRequest(updateSettings)___            _            final Request startRollupJobRequest = new Request("POST", "_xpack/rollup/job/rollup-id-test/_start")__            Map<String, Object> startRollupJobResponse = entityAsMap(client().performRequest(startRollupJobRequest))__            assertThat(startRollupJobResponse.get("started"), equalTo(Boolean.TRUE))___            assertRollUpJob("rollup-id-test")__            List<String> ids = getSearchResults(1)__            assertThat(ids, containsInAnyOrder("3310683722"))___        }__        if (CLUSTER_TYPE == ClusterType.MIXED && Booleans.parseBoolean(System.getProperty("tests.first_round"))) {_            final Request indexRequest = new Request("POST", "/target/_doc/2")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(1).toString() + "\",\"value\":345}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(2)__            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA"))__            assertThat(ids.toString(),ids.size(), equalTo(0))__        }__        if (CLUSTER_TYPE == ClusterType.MIXED && Booleans.parseBoolean(System.getProperty("tests.first_round")) == false) {_            final Request indexRequest = new Request("POST", "/target/_doc/3")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(2).toString() + "\",\"value\":456}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(3)___            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "4288019978",_                "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA", "rollup-id-test$60RGDSb92YI5LH4_Fnq_1g"))__            assertThat(ids.toString(), ids.size(), equalTo(0))___        }__        if (CLUSTER_TYPE == ClusterType.UPGRADED) {_            final Request indexRequest = new Request("POST", "/target/_doc/4")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(3).toString() + "\",\"value\":567}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(4)__            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "4288019978",_                "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA", "rollup-id-test$60RGDSb92YI5LH4_Fnq_1g"))___            _            ids.remove("rollup-id-test$LAKZftDeQwsUtdPixrkkzQ")__            assertThat(ids.toString(), ids.size(), equalTo(0))__        }__    };this,test,verifies,that,as,a,cluster,is,upgraded,incrementally,new,documents,eventually,switch,over,to,the,new,form,of,id,128,bit,murmur3,ids,rollup,ids,are,essentially,the,hashed,concatenation,of,keys,returned,by,the,composite,aggregation,so,the,field,values,that,are,being,indexed,timestamp,value,etc,directly,affect,the,id,that,is,generated,we,don,t,know,which,node,will,get,the,rollup,task,to,start,so,we,don,t,know,when,it,will,migrate,the,first,doc,is,guaranteed,to,be,the,old,style,since,all,nodes,are,un,upgraded,the,second,and,third,phase,will,have,a,mixed,cluster,and,the,rollup,task,may,or,may,not,migrate,in,those,phases,we,have,two,options,old,and,new,for,the,document,added,in,the,phase,the,last,phase,is,guaranteed,to,be,new,as,it,s,a,fully,upgraded,cluster;public,void,test,ids,upgrade,correctly,throws,exception,assume,true,rollup,became,available,in,6,3,on,or,after,version,assume,true,rollup,id,change,happened,in,6,4,before,version,switch,case,old,break,case,mixed,request,wait,for,yellow,new,request,get,health,wait,for,yellow,add,parameter,3,wait,for,yellow,add,parameter,yellow,client,perform,request,wait,for,yellow,break,case,upgraded,request,wait,for,green,new,request,get,health,target,rollup,wait,for,green,add,parameter,3,wait,for,green,add,parameter,green,wait,for,green,add,parameter,timeout,70s,wait,for,green,add,parameter,level,shards,client,perform,request,wait,for,green,break,default,throw,new,unsupported,operation,exception,unknown,cluster,type,offset,date,time,timestamp,instant,parse,2018,01,01t00,00,01,000z,at,offset,zone,offset,utc,if,cluster,type,old,string,recover,quickly,settings,index,unassigned,100ms,request,create,target,index,new,request,put,target,create,target,index,set,json,entity,recover,quickly,client,perform,request,create,target,index,final,request,index,request,new,request,post,target,1,index,request,set,json,entity,timestamp,timestamp,to,string,value,123,client,perform,request,index,request,final,request,create,rollup,job,request,new,request,put,rollup,job,rollup,id,test,create,rollup,job,request,set,json,entity,target,rollup,cron,1,100,groups,field,timestamp,interval,5m,histogram,fields,value,interval,1,terms,fields,value,metrics,field,value,metrics,min,max,sum,map,string,object,create,rollup,job,response,entity,as,map,client,perform,request,create,rollup,job,request,assert,that,create,rollup,job,response,get,acknowledged,equal,to,boolean,true,request,update,settings,new,request,put,rollup,update,settings,set,json,entity,recover,quickly,client,perform,request,update,settings,final,request,start,rollup,job,request,new,request,post,rollup,job,rollup,id,test,map,string,object,start,rollup,job,response,entity,as,map,client,perform,request,start,rollup,job,request,assert,that,start,rollup,job,response,get,started,equal,to,boolean,true,assert,roll,up,job,rollup,id,test,list,string,ids,get,search,results,1,assert,that,ids,contains,in,any,order,3310683722,if,cluster,type,mixed,booleans,parse,boolean,system,get,property,tests,final,request,index,request,new,request,post,target,2,index,request,set,json,entity,timestamp,timestamp,plus,days,1,to,string,value,345,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,2,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,assert,that,ids,to,string,ids,size,equal,to,0,if,cluster,type,mixed,booleans,parse,boolean,system,get,property,tests,false,final,request,index,request,new,request,post,target,3,index,request,set,json,entity,timestamp,timestamp,plus,days,2,to,string,value,456,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,3,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,4288019978,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,rollup,id,test,assert,that,ids,to,string,ids,size,equal,to,0,if,cluster,type,upgraded,final,request,index,request,new,request,post,target,4,index,request,set,json,entity,timestamp,timestamp,plus,days,3,to,string,value,567,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,4,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,4288019978,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,rollup,id,test,ids,remove,rollup,id,test,lakzft,de,qws,utd,pixrkkz,q,assert,that,ids,to,string,ids,size,equal,to,0
RollupIDUpgradeIT -> public void testIDsUpgradeCorrectly() throws Exception;1544035746;This test verifies that as a cluster is upgraded incrementally, new documents eventually switch_over to the "new" form of ID (128 bit Murmur3 ids).__Rollup IDs are essentially the hashed concatenation of keys returned by the composite aggregation,_so the field values that are being indexed (timestamp, value, etc) directly affect the_ID that is generated.__We don't know which node will get the Rollup task to start, so we don't know when it will migrate._The first doc is guaranteed to be the "old" style since all nodes are un-upgraded.  The second_and third phase will have a mixed cluster, and the rollup task may or may not migrate.  In those_phases we have two options (old and new) for the document added in the phase.__The last phase is guaranteed to be new as it's a fully upgraded cluster.;public void testIDsUpgradeCorrectly() throws Exception {_        assumeTrue("Rollup became available in 6.3", UPGRADE_FROM_VERSION.onOrAfter(Version.V_6_3_0))__        assumeTrue("Rollup ID change happened in 6.4", UPGRADE_FROM_VERSION.before(Version.V_6_4_0))__        switch (CLUSTER_TYPE) {_            case OLD:_                break__            case MIXED:_                Request waitForYellow = new Request("GET", "/_cluster/health")__                waitForYellow.addParameter("wait_for_nodes", "3")__                waitForYellow.addParameter("wait_for_status", "yellow")__                client().performRequest(waitForYellow)__                break__            case UPGRADED:_                Request waitForGreen = new Request("GET", "/_cluster/health/target,rollup")__                waitForGreen.addParameter("wait_for_nodes", "3")__                waitForGreen.addParameter("wait_for_status", "green")__                _                waitForGreen.addParameter("timeout", "70s")__                waitForGreen.addParameter("level", "shards")__                client().performRequest(waitForGreen)__                break__            default:_                throw new UnsupportedOperationException("Unknown cluster type [" + CLUSTER_TYPE + "]")__        }__        OffsetDateTime timestamp = Instant.parse("2018-01-01T00:00:01.000Z").atOffset(ZoneOffset.UTC)___        if (CLUSTER_TYPE == ClusterType.OLD) {_            String recoverQuickly = "{\"settings\": {\"index.unassigned.node_left.delayed_timeout\": \"100ms\"}}"___            Request createTargetIndex = new Request("PUT", "/target")__            createTargetIndex.setJsonEntity(recoverQuickly)__            client().performRequest(createTargetIndex)___            final Request indexRequest = new Request("POST", "/target/_doc/1")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.toString() + "\",\"value\":123}")__            client().performRequest(indexRequest)___            _            final Request createRollupJobRequest = new Request("PUT", "/_xpack/rollup/job/rollup-id-test")__            createRollupJobRequest.setJsonEntity("{"_                + "\"index_pattern\":\"target\","_                + "\"rollup_index\":\"rollup\","_                + "\"cron\":\"*/1 * * * * ?\","_                + "\"page_size\":100,"_                + "\"groups\":{"_                + "    \"date_histogram\":{"_                + "        \"field\":\"timestamp\","_                + "        \"interval\":\"5m\""_                + "      },"_                +       "\"histogram\":{"_                + "        \"fields\": [\"value\"],"_                + "        \"interval\":1"_                + "      },"_                +       "\"terms\":{"_                + "        \"fields\": [\"value\"]"_                + "      }"_                + "},"_                + "\"metrics\":["_                + "    {\"field\":\"value\",\"metrics\":[\"min\",\"max\",\"sum\"]}"_                + "]"_                + "}")___            Map<String, Object> createRollupJobResponse = entityAsMap(client().performRequest(createRollupJobRequest))__            assertThat(createRollupJobResponse.get("acknowledged"), equalTo(Boolean.TRUE))___            Request updateSettings = new Request("PUT", "/rollup/_settings")__            updateSettings.setJsonEntity(recoverQuickly)__            client().performRequest(updateSettings)___            _            final Request startRollupJobRequest = new Request("POST", "_xpack/rollup/job/rollup-id-test/_start")__            Map<String, Object> startRollupJobResponse = entityAsMap(client().performRequest(startRollupJobRequest))__            assertThat(startRollupJobResponse.get("started"), equalTo(Boolean.TRUE))___            assertRollUpJob("rollup-id-test")__            List<String> ids = getSearchResults(1)__            assertThat(ids, containsInAnyOrder("3310683722"))___        }__        if (CLUSTER_TYPE == ClusterType.MIXED && Booleans.parseBoolean(System.getProperty("tests.first_round"))) {_            final Request indexRequest = new Request("POST", "/target/_doc/2")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(1).toString() + "\",\"value\":345}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(2)__            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA"))__            assertThat(ids.toString(),ids.size(), equalTo(0))__        }__        if (CLUSTER_TYPE == ClusterType.MIXED && Booleans.parseBoolean(System.getProperty("tests.first_round")) == false) {_            final Request indexRequest = new Request("POST", "/target/_doc/3")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(2).toString() + "\",\"value\":456}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(3)___            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "4288019978",_                "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA", "rollup-id-test$60RGDSb92YI5LH4_Fnq_1g"))__            assertThat(ids.toString(), ids.size(), equalTo(0))___        }__        if (CLUSTER_TYPE == ClusterType.UPGRADED) {_            final Request indexRequest = new Request("POST", "/target/_doc/4")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(3).toString() + "\",\"value\":567}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(4)__            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "4288019978",_                "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA", "rollup-id-test$60RGDSb92YI5LH4_Fnq_1g"))___            _            ids.remove("rollup-id-test$LAKZftDeQwsUtdPixrkkzQ")__            assertThat(ids.toString(), ids.size(), equalTo(0))__        }__    };this,test,verifies,that,as,a,cluster,is,upgraded,incrementally,new,documents,eventually,switch,over,to,the,new,form,of,id,128,bit,murmur3,ids,rollup,ids,are,essentially,the,hashed,concatenation,of,keys,returned,by,the,composite,aggregation,so,the,field,values,that,are,being,indexed,timestamp,value,etc,directly,affect,the,id,that,is,generated,we,don,t,know,which,node,will,get,the,rollup,task,to,start,so,we,don,t,know,when,it,will,migrate,the,first,doc,is,guaranteed,to,be,the,old,style,since,all,nodes,are,un,upgraded,the,second,and,third,phase,will,have,a,mixed,cluster,and,the,rollup,task,may,or,may,not,migrate,in,those,phases,we,have,two,options,old,and,new,for,the,document,added,in,the,phase,the,last,phase,is,guaranteed,to,be,new,as,it,s,a,fully,upgraded,cluster;public,void,test,ids,upgrade,correctly,throws,exception,assume,true,rollup,became,available,in,6,3,on,or,after,version,assume,true,rollup,id,change,happened,in,6,4,before,version,switch,case,old,break,case,mixed,request,wait,for,yellow,new,request,get,health,wait,for,yellow,add,parameter,3,wait,for,yellow,add,parameter,yellow,client,perform,request,wait,for,yellow,break,case,upgraded,request,wait,for,green,new,request,get,health,target,rollup,wait,for,green,add,parameter,3,wait,for,green,add,parameter,green,wait,for,green,add,parameter,timeout,70s,wait,for,green,add,parameter,level,shards,client,perform,request,wait,for,green,break,default,throw,new,unsupported,operation,exception,unknown,cluster,type,offset,date,time,timestamp,instant,parse,2018,01,01t00,00,01,000z,at,offset,zone,offset,utc,if,cluster,type,old,string,recover,quickly,settings,index,unassigned,100ms,request,create,target,index,new,request,put,target,create,target,index,set,json,entity,recover,quickly,client,perform,request,create,target,index,final,request,index,request,new,request,post,target,1,index,request,set,json,entity,timestamp,timestamp,to,string,value,123,client,perform,request,index,request,final,request,create,rollup,job,request,new,request,put,rollup,job,rollup,id,test,create,rollup,job,request,set,json,entity,target,rollup,cron,1,100,groups,field,timestamp,interval,5m,histogram,fields,value,interval,1,terms,fields,value,metrics,field,value,metrics,min,max,sum,map,string,object,create,rollup,job,response,entity,as,map,client,perform,request,create,rollup,job,request,assert,that,create,rollup,job,response,get,acknowledged,equal,to,boolean,true,request,update,settings,new,request,put,rollup,update,settings,set,json,entity,recover,quickly,client,perform,request,update,settings,final,request,start,rollup,job,request,new,request,post,rollup,job,rollup,id,test,map,string,object,start,rollup,job,response,entity,as,map,client,perform,request,start,rollup,job,request,assert,that,start,rollup,job,response,get,started,equal,to,boolean,true,assert,roll,up,job,rollup,id,test,list,string,ids,get,search,results,1,assert,that,ids,contains,in,any,order,3310683722,if,cluster,type,mixed,booleans,parse,boolean,system,get,property,tests,final,request,index,request,new,request,post,target,2,index,request,set,json,entity,timestamp,timestamp,plus,days,1,to,string,value,345,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,2,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,assert,that,ids,to,string,ids,size,equal,to,0,if,cluster,type,mixed,booleans,parse,boolean,system,get,property,tests,false,final,request,index,request,new,request,post,target,3,index,request,set,json,entity,timestamp,timestamp,plus,days,2,to,string,value,456,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,3,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,4288019978,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,rollup,id,test,assert,that,ids,to,string,ids,size,equal,to,0,if,cluster,type,upgraded,final,request,index,request,new,request,post,target,4,index,request,set,json,entity,timestamp,timestamp,plus,days,3,to,string,value,567,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,4,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,4288019978,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,rollup,id,test,ids,remove,rollup,id,test,lakzft,de,qws,utd,pixrkkz,q,assert,that,ids,to,string,ids,size,equal,to,0
RollupIDUpgradeIT -> public void testIDsUpgradeCorrectly() throws Exception;1544575397;This test verifies that as a cluster is upgraded incrementally, new documents eventually switch_over to the "new" form of ID (128 bit Murmur3 ids).__Rollup IDs are essentially the hashed concatenation of keys returned by the composite aggregation,_so the field values that are being indexed (timestamp, value, etc) directly affect the_ID that is generated.__We don't know which node will get the Rollup task to start, so we don't know when it will migrate._The first doc is guaranteed to be the "old" style since all nodes are un-upgraded.  The second_and third phase will have a mixed cluster, and the rollup task may or may not migrate.  In those_phases we have two options (old and new) for the document added in the phase.__The last phase is guaranteed to be new as it's a fully upgraded cluster.;public void testIDsUpgradeCorrectly() throws Exception {_        assumeTrue("Rollup became available in 6.3", UPGRADE_FROM_VERSION.onOrAfter(Version.V_6_3_0))__        assumeTrue("Rollup ID change happened in 6.4", UPGRADE_FROM_VERSION.before(Version.V_6_4_0))__        switch (CLUSTER_TYPE) {_            case OLD:_                break__            case MIXED:_                Request waitForYellow = new Request("GET", "/_cluster/health")__                waitForYellow.addParameter("wait_for_nodes", "3")__                waitForYellow.addParameter("wait_for_status", "yellow")__                client().performRequest(waitForYellow)__                break__            case UPGRADED:_                Request waitForGreen = new Request("GET", "/_cluster/health/target,rollup")__                waitForGreen.addParameter("wait_for_nodes", "3")__                waitForGreen.addParameter("wait_for_status", "green")__                _                waitForGreen.addParameter("timeout", "70s")__                waitForGreen.addParameter("level", "shards")__                client().performRequest(waitForGreen)__                break__            default:_                throw new UnsupportedOperationException("Unknown cluster type [" + CLUSTER_TYPE + "]")__        }__        OffsetDateTime timestamp = Instant.parse("2018-01-01T00:00:01.000Z").atOffset(ZoneOffset.UTC)___        if (CLUSTER_TYPE == ClusterType.OLD) {_            String recoverQuickly = "{\"settings\": {\"index.unassigned.node_left.delayed_timeout\": \"100ms\"}}"___            Request createTargetIndex = new Request("PUT", "/target")__            createTargetIndex.setJsonEntity(recoverQuickly)__            client().performRequest(createTargetIndex)___            final Request indexRequest = new Request("POST", "/target/_doc/1")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.toString() + "\",\"value\":123}")__            client().performRequest(indexRequest)___            _            final Request createRollupJobRequest = new Request("PUT", "/_rollup/job/rollup-id-test")__            createRollupJobRequest.setJsonEntity("{"_                + "\"index_pattern\":\"target\","_                + "\"rollup_index\":\"rollup\","_                + "\"cron\":\"*/1 * * * * ?\","_                + "\"page_size\":100,"_                + "\"groups\":{"_                + "    \"date_histogram\":{"_                + "        \"field\":\"timestamp\","_                + "        \"interval\":\"5m\""_                + "      },"_                +       "\"histogram\":{"_                + "        \"fields\": [\"value\"],"_                + "        \"interval\":1"_                + "      },"_                +       "\"terms\":{"_                + "        \"fields\": [\"value\"]"_                + "      }"_                + "},"_                + "\"metrics\":["_                + "    {\"field\":\"value\",\"metrics\":[\"min\",\"max\",\"sum\"]}"_                + "]"_                + "}")___            Map<String, Object> createRollupJobResponse = entityAsMap(client().performRequest(createRollupJobRequest))__            assertThat(createRollupJobResponse.get("acknowledged"), equalTo(Boolean.TRUE))___            Request updateSettings = new Request("PUT", "/rollup/_settings")__            updateSettings.setJsonEntity(recoverQuickly)__            client().performRequest(updateSettings)___            _            final Request startRollupJobRequest = new Request("POST", "_rollup/job/rollup-id-test/_start")__            Map<String, Object> startRollupJobResponse = entityAsMap(client().performRequest(startRollupJobRequest))__            assertThat(startRollupJobResponse.get("started"), equalTo(Boolean.TRUE))___            assertRollUpJob("rollup-id-test")__            List<String> ids = getSearchResults(1)__            assertThat(ids, containsInAnyOrder("3310683722"))___        }__        if (CLUSTER_TYPE == ClusterType.MIXED && Booleans.parseBoolean(System.getProperty("tests.first_round"))) {_            final Request indexRequest = new Request("POST", "/target/_doc/2")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(1).toString() + "\",\"value\":345}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(2)__            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA"))__            assertThat(ids.toString(),ids.size(), equalTo(0))__        }__        if (CLUSTER_TYPE == ClusterType.MIXED && Booleans.parseBoolean(System.getProperty("tests.first_round")) == false) {_            final Request indexRequest = new Request("POST", "/target/_doc/3")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(2).toString() + "\",\"value\":456}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(3)___            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "4288019978",_                "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA", "rollup-id-test$60RGDSb92YI5LH4_Fnq_1g"))__            assertThat(ids.toString(), ids.size(), equalTo(0))___        }__        if (CLUSTER_TYPE == ClusterType.UPGRADED) {_            final Request indexRequest = new Request("POST", "/target/_doc/4")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(3).toString() + "\",\"value\":567}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(4)__            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "4288019978",_                "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA", "rollup-id-test$60RGDSb92YI5LH4_Fnq_1g"))___            _            ids.remove("rollup-id-test$LAKZftDeQwsUtdPixrkkzQ")__            assertThat(ids.toString(), ids.size(), equalTo(0))__        }__    };this,test,verifies,that,as,a,cluster,is,upgraded,incrementally,new,documents,eventually,switch,over,to,the,new,form,of,id,128,bit,murmur3,ids,rollup,ids,are,essentially,the,hashed,concatenation,of,keys,returned,by,the,composite,aggregation,so,the,field,values,that,are,being,indexed,timestamp,value,etc,directly,affect,the,id,that,is,generated,we,don,t,know,which,node,will,get,the,rollup,task,to,start,so,we,don,t,know,when,it,will,migrate,the,first,doc,is,guaranteed,to,be,the,old,style,since,all,nodes,are,un,upgraded,the,second,and,third,phase,will,have,a,mixed,cluster,and,the,rollup,task,may,or,may,not,migrate,in,those,phases,we,have,two,options,old,and,new,for,the,document,added,in,the,phase,the,last,phase,is,guaranteed,to,be,new,as,it,s,a,fully,upgraded,cluster;public,void,test,ids,upgrade,correctly,throws,exception,assume,true,rollup,became,available,in,6,3,on,or,after,version,assume,true,rollup,id,change,happened,in,6,4,before,version,switch,case,old,break,case,mixed,request,wait,for,yellow,new,request,get,health,wait,for,yellow,add,parameter,3,wait,for,yellow,add,parameter,yellow,client,perform,request,wait,for,yellow,break,case,upgraded,request,wait,for,green,new,request,get,health,target,rollup,wait,for,green,add,parameter,3,wait,for,green,add,parameter,green,wait,for,green,add,parameter,timeout,70s,wait,for,green,add,parameter,level,shards,client,perform,request,wait,for,green,break,default,throw,new,unsupported,operation,exception,unknown,cluster,type,offset,date,time,timestamp,instant,parse,2018,01,01t00,00,01,000z,at,offset,zone,offset,utc,if,cluster,type,old,string,recover,quickly,settings,index,unassigned,100ms,request,create,target,index,new,request,put,target,create,target,index,set,json,entity,recover,quickly,client,perform,request,create,target,index,final,request,index,request,new,request,post,target,1,index,request,set,json,entity,timestamp,timestamp,to,string,value,123,client,perform,request,index,request,final,request,create,rollup,job,request,new,request,put,job,rollup,id,test,create,rollup,job,request,set,json,entity,target,rollup,cron,1,100,groups,field,timestamp,interval,5m,histogram,fields,value,interval,1,terms,fields,value,metrics,field,value,metrics,min,max,sum,map,string,object,create,rollup,job,response,entity,as,map,client,perform,request,create,rollup,job,request,assert,that,create,rollup,job,response,get,acknowledged,equal,to,boolean,true,request,update,settings,new,request,put,rollup,update,settings,set,json,entity,recover,quickly,client,perform,request,update,settings,final,request,start,rollup,job,request,new,request,post,job,rollup,id,test,map,string,object,start,rollup,job,response,entity,as,map,client,perform,request,start,rollup,job,request,assert,that,start,rollup,job,response,get,started,equal,to,boolean,true,assert,roll,up,job,rollup,id,test,list,string,ids,get,search,results,1,assert,that,ids,contains,in,any,order,3310683722,if,cluster,type,mixed,booleans,parse,boolean,system,get,property,tests,final,request,index,request,new,request,post,target,2,index,request,set,json,entity,timestamp,timestamp,plus,days,1,to,string,value,345,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,2,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,assert,that,ids,to,string,ids,size,equal,to,0,if,cluster,type,mixed,booleans,parse,boolean,system,get,property,tests,false,final,request,index,request,new,request,post,target,3,index,request,set,json,entity,timestamp,timestamp,plus,days,2,to,string,value,456,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,3,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,4288019978,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,rollup,id,test,assert,that,ids,to,string,ids,size,equal,to,0,if,cluster,type,upgraded,final,request,index,request,new,request,post,target,4,index,request,set,json,entity,timestamp,timestamp,plus,days,3,to,string,value,567,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,4,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,4288019978,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,rollup,id,test,ids,remove,rollup,id,test,lakzft,de,qws,utd,pixrkkz,q,assert,that,ids,to,string,ids,size,equal,to,0
RollupIDUpgradeIT -> public void testIDsUpgradeCorrectly() throws Exception;1546630609;This test verifies that as a cluster is upgraded incrementally, new documents eventually switch_over to the "new" form of ID (128 bit Murmur3 ids).__Rollup IDs are essentially the hashed concatenation of keys returned by the composite aggregation,_so the field values that are being indexed (timestamp, value, etc) directly affect the_ID that is generated.__We don't know which node will get the Rollup task to start, so we don't know when it will migrate._The first doc is guaranteed to be the "old" style since all nodes are un-upgraded.  The second_and third phase will have a mixed cluster, and the rollup task may or may not migrate.  In those_phases we have two options (old and new) for the document added in the phase.__The last phase is guaranteed to be new as it's a fully upgraded cluster.;public void testIDsUpgradeCorrectly() throws Exception {_        assumeTrue("Rollup became available in 6.3", UPGRADE_FROM_VERSION.onOrAfter(Version.V_6_3_0))__        assumeTrue("Rollup ID change happened in 6.4", UPGRADE_FROM_VERSION.before(Version.V_6_4_0))__        switch (CLUSTER_TYPE) {_            case OLD:_                break__            case MIXED:_                Request waitForYellow = new Request("GET", "/_cluster/health")__                waitForYellow.addParameter("wait_for_nodes", "3")__                waitForYellow.addParameter("wait_for_status", "yellow")__                client().performRequest(waitForYellow)__                break__            case UPGRADED:_                Request waitForGreen = new Request("GET", "/_cluster/health/target,rollup")__                waitForGreen.addParameter("wait_for_nodes", "3")__                waitForGreen.addParameter("wait_for_status", "green")__                _                waitForGreen.addParameter("timeout", "70s")__                waitForGreen.addParameter("level", "shards")__                client().performRequest(waitForGreen)__                break__            default:_                throw new UnsupportedOperationException("Unknown cluster type [" + CLUSTER_TYPE + "]")__        }__        OffsetDateTime timestamp = Instant.parse("2018-01-01T00:00:01.000Z").atOffset(ZoneOffset.UTC)___        if (CLUSTER_TYPE == ClusterType.OLD) {_            String recoverQuickly = "{\"settings\": {\"index.unassigned.node_left.delayed_timeout\": \"100ms\"}}"___            Request createTargetIndex = new Request("PUT", "/target")__            createTargetIndex.setJsonEntity(recoverQuickly)__            client().performRequest(createTargetIndex)___            final Request indexRequest = new Request("POST", "/target/_doc/1")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.toString() + "\",\"value\":123}")__            client().performRequest(indexRequest)___            _            final Request createRollupJobRequest = new Request("PUT", "/_rollup/job/rollup-id-test")__            createRollupJobRequest.setJsonEntity("{"_                + "\"index_pattern\":\"target\","_                + "\"rollup_index\":\"rollup\","_                + "\"cron\":\"*/1 * * * * ?\","_                + "\"page_size\":100,"_                + "\"groups\":{"_                + "    \"date_histogram\":{"_                + "        \"field\":\"timestamp\","_                + "        \"interval\":\"5m\""_                + "      },"_                +       "\"histogram\":{"_                + "        \"fields\": [\"value\"],"_                + "        \"interval\":1"_                + "      },"_                +       "\"terms\":{"_                + "        \"fields\": [\"value\"]"_                + "      }"_                + "},"_                + "\"metrics\":["_                + "    {\"field\":\"value\",\"metrics\":[\"min\",\"max\",\"sum\"]}"_                + "]"_                + "}")___            Map<String, Object> createRollupJobResponse = entityAsMap(client().performRequest(createRollupJobRequest))__            assertThat(createRollupJobResponse.get("acknowledged"), equalTo(Boolean.TRUE))___            Request updateSettings = new Request("PUT", "/rollup/_settings")__            updateSettings.setJsonEntity(recoverQuickly)__            client().performRequest(updateSettings)___            _            final Request startRollupJobRequest = new Request("POST", "_rollup/job/rollup-id-test/_start")__            Map<String, Object> startRollupJobResponse = entityAsMap(client().performRequest(startRollupJobRequest))__            assertThat(startRollupJobResponse.get("started"), equalTo(Boolean.TRUE))___            assertRollUpJob("rollup-id-test")__            List<String> ids = getSearchResults(1)__            assertThat(ids, containsInAnyOrder("3310683722"))___        }__        if (CLUSTER_TYPE == ClusterType.MIXED && Booleans.parseBoolean(System.getProperty("tests.first_round"))) {_            final Request indexRequest = new Request("POST", "/target/_doc/2")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(1).toString() + "\",\"value\":345}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(2)__            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA"))__            assertThat(ids.toString(),ids.size(), equalTo(0))__        }__        if (CLUSTER_TYPE == ClusterType.MIXED && Booleans.parseBoolean(System.getProperty("tests.first_round")) == false) {_            final Request indexRequest = new Request("POST", "/target/_doc/3")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(2).toString() + "\",\"value\":456}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(3)___            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "4288019978",_                "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA", "rollup-id-test$60RGDSb92YI5LH4_Fnq_1g"))__            assertThat(ids.toString(), ids.size(), equalTo(0))___        }__        if (CLUSTER_TYPE == ClusterType.UPGRADED) {_            final Request indexRequest = new Request("POST", "/target/_doc/4")__            indexRequest.setJsonEntity("{\"timestamp\":\"" + timestamp.plusDays(3).toString() + "\",\"value\":567}")__            client().performRequest(indexRequest)___            assertRollUpJob("rollup-id-test")__            client().performRequest(new Request("POST", "rollup/_refresh"))___            List<String> ids = getSearchResults(4)__            _            ids.remove("3310683722")___            _            ids.removeAll(Arrays.asList("621059582", "4288019978",_                "rollup-id-test$ehY4NAyVSy8xxUDZrNXXIA", "rollup-id-test$60RGDSb92YI5LH4_Fnq_1g"))___            _            ids.remove("rollup-id-test$LAKZftDeQwsUtdPixrkkzQ")__            assertThat(ids.toString(), ids.size(), equalTo(0))__        }__    };this,test,verifies,that,as,a,cluster,is,upgraded,incrementally,new,documents,eventually,switch,over,to,the,new,form,of,id,128,bit,murmur3,ids,rollup,ids,are,essentially,the,hashed,concatenation,of,keys,returned,by,the,composite,aggregation,so,the,field,values,that,are,being,indexed,timestamp,value,etc,directly,affect,the,id,that,is,generated,we,don,t,know,which,node,will,get,the,rollup,task,to,start,so,we,don,t,know,when,it,will,migrate,the,first,doc,is,guaranteed,to,be,the,old,style,since,all,nodes,are,un,upgraded,the,second,and,third,phase,will,have,a,mixed,cluster,and,the,rollup,task,may,or,may,not,migrate,in,those,phases,we,have,two,options,old,and,new,for,the,document,added,in,the,phase,the,last,phase,is,guaranteed,to,be,new,as,it,s,a,fully,upgraded,cluster;public,void,test,ids,upgrade,correctly,throws,exception,assume,true,rollup,became,available,in,6,3,on,or,after,version,assume,true,rollup,id,change,happened,in,6,4,before,version,switch,case,old,break,case,mixed,request,wait,for,yellow,new,request,get,health,wait,for,yellow,add,parameter,3,wait,for,yellow,add,parameter,yellow,client,perform,request,wait,for,yellow,break,case,upgraded,request,wait,for,green,new,request,get,health,target,rollup,wait,for,green,add,parameter,3,wait,for,green,add,parameter,green,wait,for,green,add,parameter,timeout,70s,wait,for,green,add,parameter,level,shards,client,perform,request,wait,for,green,break,default,throw,new,unsupported,operation,exception,unknown,cluster,type,offset,date,time,timestamp,instant,parse,2018,01,01t00,00,01,000z,at,offset,zone,offset,utc,if,cluster,type,old,string,recover,quickly,settings,index,unassigned,100ms,request,create,target,index,new,request,put,target,create,target,index,set,json,entity,recover,quickly,client,perform,request,create,target,index,final,request,index,request,new,request,post,target,1,index,request,set,json,entity,timestamp,timestamp,to,string,value,123,client,perform,request,index,request,final,request,create,rollup,job,request,new,request,put,job,rollup,id,test,create,rollup,job,request,set,json,entity,target,rollup,cron,1,100,groups,field,timestamp,interval,5m,histogram,fields,value,interval,1,terms,fields,value,metrics,field,value,metrics,min,max,sum,map,string,object,create,rollup,job,response,entity,as,map,client,perform,request,create,rollup,job,request,assert,that,create,rollup,job,response,get,acknowledged,equal,to,boolean,true,request,update,settings,new,request,put,rollup,update,settings,set,json,entity,recover,quickly,client,perform,request,update,settings,final,request,start,rollup,job,request,new,request,post,job,rollup,id,test,map,string,object,start,rollup,job,response,entity,as,map,client,perform,request,start,rollup,job,request,assert,that,start,rollup,job,response,get,started,equal,to,boolean,true,assert,roll,up,job,rollup,id,test,list,string,ids,get,search,results,1,assert,that,ids,contains,in,any,order,3310683722,if,cluster,type,mixed,booleans,parse,boolean,system,get,property,tests,final,request,index,request,new,request,post,target,2,index,request,set,json,entity,timestamp,timestamp,plus,days,1,to,string,value,345,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,2,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,assert,that,ids,to,string,ids,size,equal,to,0,if,cluster,type,mixed,booleans,parse,boolean,system,get,property,tests,false,final,request,index,request,new,request,post,target,3,index,request,set,json,entity,timestamp,timestamp,plus,days,2,to,string,value,456,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,3,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,4288019978,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,rollup,id,test,assert,that,ids,to,string,ids,size,equal,to,0,if,cluster,type,upgraded,final,request,index,request,new,request,post,target,4,index,request,set,json,entity,timestamp,timestamp,plus,days,3,to,string,value,567,client,perform,request,index,request,assert,roll,up,job,rollup,id,test,client,perform,request,new,request,post,rollup,list,string,ids,get,search,results,4,ids,remove,3310683722,ids,remove,all,arrays,as,list,621059582,4288019978,rollup,id,test,eh,y4nay,vsy8xx,udzr,nxxia,rollup,id,test,ids,remove,rollup,id,test,lakzft,de,qws,utd,pixrkkz,q,assert,that,ids,to,string,ids,size,equal,to,0
