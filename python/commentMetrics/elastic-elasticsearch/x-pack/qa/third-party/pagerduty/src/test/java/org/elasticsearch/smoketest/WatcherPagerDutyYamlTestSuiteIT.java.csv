commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;4;;@ParametersFactory public static Iterable<Object[]> parameters() throws Exception {     return ESClientYamlSuiteTestCase.createParameters(). }
false;public;0;22;;@Before public void startWatcher() throws Exception {     final List<String> watcherTemplates = Arrays.asList(WatcherIndexTemplateRegistryField.TEMPLATE_NAMES).     assertBusy(() -> {         try {             getAdminExecutionContext().callApi("watcher.start", emptyMap(), emptyList(), emptyMap()).             for (String template : watcherTemplates) {                 ClientYamlTestResponse templateExistsResponse = getAdminExecutionContext().callApi("indices.exists_template", singletonMap("name", template), emptyList(), emptyMap()).                 assertThat(templateExistsResponse.getStatusCode(), is(200)).             }             ClientYamlTestResponse response = getAdminExecutionContext().callApi("watcher.stats", emptyMap(), emptyList(), emptyMap()).             String state = (String) response.evaluate("stats.0.watcher_state").             assertThat(state, is("started")).         } catch (IOException e) {             throw new AssertionError(e).         }     }). }
false;public;0;14;;@After public void stopWatcher() throws Exception {     assertBusy(() -> {         try {             getAdminExecutionContext().callApi("watcher.stop", emptyMap(), emptyList(), emptyMap()).             ClientYamlTestResponse response = getAdminExecutionContext().callApi("watcher.stats", emptyMap(), emptyList(), emptyMap()).             String state = (String) response.evaluate("stats.0.watcher_state").             assertThat(state, is("stopped")).         } catch (IOException e) {             throw new AssertionError(e).         }     }). }
