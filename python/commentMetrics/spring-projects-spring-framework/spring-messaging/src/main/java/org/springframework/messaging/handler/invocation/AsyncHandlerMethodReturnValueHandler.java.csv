# id;timestamp;commentText;codeText;commentWords;codeWords
AsyncHandlerMethodReturnValueHandler -> ListenableFuture<?> toListenableFuture(Object returnValue, MethodParameter returnType)_;1432286953;Adapt the given asynchronous return value to a ListenableFuture._Implementations can return an instance of_{@link org.springframework.util.concurrent.SettableListenableFuture} and_then set it to an Object (success) or a Throwable (failure) to complete_handling._@param returnValue the value returned from the handler method_@param returnType the type of the return value. This type must have_previously been passed to_{@link #supportsReturnType(org.springframework.core.MethodParameter)}_and it must have returned {@code true}_@return a ListenableFuture;ListenableFuture<?> toListenableFuture(Object returnValue, MethodParameter returnType)_;adapt,the,given,asynchronous,return,value,to,a,listenable,future,implementations,can,return,an,instance,of,link,org,springframework,util,concurrent,settable,listenable,future,and,then,set,it,to,an,object,success,or,a,throwable,failure,to,complete,handling,param,return,value,the,value,returned,from,the,handler,method,param,return,type,the,type,of,the,return,value,this,type,must,have,previously,been,passed,to,link,supports,return,type,org,springframework,core,method,parameter,and,it,must,have,returned,code,true,return,a,listenable,future;listenable,future,to,listenable,future,object,return,value,method,parameter,return,type
AsyncHandlerMethodReturnValueHandler -> ListenableFuture<?> toListenableFuture(Object returnValue, MethodParameter returnType)_;1432299978;Adapt the asynchronous return value to a {@link ListenableFuture}._Implementations should consider returning an instance of_{@link org.springframework.util.concurrent.SettableListenableFuture_SettableListenableFuture}. Return value handling will then continue when_the ListenableFuture is completed with either success or error.__<p><strong>Note:</strong> this method will only be invoked after_{@link #supportsReturnType(org.springframework.core.MethodParameter)}_is called and it returns {@code true}.__@param returnValue the value returned from the handler method_@param returnType the type of the return value._@return the resulting ListenableFuture or {@code null} in which case no_further handling will be performed.;ListenableFuture<?> toListenableFuture(Object returnValue, MethodParameter returnType)_;adapt,the,asynchronous,return,value,to,a,link,listenable,future,implementations,should,consider,returning,an,instance,of,link,org,springframework,util,concurrent,settable,listenable,future,settable,listenable,future,return,value,handling,will,then,continue,when,the,listenable,future,is,completed,with,either,success,or,error,p,strong,note,strong,this,method,will,only,be,invoked,after,link,supports,return,type,org,springframework,core,method,parameter,is,called,and,it,returns,code,true,param,return,value,the,value,returned,from,the,handler,method,param,return,type,the,type,of,the,return,value,return,the,resulting,listenable,future,or,code,null,in,which,case,no,further,handling,will,be,performed;listenable,future,to,listenable,future,object,return,value,method,parameter,return,type
AsyncHandlerMethodReturnValueHandler -> ListenableFuture<?> toListenableFuture(Object returnValue, MethodParameter returnType)_;1437512314;Adapt the asynchronous return value to a {@link ListenableFuture}._Implementations should consider returning an instance of_{@link org.springframework.util.concurrent.SettableListenableFuture_SettableListenableFuture}. Return value handling will then continue when_the ListenableFuture is completed with either success or error._<p><strong>Note:</strong> this method will only be invoked after_{@link #supportsReturnType(org.springframework.core.MethodParameter)}_is called and it returns {@code true}._@param returnValue the value returned from the handler method_@param returnType the type of the return value._@return the resulting ListenableFuture or {@code null} in which case no_further handling will be performed.;ListenableFuture<?> toListenableFuture(Object returnValue, MethodParameter returnType)_;adapt,the,asynchronous,return,value,to,a,link,listenable,future,implementations,should,consider,returning,an,instance,of,link,org,springframework,util,concurrent,settable,listenable,future,settable,listenable,future,return,value,handling,will,then,continue,when,the,listenable,future,is,completed,with,either,success,or,error,p,strong,note,strong,this,method,will,only,be,invoked,after,link,supports,return,type,org,springframework,core,method,parameter,is,called,and,it,returns,code,true,param,return,value,the,value,returned,from,the,handler,method,param,return,type,the,type,of,the,return,value,return,the,resulting,listenable,future,or,code,null,in,which,case,no,further,handling,will,be,performed;listenable,future,to,listenable,future,object,return,value,method,parameter,return,type
AsyncHandlerMethodReturnValueHandler -> ListenableFuture<?> toListenableFuture(Object returnValue, MethodParameter returnType)_;1450380453;Adapt the asynchronous return value to a {@link ListenableFuture}._Implementations should consider returning an instance of_{@link org.springframework.util.concurrent.SettableListenableFuture_SettableListenableFuture}. Return value handling will then continue when_the ListenableFuture is completed with either success or error._<p><strong>Note:</strong> this method will only be invoked after_{@link #supportsReturnType(org.springframework.core.MethodParameter)}_is called and it returns {@code true}._@param returnValue the value returned from the handler method_@param returnType the type of the return value._@return the resulting ListenableFuture or {@code null} in which case no_further handling will be performed.;ListenableFuture<?> toListenableFuture(Object returnValue, MethodParameter returnType)_;adapt,the,asynchronous,return,value,to,a,link,listenable,future,implementations,should,consider,returning,an,instance,of,link,org,springframework,util,concurrent,settable,listenable,future,settable,listenable,future,return,value,handling,will,then,continue,when,the,listenable,future,is,completed,with,either,success,or,error,p,strong,note,strong,this,method,will,only,be,invoked,after,link,supports,return,type,org,springframework,core,method,parameter,is,called,and,it,returns,code,true,param,return,value,the,value,returned,from,the,handler,method,param,return,type,the,type,of,the,return,value,return,the,resulting,listenable,future,or,code,null,in,which,case,no,further,handling,will,be,performed;listenable,future,to,listenable,future,object,return,value,method,parameter,return,type
AsyncHandlerMethodReturnValueHandler -> boolean isAsyncReturnValue(Object returnValue, MethodParameter returnType)_;1432286953;Whether the return value type represents a value that will be produced_asynchronously. If this method returns {@code true}, the_{@link #toListenableFuture(Object, MethodParameter)}  will be invoked next._@param returnValue the value returned from the handler method_@param returnType the type of the return value. This type must have_previously been passed to_{@link #supportsReturnType(org.springframework.core.MethodParameter)}_and it must have returned {@code true}_@return true if the return value type represents an async value.;boolean isAsyncReturnValue(Object returnValue, MethodParameter returnType)_;whether,the,return,value,type,represents,a,value,that,will,be,produced,asynchronously,if,this,method,returns,code,true,the,link,to,listenable,future,object,method,parameter,will,be,invoked,next,param,return,value,the,value,returned,from,the,handler,method,param,return,type,the,type,of,the,return,value,this,type,must,have,previously,been,passed,to,link,supports,return,type,org,springframework,core,method,parameter,and,it,must,have,returned,code,true,return,true,if,the,return,value,type,represents,an,async,value;boolean,is,async,return,value,object,return,value,method,parameter,return,type
AsyncHandlerMethodReturnValueHandler -> boolean isAsyncReturnValue(Object returnValue, MethodParameter returnType)_;1432299978;Whether the return value represents an asynchronous, Future-like type_with success and error callbacks. If this method returns {@code true},_then {@link #toListenableFuture} is invoked next. If it returns_{@code false}, then {@link #handleReturnValue} is called.__<p><strong>Note:</strong> this method will only be invoked after_{@link #supportsReturnType(org.springframework.core.MethodParameter)}_is called and it returns {@code true}.__@param returnValue the value returned from the handler method_@param returnType the type of the return value._@return true if the return value type represents an async value.;boolean isAsyncReturnValue(Object returnValue, MethodParameter returnType)_;whether,the,return,value,represents,an,asynchronous,future,like,type,with,success,and,error,callbacks,if,this,method,returns,code,true,then,link,to,listenable,future,is,invoked,next,if,it,returns,code,false,then,link,handle,return,value,is,called,p,strong,note,strong,this,method,will,only,be,invoked,after,link,supports,return,type,org,springframework,core,method,parameter,is,called,and,it,returns,code,true,param,return,value,the,value,returned,from,the,handler,method,param,return,type,the,type,of,the,return,value,return,true,if,the,return,value,type,represents,an,async,value;boolean,is,async,return,value,object,return,value,method,parameter,return,type
AsyncHandlerMethodReturnValueHandler -> boolean isAsyncReturnValue(Object returnValue, MethodParameter returnType)_;1437512314;Whether the return value represents an asynchronous, Future-like type_with success and error callbacks. If this method returns {@code true},_then {@link #toListenableFuture} is invoked next. If it returns_{@code false}, then {@link #handleReturnValue} is called._<p><strong>Note:</strong> this method will only be invoked after_{@link #supportsReturnType(org.springframework.core.MethodParameter)}_is called and it returns {@code true}._@param returnValue the value returned from the handler method_@param returnType the type of the return value._@return true if the return value type represents an async value.;boolean isAsyncReturnValue(Object returnValue, MethodParameter returnType)_;whether,the,return,value,represents,an,asynchronous,future,like,type,with,success,and,error,callbacks,if,this,method,returns,code,true,then,link,to,listenable,future,is,invoked,next,if,it,returns,code,false,then,link,handle,return,value,is,called,p,strong,note,strong,this,method,will,only,be,invoked,after,link,supports,return,type,org,springframework,core,method,parameter,is,called,and,it,returns,code,true,param,return,value,the,value,returned,from,the,handler,method,param,return,type,the,type,of,the,return,value,return,true,if,the,return,value,type,represents,an,async,value;boolean,is,async,return,value,object,return,value,method,parameter,return,type
AsyncHandlerMethodReturnValueHandler -> boolean isAsyncReturnValue(Object returnValue, MethodParameter returnType)_;1450380453;Whether the return value represents an asynchronous, Future-like type_with success and error callbacks. If this method returns {@code true},_then {@link #toListenableFuture} is invoked next. If it returns_{@code false}, then {@link #handleReturnValue} is called._<p><strong>Note:</strong> this method will only be invoked after_{@link #supportsReturnType(org.springframework.core.MethodParameter)}_is called and it returns {@code true}._@param returnValue the value returned from the handler method_@param returnType the type of the return value._@return true if the return value type represents an async value.;boolean isAsyncReturnValue(Object returnValue, MethodParameter returnType)_;whether,the,return,value,represents,an,asynchronous,future,like,type,with,success,and,error,callbacks,if,this,method,returns,code,true,then,link,to,listenable,future,is,invoked,next,if,it,returns,code,false,then,link,handle,return,value,is,called,p,strong,note,strong,this,method,will,only,be,invoked,after,link,supports,return,type,org,springframework,core,method,parameter,is,called,and,it,returns,code,true,param,return,value,the,value,returned,from,the,handler,method,param,return,type,the,type,of,the,return,value,return,true,if,the,return,value,type,represents,an,async,value;boolean,is,async,return,value,object,return,value,method,parameter,return,type
AsyncHandlerMethodReturnValueHandler -> boolean isAsyncReturnValue(Object returnValue, MethodParameter returnType)_;1495868221;Whether the return value represents an asynchronous, Future-like type_with success and error callbacks. If this method returns {@code true},_then {@link #toListenableFuture} is invoked next. If it returns_{@code false}, then {@link #handleReturnValue} is called._<p><strong>Note:</strong> this method will only be invoked after_{@link #supportsReturnType(org.springframework.core.MethodParameter)}_is called and it returns {@code true}._@param returnValue the value returned from the handler method_@param returnType the type of the return value._@return true if the return value type represents an async value.;boolean isAsyncReturnValue(Object returnValue, MethodParameter returnType)_;whether,the,return,value,represents,an,asynchronous,future,like,type,with,success,and,error,callbacks,if,this,method,returns,code,true,then,link,to,listenable,future,is,invoked,next,if,it,returns,code,false,then,link,handle,return,value,is,called,p,strong,note,strong,this,method,will,only,be,invoked,after,link,supports,return,type,org,springframework,core,method,parameter,is,called,and,it,returns,code,true,param,return,value,the,value,returned,from,the,handler,method,param,return,type,the,type,of,the,return,value,return,true,if,the,return,value,type,represents,an,async,value;boolean,is,async,return,value,object,return,value,method,parameter,return,type
