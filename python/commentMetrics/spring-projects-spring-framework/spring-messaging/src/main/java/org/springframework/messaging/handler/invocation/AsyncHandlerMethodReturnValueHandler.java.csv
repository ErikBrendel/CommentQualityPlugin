commented;modifiers;parameterAmount;loc;comment;code
true;;2;1;/**  * Whether the return value represents an asynchronous, Future-like type  * with success and error callbacks. If this method returns {@code true},  * then {@link #toListenableFuture} is invoked next. If it returns  * {@code false}, then {@link #handleReturnValue} is called.  * <p><strong>Note:</strong> this method will only be invoked after  * {@link #supportsReturnType(org.springframework.core.MethodParameter)}  * is called and it returns {@code true}.  * @param returnValue the value returned from the handler method  * @param returnType the type of the return value.  * @return true if the return value type represents an async value.  */ ;/**  * Whether the return value represents an asynchronous, Future-like type  * with success and error callbacks. If this method returns {@code true},  * then {@link #toListenableFuture} is invoked next. If it returns  * {@code false}, then {@link #handleReturnValue} is called.  * <p><strong>Note:</strong> this method will only be invoked after  * {@link #supportsReturnType(org.springframework.core.MethodParameter)}  * is called and it returns {@code true}.  * @param returnValue the value returned from the handler method  * @param returnType the type of the return value.  * @return true if the return value type represents an async value.  */ boolean isAsyncReturnValue(Object returnValue, MethodParameter returnType).
true;;2;2;/**  * Adapt the asynchronous return value to a {@link ListenableFuture}.  * Implementations should consider returning an instance of  * {@link org.springframework.util.concurrent.SettableListenableFuture  * SettableListenableFuture}. Return value handling will then continue when  * the ListenableFuture is completed with either success or error.  * <p><strong>Note:</strong> this method will only be invoked after  * {@link #supportsReturnType(org.springframework.core.MethodParameter)}  * is called and it returns {@code true}.  * @param returnValue the value returned from the handler method  * @param returnType the type of the return value.  * @return the resulting ListenableFuture or {@code null} in which case no  * further handling will be performed.  */ ;/**  * Adapt the asynchronous return value to a {@link ListenableFuture}.  * Implementations should consider returning an instance of  * {@link org.springframework.util.concurrent.SettableListenableFuture  * SettableListenableFuture}. Return value handling will then continue when  * the ListenableFuture is completed with either success or error.  * <p><strong>Note:</strong> this method will only be invoked after  * {@link #supportsReturnType(org.springframework.core.MethodParameter)}  * is called and it returns {@code true}.  * @param returnValue the value returned from the handler method  * @param returnType the type of the return value.  * @return the resulting ListenableFuture or {@code null} in which case no  * further handling will be performed.  */ @Nullable ListenableFuture<?> toListenableFuture(Object returnValue, MethodParameter returnType).
