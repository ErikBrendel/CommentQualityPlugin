# id;timestamp;commentText;codeText;commentWords;codeWords
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayPort(int relayPort);1377656407;Set the STOMP message broker port.;public StompBrokerRelayRegistration setRelayPort(int relayPort) {_		this.relayPort = relayPort__		return this__	};set,the,stomp,message,broker,port;public,stomp,broker,relay,registration,set,relay,port,int,relay,port,this,relay,port,relay,port,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayPort(int relayPort);1378168614;Set the STOMP message broker port.;public StompBrokerRelayRegistration setRelayPort(int relayPort) {_		this.relayPort = relayPort__		return this__	};set,the,stomp,message,broker,port;public,stomp,broker,relay,registration,set,relay,port,int,relay,port,this,relay,port,relay,port,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayPort(int relayPort);1380745783;Set the STOMP message broker port.;public StompBrokerRelayRegistration setRelayPort(int relayPort) {_		this.relayPort = relayPort__		return this__	};set,the,stomp,message,broker,port;public,stomp,broker,relay,registration,set,relay,port,int,relay,port,this,relay,port,relay,port,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayPort(int relayPort);1385258957;Set the STOMP message broker port.;public StompBrokerRelayRegistration setRelayPort(int relayPort) {_		this.relayPort = relayPort__		return this__	};set,the,stomp,message,broker,port;public,stomp,broker,relay,registration,set,relay,port,int,relay,port,this,relay,port,relay,port,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayPort(int relayPort);1385507478;Set the STOMP message broker port.;public StompBrokerRelayRegistration setRelayPort(int relayPort) {_		this.relayPort = relayPort__		return this__	};set,the,stomp,message,broker,port;public,stomp,broker,relay,registration,set,relay,port,int,relay,port,this,relay,port,relay,port,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayPort(int relayPort);1385507683;Set the STOMP message broker port.;public StompBrokerRelayRegistration setRelayPort(int relayPort) {_		this.relayPort = relayPort__		return this__	};set,the,stomp,message,broker,port;public,stomp,broker,relay,registration,set,relay,port,int,relay,port,this,relay,port,relay,port,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayPort(int relayPort);1386004713;Set the STOMP message broker port.;public StompBrokerRelayRegistration setRelayPort(int relayPort) {_		this.relayPort = relayPort__		return this__	};set,the,stomp,message,broker,port;public,stomp,broker,relay,registration,set,relay,port,int,relay,port,this,relay,port,relay,port,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayPort(int relayPort);1387852827;Set the STOMP message broker port.;public StompBrokerRelayRegistration setRelayPort(int relayPort) {_		this.relayPort = relayPort__		return this__	};set,the,stomp,message,broker,port;public,stomp,broker,relay,registration,set,relay,port,int,relay,port,this,relay,port,relay,port,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayPort(int relayPort);1392645065;Set the STOMP message broker port.;public StompBrokerRelayRegistration setRelayPort(int relayPort) {_		this.relayPort = relayPort__		return this__	};set,the,stomp,message,broker,port;public,stomp,broker,relay,registration,set,relay,port,int,relay,port,this,relay,port,relay,port,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayPort(int relayPort);1405696918;Set the STOMP message broker port.;public StompBrokerRelayRegistration setRelayPort(int relayPort) {_		this.relayPort = relayPort__		return this__	};set,the,stomp,message,broker,port;public,stomp,broker,relay,registration,set,relay,port,int,relay,port,this,relay,port,relay,port,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayPort(int relayPort);1408751872;Set the STOMP message broker port.;public StompBrokerRelayRegistration setRelayPort(int relayPort) {_		this.relayPort = relayPort__		return this__	};set,the,stomp,message,broker,port;public,stomp,broker,relay,registration,set,relay,port,int,relay,port,this,relay,port,relay,port,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayPort(int relayPort);1413848647;Set the STOMP message broker port.;public StompBrokerRelayRegistration setRelayPort(int relayPort) {_		this.relayPort = relayPort__		return this__	};set,the,stomp,message,broker,port;public,stomp,broker,relay,registration,set,relay,port,int,relay,port,this,relay,port,relay,port,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayPort(int relayPort);1431458952;Set the STOMP message broker port.;public StompBrokerRelayRegistration setRelayPort(int relayPort) {_		this.relayPort = relayPort__		return this__	};set,the,stomp,message,broker,port;public,stomp,broker,relay,registration,set,relay,port,int,relay,port,this,relay,port,relay,port,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayPort(int relayPort);1498780456;Set the STOMP message broker port.;public StompBrokerRelayRegistration setRelayPort(int relayPort) {_		this.relayPort = relayPort__		return this__	};set,the,stomp,message,broker,port;public,stomp,broker,relay,registration,set,relay,port,int,relay,port,this,relay,port,relay,port,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayPort(int relayPort);1521562905;Set the STOMP message broker port.;public StompBrokerRelayRegistration setRelayPort(int relayPort) {_		this.relayPort = relayPort__		return this__	};set,the,stomp,message,broker,port;public,stomp,broker,relay,registration,set,relay,port,int,relay,port,this,relay,port,relay,port,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemPasscode(String passcode);1387852827;Set the passcode for the shared "system" connection used to send messages to_the STOMP broker from within the application, i.e. messages not associated_with a specific client session (e.g. REST/HTTP request handling method)._<p>_By default this is set to "guest".;public StompBrokerRelayRegistration setSystemPasscode(String passcode) {_		Assert.hasText(passcode, "systemPasscode must not be empty")__		this.systemPasscode = passcode__		return this__	};set,the,passcode,for,the,shared,system,connection,used,to,send,messages,to,the,stomp,broker,from,within,the,application,i,e,messages,not,associated,with,a,specific,client,session,e,g,rest,http,request,handling,method,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,system,passcode,string,passcode,assert,has,text,passcode,system,passcode,must,not,be,empty,this,system,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemPasscode(String passcode);1392645065;Set the passcode for the shared "system" connection used to send messages to_the STOMP broker from within the application, i.e. messages not associated_with a specific client session (e.g. REST/HTTP request handling method)._<p>_By default this is set to "guest".;public StompBrokerRelayRegistration setSystemPasscode(String passcode) {_		Assert.hasText(passcode, "systemPasscode must not be empty")__		this.systemPasscode = passcode__		return this__	};set,the,passcode,for,the,shared,system,connection,used,to,send,messages,to,the,stomp,broker,from,within,the,application,i,e,messages,not,associated,with,a,specific,client,session,e,g,rest,http,request,handling,method,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,system,passcode,string,passcode,assert,has,text,passcode,system,passcode,must,not,be,empty,this,system,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemPasscode(String passcode);1405696918;Set the passcode for the shared "system" connection used to send messages to_the STOMP broker from within the application, i.e. messages not associated_with a specific client session (e.g. REST/HTTP request handling method)._<p>_By default this is set to "guest".;public StompBrokerRelayRegistration setSystemPasscode(String passcode) {_		Assert.hasText(passcode, "systemPasscode must not be empty")__		this.systemPasscode = passcode__		return this__	};set,the,passcode,for,the,shared,system,connection,used,to,send,messages,to,the,stomp,broker,from,within,the,application,i,e,messages,not,associated,with,a,specific,client,session,e,g,rest,http,request,handling,method,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,system,passcode,string,passcode,assert,has,text,passcode,system,passcode,must,not,be,empty,this,system,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemPasscode(String passcode);1408751872;Set the passcode for the shared "system" connection used to send messages to_the STOMP broker from within the application, i.e. messages not associated_with a specific client session (e.g. REST/HTTP request handling method)._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setSystemPasscode(String passcode) {_		Assert.hasText(passcode, "systemPasscode must not be empty")__		this.systemPasscode = passcode__		return this__	};set,the,passcode,for,the,shared,system,connection,used,to,send,messages,to,the,stomp,broker,from,within,the,application,i,e,messages,not,associated,with,a,specific,client,session,e,g,rest,http,request,handling,method,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,system,passcode,string,passcode,assert,has,text,passcode,system,passcode,must,not,be,empty,this,system,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemPasscode(String passcode);1413848647;Set the passcode for the shared "system" connection used to send messages to_the STOMP broker from within the application, i.e. messages not associated_with a specific client session (e.g. REST/HTTP request handling method)._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setSystemPasscode(String passcode) {_		Assert.hasText(passcode, "systemPasscode must not be empty")__		this.systemPasscode = passcode__		return this__	};set,the,passcode,for,the,shared,system,connection,used,to,send,messages,to,the,stomp,broker,from,within,the,application,i,e,messages,not,associated,with,a,specific,client,session,e,g,rest,http,request,handling,method,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,system,passcode,string,passcode,assert,has,text,passcode,system,passcode,must,not,be,empty,this,system,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemPasscode(String passcode);1431458952;Set the passcode for the shared "system" connection used to send messages to_the STOMP broker from within the application, i.e. messages not associated_with a specific client session (e.g. REST/HTTP request handling method)._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setSystemPasscode(String passcode) {_		Assert.hasText(passcode, "systemPasscode must not be empty")__		this.systemPasscode = passcode__		return this__	};set,the,passcode,for,the,shared,system,connection,used,to,send,messages,to,the,stomp,broker,from,within,the,application,i,e,messages,not,associated,with,a,specific,client,session,e,g,rest,http,request,handling,method,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,system,passcode,string,passcode,assert,has,text,passcode,system,passcode,must,not,be,empty,this,system,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemPasscode(String passcode);1498780456;Set the passcode for the shared "system" connection used to send messages to_the STOMP broker from within the application, i.e. messages not associated_with a specific client session (e.g. REST/HTTP request handling method)._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setSystemPasscode(String passcode) {_		Assert.hasText(passcode, "systemPasscode must not be empty")__		this.systemPasscode = passcode__		return this__	};set,the,passcode,for,the,shared,system,connection,used,to,send,messages,to,the,stomp,broker,from,within,the,application,i,e,messages,not,associated,with,a,specific,client,session,e,g,rest,http,request,handling,method,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,system,passcode,string,passcode,assert,has,text,passcode,system,passcode,must,not,be,empty,this,system,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemPasscode(String passcode);1521562905;Set the passcode for the shared "system" connection used to send messages to_the STOMP broker from within the application, i.e. messages not associated_with a specific client session (e.g. REST/HTTP request handling method)._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setSystemPasscode(String passcode) {_		Assert.hasText(passcode, "systemPasscode must not be empty")__		this.systemPasscode = passcode__		return this__	};set,the,passcode,for,the,shared,system,connection,used,to,send,messages,to,the,stomp,broker,from,within,the,application,i,e,messages,not,associated,with,a,specific,client,session,e,g,rest,http,request,handling,method,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,system,passcode,string,passcode,assert,has,text,passcode,system,passcode,must,not,be,empty,this,system,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval);1380745783;Set the interval, in milliseconds, at which the "system" relay session will,_in the absence of any other data being sent, send a heartbeat to the STOMP broker._A value of zero will prevent heartbeats from being sent to the broker._<p>_The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval) {_		this.systemHeartbeatSendInterval = systemHeartbeatSendInterval__		return this__	};set,the,interval,in,milliseconds,at,which,the,system,relay,session,will,in,the,absence,of,any,other,data,being,sent,send,a,heartbeat,to,the,stomp,broker,a,value,of,zero,will,prevent,heartbeats,from,being,sent,to,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,send,interval,long,system,heartbeat,send,interval,this,system,heartbeat,send,interval,system,heartbeat,send,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval);1385258957;Set the interval, in milliseconds, at which the "system" relay session will,_in the absence of any other data being sent, send a heartbeat to the STOMP broker._A value of zero will prevent heartbeats from being sent to the broker._<p>_The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval) {_		this.systemHeartbeatSendInterval = systemHeartbeatSendInterval__		return this__	};set,the,interval,in,milliseconds,at,which,the,system,relay,session,will,in,the,absence,of,any,other,data,being,sent,send,a,heartbeat,to,the,stomp,broker,a,value,of,zero,will,prevent,heartbeats,from,being,sent,to,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,send,interval,long,system,heartbeat,send,interval,this,system,heartbeat,send,interval,system,heartbeat,send,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval);1385507478;Set the interval, in milliseconds, at which the "system" relay session will,_in the absence of any other data being sent, send a heartbeat to the STOMP broker._A value of zero will prevent heartbeats from being sent to the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval) {_		this.systemHeartbeatSendInterval = systemHeartbeatSendInterval__		return this__	};set,the,interval,in,milliseconds,at,which,the,system,relay,session,will,in,the,absence,of,any,other,data,being,sent,send,a,heartbeat,to,the,stomp,broker,a,value,of,zero,will,prevent,heartbeats,from,being,sent,to,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,send,interval,long,system,heartbeat,send,interval,this,system,heartbeat,send,interval,system,heartbeat,send,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval);1385507683;Set the interval, in milliseconds, at which the "system" relay session will,_in the absence of any other data being sent, send a heartbeat to the STOMP broker._A value of zero will prevent heartbeats from being sent to the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval) {_		this.systemHeartbeatSendInterval = systemHeartbeatSendInterval__		return this__	};set,the,interval,in,milliseconds,at,which,the,system,relay,session,will,in,the,absence,of,any,other,data,being,sent,send,a,heartbeat,to,the,stomp,broker,a,value,of,zero,will,prevent,heartbeats,from,being,sent,to,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,send,interval,long,system,heartbeat,send,interval,this,system,heartbeat,send,interval,system,heartbeat,send,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval);1386004713;Set the interval, in milliseconds, at which the "system" relay session will,_in the absence of any other data being sent, send a heartbeat to the STOMP broker._A value of zero will prevent heartbeats from being sent to the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval) {_		this.systemHeartbeatSendInterval = systemHeartbeatSendInterval__		return this__	};set,the,interval,in,milliseconds,at,which,the,system,relay,session,will,in,the,absence,of,any,other,data,being,sent,send,a,heartbeat,to,the,stomp,broker,a,value,of,zero,will,prevent,heartbeats,from,being,sent,to,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,send,interval,long,system,heartbeat,send,interval,this,system,heartbeat,send,interval,system,heartbeat,send,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval);1387852827;Set the interval, in milliseconds, at which the "system" relay session will,_in the absence of any other data being sent, send a heartbeat to the STOMP broker._A value of zero will prevent heartbeats from being sent to the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval) {_		this.systemHeartbeatSendInterval = systemHeartbeatSendInterval__		return this__	};set,the,interval,in,milliseconds,at,which,the,system,relay,session,will,in,the,absence,of,any,other,data,being,sent,send,a,heartbeat,to,the,stomp,broker,a,value,of,zero,will,prevent,heartbeats,from,being,sent,to,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,send,interval,long,system,heartbeat,send,interval,this,system,heartbeat,send,interval,system,heartbeat,send,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval);1392645065;Set the interval, in milliseconds, at which the "system" relay session will,_in the absence of any other data being sent, send a heartbeat to the STOMP broker._A value of zero will prevent heartbeats from being sent to the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval) {_		this.systemHeartbeatSendInterval = systemHeartbeatSendInterval__		return this__	};set,the,interval,in,milliseconds,at,which,the,system,relay,session,will,in,the,absence,of,any,other,data,being,sent,send,a,heartbeat,to,the,stomp,broker,a,value,of,zero,will,prevent,heartbeats,from,being,sent,to,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,send,interval,long,system,heartbeat,send,interval,this,system,heartbeat,send,interval,system,heartbeat,send,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval);1405696918;Set the interval, in milliseconds, at which the "system" relay session will,_in the absence of any other data being sent, send a heartbeat to the STOMP broker._A value of zero will prevent heartbeats from being sent to the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval) {_		this.systemHeartbeatSendInterval = systemHeartbeatSendInterval__		return this__	};set,the,interval,in,milliseconds,at,which,the,system,relay,session,will,in,the,absence,of,any,other,data,being,sent,send,a,heartbeat,to,the,stomp,broker,a,value,of,zero,will,prevent,heartbeats,from,being,sent,to,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,send,interval,long,system,heartbeat,send,interval,this,system,heartbeat,send,interval,system,heartbeat,send,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval);1408751872;Set the interval, in milliseconds, at which the "system" relay session will,_in the absence of any other data being sent, send a heartbeat to the STOMP broker._A value of zero will prevent heartbeats from being sent to the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval) {_		this.systemHeartbeatSendInterval = systemHeartbeatSendInterval__		return this__	};set,the,interval,in,milliseconds,at,which,the,system,relay,session,will,in,the,absence,of,any,other,data,being,sent,send,a,heartbeat,to,the,stomp,broker,a,value,of,zero,will,prevent,heartbeats,from,being,sent,to,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,send,interval,long,system,heartbeat,send,interval,this,system,heartbeat,send,interval,system,heartbeat,send,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval);1413848647;Set the interval, in milliseconds, at which the "system" relay session will,_in the absence of any other data being sent, send a heartbeat to the STOMP broker._A value of zero will prevent heartbeats from being sent to the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval) {_		this.systemHeartbeatSendInterval = systemHeartbeatSendInterval__		return this__	};set,the,interval,in,milliseconds,at,which,the,system,relay,session,will,in,the,absence,of,any,other,data,being,sent,send,a,heartbeat,to,the,stomp,broker,a,value,of,zero,will,prevent,heartbeats,from,being,sent,to,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,send,interval,long,system,heartbeat,send,interval,this,system,heartbeat,send,interval,system,heartbeat,send,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval);1431458952;Set the interval, in milliseconds, at which the "system" relay session will,_in the absence of any other data being sent, send a heartbeat to the STOMP broker._A value of zero will prevent heartbeats from being sent to the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval) {_		this.systemHeartbeatSendInterval = systemHeartbeatSendInterval__		return this__	};set,the,interval,in,milliseconds,at,which,the,system,relay,session,will,in,the,absence,of,any,other,data,being,sent,send,a,heartbeat,to,the,stomp,broker,a,value,of,zero,will,prevent,heartbeats,from,being,sent,to,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,send,interval,long,system,heartbeat,send,interval,this,system,heartbeat,send,interval,system,heartbeat,send,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval);1498780456;Set the interval, in milliseconds, at which the "system" relay session will,_in the absence of any other data being sent, send a heartbeat to the STOMP broker._A value of zero will prevent heartbeats from being sent to the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval) {_		this.systemHeartbeatSendInterval = systemHeartbeatSendInterval__		return this__	};set,the,interval,in,milliseconds,at,which,the,system,relay,session,will,in,the,absence,of,any,other,data,being,sent,send,a,heartbeat,to,the,stomp,broker,a,value,of,zero,will,prevent,heartbeats,from,being,sent,to,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,send,interval,long,system,heartbeat,send,interval,this,system,heartbeat,send,interval,system,heartbeat,send,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval);1521562905;Set the interval, in milliseconds, at which the "system" relay session will,_in the absence of any other data being sent, send a heartbeat to the STOMP broker._A value of zero will prevent heartbeats from being sent to the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long systemHeartbeatSendInterval) {_		this.systemHeartbeatSendInterval = systemHeartbeatSendInterval__		return this__	};set,the,interval,in,milliseconds,at,which,the,system,relay,session,will,in,the,absence,of,any,other,data,being,sent,send,a,heartbeat,to,the,stomp,broker,a,value,of,zero,will,prevent,heartbeats,from,being,sent,to,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,send,interval,long,system,heartbeat,send,interval,this,system,heartbeat,send,interval,system,heartbeat,send,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayHost(String relayHost);1377656407;Set the STOMP message broker host.;public StompBrokerRelayRegistration setRelayHost(String relayHost) {_		Assert.hasText(relayHost, "relayHost must not be empty")__		this.relayHost = relayHost__		return this__	};set,the,stomp,message,broker,host;public,stomp,broker,relay,registration,set,relay,host,string,relay,host,assert,has,text,relay,host,relay,host,must,not,be,empty,this,relay,host,relay,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayHost(String relayHost);1378168614;Set the STOMP message broker host.;public StompBrokerRelayRegistration setRelayHost(String relayHost) {_		Assert.hasText(relayHost, "relayHost must not be empty")__		this.relayHost = relayHost__		return this__	};set,the,stomp,message,broker,host;public,stomp,broker,relay,registration,set,relay,host,string,relay,host,assert,has,text,relay,host,relay,host,must,not,be,empty,this,relay,host,relay,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayHost(String relayHost);1380745783;Set the STOMP message broker host.;public StompBrokerRelayRegistration setRelayHost(String relayHost) {_		Assert.hasText(relayHost, "relayHost must not be empty")__		this.relayHost = relayHost__		return this__	};set,the,stomp,message,broker,host;public,stomp,broker,relay,registration,set,relay,host,string,relay,host,assert,has,text,relay,host,relay,host,must,not,be,empty,this,relay,host,relay,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayHost(String relayHost);1385258957;Set the STOMP message broker host.;public StompBrokerRelayRegistration setRelayHost(String relayHost) {_		Assert.hasText(relayHost, "relayHost must not be empty")__		this.relayHost = relayHost__		return this__	};set,the,stomp,message,broker,host;public,stomp,broker,relay,registration,set,relay,host,string,relay,host,assert,has,text,relay,host,relay,host,must,not,be,empty,this,relay,host,relay,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayHost(String relayHost);1385507478;Set the STOMP message broker host.;public StompBrokerRelayRegistration setRelayHost(String relayHost) {_		Assert.hasText(relayHost, "relayHost must not be empty")__		this.relayHost = relayHost__		return this__	};set,the,stomp,message,broker,host;public,stomp,broker,relay,registration,set,relay,host,string,relay,host,assert,has,text,relay,host,relay,host,must,not,be,empty,this,relay,host,relay,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayHost(String relayHost);1385507683;Set the STOMP message broker host.;public StompBrokerRelayRegistration setRelayHost(String relayHost) {_		Assert.hasText(relayHost, "relayHost must not be empty")__		this.relayHost = relayHost__		return this__	};set,the,stomp,message,broker,host;public,stomp,broker,relay,registration,set,relay,host,string,relay,host,assert,has,text,relay,host,relay,host,must,not,be,empty,this,relay,host,relay,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayHost(String relayHost);1386004713;Set the STOMP message broker host.;public StompBrokerRelayRegistration setRelayHost(String relayHost) {_		Assert.hasText(relayHost, "relayHost must not be empty")__		this.relayHost = relayHost__		return this__	};set,the,stomp,message,broker,host;public,stomp,broker,relay,registration,set,relay,host,string,relay,host,assert,has,text,relay,host,relay,host,must,not,be,empty,this,relay,host,relay,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayHost(String relayHost);1387852827;Set the STOMP message broker host.;public StompBrokerRelayRegistration setRelayHost(String relayHost) {_		Assert.hasText(relayHost, "relayHost must not be empty")__		this.relayHost = relayHost__		return this__	};set,the,stomp,message,broker,host;public,stomp,broker,relay,registration,set,relay,host,string,relay,host,assert,has,text,relay,host,relay,host,must,not,be,empty,this,relay,host,relay,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayHost(String relayHost);1392645065;Set the STOMP message broker host.;public StompBrokerRelayRegistration setRelayHost(String relayHost) {_		Assert.hasText(relayHost, "relayHost must not be empty")__		this.relayHost = relayHost__		return this__	};set,the,stomp,message,broker,host;public,stomp,broker,relay,registration,set,relay,host,string,relay,host,assert,has,text,relay,host,relay,host,must,not,be,empty,this,relay,host,relay,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayHost(String relayHost);1405696918;Set the STOMP message broker host.;public StompBrokerRelayRegistration setRelayHost(String relayHost) {_		Assert.hasText(relayHost, "relayHost must not be empty")__		this.relayHost = relayHost__		return this__	};set,the,stomp,message,broker,host;public,stomp,broker,relay,registration,set,relay,host,string,relay,host,assert,has,text,relay,host,relay,host,must,not,be,empty,this,relay,host,relay,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayHost(String relayHost);1408751872;Set the STOMP message broker host.;public StompBrokerRelayRegistration setRelayHost(String relayHost) {_		Assert.hasText(relayHost, "relayHost must not be empty")__		this.relayHost = relayHost__		return this__	};set,the,stomp,message,broker,host;public,stomp,broker,relay,registration,set,relay,host,string,relay,host,assert,has,text,relay,host,relay,host,must,not,be,empty,this,relay,host,relay,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayHost(String relayHost);1413848647;Set the STOMP message broker host.;public StompBrokerRelayRegistration setRelayHost(String relayHost) {_		Assert.hasText(relayHost, "relayHost must not be empty")__		this.relayHost = relayHost__		return this__	};set,the,stomp,message,broker,host;public,stomp,broker,relay,registration,set,relay,host,string,relay,host,assert,has,text,relay,host,relay,host,must,not,be,empty,this,relay,host,relay,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayHost(String relayHost);1431458952;Set the STOMP message broker host.;public StompBrokerRelayRegistration setRelayHost(String relayHost) {_		Assert.hasText(relayHost, "relayHost must not be empty")__		this.relayHost = relayHost__		return this__	};set,the,stomp,message,broker,host;public,stomp,broker,relay,registration,set,relay,host,string,relay,host,assert,has,text,relay,host,relay,host,must,not,be,empty,this,relay,host,relay,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayHost(String relayHost);1498780456;Set the STOMP message broker host.;public StompBrokerRelayRegistration setRelayHost(String relayHost) {_		Assert.hasText(relayHost, "relayHost must not be empty")__		this.relayHost = relayHost__		return this__	};set,the,stomp,message,broker,host;public,stomp,broker,relay,registration,set,relay,host,string,relay,host,assert,has,text,relay,host,relay,host,must,not,be,empty,this,relay,host,relay,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setRelayHost(String relayHost);1521562905;Set the STOMP message broker host.;public StompBrokerRelayRegistration setRelayHost(String relayHost) {_		Assert.hasText(relayHost, "relayHost must not be empty")__		this.relayHost = relayHost__		return this__	};set,the,stomp,message,broker,host;public,stomp,broker,relay,registration,set,relay,host,string,relay,host,assert,has,text,relay,host,relay,host,must,not,be,empty,this,relay,host,relay,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setVirtualHost(String virtualHost);1392645065;Set the value of the "host" header to use in STOMP CONNECT frames. When this_property is configured, a "host" header will be added to every STOMP frame sent to_the STOMP broker. This may be useful for example in a cloud environment where the_actual host to which the TCP connection is established is different from the host_providing the cloud-based STOMP service._<p>By default this property is not set.;public StompBrokerRelayRegistration setVirtualHost(String virtualHost) {_		this.virtualHost = virtualHost__		return this__	};set,the,value,of,the,host,header,to,use,in,stomp,connect,frames,when,this,property,is,configured,a,host,header,will,be,added,to,every,stomp,frame,sent,to,the,stomp,broker,this,may,be,useful,for,example,in,a,cloud,environment,where,the,actual,host,to,which,the,tcp,connection,is,established,is,different,from,the,host,providing,the,cloud,based,stomp,service,p,by,default,this,property,is,not,set;public,stomp,broker,relay,registration,set,virtual,host,string,virtual,host,this,virtual,host,virtual,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setVirtualHost(String virtualHost);1405696918;Set the value of the "host" header to use in STOMP CONNECT frames. When this_property is configured, a "host" header will be added to every STOMP frame sent to_the STOMP broker. This may be useful for example in a cloud environment where the_actual host to which the TCP connection is established is different from the host_providing the cloud-based STOMP service._<p>By default this property is not set.;public StompBrokerRelayRegistration setVirtualHost(String virtualHost) {_		this.virtualHost = virtualHost__		return this__	};set,the,value,of,the,host,header,to,use,in,stomp,connect,frames,when,this,property,is,configured,a,host,header,will,be,added,to,every,stomp,frame,sent,to,the,stomp,broker,this,may,be,useful,for,example,in,a,cloud,environment,where,the,actual,host,to,which,the,tcp,connection,is,established,is,different,from,the,host,providing,the,cloud,based,stomp,service,p,by,default,this,property,is,not,set;public,stomp,broker,relay,registration,set,virtual,host,string,virtual,host,this,virtual,host,virtual,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setVirtualHost(String virtualHost);1408751872;Set the value of the "host" header to use in STOMP CONNECT frames. When this_property is configured, a "host" header will be added to every STOMP frame sent to_the STOMP broker. This may be useful for example in a cloud environment where the_actual host to which the TCP connection is established is different from the host_providing the cloud-based STOMP service._<p>By default this property is not set.;public StompBrokerRelayRegistration setVirtualHost(String virtualHost) {_		this.virtualHost = virtualHost__		return this__	};set,the,value,of,the,host,header,to,use,in,stomp,connect,frames,when,this,property,is,configured,a,host,header,will,be,added,to,every,stomp,frame,sent,to,the,stomp,broker,this,may,be,useful,for,example,in,a,cloud,environment,where,the,actual,host,to,which,the,tcp,connection,is,established,is,different,from,the,host,providing,the,cloud,based,stomp,service,p,by,default,this,property,is,not,set;public,stomp,broker,relay,registration,set,virtual,host,string,virtual,host,this,virtual,host,virtual,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setVirtualHost(String virtualHost);1413848647;Set the value of the "host" header to use in STOMP CONNECT frames. When this_property is configured, a "host" header will be added to every STOMP frame sent to_the STOMP broker. This may be useful for example in a cloud environment where the_actual host to which the TCP connection is established is different from the host_providing the cloud-based STOMP service._<p>By default this property is not set.;public StompBrokerRelayRegistration setVirtualHost(String virtualHost) {_		this.virtualHost = virtualHost__		return this__	};set,the,value,of,the,host,header,to,use,in,stomp,connect,frames,when,this,property,is,configured,a,host,header,will,be,added,to,every,stomp,frame,sent,to,the,stomp,broker,this,may,be,useful,for,example,in,a,cloud,environment,where,the,actual,host,to,which,the,tcp,connection,is,established,is,different,from,the,host,providing,the,cloud,based,stomp,service,p,by,default,this,property,is,not,set;public,stomp,broker,relay,registration,set,virtual,host,string,virtual,host,this,virtual,host,virtual,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setVirtualHost(String virtualHost);1431458952;Set the value of the "host" header to use in STOMP CONNECT frames. When this_property is configured, a "host" header will be added to every STOMP frame sent to_the STOMP broker. This may be useful for example in a cloud environment where the_actual host to which the TCP connection is established is different from the host_providing the cloud-based STOMP service._<p>By default this property is not set.;public StompBrokerRelayRegistration setVirtualHost(String virtualHost) {_		this.virtualHost = virtualHost__		return this__	};set,the,value,of,the,host,header,to,use,in,stomp,connect,frames,when,this,property,is,configured,a,host,header,will,be,added,to,every,stomp,frame,sent,to,the,stomp,broker,this,may,be,useful,for,example,in,a,cloud,environment,where,the,actual,host,to,which,the,tcp,connection,is,established,is,different,from,the,host,providing,the,cloud,based,stomp,service,p,by,default,this,property,is,not,set;public,stomp,broker,relay,registration,set,virtual,host,string,virtual,host,this,virtual,host,virtual,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setVirtualHost(String virtualHost);1498780456;Set the value of the "host" header to use in STOMP CONNECT frames. When this_property is configured, a "host" header will be added to every STOMP frame sent to_the STOMP broker. This may be useful for example in a cloud environment where the_actual host to which the TCP connection is established is different from the host_providing the cloud-based STOMP service._<p>By default this property is not set.;public StompBrokerRelayRegistration setVirtualHost(String virtualHost) {_		this.virtualHost = virtualHost__		return this__	};set,the,value,of,the,host,header,to,use,in,stomp,connect,frames,when,this,property,is,configured,a,host,header,will,be,added,to,every,stomp,frame,sent,to,the,stomp,broker,this,may,be,useful,for,example,in,a,cloud,environment,where,the,actual,host,to,which,the,tcp,connection,is,established,is,different,from,the,host,providing,the,cloud,based,stomp,service,p,by,default,this,property,is,not,set;public,stomp,broker,relay,registration,set,virtual,host,string,virtual,host,this,virtual,host,virtual,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setVirtualHost(String virtualHost);1521562905;Set the value of the "host" header to use in STOMP CONNECT frames. When this_property is configured, a "host" header will be added to every STOMP frame sent to_the STOMP broker. This may be useful for example in a cloud environment where the_actual host to which the TCP connection is established is different from the host_providing the cloud-based STOMP service._<p>By default this property is not set.;public StompBrokerRelayRegistration setVirtualHost(String virtualHost) {_		this.virtualHost = virtualHost__		return this__	};set,the,value,of,the,host,header,to,use,in,stomp,connect,frames,when,this,property,is,configured,a,host,header,will,be,added,to,every,stomp,frame,sent,to,the,stomp,broker,this,may,be,useful,for,example,in,a,cloud,environment,where,the,actual,host,to,which,the,tcp,connection,is,established,is,different,from,the,host,providing,the,cloud,based,stomp,service,p,by,default,this,property,is,not,set;public,stomp,broker,relay,registration,set,virtual,host,string,virtual,host,this,virtual,host,virtual,host,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setApplicationLogin(String login);1377656407;Set the login for a "system" TCP connection used to send messages to the STOMP_broker without having a client session (e.g. REST/HTTP request handling method).;public StompBrokerRelayRegistration setApplicationLogin(String login) {_		Assert.hasText(login, "applicationLogin must not be empty")__		this.applicationLogin = login__		return this__	};set,the,login,for,a,system,tcp,connection,used,to,send,messages,to,the,stomp,broker,without,having,a,client,session,e,g,rest,http,request,handling,method;public,stomp,broker,relay,registration,set,application,login,string,login,assert,has,text,login,application,login,must,not,be,empty,this,application,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setApplicationLogin(String login);1378168614;Set the login for a "system" TCP connection used to send messages to the STOMP_broker without having a client session (e.g. REST/HTTP request handling method).;public StompBrokerRelayRegistration setApplicationLogin(String login) {_		Assert.hasText(login, "applicationLogin must not be empty")__		this.applicationLogin = login__		return this__	};set,the,login,for,a,system,tcp,connection,used,to,send,messages,to,the,stomp,broker,without,having,a,client,session,e,g,rest,http,request,handling,method;public,stomp,broker,relay,registration,set,application,login,string,login,assert,has,text,login,application,login,must,not,be,empty,this,application,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setApplicationLogin(String login);1380745783;Set the login for the "system" relay session used to send messages to the STOMP_broker without having a client session (e.g. REST/HTTP request handling method).;public StompBrokerRelayRegistration setApplicationLogin(String login) {_		Assert.hasText(login, "applicationLogin must not be empty")__		this.applicationLogin = login__		return this__	};set,the,login,for,the,system,relay,session,used,to,send,messages,to,the,stomp,broker,without,having,a,client,session,e,g,rest,http,request,handling,method;public,stomp,broker,relay,registration,set,application,login,string,login,assert,has,text,login,application,login,must,not,be,empty,this,application,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setApplicationLogin(String login);1385258957;Set the login for the "system" relay session used to send messages to the STOMP_broker without having a client session (e.g. REST/HTTP request handling method).;public StompBrokerRelayRegistration setApplicationLogin(String login) {_		Assert.hasText(login, "applicationLogin must not be empty")__		this.applicationLogin = login__		return this__	};set,the,login,for,the,system,relay,session,used,to,send,messages,to,the,stomp,broker,without,having,a,client,session,e,g,rest,http,request,handling,method;public,stomp,broker,relay,registration,set,application,login,string,login,assert,has,text,login,application,login,must,not,be,empty,this,application,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setApplicationLogin(String login);1385507478;Set the login for the "system" relay session used to send messages to the STOMP_broker without having a client session (e.g. REST/HTTP request handling method).;public StompBrokerRelayRegistration setApplicationLogin(String login) {_		Assert.hasText(login, "applicationLogin must not be empty")__		this.applicationLogin = login__		return this__	};set,the,login,for,the,system,relay,session,used,to,send,messages,to,the,stomp,broker,without,having,a,client,session,e,g,rest,http,request,handling,method;public,stomp,broker,relay,registration,set,application,login,string,login,assert,has,text,login,application,login,must,not,be,empty,this,application,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setApplicationLogin(String login);1385507683;Set the login for the "system" relay session used to send messages to the STOMP_broker without having a client session (e.g. REST/HTTP request handling method).;public StompBrokerRelayRegistration setApplicationLogin(String login) {_		Assert.hasText(login, "applicationLogin must not be empty")__		this.applicationLogin = login__		return this__	};set,the,login,for,the,system,relay,session,used,to,send,messages,to,the,stomp,broker,without,having,a,client,session,e,g,rest,http,request,handling,method;public,stomp,broker,relay,registration,set,application,login,string,login,assert,has,text,login,application,login,must,not,be,empty,this,application,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setApplicationLogin(String login);1386004713;Set the login for the "system" relay session used to send messages to the STOMP_broker without having a client session (e.g. REST/HTTP request handling method).;public StompBrokerRelayRegistration setApplicationLogin(String login) {_		Assert.hasText(login, "applicationLogin must not be empty")__		this.applicationLogin = login__		return this__	};set,the,login,for,the,system,relay,session,used,to,send,messages,to,the,stomp,broker,without,having,a,client,session,e,g,rest,http,request,handling,method;public,stomp,broker,relay,registration,set,application,login,string,login,assert,has,text,login,application,login,must,not,be,empty,this,application,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setUserRegistryBroadcast(String destination);1431458952;Set a destination to broadcast the content of the local user registry to_and to listen for such broadcasts from other servers. In a multi-application_server scenarios this allows each server's user registry to be aware of_users connected to other servers._<p>By default this is not set._@param destination the destination for broadcasting user registry details,_e.g. "/topic/simp-user-registry".;public StompBrokerRelayRegistration setUserRegistryBroadcast(String destination) {_		this.userRegistryBroadcast = destination__		return this__	};set,a,destination,to,broadcast,the,content,of,the,local,user,registry,to,and,to,listen,for,such,broadcasts,from,other,servers,in,a,multi,application,server,scenarios,this,allows,each,server,s,user,registry,to,be,aware,of,users,connected,to,other,servers,p,by,default,this,is,not,set,param,destination,the,destination,for,broadcasting,user,registry,details,e,g,topic,simp,user,registry;public,stomp,broker,relay,registration,set,user,registry,broadcast,string,destination,this,user,registry,broadcast,destination,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setUserRegistryBroadcast(String destination);1498780456;Set a destination to broadcast the content of the local user registry to_and to listen for such broadcasts from other servers. In a multi-application_server scenarios this allows each server's user registry to be aware of_users connected to other servers._<p>By default this is not set._@param destination the destination for broadcasting user registry details,_e.g. "/topic/simp-user-registry".;public StompBrokerRelayRegistration setUserRegistryBroadcast(String destination) {_		this.userRegistryBroadcast = destination__		return this__	};set,a,destination,to,broadcast,the,content,of,the,local,user,registry,to,and,to,listen,for,such,broadcasts,from,other,servers,in,a,multi,application,server,scenarios,this,allows,each,server,s,user,registry,to,be,aware,of,users,connected,to,other,servers,p,by,default,this,is,not,set,param,destination,the,destination,for,broadcasting,user,registry,details,e,g,topic,simp,user,registry;public,stomp,broker,relay,registration,set,user,registry,broadcast,string,destination,this,user,registry,broadcast,destination,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setUserRegistryBroadcast(String destination);1521562905;Set a destination to broadcast the content of the local user registry to_and to listen for such broadcasts from other servers. In a multi-application_server scenarios this allows each server's user registry to be aware of_users connected to other servers._<p>By default this is not set._@param destination the destination for broadcasting user registry details,_e.g. "/topic/simp-user-registry".;public StompBrokerRelayRegistration setUserRegistryBroadcast(String destination) {_		this.userRegistryBroadcast = destination__		return this__	};set,a,destination,to,broadcast,the,content,of,the,local,user,registry,to,and,to,listen,for,such,broadcasts,from,other,servers,in,a,multi,application,server,scenarios,this,allows,each,server,s,user,registry,to,be,aware,of,users,connected,to,other,servers,p,by,default,this,is,not,set,param,destination,the,destination,for,broadcasting,user,registry,details,e,g,topic,simp,user,registry;public,stomp,broker,relay,registration,set,user,registry,broadcast,string,destination,this,user,registry,broadcast,destination,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setClientLogin(String login);1387852827;Set the login to use when creating connections to the STOMP broker on_behalf of connected clients._<p>_By default this is set to "guest".;public StompBrokerRelayRegistration setClientLogin(String login) {_		Assert.hasText(login, "clientLogin must not be empty")__		this.clientLogin = login__		return this__	};set,the,login,to,use,when,creating,connections,to,the,stomp,broker,on,behalf,of,connected,clients,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,client,login,string,login,assert,has,text,login,client,login,must,not,be,empty,this,client,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setClientLogin(String login);1392645065;Set the login to use when creating connections to the STOMP broker on_behalf of connected clients._<p>_By default this is set to "guest".;public StompBrokerRelayRegistration setClientLogin(String login) {_		Assert.hasText(login, "clientLogin must not be empty")__		this.clientLogin = login__		return this__	};set,the,login,to,use,when,creating,connections,to,the,stomp,broker,on,behalf,of,connected,clients,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,client,login,string,login,assert,has,text,login,client,login,must,not,be,empty,this,client,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setClientLogin(String login);1405696918;Set the login to use when creating connections to the STOMP broker on_behalf of connected clients._<p>_By default this is set to "guest".;public StompBrokerRelayRegistration setClientLogin(String login) {_		Assert.hasText(login, "clientLogin must not be empty")__		this.clientLogin = login__		return this__	};set,the,login,to,use,when,creating,connections,to,the,stomp,broker,on,behalf,of,connected,clients,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,client,login,string,login,assert,has,text,login,client,login,must,not,be,empty,this,client,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setClientLogin(String login);1408751872;Set the login to use when creating connections to the STOMP broker on_behalf of connected clients._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setClientLogin(String login) {_		Assert.hasText(login, "clientLogin must not be empty")__		this.clientLogin = login__		return this__	};set,the,login,to,use,when,creating,connections,to,the,stomp,broker,on,behalf,of,connected,clients,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,client,login,string,login,assert,has,text,login,client,login,must,not,be,empty,this,client,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setClientLogin(String login);1413848647;Set the login to use when creating connections to the STOMP broker on_behalf of connected clients._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setClientLogin(String login) {_		Assert.hasText(login, "clientLogin must not be empty")__		this.clientLogin = login__		return this__	};set,the,login,to,use,when,creating,connections,to,the,stomp,broker,on,behalf,of,connected,clients,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,client,login,string,login,assert,has,text,login,client,login,must,not,be,empty,this,client,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setClientLogin(String login);1431458952;Set the login to use when creating connections to the STOMP broker on_behalf of connected clients._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setClientLogin(String login) {_		Assert.hasText(login, "clientLogin must not be empty")__		this.clientLogin = login__		return this__	};set,the,login,to,use,when,creating,connections,to,the,stomp,broker,on,behalf,of,connected,clients,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,client,login,string,login,assert,has,text,login,client,login,must,not,be,empty,this,client,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setClientLogin(String login);1498780456;Set the login to use when creating connections to the STOMP broker on_behalf of connected clients._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setClientLogin(String login) {_		Assert.hasText(login, "clientLogin must not be empty")__		this.clientLogin = login__		return this__	};set,the,login,to,use,when,creating,connections,to,the,stomp,broker,on,behalf,of,connected,clients,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,client,login,string,login,assert,has,text,login,client,login,must,not,be,empty,this,client,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setClientLogin(String login);1521562905;Set the login to use when creating connections to the STOMP broker on_behalf of connected clients._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setClientLogin(String login) {_		Assert.hasText(login, "clientLogin must not be empty")__		this.clientLogin = login__		return this__	};set,the,login,to,use,when,creating,connections,to,the,stomp,broker,on,behalf,of,connected,clients,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,client,login,string,login,assert,has,text,login,client,login,must,not,be,empty,this,client,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup);1378168614;Configure whether the {@link StompBrokerRelayMessageHandler} should start_automatically when the Spring ApplicationContext is refreshed._<p>_The default setting is {@code true}.;public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__		return this__	};configure,whether,the,link,stomp,broker,relay,message,handler,should,start,automatically,when,the,spring,application,context,is,refreshed,p,the,default,setting,is,code,true;public,stomp,broker,relay,registration,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup);1380745783;Configure whether the {@link StompBrokerRelayMessageHandler} should start_automatically when the Spring ApplicationContext is refreshed._<p>_The default setting is {@code true}.;public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__		return this__	};configure,whether,the,link,stomp,broker,relay,message,handler,should,start,automatically,when,the,spring,application,context,is,refreshed,p,the,default,setting,is,code,true;public,stomp,broker,relay,registration,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup);1385258957;Configure whether the {@link StompBrokerRelayMessageHandler} should start_automatically when the Spring ApplicationContext is refreshed._<p>_The default setting is {@code true}.;public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__		return this__	};configure,whether,the,link,stomp,broker,relay,message,handler,should,start,automatically,when,the,spring,application,context,is,refreshed,p,the,default,setting,is,code,true;public,stomp,broker,relay,registration,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup);1385507478;Configure whether the {@link StompBrokerRelayMessageHandler} should start_automatically when the Spring ApplicationContext is refreshed._<p>The default setting is {@code true}.;public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__		return this__	};configure,whether,the,link,stomp,broker,relay,message,handler,should,start,automatically,when,the,spring,application,context,is,refreshed,p,the,default,setting,is,code,true;public,stomp,broker,relay,registration,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup);1385507683;Configure whether the {@link StompBrokerRelayMessageHandler} should start_automatically when the Spring ApplicationContext is refreshed._<p>The default setting is {@code true}.;public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__		return this__	};configure,whether,the,link,stomp,broker,relay,message,handler,should,start,automatically,when,the,spring,application,context,is,refreshed,p,the,default,setting,is,code,true;public,stomp,broker,relay,registration,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup);1386004713;Configure whether the {@link StompBrokerRelayMessageHandler} should start_automatically when the Spring ApplicationContext is refreshed._<p>The default setting is {@code true}.;public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__		return this__	};configure,whether,the,link,stomp,broker,relay,message,handler,should,start,automatically,when,the,spring,application,context,is,refreshed,p,the,default,setting,is,code,true;public,stomp,broker,relay,registration,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup);1387852827;Configure whether the {@link StompBrokerRelayMessageHandler} should start_automatically when the Spring ApplicationContext is refreshed._<p>The default setting is {@code true}.;public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__		return this__	};configure,whether,the,link,stomp,broker,relay,message,handler,should,start,automatically,when,the,spring,application,context,is,refreshed,p,the,default,setting,is,code,true;public,stomp,broker,relay,registration,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup);1392645065;Configure whether the {@link StompBrokerRelayMessageHandler} should start_automatically when the Spring ApplicationContext is refreshed._<p>The default setting is {@code true}.;public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__		return this__	};configure,whether,the,link,stomp,broker,relay,message,handler,should,start,automatically,when,the,spring,application,context,is,refreshed,p,the,default,setting,is,code,true;public,stomp,broker,relay,registration,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup);1405696918;Configure whether the {@link StompBrokerRelayMessageHandler} should start_automatically when the Spring ApplicationContext is refreshed._<p>The default setting is {@code true}.;public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__		return this__	};configure,whether,the,link,stomp,broker,relay,message,handler,should,start,automatically,when,the,spring,application,context,is,refreshed,p,the,default,setting,is,code,true;public,stomp,broker,relay,registration,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup);1408751872;Configure whether the {@link StompBrokerRelayMessageHandler} should start_automatically when the Spring ApplicationContext is refreshed._<p>The default setting is {@code true}.;public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__		return this__	};configure,whether,the,link,stomp,broker,relay,message,handler,should,start,automatically,when,the,spring,application,context,is,refreshed,p,the,default,setting,is,code,true;public,stomp,broker,relay,registration,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup);1413848647;Configure whether the {@link StompBrokerRelayMessageHandler} should start_automatically when the Spring ApplicationContext is refreshed._<p>The default setting is {@code true}.;public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__		return this__	};configure,whether,the,link,stomp,broker,relay,message,handler,should,start,automatically,when,the,spring,application,context,is,refreshed,p,the,default,setting,is,code,true;public,stomp,broker,relay,registration,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup);1431458952;Configure whether the {@link StompBrokerRelayMessageHandler} should start_automatically when the Spring ApplicationContext is refreshed._<p>The default setting is {@code true}.;public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__		return this__	};configure,whether,the,link,stomp,broker,relay,message,handler,should,start,automatically,when,the,spring,application,context,is,refreshed,p,the,default,setting,is,code,true;public,stomp,broker,relay,registration,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup);1498780456;Configure whether the {@link StompBrokerRelayMessageHandler} should start_automatically when the Spring ApplicationContext is refreshed._<p>The default setting is {@code true}.;public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__		return this__	};configure,whether,the,link,stomp,broker,relay,message,handler,should,start,automatically,when,the,spring,application,context,is,refreshed,p,the,default,setting,is,code,true;public,stomp,broker,relay,registration,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup);1521562905;Configure whether the {@link StompBrokerRelayMessageHandler} should start_automatically when the Spring ApplicationContext is refreshed._<p>The default setting is {@code true}.;public StompBrokerRelayRegistration setAutoStartup(boolean autoStartup) {_		this.autoStartup = autoStartup__		return this__	};configure,whether,the,link,stomp,broker,relay,message,handler,should,start,automatically,when,the,spring,application,context,is,refreshed,p,the,default,setting,is,code,true;public,stomp,broker,relay,registration,set,auto,startup,boolean,auto,startup,this,auto,startup,auto,startup,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setClientPasscode(String passcode);1387852827;Set the passcode to use when creating connections to the STOMP broker on_behalf of connected clients._<p>_By default this is set to "guest".;public StompBrokerRelayRegistration setClientPasscode(String passcode) {_		Assert.hasText(passcode, "clientPasscode must not be empty")__		this.clientPasscode = passcode__		return this__	};set,the,passcode,to,use,when,creating,connections,to,the,stomp,broker,on,behalf,of,connected,clients,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,client,passcode,string,passcode,assert,has,text,passcode,client,passcode,must,not,be,empty,this,client,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setClientPasscode(String passcode);1392645065;Set the passcode to use when creating connections to the STOMP broker on_behalf of connected clients._<p>_By default this is set to "guest".;public StompBrokerRelayRegistration setClientPasscode(String passcode) {_		Assert.hasText(passcode, "clientPasscode must not be empty")__		this.clientPasscode = passcode__		return this__	};set,the,passcode,to,use,when,creating,connections,to,the,stomp,broker,on,behalf,of,connected,clients,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,client,passcode,string,passcode,assert,has,text,passcode,client,passcode,must,not,be,empty,this,client,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setClientPasscode(String passcode);1405696918;Set the passcode to use when creating connections to the STOMP broker on_behalf of connected clients._<p>_By default this is set to "guest".;public StompBrokerRelayRegistration setClientPasscode(String passcode) {_		Assert.hasText(passcode, "clientPasscode must not be empty")__		this.clientPasscode = passcode__		return this__	};set,the,passcode,to,use,when,creating,connections,to,the,stomp,broker,on,behalf,of,connected,clients,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,client,passcode,string,passcode,assert,has,text,passcode,client,passcode,must,not,be,empty,this,client,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setClientPasscode(String passcode);1408751872;Set the passcode to use when creating connections to the STOMP broker on_behalf of connected clients._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setClientPasscode(String passcode) {_		Assert.hasText(passcode, "clientPasscode must not be empty")__		this.clientPasscode = passcode__		return this__	};set,the,passcode,to,use,when,creating,connections,to,the,stomp,broker,on,behalf,of,connected,clients,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,client,passcode,string,passcode,assert,has,text,passcode,client,passcode,must,not,be,empty,this,client,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setClientPasscode(String passcode);1413848647;Set the passcode to use when creating connections to the STOMP broker on_behalf of connected clients._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setClientPasscode(String passcode) {_		Assert.hasText(passcode, "clientPasscode must not be empty")__		this.clientPasscode = passcode__		return this__	};set,the,passcode,to,use,when,creating,connections,to,the,stomp,broker,on,behalf,of,connected,clients,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,client,passcode,string,passcode,assert,has,text,passcode,client,passcode,must,not,be,empty,this,client,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setClientPasscode(String passcode);1431458952;Set the passcode to use when creating connections to the STOMP broker on_behalf of connected clients._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setClientPasscode(String passcode) {_		Assert.hasText(passcode, "clientPasscode must not be empty")__		this.clientPasscode = passcode__		return this__	};set,the,passcode,to,use,when,creating,connections,to,the,stomp,broker,on,behalf,of,connected,clients,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,client,passcode,string,passcode,assert,has,text,passcode,client,passcode,must,not,be,empty,this,client,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setClientPasscode(String passcode);1498780456;Set the passcode to use when creating connections to the STOMP broker on_behalf of connected clients._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setClientPasscode(String passcode) {_		Assert.hasText(passcode, "clientPasscode must not be empty")__		this.clientPasscode = passcode__		return this__	};set,the,passcode,to,use,when,creating,connections,to,the,stomp,broker,on,behalf,of,connected,clients,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,client,passcode,string,passcode,assert,has,text,passcode,client,passcode,must,not,be,empty,this,client,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setClientPasscode(String passcode);1521562905;Set the passcode to use when creating connections to the STOMP broker on_behalf of connected clients._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setClientPasscode(String passcode) {_		Assert.hasText(passcode, "clientPasscode must not be empty")__		this.clientPasscode = passcode__		return this__	};set,the,passcode,to,use,when,creating,connections,to,the,stomp,broker,on,behalf,of,connected,clients,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,client,passcode,string,passcode,assert,has,text,passcode,client,passcode,must,not,be,empty,this,client,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemLogin(String login);1387852827;Set the login for the shared "system" connection used to send messages to_the STOMP broker from within the application, i.e. messages not associated_with a specific client session (e.g. REST/HTTP request handling method)._<p>_By default this is set to "guest".;public StompBrokerRelayRegistration setSystemLogin(String login) {_		Assert.hasText(login, "systemLogin must not be empty")__		this.systemLogin = login__		return this__	};set,the,login,for,the,shared,system,connection,used,to,send,messages,to,the,stomp,broker,from,within,the,application,i,e,messages,not,associated,with,a,specific,client,session,e,g,rest,http,request,handling,method,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,system,login,string,login,assert,has,text,login,system,login,must,not,be,empty,this,system,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemLogin(String login);1392645065;Set the login for the shared "system" connection used to send messages to_the STOMP broker from within the application, i.e. messages not associated_with a specific client session (e.g. REST/HTTP request handling method)._<p>_By default this is set to "guest".;public StompBrokerRelayRegistration setSystemLogin(String login) {_		Assert.hasText(login, "systemLogin must not be empty")__		this.systemLogin = login__		return this__	};set,the,login,for,the,shared,system,connection,used,to,send,messages,to,the,stomp,broker,from,within,the,application,i,e,messages,not,associated,with,a,specific,client,session,e,g,rest,http,request,handling,method,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,system,login,string,login,assert,has,text,login,system,login,must,not,be,empty,this,system,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemLogin(String login);1405696918;Set the login for the shared "system" connection used to send messages to_the STOMP broker from within the application, i.e. messages not associated_with a specific client session (e.g. REST/HTTP request handling method)._<p>_By default this is set to "guest".;public StompBrokerRelayRegistration setSystemLogin(String login) {_		Assert.hasText(login, "systemLogin must not be empty")__		this.systemLogin = login__		return this__	};set,the,login,for,the,shared,system,connection,used,to,send,messages,to,the,stomp,broker,from,within,the,application,i,e,messages,not,associated,with,a,specific,client,session,e,g,rest,http,request,handling,method,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,system,login,string,login,assert,has,text,login,system,login,must,not,be,empty,this,system,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemLogin(String login);1408751872;Set the login for the shared "system" connection used to send messages to_the STOMP broker from within the application, i.e. messages not associated_with a specific client session (e.g. REST/HTTP request handling method)._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setSystemLogin(String login) {_		Assert.hasText(login, "systemLogin must not be empty")__		this.systemLogin = login__		return this__	};set,the,login,for,the,shared,system,connection,used,to,send,messages,to,the,stomp,broker,from,within,the,application,i,e,messages,not,associated,with,a,specific,client,session,e,g,rest,http,request,handling,method,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,system,login,string,login,assert,has,text,login,system,login,must,not,be,empty,this,system,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemLogin(String login);1413848647;Set the login for the shared "system" connection used to send messages to_the STOMP broker from within the application, i.e. messages not associated_with a specific client session (e.g. REST/HTTP request handling method)._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setSystemLogin(String login) {_		Assert.hasText(login, "systemLogin must not be empty")__		this.systemLogin = login__		return this__	};set,the,login,for,the,shared,system,connection,used,to,send,messages,to,the,stomp,broker,from,within,the,application,i,e,messages,not,associated,with,a,specific,client,session,e,g,rest,http,request,handling,method,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,system,login,string,login,assert,has,text,login,system,login,must,not,be,empty,this,system,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemLogin(String login);1431458952;Set the login for the shared "system" connection used to send messages to_the STOMP broker from within the application, i.e. messages not associated_with a specific client session (e.g. REST/HTTP request handling method)._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setSystemLogin(String login) {_		Assert.hasText(login, "systemLogin must not be empty")__		this.systemLogin = login__		return this__	};set,the,login,for,the,shared,system,connection,used,to,send,messages,to,the,stomp,broker,from,within,the,application,i,e,messages,not,associated,with,a,specific,client,session,e,g,rest,http,request,handling,method,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,system,login,string,login,assert,has,text,login,system,login,must,not,be,empty,this,system,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemLogin(String login);1498780456;Set the login for the shared "system" connection used to send messages to_the STOMP broker from within the application, i.e. messages not associated_with a specific client session (e.g. REST/HTTP request handling method)._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setSystemLogin(String login) {_		Assert.hasText(login, "systemLogin must not be empty")__		this.systemLogin = login__		return this__	};set,the,login,for,the,shared,system,connection,used,to,send,messages,to,the,stomp,broker,from,within,the,application,i,e,messages,not,associated,with,a,specific,client,session,e,g,rest,http,request,handling,method,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,system,login,string,login,assert,has,text,login,system,login,must,not,be,empty,this,system,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemLogin(String login);1521562905;Set the login for the shared "system" connection used to send messages to_the STOMP broker from within the application, i.e. messages not associated_with a specific client session (e.g. REST/HTTP request handling method)._<p>By default this is set to "guest".;public StompBrokerRelayRegistration setSystemLogin(String login) {_		Assert.hasText(login, "systemLogin must not be empty")__		this.systemLogin = login__		return this__	};set,the,login,for,the,shared,system,connection,used,to,send,messages,to,the,stomp,broker,from,within,the,application,i,e,messages,not,associated,with,a,specific,client,session,e,g,rest,http,request,handling,method,p,by,default,this,is,set,to,guest;public,stomp,broker,relay,registration,set,system,login,string,login,assert,has,text,login,system,login,must,not,be,empty,this,system,login,login,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setApplicationPasscode(String passcode);1377656407;Set the passcode for a "system" TCP connection used to send messages to the STOMP_broker without having a client session (e.g. REST/HTTP request handling method).;public StompBrokerRelayRegistration setApplicationPasscode(String passcode) {_		Assert.hasText(passcode, "applicationPasscode must not be empty")__		this.applicationPasscode = passcode__		return this__	};set,the,passcode,for,a,system,tcp,connection,used,to,send,messages,to,the,stomp,broker,without,having,a,client,session,e,g,rest,http,request,handling,method;public,stomp,broker,relay,registration,set,application,passcode,string,passcode,assert,has,text,passcode,application,passcode,must,not,be,empty,this,application,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setApplicationPasscode(String passcode);1378168614;Set the passcode for a "system" TCP connection used to send messages to the STOMP_broker without having a client session (e.g. REST/HTTP request handling method).;public StompBrokerRelayRegistration setApplicationPasscode(String passcode) {_		Assert.hasText(passcode, "applicationPasscode must not be empty")__		this.applicationPasscode = passcode__		return this__	};set,the,passcode,for,a,system,tcp,connection,used,to,send,messages,to,the,stomp,broker,without,having,a,client,session,e,g,rest,http,request,handling,method;public,stomp,broker,relay,registration,set,application,passcode,string,passcode,assert,has,text,passcode,application,passcode,must,not,be,empty,this,application,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setApplicationPasscode(String passcode);1380745783;Set the passcode for the "system" relay session used to send messages to the STOMP_broker without having a client session (e.g. REST/HTTP request handling method).;public StompBrokerRelayRegistration setApplicationPasscode(String passcode) {_		Assert.hasText(passcode, "applicationPasscode must not be empty")__		this.applicationPasscode = passcode__		return this__	};set,the,passcode,for,the,system,relay,session,used,to,send,messages,to,the,stomp,broker,without,having,a,client,session,e,g,rest,http,request,handling,method;public,stomp,broker,relay,registration,set,application,passcode,string,passcode,assert,has,text,passcode,application,passcode,must,not,be,empty,this,application,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setApplicationPasscode(String passcode);1385258957;Set the passcode for the "system" relay session used to send messages to the STOMP_broker without having a client session (e.g. REST/HTTP request handling method).;public StompBrokerRelayRegistration setApplicationPasscode(String passcode) {_		Assert.hasText(passcode, "applicationPasscode must not be empty")__		this.applicationPasscode = passcode__		return this__	};set,the,passcode,for,the,system,relay,session,used,to,send,messages,to,the,stomp,broker,without,having,a,client,session,e,g,rest,http,request,handling,method;public,stomp,broker,relay,registration,set,application,passcode,string,passcode,assert,has,text,passcode,application,passcode,must,not,be,empty,this,application,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setApplicationPasscode(String passcode);1385507478;Set the passcode for the "system" relay session used to send messages to the STOMP_broker without having a client session (e.g. REST/HTTP request handling method).;public StompBrokerRelayRegistration setApplicationPasscode(String passcode) {_		Assert.hasText(passcode, "applicationPasscode must not be empty")__		this.applicationPasscode = passcode__		return this__	};set,the,passcode,for,the,system,relay,session,used,to,send,messages,to,the,stomp,broker,without,having,a,client,session,e,g,rest,http,request,handling,method;public,stomp,broker,relay,registration,set,application,passcode,string,passcode,assert,has,text,passcode,application,passcode,must,not,be,empty,this,application,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setApplicationPasscode(String passcode);1385507683;Set the passcode for the "system" relay session used to send messages to the STOMP_broker without having a client session (e.g. REST/HTTP request handling method).;public StompBrokerRelayRegistration setApplicationPasscode(String passcode) {_		Assert.hasText(passcode, "applicationPasscode must not be empty")__		this.applicationPasscode = passcode__		return this__	};set,the,passcode,for,the,system,relay,session,used,to,send,messages,to,the,stomp,broker,without,having,a,client,session,e,g,rest,http,request,handling,method;public,stomp,broker,relay,registration,set,application,passcode,string,passcode,assert,has,text,passcode,application,passcode,must,not,be,empty,this,application,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setApplicationPasscode(String passcode);1386004713;Set the passcode for the "system" relay session used to send messages to the STOMP_broker without having a client session (e.g. REST/HTTP request handling method).;public StompBrokerRelayRegistration setApplicationPasscode(String passcode) {_		Assert.hasText(passcode, "applicationPasscode must not be empty")__		this.applicationPasscode = passcode__		return this__	};set,the,passcode,for,the,system,relay,session,used,to,send,messages,to,the,stomp,broker,without,having,a,client,session,e,g,rest,http,request,handling,method;public,stomp,broker,relay,registration,set,application,passcode,string,passcode,assert,has,text,passcode,application,passcode,must,not,be,empty,this,application,passcode,passcode,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval);1380745783;Set the maximum interval, in milliseconds, at which the "system" relay session_expects, in the absence of any other data, to receive a heartbeat from the STOMP_broker. A value of zero will configure the relay session to expect not to receive_heartbeats from the broker._<p>_The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval) {_		this.systemHeartbeatReceiveInterval = heartbeatReceiveInterval__		return this__	};set,the,maximum,interval,in,milliseconds,at,which,the,system,relay,session,expects,in,the,absence,of,any,other,data,to,receive,a,heartbeat,from,the,stomp,broker,a,value,of,zero,will,configure,the,relay,session,to,expect,not,to,receive,heartbeats,from,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,receive,interval,long,heartbeat,receive,interval,this,system,heartbeat,receive,interval,heartbeat,receive,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval);1385258957;Set the maximum interval, in milliseconds, at which the "system" relay session_expects, in the absence of any other data, to receive a heartbeat from the STOMP_broker. A value of zero will configure the relay session to expect not to receive_heartbeats from the broker._<p>_The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval) {_		this.systemHeartbeatReceiveInterval = heartbeatReceiveInterval__		return this__	};set,the,maximum,interval,in,milliseconds,at,which,the,system,relay,session,expects,in,the,absence,of,any,other,data,to,receive,a,heartbeat,from,the,stomp,broker,a,value,of,zero,will,configure,the,relay,session,to,expect,not,to,receive,heartbeats,from,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,receive,interval,long,heartbeat,receive,interval,this,system,heartbeat,receive,interval,heartbeat,receive,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval);1385507478;Set the maximum interval, in milliseconds, at which the "system" relay session_expects, in the absence of any other data, to receive a heartbeat from the STOMP_broker. A value of zero will configure the relay session to expect not to receive_heartbeats from the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval) {_		this.systemHeartbeatReceiveInterval = heartbeatReceiveInterval__		return this__	};set,the,maximum,interval,in,milliseconds,at,which,the,system,relay,session,expects,in,the,absence,of,any,other,data,to,receive,a,heartbeat,from,the,stomp,broker,a,value,of,zero,will,configure,the,relay,session,to,expect,not,to,receive,heartbeats,from,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,receive,interval,long,heartbeat,receive,interval,this,system,heartbeat,receive,interval,heartbeat,receive,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval);1385507683;Set the maximum interval, in milliseconds, at which the "system" relay session_expects, in the absence of any other data, to receive a heartbeat from the STOMP_broker. A value of zero will configure the relay session to expect not to receive_heartbeats from the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval) {_		this.systemHeartbeatReceiveInterval = heartbeatReceiveInterval__		return this__	};set,the,maximum,interval,in,milliseconds,at,which,the,system,relay,session,expects,in,the,absence,of,any,other,data,to,receive,a,heartbeat,from,the,stomp,broker,a,value,of,zero,will,configure,the,relay,session,to,expect,not,to,receive,heartbeats,from,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,receive,interval,long,heartbeat,receive,interval,this,system,heartbeat,receive,interval,heartbeat,receive,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval);1386004713;Set the maximum interval, in milliseconds, at which the "system" relay session_expects, in the absence of any other data, to receive a heartbeat from the STOMP_broker. A value of zero will configure the relay session to expect not to receive_heartbeats from the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval) {_		this.systemHeartbeatReceiveInterval = heartbeatReceiveInterval__		return this__	};set,the,maximum,interval,in,milliseconds,at,which,the,system,relay,session,expects,in,the,absence,of,any,other,data,to,receive,a,heartbeat,from,the,stomp,broker,a,value,of,zero,will,configure,the,relay,session,to,expect,not,to,receive,heartbeats,from,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,receive,interval,long,heartbeat,receive,interval,this,system,heartbeat,receive,interval,heartbeat,receive,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval);1387852827;Set the maximum interval, in milliseconds, at which the "system" relay session_expects, in the absence of any other data, to receive a heartbeat from the STOMP_broker. A value of zero will configure the relay session to expect not to receive_heartbeats from the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval) {_		this.systemHeartbeatReceiveInterval = heartbeatReceiveInterval__		return this__	};set,the,maximum,interval,in,milliseconds,at,which,the,system,relay,session,expects,in,the,absence,of,any,other,data,to,receive,a,heartbeat,from,the,stomp,broker,a,value,of,zero,will,configure,the,relay,session,to,expect,not,to,receive,heartbeats,from,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,receive,interval,long,heartbeat,receive,interval,this,system,heartbeat,receive,interval,heartbeat,receive,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval);1392645065;Set the maximum interval, in milliseconds, at which the "system" relay session_expects, in the absence of any other data, to receive a heartbeat from the STOMP_broker. A value of zero will configure the relay session to expect not to receive_heartbeats from the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval) {_		this.systemHeartbeatReceiveInterval = heartbeatReceiveInterval__		return this__	};set,the,maximum,interval,in,milliseconds,at,which,the,system,relay,session,expects,in,the,absence,of,any,other,data,to,receive,a,heartbeat,from,the,stomp,broker,a,value,of,zero,will,configure,the,relay,session,to,expect,not,to,receive,heartbeats,from,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,receive,interval,long,heartbeat,receive,interval,this,system,heartbeat,receive,interval,heartbeat,receive,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval);1405696918;Set the maximum interval, in milliseconds, at which the "system" relay session_expects, in the absence of any other data, to receive a heartbeat from the STOMP_broker. A value of zero will configure the relay session to expect not to receive_heartbeats from the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval) {_		this.systemHeartbeatReceiveInterval = heartbeatReceiveInterval__		return this__	};set,the,maximum,interval,in,milliseconds,at,which,the,system,relay,session,expects,in,the,absence,of,any,other,data,to,receive,a,heartbeat,from,the,stomp,broker,a,value,of,zero,will,configure,the,relay,session,to,expect,not,to,receive,heartbeats,from,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,receive,interval,long,heartbeat,receive,interval,this,system,heartbeat,receive,interval,heartbeat,receive,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval);1408751872;Set the maximum interval, in milliseconds, at which the "system" relay session_expects, in the absence of any other data, to receive a heartbeat from the STOMP_broker. A value of zero will configure the relay session to expect not to receive_heartbeats from the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval) {_		this.systemHeartbeatReceiveInterval = heartbeatReceiveInterval__		return this__	};set,the,maximum,interval,in,milliseconds,at,which,the,system,relay,session,expects,in,the,absence,of,any,other,data,to,receive,a,heartbeat,from,the,stomp,broker,a,value,of,zero,will,configure,the,relay,session,to,expect,not,to,receive,heartbeats,from,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,receive,interval,long,heartbeat,receive,interval,this,system,heartbeat,receive,interval,heartbeat,receive,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval);1413848647;Set the maximum interval, in milliseconds, at which the "system" relay session_expects, in the absence of any other data, to receive a heartbeat from the STOMP_broker. A value of zero will configure the relay session to expect not to receive_heartbeats from the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval) {_		this.systemHeartbeatReceiveInterval = heartbeatReceiveInterval__		return this__	};set,the,maximum,interval,in,milliseconds,at,which,the,system,relay,session,expects,in,the,absence,of,any,other,data,to,receive,a,heartbeat,from,the,stomp,broker,a,value,of,zero,will,configure,the,relay,session,to,expect,not,to,receive,heartbeats,from,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,receive,interval,long,heartbeat,receive,interval,this,system,heartbeat,receive,interval,heartbeat,receive,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval);1431458952;Set the maximum interval, in milliseconds, at which the "system" relay session_expects, in the absence of any other data, to receive a heartbeat from the STOMP_broker. A value of zero will configure the relay session to expect not to receive_heartbeats from the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval) {_		this.systemHeartbeatReceiveInterval = heartbeatReceiveInterval__		return this__	};set,the,maximum,interval,in,milliseconds,at,which,the,system,relay,session,expects,in,the,absence,of,any,other,data,to,receive,a,heartbeat,from,the,stomp,broker,a,value,of,zero,will,configure,the,relay,session,to,expect,not,to,receive,heartbeats,from,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,receive,interval,long,heartbeat,receive,interval,this,system,heartbeat,receive,interval,heartbeat,receive,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval);1498780456;Set the maximum interval, in milliseconds, at which the "system" relay session_expects, in the absence of any other data, to receive a heartbeat from the STOMP_broker. A value of zero will configure the relay session to expect not to receive_heartbeats from the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval) {_		this.systemHeartbeatReceiveInterval = heartbeatReceiveInterval__		return this__	};set,the,maximum,interval,in,milliseconds,at,which,the,system,relay,session,expects,in,the,absence,of,any,other,data,to,receive,a,heartbeat,from,the,stomp,broker,a,value,of,zero,will,configure,the,relay,session,to,expect,not,to,receive,heartbeats,from,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,receive,interval,long,heartbeat,receive,interval,this,system,heartbeat,receive,interval,heartbeat,receive,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval);1521562905;Set the maximum interval, in milliseconds, at which the "system" relay session_expects, in the absence of any other data, to receive a heartbeat from the STOMP_broker. A value of zero will configure the relay session to expect not to receive_heartbeats from the broker._<p>The default value is 10000.;public StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long heartbeatReceiveInterval) {_		this.systemHeartbeatReceiveInterval = heartbeatReceiveInterval__		return this__	};set,the,maximum,interval,in,milliseconds,at,which,the,system,relay,session,expects,in,the,absence,of,any,other,data,to,receive,a,heartbeat,from,the,stomp,broker,a,value,of,zero,will,configure,the,relay,session,to,expect,not,to,receive,heartbeats,from,the,broker,p,the,default,value,is,10000;public,stomp,broker,relay,registration,set,system,heartbeat,receive,interval,long,heartbeat,receive,interval,this,system,heartbeat,receive,interval,heartbeat,receive,interval,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setUserDestinationBroadcast(String destination);1431458952;Set a destination to broadcast messages to user destinations that remain_unresolved because the user appears not to be connected. In a_multi-application server scenario this gives other application servers_a chance to try._<p>By default this is not set._@param destination the destination to broadcast unresolved messages to,_e.g. "/topic/unresolved-user-destination";public StompBrokerRelayRegistration setUserDestinationBroadcast(String destination) {_		this.userDestinationBroadcast = destination__		return this__	};set,a,destination,to,broadcast,messages,to,user,destinations,that,remain,unresolved,because,the,user,appears,not,to,be,connected,in,a,multi,application,server,scenario,this,gives,other,application,servers,a,chance,to,try,p,by,default,this,is,not,set,param,destination,the,destination,to,broadcast,unresolved,messages,to,e,g,topic,unresolved,user,destination;public,stomp,broker,relay,registration,set,user,destination,broadcast,string,destination,this,user,destination,broadcast,destination,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setUserDestinationBroadcast(String destination);1498780456;Set a destination to broadcast messages to user destinations that remain_unresolved because the user appears not to be connected. In a_multi-application server scenario this gives other application servers_a chance to try._<p>By default this is not set._@param destination the destination to broadcast unresolved messages to,_e.g. "/topic/unresolved-user-destination";public StompBrokerRelayRegistration setUserDestinationBroadcast(String destination) {_		this.userDestinationBroadcast = destination__		return this__	};set,a,destination,to,broadcast,messages,to,user,destinations,that,remain,unresolved,because,the,user,appears,not,to,be,connected,in,a,multi,application,server,scenario,this,gives,other,application,servers,a,chance,to,try,p,by,default,this,is,not,set,param,destination,the,destination,to,broadcast,unresolved,messages,to,e,g,topic,unresolved,user,destination;public,stomp,broker,relay,registration,set,user,destination,broadcast,string,destination,this,user,destination,broadcast,destination,return,this
StompBrokerRelayRegistration -> public StompBrokerRelayRegistration setUserDestinationBroadcast(String destination);1521562905;Set a destination to broadcast messages to user destinations that remain_unresolved because the user appears not to be connected. In a_multi-application server scenario this gives other application servers_a chance to try._<p>By default this is not set._@param destination the destination to broadcast unresolved messages to,_e.g. "/topic/unresolved-user-destination";public StompBrokerRelayRegistration setUserDestinationBroadcast(String destination) {_		this.userDestinationBroadcast = destination__		return this__	};set,a,destination,to,broadcast,messages,to,user,destinations,that,remain,unresolved,because,the,user,appears,not,to,be,connected,in,a,multi,application,server,scenario,this,gives,other,application,servers,a,chance,to,try,p,by,default,this,is,not,set,param,destination,the,destination,to,broadcast,unresolved,messages,to,e,g,topic,unresolved,user,destination;public,stomp,broker,relay,registration,set,user,destination,broadcast,string,destination,this,user,destination,broadcast,destination,return,this
