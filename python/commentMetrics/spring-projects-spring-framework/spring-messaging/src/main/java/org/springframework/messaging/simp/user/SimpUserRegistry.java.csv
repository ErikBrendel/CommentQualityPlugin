commented;modifiers;parameterAmount;loc;comment;code
true;;1;2;/**  * Get the user for the given name.  * @param userName the name of the user to look up  * @return the user, or {@code null} if not connected  */ ;/**  * Get the user for the given name.  * @param userName the name of the user to look up  * @return the user, or {@code null} if not connected  */ @Nullable SimpUser getUser(String userName).
true;;0;1;/**  * Return a snapshot of all connected users.  * <p>The returned set is a copy and will not reflect further changes.  * @return the connected users, or an empty set if none  */ ;/**  * Return a snapshot of all connected users.  * <p>The returned set is a copy and will not reflect further changes.  * @return the connected users, or an empty set if none  */ Set<SimpUser> getUsers().
true;;0;1;/**  * Return the count of all connected users.  * @return the number of connected users  * @since 4.3.5  */ ;/**  * Return the count of all connected users.  * @return the number of connected users  * @since 4.3.5  */ int getUserCount().
true;;1;1;/**  * Find subscriptions with the given matcher.  * @param matcher the matcher to use  * @return a set of matching subscriptions, or an empty set if none  */ ;/**  * Find subscriptions with the given matcher.  * @param matcher the matcher to use  * @return a set of matching subscriptions, or an empty set if none  */ Set<SimpSubscription> findSubscriptions(SimpSubscriptionMatcher matcher).
