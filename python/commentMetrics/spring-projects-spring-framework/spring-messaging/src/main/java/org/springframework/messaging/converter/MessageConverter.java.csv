# id;timestamp;commentText;codeText;commentWords;codeWords
MessageConverter -> @Nullable 	Message<?> toMessage(Object payload, @Nullable MessageHeaders headers)_;1495868221;Create a {@link Message} whose payload is the result of converting the given_payload Object to serialized form. The optional {@link MessageHeaders} parameter_may contain a {@link MessageHeaders#CONTENT_TYPE} header to specify the target_media type for the conversion and it may contain additional headers to be added_to the message._<p>If the converter does not support the specified media type or cannot perform_the conversion, it should return {@code null}._@param payload the Object to convert_@param headers optional headers for the message (may be {@code null})_@return the new message, or {@code null} if the converter does not support the_Object type or the target media type;@Nullable_	Message<?> toMessage(Object payload, @Nullable MessageHeaders headers)_;create,a,link,message,whose,payload,is,the,result,of,converting,the,given,payload,object,to,serialized,form,the,optional,link,message,headers,parameter,may,contain,a,link,message,headers,header,to,specify,the,target,media,type,for,the,conversion,and,it,may,contain,additional,headers,to,be,added,to,the,message,p,if,the,converter,does,not,support,the,specified,media,type,or,cannot,perform,the,conversion,it,should,return,code,null,param,payload,the,object,to,convert,param,headers,optional,headers,for,the,message,may,be,code,null,return,the,new,message,or,code,null,if,the,converter,does,not,support,the,object,type,or,the,target,media,type;nullable,message,to,message,object,payload,nullable,message,headers,headers
MessageConverter -> @Nullable 	Message<?> toMessage(Object payload, @Nullable MessageHeaders headers)_;1496837955;Create a {@link Message} whose payload is the result of converting the given_payload Object to serialized form. The optional {@link MessageHeaders} parameter_may contain a {@link MessageHeaders#CONTENT_TYPE} header to specify the target_media type for the conversion and it may contain additional headers to be added_to the message._<p>If the converter does not support the specified media type or cannot perform_the conversion, it should return {@code null}._@param payload the Object to convert_@param headers optional headers for the message (may be {@code null})_@return the new message, or {@code null} if the converter does not support the_Object type or the target media type;@Nullable_	Message<?> toMessage(Object payload, @Nullable MessageHeaders headers)_;create,a,link,message,whose,payload,is,the,result,of,converting,the,given,payload,object,to,serialized,form,the,optional,link,message,headers,parameter,may,contain,a,link,message,headers,header,to,specify,the,target,media,type,for,the,conversion,and,it,may,contain,additional,headers,to,be,added,to,the,message,p,if,the,converter,does,not,support,the,specified,media,type,or,cannot,perform,the,conversion,it,should,return,code,null,param,payload,the,object,to,convert,param,headers,optional,headers,for,the,message,may,be,code,null,return,the,new,message,or,code,null,if,the,converter,does,not,support,the,object,type,or,the,target,media,type;nullable,message,to,message,object,payload,nullable,message,headers,headers
MessageConverter -> Message<?> toMessage(Object payload, MessageHeaders header)_;1386350678;Create a {@link Message} whose payload is the result of converting the given_payload Object to serialized form. The optional {@link MessageHeaders} parameter_may contain a {@link MessageHeaders#CONTENT_TYPE} header to specify the target_media type for the conversion and it may contain additional headers to be added to_the message._<p>If the converter does not support the specified media type or cannot perform the_conversion, it should return {@code null}._@param payload the Object to convert_@param header optional headers for the message, may be {@code null}_@return the new message or {@code null} if the converter does not support the_Object type or the target media type;Message<?> toMessage(Object payload, MessageHeaders header)_;create,a,link,message,whose,payload,is,the,result,of,converting,the,given,payload,object,to,serialized,form,the,optional,link,message,headers,parameter,may,contain,a,link,message,headers,header,to,specify,the,target,media,type,for,the,conversion,and,it,may,contain,additional,headers,to,be,added,to,the,message,p,if,the,converter,does,not,support,the,specified,media,type,or,cannot,perform,the,conversion,it,should,return,code,null,param,payload,the,object,to,convert,param,header,optional,headers,for,the,message,may,be,code,null,return,the,new,message,or,code,null,if,the,converter,does,not,support,the,object,type,or,the,target,media,type;message,to,message,object,payload,message,headers,header
MessageConverter -> Message<?> toMessage(Object payload, MessageHeaders header)_;1404937535;Create a {@link Message} whose payload is the result of converting the given_payload Object to serialized form. The optional {@link MessageHeaders} parameter_may contain a {@link MessageHeaders#CONTENT_TYPE} header to specify the target_media type for the conversion and it may contain additional headers to be added to_the message._<p>If the converter does not support the specified media type or cannot perform the_conversion, it should return {@code null}._@param payload the Object to convert_@param header optional headers for the message, may be {@code null}_@return the new message or {@code null} if the converter does not support the_Object type or the target media type;Message<?> toMessage(Object payload, MessageHeaders header)_;create,a,link,message,whose,payload,is,the,result,of,converting,the,given,payload,object,to,serialized,form,the,optional,link,message,headers,parameter,may,contain,a,link,message,headers,header,to,specify,the,target,media,type,for,the,conversion,and,it,may,contain,additional,headers,to,be,added,to,the,message,p,if,the,converter,does,not,support,the,specified,media,type,or,cannot,perform,the,conversion,it,should,return,code,null,param,payload,the,object,to,convert,param,header,optional,headers,for,the,message,may,be,code,null,return,the,new,message,or,code,null,if,the,converter,does,not,support,the,object,type,or,the,target,media,type;message,to,message,object,payload,message,headers,header
MessageConverter -> @Nullable 	Object fromMessage(Message<?> message, Class<?> targetClass)_;1495868221;Convert the payload of a {@link Message} from a serialized form to a typed Object_of the specified target class. The {@link MessageHeaders#CONTENT_TYPE} header_should indicate the MIME type to convert from._<p>If the converter does not support the specified media type or cannot perform_the conversion, it should return {@code null}._@param message the input message_@param targetClass the target class for the conversion_@return the result of the conversion, or {@code null} if the converter cannot_perform the conversion;@Nullable_	Object fromMessage(Message<?> message, Class<?> targetClass)_;convert,the,payload,of,a,link,message,from,a,serialized,form,to,a,typed,object,of,the,specified,target,class,the,link,message,headers,header,should,indicate,the,mime,type,to,convert,from,p,if,the,converter,does,not,support,the,specified,media,type,or,cannot,perform,the,conversion,it,should,return,code,null,param,message,the,input,message,param,target,class,the,target,class,for,the,conversion,return,the,result,of,the,conversion,or,code,null,if,the,converter,cannot,perform,the,conversion;nullable,object,from,message,message,message,class,target,class
MessageConverter -> @Nullable 	Object fromMessage(Message<?> message, Class<?> targetClass)_;1496837955;Convert the payload of a {@link Message} from a serialized form to a typed Object_of the specified target class. The {@link MessageHeaders#CONTENT_TYPE} header_should indicate the MIME type to convert from._<p>If the converter does not support the specified media type or cannot perform_the conversion, it should return {@code null}._@param message the input message_@param targetClass the target class for the conversion_@return the result of the conversion, or {@code null} if the converter cannot_perform the conversion;@Nullable_	Object fromMessage(Message<?> message, Class<?> targetClass)_;convert,the,payload,of,a,link,message,from,a,serialized,form,to,a,typed,object,of,the,specified,target,class,the,link,message,headers,header,should,indicate,the,mime,type,to,convert,from,p,if,the,converter,does,not,support,the,specified,media,type,or,cannot,perform,the,conversion,it,should,return,code,null,param,message,the,input,message,param,target,class,the,target,class,for,the,conversion,return,the,result,of,the,conversion,or,code,null,if,the,converter,cannot,perform,the,conversion;nullable,object,from,message,message,message,class,target,class
MessageConverter -> Object fromMessage(Message<?> message, Class<?> targetClass)_;1386350678;Convert the payload of a {@link Message} from serialized form to a typed Object of_the specified target class. The {@link MessageHeaders#CONTENT_TYPE} header should_indicate the MIME type to convert from._<p>If the converter does not support the specified media type or cannot perform the_conversion, it should return {@code null}._@param message the input message_@param targetClass the target class for the conversion_@return the result of the conversion or {@code null} if the converter cannot_perform the conversion;Object fromMessage(Message<?> message, Class<?> targetClass)_;convert,the,payload,of,a,link,message,from,serialized,form,to,a,typed,object,of,the,specified,target,class,the,link,message,headers,header,should,indicate,the,mime,type,to,convert,from,p,if,the,converter,does,not,support,the,specified,media,type,or,cannot,perform,the,conversion,it,should,return,code,null,param,message,the,input,message,param,target,class,the,target,class,for,the,conversion,return,the,result,of,the,conversion,or,code,null,if,the,converter,cannot,perform,the,conversion;object,from,message,message,message,class,target,class
MessageConverter -> Object fromMessage(Message<?> message, Class<?> targetClass)_;1404937535;Convert the payload of a {@link Message} from serialized form to a typed Object of_the specified target class. The {@link MessageHeaders#CONTENT_TYPE} header should_indicate the MIME type to convert from._<p>If the converter does not support the specified media type or cannot perform the_conversion, it should return {@code null}._@param message the input message_@param targetClass the target class for the conversion_@return the result of the conversion, or {@code null} if the converter cannot_perform the conversion;Object fromMessage(Message<?> message, Class<?> targetClass)_;convert,the,payload,of,a,link,message,from,serialized,form,to,a,typed,object,of,the,specified,target,class,the,link,message,headers,header,should,indicate,the,mime,type,to,convert,from,p,if,the,converter,does,not,support,the,specified,media,type,or,cannot,perform,the,conversion,it,should,return,code,null,param,message,the,input,message,param,target,class,the,target,class,for,the,conversion,return,the,result,of,the,conversion,or,code,null,if,the,converter,cannot,perform,the,conversion;object,from,message,message,message,class,target,class
MessageConverter -> Object fromMessage(Message<?> message, Class<?> targetClass)_;1437567612;Convert the payload of a {@link Message} from a serialized form to a typed Object_of the specified target class. The {@link MessageHeaders#CONTENT_TYPE} header_should indicate the MIME type to convert from._<p>If the converter does not support the specified media type or cannot perform_the conversion, it should return {@code null}._@param message the input message_@param targetClass the target class for the conversion_@return the result of the conversion, or {@code null} if the converter cannot_perform the conversion;Object fromMessage(Message<?> message, Class<?> targetClass)_;convert,the,payload,of,a,link,message,from,a,serialized,form,to,a,typed,object,of,the,specified,target,class,the,link,message,headers,header,should,indicate,the,mime,type,to,convert,from,p,if,the,converter,does,not,support,the,specified,media,type,or,cannot,perform,the,conversion,it,should,return,code,null,param,message,the,input,message,param,target,class,the,target,class,for,the,conversion,return,the,result,of,the,conversion,or,code,null,if,the,converter,cannot,perform,the,conversion;object,from,message,message,message,class,target,class
