# id;timestamp;commentText;codeText;commentWords;codeWords
StompSessionHandler -> void afterConnected(StompSession session, StompHeaders connectedHeaders)_;1426211309;Invoked when the session is ready to use, i.e. after the underlying_transport (TCP, WebSocket) is connected and a STOMP CONNECTED frame is_received from the broker._@param session the client STOMP session_@param connectedHeaders the STOMP CONNECTED frame headers;void afterConnected(StompSession session, StompHeaders connectedHeaders)_;invoked,when,the,session,is,ready,to,use,i,e,after,the,underlying,transport,tcp,web,socket,is,connected,and,a,stomp,connected,frame,is,received,from,the,broker,param,session,the,client,stomp,session,param,connected,headers,the,stomp,connected,frame,headers;void,after,connected,stomp,session,session,stomp,headers,connected,headers
StompSessionHandler -> void afterConnected(StompSession session, StompHeaders connectedHeaders)_;1437512314;Invoked when the session is ready to use, i.e. after the underlying_transport (TCP, WebSocket) is connected and a STOMP CONNECTED frame is_received from the broker._@param session the client STOMP session_@param connectedHeaders the STOMP CONNECTED frame headers;void afterConnected(StompSession session, StompHeaders connectedHeaders)_;invoked,when,the,session,is,ready,to,use,i,e,after,the,underlying,transport,tcp,web,socket,is,connected,and,a,stomp,connected,frame,is,received,from,the,broker,param,session,the,client,stomp,session,param,connected,headers,the,stomp,connected,frame,headers;void,after,connected,stomp,session,session,stomp,headers,connected,headers
StompSessionHandler -> void afterConnected(StompSession session, StompHeaders connectedHeaders)_;1496837955;Invoked when the session is ready to use, i.e. after the underlying_transport (TCP, WebSocket) is connected and a STOMP CONNECTED frame is_received from the broker._@param session the client STOMP session_@param connectedHeaders the STOMP CONNECTED frame headers;void afterConnected(StompSession session, StompHeaders connectedHeaders)_;invoked,when,the,session,is,ready,to,use,i,e,after,the,underlying,transport,tcp,web,socket,is,connected,and,a,stomp,connected,frame,is,received,from,the,broker,param,session,the,client,stomp,session,param,connected,headers,the,stomp,connected,frame,headers;void,after,connected,stomp,session,session,stomp,headers,connected,headers
StompSessionHandler -> void handleException(StompSession session, StompCommand command, StompHeaders headers, 			byte[] payload, Throwable exception)_;1426211309;Handle any exception arising while processing a STOMP frame such as a_failure to convert the payload or an unhandled exception in the_application {@code StompFrameHandler}._@param session the client STOMP session_@param command the STOMP command of the frame_@param headers the headers_@param payload the raw payload_@param exception the exception;void handleException(StompSession session, StompCommand command, StompHeaders headers,_			byte[] payload, Throwable exception)_;handle,any,exception,arising,while,processing,a,stomp,frame,such,as,a,failure,to,convert,the,payload,or,an,unhandled,exception,in,the,application,code,stomp,frame,handler,param,session,the,client,stomp,session,param,command,the,stomp,command,of,the,frame,param,headers,the,headers,param,payload,the,raw,payload,param,exception,the,exception;void,handle,exception,stomp,session,session,stomp,command,command,stomp,headers,headers,byte,payload,throwable,exception
StompSessionHandler -> void handleException(StompSession session, StompCommand command, StompHeaders headers, 			byte[] payload, Throwable exception)_;1437512314;Handle any exception arising while processing a STOMP frame such as a_failure to convert the payload or an unhandled exception in the_application {@code StompFrameHandler}._@param session the client STOMP session_@param command the STOMP command of the frame_@param headers the headers_@param payload the raw payload_@param exception the exception;void handleException(StompSession session, StompCommand command, StompHeaders headers,_			byte[] payload, Throwable exception)_;handle,any,exception,arising,while,processing,a,stomp,frame,such,as,a,failure,to,convert,the,payload,or,an,unhandled,exception,in,the,application,code,stomp,frame,handler,param,session,the,client,stomp,session,param,command,the,stomp,command,of,the,frame,param,headers,the,headers,param,payload,the,raw,payload,param,exception,the,exception;void,handle,exception,stomp,session,session,stomp,command,command,stomp,headers,headers,byte,payload,throwable,exception
StompSessionHandler -> void handleTransportError(StompSession session, Throwable exception)_;1426211309;Handle a low level transport error which could be an I/O error or a_failure to encode or decode a STOMP message._<p>Note that_{@link org.springframework.messaging.simp.stomp.ConnectionLostException_ConnectionLostException} will be passed into this method when the_connection is lost rather than closed normally via_{@link StompSession#disconnect()}._@param session the client STOMP session_@param exception the exception that occurred;void handleTransportError(StompSession session, Throwable exception)_;handle,a,low,level,transport,error,which,could,be,an,i,o,error,or,a,failure,to,encode,or,decode,a,stomp,message,p,note,that,link,org,springframework,messaging,simp,stomp,connection,lost,exception,connection,lost,exception,will,be,passed,into,this,method,when,the,connection,is,lost,rather,than,closed,normally,via,link,stomp,session,disconnect,param,session,the,client,stomp,session,param,exception,the,exception,that,occurred;void,handle,transport,error,stomp,session,session,throwable,exception
StompSessionHandler -> void handleTransportError(StompSession session, Throwable exception)_;1437512314;Handle a low level transport error which could be an I/O error or a_failure to encode or decode a STOMP message._<p>Note that_{@link org.springframework.messaging.simp.stomp.ConnectionLostException_ConnectionLostException} will be passed into this method when the_connection is lost rather than closed normally via_{@link StompSession#disconnect()}._@param session the client STOMP session_@param exception the exception that occurred;void handleTransportError(StompSession session, Throwable exception)_;handle,a,low,level,transport,error,which,could,be,an,i,o,error,or,a,failure,to,encode,or,decode,a,stomp,message,p,note,that,link,org,springframework,messaging,simp,stomp,connection,lost,exception,connection,lost,exception,will,be,passed,into,this,method,when,the,connection,is,lost,rather,than,closed,normally,via,link,stomp,session,disconnect,param,session,the,client,stomp,session,param,exception,the,exception,that,occurred;void,handle,transport,error,stomp,session,session,throwable,exception
StompSessionHandler -> void handleTransportError(StompSession session, Throwable exception)_;1496837955;Handle a low level transport error which could be an I/O error or a_failure to encode or decode a STOMP message._<p>Note that_{@link org.springframework.messaging.simp.stomp.ConnectionLostException_ConnectionLostException} will be passed into this method when the_connection is lost rather than closed normally via_{@link StompSession#disconnect()}._@param session the client STOMP session_@param exception the exception that occurred;void handleTransportError(StompSession session, Throwable exception)_;handle,a,low,level,transport,error,which,could,be,an,i,o,error,or,a,failure,to,encode,or,decode,a,stomp,message,p,note,that,link,org,springframework,messaging,simp,stomp,connection,lost,exception,connection,lost,exception,will,be,passed,into,this,method,when,the,connection,is,lost,rather,than,closed,normally,via,link,stomp,session,disconnect,param,session,the,client,stomp,session,param,exception,the,exception,that,occurred;void,handle,transport,error,stomp,session,session,throwable,exception
