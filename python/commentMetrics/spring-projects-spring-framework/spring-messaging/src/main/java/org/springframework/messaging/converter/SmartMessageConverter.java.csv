# id;timestamp;commentText;codeText;commentWords;codeWords
SmartMessageConverter -> @Nullable 	Message<?> toMessage(Object payload, @Nullable MessageHeaders headers, @Nullable Object conversionHint)_;1495868221;A variant of {@link #toMessage(Object, MessageHeaders)} which takes an extra_conversion context as an argument, allowing to take e.g. annotations_on a return type into account._@param payload the Object to convert_@param headers optional headers for the message (may be {@code null})_@param conversionHint an extra object passed to the {@link MessageConverter},_e.g. the associated {@code MethodParameter} (may be {@code null}}_@return the new message, or {@code null} if the converter does not support the_Object type or the target media type_@see #toMessage(Object, MessageHeaders);@Nullable_	Message<?> toMessage(Object payload, @Nullable MessageHeaders headers, @Nullable Object conversionHint)_;a,variant,of,link,to,message,object,message,headers,which,takes,an,extra,conversion,context,as,an,argument,allowing,to,take,e,g,annotations,on,a,return,type,into,account,param,payload,the,object,to,convert,param,headers,optional,headers,for,the,message,may,be,code,null,param,conversion,hint,an,extra,object,passed,to,the,link,message,converter,e,g,the,associated,code,method,parameter,may,be,code,null,return,the,new,message,or,code,null,if,the,converter,does,not,support,the,object,type,or,the,target,media,type,see,to,message,object,message,headers;nullable,message,to,message,object,payload,nullable,message,headers,headers,nullable,object,conversion,hint
SmartMessageConverter -> @Nullable 	Message<?> toMessage(Object payload, @Nullable MessageHeaders headers, @Nullable Object conversionHint)_;1496837955;A variant of {@link #toMessage(Object, MessageHeaders)} which takes an extra_conversion context as an argument, allowing to take e.g. annotations_on a return type into account._@param payload the Object to convert_@param headers optional headers for the message (may be {@code null})_@param conversionHint an extra object passed to the {@link MessageConverter},_e.g. the associated {@code MethodParameter} (may be {@code null}}_@return the new message, or {@code null} if the converter does not support the_Object type or the target media type_@see #toMessage(Object, MessageHeaders);@Nullable_	Message<?> toMessage(Object payload, @Nullable MessageHeaders headers, @Nullable Object conversionHint)_;a,variant,of,link,to,message,object,message,headers,which,takes,an,extra,conversion,context,as,an,argument,allowing,to,take,e,g,annotations,on,a,return,type,into,account,param,payload,the,object,to,convert,param,headers,optional,headers,for,the,message,may,be,code,null,param,conversion,hint,an,extra,object,passed,to,the,link,message,converter,e,g,the,associated,code,method,parameter,may,be,code,null,return,the,new,message,or,code,null,if,the,converter,does,not,support,the,object,type,or,the,target,media,type,see,to,message,object,message,headers;nullable,message,to,message,object,payload,nullable,message,headers,headers,nullable,object,conversion,hint
SmartMessageConverter -> @Nullable 	Object fromMessage(Message<?> message, Class<?> targetClass, @Nullable Object conversionHint)_;1495868221;A variant of {@link #fromMessage(Message, Class)} which takes an extra_conversion context as an argument, allowing to take e.g. annotations_on a payload parameter into account._@param message the input message_@param targetClass the target class for the conversion_@param conversionHint an extra object passed to the {@link MessageConverter},_e.g. the associated {@code MethodParameter} (may be {@code null}}_@return the result of the conversion, or {@code null} if the converter cannot_perform the conversion_@see #fromMessage(Message, Class);@Nullable_	Object fromMessage(Message<?> message, Class<?> targetClass, @Nullable Object conversionHint)_;a,variant,of,link,from,message,message,class,which,takes,an,extra,conversion,context,as,an,argument,allowing,to,take,e,g,annotations,on,a,payload,parameter,into,account,param,message,the,input,message,param,target,class,the,target,class,for,the,conversion,param,conversion,hint,an,extra,object,passed,to,the,link,message,converter,e,g,the,associated,code,method,parameter,may,be,code,null,return,the,result,of,the,conversion,or,code,null,if,the,converter,cannot,perform,the,conversion,see,from,message,message,class;nullable,object,from,message,message,message,class,target,class,nullable,object,conversion,hint
SmartMessageConverter -> @Nullable 	Object fromMessage(Message<?> message, Class<?> targetClass, @Nullable Object conversionHint)_;1496837955;A variant of {@link #fromMessage(Message, Class)} which takes an extra_conversion context as an argument, allowing to take e.g. annotations_on a payload parameter into account._@param message the input message_@param targetClass the target class for the conversion_@param conversionHint an extra object passed to the {@link MessageConverter},_e.g. the associated {@code MethodParameter} (may be {@code null}}_@return the result of the conversion, or {@code null} if the converter cannot_perform the conversion_@see #fromMessage(Message, Class);@Nullable_	Object fromMessage(Message<?> message, Class<?> targetClass, @Nullable Object conversionHint)_;a,variant,of,link,from,message,message,class,which,takes,an,extra,conversion,context,as,an,argument,allowing,to,take,e,g,annotations,on,a,payload,parameter,into,account,param,message,the,input,message,param,target,class,the,target,class,for,the,conversion,param,conversion,hint,an,extra,object,passed,to,the,link,message,converter,e,g,the,associated,code,method,parameter,may,be,code,null,return,the,result,of,the,conversion,or,code,null,if,the,converter,cannot,perform,the,conversion,see,from,message,message,class;nullable,object,from,message,message,message,class,target,class,nullable,object,conversion,hint
