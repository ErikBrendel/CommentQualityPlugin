# id;timestamp;commentText;codeText;commentWords;codeWords
DestinationResolvingMessageSendingOperations -> void send(String destinationName, Message<?> message) throws MessagingException_;1386297052;Resolve the given destination name to a destination and send a message to it.__@param destinationName the destination name to resolve_@param message the message to send;void send(String destinationName, Message<?> message) throws MessagingException_;resolve,the,given,destination,name,to,a,destination,and,send,a,message,to,it,param,destination,name,the,destination,name,to,resolve,param,message,the,message,to,send;void,send,string,destination,name,message,message,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> void send(String destinationName, Message<?> message) throws MessagingException_;1386350678;Resolve the given destination name to a destination and send a message to it._@param destinationName the destination name to resolve_@param message the message to send;void send(String destinationName, Message<?> message) throws MessagingException_;resolve,the,given,destination,name,to,a,destination,and,send,a,message,to,it,param,destination,name,the,destination,name,to,resolve,param,message,the,message,to,send;void,send,string,destination,name,message,message,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> void send(String destinationName, Message<?> message) throws MessagingException_;1496259743;Resolve the given destination name to a destination and send a message to it._@param destinationName the destination name to resolve_@param message the message to send;void send(String destinationName, Message<?> message) throws MessagingException_;resolve,the,given,destination,name,to,a,destination,and,send,a,message,to,it,param,destination,name,the,destination,name,to,resolve,param,message,the,message,to,send;void,send,string,destination,name,message,message,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> void send(String destinationName, Message<?> message) throws MessagingException_;1497559506;Resolve the given destination name to a destination and send a message to it._@param destinationName the destination name to resolve_@param message the message to send;void send(String destinationName, Message<?> message) throws MessagingException_;resolve,the,given,destination,name,to,a,destination,and,send,a,message,to,it,param,destination,name,the,destination,name,to,resolve,param,message,the,message,to,send;void,send,string,destination,name,message,message,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> void send(String destinationName, Message<?> message) throws MessagingException_;1530174524;Resolve the given destination name to a destination and send a message to it._@param destinationName the destination name to resolve_@param message the message to send;void send(String destinationName, Message<?> message) throws MessagingException_;resolve,the,given,destination,name,to,a,destination,and,send,a,message,to,it,param,destination,name,the,destination,name,to,resolve,param,message,the,message,to,send;void,send,string,destination,name,message,message,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload, Map<String, Object> headers, 			MessagePostProcessor postProcessor) throws MessagingException_;1386297052;Resolve the given destination name to a destination, convert the payload_Object to serialized form, possibly using a_{@link org.springframework.messaging.support.converter.MessageConverter},_wrap it as a message with the given headers, apply the given post processor,_and send the resulting message to the resolved destination.__@param destinationName the destination name to resolve_@param payload the Object to use as payload_@param headers headers for the message to send_@param postProcessor the post processor to apply to the message;<T> void convertAndSend(String destinationName, T payload, Map<String, Object> headers,_			MessagePostProcessor postProcessor) throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,support,converter,message,converter,wrap,it,as,a,message,with,the,given,headers,apply,the,given,post,processor,and,send,the,resulting,message,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload,param,headers,headers,for,the,message,to,send,param,post,processor,the,post,processor,to,apply,to,the,message;t,void,convert,and,send,string,destination,name,t,payload,map,string,object,headers,message,post,processor,post,processor,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload, Map<String, Object> headers, 			MessagePostProcessor postProcessor) throws MessagingException_;1386350678;Resolve the given destination name to a destination, convert the payload_Object to serialized form, possibly using a_{@link org.springframework.messaging.converter.MessageConverter},_wrap it as a message with the given headers, apply the given post processor,_and send the resulting message to the resolved destination._@param destinationName the destination name to resolve_@param payload the Object to use as payload_@param headers headers for the message to send_@param postProcessor the post processor to apply to the message;<T> void convertAndSend(String destinationName, T payload, Map<String, Object> headers,_			MessagePostProcessor postProcessor) throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,converter,message,converter,wrap,it,as,a,message,with,the,given,headers,apply,the,given,post,processor,and,send,the,resulting,message,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload,param,headers,headers,for,the,message,to,send,param,post,processor,the,post,processor,to,apply,to,the,message;t,void,convert,and,send,string,destination,name,t,payload,map,string,object,headers,message,post,processor,post,processor,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload, @Nullable Map<String, Object> headers) 			throws MessagingException_;1497559506;Resolve the given destination name to a destination, convert the payload_Object to serialized form, possibly using a_{@link org.springframework.messaging.converter.MessageConverter},_wrap it as a message with the given headers and send it to the resolved_destination._@param destinationName the destination name to resolve_@param payload the Object to use as payload_@param headers headers for the message to send;<T> void convertAndSend(String destinationName, T payload, @Nullable Map<String, Object> headers)_			throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,converter,message,converter,wrap,it,as,a,message,with,the,given,headers,and,send,it,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload,param,headers,headers,for,the,message,to,send;t,void,convert,and,send,string,destination,name,t,payload,nullable,map,string,object,headers,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload, @Nullable Map<String, Object> headers) 			throws MessagingException_;1530174524;Resolve the given destination name to a destination, convert the payload_Object to serialized form, possibly using a_{@link org.springframework.messaging.converter.MessageConverter},_wrap it as a message with the given headers and send it to the resolved_destination._@param destinationName the destination name to resolve_@param payload the Object to use as payload_@param headers headers for the message to send;<T> void convertAndSend(String destinationName, T payload, @Nullable Map<String, Object> headers)_			throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,converter,message,converter,wrap,it,as,a,message,with,the,given,headers,and,send,it,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload,param,headers,headers,for,the,message,to,send;t,void,convert,and,send,string,destination,name,t,payload,nullable,map,string,object,headers,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload, Map<String, Object> headers) 			throws MessagingException_;1386297052;Resolve the given destination name to a destination, convert the payload_Object to serialized form, possibly using a_{@link org.springframework.messaging.support.converter.MessageConverter},_wrap it as a message with the given headers and send it to the resolved_destination.__@param destinationName the destination name to resolve_@param payload the Object to use as payload_@param headers headers for the message to send;<T> void convertAndSend(String destinationName, T payload, Map<String, Object> headers)_			throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,support,converter,message,converter,wrap,it,as,a,message,with,the,given,headers,and,send,it,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload,param,headers,headers,for,the,message,to,send;t,void,convert,and,send,string,destination,name,t,payload,map,string,object,headers,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload, Map<String, Object> headers) 			throws MessagingException_;1386350678;Resolve the given destination name to a destination, convert the payload_Object to serialized form, possibly using a_{@link org.springframework.messaging.converter.MessageConverter},_wrap it as a message with the given headers and send it to the resolved_destination._@param destinationName the destination name to resolve_@param payload the Object to use as payload_@param headers headers for the message to send;<T> void convertAndSend(String destinationName, T payload, Map<String, Object> headers)_			throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,converter,message,converter,wrap,it,as,a,message,with,the,given,headers,and,send,it,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload,param,headers,headers,for,the,message,to,send;t,void,convert,and,send,string,destination,name,t,payload,map,string,object,headers,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload, Map<String, Object> headers) 			throws MessagingException_;1496259743;Resolve the given destination name to a destination, convert the payload_Object to serialized form, possibly using a_{@link org.springframework.messaging.converter.MessageConverter},_wrap it as a message with the given headers and send it to the resolved_destination._@param destinationName the destination name to resolve_@param payload the Object to use as payload_@param headers headers for the message to send;<T> void convertAndSend(String destinationName, T payload, Map<String, Object> headers)_			throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,converter,message,converter,wrap,it,as,a,message,with,the,given,headers,and,send,it,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload,param,headers,headers,for,the,message,to,send;t,void,convert,and,send,string,destination,name,t,payload,map,string,object,headers,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload, MessagePostProcessor postProcessor) 			throws MessagingException_;1386297052;Resolve the given destination name to a destination, convert the payload_Object to serialized form, possibly using a_{@link org.springframework.messaging.support.converter.MessageConverter},_wrap it as a message, apply the given post processor, and send the resulting_message to the resolved destination.__@param destinationName the destination name to resolve_@param payload the Object to use as payload_@param postProcessor the post processor to apply to the message;<T> void convertAndSend(String destinationName, T payload, MessagePostProcessor postProcessor)_			throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,support,converter,message,converter,wrap,it,as,a,message,apply,the,given,post,processor,and,send,the,resulting,message,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload,param,post,processor,the,post,processor,to,apply,to,the,message;t,void,convert,and,send,string,destination,name,t,payload,message,post,processor,post,processor,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload, MessagePostProcessor postProcessor) 			throws MessagingException_;1386350678;Resolve the given destination name to a destination, convert the payload_Object to serialized form, possibly using a_{@link org.springframework.messaging.converter.MessageConverter},_wrap it as a message, apply the given post processor, and send the resulting_message to the resolved destination._@param destinationName the destination name to resolve_@param payload the Object to use as payload_@param postProcessor the post processor to apply to the message;<T> void convertAndSend(String destinationName, T payload, MessagePostProcessor postProcessor)_			throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,converter,message,converter,wrap,it,as,a,message,apply,the,given,post,processor,and,send,the,resulting,message,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload,param,post,processor,the,post,processor,to,apply,to,the,message;t,void,convert,and,send,string,destination,name,t,payload,message,post,processor,post,processor,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload, MessagePostProcessor postProcessor) 			throws MessagingException_;1496259743;Resolve the given destination name to a destination, convert the payload_Object to serialized form, possibly using a_{@link org.springframework.messaging.converter.MessageConverter},_wrap it as a message, apply the given post processor, and send the resulting_message to the resolved destination._@param destinationName the destination name to resolve_@param payload the Object to use as payload_@param postProcessor the post processor to apply to the message;<T> void convertAndSend(String destinationName, T payload, MessagePostProcessor postProcessor)_			throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,converter,message,converter,wrap,it,as,a,message,apply,the,given,post,processor,and,send,the,resulting,message,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload,param,post,processor,the,post,processor,to,apply,to,the,message;t,void,convert,and,send,string,destination,name,t,payload,message,post,processor,post,processor,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload, @Nullable Map<String, Object> headers, 			@Nullable MessagePostProcessor postProcessor) throws MessagingException_;1496259743;Resolve the given destination name to a destination, convert the payload_Object to serialized form, possibly using a_{@link org.springframework.messaging.converter.MessageConverter},_wrap it as a message with the given headers, apply the given post processor,_and send the resulting message to the resolved destination._@param destinationName the destination name to resolve_@param payload the Object to use as payload_@param headers headers for the message to send_@param postProcessor the post processor to apply to the message;<T> void convertAndSend(String destinationName, T payload, @Nullable Map<String, Object> headers,_			@Nullable MessagePostProcessor postProcessor) throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,converter,message,converter,wrap,it,as,a,message,with,the,given,headers,apply,the,given,post,processor,and,send,the,resulting,message,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload,param,headers,headers,for,the,message,to,send,param,post,processor,the,post,processor,to,apply,to,the,message;t,void,convert,and,send,string,destination,name,t,payload,nullable,map,string,object,headers,nullable,message,post,processor,post,processor,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload, @Nullable Map<String, Object> headers, 			@Nullable MessagePostProcessor postProcessor) throws MessagingException_;1497559506;Resolve the given destination name to a destination, convert the payload_Object to serialized form, possibly using a_{@link org.springframework.messaging.converter.MessageConverter},_wrap it as a message with the given headers, apply the given post processor,_and send the resulting message to the resolved destination._@param destinationName the destination name to resolve_@param payload the Object to use as payload_@param headers headers for the message to send_@param postProcessor the post processor to apply to the message;<T> void convertAndSend(String destinationName, T payload, @Nullable Map<String, Object> headers,_			@Nullable MessagePostProcessor postProcessor) throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,converter,message,converter,wrap,it,as,a,message,with,the,given,headers,apply,the,given,post,processor,and,send,the,resulting,message,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload,param,headers,headers,for,the,message,to,send,param,post,processor,the,post,processor,to,apply,to,the,message;t,void,convert,and,send,string,destination,name,t,payload,nullable,map,string,object,headers,nullable,message,post,processor,post,processor,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload, @Nullable Map<String, Object> headers, 			@Nullable MessagePostProcessor postProcessor) throws MessagingException_;1530174524;Resolve the given destination name to a destination, convert the payload_Object to serialized form, possibly using a_{@link org.springframework.messaging.converter.MessageConverter},_wrap it as a message with the given headers, apply the given post processor,_and send the resulting message to the resolved destination._@param destinationName the destination name to resolve_@param payload the Object to use as payload_@param headers headers for the message to send_@param postProcessor the post processor to apply to the message;<T> void convertAndSend(String destinationName, T payload, @Nullable Map<String, Object> headers,_			@Nullable MessagePostProcessor postProcessor) throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,converter,message,converter,wrap,it,as,a,message,with,the,given,headers,apply,the,given,post,processor,and,send,the,resulting,message,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload,param,headers,headers,for,the,message,to,send,param,post,processor,the,post,processor,to,apply,to,the,message;t,void,convert,and,send,string,destination,name,t,payload,nullable,map,string,object,headers,nullable,message,post,processor,post,processor,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload) throws MessagingException_;1386297052;Resolve the given destination name to a destination, convert the payload Object_to serialized form, possibly using a_{@link org.springframework.messaging.support.converter.MessageConverter},_wrap it as a message and send it to the resolved destination.__@param destinationName the destination name to resolve_@param payload the Object to use as payload;<T> void convertAndSend(String destinationName, T payload) throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,support,converter,message,converter,wrap,it,as,a,message,and,send,it,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload;t,void,convert,and,send,string,destination,name,t,payload,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload) throws MessagingException_;1386350678;Resolve the given destination name to a destination, convert the payload Object_to serialized form, possibly using a_{@link org.springframework.messaging.converter.MessageConverter},_wrap it as a message and send it to the resolved destination._@param destinationName the destination name to resolve_@param payload the Object to use as payload;<T> void convertAndSend(String destinationName, T payload) throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,converter,message,converter,wrap,it,as,a,message,and,send,it,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload;t,void,convert,and,send,string,destination,name,t,payload,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload) throws MessagingException_;1496259743;Resolve the given destination name to a destination, convert the payload Object_to serialized form, possibly using a_{@link org.springframework.messaging.converter.MessageConverter},_wrap it as a message and send it to the resolved destination._@param destinationName the destination name to resolve_@param payload the Object to use as payload;<T> void convertAndSend(String destinationName, T payload) throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,converter,message,converter,wrap,it,as,a,message,and,send,it,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload;t,void,convert,and,send,string,destination,name,t,payload,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload) throws MessagingException_;1497559506;Resolve the given destination name to a destination, convert the payload Object_to serialized form, possibly using a_{@link org.springframework.messaging.converter.MessageConverter},_wrap it as a message and send it to the resolved destination._@param destinationName the destination name to resolve_@param payload the Object to use as payload;<T> void convertAndSend(String destinationName, T payload) throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,converter,message,converter,wrap,it,as,a,message,and,send,it,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload;t,void,convert,and,send,string,destination,name,t,payload,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload) throws MessagingException_;1530174524;Resolve the given destination name to a destination, convert the payload Object_to serialized form, possibly using a_{@link org.springframework.messaging.converter.MessageConverter},_wrap it as a message and send it to the resolved destination._@param destinationName the destination name to resolve_@param payload the Object to use as payload;<T> void convertAndSend(String destinationName, T payload) throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,converter,message,converter,wrap,it,as,a,message,and,send,it,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload;t,void,convert,and,send,string,destination,name,t,payload,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload, @Nullable MessagePostProcessor postProcessor) 			throws MessagingException_;1497559506;Resolve the given destination name to a destination, convert the payload_Object to serialized form, possibly using a_{@link org.springframework.messaging.converter.MessageConverter},_wrap it as a message, apply the given post processor, and send the resulting_message to the resolved destination._@param destinationName the destination name to resolve_@param payload the Object to use as payload_@param postProcessor the post processor to apply to the message;<T> void convertAndSend(String destinationName, T payload, @Nullable MessagePostProcessor postProcessor)_			throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,converter,message,converter,wrap,it,as,a,message,apply,the,given,post,processor,and,send,the,resulting,message,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload,param,post,processor,the,post,processor,to,apply,to,the,message;t,void,convert,and,send,string,destination,name,t,payload,nullable,message,post,processor,post,processor,throws,messaging,exception
DestinationResolvingMessageSendingOperations -> <T> void convertAndSend(String destinationName, T payload, @Nullable MessagePostProcessor postProcessor) 			throws MessagingException_;1530174524;Resolve the given destination name to a destination, convert the payload_Object to serialized form, possibly using a_{@link org.springframework.messaging.converter.MessageConverter},_wrap it as a message, apply the given post processor, and send the resulting_message to the resolved destination._@param destinationName the destination name to resolve_@param payload the Object to use as payload_@param postProcessor the post processor to apply to the message;<T> void convertAndSend(String destinationName, T payload, @Nullable MessagePostProcessor postProcessor)_			throws MessagingException_;resolve,the,given,destination,name,to,a,destination,convert,the,payload,object,to,serialized,form,possibly,using,a,link,org,springframework,messaging,converter,message,converter,wrap,it,as,a,message,apply,the,given,post,processor,and,send,the,resulting,message,to,the,resolved,destination,param,destination,name,the,destination,name,to,resolve,param,payload,the,object,to,use,as,payload,param,post,processor,the,post,processor,to,apply,to,the,message;t,void,convert,and,send,string,destination,name,t,payload,nullable,message,post,processor,post,processor,throws,messaging,exception
