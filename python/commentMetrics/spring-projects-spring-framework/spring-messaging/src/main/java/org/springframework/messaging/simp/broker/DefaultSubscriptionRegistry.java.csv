# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultSubscriptionRegistry -> public int getCacheLimit();1398809769;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1398824118;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1399421949;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1401914914;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1403856366;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1404238986;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1404239006;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1404239056;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1404880799;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1405696918;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1413848647;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1422903132;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1429671032;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1436216840;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1436221547;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1436260316;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1444752856;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1444752857;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1467730834;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1469614318;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1487628012;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1487707506;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1487713300;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1494926542;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1495221614;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1495483714;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1495868221;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1496837955;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1498780456;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1508532146;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1521689398;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1521738567;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1522103912;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1522192143;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1523937390;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1530174524;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public int getCacheLimit();1542037423;Return the maximum number of entries for the resolved destination cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,resolved,destination,cache;public,int,get,cache,limit,return,this,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1398809769;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1398824118;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1399421949;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1401914914;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1403856366;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1404238986;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1404239006;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1404239056;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1404880799;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1405696918;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1413848647;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1422903132;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1429671032;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1436216840;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1436221547;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1436260316;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1444752856;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1444752857;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1467730834;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1469614318;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1487628012;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1487707506;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1487713300;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1494926542;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1495221614;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1495483714;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1495868221;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1496837955;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1498780456;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1508532146;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1521689398;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1521738567;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1522103912;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1522192143;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1523937390;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1530174524;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public void setCacheLimit(int cacheLimit);1542037423;Specify the maximum number of entries for the resolved destination cache._Default is 1024.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,resolved,destination,cache,default,is,1024;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1429671032;Return the name for the selector header.;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1436216840;Return the name for the selector header.;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1436221547;Return the name for the selector header.;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1436260316;Return the name for the selector header.;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1444752856;Return the name for the selector header.;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1444752857;Return the name for the selector header.;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1467730834;Return the name for the selector header.;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1469614318;Return the name for the selector header._@since 4.2;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header,since,4,2;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1487628012;Return the name for the selector header._@since 4.2;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header,since,4,2;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1487707506;Return the name for the selector header._@since 4.2;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header,since,4,2;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1487713300;Return the name for the selector header._@since 4.2;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header,since,4,2;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1494926542;Return the name for the selector header._@since 4.2;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header,since,4,2;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1495221614;Return the name for the selector header._@since 4.2;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header,since,4,2;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1495483714;Return the name for the selector header._@since 4.2;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header,since,4,2;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1495868221;Return the name for the selector header._@since 4.2;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header,since,4,2;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1496837955;Return the name for the selector header._@since 4.2;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header,since,4,2;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1498780456;Return the name for the selector header._@since 4.2;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header,since,4,2;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1508532146;Return the name for the selector header._@since 4.2;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header,since,4,2;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1521689398;Return the name for the selector header._@since 4.2;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header,since,4,2;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1521738567;Return the name for the selector header._@since 4.2;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header,since,4,2;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1522103912;Return the name for the selector header._@since 4.2;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header,since,4,2;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public String getSelectorHeaderName();1522192143;Return the name for the selector header._@since 4.2;public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header,since,4,2;public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1398809769;The configured PathMatcher.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};the,configured,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1398824118;The configured PathMatcher.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};the,configured,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1399421949;The configured PathMatcher.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};the,configured,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1401914914;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1403856366;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1404238986;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1404239006;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1404239056;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1404880799;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1405696918;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1413848647;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1422903132;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1429671032;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1436216840;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1436221547;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1436260316;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1444752856;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1444752857;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1467730834;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1469614318;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1487628012;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1487707506;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1487713300;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1494926542;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1495221614;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1495483714;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1495868221;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1496837955;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1498780456;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1508532146;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1521689398;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1521738567;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1522103912;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1522192143;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1523937390;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1530174524;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public PathMatcher getPathMatcher();1542037423;Return the configured {@link PathMatcher}.;public PathMatcher getPathMatcher() {_		return this.pathMatcher__	};return,the,configured,link,path,matcher;public,path,matcher,get,path,matcher,return,this,path,matcher
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(@Nullable String selectorHeaderName);1523937390;Configure the name of a header that a subscription message can have for_the purpose of filtering messages matched to the subscription. The header_value is expected to be a Spring EL boolean expression to be applied to_the headers of messages matched to the subscription._<p>For example:_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector". You can set it to a different_name, or to {@code null} to turn off support for a selector header._@param selectorHeaderName the name to use for a selector header_@since 4.2;public void setSelectorHeaderName(@Nullable String selectorHeaderName) {_		this.selectorHeaderName = StringUtils.hasText(selectorHeaderName) ? selectorHeaderName : null__	};configure,the,name,of,a,header,that,a,subscription,message,can,have,for,the,purpose,of,filtering,messages,matched,to,the,subscription,the,header,value,is,expected,to,be,a,spring,el,boolean,expression,to,be,applied,to,the,headers,of,messages,matched,to,the,subscription,p,for,example,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,you,can,set,it,to,a,different,name,or,to,code,null,to,turn,off,support,for,a,selector,header,param,selector,header,name,the,name,to,use,for,a,selector,header,since,4,2;public,void,set,selector,header,name,nullable,string,selector,header,name,this,selector,header,name,string,utils,has,text,selector,header,name,selector,header,name,null
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(@Nullable String selectorHeaderName);1530174524;Configure the name of a header that a subscription message can have for_the purpose of filtering messages matched to the subscription. The header_value is expected to be a Spring EL boolean expression to be applied to_the headers of messages matched to the subscription._<p>For example:_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector". You can set it to a different_name, or to {@code null} to turn off support for a selector header._@param selectorHeaderName the name to use for a selector header_@since 4.2;public void setSelectorHeaderName(@Nullable String selectorHeaderName) {_		this.selectorHeaderName = StringUtils.hasText(selectorHeaderName) ? selectorHeaderName : null__	};configure,the,name,of,a,header,that,a,subscription,message,can,have,for,the,purpose,of,filtering,messages,matched,to,the,subscription,the,header,value,is,expected,to,be,a,spring,el,boolean,expression,to,be,applied,to,the,headers,of,messages,matched,to,the,subscription,p,for,example,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,you,can,set,it,to,a,different,name,or,to,code,null,to,turn,off,support,for,a,selector,header,param,selector,header,name,the,name,to,use,for,a,selector,header,since,4,2;public,void,set,selector,header,name,nullable,string,selector,header,name,this,selector,header,name,string,utils,has,text,selector,header,name,selector,header,name,null
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(@Nullable String selectorHeaderName);1542037423;Configure the name of a header that a subscription message can have for_the purpose of filtering messages matched to the subscription. The header_value is expected to be a Spring EL boolean expression to be applied to_the headers of messages matched to the subscription._<p>For example:_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector". You can set it to a different_name, or to {@code null} to turn off support for a selector header._@param selectorHeaderName the name to use for a selector header_@since 4.2;public void setSelectorHeaderName(@Nullable String selectorHeaderName) {_		this.selectorHeaderName = (StringUtils.hasText(selectorHeaderName) ? selectorHeaderName : null)__	};configure,the,name,of,a,header,that,a,subscription,message,can,have,for,the,purpose,of,filtering,messages,matched,to,the,subscription,the,header,value,is,expected,to,be,a,spring,el,boolean,expression,to,be,applied,to,the,headers,of,messages,matched,to,the,subscription,p,for,example,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,you,can,set,it,to,a,different,name,or,to,code,null,to,turn,off,support,for,a,selector,header,param,selector,header,name,the,name,to,use,for,a,selector,header,since,4,2;public,void,set,selector,header,name,nullable,string,selector,header,name,this,selector,header,name,string,utils,has,text,selector,header,name,selector,header,name,null
DefaultSubscriptionRegistry -> public void setPathMatcher(AntPathMatcher pathMatcher);1386365044;@param pathMatcher the pathMatcher to set;public void setPathMatcher(AntPathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};param,path,matcher,the,path,matcher,to,set;public,void,set,path,matcher,ant,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(AntPathMatcher pathMatcher);1386367529;@param pathMatcher the pathMatcher to set;public void setPathMatcher(AntPathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};param,path,matcher,the,path,matcher,to,set;public,void,set,path,matcher,ant,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(AntPathMatcher pathMatcher);1398809769;@param pathMatcher the pathMatcher to set;public void setPathMatcher(AntPathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};param,path,matcher,the,path,matcher,to,set;public,void,set,path,matcher,ant,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> @Nullable 	public String getSelectorHeaderName();1523937390;Return the name for the selector header name._@since 4.2;@Nullable_	public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header,name,since,4,2;nullable,public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> @Nullable 	public String getSelectorHeaderName();1530174524;Return the name for the selector header name._@since 4.2;@Nullable_	public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header,name,since,4,2;nullable,public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> @Nullable 	public String getSelectorHeaderName();1542037423;Return the name for the selector header name._@since 4.2;@Nullable_	public String getSelectorHeaderName() {_		return this.selectorHeaderName__	};return,the,name,for,the,selector,header,name,since,4,2;nullable,public,string,get,selector,header,name,return,this,selector,header,name
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1398809769;The PathMatcher to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};the,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1398824118;The PathMatcher to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};the,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1399421949;The PathMatcher to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};the,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1401914914;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1403856366;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1404238986;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1404239006;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1404239056;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1404880799;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1405696918;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1413848647;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1422903132;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1429671032;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1436216840;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1436221547;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1436260316;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1444752856;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1444752857;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1467730834;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1469614318;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1487628012;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1487707506;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1487713300;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1494926542;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1495221614;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1495483714;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1495868221;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1496837955;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1498780456;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1508532146;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1521689398;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1521738567;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1522103912;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1522192143;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1523937390;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1530174524;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setPathMatcher(PathMatcher pathMatcher);1542037423;Specify the {@link PathMatcher} to use.;public void setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__	};specify,the,link,path,matcher,to,use;public,void,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1429671032;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName)__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1436216840;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName)__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1436221547;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName)__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1436260316;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName)__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1444752856;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName)__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1444752857;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName)__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1467730834;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName)__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1469614318;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName, "'selectorHeaderName' must not be null")__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,selector,header,name,must,not,be,null,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1487628012;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName, "'selectorHeaderName' must not be null")__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,selector,header,name,must,not,be,null,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1487707506;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName, "'selectorHeaderName' must not be null")__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,selector,header,name,must,not,be,null,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1487713300;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName, "'selectorHeaderName' must not be null")__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,selector,header,name,must,not,be,null,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1494926542;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName, "'selectorHeaderName' must not be null")__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,selector,header,name,must,not,be,null,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1495221614;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName, "'selectorHeaderName' must not be null")__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,selector,header,name,must,not,be,null,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1495483714;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName, "'selectorHeaderName' must not be null")__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,selector,header,name,must,not,be,null,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1495868221;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName, "'selectorHeaderName' must not be null")__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,selector,header,name,must,not,be,null,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1496837955;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName, "'selectorHeaderName' must not be null")__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,selector,header,name,must,not,be,null,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1498780456;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName, "'selectorHeaderName' must not be null")__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,selector,header,name,must,not,be,null,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1508532146;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName, "'selectorHeaderName' must not be null")__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,selector,header,name,must,not,be,null,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1521689398;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName, "'selectorHeaderName' must not be null")__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,selector,header,name,must,not,be,null,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1521738567;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName, "'selectorHeaderName' must not be null")__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,selector,header,name,must,not,be,null,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1522103912;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName, "'selectorHeaderName' must not be null")__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,selector,header,name,must,not,be,null,this,selector,header,name,selector,header,name
DefaultSubscriptionRegistry -> public void setSelectorHeaderName(String selectorHeaderName);1522192143;Configure the name of a selector header that a subscription message can_have in order to filter messages based on their headers. The value of the_header can use Spring EL expressions against message headers._<p>For example the following expression expects a header called "foo" to_have the value "bar":_<pre>_headers.foo == 'bar'_</pre>_<p>By default this is set to "selector"._@since 4.2;public void setSelectorHeaderName(String selectorHeaderName) {_		Assert.notNull(selectorHeaderName, "'selectorHeaderName' must not be null")__		this.selectorHeaderName = selectorHeaderName__	};configure,the,name,of,a,selector,header,that,a,subscription,message,can,have,in,order,to,filter,messages,based,on,their,headers,the,value,of,the,header,can,use,spring,el,expressions,against,message,headers,p,for,example,the,following,expression,expects,a,header,called,foo,to,have,the,value,bar,pre,headers,foo,bar,pre,p,by,default,this,is,set,to,selector,since,4,2;public,void,set,selector,header,name,string,selector,header,name,assert,not,null,selector,header,name,selector,header,name,must,not,be,null,this,selector,header,name,selector,header,name
