# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1391219707;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty__@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1393555295;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty__@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1395007965;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty__@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1395290737;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty__@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1398144500;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty__@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1404880799;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty__@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1405011420;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty__@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1405378164;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty__@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1405378165;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty__@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1405696918;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty__@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1411159659;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty__@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1411389021;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty__@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1411699723;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty__@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1413225208;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty__@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1413848647;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty__@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1414092351;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty__@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1414619099;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1417596581;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1426789284;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1427403033;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1429286144;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1431458952;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1432316649;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1457638642;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1458078613;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1467677340;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1467726769;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1467730834;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1468948866;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1469614318;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1469629315;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1485810955;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1495868221;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1496242568;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1496837955;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1498780456;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1500448076;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1505821663;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1516413763;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1530174524;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1531321803;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1531942400;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1532981251;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected boolean configureMessageConverters(List<MessageConverter> messageConverters);1534150594;Override this method to add custom message converters._@param messageConverters the list to add converters to, initially empty_@return {@code true} if default message converters should be added to list,_{@code false} if no more converters should be added.;protected boolean configureMessageConverters(List<MessageConverter> messageConverters) {_		return true__	};override,this,method,to,add,custom,message,converters,param,message,converters,the,list,to,add,converters,to,initially,empty,return,code,true,if,default,message,converters,should,be,added,to,list,code,false,if,no,more,converters,should,be,added;protected,boolean,configure,message,converters,list,message,converter,message,converters,return,true
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1426789284;Protected method for plugging in a custom sub-class of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,sub,class,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1427403033;Protected method for plugging in a custom sub-class of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,sub,class,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1429286144;Protected method for plugging in a custom sub-class of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,sub,class,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1431458952;Protected method for plugging in a custom sub-class of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,sub,class,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1432316649;Protected method for plugging in a custom sub-class of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,sub,class,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1457638642;Protected method for plugging in a custom sub-class of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,sub,class,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1458078613;Protected method for plugging in a custom sub-class of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,sub,class,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1467677340;Protected method for plugging in a custom sub-class of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,sub,class,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1467726769;Protected method for plugging in a custom sub-class of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,sub,class,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1467730834;Protected method for plugging in a custom sub-class of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,sub,class,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1468948866;Protected method for plugging in a custom sub-class of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,sub,class,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1469614318;Protected method for plugging in a custom subclass of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,subclass,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1469629315;Protected method for plugging in a custom subclass of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,subclass,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1485810955;Protected method for plugging in a custom subclass of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,subclass,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1495868221;Protected method for plugging in a custom subclass of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,subclass,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1496242568;Protected method for plugging in a custom subclass of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,subclass,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1496837955;Protected method for plugging in a custom subclass of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,subclass,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1498780456;Protected method for plugging in a custom subclass of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,subclass,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1500448076;Protected method for plugging in a custom subclass of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,subclass,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1505821663;Protected method for plugging in a custom subclass of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,subclass,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1516413763;Protected method for plugging in a custom subclass of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,subclass,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1530174524;Protected method for plugging in a custom subclass of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,subclass,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1531321803;Protected method for plugging in a custom subclass of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,subclass,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1531942400;Protected method for plugging in a custom subclass of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,subclass,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1532981251;Protected method for plugging in a custom subclass of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,subclass,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();1534150594;Protected method for plugging in a custom subclass of_{@link org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler_SimpAnnotationMethodMessageHandler}._@since 4.2;protected SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler() {_		return new SimpAnnotationMethodMessageHandler(clientInboundChannel(),_				clientOutboundChannel(), brokerMessagingTemplate())__	};protected,method,for,plugging,in,a,custom,subclass,of,link,org,springframework,messaging,simp,annotation,support,simp,annotation,method,message,handler,simp,annotation,method,message,handler,since,4,2;protected,simp,annotation,method,message,handler,create,annotation,method,message,handler,return,new,simp,annotation,method,message,handler,client,inbound,channel,client,outbound,channel,broker,messaging,template
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1432316649;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1457638642;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1458078613;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1467677340;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1467726769;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1467730834;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1468948866;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1469614318;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1469629315;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1485810955;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1495868221;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1496242568;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1496837955;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1498780456;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1500448076;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1505821663;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1516413763;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1530174524;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1531321803;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1531942400;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected abstract SimpUserRegistry createLocalUserRegistry()_;1532981251;Create the user registry that provides access to the local users.;protected abstract SimpUserRegistry createLocalUserRegistry()_;create,the,user,registry,that,provides,access,to,the,local,users;protected,abstract,simp,user,registry,create,local,user,registry
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1389129389;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1390409744;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1391219707;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1393555295;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1395007965;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1395290737;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1398144500;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1404880799;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1405011420;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1405378164;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1405378165;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1405696918;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1411159659;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1411389021;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1411699723;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1413225208;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1413848647;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1414092351;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1414619099;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1417596581;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1426789284;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1427403033;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1429286144;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1431458952;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1432316649;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1457638642;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1458078613;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1467677340;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1467726769;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1467730834;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1468948866;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1469614318;A hook for subclasses to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1469629315;A hook for subclasses to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1485810955;A hook for subclasses to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1495868221;A hook for subclasses to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1496242568;A hook for subclasses to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1496837955;A hook for subclasses to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1498780456;A hook for subclasses to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1500448076;A hook for subclasses to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1505821663;A hook for subclasses to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1516413763;A hook for subclasses to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1530174524;A hook for subclasses to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1531321803;A hook for subclasses to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1531942400;A hook for subclasses to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1532981251;A hook for subclasses to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientInboundChannel(ChannelRegistration registration);1534150594;A hook for subclasses to customize the message channel for inbound messages_from WebSocket clients.;protected void configureClientInboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected abstract void configureClientInboundChannel(ChannelRegistration registration)_;1385502674;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected abstract void configureClientInboundChannel(ChannelRegistration registration)_;a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,abstract,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected abstract void configureClientInboundChannel(ChannelRegistration registration)_;1385507478;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected abstract void configureClientInboundChannel(ChannelRegistration registration)_;a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,abstract,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected abstract void configureClientInboundChannel(ChannelRegistration registration)_;1386004713;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected abstract void configureClientInboundChannel(ChannelRegistration registration)_;a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,abstract,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected abstract void configureClientInboundChannel(ChannelRegistration registration)_;1386350678;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected abstract void configureClientInboundChannel(ChannelRegistration registration)_;a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,abstract,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected abstract void configureClientInboundChannel(ChannelRegistration registration)_;1386365044;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected abstract void configureClientInboundChannel(ChannelRegistration registration)_;a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,abstract,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected abstract void configureClientInboundChannel(ChannelRegistration registration)_;1386367529;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected abstract void configureClientInboundChannel(ChannelRegistration registration)_;a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,abstract,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected abstract void configureClientInboundChannel(ChannelRegistration registration)_;1388759133;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected abstract void configureClientInboundChannel(ChannelRegistration registration)_;a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,abstract,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected abstract void configureClientInboundChannel(ChannelRegistration registration)_;1388785016;A hook for sub-classes to customize the message channel for inbound messages_from WebSocket clients.;protected abstract void configureClientInboundChannel(ChannelRegistration registration)_;a,hook,for,sub,classes,to,customize,the,message,channel,for,inbound,messages,from,web,socket,clients;protected,abstract,void,configure,client,inbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected abstract void configureClientOutboundChannel(ChannelRegistration registration)_;1385502674;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected abstract void configureClientOutboundChannel(ChannelRegistration registration)_;a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,abstract,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected abstract void configureClientOutboundChannel(ChannelRegistration registration)_;1385507478;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected abstract void configureClientOutboundChannel(ChannelRegistration registration)_;a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,abstract,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected abstract void configureClientOutboundChannel(ChannelRegistration registration)_;1386004713;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected abstract void configureClientOutboundChannel(ChannelRegistration registration)_;a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,abstract,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected abstract void configureClientOutboundChannel(ChannelRegistration registration)_;1386350678;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected abstract void configureClientOutboundChannel(ChannelRegistration registration)_;a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,abstract,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected abstract void configureClientOutboundChannel(ChannelRegistration registration)_;1386365044;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected abstract void configureClientOutboundChannel(ChannelRegistration registration)_;a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,abstract,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected abstract void configureClientOutboundChannel(ChannelRegistration registration)_;1386367529;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected abstract void configureClientOutboundChannel(ChannelRegistration registration)_;a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,abstract,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected abstract void configureClientOutboundChannel(ChannelRegistration registration)_;1388759133;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected abstract void configureClientOutboundChannel(ChannelRegistration registration)_;a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,abstract,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected abstract void configureClientOutboundChannel(ChannelRegistration registration)_;1388785016;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected abstract void configureClientOutboundChannel(ChannelRegistration registration)_;a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,abstract,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> public final PathMatcher getPathMatcher();1427403033;Provide access to the configured PatchMatcher for access from other_configuration classes.;public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> public final PathMatcher getPathMatcher();1429286144;Provide access to the configured PatchMatcher for access from other_configuration classes.;public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> public final PathMatcher getPathMatcher();1431458952;Provide access to the configured PatchMatcher for access from other_configuration classes.;public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> public final PathMatcher getPathMatcher();1432316649;Provide access to the configured PatchMatcher for access from other_configuration classes.;public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> public final PathMatcher getPathMatcher();1457638642;Provide access to the configured PatchMatcher for access from other_configuration classes.;public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> public final PathMatcher getPathMatcher();1458078613;Provide access to the configured PatchMatcher for access from other_configuration classes.;public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> public final PathMatcher getPathMatcher();1467677340;Provide access to the configured PatchMatcher for access from other_configuration classes.;public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> public final PathMatcher getPathMatcher();1467726769;Provide access to the configured PatchMatcher for access from other_configuration classes.;public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> public final PathMatcher getPathMatcher();1467730834;Provide access to the configured PatchMatcher for access from other_configuration classes.;public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> public final PathMatcher getPathMatcher();1468948866;Provide access to the configured PatchMatcher for access from other_configuration classes.;public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> public final PathMatcher getPathMatcher();1469614318;Provide access to the configured PatchMatcher for access from other_configuration classes.;public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> public final PathMatcher getPathMatcher();1469629315;Provide access to the configured PatchMatcher for access from other_configuration classes.;public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> public final PathMatcher getPathMatcher();1485810955;Provide access to the configured PatchMatcher for access from other_configuration classes.;public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> public final PathMatcher getPathMatcher();1495868221;Provide access to the configured PatchMatcher for access from other_configuration classes.;public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> public final PathMatcher getPathMatcher();1496242568;Provide access to the configured PatchMatcher for access from other_configuration classes.;public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1385258957;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1385502674;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1385507478;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1386004713;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1386350678;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1386365044;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1386367529;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1388759133;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1388785016;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1389129389;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1390409744;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1391219707;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1393555295;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1395007965;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1395290737;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1398144500;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1404880799;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1405011420;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1405378164;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1405378165;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1405696918;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1411159659;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1411389021;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1411699723;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1413225208;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1413848647;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1414092351;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1414619099;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1417596581;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1426789284;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1427403033;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1429286144;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1431458952;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1432316649;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1457638642;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1458078613;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1467677340;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1467726769;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1467730834;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1468948866;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1469614318;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1469629315;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1485810955;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1495868221;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1496242568;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1496837955;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1498780456;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1500448076;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1505821663;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1516413763;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1530174524;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1531321803;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1531942400;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1532981251;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected final MessageBrokerRegistry getBrokerRegistry();1534150594;An accessor for the {@link MessageBrokerRegistry} that ensures its one-time creation_and initialization through {@link #configureMessageBroker(MessageBrokerRegistry)}.;protected final MessageBrokerRegistry getBrokerRegistry() {_		if (this.brokerRegistry == null) {_			MessageBrokerRegistry registry = new MessageBrokerRegistry(clientInboundChannel(), clientOutboundChannel())__			configureMessageBroker(registry)__			this.brokerRegistry = registry__		}_		return this.brokerRegistry__	};an,accessor,for,the,link,message,broker,registry,that,ensures,its,one,time,creation,and,initialization,through,link,configure,message,broker,message,broker,registry;protected,final,message,broker,registry,get,broker,registry,if,this,broker,registry,null,message,broker,registry,registry,new,message,broker,registry,client,inbound,channel,client,outbound,channel,configure,message,broker,registry,this,broker,registry,registry,return,this,broker,registry
AbstractMessageBrokerConfiguration -> protected abstract void configureMessageBroker(MessageBrokerRegistry registry)_;1385258957;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected abstract void configureMessageBroker(MessageBrokerRegistry registry)_;a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,abstract,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected abstract void configureMessageBroker(MessageBrokerRegistry registry)_;1385502674;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected abstract void configureMessageBroker(MessageBrokerRegistry registry)_;a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,abstract,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected abstract void configureMessageBroker(MessageBrokerRegistry registry)_;1385507478;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected abstract void configureMessageBroker(MessageBrokerRegistry registry)_;a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,abstract,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected abstract void configureMessageBroker(MessageBrokerRegistry registry)_;1386004713;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected abstract void configureMessageBroker(MessageBrokerRegistry registry)_;a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,abstract,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected abstract void configureMessageBroker(MessageBrokerRegistry registry)_;1386350678;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected abstract void configureMessageBroker(MessageBrokerRegistry registry)_;a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,abstract,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected abstract void configureMessageBroker(MessageBrokerRegistry registry)_;1386365044;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected abstract void configureMessageBroker(MessageBrokerRegistry registry)_;a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,abstract,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected abstract void configureMessageBroker(MessageBrokerRegistry registry)_;1386367529;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected abstract void configureMessageBroker(MessageBrokerRegistry registry)_;a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,abstract,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected abstract void configureMessageBroker(MessageBrokerRegistry registry)_;1388759133;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected abstract void configureMessageBroker(MessageBrokerRegistry registry)_;a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,abstract,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected abstract void configureMessageBroker(MessageBrokerRegistry registry)_;1388785016;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected abstract void configureMessageBroker(MessageBrokerRegistry registry)_;a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,abstract,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1388759133;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code LocalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if(this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = noopValidator__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,local,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,local,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,noop,validator,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1388785016;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if(this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = noopValidator__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,noop,validator,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1389129389;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if(this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1390409744;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if(this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1391219707;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if(this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1393555295;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if(this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1395007965;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if(this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1395290737;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if(this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1398144500;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if(this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1404880799;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if(this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1405011420;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if(this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1405378164;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if(this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1405378165;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if(this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1405696918;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1411159659;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1411389021;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1411699723;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1413225208;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1413848647;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1414092351;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator", created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation before creating a_{@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (ClassNotFoundException e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				catch (LinkageError e) {_					throw new BeanInitializationException("Could not find default validator", e)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,class,not,found,exception,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,catch,linkage,error,e,throw,new,bean,initialization,exception,could,not,find,default,validator,e,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1414619099;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1417596581;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1426789284;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1427403033;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1429286144;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1431458952;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1432316649;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1457638642;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1458078613;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1467677340;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1467726769;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1467730834;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiate(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1468948866;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiateClass(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,class,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1469614318;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiateClass(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,class,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1469629315;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiateClass(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,class,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1485810955;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiateClass(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,class,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1495868221;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiateClass(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,class,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1496242568;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiateClass(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(@Nullable Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,class,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,nullable,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1496837955;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiateClass(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(@Nullable Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,class,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,nullable,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1498780456;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext != null && this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiateClass(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(@Nullable Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,null,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,class,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,nullable,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1500448076;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext != null && this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiateClass(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(@Nullable Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,null,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,class,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,nullable,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1505821663;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext != null && this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiateClass(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(@Nullable Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,null,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,class,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,nullable,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1516413763;Return a {@link org.springframework.validation.Validator}s instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext != null && this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiateClass(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(@Nullable Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,s,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,null,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,class,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,nullable,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1530174524;Return a {@link org.springframework.validation.Validator org.springframework.validation.Validators} instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext != null && this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiateClass(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(@Nullable Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,org,springframework,validation,validators,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,null,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,class,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,nullable,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1531321803;Return a {@link org.springframework.validation.Validator_org.springframework.validation.Validators} instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext != null && this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiateClass(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(@Nullable Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,org,springframework,validation,validators,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,null,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,class,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,nullable,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1531942400;Return a {@link org.springframework.validation.Validator_org.springframework.validation.Validators} instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext != null && this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiateClass(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(@Nullable Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,org,springframework,validation,validators,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,null,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,class,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,nullable,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1532981251;Return a {@link org.springframework.validation.Validator_org.springframework.validation.Validators} instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext != null && this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiateClass(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(@Nullable Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,org,springframework,validation,validators,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,null,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,class,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,nullable,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected Validator simpValidator();1534150594;Return a {@link org.springframework.validation.Validator_org.springframework.validation.Validators} instance for validating_{@code @Payload} method arguments._<p>In order, this method tries to get a Validator instance:_<ul>_<li>delegating to getValidator() first</li>_<li>if none returned, getting an existing instance with its well-known name "mvcValidator",_created by an MVC configuration</li>_<li>if none returned, checking the classpath for the presence of a JSR-303 implementation_before creating a {@code OptionalValidatorFactoryBean}</li>_<li>returning a no-op Validator instance</li>_</ul>;protected Validator simpValidator() {_		Validator validator = getValidator()__		if (validator == null) {_			if (this.applicationContext != null && this.applicationContext.containsBean(MVC_VALIDATOR_NAME)) {_				validator = this.applicationContext.getBean(MVC_VALIDATOR_NAME, Validator.class)__			}_			else if (ClassUtils.isPresent("javax.validation.Validator", getClass().getClassLoader())) {_				Class<?> clazz__				try {_					String className = "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean"__					clazz = ClassUtils.forName(className, AbstractMessageBrokerConfiguration.class.getClassLoader())__				}_				catch (Throwable ex) {_					throw new BeanInitializationException("Could not find default validator class", ex)__				}_				validator = (Validator) BeanUtils.instantiateClass(clazz)__			}_			else {_				validator = new Validator() {_					@Override_					public boolean supports(Class<?> clazz) {_						return false__					}_					@Override_					public void validate(@Nullable Object target, Errors errors) {_					}_				}__			}_		}_		return validator__	};return,a,link,org,springframework,validation,validator,org,springframework,validation,validators,instance,for,validating,code,payload,method,arguments,p,in,order,this,method,tries,to,get,a,validator,instance,ul,li,delegating,to,get,validator,first,li,li,if,none,returned,getting,an,existing,instance,with,its,well,known,name,mvc,validator,created,by,an,mvc,configuration,li,li,if,none,returned,checking,the,classpath,for,the,presence,of,a,jsr,303,implementation,before,creating,a,code,optional,validator,factory,bean,li,li,returning,a,no,op,validator,instance,li,ul;protected,validator,simp,validator,validator,validator,get,validator,if,validator,null,if,this,application,context,null,this,application,context,contains,bean,validator,this,application,context,get,bean,validator,class,else,if,class,utils,is,present,javax,validation,validator,get,class,get,class,loader,class,clazz,try,string,class,name,org,springframework,validation,beanvalidation,optional,validator,factory,bean,clazz,class,utils,for,name,class,name,abstract,message,broker,configuration,class,get,class,loader,catch,throwable,ex,throw,new,bean,initialization,exception,could,not,find,default,validator,class,ex,validator,validator,bean,utils,instantiate,class,clazz,else,validator,new,validator,override,public,boolean,supports,class,clazz,return,false,override,public,void,validate,nullable,object,target,errors,errors,return,validator
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1389129389;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1390409744;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1391219707;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1393555295;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1395007965;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1395290737;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1398144500;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1404880799;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1405011420;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1405378164;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1405378165;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1405696918;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1411159659;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1411389021;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1411699723;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1413225208;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1413848647;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1414092351;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1414619099;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1417596581;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1426789284;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1427403033;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1429286144;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1431458952;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1432316649;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1457638642;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1458078613;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1467677340;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1467726769;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1467730834;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1468948866;A hook for sub-classes to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,sub,classes,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1469614318;A hook for subclasses to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1469629315;A hook for subclasses to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1485810955;A hook for subclasses to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1495868221;A hook for subclasses to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1496242568;A hook for subclasses to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1496837955;A hook for subclasses to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1498780456;A hook for subclasses to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1500448076;A hook for subclasses to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1505821663;A hook for subclasses to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1516413763;A hook for subclasses to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1530174524;A hook for subclasses to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1531321803;A hook for subclasses to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1531942400;A hook for subclasses to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1532981251;A hook for subclasses to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> protected void configureClientOutboundChannel(ChannelRegistration registration);1534150594;A hook for subclasses to customize the message channel for messages from_the application or message broker to WebSocket clients.;protected void configureClientOutboundChannel(ChannelRegistration registration) {_	};a,hook,for,subclasses,to,customize,the,message,channel,for,messages,from,the,application,or,message,broker,to,web,socket,clients;protected,void,configure,client,outbound,channel,channel,registration,registration
AbstractMessageBrokerConfiguration -> public Validator getValidator();1388759133;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_        return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1388785016;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_        return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1389129389;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1390409744;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1391219707;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1393555295;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1395007965;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1395290737;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1398144500;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1404880799;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1405011420;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1405378164;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1405378165;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1405696918;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1411159659;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1411389021;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1411699723;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1413225208;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1413848647;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1414092351;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1414619099;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1417596581;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1426789284;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1427403033;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1429286144;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1431458952;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1432316649;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1457638642;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1458078613;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1467677340;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1467726769;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1467730834;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1468948866;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1469614318;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1469629315;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> public Validator getValidator();1485810955;Override this method to provide a custom {@link Validator}._@since 4.0.1;public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> @Nullable 	public Validator getValidator();1495868221;Override this method to provide a custom {@link Validator}._@since 4.0.1;@Nullable_	public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;nullable,public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> @Nullable 	public Validator getValidator();1496242568;Override this method to provide a custom {@link Validator}._@since 4.0.1;@Nullable_	public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;nullable,public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> @Nullable 	public Validator getValidator();1496837955;Override this method to provide a custom {@link Validator}._@since 4.0.1;@Nullable_	public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;nullable,public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> @Nullable 	public Validator getValidator();1498780456;Override this method to provide a custom {@link Validator}._@since 4.0.1;@Nullable_	public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;nullable,public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> @Nullable 	public Validator getValidator();1500448076;Override this method to provide a custom {@link Validator}._@since 4.0.1;@Nullable_	public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;nullable,public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> @Nullable 	public Validator getValidator();1505821663;Override this method to provide a custom {@link Validator}._@since 4.0.1;@Nullable_	public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;nullable,public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> @Nullable 	public Validator getValidator();1516413763;Override this method to provide a custom {@link Validator}._@since 4.0.1;@Nullable_	public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;nullable,public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> @Nullable 	public Validator getValidator();1530174524;Override this method to provide a custom {@link Validator}._@since 4.0.1;@Nullable_	public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;nullable,public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> @Nullable 	public Validator getValidator();1531321803;Override this method to provide a custom {@link Validator}._@since 4.0.1;@Nullable_	public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;nullable,public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> @Nullable 	public Validator getValidator();1531942400;Override this method to provide a custom {@link Validator}._@since 4.0.1;@Nullable_	public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;nullable,public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> @Nullable 	public Validator getValidator();1532981251;Override this method to provide a custom {@link Validator}._@since 4.0.1;@Nullable_	public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;nullable,public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> @Nullable 	public Validator getValidator();1534150594;Override this method to provide a custom {@link Validator}._@since 4.0.1;@Nullable_	public Validator getValidator() {_		return null__	};override,this,method,to,provide,a,custom,link,validator,since,4,0,1;nullable,public,validator,get,validator,return,null
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1389129389;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1390409744;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1391219707;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1393555295;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1395007965;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1395290737;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1398144500;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1404880799;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1405011420;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1405378164;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1405378165;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1405696918;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1411159659;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1411389021;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1411699723;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1413225208;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1413848647;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1414092351;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1414619099;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1417596581;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1426789284;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1427403033;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1429286144;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1431458952;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1432316649;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1457638642;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1458078613;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1467677340;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1467726769;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1467730834;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1468948866;A hook for sub-classes to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,sub,classes,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1469614318;A hook for subclasses to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,subclasses,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1469629315;A hook for subclasses to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,subclasses,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1485810955;A hook for subclasses to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,subclasses,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1495868221;A hook for subclasses to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,subclasses,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1496242568;A hook for subclasses to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,subclasses,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1496837955;A hook for subclasses to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,subclasses,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1498780456;A hook for subclasses to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,subclasses,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1500448076;A hook for subclasses to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,subclasses,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1505821663;A hook for subclasses to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,subclasses,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1516413763;A hook for subclasses to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,subclasses,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1530174524;A hook for subclasses to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,subclasses,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1531321803;A hook for subclasses to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,subclasses,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1531942400;A hook for subclasses to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,subclasses,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1532981251;A hook for subclasses to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,subclasses,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected void configureMessageBroker(MessageBrokerRegistry registry);1534150594;A hook for subclasses to customize message broker configuration through the_provided {@link MessageBrokerRegistry} instance.;protected void configureMessageBroker(MessageBrokerRegistry registry) {_	};a,hook,for,subclasses,to,customize,message,broker,configuration,through,the,provided,link,message,broker,registry,instance;protected,void,configure,message,broker,message,broker,registry,registry
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1385258957;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1385502674;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1385507478;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1386004713;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1386350678;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1386365044;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1386367529;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1388759133;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1388785016;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1389129389;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1390409744;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1391219707;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1393555295;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1395007965;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1395290737;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1398144500;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1404880799;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1405011420;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1405378164;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1405378165;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1405696918;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1411159659;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1411389021;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1411699723;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1413225208;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1413848647;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1414092351;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1414619099;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1417596581;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1426789284;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1427403033;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1429286144;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1431458952;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1432316649;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1457638642;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1458078613;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1467677340;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1467726769;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1467730834;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1468948866;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1469614318;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1469629315;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1485810955;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1495868221;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1496242568;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1496837955;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1498780456;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1500448076;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1505821663;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1516413763;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1530174524;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1531321803;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1531942400;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1532981251;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> protected AbstractMessageBrokerConfiguration();1534150594;Protected constructor.;protected AbstractMessageBrokerConfiguration() {_	};protected,constructor;protected,abstract,message,broker,configuration
AbstractMessageBrokerConfiguration -> @Nullable 	public final PathMatcher getPathMatcher();1496837955;Provide access to the configured PatchMatcher for access from other_configuration classes.;@Nullable_	public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;nullable,public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> @Nullable 	public final PathMatcher getPathMatcher();1498780456;Provide access to the configured PatchMatcher for access from other_configuration classes.;@Nullable_	public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;nullable,public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> @Nullable 	public final PathMatcher getPathMatcher();1500448076;Provide access to the configured PatchMatcher for access from other_configuration classes.;@Nullable_	public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;nullable,public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> @Nullable 	public final PathMatcher getPathMatcher();1505821663;Provide access to the configured PatchMatcher for access from other_configuration classes.;@Nullable_	public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;nullable,public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> @Nullable 	public final PathMatcher getPathMatcher();1516413763;Provide access to the configured PatchMatcher for access from other_configuration classes.;@Nullable_	public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;nullable,public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> @Nullable 	public final PathMatcher getPathMatcher();1530174524;Provide access to the configured PatchMatcher for access from other_configuration classes.;@Nullable_	public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;nullable,public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> @Nullable 	public final PathMatcher getPathMatcher();1531321803;Provide access to the configured PatchMatcher for access from other_configuration classes.;@Nullable_	public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;nullable,public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> @Nullable 	public final PathMatcher getPathMatcher();1531942400;Provide access to the configured PatchMatcher for access from other_configuration classes.;@Nullable_	public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;nullable,public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> @Nullable 	public final PathMatcher getPathMatcher();1532981251;Provide access to the configured PatchMatcher for access from other_configuration classes.;@Nullable_	public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;nullable,public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> @Nullable 	public final PathMatcher getPathMatcher();1534150594;Provide access to the configured PatchMatcher for access from other_configuration classes.;@Nullable_	public final PathMatcher getPathMatcher() {_		return getBrokerRegistry().getPathMatcher()__	};provide,access,to,the,configured,patch,matcher,for,access,from,other,configuration,classes;nullable,public,final,path,matcher,get,path,matcher,return,get,broker,registry,get,path,matcher
AbstractMessageBrokerConfiguration -> @Deprecated 	@SuppressWarnings("deprecation") 	protected org.springframework.messaging.simp.user.UserSessionRegistry userSessionRegistry();1431458952;As of 4.2, UserSessionRegistry is deprecated in favor of SimpUserRegistry_exposing information about all connected users. The MultiServerUserRegistry_implementation in combination with UserRegistryMessageHandler can be used_to share user registries across multiple servers.;@Deprecated_	@SuppressWarnings("deprecation")_	protected org.springframework.messaging.simp.user.UserSessionRegistry userSessionRegistry() {_		return null__	};as,of,4,2,user,session,registry,is,deprecated,in,favor,of,simp,user,registry,exposing,information,about,all,connected,users,the,multi,server,user,registry,implementation,in,combination,with,user,registry,message,handler,can,be,used,to,share,user,registries,across,multiple,servers;deprecated,suppress,warnings,deprecation,protected,org,springframework,messaging,simp,user,user,session,registry,user,session,registry,return,null
AbstractMessageBrokerConfiguration -> @Deprecated 	@SuppressWarnings("deprecation") 	protected org.springframework.messaging.simp.user.UserSessionRegistry userSessionRegistry();1432316649;As of 4.2, UserSessionRegistry is deprecated in favor of SimpUserRegistry_exposing information about all connected users. The MultiServerUserRegistry_implementation in combination with UserRegistryMessageHandler can be used_to share user registries across multiple servers.;@Deprecated_	@SuppressWarnings("deprecation")_	protected org.springframework.messaging.simp.user.UserSessionRegistry userSessionRegistry() {_		return null__	};as,of,4,2,user,session,registry,is,deprecated,in,favor,of,simp,user,registry,exposing,information,about,all,connected,users,the,multi,server,user,registry,implementation,in,combination,with,user,registry,message,handler,can,be,used,to,share,user,registries,across,multiple,servers;deprecated,suppress,warnings,deprecation,protected,org,springframework,messaging,simp,user,user,session,registry,user,session,registry,return,null
AbstractMessageBrokerConfiguration -> @Deprecated 	@SuppressWarnings("deprecation") 	protected org.springframework.messaging.simp.user.UserSessionRegistry userSessionRegistry();1457638642;As of 4.2, UserSessionRegistry is deprecated in favor of SimpUserRegistry_exposing information about all connected users. The MultiServerUserRegistry_implementation in combination with UserRegistryMessageHandler can be used_to share user registries across multiple servers.;@Deprecated_	@SuppressWarnings("deprecation")_	protected org.springframework.messaging.simp.user.UserSessionRegistry userSessionRegistry() {_		return null__	};as,of,4,2,user,session,registry,is,deprecated,in,favor,of,simp,user,registry,exposing,information,about,all,connected,users,the,multi,server,user,registry,implementation,in,combination,with,user,registry,message,handler,can,be,used,to,share,user,registries,across,multiple,servers;deprecated,suppress,warnings,deprecation,protected,org,springframework,messaging,simp,user,user,session,registry,user,session,registry,return,null
AbstractMessageBrokerConfiguration -> @Deprecated 	@SuppressWarnings("deprecation") 	protected org.springframework.messaging.simp.user.UserSessionRegistry userSessionRegistry();1458078613;As of 4.2, UserSessionRegistry is deprecated in favor of SimpUserRegistry_exposing information about all connected users. The MultiServerUserRegistry_implementation in combination with UserRegistryMessageHandler can be used_to share user registries across multiple servers.;@Deprecated_	@SuppressWarnings("deprecation")_	protected org.springframework.messaging.simp.user.UserSessionRegistry userSessionRegistry() {_		return null__	};as,of,4,2,user,session,registry,is,deprecated,in,favor,of,simp,user,registry,exposing,information,about,all,connected,users,the,multi,server,user,registry,implementation,in,combination,with,user,registry,message,handler,can,be,used,to,share,user,registries,across,multiple,servers;deprecated,suppress,warnings,deprecation,protected,org,springframework,messaging,simp,user,user,session,registry,user,session,registry,return,null
AbstractMessageBrokerConfiguration -> @Deprecated 	@SuppressWarnings("deprecation") 	protected org.springframework.messaging.simp.user.UserSessionRegistry userSessionRegistry();1467677340;As of 4.2, UserSessionRegistry is deprecated in favor of SimpUserRegistry_exposing information about all connected users. The MultiServerUserRegistry_implementation in combination with UserRegistryMessageHandler can be used_to share user registries across multiple servers.;@Deprecated_	@SuppressWarnings("deprecation")_	protected org.springframework.messaging.simp.user.UserSessionRegistry userSessionRegistry() {_		return null__	};as,of,4,2,user,session,registry,is,deprecated,in,favor,of,simp,user,registry,exposing,information,about,all,connected,users,the,multi,server,user,registry,implementation,in,combination,with,user,registry,message,handler,can,be,used,to,share,user,registries,across,multiple,servers;deprecated,suppress,warnings,deprecation,protected,org,springframework,messaging,simp,user,user,session,registry,user,session,registry,return,null
