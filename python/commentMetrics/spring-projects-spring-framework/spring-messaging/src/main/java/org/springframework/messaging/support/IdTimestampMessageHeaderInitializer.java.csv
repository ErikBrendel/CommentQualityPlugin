commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Configure the IdGenerator strategy to initialize {@code MessageHeaderAccessor}  * instances with.  * <p>By default this property is set to {@code null} in which case the default  * IdGenerator of {@link org.springframework.messaging.MessageHeaders} is used.  * <p>To have no ids generated at all, see {@link #setDisableIdGeneration()}.  */ ;/**  * Configure the IdGenerator strategy to initialize {@code MessageHeaderAccessor}  * instances with.  * <p>By default this property is set to {@code null} in which case the default  * IdGenerator of {@link org.springframework.messaging.MessageHeaders} is used.  * <p>To have no ids generated at all, see {@link #setDisableIdGeneration()}.  */ public void setIdGenerator(@Nullable IdGenerator idGenerator) {     this.idGenerator = idGenerator. }
true;public;0;4;/**  * Return the configured {@code IdGenerator}, if any.  */ ;/**  * Return the configured {@code IdGenerator}, if any.  */ @Nullable public IdGenerator getIdGenerator() {     return this.idGenerator. }
true;public;0;3;/**  * A shortcut for calling {@link #setIdGenerator} with an id generation strategy  * to disable id generation completely.  */ ;/**  * A shortcut for calling {@link #setIdGenerator} with an id generation strategy  * to disable id generation completely.  */ public void setDisableIdGeneration() {     this.idGenerator = ID_VALUE_NONE_GENERATOR. }
true;public;1;3;/**  * Whether to enable the automatic addition of the  * {@link org.springframework.messaging.MessageHeaders#TIMESTAMP} header on  * {@code MessageHeaderAccessor} instances being initialized.  * <p>By default this property is set to false.  */ ;/**  * Whether to enable the automatic addition of the  * {@link org.springframework.messaging.MessageHeaders#TIMESTAMP} header on  * {@code MessageHeaderAccessor} instances being initialized.  * <p>By default this property is set to false.  */ public void setEnableTimestamp(boolean enableTimestamp) {     this.enableTimestamp = enableTimestamp. }
true;public;0;3;/**  * Return whether the timestamp header is enabled or not.  */ ;/**  * Return whether the timestamp header is enabled or not.  */ public boolean isEnableTimestamp() {     return this.enableTimestamp. }
false;public;1;8;;@Override public void initHeaders(MessageHeaderAccessor headerAccessor) {     IdGenerator idGenerator = getIdGenerator().     if (idGenerator != null) {         headerAccessor.setIdGenerator(idGenerator).     }     headerAccessor.setEnableTimestamp(isEnableTimestamp()). }
