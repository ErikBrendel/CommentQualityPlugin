# id;timestamp;commentText;codeText;commentWords;codeWords
ReactorNettyTcpStompClient -> public ListenableFuture<StompSession> connect(@Nullable StompHeaders connectHeaders, StompSessionHandler handler);1496259743;An overloaded version of {@link #connect(StompSessionHandler)} that_accepts headers to use for the STOMP CONNECT frame._@param connectHeaders headers to add to the CONNECT frame_@param handler the handler for the STOMP session_@return ListenableFuture for access to the session when ready for use;public ListenableFuture<StompSession> connect(@Nullable StompHeaders connectHeaders, StompSessionHandler handler) {_		ConnectionHandlingStompSession session = createSession(connectHeaders, handler)__		this.tcpClient.connect(session)__		return session.getSessionFuture()__	};an,overloaded,version,of,link,connect,stomp,session,handler,that,accepts,headers,to,use,for,the,stomp,connect,frame,param,connect,headers,headers,to,add,to,the,connect,frame,param,handler,the,handler,for,the,stomp,session,return,listenable,future,for,access,to,the,session,when,ready,for,use;public,listenable,future,stomp,session,connect,nullable,stomp,headers,connect,headers,stomp,session,handler,handler,connection,handling,stomp,session,session,create,session,connect,headers,handler,this,tcp,client,connect,session,return,session,get,session,future
ReactorNettyTcpStompClient -> public ListenableFuture<StompSession> connect(@Nullable StompHeaders connectHeaders, StompSessionHandler handler);1518167476;An overloaded version of {@link #connect(StompSessionHandler)} that_accepts headers to use for the STOMP CONNECT frame._@param connectHeaders headers to add to the CONNECT frame_@param handler the handler for the STOMP session_@return ListenableFuture for access to the session when ready for use;public ListenableFuture<StompSession> connect(@Nullable StompHeaders connectHeaders, StompSessionHandler handler) {_		ConnectionHandlingStompSession session = createSession(connectHeaders, handler)__		this.tcpClient.connect(session)__		return session.getSessionFuture()__	};an,overloaded,version,of,link,connect,stomp,session,handler,that,accepts,headers,to,use,for,the,stomp,connect,frame,param,connect,headers,headers,to,add,to,the,connect,frame,param,handler,the,handler,for,the,stomp,session,return,listenable,future,for,access,to,the,session,when,ready,for,use;public,listenable,future,stomp,session,connect,nullable,stomp,headers,connect,headers,stomp,session,handler,handler,connection,handling,stomp,session,session,create,session,connect,headers,handler,this,tcp,client,connect,session,return,session,get,session,future
ReactorNettyTcpStompClient -> public ListenableFuture<StompSession> connect(@Nullable StompHeaders connectHeaders, StompSessionHandler handler);1518167818;An overloaded version of {@link #connect(StompSessionHandler)} that_accepts headers to use for the STOMP CONNECT frame._@param connectHeaders headers to add to the CONNECT frame_@param handler the handler for the STOMP session_@return ListenableFuture for access to the session when ready for use;public ListenableFuture<StompSession> connect(@Nullable StompHeaders connectHeaders, StompSessionHandler handler) {_		ConnectionHandlingStompSession session = createSession(connectHeaders, handler)__		this.tcpClient.connect(session)__		return session.getSessionFuture()__	};an,overloaded,version,of,link,connect,stomp,session,handler,that,accepts,headers,to,use,for,the,stomp,connect,frame,param,connect,headers,headers,to,add,to,the,connect,frame,param,handler,the,handler,for,the,stomp,session,return,listenable,future,for,access,to,the,session,when,ready,for,use;public,listenable,future,stomp,session,connect,nullable,stomp,headers,connect,headers,stomp,session,handler,handler,connection,handling,stomp,session,session,create,session,connect,headers,handler,this,tcp,client,connect,session,return,session,get,session,future
ReactorNettyTcpStompClient -> public ListenableFuture<StompSession> connect(@Nullable StompHeaders connectHeaders, StompSessionHandler handler);1526485251;An overloaded version of {@link #connect(StompSessionHandler)} that_accepts headers to use for the STOMP CONNECT frame._@param connectHeaders headers to add to the CONNECT frame_@param handler the handler for the STOMP session_@return ListenableFuture for access to the session when ready for use;public ListenableFuture<StompSession> connect(@Nullable StompHeaders connectHeaders, StompSessionHandler handler) {_		ConnectionHandlingStompSession session = createSession(connectHeaders, handler)__		this.tcpClient.connect(session)__		return session.getSessionFuture()__	};an,overloaded,version,of,link,connect,stomp,session,handler,that,accepts,headers,to,use,for,the,stomp,connect,frame,param,connect,headers,headers,to,add,to,the,connect,frame,param,handler,the,handler,for,the,stomp,session,return,listenable,future,for,access,to,the,session,when,ready,for,use;public,listenable,future,stomp,session,connect,nullable,stomp,headers,connect,headers,stomp,session,handler,handler,connection,handling,stomp,session,session,create,session,connect,headers,handler,this,tcp,client,connect,session,return,session,get,session,future
ReactorNettyTcpStompClient -> public ListenableFuture<StompSession> connect(@Nullable StompHeaders connectHeaders, StompSessionHandler handler);1530174524;An overloaded version of {@link #connect(StompSessionHandler)} that_accepts headers to use for the STOMP CONNECT frame._@param connectHeaders headers to add to the CONNECT frame_@param handler the handler for the STOMP session_@return a ListenableFuture for access to the session when ready for use;public ListenableFuture<StompSession> connect(@Nullable StompHeaders connectHeaders, StompSessionHandler handler) {_		ConnectionHandlingStompSession session = createSession(connectHeaders, handler)__		this.tcpClient.connect(session)__		return session.getSessionFuture()__	};an,overloaded,version,of,link,connect,stomp,session,handler,that,accepts,headers,to,use,for,the,stomp,connect,frame,param,connect,headers,headers,to,add,to,the,connect,frame,param,handler,the,handler,for,the,stomp,session,return,a,listenable,future,for,access,to,the,session,when,ready,for,use;public,listenable,future,stomp,session,connect,nullable,stomp,headers,connect,headers,stomp,session,handler,handler,connection,handling,stomp,session,session,create,session,connect,headers,handler,this,tcp,client,connect,session,return,session,get,session,future
ReactorNettyTcpStompClient -> public ListenableFuture<StompSession> connect(@Nullable StompHeaders connectHeaders, StompSessionHandler handler);1531942400;An overloaded version of {@link #connect(StompSessionHandler)} that_accepts headers to use for the STOMP CONNECT frame._@param connectHeaders headers to add to the CONNECT frame_@param handler the handler for the STOMP session_@return a ListenableFuture for access to the session when ready for use;public ListenableFuture<StompSession> connect(@Nullable StompHeaders connectHeaders, StompSessionHandler handler) {_		ConnectionHandlingStompSession session = createSession(connectHeaders, handler)__		this.tcpClient.connect(session)__		return session.getSessionFuture()__	};an,overloaded,version,of,link,connect,stomp,session,handler,that,accepts,headers,to,use,for,the,stomp,connect,frame,param,connect,headers,headers,to,add,to,the,connect,frame,param,handler,the,handler,for,the,stomp,session,return,a,listenable,future,for,access,to,the,session,when,ready,for,use;public,listenable,future,stomp,session,connect,nullable,stomp,headers,connect,headers,stomp,session,handler,handler,connection,handling,stomp,session,session,create,session,connect,headers,handler,this,tcp,client,connect,session,return,session,get,session,future
ReactorNettyTcpStompClient -> public void shutdown();1480558671;Shut down the client and release resources.;public void shutdown() {_		this.tcpClient.shutdown()__	};shut,down,the,client,and,release,resources;public,void,shutdown,this,tcp,client,shutdown
ReactorNettyTcpStompClient -> public void shutdown();1496259743;Shut down the client and release resources.;public void shutdown() {_		this.tcpClient.shutdown()__	};shut,down,the,client,and,release,resources;public,void,shutdown,this,tcp,client,shutdown
ReactorNettyTcpStompClient -> public void shutdown();1518167476;Shut down the client and release resources.;public void shutdown() {_		this.tcpClient.shutdown()__	};shut,down,the,client,and,release,resources;public,void,shutdown,this,tcp,client,shutdown
ReactorNettyTcpStompClient -> public void shutdown();1518167818;Shut down the client and release resources.;public void shutdown() {_		this.tcpClient.shutdown()__	};shut,down,the,client,and,release,resources;public,void,shutdown,this,tcp,client,shutdown
ReactorNettyTcpStompClient -> public void shutdown();1526485251;Shut down the client and release resources.;public void shutdown() {_		this.tcpClient.shutdown()__	};shut,down,the,client,and,release,resources;public,void,shutdown,this,tcp,client,shutdown
ReactorNettyTcpStompClient -> public void shutdown();1530174524;Shut down the client and release resources.;public void shutdown() {_		this.tcpClient.shutdown()__	};shut,down,the,client,and,release,resources;public,void,shutdown,this,tcp,client,shutdown
ReactorNettyTcpStompClient -> public void shutdown();1531942400;Shut down the client and release resources.;public void shutdown() {_		this.tcpClient.shutdown()__	};shut,down,the,client,and,release,resources;public,void,shutdown,this,tcp,client,shutdown
ReactorNettyTcpStompClient -> public ListenableFuture<StompSession> connect(StompSessionHandler handler);1480558671;Connect and notify the given {@link StompSessionHandler} when connected_on the STOMP level._@param handler the handler for the STOMP session_@return ListenableFuture for access to the session when ready for use;public ListenableFuture<StompSession> connect(StompSessionHandler handler) {_		return connect(null, handler)__	};connect,and,notify,the,given,link,stomp,session,handler,when,connected,on,the,stomp,level,param,handler,the,handler,for,the,stomp,session,return,listenable,future,for,access,to,the,session,when,ready,for,use;public,listenable,future,stomp,session,connect,stomp,session,handler,handler,return,connect,null,handler
ReactorNettyTcpStompClient -> public ListenableFuture<StompSession> connect(StompSessionHandler handler);1496259743;Connect and notify the given {@link StompSessionHandler} when connected_on the STOMP level._@param handler the handler for the STOMP session_@return ListenableFuture for access to the session when ready for use;public ListenableFuture<StompSession> connect(StompSessionHandler handler) {_		return connect(null, handler)__	};connect,and,notify,the,given,link,stomp,session,handler,when,connected,on,the,stomp,level,param,handler,the,handler,for,the,stomp,session,return,listenable,future,for,access,to,the,session,when,ready,for,use;public,listenable,future,stomp,session,connect,stomp,session,handler,handler,return,connect,null,handler
ReactorNettyTcpStompClient -> public ListenableFuture<StompSession> connect(StompSessionHandler handler);1518167476;Connect and notify the given {@link StompSessionHandler} when connected_on the STOMP level._@param handler the handler for the STOMP session_@return ListenableFuture for access to the session when ready for use;public ListenableFuture<StompSession> connect(StompSessionHandler handler) {_		return connect(null, handler)__	};connect,and,notify,the,given,link,stomp,session,handler,when,connected,on,the,stomp,level,param,handler,the,handler,for,the,stomp,session,return,listenable,future,for,access,to,the,session,when,ready,for,use;public,listenable,future,stomp,session,connect,stomp,session,handler,handler,return,connect,null,handler
ReactorNettyTcpStompClient -> public ListenableFuture<StompSession> connect(StompSessionHandler handler);1518167818;Connect and notify the given {@link StompSessionHandler} when connected_on the STOMP level._@param handler the handler for the STOMP session_@return ListenableFuture for access to the session when ready for use;public ListenableFuture<StompSession> connect(StompSessionHandler handler) {_		return connect(null, handler)__	};connect,and,notify,the,given,link,stomp,session,handler,when,connected,on,the,stomp,level,param,handler,the,handler,for,the,stomp,session,return,listenable,future,for,access,to,the,session,when,ready,for,use;public,listenable,future,stomp,session,connect,stomp,session,handler,handler,return,connect,null,handler
ReactorNettyTcpStompClient -> public ListenableFuture<StompSession> connect(StompSessionHandler handler);1526485251;Connect and notify the given {@link StompSessionHandler} when connected_on the STOMP level._@param handler the handler for the STOMP session_@return ListenableFuture for access to the session when ready for use;public ListenableFuture<StompSession> connect(StompSessionHandler handler) {_		return connect(null, handler)__	};connect,and,notify,the,given,link,stomp,session,handler,when,connected,on,the,stomp,level,param,handler,the,handler,for,the,stomp,session,return,listenable,future,for,access,to,the,session,when,ready,for,use;public,listenable,future,stomp,session,connect,stomp,session,handler,handler,return,connect,null,handler
ReactorNettyTcpStompClient -> public ListenableFuture<StompSession> connect(StompSessionHandler handler);1530174524;Connect and notify the given {@link StompSessionHandler} when connected_on the STOMP level._@param handler the handler for the STOMP session_@return a ListenableFuture for access to the session when ready for use;public ListenableFuture<StompSession> connect(StompSessionHandler handler) {_		return connect(null, handler)__	};connect,and,notify,the,given,link,stomp,session,handler,when,connected,on,the,stomp,level,param,handler,the,handler,for,the,stomp,session,return,a,listenable,future,for,access,to,the,session,when,ready,for,use;public,listenable,future,stomp,session,connect,stomp,session,handler,handler,return,connect,null,handler
ReactorNettyTcpStompClient -> public ListenableFuture<StompSession> connect(StompSessionHandler handler);1531942400;Connect and notify the given {@link StompSessionHandler} when connected_on the STOMP level._@param handler the handler for the STOMP session_@return a ListenableFuture for access to the session when ready for use;public ListenableFuture<StompSession> connect(StompSessionHandler handler) {_		return connect(null, handler)__	};connect,and,notify,the,given,link,stomp,session,handler,when,connected,on,the,stomp,level,param,handler,the,handler,for,the,stomp,session,return,a,listenable,future,for,access,to,the,session,when,ready,for,use;public,listenable,future,stomp,session,connect,stomp,session,handler,handler,return,connect,null,handler
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient(String host, int port);1480558671;Create an instance with the given host and port._@param host the host_@param port the port;public ReactorNettyTcpStompClient(String host, int port) {_		this.tcpClient = new ReactorNettyTcpClient<byte[]>(host, port, new StompReactorNettyCodec())__	};create,an,instance,with,the,given,host,and,port,param,host,the,host,param,port,the,port;public,reactor,netty,tcp,stomp,client,string,host,int,port,this,tcp,client,new,reactor,netty,tcp,client,byte,host,port,new,stomp,reactor,netty,codec
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient(String host, int port);1496259743;Create an instance with the given host and port._@param host the host_@param port the port;public ReactorNettyTcpStompClient(String host, int port) {_		this.tcpClient = new ReactorNettyTcpClient<byte[]>(host, port, new StompReactorNettyCodec())__	};create,an,instance,with,the,given,host,and,port,param,host,the,host,param,port,the,port;public,reactor,netty,tcp,stomp,client,string,host,int,port,this,tcp,client,new,reactor,netty,tcp,client,byte,host,port,new,stomp,reactor,netty,codec
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient(String host, int port);1518167476;Create an instance with the given host and port._@param host the host_@param port the port;public ReactorNettyTcpStompClient(String host, int port) {_		this.tcpClient = new ReactorNettyTcpClient<>(host, port, new StompReactorNettyCodec())__	};create,an,instance,with,the,given,host,and,port,param,host,the,host,param,port,the,port;public,reactor,netty,tcp,stomp,client,string,host,int,port,this,tcp,client,new,reactor,netty,tcp,client,host,port,new,stomp,reactor,netty,codec
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient(String host, int port);1518167818;Create an instance with the given host and port._@param host the host_@param port the port;public ReactorNettyTcpStompClient(String host, int port) {_		this.tcpClient = new ReactorNettyTcpClient<>(host, port, new StompReactorNettyCodec())__	};create,an,instance,with,the,given,host,and,port,param,host,the,host,param,port,the,port;public,reactor,netty,tcp,stomp,client,string,host,int,port,this,tcp,client,new,reactor,netty,tcp,client,host,port,new,stomp,reactor,netty,codec
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient(String host, int port);1526485251;Create an instance with the given host and port._@param host the host_@param port the port;public ReactorNettyTcpStompClient(String host, int port) {_		this.tcpClient = new ReactorNettyTcpClient<>(host, port, new StompReactorNettyCodec())__	};create,an,instance,with,the,given,host,and,port,param,host,the,host,param,port,the,port;public,reactor,netty,tcp,stomp,client,string,host,int,port,this,tcp,client,new,reactor,netty,tcp,client,host,port,new,stomp,reactor,netty,codec
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient(String host, int port);1530174524;Create an instance with the given host and port._@param host the host_@param port the port;public ReactorNettyTcpStompClient(String host, int port) {_		this.tcpClient = new ReactorNettyTcpClient<>(host, port, new StompReactorNettyCodec())__	};create,an,instance,with,the,given,host,and,port,param,host,the,host,param,port,the,port;public,reactor,netty,tcp,stomp,client,string,host,int,port,this,tcp,client,new,reactor,netty,tcp,client,host,port,new,stomp,reactor,netty,codec
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient(String host, int port);1531942400;Create an instance with the given host and port._@param host the host_@param port the port;public ReactorNettyTcpStompClient(String host, int port) {_		this.tcpClient = initTcpClient(host, port)__	};create,an,instance,with,the,given,host,and,port,param,host,the,host,param,port,the,port;public,reactor,netty,tcp,stomp,client,string,host,int,port,this,tcp,client,init,tcp,client,host,port
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient();1480558671;Create an instance with host "127.0.0.1" and port 61613.;public ReactorNettyTcpStompClient() {_		this("127.0.0.1", 61613)__	};create,an,instance,with,host,127,0,0,1,and,port,61613;public,reactor,netty,tcp,stomp,client,this,127,0,0,1,61613
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient();1496259743;Create an instance with host "127.0.0.1" and port 61613.;public ReactorNettyTcpStompClient() {_		this("127.0.0.1", 61613)__	};create,an,instance,with,host,127,0,0,1,and,port,61613;public,reactor,netty,tcp,stomp,client,this,127,0,0,1,61613
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient();1518167476;Create an instance with host "127.0.0.1" and port 61613.;public ReactorNettyTcpStompClient() {_		this("127.0.0.1", 61613)__	};create,an,instance,with,host,127,0,0,1,and,port,61613;public,reactor,netty,tcp,stomp,client,this,127,0,0,1,61613
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient();1518167818;Create an instance with host "127.0.0.1" and port 61613.;public ReactorNettyTcpStompClient() {_		this("127.0.0.1", 61613)__	};create,an,instance,with,host,127,0,0,1,and,port,61613;public,reactor,netty,tcp,stomp,client,this,127,0,0,1,61613
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient();1526485251;Create an instance with host "127.0.0.1" and port 61613.;public ReactorNettyTcpStompClient() {_		this("127.0.0.1", 61613)__	};create,an,instance,with,host,127,0,0,1,and,port,61613;public,reactor,netty,tcp,stomp,client,this,127,0,0,1,61613
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient();1530174524;Create an instance with host "127.0.0.1" and port 61613.;public ReactorNettyTcpStompClient() {_		this("127.0.0.1", 61613)__	};create,an,instance,with,host,127,0,0,1,and,port,61613;public,reactor,netty,tcp,stomp,client,this,127,0,0,1,61613
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient();1531942400;Create an instance with host "127.0.0.1" and port 61613.;public ReactorNettyTcpStompClient() {_		this("127.0.0.1", 61613)__	};create,an,instance,with,host,127,0,0,1,and,port,61613;public,reactor,netty,tcp,stomp,client,this,127,0,0,1,61613
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient(TcpOperations<byte[]> tcpClient);1480558671;Create an instance with a pre-configured TCP client._@param tcpClient the client to use;public ReactorNettyTcpStompClient(TcpOperations<byte[]> tcpClient) {_		Assert.notNull(tcpClient, "'tcpClient' is required")__		this.tcpClient = tcpClient__	};create,an,instance,with,a,pre,configured,tcp,client,param,tcp,client,the,client,to,use;public,reactor,netty,tcp,stomp,client,tcp,operations,byte,tcp,client,assert,not,null,tcp,client,tcp,client,is,required,this,tcp,client,tcp,client
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient(TcpOperations<byte[]> tcpClient);1496259743;Create an instance with a pre-configured TCP client._@param tcpClient the client to use;public ReactorNettyTcpStompClient(TcpOperations<byte[]> tcpClient) {_		Assert.notNull(tcpClient, "'tcpClient' is required")__		this.tcpClient = tcpClient__	};create,an,instance,with,a,pre,configured,tcp,client,param,tcp,client,the,client,to,use;public,reactor,netty,tcp,stomp,client,tcp,operations,byte,tcp,client,assert,not,null,tcp,client,tcp,client,is,required,this,tcp,client,tcp,client
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient(TcpOperations<byte[]> tcpClient);1518167476;Create an instance with a pre-configured TCP client._@param tcpClient the client to use;public ReactorNettyTcpStompClient(TcpOperations<byte[]> tcpClient) {_		Assert.notNull(tcpClient, "'tcpClient' is required")__		this.tcpClient = tcpClient__	};create,an,instance,with,a,pre,configured,tcp,client,param,tcp,client,the,client,to,use;public,reactor,netty,tcp,stomp,client,tcp,operations,byte,tcp,client,assert,not,null,tcp,client,tcp,client,is,required,this,tcp,client,tcp,client
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient(TcpOperations<byte[]> tcpClient);1518167818;Create an instance with a pre-configured TCP client._@param tcpClient the client to use;public ReactorNettyTcpStompClient(TcpOperations<byte[]> tcpClient) {_		Assert.notNull(tcpClient, "'tcpClient' is required")__		this.tcpClient = tcpClient__	};create,an,instance,with,a,pre,configured,tcp,client,param,tcp,client,the,client,to,use;public,reactor,netty,tcp,stomp,client,tcp,operations,byte,tcp,client,assert,not,null,tcp,client,tcp,client,is,required,this,tcp,client,tcp,client
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient(TcpOperations<byte[]> tcpClient);1526485251;Create an instance with a pre-configured TCP client._@param tcpClient the client to use;public ReactorNettyTcpStompClient(TcpOperations<byte[]> tcpClient) {_		Assert.notNull(tcpClient, "'tcpClient' is required")__		this.tcpClient = tcpClient__	};create,an,instance,with,a,pre,configured,tcp,client,param,tcp,client,the,client,to,use;public,reactor,netty,tcp,stomp,client,tcp,operations,byte,tcp,client,assert,not,null,tcp,client,tcp,client,is,required,this,tcp,client,tcp,client
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient(TcpOperations<byte[]> tcpClient);1530174524;Create an instance with a pre-configured TCP client._@param tcpClient the client to use;public ReactorNettyTcpStompClient(TcpOperations<byte[]> tcpClient) {_		Assert.notNull(tcpClient, "'tcpClient' is required")__		this.tcpClient = tcpClient__	};create,an,instance,with,a,pre,configured,tcp,client,param,tcp,client,the,client,to,use;public,reactor,netty,tcp,stomp,client,tcp,operations,byte,tcp,client,assert,not,null,tcp,client,tcp,client,is,required,this,tcp,client,tcp,client
ReactorNettyTcpStompClient -> public ReactorNettyTcpStompClient(TcpOperations<byte[]> tcpClient);1531942400;Create an instance with a pre-configured TCP client._@param tcpClient the client to use;public ReactorNettyTcpStompClient(TcpOperations<byte[]> tcpClient) {_		Assert.notNull(tcpClient, "'tcpClient' is required")__		this.tcpClient = tcpClient__	};create,an,instance,with,a,pre,configured,tcp,client,param,tcp,client,the,client,to,use;public,reactor,netty,tcp,stomp,client,tcp,operations,byte,tcp,client,assert,not,null,tcp,client,tcp,client,is,required,this,tcp,client,tcp,client
