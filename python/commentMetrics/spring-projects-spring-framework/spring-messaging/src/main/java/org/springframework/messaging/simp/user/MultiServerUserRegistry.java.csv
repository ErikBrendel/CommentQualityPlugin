# id;timestamp;commentText;codeText;commentWords;codeWords
MultiServerUserRegistry -> UserRegistrySnapshot -> public UserRegistrySnapshot(String id, SimpUserRegistry registry);1457638642;Constructor to create DTO from a local user registry.;public UserRegistrySnapshot(String id, SimpUserRegistry registry) {_			this.id = id__			Set<SimpUser> users = registry.getUsers()__			this.users = new HashMap<String, TransferSimpUser>(users.size())__			for (SimpUser user : users) {_				this.users.put(user.getName(), new TransferSimpUser(user))__			}_		};constructor,to,create,dto,from,a,local,user,registry;public,user,registry,snapshot,string,id,simp,user,registry,registry,this,id,id,set,simp,user,users,registry,get,users,this,users,new,hash,map,string,transfer,simp,user,users,size,for,simp,user,user,users,this,users,put,user,get,name,new,transfer,simp,user,user
MultiServerUserRegistry -> UserRegistrySnapshot -> public UserRegistrySnapshot(String id, SimpUserRegistry registry);1457638642;Constructor to create DTO from a local user registry.;public UserRegistrySnapshot(String id, SimpUserRegistry registry) {_			this.id = id__			Set<SimpUser> users = registry.getUsers()__			this.users = new HashMap<String, TransferSimpUser>(users.size())__			for (SimpUser user : users) {_				this.users.put(user.getName(), new TransferSimpUser(user))__			}_		};constructor,to,create,dto,from,a,local,user,registry;public,user,registry,snapshot,string,id,simp,user,registry,registry,this,id,id,set,simp,user,users,registry,get,users,this,users,new,hash,map,string,transfer,simp,user,users,size,for,simp,user,user,users,this,users,put,user,get,name,new,transfer,simp,user,user
MultiServerUserRegistry -> UserRegistrySnapshot -> public UserRegistrySnapshot(String id, SimpUserRegistry registry);1467730834;Constructor to create DTO from a local user registry.;public UserRegistrySnapshot(String id, SimpUserRegistry registry) {_			this.id = id__			Set<SimpUser> users = registry.getUsers()__			this.users = new HashMap<>(users.size())__			for (SimpUser user : users) {_				this.users.put(user.getName(), new TransferSimpUser(user))__			}_		};constructor,to,create,dto,from,a,local,user,registry;public,user,registry,snapshot,string,id,simp,user,registry,registry,this,id,id,set,simp,user,users,registry,get,users,this,users,new,hash,map,users,size,for,simp,user,user,users,this,users,put,user,get,name,new,transfer,simp,user,user
MultiServerUserRegistry -> UserRegistrySnapshot -> public UserRegistrySnapshot(String id, SimpUserRegistry registry);1470831642;Constructor to create DTO from a local user registry.;public UserRegistrySnapshot(String id, SimpUserRegistry registry) {_			this.id = id__			Set<SimpUser> users = registry.getUsers()__			this.users = new HashMap<>(users.size())__			for (SimpUser user : users) {_				this.users.put(user.getName(), new TransferSimpUser(user))__			}_		};constructor,to,create,dto,from,a,local,user,registry;public,user,registry,snapshot,string,id,simp,user,registry,registry,this,id,id,set,simp,user,users,registry,get,users,this,users,new,hash,map,users,size,for,simp,user,user,users,this,users,put,user,get,name,new,transfer,simp,user,user
MultiServerUserRegistry -> UserRegistrySnapshot -> public UserRegistrySnapshot(String id, SimpUserRegistry registry);1470840141;Constructor to create DTO from a local user registry.;public UserRegistrySnapshot(String id, SimpUserRegistry registry) {_			this.id = id__			Set<SimpUser> users = registry.getUsers()__			this.users = new HashMap<>(users.size())__			for (SimpUser user : users) {_				this.users.put(user.getName(), new TransferSimpUser(user))__			}_		};constructor,to,create,dto,from,a,local,user,registry;public,user,registry,snapshot,string,id,simp,user,registry,registry,this,id,id,set,simp,user,users,registry,get,users,this,users,new,hash,map,users,size,for,simp,user,user,users,this,users,put,user,get,name,new,transfer,simp,user,user
MultiServerUserRegistry -> UserRegistrySnapshot -> public UserRegistrySnapshot(String id, SimpUserRegistry registry);1477045587;Constructor to create DTO from a local user registry.;public UserRegistrySnapshot(String id, SimpUserRegistry registry) {_			this.id = id__			Set<SimpUser> users = registry.getUsers()__			this.users = new HashMap<>(users.size())__			for (SimpUser user : users) {_				this.users.put(user.getName(), new TransferSimpUser(user))__			}_		};constructor,to,create,dto,from,a,local,user,registry;public,user,registry,snapshot,string,id,simp,user,registry,registry,this,id,id,set,simp,user,users,registry,get,users,this,users,new,hash,map,users,size,for,simp,user,user,users,this,users,put,user,get,name,new,transfer,simp,user,user
MultiServerUserRegistry -> UserRegistrySnapshot -> public UserRegistrySnapshot(String id, SimpUserRegistry registry);1479759282;Constructor to create DTO from a local user registry.;public UserRegistrySnapshot(String id, SimpUserRegistry registry) {_			this.id = id__			Set<SimpUser> users = registry.getUsers()__			this.users = new HashMap<>(users.size())__			for (SimpUser user : users) {_				this.users.put(user.getName(), new TransferSimpUser(user))__			}_		};constructor,to,create,dto,from,a,local,user,registry;public,user,registry,snapshot,string,id,simp,user,registry,registry,this,id,id,set,simp,user,users,registry,get,users,this,users,new,hash,map,users,size,for,simp,user,user,users,this,users,put,user,get,name,new,transfer,simp,user,user
MultiServerUserRegistry -> UserRegistrySnapshot -> public UserRegistrySnapshot(String id, SimpUserRegistry registry);1498780456;Constructor to create DTO from a local user registry.;public UserRegistrySnapshot(String id, SimpUserRegistry registry) {_			this.id = id__			Set<SimpUser> users = registry.getUsers()__			this.users = new HashMap<>(users.size())__			for (SimpUser user : users) {_				this.users.put(user.getName(), new TransferSimpUser(user))__			}_		};constructor,to,create,dto,from,a,local,user,registry;public,user,registry,snapshot,string,id,simp,user,registry,registry,this,id,id,set,simp,user,users,registry,get,users,this,users,new,hash,map,users,size,for,simp,user,user,users,this,users,put,user,get,name,new,transfer,simp,user,user
MultiServerUserRegistry -> UserRegistrySnapshot -> public UserRegistrySnapshot(String id, SimpUserRegistry registry);1500495740;Constructor to create DTO from a local user registry.;public UserRegistrySnapshot(String id, SimpUserRegistry registry) {_			this.id = id__			Set<SimpUser> users = registry.getUsers()__			this.users = new HashMap<>(users.size())__			for (SimpUser user : users) {_				this.users.put(user.getName(), new TransferSimpUser(user))__			}_		};constructor,to,create,dto,from,a,local,user,registry;public,user,registry,snapshot,string,id,simp,user,registry,registry,this,id,id,set,simp,user,users,registry,get,users,this,users,new,hash,map,users,size,for,simp,user,user,users,this,users,put,user,get,name,new,transfer,simp,user,user
MultiServerUserRegistry -> UserRegistrySnapshot -> public UserRegistrySnapshot(String id, SimpUserRegistry registry);1502974979;Constructor to create DTO from a local user registry.;public UserRegistrySnapshot(String id, SimpUserRegistry registry) {_			this.id = id__			Set<SimpUser> users = registry.getUsers()__			this.users = new HashMap<>(users.size())__			for (SimpUser user : users) {_				this.users.put(user.getName(), new TransferSimpUser(user))__			}_		};constructor,to,create,dto,from,a,local,user,registry;public,user,registry,snapshot,string,id,simp,user,registry,registry,this,id,id,set,simp,user,users,registry,get,users,this,users,new,hash,map,users,size,for,simp,user,user,users,this,users,put,user,get,name,new,transfer,simp,user,user
MultiServerUserRegistry -> UserRegistrySnapshot -> public UserRegistrySnapshot(String id, SimpUserRegistry registry);1521714971;Constructor to create DTO from a local user registry.;public UserRegistrySnapshot(String id, SimpUserRegistry registry) {_			this.id = id__			Set<SimpUser> users = registry.getUsers()__			this.users = new HashMap<>(users.size())__			for (SimpUser user : users) {_				this.users.put(user.getName(), new TransferSimpUser(user))__			}_		};constructor,to,create,dto,from,a,local,user,registry;public,user,registry,snapshot,string,id,simp,user,registry,registry,this,id,id,set,simp,user,users,registry,get,users,this,users,new,hash,map,users,size,for,simp,user,user,users,this,users,put,user,get,name,new,transfer,simp,user,user
MultiServerUserRegistry -> UserRegistrySnapshot -> public UserRegistrySnapshot(String id, SimpUserRegistry registry);1532981251;Constructor to create DTO from a local user registry.;public UserRegistrySnapshot(String id, SimpUserRegistry registry) {_			this.id = id__			Set<SimpUser> users = registry.getUsers()__			this.users = new HashMap<>(users.size())__			for (SimpUser user : users) {_				this.users.put(user.getName(), new TransferSimpUser(user))__			}_		};constructor,to,create,dto,from,a,local,user,registry;public,user,registry,snapshot,string,id,simp,user,registry,registry,this,id,id,set,simp,user,users,registry,get,users,this,users,new,hash,map,users,size,for,simp,user,user,users,this,users,put,user,get,name,new,transfer,simp,user,user
MultiServerUserRegistry -> public MultiServerUserRegistry(SimpUserRegistry localRegistry);1431458952;Create an instance wrapping the local user registry.;public MultiServerUserRegistry(SimpUserRegistry localRegistry) {_		Assert.notNull(localRegistry, "'localRegistry' is required.")__		this.localRegistry = localRegistry__		this.listener = (this.localRegistry instanceof SmartApplicationListener ?_				(SmartApplicationListener) this.localRegistry : new NoOpSmartApplicationListener())__		this.id = generateId()__	};create,an,instance,wrapping,the,local,user,registry;public,multi,server,user,registry,simp,user,registry,local,registry,assert,not,null,local,registry,local,registry,is,required,this,local,registry,local,registry,this,listener,this,local,registry,instanceof,smart,application,listener,smart,application,listener,this,local,registry,new,no,op,smart,application,listener,this,id,generate,id
MultiServerUserRegistry -> public MultiServerUserRegistry(SimpUserRegistry localRegistry);1437512314;Create an instance wrapping the local user registry.;public MultiServerUserRegistry(SimpUserRegistry localRegistry) {_		Assert.notNull(localRegistry, "'localRegistry' is required.")__		this.localRegistry = localRegistry__		this.listener = (this.localRegistry instanceof SmartApplicationListener ?_				(SmartApplicationListener) this.localRegistry : new NoOpSmartApplicationListener())__		this.id = generateId()__	};create,an,instance,wrapping,the,local,user,registry;public,multi,server,user,registry,simp,user,registry,local,registry,assert,not,null,local,registry,local,registry,is,required,this,local,registry,local,registry,this,listener,this,local,registry,instanceof,smart,application,listener,smart,application,listener,this,local,registry,new,no,op,smart,application,listener,this,id,generate,id
MultiServerUserRegistry -> public MultiServerUserRegistry(SimpUserRegistry localRegistry);1457638642;Create an instance wrapping the local user registry.;public MultiServerUserRegistry(SimpUserRegistry localRegistry) {_		Assert.notNull(localRegistry, "'localRegistry' is required.")__		this.id = generateId()__		this.localRegistry = localRegistry__		this.delegateApplicationEvents = this.localRegistry instanceof SmartApplicationListener__	};create,an,instance,wrapping,the,local,user,registry;public,multi,server,user,registry,simp,user,registry,local,registry,assert,not,null,local,registry,local,registry,is,required,this,id,generate,id,this,local,registry,local,registry,this,delegate,application,events,this,local,registry,instanceof,smart,application,listener
MultiServerUserRegistry -> public MultiServerUserRegistry(SimpUserRegistry localRegistry);1457638642;Create an instance wrapping the local user registry.;public MultiServerUserRegistry(SimpUserRegistry localRegistry) {_		Assert.notNull(localRegistry, "'localRegistry' is required.")__		this.id = generateId()__		this.localRegistry = localRegistry__		this.delegateApplicationEvents = this.localRegistry instanceof SmartApplicationListener__	};create,an,instance,wrapping,the,local,user,registry;public,multi,server,user,registry,simp,user,registry,local,registry,assert,not,null,local,registry,local,registry,is,required,this,id,generate,id,this,local,registry,local,registry,this,delegate,application,events,this,local,registry,instanceof,smart,application,listener
MultiServerUserRegistry -> public MultiServerUserRegistry(SimpUserRegistry localRegistry);1467730834;Create an instance wrapping the local user registry.;public MultiServerUserRegistry(SimpUserRegistry localRegistry) {_		Assert.notNull(localRegistry, "'localRegistry' is required.")__		this.id = generateId()__		this.localRegistry = localRegistry__		this.delegateApplicationEvents = this.localRegistry instanceof SmartApplicationListener__	};create,an,instance,wrapping,the,local,user,registry;public,multi,server,user,registry,simp,user,registry,local,registry,assert,not,null,local,registry,local,registry,is,required,this,id,generate,id,this,local,registry,local,registry,this,delegate,application,events,this,local,registry,instanceof,smart,application,listener
MultiServerUserRegistry -> public MultiServerUserRegistry(SimpUserRegistry localRegistry);1470831642;Create an instance wrapping the local user registry.;public MultiServerUserRegistry(SimpUserRegistry localRegistry) {_		Assert.notNull(localRegistry, "'localRegistry' is required.")__		this.id = generateId()__		this.localRegistry = localRegistry__		this.delegateApplicationEvents = this.localRegistry instanceof SmartApplicationListener__	};create,an,instance,wrapping,the,local,user,registry;public,multi,server,user,registry,simp,user,registry,local,registry,assert,not,null,local,registry,local,registry,is,required,this,id,generate,id,this,local,registry,local,registry,this,delegate,application,events,this,local,registry,instanceof,smart,application,listener
MultiServerUserRegistry -> public MultiServerUserRegistry(SimpUserRegistry localRegistry);1470840141;Create an instance wrapping the local user registry.;public MultiServerUserRegistry(SimpUserRegistry localRegistry) {_		Assert.notNull(localRegistry, "'localRegistry' is required.")__		this.id = generateId()__		this.localRegistry = localRegistry__		this.delegateApplicationEvents = this.localRegistry instanceof SmartApplicationListener__	};create,an,instance,wrapping,the,local,user,registry;public,multi,server,user,registry,simp,user,registry,local,registry,assert,not,null,local,registry,local,registry,is,required,this,id,generate,id,this,local,registry,local,registry,this,delegate,application,events,this,local,registry,instanceof,smart,application,listener
MultiServerUserRegistry -> public MultiServerUserRegistry(SimpUserRegistry localRegistry);1477045587;Create an instance wrapping the local user registry.;public MultiServerUserRegistry(SimpUserRegistry localRegistry) {_		Assert.notNull(localRegistry, "'localRegistry' is required.")__		this.id = generateId()__		this.localRegistry = localRegistry__		this.delegateApplicationEvents = this.localRegistry instanceof SmartApplicationListener__	};create,an,instance,wrapping,the,local,user,registry;public,multi,server,user,registry,simp,user,registry,local,registry,assert,not,null,local,registry,local,registry,is,required,this,id,generate,id,this,local,registry,local,registry,this,delegate,application,events,this,local,registry,instanceof,smart,application,listener
MultiServerUserRegistry -> public MultiServerUserRegistry(SimpUserRegistry localRegistry);1479759282;Create an instance wrapping the local user registry.;public MultiServerUserRegistry(SimpUserRegistry localRegistry) {_		Assert.notNull(localRegistry, "'localRegistry' is required.")__		this.id = generateId()__		this.localRegistry = localRegistry__		this.delegateApplicationEvents = this.localRegistry instanceof SmartApplicationListener__	};create,an,instance,wrapping,the,local,user,registry;public,multi,server,user,registry,simp,user,registry,local,registry,assert,not,null,local,registry,local,registry,is,required,this,id,generate,id,this,local,registry,local,registry,this,delegate,application,events,this,local,registry,instanceof,smart,application,listener
MultiServerUserRegistry -> public MultiServerUserRegistry(SimpUserRegistry localRegistry);1498780456;Create an instance wrapping the local user registry.;public MultiServerUserRegistry(SimpUserRegistry localRegistry) {_		Assert.notNull(localRegistry, "'localRegistry' is required.")__		this.id = generateId()__		this.localRegistry = localRegistry__		this.delegateApplicationEvents = this.localRegistry instanceof SmartApplicationListener__	};create,an,instance,wrapping,the,local,user,registry;public,multi,server,user,registry,simp,user,registry,local,registry,assert,not,null,local,registry,local,registry,is,required,this,id,generate,id,this,local,registry,local,registry,this,delegate,application,events,this,local,registry,instanceof,smart,application,listener
MultiServerUserRegistry -> public MultiServerUserRegistry(SimpUserRegistry localRegistry);1500495740;Create an instance wrapping the local user registry.;public MultiServerUserRegistry(SimpUserRegistry localRegistry) {_		Assert.notNull(localRegistry, "'localRegistry' is required.")__		this.id = generateId()__		this.localRegistry = localRegistry__		this.delegateApplicationEvents = this.localRegistry instanceof SmartApplicationListener__	};create,an,instance,wrapping,the,local,user,registry;public,multi,server,user,registry,simp,user,registry,local,registry,assert,not,null,local,registry,local,registry,is,required,this,id,generate,id,this,local,registry,local,registry,this,delegate,application,events,this,local,registry,instanceof,smart,application,listener
MultiServerUserRegistry -> public MultiServerUserRegistry(SimpUserRegistry localRegistry);1502974979;Create an instance wrapping the local user registry.;public MultiServerUserRegistry(SimpUserRegistry localRegistry) {_		Assert.notNull(localRegistry, "'localRegistry' is required.")__		this.id = generateId()__		this.localRegistry = localRegistry__		this.delegateApplicationEvents = this.localRegistry instanceof SmartApplicationListener__	};create,an,instance,wrapping,the,local,user,registry;public,multi,server,user,registry,simp,user,registry,local,registry,assert,not,null,local,registry,local,registry,is,required,this,id,generate,id,this,local,registry,local,registry,this,delegate,application,events,this,local,registry,instanceof,smart,application,listener
MultiServerUserRegistry -> public MultiServerUserRegistry(SimpUserRegistry localRegistry);1521714971;Create an instance wrapping the local user registry.;public MultiServerUserRegistry(SimpUserRegistry localRegistry) {_		Assert.notNull(localRegistry, "'localRegistry' is required.")__		this.id = generateId()__		this.localRegistry = localRegistry__		this.delegateApplicationEvents = this.localRegistry instanceof SmartApplicationListener__	};create,an,instance,wrapping,the,local,user,registry;public,multi,server,user,registry,simp,user,registry,local,registry,assert,not,null,local,registry,local,registry,is,required,this,id,generate,id,this,local,registry,local,registry,this,delegate,application,events,this,local,registry,instanceof,smart,application,listener
MultiServerUserRegistry -> public MultiServerUserRegistry(SimpUserRegistry localRegistry);1532981251;Create an instance wrapping the local user registry.;public MultiServerUserRegistry(SimpUserRegistry localRegistry) {_		Assert.notNull(localRegistry, "'localRegistry' is required.")__		this.id = generateId()__		this.localRegistry = localRegistry__		this.delegateApplicationEvents = this.localRegistry instanceof SmartApplicationListener__	};create,an,instance,wrapping,the,local,user,registry;public,multi,server,user,registry,simp,user,registry,local,registry,assert,not,null,local,registry,local,registry,is,required,this,id,generate,id,this,local,registry,local,registry,this,delegate,application,events,this,local,registry,instanceof,smart,application,listener
MultiServerUserRegistry -> TransferSimpUser -> public TransferSimpUser(SimpUser user);1457638642;Constructor to create user from a local user.;public TransferSimpUser(SimpUser user) {_			this.name = user.getName()__			Set<SimpSession> sessions = user.getSessions()__			this.sessions = new HashSet<TransferSimpSession>(sessions.size())__			for (SimpSession session : sessions) {_				this.sessions.add(new TransferSimpSession(session))__			}_		};constructor,to,create,user,from,a,local,user;public,transfer,simp,user,simp,user,user,this,name,user,get,name,set,simp,session,sessions,user,get,sessions,this,sessions,new,hash,set,transfer,simp,session,sessions,size,for,simp,session,session,sessions,this,sessions,add,new,transfer,simp,session,session
MultiServerUserRegistry -> TransferSimpUser -> public TransferSimpUser(SimpUser user);1457638642;Constructor to create user from a local user.;public TransferSimpUser(SimpUser user) {_			this.name = user.getName()__			Set<SimpSession> sessions = user.getSessions()__			this.sessions = new HashSet<TransferSimpSession>(sessions.size())__			for (SimpSession session : sessions) {_				this.sessions.add(new TransferSimpSession(session))__			}_		};constructor,to,create,user,from,a,local,user;public,transfer,simp,user,simp,user,user,this,name,user,get,name,set,simp,session,sessions,user,get,sessions,this,sessions,new,hash,set,transfer,simp,session,sessions,size,for,simp,session,session,sessions,this,sessions,add,new,transfer,simp,session,session
MultiServerUserRegistry -> TransferSimpUser -> public TransferSimpUser(SimpUser user);1467730834;Constructor to create user from a local user.;public TransferSimpUser(SimpUser user) {_			this.name = user.getName()__			Set<SimpSession> sessions = user.getSessions()__			this.sessions = new HashSet<>(sessions.size())__			for (SimpSession session : sessions) {_				this.sessions.add(new TransferSimpSession(session))__			}_		};constructor,to,create,user,from,a,local,user;public,transfer,simp,user,simp,user,user,this,name,user,get,name,set,simp,session,sessions,user,get,sessions,this,sessions,new,hash,set,sessions,size,for,simp,session,session,sessions,this,sessions,add,new,transfer,simp,session,session
MultiServerUserRegistry -> TransferSimpUser -> public TransferSimpUser(SimpUser user);1470831642;Constructor to create user from a local user.;public TransferSimpUser(SimpUser user) {_			this.name = user.getName()__			Set<SimpSession> sessions = user.getSessions()__			this.sessions = new HashSet<>(sessions.size())__			for (SimpSession session : sessions) {_				this.sessions.add(new TransferSimpSession(session))__			}_		};constructor,to,create,user,from,a,local,user;public,transfer,simp,user,simp,user,user,this,name,user,get,name,set,simp,session,sessions,user,get,sessions,this,sessions,new,hash,set,sessions,size,for,simp,session,session,sessions,this,sessions,add,new,transfer,simp,session,session
MultiServerUserRegistry -> TransferSimpUser -> public TransferSimpUser(SimpUser user);1470840141;Constructor to create user from a local user.;public TransferSimpUser(SimpUser user) {_			this.name = user.getName()__			Set<SimpSession> sessions = user.getSessions()__			this.sessions = new HashSet<>(sessions.size())__			for (SimpSession session : sessions) {_				this.sessions.add(new TransferSimpSession(session))__			}_		};constructor,to,create,user,from,a,local,user;public,transfer,simp,user,simp,user,user,this,name,user,get,name,set,simp,session,sessions,user,get,sessions,this,sessions,new,hash,set,sessions,size,for,simp,session,session,sessions,this,sessions,add,new,transfer,simp,session,session
MultiServerUserRegistry -> TransferSimpUser -> public TransferSimpUser(SimpUser user);1477045587;Constructor to create user from a local user.;public TransferSimpUser(SimpUser user) {_			this.name = user.getName()__			Set<SimpSession> sessions = user.getSessions()__			this.sessions = new HashSet<>(sessions.size())__			for (SimpSession session : sessions) {_				this.sessions.add(new TransferSimpSession(session))__			}_		};constructor,to,create,user,from,a,local,user;public,transfer,simp,user,simp,user,user,this,name,user,get,name,set,simp,session,sessions,user,get,sessions,this,sessions,new,hash,set,sessions,size,for,simp,session,session,sessions,this,sessions,add,new,transfer,simp,session,session
MultiServerUserRegistry -> TransferSimpUser -> public TransferSimpUser(SimpUser user);1479759282;Constructor to create user from a local user.;public TransferSimpUser(SimpUser user) {_			this.name = user.getName()__			Set<SimpSession> sessions = user.getSessions()__			this.sessions = new HashSet<>(sessions.size())__			for (SimpSession session : sessions) {_				this.sessions.add(new TransferSimpSession(session))__			}_		};constructor,to,create,user,from,a,local,user;public,transfer,simp,user,simp,user,user,this,name,user,get,name,set,simp,session,sessions,user,get,sessions,this,sessions,new,hash,set,sessions,size,for,simp,session,session,sessions,this,sessions,add,new,transfer,simp,session,session
MultiServerUserRegistry -> TransferSimpUser -> public TransferSimpUser(SimpUser user);1498780456;Constructor to create user from a local user.;public TransferSimpUser(SimpUser user) {_			this.name = user.getName()__			Set<SimpSession> sessions = user.getSessions()__			this.sessions = new HashSet<>(sessions.size())__			for (SimpSession session : sessions) {_				this.sessions.add(new TransferSimpSession(session))__			}_		};constructor,to,create,user,from,a,local,user;public,transfer,simp,user,simp,user,user,this,name,user,get,name,set,simp,session,sessions,user,get,sessions,this,sessions,new,hash,set,sessions,size,for,simp,session,session,sessions,this,sessions,add,new,transfer,simp,session,session
MultiServerUserRegistry -> TransferSimpUser -> public TransferSimpUser(SimpUser user);1500495740;Constructor to create user from a local user.;public TransferSimpUser(SimpUser user) {_			this.name = user.getName()__			Set<SimpSession> sessions = user.getSessions()__			this.sessions = new HashSet<>(sessions.size())__			for (SimpSession session : sessions) {_				this.sessions.add(new TransferSimpSession(session))__			}_		};constructor,to,create,user,from,a,local,user;public,transfer,simp,user,simp,user,user,this,name,user,get,name,set,simp,session,sessions,user,get,sessions,this,sessions,new,hash,set,sessions,size,for,simp,session,session,sessions,this,sessions,add,new,transfer,simp,session,session
MultiServerUserRegistry -> TransferSimpUser -> public TransferSimpUser(SimpUser user);1502974979;Constructor to create user from a local user.;public TransferSimpUser(SimpUser user) {_			this.name = user.getName()__			Set<SimpSession> sessions = user.getSessions()__			this.sessions = new HashSet<>(sessions.size())__			for (SimpSession session : sessions) {_				this.sessions.add(new TransferSimpSession(session))__			}_		};constructor,to,create,user,from,a,local,user;public,transfer,simp,user,simp,user,user,this,name,user,get,name,set,simp,session,sessions,user,get,sessions,this,sessions,new,hash,set,sessions,size,for,simp,session,session,sessions,this,sessions,add,new,transfer,simp,session,session
MultiServerUserRegistry -> TransferSimpUser -> public TransferSimpUser(SimpUser user);1521714971;Constructor to create user from a local user.;public TransferSimpUser(SimpUser user) {_			this.name = user.getName()__			Set<SimpSession> sessions = user.getSessions()__			this.sessions = new HashSet<>(sessions.size())__			for (SimpSession session : sessions) {_				this.sessions.add(new TransferSimpSession(session))__			}_		};constructor,to,create,user,from,a,local,user;public,transfer,simp,user,simp,user,user,this,name,user,get,name,set,simp,session,sessions,user,get,sessions,this,sessions,new,hash,set,sessions,size,for,simp,session,session,sessions,this,sessions,add,new,transfer,simp,session,session
MultiServerUserRegistry -> TransferSimpUser -> public TransferSimpUser(SimpUser user);1532981251;Constructor to create user from a local user.;public TransferSimpUser(SimpUser user) {_			this.name = user.getName()__			Set<SimpSession> sessions = user.getSessions()__			this.sessions = new HashSet<>(sessions.size())__			for (SimpSession session : sessions) {_				this.sessions.add(new TransferSimpSession(session))__			}_		};constructor,to,create,user,from,a,local,user;public,transfer,simp,user,simp,user,user,this,name,user,get,name,set,simp,session,sessions,user,get,sessions,this,sessions,new,hash,set,sessions,size,for,simp,session,session,sessions,this,sessions,add,new,transfer,simp,session,session
MultiServerUserRegistry -> TransferSimpUser -> @SuppressWarnings("unused") 		public TransferSimpUser();1470840141;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpUser() {_			this.sessions = new HashSet<>(1)__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,user,this,sessions,new,hash,set,1
MultiServerUserRegistry -> TransferSimpUser -> @SuppressWarnings("unused") 		public TransferSimpUser();1477045587;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpUser() {_			this.sessions = new HashSet<>(1)__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,user,this,sessions,new,hash,set,1
MultiServerUserRegistry -> TransferSimpUser -> @SuppressWarnings("unused") 		public TransferSimpUser();1479759282;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpUser() {_			this.sessions = new HashSet<>(1)__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,user,this,sessions,new,hash,set,1
MultiServerUserRegistry -> TransferSimpUser -> @SuppressWarnings("unused") 		public TransferSimpUser();1498780456;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpUser() {_			this.sessions = new HashSet<>(1)__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,user,this,sessions,new,hash,set,1
MultiServerUserRegistry -> TransferSimpUser -> @SuppressWarnings("unused") 		public TransferSimpUser();1500495740;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpUser() {_			this.sessions = new HashSet<>(1)__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,user,this,sessions,new,hash,set,1
MultiServerUserRegistry -> TransferSimpUser -> @SuppressWarnings("unused") 		public TransferSimpUser();1502974979;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpUser() {_			this.sessions = new HashSet<>(1)__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,user,this,sessions,new,hash,set,1
MultiServerUserRegistry -> TransferSimpUser -> @SuppressWarnings("unused") 		public TransferSimpUser();1521714971;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpUser() {_			this.sessions = new HashSet<>(1)__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,user,this,sessions,new,hash,set,1
MultiServerUserRegistry -> TransferSimpUser -> @SuppressWarnings("unused") 		public TransferSimpUser();1532981251;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpUser() {_			this.sessions = new HashSet<>(1)__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,user,this,sessions,new,hash,set,1
MultiServerUserRegistry -> TransferSimpUser -> public TransferSimpUser();1457638642;Default constructor for JSON deserialization.;public TransferSimpUser() {_			this.sessions = new HashSet<TransferSimpSession>(1)__		};default,constructor,for,json,deserialization;public,transfer,simp,user,this,sessions,new,hash,set,transfer,simp,session,1
MultiServerUserRegistry -> TransferSimpUser -> public TransferSimpUser();1457638642;Default constructor for JSON deserialization.;public TransferSimpUser() {_			this.sessions = new HashSet<TransferSimpSession>(1)__		};default,constructor,for,json,deserialization;public,transfer,simp,user,this,sessions,new,hash,set,transfer,simp,session,1
MultiServerUserRegistry -> TransferSimpUser -> public TransferSimpUser();1467730834;Default constructor for JSON deserialization.;public TransferSimpUser() {_			this.sessions = new HashSet<>(1)__		};default,constructor,for,json,deserialization;public,transfer,simp,user,this,sessions,new,hash,set,1
MultiServerUserRegistry -> TransferSimpUser -> public TransferSimpUser();1470831642;Default constructor for JSON deserialization.;public TransferSimpUser() {_			this.sessions = new HashSet<>(1)__		};default,constructor,for,json,deserialization;public,transfer,simp,user,this,sessions,new,hash,set,1
MultiServerUserRegistry -> TransferSimpSubscription -> public TransferSimpSubscription();1457638642;Default constructor for JSON deserialization.;public TransferSimpSubscription() {_		};default,constructor,for,json,deserialization;public,transfer,simp,subscription
MultiServerUserRegistry -> TransferSimpSubscription -> public TransferSimpSubscription();1457638642;Default constructor for JSON deserialization.;public TransferSimpSubscription() {_		};default,constructor,for,json,deserialization;public,transfer,simp,subscription
MultiServerUserRegistry -> TransferSimpSubscription -> public TransferSimpSubscription();1467730834;Default constructor for JSON deserialization.;public TransferSimpSubscription() {_		};default,constructor,for,json,deserialization;public,transfer,simp,subscription
MultiServerUserRegistry -> UserRegistrySnapshot -> public UserRegistrySnapshot();1457638642;Default constructor for JSON deserialization.;public UserRegistrySnapshot() {_		};default,constructor,for,json,deserialization;public,user,registry,snapshot
MultiServerUserRegistry -> UserRegistrySnapshot -> public UserRegistrySnapshot();1457638642;Default constructor for JSON deserialization.;public UserRegistrySnapshot() {_		};default,constructor,for,json,deserialization;public,user,registry,snapshot
MultiServerUserRegistry -> UserRegistrySnapshot -> public UserRegistrySnapshot();1467730834;Default constructor for JSON deserialization.;public UserRegistrySnapshot() {_		};default,constructor,for,json,deserialization;public,user,registry,snapshot
MultiServerUserRegistry -> TransferSimpSession -> @SuppressWarnings("unused") 		public TransferSimpSession();1470840141;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpSession() {_			this.subscriptions = new HashSet<>(4)__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,session,this,subscriptions,new,hash,set,4
MultiServerUserRegistry -> TransferSimpSession -> @SuppressWarnings("unused") 		public TransferSimpSession();1477045587;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpSession() {_			this.subscriptions = new HashSet<>(4)__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,session,this,subscriptions,new,hash,set,4
MultiServerUserRegistry -> TransferSimpSession -> @SuppressWarnings("unused") 		public TransferSimpSession();1479759282;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpSession() {_			this.subscriptions = new HashSet<>(4)__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,session,this,subscriptions,new,hash,set,4
MultiServerUserRegistry -> TransferSimpSession -> @SuppressWarnings("unused") 		public TransferSimpSession();1498780456;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpSession() {_			this.subscriptions = new HashSet<>(4)__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,session,this,subscriptions,new,hash,set,4
MultiServerUserRegistry -> TransferSimpSession -> @SuppressWarnings("unused") 		public TransferSimpSession();1500495740;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpSession() {_			this.id = ""__			this.user = new TransferSimpUser()__			this.subscriptions = new HashSet<>(4)__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,session,this,id,this,user,new,transfer,simp,user,this,subscriptions,new,hash,set,4
MultiServerUserRegistry -> TransferSimpSession -> @SuppressWarnings("unused") 		public TransferSimpSession();1502974979;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpSession() {_			this.id = ""__			this.user = new TransferSimpUser()__			this.subscriptions = new HashSet<>(4)__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,session,this,id,this,user,new,transfer,simp,user,this,subscriptions,new,hash,set,4
MultiServerUserRegistry -> TransferSimpSession -> @SuppressWarnings("unused") 		public TransferSimpSession();1521714971;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpSession() {_			this.id = ""__			this.user = new TransferSimpUser()__			this.subscriptions = new HashSet<>(4)__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,session,this,id,this,user,new,transfer,simp,user,this,subscriptions,new,hash,set,4
MultiServerUserRegistry -> TransferSimpSession -> @SuppressWarnings("unused") 		public TransferSimpSession();1532981251;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpSession() {_			this.id = ""__			this.user = new TransferSimpUser()__			this.subscriptions = new HashSet<>(4)__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,session,this,id,this,user,new,transfer,simp,user,this,subscriptions,new,hash,set,4
MultiServerUserRegistry -> UserRegistrySnapshot -> @SuppressWarnings("unused") 		public UserRegistrySnapshot();1470831642;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public UserRegistrySnapshot() {_		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,user,registry,snapshot
MultiServerUserRegistry -> UserRegistrySnapshot -> @SuppressWarnings("unused") 		public UserRegistrySnapshot();1470840141;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public UserRegistrySnapshot() {_		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,user,registry,snapshot
MultiServerUserRegistry -> UserRegistrySnapshot -> @SuppressWarnings("unused") 		public UserRegistrySnapshot();1477045587;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public UserRegistrySnapshot() {_		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,user,registry,snapshot
MultiServerUserRegistry -> UserRegistrySnapshot -> @SuppressWarnings("unused") 		public UserRegistrySnapshot();1479759282;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public UserRegistrySnapshot() {_		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,user,registry,snapshot
MultiServerUserRegistry -> UserRegistrySnapshot -> @SuppressWarnings("unused") 		public UserRegistrySnapshot();1498780456;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public UserRegistrySnapshot() {_		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,user,registry,snapshot
MultiServerUserRegistry -> UserRegistrySnapshot -> @SuppressWarnings("unused") 		public UserRegistrySnapshot();1500495740;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public UserRegistrySnapshot() {_		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,user,registry,snapshot
MultiServerUserRegistry -> UserRegistrySnapshot -> @SuppressWarnings("unused") 		public UserRegistrySnapshot();1502974979;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public UserRegistrySnapshot() {_		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,user,registry,snapshot
MultiServerUserRegistry -> UserRegistrySnapshot -> @SuppressWarnings("unused") 		public UserRegistrySnapshot();1521714971;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public UserRegistrySnapshot() {_		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,user,registry,snapshot
MultiServerUserRegistry -> UserRegistrySnapshot -> @SuppressWarnings("unused") 		public UserRegistrySnapshot();1532981251;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public UserRegistrySnapshot() {_		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,user,registry,snapshot
MultiServerUserRegistry -> TransferSimpSubscription -> @SuppressWarnings("unused") 		public TransferSimpSubscription();1470831642;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpSubscription() {_		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,subscription
MultiServerUserRegistry -> TransferSimpSubscription -> @SuppressWarnings("unused") 		public TransferSimpSubscription();1470840141;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpSubscription() {_		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,subscription
MultiServerUserRegistry -> TransferSimpSubscription -> @SuppressWarnings("unused") 		public TransferSimpSubscription();1477045587;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpSubscription() {_		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,subscription
MultiServerUserRegistry -> TransferSimpSubscription -> @SuppressWarnings("unused") 		public TransferSimpSubscription();1479759282;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpSubscription() {_		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,subscription
MultiServerUserRegistry -> TransferSimpSubscription -> @SuppressWarnings("unused") 		public TransferSimpSubscription();1498780456;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpSubscription() {_		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,subscription
MultiServerUserRegistry -> TransferSimpSubscription -> @SuppressWarnings("unused") 		public TransferSimpSubscription();1500495740;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpSubscription() {_			this.id = ""__			this.session = new TransferSimpSession()__			this.destination = ""__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,subscription,this,id,this,session,new,transfer,simp,session,this,destination
MultiServerUserRegistry -> TransferSimpSubscription -> @SuppressWarnings("unused") 		public TransferSimpSubscription();1502974979;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpSubscription() {_			this.id = ""__			this.session = new TransferSimpSession()__			this.destination = ""__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,subscription,this,id,this,session,new,transfer,simp,session,this,destination
MultiServerUserRegistry -> TransferSimpSubscription -> @SuppressWarnings("unused") 		public TransferSimpSubscription();1521714971;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpSubscription() {_			this.id = ""__			this.session = new TransferSimpSession()__			this.destination = ""__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,subscription,this,id,this,session,new,transfer,simp,session,this,destination
MultiServerUserRegistry -> TransferSimpSubscription -> @SuppressWarnings("unused") 		public TransferSimpSubscription();1532981251;Default constructor for JSON deserialization.;@SuppressWarnings("unused")_		public TransferSimpSubscription() {_			this.id = ""__			this.session = new TransferSimpSession()__			this.destination = ""__		};default,constructor,for,json,deserialization;suppress,warnings,unused,public,transfer,simp,subscription,this,id,this,session,new,transfer,simp,session,this,destination
MultiServerUserRegistry -> TransferSimpSubscription -> public TransferSimpSubscription(SimpSubscription subscription);1457638642;Constructor to create DTO from a local user subscription.;public TransferSimpSubscription(SimpSubscription subscription) {_			this.id = subscription.getId()__			this.destination = subscription.getDestination()__		};constructor,to,create,dto,from,a,local,user,subscription;public,transfer,simp,subscription,simp,subscription,subscription,this,id,subscription,get,id,this,destination,subscription,get,destination
MultiServerUserRegistry -> TransferSimpSubscription -> public TransferSimpSubscription(SimpSubscription subscription);1457638642;Constructor to create DTO from a local user subscription.;public TransferSimpSubscription(SimpSubscription subscription) {_			this.id = subscription.getId()__			this.destination = subscription.getDestination()__		};constructor,to,create,dto,from,a,local,user,subscription;public,transfer,simp,subscription,simp,subscription,subscription,this,id,subscription,get,id,this,destination,subscription,get,destination
MultiServerUserRegistry -> TransferSimpSubscription -> public TransferSimpSubscription(SimpSubscription subscription);1467730834;Constructor to create DTO from a local user subscription.;public TransferSimpSubscription(SimpSubscription subscription) {_			this.id = subscription.getId()__			this.destination = subscription.getDestination()__		};constructor,to,create,dto,from,a,local,user,subscription;public,transfer,simp,subscription,simp,subscription,subscription,this,id,subscription,get,id,this,destination,subscription,get,destination
MultiServerUserRegistry -> TransferSimpSubscription -> public TransferSimpSubscription(SimpSubscription subscription);1470831642;Constructor to create DTO from a local user subscription.;public TransferSimpSubscription(SimpSubscription subscription) {_			this.id = subscription.getId()__			this.destination = subscription.getDestination()__		};constructor,to,create,dto,from,a,local,user,subscription;public,transfer,simp,subscription,simp,subscription,subscription,this,id,subscription,get,id,this,destination,subscription,get,destination
MultiServerUserRegistry -> TransferSimpSubscription -> public TransferSimpSubscription(SimpSubscription subscription);1470840141;Constructor to create DTO from a local user subscription.;public TransferSimpSubscription(SimpSubscription subscription) {_			this.id = subscription.getId()__			this.destination = subscription.getDestination()__		};constructor,to,create,dto,from,a,local,user,subscription;public,transfer,simp,subscription,simp,subscription,subscription,this,id,subscription,get,id,this,destination,subscription,get,destination
MultiServerUserRegistry -> TransferSimpSubscription -> public TransferSimpSubscription(SimpSubscription subscription);1477045587;Constructor to create DTO from a local user subscription.;public TransferSimpSubscription(SimpSubscription subscription) {_			this.id = subscription.getId()__			this.destination = subscription.getDestination()__		};constructor,to,create,dto,from,a,local,user,subscription;public,transfer,simp,subscription,simp,subscription,subscription,this,id,subscription,get,id,this,destination,subscription,get,destination
MultiServerUserRegistry -> TransferSimpSubscription -> public TransferSimpSubscription(SimpSubscription subscription);1479759282;Constructor to create DTO from a local user subscription.;public TransferSimpSubscription(SimpSubscription subscription) {_			this.id = subscription.getId()__			this.destination = subscription.getDestination()__		};constructor,to,create,dto,from,a,local,user,subscription;public,transfer,simp,subscription,simp,subscription,subscription,this,id,subscription,get,id,this,destination,subscription,get,destination
MultiServerUserRegistry -> TransferSimpSubscription -> public TransferSimpSubscription(SimpSubscription subscription);1498780456;Constructor to create DTO from a local user subscription.;public TransferSimpSubscription(SimpSubscription subscription) {_			this.id = subscription.getId()__			this.destination = subscription.getDestination()__		};constructor,to,create,dto,from,a,local,user,subscription;public,transfer,simp,subscription,simp,subscription,subscription,this,id,subscription,get,id,this,destination,subscription,get,destination
MultiServerUserRegistry -> TransferSimpSubscription -> public TransferSimpSubscription(SimpSubscription subscription);1500495740;Constructor to create DTO from a local user subscription.;public TransferSimpSubscription(SimpSubscription subscription) {_			this.id = subscription.getId()__			this.session = new TransferSimpSession()__			this.destination = subscription.getDestination()__		};constructor,to,create,dto,from,a,local,user,subscription;public,transfer,simp,subscription,simp,subscription,subscription,this,id,subscription,get,id,this,session,new,transfer,simp,session,this,destination,subscription,get,destination
MultiServerUserRegistry -> TransferSimpSubscription -> public TransferSimpSubscription(SimpSubscription subscription);1502974979;Constructor to create DTO from a local user subscription.;public TransferSimpSubscription(SimpSubscription subscription) {_			this.id = subscription.getId()__			this.session = new TransferSimpSession()__			this.destination = subscription.getDestination()__		};constructor,to,create,dto,from,a,local,user,subscription;public,transfer,simp,subscription,simp,subscription,subscription,this,id,subscription,get,id,this,session,new,transfer,simp,session,this,destination,subscription,get,destination
MultiServerUserRegistry -> TransferSimpSubscription -> public TransferSimpSubscription(SimpSubscription subscription);1521714971;Constructor to create DTO from a local user subscription.;public TransferSimpSubscription(SimpSubscription subscription) {_			this.id = subscription.getId()__			this.session = new TransferSimpSession()__			this.destination = subscription.getDestination()__		};constructor,to,create,dto,from,a,local,user,subscription;public,transfer,simp,subscription,simp,subscription,subscription,this,id,subscription,get,id,this,session,new,transfer,simp,session,this,destination,subscription,get,destination
MultiServerUserRegistry -> TransferSimpSubscription -> public TransferSimpSubscription(SimpSubscription subscription);1532981251;Constructor to create DTO from a local user subscription.;public TransferSimpSubscription(SimpSubscription subscription) {_			this.id = subscription.getId()__			this.session = new TransferSimpSession()__			this.destination = subscription.getDestination()__		};constructor,to,create,dto,from,a,local,user,subscription;public,transfer,simp,subscription,simp,subscription,subscription,this,id,subscription,get,id,this,session,new,transfer,simp,session,this,destination,subscription,get,destination
MultiServerUserRegistry -> TransferSimpSession -> public TransferSimpSession();1457638642;Default constructor for JSON deserialization.;public TransferSimpSession() {_			this.subscriptions = new HashSet<TransferSimpSubscription>(4)__		};default,constructor,for,json,deserialization;public,transfer,simp,session,this,subscriptions,new,hash,set,transfer,simp,subscription,4
MultiServerUserRegistry -> TransferSimpSession -> public TransferSimpSession();1457638642;Default constructor for JSON deserialization.;public TransferSimpSession() {_			this.subscriptions = new HashSet<TransferSimpSubscription>(4)__		};default,constructor,for,json,deserialization;public,transfer,simp,session,this,subscriptions,new,hash,set,transfer,simp,subscription,4
MultiServerUserRegistry -> TransferSimpSession -> public TransferSimpSession();1467730834;Default constructor for JSON deserialization.;public TransferSimpSession() {_			this.subscriptions = new HashSet<>(4)__		};default,constructor,for,json,deserialization;public,transfer,simp,session,this,subscriptions,new,hash,set,4
MultiServerUserRegistry -> TransferSimpSession -> public TransferSimpSession();1470831642;Default constructor for JSON deserialization.;public TransferSimpSession() {_			this.subscriptions = new HashSet<>(4)__		};default,constructor,for,json,deserialization;public,transfer,simp,session,this,subscriptions,new,hash,set,4
MultiServerUserRegistry -> TransferSimpSession -> public TransferSimpSession(SimpSession session);1457638642;Constructor to create DTO from the local user session.;public TransferSimpSession(SimpSession session) {_			this.id = session.getId()__			Set<SimpSubscription> subscriptions = session.getSubscriptions()__			this.subscriptions = new HashSet<TransferSimpSubscription>(subscriptions.size())__			for (SimpSubscription subscription : subscriptions) {_				this.subscriptions.add(new TransferSimpSubscription(subscription))__			}_		};constructor,to,create,dto,from,the,local,user,session;public,transfer,simp,session,simp,session,session,this,id,session,get,id,set,simp,subscription,subscriptions,session,get,subscriptions,this,subscriptions,new,hash,set,transfer,simp,subscription,subscriptions,size,for,simp,subscription,subscription,subscriptions,this,subscriptions,add,new,transfer,simp,subscription,subscription
MultiServerUserRegistry -> TransferSimpSession -> public TransferSimpSession(SimpSession session);1457638642;Constructor to create DTO from the local user session.;public TransferSimpSession(SimpSession session) {_			this.id = session.getId()__			Set<SimpSubscription> subscriptions = session.getSubscriptions()__			this.subscriptions = new HashSet<TransferSimpSubscription>(subscriptions.size())__			for (SimpSubscription subscription : subscriptions) {_				this.subscriptions.add(new TransferSimpSubscription(subscription))__			}_		};constructor,to,create,dto,from,the,local,user,session;public,transfer,simp,session,simp,session,session,this,id,session,get,id,set,simp,subscription,subscriptions,session,get,subscriptions,this,subscriptions,new,hash,set,transfer,simp,subscription,subscriptions,size,for,simp,subscription,subscription,subscriptions,this,subscriptions,add,new,transfer,simp,subscription,subscription
MultiServerUserRegistry -> TransferSimpSession -> public TransferSimpSession(SimpSession session);1467730834;Constructor to create DTO from the local user session.;public TransferSimpSession(SimpSession session) {_			this.id = session.getId()__			Set<SimpSubscription> subscriptions = session.getSubscriptions()__			this.subscriptions = new HashSet<>(subscriptions.size())__			for (SimpSubscription subscription : subscriptions) {_				this.subscriptions.add(new TransferSimpSubscription(subscription))__			}_		};constructor,to,create,dto,from,the,local,user,session;public,transfer,simp,session,simp,session,session,this,id,session,get,id,set,simp,subscription,subscriptions,session,get,subscriptions,this,subscriptions,new,hash,set,subscriptions,size,for,simp,subscription,subscription,subscriptions,this,subscriptions,add,new,transfer,simp,subscription,subscription
MultiServerUserRegistry -> TransferSimpSession -> public TransferSimpSession(SimpSession session);1470831642;Constructor to create DTO from the local user session.;public TransferSimpSession(SimpSession session) {_			this.id = session.getId()__			Set<SimpSubscription> subscriptions = session.getSubscriptions()__			this.subscriptions = new HashSet<>(subscriptions.size())__			for (SimpSubscription subscription : subscriptions) {_				this.subscriptions.add(new TransferSimpSubscription(subscription))__			}_		};constructor,to,create,dto,from,the,local,user,session;public,transfer,simp,session,simp,session,session,this,id,session,get,id,set,simp,subscription,subscriptions,session,get,subscriptions,this,subscriptions,new,hash,set,subscriptions,size,for,simp,subscription,subscription,subscriptions,this,subscriptions,add,new,transfer,simp,subscription,subscription
MultiServerUserRegistry -> TransferSimpSession -> public TransferSimpSession(SimpSession session);1470840141;Constructor to create DTO from the local user session.;public TransferSimpSession(SimpSession session) {_			this.id = session.getId()__			Set<SimpSubscription> subscriptions = session.getSubscriptions()__			this.subscriptions = new HashSet<>(subscriptions.size())__			for (SimpSubscription subscription : subscriptions) {_				this.subscriptions.add(new TransferSimpSubscription(subscription))__			}_		};constructor,to,create,dto,from,the,local,user,session;public,transfer,simp,session,simp,session,session,this,id,session,get,id,set,simp,subscription,subscriptions,session,get,subscriptions,this,subscriptions,new,hash,set,subscriptions,size,for,simp,subscription,subscription,subscriptions,this,subscriptions,add,new,transfer,simp,subscription,subscription
MultiServerUserRegistry -> TransferSimpSession -> public TransferSimpSession(SimpSession session);1477045587;Constructor to create DTO from the local user session.;public TransferSimpSession(SimpSession session) {_			this.id = session.getId()__			Set<SimpSubscription> subscriptions = session.getSubscriptions()__			this.subscriptions = new HashSet<>(subscriptions.size())__			for (SimpSubscription subscription : subscriptions) {_				this.subscriptions.add(new TransferSimpSubscription(subscription))__			}_		};constructor,to,create,dto,from,the,local,user,session;public,transfer,simp,session,simp,session,session,this,id,session,get,id,set,simp,subscription,subscriptions,session,get,subscriptions,this,subscriptions,new,hash,set,subscriptions,size,for,simp,subscription,subscription,subscriptions,this,subscriptions,add,new,transfer,simp,subscription,subscription
MultiServerUserRegistry -> TransferSimpSession -> public TransferSimpSession(SimpSession session);1479759282;Constructor to create DTO from the local user session.;public TransferSimpSession(SimpSession session) {_			this.id = session.getId()__			Set<SimpSubscription> subscriptions = session.getSubscriptions()__			this.subscriptions = new HashSet<>(subscriptions.size())__			for (SimpSubscription subscription : subscriptions) {_				this.subscriptions.add(new TransferSimpSubscription(subscription))__			}_		};constructor,to,create,dto,from,the,local,user,session;public,transfer,simp,session,simp,session,session,this,id,session,get,id,set,simp,subscription,subscriptions,session,get,subscriptions,this,subscriptions,new,hash,set,subscriptions,size,for,simp,subscription,subscription,subscriptions,this,subscriptions,add,new,transfer,simp,subscription,subscription
MultiServerUserRegistry -> TransferSimpSession -> public TransferSimpSession(SimpSession session);1498780456;Constructor to create DTO from the local user session.;public TransferSimpSession(SimpSession session) {_			this.id = session.getId()__			Set<SimpSubscription> subscriptions = session.getSubscriptions()__			this.subscriptions = new HashSet<>(subscriptions.size())__			for (SimpSubscription subscription : subscriptions) {_				this.subscriptions.add(new TransferSimpSubscription(subscription))__			}_		};constructor,to,create,dto,from,the,local,user,session;public,transfer,simp,session,simp,session,session,this,id,session,get,id,set,simp,subscription,subscriptions,session,get,subscriptions,this,subscriptions,new,hash,set,subscriptions,size,for,simp,subscription,subscription,subscriptions,this,subscriptions,add,new,transfer,simp,subscription,subscription
MultiServerUserRegistry -> TransferSimpSession -> public TransferSimpSession(SimpSession session);1500495740;Constructor to create DTO from the local user session.;public TransferSimpSession(SimpSession session) {_			this.id = session.getId()__			this.user = new TransferSimpUser()__			Set<SimpSubscription> subscriptions = session.getSubscriptions()__			this.subscriptions = new HashSet<>(subscriptions.size())__			for (SimpSubscription subscription : subscriptions) {_				this.subscriptions.add(new TransferSimpSubscription(subscription))__			}_		};constructor,to,create,dto,from,the,local,user,session;public,transfer,simp,session,simp,session,session,this,id,session,get,id,this,user,new,transfer,simp,user,set,simp,subscription,subscriptions,session,get,subscriptions,this,subscriptions,new,hash,set,subscriptions,size,for,simp,subscription,subscription,subscriptions,this,subscriptions,add,new,transfer,simp,subscription,subscription
MultiServerUserRegistry -> TransferSimpSession -> public TransferSimpSession(SimpSession session);1502974979;Constructor to create DTO from the local user session.;public TransferSimpSession(SimpSession session) {_			this.id = session.getId()__			this.user = new TransferSimpUser()__			Set<SimpSubscription> subscriptions = session.getSubscriptions()__			this.subscriptions = new HashSet<>(subscriptions.size())__			for (SimpSubscription subscription : subscriptions) {_				this.subscriptions.add(new TransferSimpSubscription(subscription))__			}_		};constructor,to,create,dto,from,the,local,user,session;public,transfer,simp,session,simp,session,session,this,id,session,get,id,this,user,new,transfer,simp,user,set,simp,subscription,subscriptions,session,get,subscriptions,this,subscriptions,new,hash,set,subscriptions,size,for,simp,subscription,subscription,subscriptions,this,subscriptions,add,new,transfer,simp,subscription,subscription
MultiServerUserRegistry -> TransferSimpSession -> public TransferSimpSession(SimpSession session);1521714971;Constructor to create DTO from the local user session.;public TransferSimpSession(SimpSession session) {_			this.id = session.getId()__			this.user = new TransferSimpUser()__			Set<SimpSubscription> subscriptions = session.getSubscriptions()__			this.subscriptions = new HashSet<>(subscriptions.size())__			for (SimpSubscription subscription : subscriptions) {_				this.subscriptions.add(new TransferSimpSubscription(subscription))__			}_		};constructor,to,create,dto,from,the,local,user,session;public,transfer,simp,session,simp,session,session,this,id,session,get,id,this,user,new,transfer,simp,user,set,simp,subscription,subscriptions,session,get,subscriptions,this,subscriptions,new,hash,set,subscriptions,size,for,simp,subscription,subscription,subscriptions,this,subscriptions,add,new,transfer,simp,subscription,subscription
MultiServerUserRegistry -> TransferSimpSession -> public TransferSimpSession(SimpSession session);1532981251;Constructor to create DTO from the local user session.;public TransferSimpSession(SimpSession session) {_			this.id = session.getId()__			this.user = new TransferSimpUser()__			Set<SimpSubscription> subscriptions = session.getSubscriptions()__			this.subscriptions = new HashSet<>(subscriptions.size())__			for (SimpSubscription subscription : subscriptions) {_				this.subscriptions.add(new TransferSimpSubscription(subscription))__			}_		};constructor,to,create,dto,from,the,local,user,session;public,transfer,simp,session,simp,session,session,this,id,session,get,id,this,user,new,transfer,simp,user,set,simp,subscription,subscriptions,session,get,subscriptions,this,subscriptions,new,hash,set,subscriptions,size,for,simp,subscription,subscription,subscriptions,this,subscriptions,add,new,transfer,simp,subscription,subscription
