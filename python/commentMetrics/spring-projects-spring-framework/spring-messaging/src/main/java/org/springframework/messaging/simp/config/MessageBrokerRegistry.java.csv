# id;timestamp;commentText;codeText;commentWords;codeWords
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1385258957;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.stompRelay = new StompBrokerRelayRegistration(this.clientOutboundChannel, destinationPrefixes)__		return this.stompRelay__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,stomp,relay,new,stomp,broker,relay,registration,this,client,outbound,channel,destination,prefixes,return,this,stomp,relay
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1385502674;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.stompRelay = new StompBrokerRelayRegistration(this.clientOutboundChannel, destinationPrefixes)__		return this.stompRelay__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,stomp,relay,new,stomp,broker,relay,registration,this,client,outbound,channel,destination,prefixes,return,this,stomp,relay
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1385507478;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.stompRelay = new StompBrokerRelayRegistration(this.clientOutboundChannel, destinationPrefixes)__		return this.stompRelay__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,stomp,relay,new,stomp,broker,relay,registration,this,client,outbound,channel,destination,prefixes,return,this,stomp,relay
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1386004713;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1386365044;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1395703237;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1395703238;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1405378164;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1405378165;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1407154420;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1408751872;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1413848647;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1429286144;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1431458952;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1432018141;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1469614318;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1485810955;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1495868221;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1496837955;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1498780456;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1532402679;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1532461483;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1532463492;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes);1534150594;Enable a STOMP broker relay and configure the destination prefixes supported by the_message broker. Check the STOMP documentation of the message broker for supported_destinations.;public StompBrokerRelayRegistration enableStompBrokerRelay(String... destinationPrefixes) {_		this.brokerRelayRegistration = new StompBrokerRelayRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.brokerRelayRegistration__	};enable,a,stomp,broker,relay,and,configure,the,destination,prefixes,supported,by,the,message,broker,check,the,stomp,documentation,of,the,message,broker,for,supported,destinations;public,stomp,broker,relay,registration,enable,stomp,broker,relay,string,destination,prefixes,this,broker,relay,registration,new,stomp,broker,relay,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,broker,relay,registration
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1385258957;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>_For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>_The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1385502674;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>_For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>_The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1385507478;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1386004713;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1386365044;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1395703237;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1395703238;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1405378164;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1405378165;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1407154420;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1408751872;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1413848647;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1429286144;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1431458952;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1432018141;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1469614318;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1485810955;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1495868221;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1496837955;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1498780456;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1532402679;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1532461483;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1532463492;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix);1534150594;Configure the prefix used to identify user destinations. User destinations_provide the ability for a user to subscribe to queue names unique to their_session as well as for others to send messages to those unique,_user-specific queues._<p>For example when a user attempts to subscribe to "/user/queue/position-updates",_the destination may be translated to "/queue/position-updatesi9oqdfzo" yielding a_unique queue name that does not collide with any other user attempting to do the same._Subsequently when messages are sent to "/user/{username}/queue/position-updates",_the destination is translated to "/queue/position-updatesi9oqdfzo"._<p>The default prefix used to identify such destinations is "/user/".;public MessageBrokerRegistry setUserDestinationPrefix(String destinationPrefix) {_		this.userDestinationPrefix = destinationPrefix__		return this__	};configure,the,prefix,used,to,identify,user,destinations,user,destinations,provide,the,ability,for,a,user,to,subscribe,to,queue,names,unique,to,their,session,as,well,as,for,others,to,send,messages,to,those,unique,user,specific,queues,p,for,example,when,a,user,attempts,to,subscribe,to,user,queue,position,updates,the,destination,may,be,translated,to,queue,position,updatesi9oqdfzo,yielding,a,unique,queue,name,that,does,not,collide,with,any,other,user,attempting,to,do,the,same,subsequently,when,messages,are,sent,to,user,username,queue,position,updates,the,destination,is,translated,to,queue,position,updatesi9oqdfzo,p,the,default,prefix,used,to,identify,such,destinations,is,user;public,message,broker,registry,set,user,destination,prefix,string,destination,prefix,this,user,destination,prefix,destination,prefix,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setCacheLimit(int cacheLimit);1469614318;Configure the cache limit to apply for registrations with the broker._<p>This is currently only applied for the destination cache in the_subscription registry. The default cache limit there is 1024._@since 4.3.2_@see org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry#setCacheLimit;public MessageBrokerRegistry setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__		return this__	};configure,the,cache,limit,to,apply,for,registrations,with,the,broker,p,this,is,currently,only,applied,for,the,destination,cache,in,the,subscription,registry,the,default,cache,limit,there,is,1024,since,4,3,2,see,org,springframework,messaging,simp,broker,default,subscription,registry,set,cache,limit;public,message,broker,registry,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setCacheLimit(int cacheLimit);1485810955;Configure the cache limit to apply for registrations with the broker._<p>This is currently only applied for the destination cache in the_subscription registry. The default cache limit there is 1024._@since 4.3.2_@see org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry#setCacheLimit;public MessageBrokerRegistry setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__		return this__	};configure,the,cache,limit,to,apply,for,registrations,with,the,broker,p,this,is,currently,only,applied,for,the,destination,cache,in,the,subscription,registry,the,default,cache,limit,there,is,1024,since,4,3,2,see,org,springframework,messaging,simp,broker,default,subscription,registry,set,cache,limit;public,message,broker,registry,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setCacheLimit(int cacheLimit);1495868221;Configure the cache limit to apply for registrations with the broker._<p>This is currently only applied for the destination cache in the_subscription registry. The default cache limit there is 1024._@since 4.3.2_@see org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry#setCacheLimit;public MessageBrokerRegistry setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__		return this__	};configure,the,cache,limit,to,apply,for,registrations,with,the,broker,p,this,is,currently,only,applied,for,the,destination,cache,in,the,subscription,registry,the,default,cache,limit,there,is,1024,since,4,3,2,see,org,springframework,messaging,simp,broker,default,subscription,registry,set,cache,limit;public,message,broker,registry,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setCacheLimit(int cacheLimit);1496837955;Configure the cache limit to apply for registrations with the broker._<p>This is currently only applied for the destination cache in the_subscription registry. The default cache limit there is 1024._@since 4.3.2_@see org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry#setCacheLimit;public MessageBrokerRegistry setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__		return this__	};configure,the,cache,limit,to,apply,for,registrations,with,the,broker,p,this,is,currently,only,applied,for,the,destination,cache,in,the,subscription,registry,the,default,cache,limit,there,is,1024,since,4,3,2,see,org,springframework,messaging,simp,broker,default,subscription,registry,set,cache,limit;public,message,broker,registry,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setCacheLimit(int cacheLimit);1498780456;Configure the cache limit to apply for registrations with the broker._<p>This is currently only applied for the destination cache in the_subscription registry. The default cache limit there is 1024._@since 4.3.2_@see org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry#setCacheLimit;public MessageBrokerRegistry setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__		return this__	};configure,the,cache,limit,to,apply,for,registrations,with,the,broker,p,this,is,currently,only,applied,for,the,destination,cache,in,the,subscription,registry,the,default,cache,limit,there,is,1024,since,4,3,2,see,org,springframework,messaging,simp,broker,default,subscription,registry,set,cache,limit;public,message,broker,registry,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setCacheLimit(int cacheLimit);1532402679;Configure the cache limit to apply for registrations with the broker._<p>This is currently only applied for the destination cache in the_subscription registry. The default cache limit there is 1024._@since 4.3.2_@see org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry#setCacheLimit;public MessageBrokerRegistry setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__		return this__	};configure,the,cache,limit,to,apply,for,registrations,with,the,broker,p,this,is,currently,only,applied,for,the,destination,cache,in,the,subscription,registry,the,default,cache,limit,there,is,1024,since,4,3,2,see,org,springframework,messaging,simp,broker,default,subscription,registry,set,cache,limit;public,message,broker,registry,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setCacheLimit(int cacheLimit);1532461483;Configure the cache limit to apply for registrations with the broker._<p>This is currently only applied for the destination cache in the_subscription registry. The default cache limit there is 1024._@since 4.3.2_@see org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry#setCacheLimit;public MessageBrokerRegistry setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__		return this__	};configure,the,cache,limit,to,apply,for,registrations,with,the,broker,p,this,is,currently,only,applied,for,the,destination,cache,in,the,subscription,registry,the,default,cache,limit,there,is,1024,since,4,3,2,see,org,springframework,messaging,simp,broker,default,subscription,registry,set,cache,limit;public,message,broker,registry,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setCacheLimit(int cacheLimit);1532463492;Configure the cache limit to apply for registrations with the broker._<p>This is currently only applied for the destination cache in the_subscription registry. The default cache limit there is 1024._@since 4.3.2_@see org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry#setCacheLimit;public MessageBrokerRegistry setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__		return this__	};configure,the,cache,limit,to,apply,for,registrations,with,the,broker,p,this,is,currently,only,applied,for,the,destination,cache,in,the,subscription,registry,the,default,cache,limit,there,is,1024,since,4,3,2,see,org,springframework,messaging,simp,broker,default,subscription,registry,set,cache,limit;public,message,broker,registry,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setCacheLimit(int cacheLimit);1534150594;Configure the cache limit to apply for registrations with the broker._<p>This is currently only applied for the destination cache in the_subscription registry. The default cache limit there is 1024._@since 4.3.2_@see org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry#setCacheLimit;public MessageBrokerRegistry setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__		return this__	};configure,the,cache,limit,to,apply,for,registrations,with,the,broker,p,this,is,currently,only,applied,for,the,destination,cache,in,the,subscription,registry,the,default,cache,limit,there,is,1024,since,4,3,2,see,org,springframework,messaging,simp,broker,default,subscription,registry,set,cache,limit;public,message,broker,registry,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher);1405378165;Configure the PathMatcher to use to match the destinations of incoming_messages to {@code @MessageMapping} and {@code @SubscribeMapping} methods.__<p>By default {@link org.springframework.util.AntPathMatcher} is configured._However applications may provide an {@code AntPathMatcher} instance_customized to use "." (commonly used in messaging) instead of "/" as path_separator or provide a completely different PathMatcher implementation.__<p>Note that the configured PathMatcher is only used for matching the_portion of the destination after the configured prefix. For example given_application destination prefix "/app" and destination "/app/price.stock.**",_the message might be mapped to a controller with "price" and "stock.**"_as its type and method-level mappings respectively.__<p>When the simple broker is enabled, the PathMatcher configured here is_also used to match message destinations when brokering messages.__@since 4.1;public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};configure,the,path,matcher,to,use,to,match,the,destinations,of,incoming,messages,to,code,message,mapping,and,code,subscribe,mapping,methods,p,by,default,link,org,springframework,util,ant,path,matcher,is,configured,however,applications,may,provide,an,code,ant,path,matcher,instance,customized,to,use,commonly,used,in,messaging,instead,of,as,path,separator,or,provide,a,completely,different,path,matcher,implementation,p,note,that,the,configured,path,matcher,is,only,used,for,matching,the,portion,of,the,destination,after,the,configured,prefix,for,example,given,application,destination,prefix,app,and,destination,app,price,stock,the,message,might,be,mapped,to,a,controller,with,price,and,stock,as,its,type,and,method,level,mappings,respectively,p,when,the,simple,broker,is,enabled,the,path,matcher,configured,here,is,also,used,to,match,message,destinations,when,brokering,messages,since,4,1;public,message,broker,registry,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher);1407154420;Configure the PathMatcher to use to match the destinations of incoming_messages to {@code @MessageMapping} and {@code @SubscribeMapping} methods.__<p>By default {@link org.springframework.util.AntPathMatcher} is configured._However applications may provide an {@code AntPathMatcher} instance_customized to use "." (commonly used in messaging) instead of "/" as path_separator or provide a completely different PathMatcher implementation.__<p>Note that the configured PathMatcher is only used for matching the_portion of the destination after the configured prefix. For example given_application destination prefix "/app" and destination "/app/price.stock.**",_the message might be mapped to a controller with "price" and "stock.**"_as its type and method-level mappings respectively.__<p>When the simple broker is enabled, the PathMatcher configured here is_also used to match message destinations when brokering messages.__@since 4.1;public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};configure,the,path,matcher,to,use,to,match,the,destinations,of,incoming,messages,to,code,message,mapping,and,code,subscribe,mapping,methods,p,by,default,link,org,springframework,util,ant,path,matcher,is,configured,however,applications,may,provide,an,code,ant,path,matcher,instance,customized,to,use,commonly,used,in,messaging,instead,of,as,path,separator,or,provide,a,completely,different,path,matcher,implementation,p,note,that,the,configured,path,matcher,is,only,used,for,matching,the,portion,of,the,destination,after,the,configured,prefix,for,example,given,application,destination,prefix,app,and,destination,app,price,stock,the,message,might,be,mapped,to,a,controller,with,price,and,stock,as,its,type,and,method,level,mappings,respectively,p,when,the,simple,broker,is,enabled,the,path,matcher,configured,here,is,also,used,to,match,message,destinations,when,brokering,messages,since,4,1;public,message,broker,registry,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher);1408751872;Configure the PathMatcher to use to match the destinations of incoming_messages to {@code @MessageMapping} and {@code @SubscribeMapping} methods._<p>By default {@link org.springframework.util.AntPathMatcher} is configured._However applications may provide an {@code AntPathMatcher} instance_customized to use "." (commonly used in messaging) instead of "/" as path_separator or provide a completely different PathMatcher implementation._<p>Note that the configured PathMatcher is only used for matching the_portion of the destination after the configured prefix. For example given_application destination prefix "/app" and destination "/app/price.stock.**",_the message might be mapped to a controller with "price" and "stock.**"_as its type and method-level mappings respectively._<p>When the simple broker is enabled, the PathMatcher configured here is_also used to match message destinations when brokering messages._@since 4.1;public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};configure,the,path,matcher,to,use,to,match,the,destinations,of,incoming,messages,to,code,message,mapping,and,code,subscribe,mapping,methods,p,by,default,link,org,springframework,util,ant,path,matcher,is,configured,however,applications,may,provide,an,code,ant,path,matcher,instance,customized,to,use,commonly,used,in,messaging,instead,of,as,path,separator,or,provide,a,completely,different,path,matcher,implementation,p,note,that,the,configured,path,matcher,is,only,used,for,matching,the,portion,of,the,destination,after,the,configured,prefix,for,example,given,application,destination,prefix,app,and,destination,app,price,stock,the,message,might,be,mapped,to,a,controller,with,price,and,stock,as,its,type,and,method,level,mappings,respectively,p,when,the,simple,broker,is,enabled,the,path,matcher,configured,here,is,also,used,to,match,message,destinations,when,brokering,messages,since,4,1;public,message,broker,registry,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher);1413848647;Configure the PathMatcher to use to match the destinations of incoming_messages to {@code @MessageMapping} and {@code @SubscribeMapping} methods._<p>By default {@link org.springframework.util.AntPathMatcher} is configured._However applications may provide an {@code AntPathMatcher} instance_customized to use "." (commonly used in messaging) instead of "/" as path_separator or provide a completely different PathMatcher implementation._<p>Note that the configured PathMatcher is only used for matching the_portion of the destination after the configured prefix. For example given_application destination prefix "/app" and destination "/app/price.stock.**",_the message might be mapped to a controller with "price" and "stock.**"_as its type and method-level mappings respectively._<p>When the simple broker is enabled, the PathMatcher configured here is_also used to match message destinations when brokering messages._@since 4.1;public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};configure,the,path,matcher,to,use,to,match,the,destinations,of,incoming,messages,to,code,message,mapping,and,code,subscribe,mapping,methods,p,by,default,link,org,springframework,util,ant,path,matcher,is,configured,however,applications,may,provide,an,code,ant,path,matcher,instance,customized,to,use,commonly,used,in,messaging,instead,of,as,path,separator,or,provide,a,completely,different,path,matcher,implementation,p,note,that,the,configured,path,matcher,is,only,used,for,matching,the,portion,of,the,destination,after,the,configured,prefix,for,example,given,application,destination,prefix,app,and,destination,app,price,stock,the,message,might,be,mapped,to,a,controller,with,price,and,stock,as,its,type,and,method,level,mappings,respectively,p,when,the,simple,broker,is,enabled,the,path,matcher,configured,here,is,also,used,to,match,message,destinations,when,brokering,messages,since,4,1;public,message,broker,registry,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher);1429286144;Configure the PathMatcher to use to match the destinations of incoming_messages to {@code @MessageMapping} and {@code @SubscribeMapping} methods._<p>By default {@link org.springframework.util.AntPathMatcher} is configured._However applications may provide an {@code AntPathMatcher} instance_customized to use "." (commonly used in messaging) instead of "/" as path_separator or provide a completely different PathMatcher implementation._<p>Note that the configured PathMatcher is only used for matching the_portion of the destination after the configured prefix. For example given_application destination prefix "/app" and destination "/app/price.stock.**",_the message might be mapped to a controller with "price" and "stock.**"_as its type and method-level mappings respectively._<p>When the simple broker is enabled, the PathMatcher configured here is_also used to match message destinations when brokering messages._@since 4.1;public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};configure,the,path,matcher,to,use,to,match,the,destinations,of,incoming,messages,to,code,message,mapping,and,code,subscribe,mapping,methods,p,by,default,link,org,springframework,util,ant,path,matcher,is,configured,however,applications,may,provide,an,code,ant,path,matcher,instance,customized,to,use,commonly,used,in,messaging,instead,of,as,path,separator,or,provide,a,completely,different,path,matcher,implementation,p,note,that,the,configured,path,matcher,is,only,used,for,matching,the,portion,of,the,destination,after,the,configured,prefix,for,example,given,application,destination,prefix,app,and,destination,app,price,stock,the,message,might,be,mapped,to,a,controller,with,price,and,stock,as,its,type,and,method,level,mappings,respectively,p,when,the,simple,broker,is,enabled,the,path,matcher,configured,here,is,also,used,to,match,message,destinations,when,brokering,messages,since,4,1;public,message,broker,registry,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher);1431458952;Configure the PathMatcher to use to match the destinations of incoming_messages to {@code @MessageMapping} and {@code @SubscribeMapping} methods._<p>By default {@link org.springframework.util.AntPathMatcher} is configured._However applications may provide an {@code AntPathMatcher} instance_customized to use "." (commonly used in messaging) instead of "/" as path_separator or provide a completely different PathMatcher implementation._<p>Note that the configured PathMatcher is only used for matching the_portion of the destination after the configured prefix. For example given_application destination prefix "/app" and destination "/app/price.stock.**",_the message might be mapped to a controller with "price" and "stock.**"_as its type and method-level mappings respectively._<p>When the simple broker is enabled, the PathMatcher configured here is_also used to match message destinations when brokering messages._@since 4.1;public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};configure,the,path,matcher,to,use,to,match,the,destinations,of,incoming,messages,to,code,message,mapping,and,code,subscribe,mapping,methods,p,by,default,link,org,springframework,util,ant,path,matcher,is,configured,however,applications,may,provide,an,code,ant,path,matcher,instance,customized,to,use,commonly,used,in,messaging,instead,of,as,path,separator,or,provide,a,completely,different,path,matcher,implementation,p,note,that,the,configured,path,matcher,is,only,used,for,matching,the,portion,of,the,destination,after,the,configured,prefix,for,example,given,application,destination,prefix,app,and,destination,app,price,stock,the,message,might,be,mapped,to,a,controller,with,price,and,stock,as,its,type,and,method,level,mappings,respectively,p,when,the,simple,broker,is,enabled,the,path,matcher,configured,here,is,also,used,to,match,message,destinations,when,brokering,messages,since,4,1;public,message,broker,registry,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher);1432018141;Configure the PathMatcher to use to match the destinations of incoming_messages to {@code @MessageMapping} and {@code @SubscribeMapping} methods._<p>By default {@link org.springframework.util.AntPathMatcher} is configured._However applications may provide an {@code AntPathMatcher} instance_customized to use "." (commonly used in messaging) instead of "/" as path_separator or provide a completely different PathMatcher implementation._<p>Note that the configured PathMatcher is only used for matching the_portion of the destination after the configured prefix. For example given_application destination prefix "/app" and destination "/app/price.stock.**",_the message might be mapped to a controller with "price" and "stock.**"_as its type and method-level mappings respectively._<p>When the simple broker is enabled, the PathMatcher configured here is_also used to match message destinations when brokering messages._@since 4.1;public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};configure,the,path,matcher,to,use,to,match,the,destinations,of,incoming,messages,to,code,message,mapping,and,code,subscribe,mapping,methods,p,by,default,link,org,springframework,util,ant,path,matcher,is,configured,however,applications,may,provide,an,code,ant,path,matcher,instance,customized,to,use,commonly,used,in,messaging,instead,of,as,path,separator,or,provide,a,completely,different,path,matcher,implementation,p,note,that,the,configured,path,matcher,is,only,used,for,matching,the,portion,of,the,destination,after,the,configured,prefix,for,example,given,application,destination,prefix,app,and,destination,app,price,stock,the,message,might,be,mapped,to,a,controller,with,price,and,stock,as,its,type,and,method,level,mappings,respectively,p,when,the,simple,broker,is,enabled,the,path,matcher,configured,here,is,also,used,to,match,message,destinations,when,brokering,messages,since,4,1;public,message,broker,registry,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher);1469614318;Configure the PathMatcher to use to match the destinations of incoming_messages to {@code @MessageMapping} and {@code @SubscribeMapping} methods._<p>By default {@link org.springframework.util.AntPathMatcher} is configured._However applications may provide an {@code AntPathMatcher} instance_customized to use "." (commonly used in messaging) instead of "/" as path_separator or provide a completely different PathMatcher implementation._<p>Note that the configured PathMatcher is only used for matching the_portion of the destination after the configured prefix. For example given_application destination prefix "/app" and destination "/app/price.stock.**",_the message might be mapped to a controller with "price" and "stock.**"_as its type and method-level mappings respectively._<p>When the simple broker is enabled, the PathMatcher configured here is_also used to match message destinations when brokering messages._@since 4.1_@see org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry#setPathMatcher;public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};configure,the,path,matcher,to,use,to,match,the,destinations,of,incoming,messages,to,code,message,mapping,and,code,subscribe,mapping,methods,p,by,default,link,org,springframework,util,ant,path,matcher,is,configured,however,applications,may,provide,an,code,ant,path,matcher,instance,customized,to,use,commonly,used,in,messaging,instead,of,as,path,separator,or,provide,a,completely,different,path,matcher,implementation,p,note,that,the,configured,path,matcher,is,only,used,for,matching,the,portion,of,the,destination,after,the,configured,prefix,for,example,given,application,destination,prefix,app,and,destination,app,price,stock,the,message,might,be,mapped,to,a,controller,with,price,and,stock,as,its,type,and,method,level,mappings,respectively,p,when,the,simple,broker,is,enabled,the,path,matcher,configured,here,is,also,used,to,match,message,destinations,when,brokering,messages,since,4,1,see,org,springframework,messaging,simp,broker,default,subscription,registry,set,path,matcher;public,message,broker,registry,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher);1485810955;Configure the PathMatcher to use to match the destinations of incoming_messages to {@code @MessageMapping} and {@code @SubscribeMapping} methods._<p>By default {@link org.springframework.util.AntPathMatcher} is configured._However applications may provide an {@code AntPathMatcher} instance_customized to use "." (commonly used in messaging) instead of "/" as path_separator or provide a completely different PathMatcher implementation._<p>Note that the configured PathMatcher is only used for matching the_portion of the destination after the configured prefix. For example given_application destination prefix "/app" and destination "/app/price.stock.**",_the message might be mapped to a controller with "price" and "stock.**"_as its type and method-level mappings respectively._<p>When the simple broker is enabled, the PathMatcher configured here is_also used to match message destinations when brokering messages._@since 4.1_@see org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry#setPathMatcher;public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};configure,the,path,matcher,to,use,to,match,the,destinations,of,incoming,messages,to,code,message,mapping,and,code,subscribe,mapping,methods,p,by,default,link,org,springframework,util,ant,path,matcher,is,configured,however,applications,may,provide,an,code,ant,path,matcher,instance,customized,to,use,commonly,used,in,messaging,instead,of,as,path,separator,or,provide,a,completely,different,path,matcher,implementation,p,note,that,the,configured,path,matcher,is,only,used,for,matching,the,portion,of,the,destination,after,the,configured,prefix,for,example,given,application,destination,prefix,app,and,destination,app,price,stock,the,message,might,be,mapped,to,a,controller,with,price,and,stock,as,its,type,and,method,level,mappings,respectively,p,when,the,simple,broker,is,enabled,the,path,matcher,configured,here,is,also,used,to,match,message,destinations,when,brokering,messages,since,4,1,see,org,springframework,messaging,simp,broker,default,subscription,registry,set,path,matcher;public,message,broker,registry,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher);1495868221;Configure the PathMatcher to use to match the destinations of incoming_messages to {@code @MessageMapping} and {@code @SubscribeMapping} methods._<p>By default {@link org.springframework.util.AntPathMatcher} is configured._However applications may provide an {@code AntPathMatcher} instance_customized to use "." (commonly used in messaging) instead of "/" as path_separator or provide a completely different PathMatcher implementation._<p>Note that the configured PathMatcher is only used for matching the_portion of the destination after the configured prefix. For example given_application destination prefix "/app" and destination "/app/price.stock.**",_the message might be mapped to a controller with "price" and "stock.**"_as its type and method-level mappings respectively._<p>When the simple broker is enabled, the PathMatcher configured here is_also used to match message destinations when brokering messages._@since 4.1_@see org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry#setPathMatcher;public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};configure,the,path,matcher,to,use,to,match,the,destinations,of,incoming,messages,to,code,message,mapping,and,code,subscribe,mapping,methods,p,by,default,link,org,springframework,util,ant,path,matcher,is,configured,however,applications,may,provide,an,code,ant,path,matcher,instance,customized,to,use,commonly,used,in,messaging,instead,of,as,path,separator,or,provide,a,completely,different,path,matcher,implementation,p,note,that,the,configured,path,matcher,is,only,used,for,matching,the,portion,of,the,destination,after,the,configured,prefix,for,example,given,application,destination,prefix,app,and,destination,app,price,stock,the,message,might,be,mapped,to,a,controller,with,price,and,stock,as,its,type,and,method,level,mappings,respectively,p,when,the,simple,broker,is,enabled,the,path,matcher,configured,here,is,also,used,to,match,message,destinations,when,brokering,messages,since,4,1,see,org,springframework,messaging,simp,broker,default,subscription,registry,set,path,matcher;public,message,broker,registry,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher);1496837955;Configure the PathMatcher to use to match the destinations of incoming_messages to {@code @MessageMapping} and {@code @SubscribeMapping} methods._<p>By default {@link org.springframework.util.AntPathMatcher} is configured._However applications may provide an {@code AntPathMatcher} instance_customized to use "." (commonly used in messaging) instead of "/" as path_separator or provide a completely different PathMatcher implementation._<p>Note that the configured PathMatcher is only used for matching the_portion of the destination after the configured prefix. For example given_application destination prefix "/app" and destination "/app/price.stock.**",_the message might be mapped to a controller with "price" and "stock.**"_as its type and method-level mappings respectively._<p>When the simple broker is enabled, the PathMatcher configured here is_also used to match message destinations when brokering messages._@since 4.1_@see org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry#setPathMatcher;public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};configure,the,path,matcher,to,use,to,match,the,destinations,of,incoming,messages,to,code,message,mapping,and,code,subscribe,mapping,methods,p,by,default,link,org,springframework,util,ant,path,matcher,is,configured,however,applications,may,provide,an,code,ant,path,matcher,instance,customized,to,use,commonly,used,in,messaging,instead,of,as,path,separator,or,provide,a,completely,different,path,matcher,implementation,p,note,that,the,configured,path,matcher,is,only,used,for,matching,the,portion,of,the,destination,after,the,configured,prefix,for,example,given,application,destination,prefix,app,and,destination,app,price,stock,the,message,might,be,mapped,to,a,controller,with,price,and,stock,as,its,type,and,method,level,mappings,respectively,p,when,the,simple,broker,is,enabled,the,path,matcher,configured,here,is,also,used,to,match,message,destinations,when,brokering,messages,since,4,1,see,org,springframework,messaging,simp,broker,default,subscription,registry,set,path,matcher;public,message,broker,registry,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher);1498780456;Configure the PathMatcher to use to match the destinations of incoming_messages to {@code @MessageMapping} and {@code @SubscribeMapping} methods._<p>By default {@link org.springframework.util.AntPathMatcher} is configured._However applications may provide an {@code AntPathMatcher} instance_customized to use "." (commonly used in messaging) instead of "/" as path_separator or provide a completely different PathMatcher implementation._<p>Note that the configured PathMatcher is only used for matching the_portion of the destination after the configured prefix. For example given_application destination prefix "/app" and destination "/app/price.stock.**",_the message might be mapped to a controller with "price" and "stock.**"_as its type and method-level mappings respectively._<p>When the simple broker is enabled, the PathMatcher configured here is_also used to match message destinations when brokering messages._@since 4.1_@see org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry#setPathMatcher;public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};configure,the,path,matcher,to,use,to,match,the,destinations,of,incoming,messages,to,code,message,mapping,and,code,subscribe,mapping,methods,p,by,default,link,org,springframework,util,ant,path,matcher,is,configured,however,applications,may,provide,an,code,ant,path,matcher,instance,customized,to,use,commonly,used,in,messaging,instead,of,as,path,separator,or,provide,a,completely,different,path,matcher,implementation,p,note,that,the,configured,path,matcher,is,only,used,for,matching,the,portion,of,the,destination,after,the,configured,prefix,for,example,given,application,destination,prefix,app,and,destination,app,price,stock,the,message,might,be,mapped,to,a,controller,with,price,and,stock,as,its,type,and,method,level,mappings,respectively,p,when,the,simple,broker,is,enabled,the,path,matcher,configured,here,is,also,used,to,match,message,destinations,when,brokering,messages,since,4,1,see,org,springframework,messaging,simp,broker,default,subscription,registry,set,path,matcher;public,message,broker,registry,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher);1532402679;Configure the PathMatcher to use to match the destinations of incoming_messages to {@code @MessageMapping} and {@code @SubscribeMapping} methods._<p>By default {@link org.springframework.util.AntPathMatcher} is configured._However applications may provide an {@code AntPathMatcher} instance_customized to use "." (commonly used in messaging) instead of "/" as path_separator or provide a completely different PathMatcher implementation._<p>Note that the configured PathMatcher is only used for matching the_portion of the destination after the configured prefix. For example given_application destination prefix "/app" and destination "/app/price.stock.**",_the message might be mapped to a controller with "price" and "stock.**"_as its type and method-level mappings respectively._<p>When the simple broker is enabled, the PathMatcher configured here is_also used to match message destinations when brokering messages._@since 4.1_@see org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry#setPathMatcher;public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};configure,the,path,matcher,to,use,to,match,the,destinations,of,incoming,messages,to,code,message,mapping,and,code,subscribe,mapping,methods,p,by,default,link,org,springframework,util,ant,path,matcher,is,configured,however,applications,may,provide,an,code,ant,path,matcher,instance,customized,to,use,commonly,used,in,messaging,instead,of,as,path,separator,or,provide,a,completely,different,path,matcher,implementation,p,note,that,the,configured,path,matcher,is,only,used,for,matching,the,portion,of,the,destination,after,the,configured,prefix,for,example,given,application,destination,prefix,app,and,destination,app,price,stock,the,message,might,be,mapped,to,a,controller,with,price,and,stock,as,its,type,and,method,level,mappings,respectively,p,when,the,simple,broker,is,enabled,the,path,matcher,configured,here,is,also,used,to,match,message,destinations,when,brokering,messages,since,4,1,see,org,springframework,messaging,simp,broker,default,subscription,registry,set,path,matcher;public,message,broker,registry,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher);1532461483;Configure the PathMatcher to use to match the destinations of incoming_messages to {@code @MessageMapping} and {@code @SubscribeMapping} methods._<p>By default {@link org.springframework.util.AntPathMatcher} is configured._However applications may provide an {@code AntPathMatcher} instance_customized to use "." (commonly used in messaging) instead of "/" as path_separator or provide a completely different PathMatcher implementation._<p>Note that the configured PathMatcher is only used for matching the_portion of the destination after the configured prefix. For example given_application destination prefix "/app" and destination "/app/price.stock.**",_the message might be mapped to a controller with "price" and "stock.**"_as its type and method-level mappings respectively._<p>When the simple broker is enabled, the PathMatcher configured here is_also used to match message destinations when brokering messages._@since 4.1_@see org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry#setPathMatcher;public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};configure,the,path,matcher,to,use,to,match,the,destinations,of,incoming,messages,to,code,message,mapping,and,code,subscribe,mapping,methods,p,by,default,link,org,springframework,util,ant,path,matcher,is,configured,however,applications,may,provide,an,code,ant,path,matcher,instance,customized,to,use,commonly,used,in,messaging,instead,of,as,path,separator,or,provide,a,completely,different,path,matcher,implementation,p,note,that,the,configured,path,matcher,is,only,used,for,matching,the,portion,of,the,destination,after,the,configured,prefix,for,example,given,application,destination,prefix,app,and,destination,app,price,stock,the,message,might,be,mapped,to,a,controller,with,price,and,stock,as,its,type,and,method,level,mappings,respectively,p,when,the,simple,broker,is,enabled,the,path,matcher,configured,here,is,also,used,to,match,message,destinations,when,brokering,messages,since,4,1,see,org,springframework,messaging,simp,broker,default,subscription,registry,set,path,matcher;public,message,broker,registry,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher);1532463492;Configure the PathMatcher to use to match the destinations of incoming_messages to {@code @MessageMapping} and {@code @SubscribeMapping} methods._<p>By default {@link org.springframework.util.AntPathMatcher} is configured._However applications may provide an {@code AntPathMatcher} instance_customized to use "." (commonly used in messaging) instead of "/" as path_separator or provide a completely different PathMatcher implementation._<p>Note that the configured PathMatcher is only used for matching the_portion of the destination after the configured prefix. For example given_application destination prefix "/app" and destination "/app/price.stock.**",_the message might be mapped to a controller with "price" and "stock.**"_as its type and method-level mappings respectively._<p>When the simple broker is enabled, the PathMatcher configured here is_also used to match message destinations when brokering messages._@since 4.1_@see org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry#setPathMatcher;public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};configure,the,path,matcher,to,use,to,match,the,destinations,of,incoming,messages,to,code,message,mapping,and,code,subscribe,mapping,methods,p,by,default,link,org,springframework,util,ant,path,matcher,is,configured,however,applications,may,provide,an,code,ant,path,matcher,instance,customized,to,use,commonly,used,in,messaging,instead,of,as,path,separator,or,provide,a,completely,different,path,matcher,implementation,p,note,that,the,configured,path,matcher,is,only,used,for,matching,the,portion,of,the,destination,after,the,configured,prefix,for,example,given,application,destination,prefix,app,and,destination,app,price,stock,the,message,might,be,mapped,to,a,controller,with,price,and,stock,as,its,type,and,method,level,mappings,respectively,p,when,the,simple,broker,is,enabled,the,path,matcher,configured,here,is,also,used,to,match,message,destinations,when,brokering,messages,since,4,1,see,org,springframework,messaging,simp,broker,default,subscription,registry,set,path,matcher;public,message,broker,registry,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher);1534150594;Configure the PathMatcher to use to match the destinations of incoming_messages to {@code @MessageMapping} and {@code @SubscribeMapping} methods._<p>By default {@link org.springframework.util.AntPathMatcher} is configured._However applications may provide an {@code AntPathMatcher} instance_customized to use "." (commonly used in messaging) instead of "/" as path_separator or provide a completely different PathMatcher implementation._<p>Note that the configured PathMatcher is only used for matching the_portion of the destination after the configured prefix. For example given_application destination prefix "/app" and destination "/app/price.stock.**",_the message might be mapped to a controller with "price" and "stock.**"_as its type and method-level mappings respectively._<p>When the simple broker is enabled, the PathMatcher configured here is_also used to match message destinations when brokering messages._@since 4.1_@see org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry#setPathMatcher;public MessageBrokerRegistry setPathMatcher(PathMatcher pathMatcher) {_		this.pathMatcher = pathMatcher__		return this__	};configure,the,path,matcher,to,use,to,match,the,destinations,of,incoming,messages,to,code,message,mapping,and,code,subscribe,mapping,methods,p,by,default,link,org,springframework,util,ant,path,matcher,is,configured,however,applications,may,provide,an,code,ant,path,matcher,instance,customized,to,use,commonly,used,in,messaging,instead,of,as,path,separator,or,provide,a,completely,different,path,matcher,implementation,p,note,that,the,configured,path,matcher,is,only,used,for,matching,the,portion,of,the,destination,after,the,configured,prefix,for,example,given,application,destination,prefix,app,and,destination,app,price,stock,the,message,might,be,mapped,to,a,controller,with,price,and,stock,as,its,type,and,method,level,mappings,respectively,p,when,the,simple,broker,is,enabled,the,path,matcher,configured,here,is,also,used,to,match,message,destinations,when,brokering,messages,since,4,1,see,org,springframework,messaging,simp,broker,default,subscription,registry,set,path,matcher;public,message,broker,registry,set,path,matcher,path,matcher,path,matcher,this,path,matcher,path,matcher,return,this
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1385502674;Customize the channel used to send messages from the application to the message_broker. By default messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1385507478;Customize the channel used to send messages from the application to the message_broker. By default messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1386004713;Customize the channel used to send messages from the application to the message_broker. By default messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1386365044;Customize the channel used to send messages from the application to the message_broker. By default messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1395703237;Customize the channel used to send messages from the application to the message_broker. By default messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1395703238;Customize the channel used to send messages from the application to the message_broker. By default messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1405378164;Customize the channel used to send messages from the application to the message_broker. By default messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1405378165;Customize the channel used to send messages from the application to the message_broker. By default messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1407154420;Customize the channel used to send messages from the application to the message_broker. By default messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1408751872;Customize the channel used to send messages from the application to the message_broker. By default, messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1413848647;Customize the channel used to send messages from the application to the message_broker. By default, messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1429286144;Customize the channel used to send messages from the application to the message_broker. By default, messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1431458952;Customize the channel used to send messages from the application to the message_broker. By default, messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1432018141;Customize the channel used to send messages from the application to the message_broker. By default, messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1469614318;Customize the channel used to send messages from the application to the message_broker. By default, messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1485810955;Customize the channel used to send messages from the application to the message_broker. By default, messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1495868221;Customize the channel used to send messages from the application to the message_broker. By default, messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1496837955;Customize the channel used to send messages from the application to the message_broker. By default, messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1498780456;Customize the channel used to send messages from the application to the message_broker. By default, messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1532402679;Customize the channel used to send messages from the application to the message_broker. By default, messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1532461483;Customize the channel used to send messages from the application to the message_broker. By default, messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1532463492;Customize the channel used to send messages from the application to the message_broker. By default, messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public ChannelRegistration configureBrokerChannel();1534150594;Customize the channel used to send messages from the application to the message_broker. By default, messages from the application to the message broker are sent_synchronously, which means application code sending a message will find out_if the message cannot be sent through an exception. However, this can be changed_if the broker channel is configured here with task executor properties.;public ChannelRegistration configureBrokerChannel() {_		return this.brokerChannelRegistration__	};customize,the,channel,used,to,send,messages,from,the,application,to,the,message,broker,by,default,messages,from,the,application,to,the,message,broker,are,sent,synchronously,which,means,application,code,sending,a,message,will,find,out,if,the,message,cannot,be,sent,through,an,exception,however,this,can,be,changed,if,the,broker,channel,is,configured,here,with,task,executor,properties;public,channel,registration,configure,broker,channel,return,this,broker,channel,registration
MessageBrokerRegistry -> public MessageBrokerRegistry setPreservePublishOrder(boolean preservePublishOrder);1532461483;Whether the client must receive messages in the order of publication._<p>By default messages sent to the {@code "clientOutboundChannel"} may_not be processed in the same order because the channel is backed by a_ThreadPoolExecutor that in turn does not guarantee processing in order._<p>When this flag is set to {@code true} messages within the same session_will be sent to the {@code "clientOutboundChannel"} one at a time in_order to preserve the order of publication. Enable this only if needed_since there is some performance overhead to keep messages in order._@since 5.1;public MessageBrokerRegistry setPreservePublishOrder(boolean preservePublishOrder) {_		this.preservePublishOrder = preservePublishOrder__		return this__	};whether,the,client,must,receive,messages,in,the,order,of,publication,p,by,default,messages,sent,to,the,code,client,outbound,channel,may,not,be,processed,in,the,same,order,because,the,channel,is,backed,by,a,thread,pool,executor,that,in,turn,does,not,guarantee,processing,in,order,p,when,this,flag,is,set,to,code,true,messages,within,the,same,session,will,be,sent,to,the,code,client,outbound,channel,one,at,a,time,in,order,to,preserve,the,order,of,publication,enable,this,only,if,needed,since,there,is,some,performance,overhead,to,keep,messages,in,order,since,5,1;public,message,broker,registry,set,preserve,publish,order,boolean,preserve,publish,order,this,preserve,publish,order,preserve,publish,order,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setPreservePublishOrder(boolean preservePublishOrder);1532463492;Whether the client must receive messages in the order of publication._<p>By default messages sent to the {@code "clientOutboundChannel"} may_not be processed in the same order because the channel is backed by a_ThreadPoolExecutor that in turn does not guarantee processing in order._<p>When this flag is set to {@code true} messages within the same session_will be sent to the {@code "clientOutboundChannel"} one at a time in_order to preserve the order of publication. Enable this only if needed_since there is some performance overhead to keep messages in order._@since 5.1;public MessageBrokerRegistry setPreservePublishOrder(boolean preservePublishOrder) {_		this.preservePublishOrder = preservePublishOrder__		return this__	};whether,the,client,must,receive,messages,in,the,order,of,publication,p,by,default,messages,sent,to,the,code,client,outbound,channel,may,not,be,processed,in,the,same,order,because,the,channel,is,backed,by,a,thread,pool,executor,that,in,turn,does,not,guarantee,processing,in,order,p,when,this,flag,is,set,to,code,true,messages,within,the,same,session,will,be,sent,to,the,code,client,outbound,channel,one,at,a,time,in,order,to,preserve,the,order,of,publication,enable,this,only,if,needed,since,there,is,some,performance,overhead,to,keep,messages,in,order,since,5,1;public,message,broker,registry,set,preserve,publish,order,boolean,preserve,publish,order,this,preserve,publish,order,preserve,publish,order,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setPreservePublishOrder(boolean preservePublishOrder);1534150594;Whether the client must receive messages in the order of publication._<p>By default messages sent to the {@code "clientOutboundChannel"} may_not be processed in the same order because the channel is backed by a_ThreadPoolExecutor that in turn does not guarantee processing in order._<p>When this flag is set to {@code true} messages within the same session_will be sent to the {@code "clientOutboundChannel"} one at a time in_order to preserve the order of publication. Enable this only if needed_since there is some performance overhead to keep messages in order._@since 5.1;public MessageBrokerRegistry setPreservePublishOrder(boolean preservePublishOrder) {_		this.preservePublishOrder = preservePublishOrder__		return this__	};whether,the,client,must,receive,messages,in,the,order,of,publication,p,by,default,messages,sent,to,the,code,client,outbound,channel,may,not,be,processed,in,the,same,order,because,the,channel,is,backed,by,a,thread,pool,executor,that,in,turn,does,not,guarantee,processing,in,order,p,when,this,flag,is,set,to,code,true,messages,within,the,same,session,will,be,sent,to,the,code,client,outbound,channel,one,at,a,time,in,order,to,preserve,the,order,of,publication,enable,this,only,if,needed,since,there,is,some,performance,overhead,to,keep,messages,in,order,since,5,1;public,message,broker,registry,set,preserve,publish,order,boolean,preserve,publish,order,this,preserve,publish,order,preserve,publish,order,return,this
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1385258957;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBroker = new SimpleBrokerRegistration(this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBroker__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,new,simple,broker,registration,this,client,outbound,channel,destination,prefixes,return,this,simple,broker
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1385502674;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBroker = new SimpleBrokerRegistration(this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBroker__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,new,simple,broker,registration,this,client,outbound,channel,destination,prefixes,return,this,simple,broker
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1385507478;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBroker = new SimpleBrokerRegistration(this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBroker__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,new,simple,broker,registration,this,client,outbound,channel,destination,prefixes,return,this,simple,broker
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1386004713;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1386365044;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1395703237;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1395703238;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1405378164;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1405378165;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1407154420;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1408751872;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1413848647;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1429286144;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1431458952;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1432018141;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1469614318;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1485810955;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1495868221;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1496837955;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1498780456;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1532402679;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1532461483;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1532463492;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes);1534150594;Enable a simple message broker and configure one or more prefixes to filter_destinations targeting the broker (e.g. destinations prefixed with "/topic").;public SimpleBrokerRegistration enableSimpleBroker(String... destinationPrefixes) {_		this.simpleBrokerRegistration = new SimpleBrokerRegistration(_				this.clientInboundChannel, this.clientOutboundChannel, destinationPrefixes)__		return this.simpleBrokerRegistration__	};enable,a,simple,message,broker,and,configure,one,or,more,prefixes,to,filter,destinations,targeting,the,broker,e,g,destinations,prefixed,with,topic;public,simple,broker,registration,enable,simple,broker,string,destination,prefixes,this,simple,broker,registration,new,simple,broker,registration,this,client,inbound,channel,this,client,outbound,channel,destination,prefixes,return,this,simple,broker,registration
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1385258957;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>_When messages are processed, the matching prefix is removed from the destination in_order to form the lookup path. This means annotations should not contain the_destination prefix._<p>_Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1385502674;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>_When messages are processed, the matching prefix is removed from the destination in_order to form the lookup path. This means annotations should not contain the_destination prefix._<p>_Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1385507478;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1386004713;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1386365044;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1395703237;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1395703238;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1405378164;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1405378165;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1407154420;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1408751872;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1413848647;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1429286144;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1431458952;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1432018141;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1469614318;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1485810955;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1495868221;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1496837955;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1498780456;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1532402679;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1532461483;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1532463492;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
MessageBrokerRegistry -> public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes);1534150594;Configure one or more prefixes to filter destinations targeting application_annotated methods. For example destinations prefixed with "/app" may be_processed by annotated methods while other destinations may target the_message broker (e.g. "/topic", "/queue")._<p>When messages are processed, the matching prefix is removed from the destination_in order to form the lookup path. This means annotations should not contain the_destination prefix._<p>Prefixes that do not have a trailing slash will have one automatically appended.;public MessageBrokerRegistry setApplicationDestinationPrefixes(String... prefixes) {_		this.applicationDestinationPrefixes = prefixes__		return this__	};configure,one,or,more,prefixes,to,filter,destinations,targeting,application,annotated,methods,for,example,destinations,prefixed,with,app,may,be,processed,by,annotated,methods,while,other,destinations,may,target,the,message,broker,e,g,topic,queue,p,when,messages,are,processed,the,matching,prefix,is,removed,from,the,destination,in,order,to,form,the,lookup,path,this,means,annotations,should,not,contain,the,destination,prefix,p,prefixes,that,do,not,have,a,trailing,slash,will,have,one,automatically,appended;public,message,broker,registry,set,application,destination,prefixes,string,prefixes,this,application,destination,prefixes,prefixes,return,this
