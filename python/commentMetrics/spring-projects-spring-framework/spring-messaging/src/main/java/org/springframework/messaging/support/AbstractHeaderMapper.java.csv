# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractHeaderMapper -> public void setOutboundPrefix(String outboundPrefix);1407509982;Specify a prefix to be appended to the protocol property name for any_user-defined message header that is being mapped into the protocol-specific_Message. The default is an empty string (no prefix).;public void setOutboundPrefix(String outboundPrefix) {_		this.outboundPrefix = (outboundPrefix != null ? outboundPrefix : "")__	};specify,a,prefix,to,be,appended,to,the,protocol,property,name,for,any,user,defined,message,header,that,is,being,mapped,into,the,protocol,specific,message,the,default,is,an,empty,string,no,prefix;public,void,set,outbound,prefix,string,outbound,prefix,this,outbound,prefix,outbound,prefix,null,outbound,prefix
AbstractHeaderMapper -> public void setOutboundPrefix(String outboundPrefix);1408751872;Specify a prefix to be appended to the protocol property name for any_user-defined message header that is being mapped into the protocol-specific_Message. The default is an empty String (no prefix).;public void setOutboundPrefix(String outboundPrefix) {_		this.outboundPrefix = (outboundPrefix != null ? outboundPrefix : "")__	};specify,a,prefix,to,be,appended,to,the,protocol,property,name,for,any,user,defined,message,header,that,is,being,mapped,into,the,protocol,specific,message,the,default,is,an,empty,string,no,prefix;public,void,set,outbound,prefix,string,outbound,prefix,this,outbound,prefix,outbound,prefix,null,outbound,prefix
AbstractHeaderMapper -> public void setOutboundPrefix(String outboundPrefix);1495868221;Specify a prefix to be appended to the protocol property name for any_user-defined message header that is being mapped into the protocol-specific_Message. The default is an empty String (no prefix).;public void setOutboundPrefix(String outboundPrefix) {_		this.outboundPrefix = (outboundPrefix != null ? outboundPrefix : "")__	};specify,a,prefix,to,be,appended,to,the,protocol,property,name,for,any,user,defined,message,header,that,is,being,mapped,into,the,protocol,specific,message,the,default,is,an,empty,string,no,prefix;public,void,set,outbound,prefix,string,outbound,prefix,this,outbound,prefix,outbound,prefix,null,outbound,prefix
AbstractHeaderMapper -> protected <V> V getHeaderIfAvailable(Map<String, Object> headers, String name, Class<V> type);1407509982;Return the header value or {@code null} if it does not exist or does not match_the requested {@code type}.;protected <V> V getHeaderIfAvailable(Map<String, Object> headers, String name, Class<V> type) {_		Object value = headers.get(name)__		if (value == null) {_			return null__		}_		if (!type.isAssignableFrom(value.getClass())) {_			if (logger.isWarnEnabled()) {_				logger.warn("Skipping header '" + name + "'expected type [" + type + "], but got [" +_						value.getClass() + "]")__			}_			return null__		}_		else {_			return type.cast(value)__		}_	};return,the,header,value,or,code,null,if,it,does,not,exist,or,does,not,match,the,requested,code,type;protected,v,v,get,header,if,available,map,string,object,headers,string,name,class,v,type,object,value,headers,get,name,if,value,null,return,null,if,type,is,assignable,from,value,get,class,if,logger,is,warn,enabled,logger,warn,skipping,header,name,expected,type,type,but,got,value,get,class,return,null,else,return,type,cast,value
AbstractHeaderMapper -> protected <V> V getHeaderIfAvailable(Map<String, Object> headers, String name, Class<V> type);1408751872;Return the header value, or {@code null} if it does not exist_or does not match the requested {@code type}.;protected <V> V getHeaderIfAvailable(Map<String, Object> headers, String name, Class<V> type) {_		Object value = headers.get(name)__		if (value == null) {_			return null__		}_		if (!type.isAssignableFrom(value.getClass())) {_			if (logger.isWarnEnabled()) {_				logger.warn("Skipping header '" + name + "'expected type [" + type + "], but got [" +_						value.getClass() + "]")__			}_			return null__		}_		else {_			return type.cast(value)__		}_	};return,the,header,value,or,code,null,if,it,does,not,exist,or,does,not,match,the,requested,code,type;protected,v,v,get,header,if,available,map,string,object,headers,string,name,class,v,type,object,value,headers,get,name,if,value,null,return,null,if,type,is,assignable,from,value,get,class,if,logger,is,warn,enabled,logger,warn,skipping,header,name,expected,type,type,but,got,value,get,class,return,null,else,return,type,cast,value
AbstractHeaderMapper -> @Nullable 	protected <V> V getHeaderIfAvailable(Map<String, Object> headers, String name, Class<V> type);1495868221;Return the header value, or {@code null} if it does not exist_or does not match the requested {@code type}.;@Nullable_	protected <V> V getHeaderIfAvailable(Map<String, Object> headers, String name, Class<V> type) {_		Object value = headers.get(name)__		if (value == null) {_			return null__		}_		if (!type.isAssignableFrom(value.getClass())) {_			if (logger.isWarnEnabled()) {_				logger.warn("Skipping header '" + name + "'expected type [" + type + "], but got [" +_						value.getClass() + "]")__			}_			return null__		}_		else {_			return type.cast(value)__		}_	};return,the,header,value,or,code,null,if,it,does,not,exist,or,does,not,match,the,requested,code,type;nullable,protected,v,v,get,header,if,available,map,string,object,headers,string,name,class,v,type,object,value,headers,get,name,if,value,null,return,null,if,type,is,assignable,from,value,get,class,if,logger,is,warn,enabled,logger,warn,skipping,header,name,expected,type,type,but,got,value,get,class,return,null,else,return,type,cast,value
AbstractHeaderMapper -> @Nullable 	protected <V> V getHeaderIfAvailable(Map<String, Object> headers, String name, Class<V> type);1496837955;Return the header value, or {@code null} if it does not exist_or does not match the requested {@code type}.;@Nullable_	protected <V> V getHeaderIfAvailable(Map<String, Object> headers, String name, Class<V> type) {_		Object value = headers.get(name)__		if (value == null) {_			return null__		}_		if (!type.isAssignableFrom(value.getClass())) {_			if (logger.isWarnEnabled()) {_				logger.warn("Skipping header '" + name + "'expected type [" + type + "], but got [" +_						value.getClass() + "]")__			}_			return null__		}_		else {_			return type.cast(value)__		}_	};return,the,header,value,or,code,null,if,it,does,not,exist,or,does,not,match,the,requested,code,type;nullable,protected,v,v,get,header,if,available,map,string,object,headers,string,name,class,v,type,object,value,headers,get,name,if,value,null,return,null,if,type,is,assignable,from,value,get,class,if,logger,is,warn,enabled,logger,warn,skipping,header,name,expected,type,type,but,got,value,get,class,return,null,else,return,type,cast,value
AbstractHeaderMapper -> @Nullable 	protected <V> V getHeaderIfAvailable(Map<String, Object> headers, String name, Class<V> type);1530174524;Return the header value, or {@code null} if it does not exist_or does not match the requested {@code type}.;@Nullable_	protected <V> V getHeaderIfAvailable(Map<String, Object> headers, String name, Class<V> type) {_		Object value = headers.get(name)__		if (value == null) {_			return null__		}_		if (!type.isAssignableFrom(value.getClass())) {_			if (logger.isWarnEnabled()) {_				logger.warn("Skipping header '" + name + "'expected type [" + type + "], but got [" +_						value.getClass() + "]")__			}_			return null__		}_		else {_			return type.cast(value)__		}_	};return,the,header,value,or,code,null,if,it,does,not,exist,or,does,not,match,the,requested,code,type;nullable,protected,v,v,get,header,if,available,map,string,object,headers,string,name,class,v,type,object,value,headers,get,name,if,value,null,return,null,if,type,is,assignable,from,value,get,class,if,logger,is,warn,enabled,logger,warn,skipping,header,name,expected,type,type,but,got,value,get,class,return,null,else,return,type,cast,value
AbstractHeaderMapper -> @Nullable 	protected <V> V getHeaderIfAvailable(Map<String, Object> headers, String name, Class<V> type);1532091916;Return the header value, or {@code null} if it does not exist_or does not match the requested {@code type}.;@Nullable_	protected <V> V getHeaderIfAvailable(Map<String, Object> headers, String name, Class<V> type) {_		Object value = headers.get(name)__		if (value == null) {_			return null__		}_		if (!type.isAssignableFrom(value.getClass())) {_			if (logger.isDebugEnabled()) {_				logger.debug("Skipping header '" + name + "': expected type [" + type + "], but got [" +_						value.getClass() + "]")__			}_			return null__		}_		else {_			return type.cast(value)__		}_	};return,the,header,value,or,code,null,if,it,does,not,exist,or,does,not,match,the,requested,code,type;nullable,protected,v,v,get,header,if,available,map,string,object,headers,string,name,class,v,type,object,value,headers,get,name,if,value,null,return,null,if,type,is,assignable,from,value,get,class,if,logger,is,debug,enabled,logger,debug,skipping,header,name,expected,type,type,but,got,value,get,class,return,null,else,return,type,cast,value
AbstractHeaderMapper -> public void setInboundPrefix(@Nullable String inboundPrefix);1496837955;Specify a prefix to be appended to the message header name for any_user-defined property that is being mapped into the MessageHeaders._The default is an empty String (no prefix).;public void setInboundPrefix(@Nullable String inboundPrefix) {_		this.inboundPrefix = (inboundPrefix != null ? inboundPrefix : "")__	};specify,a,prefix,to,be,appended,to,the,message,header,name,for,any,user,defined,property,that,is,being,mapped,into,the,message,headers,the,default,is,an,empty,string,no,prefix;public,void,set,inbound,prefix,nullable,string,inbound,prefix,this,inbound,prefix,inbound,prefix,null,inbound,prefix
AbstractHeaderMapper -> public void setInboundPrefix(@Nullable String inboundPrefix);1530174524;Specify a prefix to be appended to the message header name for any_user-defined property that is being mapped into the MessageHeaders._The default is an empty String (no prefix).;public void setInboundPrefix(@Nullable String inboundPrefix) {_		this.inboundPrefix = (inboundPrefix != null ? inboundPrefix : "")__	};specify,a,prefix,to,be,appended,to,the,message,header,name,for,any,user,defined,property,that,is,being,mapped,into,the,message,headers,the,default,is,an,empty,string,no,prefix;public,void,set,inbound,prefix,nullable,string,inbound,prefix,this,inbound,prefix,inbound,prefix,null,inbound,prefix
AbstractHeaderMapper -> public void setInboundPrefix(@Nullable String inboundPrefix);1532091916;Specify a prefix to be appended to the message header name for any_user-defined property that is being mapped into the MessageHeaders._The default is an empty String (no prefix).;public void setInboundPrefix(@Nullable String inboundPrefix) {_		this.inboundPrefix = (inboundPrefix != null ? inboundPrefix : "")__	};specify,a,prefix,to,be,appended,to,the,message,header,name,for,any,user,defined,property,that,is,being,mapped,into,the,message,headers,the,default,is,an,empty,string,no,prefix;public,void,set,inbound,prefix,nullable,string,inbound,prefix,this,inbound,prefix,inbound,prefix,null,inbound,prefix
AbstractHeaderMapper -> protected String fromHeaderName(String headerName);1407509982;Generate the name to use to set the header defined by the specified {@code headerName} to_the protocol specific message._@see #setOutboundPrefix;protected String fromHeaderName(String headerName) {_		String propertyName = headerName__		if (StringUtils.hasText(this.outboundPrefix) && !propertyName.startsWith(this.outboundPrefix)) {_			propertyName = this.outboundPrefix + headerName__		}_		return propertyName__	};generate,the,name,to,use,to,set,the,header,defined,by,the,specified,code,header,name,to,the,protocol,specific,message,see,set,outbound,prefix;protected,string,from,header,name,string,header,name,string,property,name,header,name,if,string,utils,has,text,this,outbound,prefix,property,name,starts,with,this,outbound,prefix,property,name,this,outbound,prefix,header,name,return,property,name
AbstractHeaderMapper -> protected String fromHeaderName(String headerName);1408751872;Generate the name to use to set the header defined by the specified_{@code headerName} to the protocol specific message._@see #setOutboundPrefix;protected String fromHeaderName(String headerName) {_		String propertyName = headerName__		if (StringUtils.hasText(this.outboundPrefix) && !propertyName.startsWith(this.outboundPrefix)) {_			propertyName = this.outboundPrefix + headerName__		}_		return propertyName__	};generate,the,name,to,use,to,set,the,header,defined,by,the,specified,code,header,name,to,the,protocol,specific,message,see,set,outbound,prefix;protected,string,from,header,name,string,header,name,string,property,name,header,name,if,string,utils,has,text,this,outbound,prefix,property,name,starts,with,this,outbound,prefix,property,name,this,outbound,prefix,header,name,return,property,name
AbstractHeaderMapper -> protected String fromHeaderName(String headerName);1495868221;Generate the name to use to set the header defined by the specified_{@code headerName} to the protocol specific message._@see #setOutboundPrefix;protected String fromHeaderName(String headerName) {_		String propertyName = headerName__		if (StringUtils.hasText(this.outboundPrefix) && !propertyName.startsWith(this.outboundPrefix)) {_			propertyName = this.outboundPrefix + headerName__		}_		return propertyName__	};generate,the,name,to,use,to,set,the,header,defined,by,the,specified,code,header,name,to,the,protocol,specific,message,see,set,outbound,prefix;protected,string,from,header,name,string,header,name,string,property,name,header,name,if,string,utils,has,text,this,outbound,prefix,property,name,starts,with,this,outbound,prefix,property,name,this,outbound,prefix,header,name,return,property,name
AbstractHeaderMapper -> protected String fromHeaderName(String headerName);1496837955;Generate the name to use to set the header defined by the specified_{@code headerName} to the protocol specific message._@see #setOutboundPrefix;protected String fromHeaderName(String headerName) {_		String propertyName = headerName__		if (StringUtils.hasText(this.outboundPrefix) && !propertyName.startsWith(this.outboundPrefix)) {_			propertyName = this.outboundPrefix + headerName__		}_		return propertyName__	};generate,the,name,to,use,to,set,the,header,defined,by,the,specified,code,header,name,to,the,protocol,specific,message,see,set,outbound,prefix;protected,string,from,header,name,string,header,name,string,property,name,header,name,if,string,utils,has,text,this,outbound,prefix,property,name,starts,with,this,outbound,prefix,property,name,this,outbound,prefix,header,name,return,property,name
AbstractHeaderMapper -> protected String fromHeaderName(String headerName);1530174524;Generate the name to use to set the header defined by the specified_{@code headerName} to the protocol specific message._@see #setOutboundPrefix;protected String fromHeaderName(String headerName) {_		String propertyName = headerName__		if (StringUtils.hasText(this.outboundPrefix) && !propertyName.startsWith(this.outboundPrefix)) {_			propertyName = this.outboundPrefix + headerName__		}_		return propertyName__	};generate,the,name,to,use,to,set,the,header,defined,by,the,specified,code,header,name,to,the,protocol,specific,message,see,set,outbound,prefix;protected,string,from,header,name,string,header,name,string,property,name,header,name,if,string,utils,has,text,this,outbound,prefix,property,name,starts,with,this,outbound,prefix,property,name,this,outbound,prefix,header,name,return,property,name
AbstractHeaderMapper -> protected String fromHeaderName(String headerName);1532091916;Generate the name to use to set the header defined by the specified_{@code headerName} to the protocol specific message._@see #setOutboundPrefix;protected String fromHeaderName(String headerName) {_		String propertyName = headerName__		if (StringUtils.hasText(this.outboundPrefix) && !propertyName.startsWith(this.outboundPrefix)) {_			propertyName = this.outboundPrefix + headerName__		}_		return propertyName__	};generate,the,name,to,use,to,set,the,header,defined,by,the,specified,code,header,name,to,the,protocol,specific,message,see,set,outbound,prefix;protected,string,from,header,name,string,header,name,string,property,name,header,name,if,string,utils,has,text,this,outbound,prefix,property,name,starts,with,this,outbound,prefix,property,name,this,outbound,prefix,header,name,return,property,name
AbstractHeaderMapper -> public void setOutboundPrefix(@Nullable String outboundPrefix);1496837955;Specify a prefix to be appended to the protocol property name for any_user-defined message header that is being mapped into the protocol-specific_Message. The default is an empty String (no prefix).;public void setOutboundPrefix(@Nullable String outboundPrefix) {_		this.outboundPrefix = (outboundPrefix != null ? outboundPrefix : "")__	};specify,a,prefix,to,be,appended,to,the,protocol,property,name,for,any,user,defined,message,header,that,is,being,mapped,into,the,protocol,specific,message,the,default,is,an,empty,string,no,prefix;public,void,set,outbound,prefix,nullable,string,outbound,prefix,this,outbound,prefix,outbound,prefix,null,outbound,prefix
AbstractHeaderMapper -> public void setOutboundPrefix(@Nullable String outboundPrefix);1530174524;Specify a prefix to be appended to the protocol property name for any_user-defined message header that is being mapped into the protocol-specific_Message. The default is an empty String (no prefix).;public void setOutboundPrefix(@Nullable String outboundPrefix) {_		this.outboundPrefix = (outboundPrefix != null ? outboundPrefix : "")__	};specify,a,prefix,to,be,appended,to,the,protocol,property,name,for,any,user,defined,message,header,that,is,being,mapped,into,the,protocol,specific,message,the,default,is,an,empty,string,no,prefix;public,void,set,outbound,prefix,nullable,string,outbound,prefix,this,outbound,prefix,outbound,prefix,null,outbound,prefix
AbstractHeaderMapper -> public void setOutboundPrefix(@Nullable String outboundPrefix);1532091916;Specify a prefix to be appended to the protocol property name for any_user-defined message header that is being mapped into the protocol-specific_Message. The default is an empty String (no prefix).;public void setOutboundPrefix(@Nullable String outboundPrefix) {_		this.outboundPrefix = (outboundPrefix != null ? outboundPrefix : "")__	};specify,a,prefix,to,be,appended,to,the,protocol,property,name,for,any,user,defined,message,header,that,is,being,mapped,into,the,protocol,specific,message,the,default,is,an,empty,string,no,prefix;public,void,set,outbound,prefix,nullable,string,outbound,prefix,this,outbound,prefix,outbound,prefix,null,outbound,prefix
AbstractHeaderMapper -> public void setInboundPrefix(String inboundPrefix);1407509982;Specify a prefix to be appended to the message header name for any_user-defined property that is being mapped into the MessageHeaders. The_default is an empty string (no prefix).;public void setInboundPrefix(String inboundPrefix) {_		this.inboundPrefix = (inboundPrefix != null ? inboundPrefix : "")__	};specify,a,prefix,to,be,appended,to,the,message,header,name,for,any,user,defined,property,that,is,being,mapped,into,the,message,headers,the,default,is,an,empty,string,no,prefix;public,void,set,inbound,prefix,string,inbound,prefix,this,inbound,prefix,inbound,prefix,null,inbound,prefix
AbstractHeaderMapper -> public void setInboundPrefix(String inboundPrefix);1408751872;Specify a prefix to be appended to the message header name for any_user-defined property that is being mapped into the MessageHeaders._The default is an empty String (no prefix).;public void setInboundPrefix(String inboundPrefix) {_		this.inboundPrefix = (inboundPrefix != null ? inboundPrefix : "")__	};specify,a,prefix,to,be,appended,to,the,message,header,name,for,any,user,defined,property,that,is,being,mapped,into,the,message,headers,the,default,is,an,empty,string,no,prefix;public,void,set,inbound,prefix,string,inbound,prefix,this,inbound,prefix,inbound,prefix,null,inbound,prefix
AbstractHeaderMapper -> public void setInboundPrefix(String inboundPrefix);1495868221;Specify a prefix to be appended to the message header name for any_user-defined property that is being mapped into the MessageHeaders._The default is an empty String (no prefix).;public void setInboundPrefix(String inboundPrefix) {_		this.inboundPrefix = (inboundPrefix != null ? inboundPrefix : "")__	};specify,a,prefix,to,be,appended,to,the,message,header,name,for,any,user,defined,property,that,is,being,mapped,into,the,message,headers,the,default,is,an,empty,string,no,prefix;public,void,set,inbound,prefix,string,inbound,prefix,this,inbound,prefix,inbound,prefix,null,inbound,prefix
AbstractHeaderMapper -> protected String toHeaderName(String propertyName);1407509982;Generate the name to use to set the header defined by the specified {@code propertyName} to_the {@link MessageHeaders} instance._@see #setInboundPrefix(String);protected String toHeaderName(String propertyName) {_		String headerName = propertyName__		if (StringUtils.hasText(this.inboundPrefix) && !headerName.startsWith(this.inboundPrefix)) {_			headerName = this.inboundPrefix + propertyName__		}_		return headerName__	};generate,the,name,to,use,to,set,the,header,defined,by,the,specified,code,property,name,to,the,link,message,headers,instance,see,set,inbound,prefix,string;protected,string,to,header,name,string,property,name,string,header,name,property,name,if,string,utils,has,text,this,inbound,prefix,header,name,starts,with,this,inbound,prefix,header,name,this,inbound,prefix,property,name,return,header,name
AbstractHeaderMapper -> protected String toHeaderName(String propertyName);1408751872;Generate the name to use to set the header defined by the specified_{@code propertyName} to the {@link MessageHeaders} instance._@see #setInboundPrefix(String);protected String toHeaderName(String propertyName) {_		String headerName = propertyName__		if (StringUtils.hasText(this.inboundPrefix) && !headerName.startsWith(this.inboundPrefix)) {_			headerName = this.inboundPrefix + propertyName__		}_		return headerName__	};generate,the,name,to,use,to,set,the,header,defined,by,the,specified,code,property,name,to,the,link,message,headers,instance,see,set,inbound,prefix,string;protected,string,to,header,name,string,property,name,string,header,name,property,name,if,string,utils,has,text,this,inbound,prefix,header,name,starts,with,this,inbound,prefix,header,name,this,inbound,prefix,property,name,return,header,name
AbstractHeaderMapper -> protected String toHeaderName(String propertyName);1495868221;Generate the name to use to set the header defined by the specified_{@code propertyName} to the {@link MessageHeaders} instance._@see #setInboundPrefix(String);protected String toHeaderName(String propertyName) {_		String headerName = propertyName__		if (StringUtils.hasText(this.inboundPrefix) && !headerName.startsWith(this.inboundPrefix)) {_			headerName = this.inboundPrefix + propertyName__		}_		return headerName__	};generate,the,name,to,use,to,set,the,header,defined,by,the,specified,code,property,name,to,the,link,message,headers,instance,see,set,inbound,prefix,string;protected,string,to,header,name,string,property,name,string,header,name,property,name,if,string,utils,has,text,this,inbound,prefix,header,name,starts,with,this,inbound,prefix,header,name,this,inbound,prefix,property,name,return,header,name
AbstractHeaderMapper -> protected String toHeaderName(String propertyName);1496837955;Generate the name to use to set the header defined by the specified_{@code propertyName} to the {@link MessageHeaders} instance._@see #setInboundPrefix(String);protected String toHeaderName(String propertyName) {_		String headerName = propertyName__		if (StringUtils.hasText(this.inboundPrefix) && !headerName.startsWith(this.inboundPrefix)) {_			headerName = this.inboundPrefix + propertyName__		}_		return headerName__	};generate,the,name,to,use,to,set,the,header,defined,by,the,specified,code,property,name,to,the,link,message,headers,instance,see,set,inbound,prefix,string;protected,string,to,header,name,string,property,name,string,header,name,property,name,if,string,utils,has,text,this,inbound,prefix,header,name,starts,with,this,inbound,prefix,header,name,this,inbound,prefix,property,name,return,header,name
AbstractHeaderMapper -> protected String toHeaderName(String propertyName);1530174524;Generate the name to use to set the header defined by the specified_{@code propertyName} to the {@link MessageHeaders} instance._@see #setInboundPrefix(String);protected String toHeaderName(String propertyName) {_		String headerName = propertyName__		if (StringUtils.hasText(this.inboundPrefix) && !headerName.startsWith(this.inboundPrefix)) {_			headerName = this.inboundPrefix + propertyName__		}_		return headerName__	};generate,the,name,to,use,to,set,the,header,defined,by,the,specified,code,property,name,to,the,link,message,headers,instance,see,set,inbound,prefix,string;protected,string,to,header,name,string,property,name,string,header,name,property,name,if,string,utils,has,text,this,inbound,prefix,header,name,starts,with,this,inbound,prefix,header,name,this,inbound,prefix,property,name,return,header,name
AbstractHeaderMapper -> protected String toHeaderName(String propertyName);1532091916;Generate the name to use to set the header defined by the specified_{@code propertyName} to the {@link MessageHeaders} instance._@see #setInboundPrefix(String);protected String toHeaderName(String propertyName) {_		String headerName = propertyName__		if (StringUtils.hasText(this.inboundPrefix) && !headerName.startsWith(this.inboundPrefix)) {_			headerName = this.inboundPrefix + propertyName__		}_		return headerName__	};generate,the,name,to,use,to,set,the,header,defined,by,the,specified,code,property,name,to,the,link,message,headers,instance,see,set,inbound,prefix,string;protected,string,to,header,name,string,property,name,string,header,name,property,name,if,string,utils,has,text,this,inbound,prefix,header,name,starts,with,this,inbound,prefix,header,name,this,inbound,prefix,property,name,return,header,name
