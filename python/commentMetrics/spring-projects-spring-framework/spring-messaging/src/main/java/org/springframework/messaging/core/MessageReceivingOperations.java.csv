# id;timestamp;commentText;codeText;commentWords;codeWords
MessageReceivingOperations -> <T> T receiveAndConvert(Class<T> targetClass) throws MessagingException_;1386297052;Receive a message from a default destination and convert its payload to the_specified target class.__@param targetClass the target class to convert the payload to_@return the converted payload of the reply message, possibly {@code null} if_the message could not be received, for example due to a timeout;<T> T receiveAndConvert(Class<T> targetClass) throws MessagingException_;receive,a,message,from,a,default,destination,and,convert,its,payload,to,the,specified,target,class,param,target,class,the,target,class,to,convert,the,payload,to,return,the,converted,payload,of,the,reply,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;t,t,receive,and,convert,class,t,target,class,throws,messaging,exception
MessageReceivingOperations -> <T> T receiveAndConvert(Class<T> targetClass) throws MessagingException_;1386350678;Receive a message from a default destination and convert its payload to the_specified target class._@param targetClass the target class to convert the payload to_@return the converted payload of the reply message, possibly {@code null} if_the message could not be received, for example due to a timeout;<T> T receiveAndConvert(Class<T> targetClass) throws MessagingException_;receive,a,message,from,a,default,destination,and,convert,its,payload,to,the,specified,target,class,param,target,class,the,target,class,to,convert,the,payload,to,return,the,converted,payload,of,the,reply,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;t,t,receive,and,convert,class,t,target,class,throws,messaging,exception
MessageReceivingOperations -> <T> T receiveAndConvert(Class<T> targetClass) throws MessagingException_;1427240641;Receive a message from a default destination and convert its payload to the_specified target class._@param targetClass the target class to convert the payload to_@return the converted payload of the reply message, possibly {@code null} if_the message could not be received, for example due to a timeout;<T> T receiveAndConvert(Class<T> targetClass) throws MessagingException_;receive,a,message,from,a,default,destination,and,convert,its,payload,to,the,specified,target,class,param,target,class,the,target,class,to,convert,the,payload,to,return,the,converted,payload,of,the,reply,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;t,t,receive,and,convert,class,t,target,class,throws,messaging,exception
MessageReceivingOperations -> @Nullable 	Message<?> receive() throws MessagingException_;1495868221;Receive a message from a default destination._@return the received message, possibly {@code null} if the message could not_be received, for example due to a timeout;@Nullable_	Message<?> receive() throws MessagingException_;receive,a,message,from,a,default,destination,return,the,received,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;nullable,message,receive,throws,messaging,exception
MessageReceivingOperations -> @Nullable 	Message<?> receive() throws MessagingException_;1530174524;Receive a message from a default destination._@return the received message, possibly {@code null} if the message could not_be received, for example due to a timeout;@Nullable_	Message<?> receive() throws MessagingException_;receive,a,message,from,a,default,destination,return,the,received,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;nullable,message,receive,throws,messaging,exception
MessageReceivingOperations -> @Nullable 	<T> T receiveAndConvert(Class<T> targetClass) throws MessagingException_;1495868221;Receive a message from a default destination and convert its payload to the_specified target class._@param targetClass the target class to convert the payload to_@return the converted payload of the reply message, possibly {@code null} if_the message could not be received, for example due to a timeout;@Nullable_	<T> T receiveAndConvert(Class<T> targetClass) throws MessagingException_;receive,a,message,from,a,default,destination,and,convert,its,payload,to,the,specified,target,class,param,target,class,the,target,class,to,convert,the,payload,to,return,the,converted,payload,of,the,reply,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;nullable,t,t,receive,and,convert,class,t,target,class,throws,messaging,exception
MessageReceivingOperations -> @Nullable 	<T> T receiveAndConvert(Class<T> targetClass) throws MessagingException_;1530174524;Receive a message from a default destination and convert its payload to the_specified target class._@param targetClass the target class to convert the payload to_@return the converted payload of the reply message, possibly {@code null} if_the message could not be received, for example due to a timeout;@Nullable_	<T> T receiveAndConvert(Class<T> targetClass) throws MessagingException_;receive,a,message,from,a,default,destination,and,convert,its,payload,to,the,specified,target,class,param,target,class,the,target,class,to,convert,the,payload,to,return,the,converted,payload,of,the,reply,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;nullable,t,t,receive,and,convert,class,t,target,class,throws,messaging,exception
MessageReceivingOperations -> Message<?> receive(D destination) throws MessagingException_;1386297052;Receive a message from the given destination.__@param destination the target destination_@return the received message, possibly {@code null} if the message could not_be received, for example due to a timeout;Message<?> receive(D destination) throws MessagingException_;receive,a,message,from,the,given,destination,param,destination,the,target,destination,return,the,received,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;message,receive,d,destination,throws,messaging,exception
MessageReceivingOperations -> Message<?> receive(D destination) throws MessagingException_;1386350678;Receive a message from the given destination._@param destination the target destination_@return the received message, possibly {@code null} if the message could not_be received, for example due to a timeout;Message<?> receive(D destination) throws MessagingException_;receive,a,message,from,the,given,destination,param,destination,the,target,destination,return,the,received,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;message,receive,d,destination,throws,messaging,exception
MessageReceivingOperations -> Message<?> receive(D destination) throws MessagingException_;1427240641;Receive a message from the given destination._@param destination the target destination_@return the received message, possibly {@code null} if the message could not_be received, for example due to a timeout;Message<?> receive(D destination) throws MessagingException_;receive,a,message,from,the,given,destination,param,destination,the,target,destination,return,the,received,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;message,receive,d,destination,throws,messaging,exception
MessageReceivingOperations -> @Nullable 	<T> T receiveAndConvert(D destination, Class<T> targetClass) throws MessagingException_;1495868221;Receive a message from the given destination and convert its payload to the_specified target class._@param destination the target destination_@param targetClass the target class to convert the payload to_@return the converted payload of the reply message, possibly {@code null} if_the message could not be received, for example due to a timeout;@Nullable_	<T> T receiveAndConvert(D destination, Class<T> targetClass) throws MessagingException_;receive,a,message,from,the,given,destination,and,convert,its,payload,to,the,specified,target,class,param,destination,the,target,destination,param,target,class,the,target,class,to,convert,the,payload,to,return,the,converted,payload,of,the,reply,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;nullable,t,t,receive,and,convert,d,destination,class,t,target,class,throws,messaging,exception
MessageReceivingOperations -> @Nullable 	<T> T receiveAndConvert(D destination, Class<T> targetClass) throws MessagingException_;1530174524;Receive a message from the given destination and convert its payload to the_specified target class._@param destination the target destination_@param targetClass the target class to convert the payload to_@return the converted payload of the reply message, possibly {@code null} if_the message could not be received, for example due to a timeout;@Nullable_	<T> T receiveAndConvert(D destination, Class<T> targetClass) throws MessagingException_;receive,a,message,from,the,given,destination,and,convert,its,payload,to,the,specified,target,class,param,destination,the,target,destination,param,target,class,the,target,class,to,convert,the,payload,to,return,the,converted,payload,of,the,reply,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;nullable,t,t,receive,and,convert,d,destination,class,t,target,class,throws,messaging,exception
MessageReceivingOperations -> @Nullable 	Message<?> receive(D destination) throws MessagingException_;1495868221;Receive a message from the given destination._@param destination the target destination_@return the received message, possibly {@code null} if the message could not_be received, for example due to a timeout;@Nullable_	Message<?> receive(D destination) throws MessagingException_;receive,a,message,from,the,given,destination,param,destination,the,target,destination,return,the,received,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;nullable,message,receive,d,destination,throws,messaging,exception
MessageReceivingOperations -> @Nullable 	Message<?> receive(D destination) throws MessagingException_;1530174524;Receive a message from the given destination._@param destination the target destination_@return the received message, possibly {@code null} if the message could not_be received, for example due to a timeout;@Nullable_	Message<?> receive(D destination) throws MessagingException_;receive,a,message,from,the,given,destination,param,destination,the,target,destination,return,the,received,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;nullable,message,receive,d,destination,throws,messaging,exception
MessageReceivingOperations -> Message<?> receive() throws MessagingException_;1386297052;Receive a message from a default destination.__@return the received message, possibly {@code null} if the message could not_be received, for example due to a timeout;Message<?> receive() throws MessagingException_;receive,a,message,from,a,default,destination,return,the,received,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;message,receive,throws,messaging,exception
MessageReceivingOperations -> Message<?> receive() throws MessagingException_;1386350678;Receive a message from a default destination._@return the received message, possibly {@code null} if the message could not_be received, for example due to a timeout;Message<?> receive() throws MessagingException_;receive,a,message,from,a,default,destination,return,the,received,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;message,receive,throws,messaging,exception
MessageReceivingOperations -> Message<?> receive() throws MessagingException_;1427240641;Receive a message from a default destination._@return the received message, possibly {@code null} if the message could not_be received, for example due to a timeout;Message<?> receive() throws MessagingException_;receive,a,message,from,a,default,destination,return,the,received,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;message,receive,throws,messaging,exception
MessageReceivingOperations -> <T> T receiveAndConvert(D destination, Class<T> targetClass) throws MessagingException_;1386297052;Receive a message from the given destination and convert its payload to the_specified target class.__@param destination the target destination_@param targetClass the target class to convert the payload to_@return the converted payload of the reply message, possibly {@code null} if_the message could not be received, for example due to a timeout;<T> T receiveAndConvert(D destination, Class<T> targetClass) throws MessagingException_;receive,a,message,from,the,given,destination,and,convert,its,payload,to,the,specified,target,class,param,destination,the,target,destination,param,target,class,the,target,class,to,convert,the,payload,to,return,the,converted,payload,of,the,reply,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;t,t,receive,and,convert,d,destination,class,t,target,class,throws,messaging,exception
MessageReceivingOperations -> <T> T receiveAndConvert(D destination, Class<T> targetClass) throws MessagingException_;1386350678;Receive a message from the given destination and convert its payload to the_specified target class._@param destination the target destination_@param targetClass the target class to convert the payload to_@return the converted payload of the reply message, possibly {@code null} if_the message could not be received, for example due to a timeout;<T> T receiveAndConvert(D destination, Class<T> targetClass) throws MessagingException_;receive,a,message,from,the,given,destination,and,convert,its,payload,to,the,specified,target,class,param,destination,the,target,destination,param,target,class,the,target,class,to,convert,the,payload,to,return,the,converted,payload,of,the,reply,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;t,t,receive,and,convert,d,destination,class,t,target,class,throws,messaging,exception
MessageReceivingOperations -> <T> T receiveAndConvert(D destination, Class<T> targetClass) throws MessagingException_;1427240641;Receive a message from the given destination and convert its payload to the_specified target class._@param destination the target destination_@param targetClass the target class to convert the payload to_@return the converted payload of the reply message, possibly {@code null} if_the message could not be received, for example due to a timeout;<T> T receiveAndConvert(D destination, Class<T> targetClass) throws MessagingException_;receive,a,message,from,the,given,destination,and,convert,its,payload,to,the,specified,target,class,param,destination,the,target,destination,param,target,class,the,target,class,to,convert,the,payload,to,return,the,converted,payload,of,the,reply,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;t,t,receive,and,convert,d,destination,class,t,target,class,throws,messaging,exception
