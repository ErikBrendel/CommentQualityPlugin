commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Configure the thread pool backing this message channel.  */ ;/**  * Configure the thread pool backing this message channel.  */ public TaskExecutorRegistration taskExecutor() {     return taskExecutor(null). }
true;public;1;7;/**  * Configure the thread pool backing this message channel using a custom  * ThreadPoolTaskExecutor.  * @param taskExecutor the executor to use (or {@code null} for a default executor)  */ ;/**  * Configure the thread pool backing this message channel using a custom  * ThreadPoolTaskExecutor.  * @param taskExecutor the executor to use (or {@code null} for a default executor)  */ public TaskExecutorRegistration taskExecutor(@Nullable ThreadPoolTaskExecutor taskExecutor) {     if (this.registration == null) {         this.registration = (taskExecutor != null ? new TaskExecutorRegistration(taskExecutor) : new TaskExecutorRegistration()).     }     return this.registration. }
true;public;1;4;/**  * Configure the given interceptors for this message channel,  * adding them to the channel's current list of interceptors.  * @since 4.3.12  */ ;/**  * Configure the given interceptors for this message channel,  * adding them to the channel's current list of interceptors.  * @since 4.3.12  */ public ChannelRegistration interceptors(ChannelInterceptor... interceptors) {     this.interceptors.addAll(Arrays.asList(interceptors)).     return this. }
true;public;1;7;/**  * Configure interceptors for the message channel.  * @deprecated as of 4.3.12, in favor of {@link #interceptors(ChannelInterceptor...)}  */ ;/**  * Configure interceptors for the message channel.  * @deprecated as of 4.3.12, in favor of {@link #interceptors(ChannelInterceptor...)}  */ @Deprecated public ChannelRegistration setInterceptors(@Nullable ChannelInterceptor... interceptors) {     if (interceptors != null) {         this.interceptors.addAll(Arrays.asList(interceptors)).     }     return this. }
false;protected;0;3;;protected boolean hasTaskExecutor() {     return (this.registration != null). }
false;protected;0;3;;protected boolean hasInterceptors() {     return !this.interceptors.isEmpty(). }
false;protected;0;3;;protected List<ChannelInterceptor> getInterceptors() {     return this.interceptors. }
