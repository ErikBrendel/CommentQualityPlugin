# id;timestamp;commentText;codeText;commentWords;codeWords
BeanFactoryMessageChannelDestinationResolver -> public BeanFactoryMessageChannelDestinationResolver();1374698752;Create a new instance of the {@link_BeanFactoryMessageChannelDestinationResolver} class._<p>The BeanFactory to access must be set via <code>setBeanFactory</code>._This will happen automatically if this resolver is defined within an_ApplicationContext thereby receiving the callback upon initialization.__@see #setBeanFactory;public BeanFactoryMessageChannelDestinationResolver() {__	};create,a,new,instance,of,the,link,bean,factory,message,channel,destination,resolver,class,p,the,bean,factory,to,access,must,be,set,via,code,set,bean,factory,code,this,will,happen,automatically,if,this,resolver,is,defined,within,an,application,context,thereby,receiving,the,callback,upon,initialization,see,set,bean,factory;public,bean,factory,message,channel,destination,resolver
BeanFactoryMessageChannelDestinationResolver -> public BeanFactoryMessageChannelDestinationResolver();1385507478;Create a new instance of the {@link_BeanFactoryMessageChannelDestinationResolver} class._<p>The BeanFactory to access must be set via <code>setBeanFactory</code>._This will happen automatically if this resolver is defined within an_ApplicationContext thereby receiving the callback upon initialization._@see #setBeanFactory;public BeanFactoryMessageChannelDestinationResolver() {__	};create,a,new,instance,of,the,link,bean,factory,message,channel,destination,resolver,class,p,the,bean,factory,to,access,must,be,set,via,code,set,bean,factory,code,this,will,happen,automatically,if,this,resolver,is,defined,within,an,application,context,thereby,receiving,the,callback,upon,initialization,see,set,bean,factory;public,bean,factory,message,channel,destination,resolver
BeanFactoryMessageChannelDestinationResolver -> public BeanFactoryMessageChannelDestinationResolver();1386297052;A default constructor that can be used when the resolver itself is configured_as a Spring bean and will have the {@code BeanFactory} injected as a result_of ing having implemented {@link BeanFactoryAware}.;public BeanFactoryMessageChannelDestinationResolver() {_	};a,default,constructor,that,can,be,used,when,the,resolver,itself,is,configured,as,a,spring,bean,and,will,have,the,code,bean,factory,injected,as,a,result,of,ing,having,implemented,link,bean,factory,aware;public,bean,factory,message,channel,destination,resolver
BeanFactoryMessageChannelDestinationResolver -> public BeanFactoryMessageChannelDestinationResolver();1386350678;A default constructor that can be used when the resolver itself is configured_as a Spring bean and will have the {@code BeanFactory} injected as a result_of ing having implemented {@link BeanFactoryAware}.;public BeanFactoryMessageChannelDestinationResolver() {_	};a,default,constructor,that,can,be,used,when,the,resolver,itself,is,configured,as,a,spring,bean,and,will,have,the,code,bean,factory,injected,as,a,result,of,ing,having,implemented,link,bean,factory,aware;public,bean,factory,message,channel,destination,resolver
BeanFactoryMessageChannelDestinationResolver -> public BeanFactoryMessageChannelDestinationResolver();1498780456;A default constructor that can be used when the resolver itself is configured_as a Spring bean and will have the {@code BeanFactory} injected as a result_of ing having implemented {@link BeanFactoryAware}.;public BeanFactoryMessageChannelDestinationResolver() {_	};a,default,constructor,that,can,be,used,when,the,resolver,itself,is,configured,as,a,spring,bean,and,will,have,the,code,bean,factory,injected,as,a,result,of,ing,having,implemented,link,bean,factory,aware;public,bean,factory,message,channel,destination,resolver
BeanFactoryMessageChannelDestinationResolver -> public BeanFactoryMessageChannelDestinationResolver(BeanFactory beanFactory);1374698752;Create a new instance of the {@link_BeanFactoryMessageChannelDestinationResolver} class._<p>Use of this constructor is redundant if this object is being created_by a Spring IoC container as the supplied {@link BeanFactory} will be_replaced by the {@link BeanFactory} that creates it (c.f. the_{@link BeanFactoryAware} contract). So only use this constructor if you_are instantiating this object explicitly rather than defining a bean.__@param beanFactory the bean factory to be used to lookup {@link MessageChannel}s.;public BeanFactoryMessageChannelDestinationResolver(BeanFactory beanFactory) {_		Assert.notNull(beanFactory, "beanFactory must not be null")__		this.beanFactory = beanFactory__	};create,a,new,instance,of,the,link,bean,factory,message,channel,destination,resolver,class,p,use,of,this,constructor,is,redundant,if,this,object,is,being,created,by,a,spring,io,c,container,as,the,supplied,link,bean,factory,will,be,replaced,by,the,link,bean,factory,that,creates,it,c,f,the,link,bean,factory,aware,contract,so,only,use,this,constructor,if,you,are,instantiating,this,object,explicitly,rather,than,defining,a,bean,param,bean,factory,the,bean,factory,to,be,used,to,lookup,link,message,channel,s;public,bean,factory,message,channel,destination,resolver,bean,factory,bean,factory,assert,not,null,bean,factory,bean,factory,must,not,be,null,this,bean,factory,bean,factory
BeanFactoryMessageChannelDestinationResolver -> public BeanFactoryMessageChannelDestinationResolver(BeanFactory beanFactory);1385507478;Create a new instance of the {@link_BeanFactoryMessageChannelDestinationResolver} class._<p>Use of this constructor is redundant if this object is being created_by a Spring IoC container as the supplied {@link BeanFactory} will be_replaced by the {@link BeanFactory} that creates it (c.f. the_{@link BeanFactoryAware} contract). So only use this constructor if you_are instantiating this object explicitly rather than defining a bean._@param beanFactory the bean factory to be used to lookup {@link MessageChannel}s.;public BeanFactoryMessageChannelDestinationResolver(BeanFactory beanFactory) {_		Assert.notNull(beanFactory, "beanFactory must not be null")__		this.beanFactory = beanFactory__	};create,a,new,instance,of,the,link,bean,factory,message,channel,destination,resolver,class,p,use,of,this,constructor,is,redundant,if,this,object,is,being,created,by,a,spring,io,c,container,as,the,supplied,link,bean,factory,will,be,replaced,by,the,link,bean,factory,that,creates,it,c,f,the,link,bean,factory,aware,contract,so,only,use,this,constructor,if,you,are,instantiating,this,object,explicitly,rather,than,defining,a,bean,param,bean,factory,the,bean,factory,to,be,used,to,lookup,link,message,channel,s;public,bean,factory,message,channel,destination,resolver,bean,factory,bean,factory,assert,not,null,bean,factory,bean,factory,must,not,be,null,this,bean,factory,bean,factory
BeanFactoryMessageChannelDestinationResolver -> public BeanFactoryMessageChannelDestinationResolver(BeanFactory beanFactory);1386297052;A constructor that accepts a {@link BeanFactory} useful if instantiating this_resolver manually rather than having it defined as a Spring-managed bean.__@param beanFactory the bean factory to perform lookups against;public BeanFactoryMessageChannelDestinationResolver(BeanFactory beanFactory) {_		Assert.notNull(beanFactory, "beanFactory must not be null")__		this.beanFactory = beanFactory__	};a,constructor,that,accepts,a,link,bean,factory,useful,if,instantiating,this,resolver,manually,rather,than,having,it,defined,as,a,spring,managed,bean,param,bean,factory,the,bean,factory,to,perform,lookups,against;public,bean,factory,message,channel,destination,resolver,bean,factory,bean,factory,assert,not,null,bean,factory,bean,factory,must,not,be,null,this,bean,factory,bean,factory
BeanFactoryMessageChannelDestinationResolver -> public BeanFactoryMessageChannelDestinationResolver(BeanFactory beanFactory);1386350678;A constructor that accepts a {@link BeanFactory} useful if instantiating this_resolver manually rather than having it defined as a Spring-managed bean._@param beanFactory the bean factory to perform lookups against;public BeanFactoryMessageChannelDestinationResolver(BeanFactory beanFactory) {_		Assert.notNull(beanFactory, "beanFactory must not be null")__		this.beanFactory = beanFactory__	};a,constructor,that,accepts,a,link,bean,factory,useful,if,instantiating,this,resolver,manually,rather,than,having,it,defined,as,a,spring,managed,bean,param,bean,factory,the,bean,factory,to,perform,lookups,against;public,bean,factory,message,channel,destination,resolver,bean,factory,bean,factory,assert,not,null,bean,factory,bean,factory,must,not,be,null,this,bean,factory,bean,factory
BeanFactoryMessageChannelDestinationResolver -> public BeanFactoryMessageChannelDestinationResolver(BeanFactory beanFactory);1498780456;A constructor that accepts a {@link BeanFactory} useful if instantiating this_resolver manually rather than having it defined as a Spring-managed bean._@param beanFactory the bean factory to perform lookups against;public BeanFactoryMessageChannelDestinationResolver(BeanFactory beanFactory) {_		Assert.notNull(beanFactory, "beanFactory must not be null")__		this.beanFactory = beanFactory__	};a,constructor,that,accepts,a,link,bean,factory,useful,if,instantiating,this,resolver,manually,rather,than,having,it,defined,as,a,spring,managed,bean,param,bean,factory,the,bean,factory,to,perform,lookups,against;public,bean,factory,message,channel,destination,resolver,bean,factory,bean,factory,assert,not,null,bean,factory,bean,factory,must,not,be,null,this,bean,factory,bean,factory
