# id;timestamp;commentText;codeText;commentWords;codeWords
StompSession -> Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;1426211309;An overloaded version of {@link #subscribe(String, StompFrameHandler)}_that accepts full {@link StompHeaders} rather instead of a destination._@param headers the headers for the subscribe message frame_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;an,overloaded,version,of,link,subscribe,string,stomp,frame,handler,that,accepts,full,link,stomp,headers,rather,instead,of,a,destination,param,headers,the,headers,for,the,subscribe,message,frame,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,stomp,headers,headers,stomp,frame,handler,handler
StompSession -> Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;1437512314;An overloaded version of {@link #subscribe(String, StompFrameHandler)}_that accepts full {@link StompHeaders} rather instead of a destination._@param headers the headers for the subscribe message frame_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;an,overloaded,version,of,link,subscribe,string,stomp,frame,handler,that,accepts,full,link,stomp,headers,rather,instead,of,a,destination,param,headers,the,headers,for,the,subscribe,message,frame,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,stomp,headers,headers,stomp,frame,handler,handler
StompSession -> Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;1461703498;An overloaded version of {@link #subscribe(String, StompFrameHandler)}_that accepts full {@link StompHeaders} rather instead of a destination._@param headers the headers for the subscribe message frame_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;an,overloaded,version,of,link,subscribe,string,stomp,frame,handler,that,accepts,full,link,stomp,headers,rather,instead,of,a,destination,param,headers,the,headers,for,the,subscribe,message,frame,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,stomp,headers,headers,stomp,frame,handler,handler
StompSession -> Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;1461703725;An overloaded version of {@link #subscribe(String, StompFrameHandler)}_that accepts full {@link StompHeaders} rather instead of a destination._@param headers the headers for the subscribe message frame_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;an,overloaded,version,of,link,subscribe,string,stomp,frame,handler,that,accepts,full,link,stomp,headers,rather,instead,of,a,destination,param,headers,the,headers,for,the,subscribe,message,frame,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,stomp,headers,headers,stomp,frame,handler,handler
StompSession -> Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;1485903353;An overloaded version of {@link #subscribe(String, StompFrameHandler)}_that accepts full {@link StompHeaders} rather instead of a destination._@param headers the headers for the subscribe message frame_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;an,overloaded,version,of,link,subscribe,string,stomp,frame,handler,that,accepts,full,link,stomp,headers,rather,instead,of,a,destination,param,headers,the,headers,for,the,subscribe,message,frame,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,stomp,headers,headers,stomp,frame,handler,handler
StompSession -> Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;1495868221;An overloaded version of {@link #subscribe(String, StompFrameHandler)}_that accepts full {@link StompHeaders} rather instead of a destination._@param headers the headers for the subscribe message frame_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;an,overloaded,version,of,link,subscribe,string,stomp,frame,handler,that,accepts,full,link,stomp,headers,rather,instead,of,a,destination,param,headers,the,headers,for,the,subscribe,message,frame,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,stomp,headers,headers,stomp,frame,handler,handler
StompSession -> Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;1496259743;An overloaded version of {@link #subscribe(String, StompFrameHandler)}_that accepts full {@link StompHeaders} rather instead of a destination._@param headers the headers for the subscribe message frame_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;an,overloaded,version,of,link,subscribe,string,stomp,frame,handler,that,accepts,full,link,stomp,headers,rather,instead,of,a,destination,param,headers,the,headers,for,the,subscribe,message,frame,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,stomp,headers,headers,stomp,frame,handler,handler
StompSession -> Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;1496837955;An overloaded version of {@link #subscribe(String, StompFrameHandler)}_that accepts full {@link StompHeaders} rather instead of a destination._@param headers the headers for the subscribe message frame_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;an,overloaded,version,of,link,subscribe,string,stomp,frame,handler,that,accepts,full,link,stomp,headers,rather,instead,of,a,destination,param,headers,the,headers,for,the,subscribe,message,frame,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,stomp,headers,headers,stomp,frame,handler,handler
StompSession -> Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;1506468851;An overloaded version of {@link #subscribe(String, StompFrameHandler)}_that accepts full {@link StompHeaders} rather instead of a destination._@param headers the headers for the subscribe message frame_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;an,overloaded,version,of,link,subscribe,string,stomp,frame,handler,that,accepts,full,link,stomp,headers,rather,instead,of,a,destination,param,headers,the,headers,for,the,subscribe,message,frame,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,stomp,headers,headers,stomp,frame,handler,handler
StompSession -> Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;1519763970;An overloaded version of {@link #subscribe(String, StompFrameHandler)}_with full {@link StompHeaders} instead of just a destination._@param headers the headers for the subscribe message frame_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;an,overloaded,version,of,link,subscribe,string,stomp,frame,handler,with,full,link,stomp,headers,instead,of,just,a,destination,param,headers,the,headers,for,the,subscribe,message,frame,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,stomp,headers,headers,stomp,frame,handler,handler
StompSession -> Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;1519772955;An overloaded version of {@link #subscribe(String, StompFrameHandler)}_with full {@link StompHeaders} instead of just a destination._@param headers the headers for the subscribe message frame_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;an,overloaded,version,of,link,subscribe,string,stomp,frame,handler,with,full,link,stomp,headers,instead,of,just,a,destination,param,headers,the,headers,for,the,subscribe,message,frame,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,stomp,headers,headers,stomp,frame,handler,handler
StompSession -> Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;1551093473;An overloaded version of {@link #subscribe(String, StompFrameHandler)}_with full {@link StompHeaders} instead of just a destination._@param headers the headers for the subscribe message frame_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;an,overloaded,version,of,link,subscribe,string,stomp,frame,handler,with,full,link,stomp,headers,instead,of,just,a,destination,param,headers,the,headers,for,the,subscribe,message,frame,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,stomp,headers,headers,stomp,frame,handler,handler
StompSession -> Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;1551113869;An overloaded version of {@link #subscribe(String, StompFrameHandler)}_with full {@link StompHeaders} instead of just a destination._@param headers the headers for the subscribe message frame_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(StompHeaders headers, StompFrameHandler handler)_;an,overloaded,version,of,link,subscribe,string,stomp,frame,handler,with,full,link,stomp,headers,instead,of,just,a,destination,param,headers,the,headers,for,the,subscribe,message,frame,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,stomp,headers,headers,stomp,frame,handler,handler
StompSession -> Receiptable -> @Nullable 		String getReceiptId()_;1495868221;Return the receipt id, or {@code null} if the STOMP frame for which_the handle was returned did not have a "receipt" header.;@Nullable_		String getReceiptId()_;return,the,receipt,id,or,code,null,if,the,stomp,frame,for,which,the,handle,was,returned,did,not,have,a,receipt,header;nullable,string,get,receipt,id
StompSession -> Receiptable -> @Nullable 		String getReceiptId()_;1496259743;Return the receipt id, or {@code null} if the STOMP frame for which_the handle was returned did not have a "receipt" header.;@Nullable_		String getReceiptId()_;return,the,receipt,id,or,code,null,if,the,stomp,frame,for,which,the,handle,was,returned,did,not,have,a,receipt,header;nullable,string,get,receipt,id
StompSession -> Receiptable -> @Nullable 		String getReceiptId()_;1496837955;Return the receipt id, or {@code null} if the STOMP frame for which_the handle was returned did not have a "receipt" header.;@Nullable_		String getReceiptId()_;return,the,receipt,id,or,code,null,if,the,stomp,frame,for,which,the,handle,was,returned,did,not,have,a,receipt,header;nullable,string,get,receipt,id
StompSession -> Receiptable -> @Nullable 		String getReceiptId()_;1506468851;Return the receipt id, or {@code null} if the STOMP frame for which_the handle was returned did not have a "receipt" header.;@Nullable_		String getReceiptId()_;return,the,receipt,id,or,code,null,if,the,stomp,frame,for,which,the,handle,was,returned,did,not,have,a,receipt,header;nullable,string,get,receipt,id
StompSession -> Receiptable -> @Nullable 		String getReceiptId()_;1519763970;Return the receipt id, or {@code null} if the STOMP frame for which_the handle was returned did not have a "receipt" header.;@Nullable_		String getReceiptId()_;return,the,receipt,id,or,code,null,if,the,stomp,frame,for,which,the,handle,was,returned,did,not,have,a,receipt,header;nullable,string,get,receipt,id
StompSession -> Receiptable -> @Nullable 		String getReceiptId()_;1519772955;Return the receipt id, or {@code null} if the STOMP frame for which_the handle was returned did not have a "receipt" header.;@Nullable_		String getReceiptId()_;return,the,receipt,id,or,code,null,if,the,stomp,frame,for,which,the,handle,was,returned,did,not,have,a,receipt,header;nullable,string,get,receipt,id
StompSession -> Receiptable -> @Nullable 		String getReceiptId()_;1551093473;Return the receipt id, or {@code null} if the STOMP frame for which_the handle was returned did not have a "receipt" header.;@Nullable_		String getReceiptId()_;return,the,receipt,id,or,code,null,if,the,stomp,frame,for,which,the,handle,was,returned,did,not,have,a,receipt,header;nullable,string,get,receipt,id
StompSession -> Receiptable -> @Nullable 		String getReceiptId()_;1551113869;Return the receipt id, or {@code null} if the STOMP frame for which_the handle was returned did not have a "receipt" header.;@Nullable_		String getReceiptId()_;return,the,receipt,id,or,code,null,if,the,stomp,frame,for,which,the,handle,was,returned,did,not,have,a,receipt,header;nullable,string,get,receipt,id
StompSession -> void disconnect()_;1426211309;Disconnect the session by sending a DISCONNECT frame.;void disconnect()_;disconnect,the,session,by,sending,a,disconnect,frame;void,disconnect
StompSession -> void disconnect()_;1437512314;Disconnect the session by sending a DISCONNECT frame.;void disconnect()_;disconnect,the,session,by,sending,a,disconnect,frame;void,disconnect
StompSession -> void disconnect()_;1461703498;Disconnect the session by sending a DISCONNECT frame.;void disconnect()_;disconnect,the,session,by,sending,a,disconnect,frame;void,disconnect
StompSession -> void disconnect()_;1461703725;Disconnect the session by sending a DISCONNECT frame.;void disconnect()_;disconnect,the,session,by,sending,a,disconnect,frame;void,disconnect
StompSession -> void disconnect()_;1485903353;Disconnect the session by sending a DISCONNECT frame.;void disconnect()_;disconnect,the,session,by,sending,a,disconnect,frame;void,disconnect
StompSession -> void disconnect()_;1495868221;Disconnect the session by sending a DISCONNECT frame.;void disconnect()_;disconnect,the,session,by,sending,a,disconnect,frame;void,disconnect
StompSession -> void disconnect()_;1496259743;Disconnect the session by sending a DISCONNECT frame.;void disconnect()_;disconnect,the,session,by,sending,a,disconnect,frame;void,disconnect
StompSession -> void disconnect()_;1496837955;Disconnect the session by sending a DISCONNECT frame.;void disconnect()_;disconnect,the,session,by,sending,a,disconnect,frame;void,disconnect
StompSession -> void disconnect()_;1506468851;Disconnect the session by sending a DISCONNECT frame.;void disconnect()_;disconnect,the,session,by,sending,a,disconnect,frame;void,disconnect
StompSession -> void disconnect()_;1519763970;Disconnect the session by sending a DISCONNECT frame.;void disconnect()_;disconnect,the,session,by,sending,a,disconnect,frame;void,disconnect
StompSession -> void disconnect()_;1519772955;Disconnect the session by sending a DISCONNECT frame.;void disconnect()_;disconnect,the,session,by,sending,a,disconnect,frame;void,disconnect
StompSession -> void disconnect()_;1551093473;Disconnect the session by sending a DISCONNECT frame.;void disconnect()_;disconnect,the,session,by,sending,a,disconnect,frame;void,disconnect
StompSession -> void disconnect()_;1551113869;Disconnect the session by sending a DISCONNECT frame.;void disconnect()_;disconnect,the,session,by,sending,a,disconnect,frame;void,disconnect
StompSession -> void setAutoReceipt(boolean enabled)_;1426211309;When enabled, a receipt header is automatically added to future_{@code send} and {@code subscribe} operations on this session, which causes_the server to return a RECEIPT. An application can then use the_{@link StompSession.Receiptable_Receiptable} returned from the operation to track the receipt.__<p>A receipt header can also be added manually through the overloaded_methods that accept {@code StompHeaders}.;void setAutoReceipt(boolean enabled)_;when,enabled,a,receipt,header,is,automatically,added,to,future,code,send,and,code,subscribe,operations,on,this,session,which,causes,the,server,to,return,a,receipt,an,application,can,then,use,the,link,stomp,session,receiptable,receiptable,returned,from,the,operation,to,track,the,receipt,p,a,receipt,header,can,also,be,added,manually,through,the,overloaded,methods,that,accept,code,stomp,headers;void,set,auto,receipt,boolean,enabled
StompSession -> void setAutoReceipt(boolean enabled)_;1437512314;When enabled, a receipt header is automatically added to future_{@code send} and {@code subscribe} operations on this session, which causes_the server to return a RECEIPT. An application can then use the_{@link StompSession.Receiptable_Receiptable} returned from the operation to track the receipt._<p>A receipt header can also be added manually through the overloaded_methods that accept {@code StompHeaders}.;void setAutoReceipt(boolean enabled)_;when,enabled,a,receipt,header,is,automatically,added,to,future,code,send,and,code,subscribe,operations,on,this,session,which,causes,the,server,to,return,a,receipt,an,application,can,then,use,the,link,stomp,session,receiptable,receiptable,returned,from,the,operation,to,track,the,receipt,p,a,receipt,header,can,also,be,added,manually,through,the,overloaded,methods,that,accept,code,stomp,headers;void,set,auto,receipt,boolean,enabled
StompSession -> void setAutoReceipt(boolean enabled)_;1461703498;When enabled, a receipt header is automatically added to future_{@code send} and {@code subscribe} operations on this session, which causes_the server to return a RECEIPT. An application can then use the_{@link StompSession.Receiptable_Receiptable} returned from the operation to track the receipt._<p>A receipt header can also be added manually through the overloaded_methods that accept {@code StompHeaders}.;void setAutoReceipt(boolean enabled)_;when,enabled,a,receipt,header,is,automatically,added,to,future,code,send,and,code,subscribe,operations,on,this,session,which,causes,the,server,to,return,a,receipt,an,application,can,then,use,the,link,stomp,session,receiptable,receiptable,returned,from,the,operation,to,track,the,receipt,p,a,receipt,header,can,also,be,added,manually,through,the,overloaded,methods,that,accept,code,stomp,headers;void,set,auto,receipt,boolean,enabled
StompSession -> void setAutoReceipt(boolean enabled)_;1461703725;When enabled, a receipt header is automatically added to future_{@code send} and {@code subscribe} operations on this session, which causes_the server to return a RECEIPT. An application can then use the_{@link StompSession.Receiptable_Receiptable} returned from the operation to track the receipt._<p>A receipt header can also be added manually through the overloaded_methods that accept {@code StompHeaders}.;void setAutoReceipt(boolean enabled)_;when,enabled,a,receipt,header,is,automatically,added,to,future,code,send,and,code,subscribe,operations,on,this,session,which,causes,the,server,to,return,a,receipt,an,application,can,then,use,the,link,stomp,session,receiptable,receiptable,returned,from,the,operation,to,track,the,receipt,p,a,receipt,header,can,also,be,added,manually,through,the,overloaded,methods,that,accept,code,stomp,headers;void,set,auto,receipt,boolean,enabled
StompSession -> void setAutoReceipt(boolean enabled)_;1485903353;When enabled, a receipt header is automatically added to future_{@code send} and {@code subscribe} operations on this session, which causes_the server to return a RECEIPT. An application can then use the_{@link StompSession.Receiptable_Receiptable} returned from the operation to track the receipt._<p>A receipt header can also be added manually through the overloaded_methods that accept {@code StompHeaders}.;void setAutoReceipt(boolean enabled)_;when,enabled,a,receipt,header,is,automatically,added,to,future,code,send,and,code,subscribe,operations,on,this,session,which,causes,the,server,to,return,a,receipt,an,application,can,then,use,the,link,stomp,session,receiptable,receiptable,returned,from,the,operation,to,track,the,receipt,p,a,receipt,header,can,also,be,added,manually,through,the,overloaded,methods,that,accept,code,stomp,headers;void,set,auto,receipt,boolean,enabled
StompSession -> void setAutoReceipt(boolean enabled)_;1495868221;When enabled, a receipt header is automatically added to future_{@code send} and {@code subscribe} operations on this session, which causes_the server to return a RECEIPT. An application can then use the_{@link StompSession.Receiptable_Receiptable} returned from the operation to track the receipt._<p>A receipt header can also be added manually through the overloaded_methods that accept {@code StompHeaders}.;void setAutoReceipt(boolean enabled)_;when,enabled,a,receipt,header,is,automatically,added,to,future,code,send,and,code,subscribe,operations,on,this,session,which,causes,the,server,to,return,a,receipt,an,application,can,then,use,the,link,stomp,session,receiptable,receiptable,returned,from,the,operation,to,track,the,receipt,p,a,receipt,header,can,also,be,added,manually,through,the,overloaded,methods,that,accept,code,stomp,headers;void,set,auto,receipt,boolean,enabled
StompSession -> void setAutoReceipt(boolean enabled)_;1496259743;When enabled, a receipt header is automatically added to future_{@code send} and {@code subscribe} operations on this session, which causes_the server to return a RECEIPT. An application can then use the_{@link StompSession.Receiptable_Receiptable} returned from the operation to track the receipt._<p>A receipt header can also be added manually through the overloaded_methods that accept {@code StompHeaders}.;void setAutoReceipt(boolean enabled)_;when,enabled,a,receipt,header,is,automatically,added,to,future,code,send,and,code,subscribe,operations,on,this,session,which,causes,the,server,to,return,a,receipt,an,application,can,then,use,the,link,stomp,session,receiptable,receiptable,returned,from,the,operation,to,track,the,receipt,p,a,receipt,header,can,also,be,added,manually,through,the,overloaded,methods,that,accept,code,stomp,headers;void,set,auto,receipt,boolean,enabled
StompSession -> void setAutoReceipt(boolean enabled)_;1496837955;When enabled, a receipt header is automatically added to future_{@code send} and {@code subscribe} operations on this session, which causes_the server to return a RECEIPT. An application can then use the_{@link StompSession.Receiptable_Receiptable} returned from the operation to track the receipt._<p>A receipt header can also be added manually through the overloaded_methods that accept {@code StompHeaders}.;void setAutoReceipt(boolean enabled)_;when,enabled,a,receipt,header,is,automatically,added,to,future,code,send,and,code,subscribe,operations,on,this,session,which,causes,the,server,to,return,a,receipt,an,application,can,then,use,the,link,stomp,session,receiptable,receiptable,returned,from,the,operation,to,track,the,receipt,p,a,receipt,header,can,also,be,added,manually,through,the,overloaded,methods,that,accept,code,stomp,headers;void,set,auto,receipt,boolean,enabled
StompSession -> void setAutoReceipt(boolean enabled)_;1506468851;When enabled, a receipt header is automatically added to future_{@code send} and {@code subscribe} operations on this session, which causes_the server to return a RECEIPT. An application can then use the_{@link StompSession.Receiptable_Receiptable} returned from the operation to track the receipt._<p>A receipt header can also be added manually through the overloaded_methods that accept {@code StompHeaders}.;void setAutoReceipt(boolean enabled)_;when,enabled,a,receipt,header,is,automatically,added,to,future,code,send,and,code,subscribe,operations,on,this,session,which,causes,the,server,to,return,a,receipt,an,application,can,then,use,the,link,stomp,session,receiptable,receiptable,returned,from,the,operation,to,track,the,receipt,p,a,receipt,header,can,also,be,added,manually,through,the,overloaded,methods,that,accept,code,stomp,headers;void,set,auto,receipt,boolean,enabled
StompSession -> void setAutoReceipt(boolean enabled)_;1519763970;When enabled, a receipt header is automatically added to future_{@code send} and {@code subscribe} operations on this session, which_causes the server to return a RECEIPT. An application can then use_the {@link StompSession.Receiptable Receiptable} returned from the_operation to track the receipt._<p>A receipt header can also be added manually through the overloaded_methods that accept {@code StompHeaders}.;void setAutoReceipt(boolean enabled)_;when,enabled,a,receipt,header,is,automatically,added,to,future,code,send,and,code,subscribe,operations,on,this,session,which,causes,the,server,to,return,a,receipt,an,application,can,then,use,the,link,stomp,session,receiptable,receiptable,returned,from,the,operation,to,track,the,receipt,p,a,receipt,header,can,also,be,added,manually,through,the,overloaded,methods,that,accept,code,stomp,headers;void,set,auto,receipt,boolean,enabled
StompSession -> void setAutoReceipt(boolean enabled)_;1519772955;When enabled, a receipt header is automatically added to future_{@code send} and {@code subscribe} operations on this session, which_causes the server to return a RECEIPT. An application can then use_the {@link StompSession.Receiptable Receiptable} returned from the_operation to track the receipt._<p>A receipt header can also be added manually through the overloaded_methods that accept {@code StompHeaders}.;void setAutoReceipt(boolean enabled)_;when,enabled,a,receipt,header,is,automatically,added,to,future,code,send,and,code,subscribe,operations,on,this,session,which,causes,the,server,to,return,a,receipt,an,application,can,then,use,the,link,stomp,session,receiptable,receiptable,returned,from,the,operation,to,track,the,receipt,p,a,receipt,header,can,also,be,added,manually,through,the,overloaded,methods,that,accept,code,stomp,headers;void,set,auto,receipt,boolean,enabled
StompSession -> void setAutoReceipt(boolean enabled)_;1551093473;When enabled, a receipt header is automatically added to future_{@code send} and {@code subscribe} operations on this session, which_causes the server to return a RECEIPT. An application can then use_the {@link StompSession.Receiptable Receiptable} returned from the_operation to track the receipt._<p>A receipt header can also be added manually through the overloaded_methods that accept {@code StompHeaders}.;void setAutoReceipt(boolean enabled)_;when,enabled,a,receipt,header,is,automatically,added,to,future,code,send,and,code,subscribe,operations,on,this,session,which,causes,the,server,to,return,a,receipt,an,application,can,then,use,the,link,stomp,session,receiptable,receiptable,returned,from,the,operation,to,track,the,receipt,p,a,receipt,header,can,also,be,added,manually,through,the,overloaded,methods,that,accept,code,stomp,headers;void,set,auto,receipt,boolean,enabled
StompSession -> void setAutoReceipt(boolean enabled)_;1551113869;When enabled, a receipt header is automatically added to future_{@code send} and {@code subscribe} operations on this session, which_causes the server to return a RECEIPT. An application can then use_the {@link StompSession.Receiptable Receiptable} returned from the_operation to track the receipt._<p>A receipt header can also be added manually through the overloaded_methods that accept {@code StompHeaders}.;void setAutoReceipt(boolean enabled)_;when,enabled,a,receipt,header,is,automatically,added,to,future,code,send,and,code,subscribe,operations,on,this,session,which,causes,the,server,to,return,a,receipt,an,application,can,then,use,the,link,stomp,session,receiptable,receiptable,returned,from,the,operation,to,track,the,receipt,p,a,receipt,header,can,also,be,added,manually,through,the,overloaded,methods,that,accept,code,stomp,headers;void,set,auto,receipt,boolean,enabled
StompSession -> Receiptable -> String getReceiptId()_;1426211309;Return the receipt id, or {@code null} if the STOMP frame for which_the handle was returned did not have a "receipt" header.;String getReceiptId()_;return,the,receipt,id,or,code,null,if,the,stomp,frame,for,which,the,handle,was,returned,did,not,have,a,receipt,header;string,get,receipt,id
StompSession -> Receiptable -> String getReceiptId()_;1437512314;Return the receipt id, or {@code null} if the STOMP frame for which_the handle was returned did not have a "receipt" header.;String getReceiptId()_;return,the,receipt,id,or,code,null,if,the,stomp,frame,for,which,the,handle,was,returned,did,not,have,a,receipt,header;string,get,receipt,id
StompSession -> Receiptable -> String getReceiptId()_;1461703498;Return the receipt id, or {@code null} if the STOMP frame for which_the handle was returned did not have a "receipt" header.;String getReceiptId()_;return,the,receipt,id,or,code,null,if,the,stomp,frame,for,which,the,handle,was,returned,did,not,have,a,receipt,header;string,get,receipt,id
StompSession -> Receiptable -> String getReceiptId()_;1461703725;Return the receipt id, or {@code null} if the STOMP frame for which_the handle was returned did not have a "receipt" header.;String getReceiptId()_;return,the,receipt,id,or,code,null,if,the,stomp,frame,for,which,the,handle,was,returned,did,not,have,a,receipt,header;string,get,receipt,id
StompSession -> Receiptable -> String getReceiptId()_;1485903353;Return the receipt id, or {@code null} if the STOMP frame for which_the handle was returned did not have a "receipt" header.;String getReceiptId()_;return,the,receipt,id,or,code,null,if,the,stomp,frame,for,which,the,handle,was,returned,did,not,have,a,receipt,header;string,get,receipt,id
StompSession -> Subscription -> void unsubscribe(StompHeaders stompHeaders)_;1485903353;Alternative to {@link #unsubscribe()} with additional custom headers_to send to the server._<p><strong>Note:</strong> There is no need to set the subscription id.;void unsubscribe(StompHeaders stompHeaders)_;alternative,to,link,unsubscribe,with,additional,custom,headers,to,send,to,the,server,p,strong,note,strong,there,is,no,need,to,set,the,subscription,id;void,unsubscribe,stomp,headers,stomp,headers
StompSession -> Subscription -> void unsubscribe(StompHeaders stompHeaders)_;1495868221;Alternative to {@link #unsubscribe()} with additional custom headers_to send to the server._<p><strong>Note:</strong> There is no need to set the subscription id.;void unsubscribe(StompHeaders stompHeaders)_;alternative,to,link,unsubscribe,with,additional,custom,headers,to,send,to,the,server,p,strong,note,strong,there,is,no,need,to,set,the,subscription,id;void,unsubscribe,stomp,headers,stomp,headers
StompSession -> Receiptable -> void addReceiptTask(Runnable runnable)_;1426211309;Task to invoke when a receipt is received._@throws java.lang.IllegalArgumentException if the receiptId is {@code null};void addReceiptTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,received,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null;void,add,receipt,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptTask(Runnable runnable)_;1437512314;Task to invoke when a receipt is received._@throws java.lang.IllegalArgumentException if the receiptId is {@code null};void addReceiptTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,received,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null;void,add,receipt,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptTask(Runnable runnable)_;1461703498;Task to invoke when a receipt is received._@throws java.lang.IllegalArgumentException if the receiptId is {@code null};void addReceiptTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,received,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null;void,add,receipt,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptTask(Runnable runnable)_;1461703725;Task to invoke when a receipt is received._@throws java.lang.IllegalArgumentException if the receiptId is {@code null};void addReceiptTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,received,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null;void,add,receipt,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptTask(Runnable runnable)_;1485903353;Task to invoke when a receipt is received._@throws java.lang.IllegalArgumentException if the receiptId is {@code null};void addReceiptTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,received,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null;void,add,receipt,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptTask(Runnable runnable)_;1495868221;Task to invoke when a receipt is received._@throws java.lang.IllegalArgumentException if the receiptId is {@code null};void addReceiptTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,received,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null;void,add,receipt,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptTask(Runnable runnable)_;1496259743;Task to invoke when a receipt is received._@throws java.lang.IllegalArgumentException if the receiptId is {@code null};void addReceiptTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,received,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null;void,add,receipt,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptTask(Runnable runnable)_;1496837955;Task to invoke when a receipt is received._@throws java.lang.IllegalArgumentException if the receiptId is {@code null};void addReceiptTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,received,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null;void,add,receipt,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptTask(Runnable runnable)_;1506468851;Task to invoke when a receipt is received._@throws java.lang.IllegalArgumentException if the receiptId is {@code null};void addReceiptTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,received,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null;void,add,receipt,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptTask(Runnable runnable)_;1519763970;Task to invoke when a receipt is received._@throws java.lang.IllegalArgumentException if the receiptId is {@code null};void addReceiptTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,received,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null;void,add,receipt,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptTask(Runnable runnable)_;1519772955;Task to invoke when a receipt is received._@throws java.lang.IllegalArgumentException if the receiptId is {@code null};void addReceiptTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,received,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null;void,add,receipt,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptTask(Runnable runnable)_;1551093473;Task to invoke when a receipt is received._@throws java.lang.IllegalArgumentException if the receiptId is {@code null};void addReceiptTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,received,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null;void,add,receipt,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptTask(Runnable runnable)_;1551113869;Task to invoke when a receipt is received._@throws java.lang.IllegalArgumentException if the receiptId is {@code null};void addReceiptTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,received,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null;void,add,receipt,task,runnable,runnable
StompSession -> Receiptable send(String destination, Object payload)_;1426211309;Send a message to the specified destination, converting the payload to a_{@code byte[]} with the help of a_{@link org.springframework.messaging.converter.MessageConverter MessageConverter}._@param destination the destination to send a message to_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(String destination, Object payload)_;send,a,message,to,the,specified,destination,converting,the,payload,to,a,code,byte,with,the,help,of,a,link,org,springframework,messaging,converter,message,converter,message,converter,param,destination,the,destination,to,send,a,message,to,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,string,destination,object,payload
StompSession -> Receiptable send(String destination, Object payload)_;1437512314;Send a message to the specified destination, converting the payload to a_{@code byte[]} with the help of a_{@link org.springframework.messaging.converter.MessageConverter MessageConverter}._@param destination the destination to send a message to_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(String destination, Object payload)_;send,a,message,to,the,specified,destination,converting,the,payload,to,a,code,byte,with,the,help,of,a,link,org,springframework,messaging,converter,message,converter,message,converter,param,destination,the,destination,to,send,a,message,to,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,string,destination,object,payload
StompSession -> Receiptable send(String destination, Object payload)_;1461703498;Send a message to the specified destination, converting the payload to a_{@code byte[]} with the help of a_{@link org.springframework.messaging.converter.MessageConverter MessageConverter}._@param destination the destination to send a message to_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(String destination, Object payload)_;send,a,message,to,the,specified,destination,converting,the,payload,to,a,code,byte,with,the,help,of,a,link,org,springframework,messaging,converter,message,converter,message,converter,param,destination,the,destination,to,send,a,message,to,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,string,destination,object,payload
StompSession -> Receiptable send(String destination, Object payload)_;1461703725;Send a message to the specified destination, converting the payload to a_{@code byte[]} with the help of a_{@link org.springframework.messaging.converter.MessageConverter MessageConverter}._@param destination the destination to send a message to_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(String destination, Object payload)_;send,a,message,to,the,specified,destination,converting,the,payload,to,a,code,byte,with,the,help,of,a,link,org,springframework,messaging,converter,message,converter,message,converter,param,destination,the,destination,to,send,a,message,to,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,string,destination,object,payload
StompSession -> Receiptable send(String destination, Object payload)_;1485903353;Send a message to the specified destination, converting the payload to a_{@code byte[]} with the help of a_{@link org.springframework.messaging.converter.MessageConverter MessageConverter}._@param destination the destination to send a message to_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(String destination, Object payload)_;send,a,message,to,the,specified,destination,converting,the,payload,to,a,code,byte,with,the,help,of,a,link,org,springframework,messaging,converter,message,converter,message,converter,param,destination,the,destination,to,send,a,message,to,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,string,destination,object,payload
StompSession -> Receiptable send(String destination, Object payload)_;1495868221;Send a message to the specified destination, converting the payload to a_{@code byte[]} with the help of a_{@link org.springframework.messaging.converter.MessageConverter MessageConverter}._@param destination the destination to send a message to_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(String destination, Object payload)_;send,a,message,to,the,specified,destination,converting,the,payload,to,a,code,byte,with,the,help,of,a,link,org,springframework,messaging,converter,message,converter,message,converter,param,destination,the,destination,to,send,a,message,to,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,string,destination,object,payload
StompSession -> Receiptable send(String destination, Object payload)_;1496259743;Send a message to the specified destination, converting the payload to a_{@code byte[]} with the help of a_{@link org.springframework.messaging.converter.MessageConverter MessageConverter}._@param destination the destination to send a message to_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(String destination, Object payload)_;send,a,message,to,the,specified,destination,converting,the,payload,to,a,code,byte,with,the,help,of,a,link,org,springframework,messaging,converter,message,converter,message,converter,param,destination,the,destination,to,send,a,message,to,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,string,destination,object,payload
StompSession -> Receiptable send(String destination, Object payload)_;1496837955;Send a message to the specified destination, converting the payload to a_{@code byte[]} with the help of a_{@link org.springframework.messaging.converter.MessageConverter MessageConverter}._@param destination the destination to send a message to_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(String destination, Object payload)_;send,a,message,to,the,specified,destination,converting,the,payload,to,a,code,byte,with,the,help,of,a,link,org,springframework,messaging,converter,message,converter,message,converter,param,destination,the,destination,to,send,a,message,to,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,string,destination,object,payload
StompSession -> Receiptable send(String destination, Object payload)_;1506468851;Send a message to the specified destination, converting the payload to a_{@code byte[]} with the help of a_{@link org.springframework.messaging.converter.MessageConverter MessageConverter}._@param destination the destination to send a message to_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(String destination, Object payload)_;send,a,message,to,the,specified,destination,converting,the,payload,to,a,code,byte,with,the,help,of,a,link,org,springframework,messaging,converter,message,converter,message,converter,param,destination,the,destination,to,send,a,message,to,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,string,destination,object,payload
StompSession -> Receiptable send(String destination, Object payload)_;1519763970;Send a message to the specified destination, converting the payload to a_{@code byte[]} with the help of a_{@link org.springframework.messaging.converter.MessageConverter MessageConverter}._@param destination the destination to send a message to_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(String destination, Object payload)_;send,a,message,to,the,specified,destination,converting,the,payload,to,a,code,byte,with,the,help,of,a,link,org,springframework,messaging,converter,message,converter,message,converter,param,destination,the,destination,to,send,a,message,to,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,string,destination,object,payload
StompSession -> Receiptable send(String destination, Object payload)_;1519772955;Send a message to the specified destination, converting the payload to a_{@code byte[]} with the help of a_{@link org.springframework.messaging.converter.MessageConverter MessageConverter}._@param destination the destination to send a message to_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(String destination, Object payload)_;send,a,message,to,the,specified,destination,converting,the,payload,to,a,code,byte,with,the,help,of,a,link,org,springframework,messaging,converter,message,converter,message,converter,param,destination,the,destination,to,send,a,message,to,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,string,destination,object,payload
StompSession -> Receiptable send(String destination, Object payload)_;1551093473;Send a message to the specified destination, converting the payload to a_{@code byte[]} with the help of a_{@link org.springframework.messaging.converter.MessageConverter MessageConverter}._@param destination the destination to send a message to_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(String destination, Object payload)_;send,a,message,to,the,specified,destination,converting,the,payload,to,a,code,byte,with,the,help,of,a,link,org,springframework,messaging,converter,message,converter,message,converter,param,destination,the,destination,to,send,a,message,to,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,string,destination,object,payload
StompSession -> Receiptable send(String destination, Object payload)_;1551113869;Send a message to the specified destination, converting the payload to a_{@code byte[]} with the help of a_{@link org.springframework.messaging.converter.MessageConverter MessageConverter}._@param destination the destination to send a message to_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(String destination, Object payload)_;send,a,message,to,the,specified,destination,converting,the,payload,to,a,code,byte,with,the,help,of,a,link,org,springframework,messaging,converter,message,converter,message,converter,param,destination,the,destination,to,send,a,message,to,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,string,destination,object,payload
StompSession -> Subscription -> void unsubscribe(@Nullable StompHeaders headers)_;1519772955;Alternative to {@link #unsubscribe()} with additional custom headers_to send to the server._<p><strong>Note:</strong> There is no need to set the subscription id._@param headers the custom headers, if any_@since 5.0;void unsubscribe(@Nullable StompHeaders headers)_;alternative,to,link,unsubscribe,with,additional,custom,headers,to,send,to,the,server,p,strong,note,strong,there,is,no,need,to,set,the,subscription,id,param,headers,the,custom,headers,if,any,since,5,0;void,unsubscribe,nullable,stomp,headers,headers
StompSession -> Subscription -> void unsubscribe(@Nullable StompHeaders headers)_;1551093473;Alternative to {@link #unsubscribe()} with additional custom headers_to send to the server._<p><strong>Note:</strong> There is no need to set the subscription id._@param headers the custom headers, if any_@since 5.0;void unsubscribe(@Nullable StompHeaders headers)_;alternative,to,link,unsubscribe,with,additional,custom,headers,to,send,to,the,server,p,strong,note,strong,there,is,no,need,to,set,the,subscription,id,param,headers,the,custom,headers,if,any,since,5,0;void,unsubscribe,nullable,stomp,headers,headers
StompSession -> Subscription -> void unsubscribe(@Nullable StompHeaders headers)_;1551113869;Alternative to {@link #unsubscribe()} with additional custom headers_to send to the server._<p><strong>Note:</strong> There is no need to set the subscription id._@param headers the custom headers, if any_@since 5.0;void unsubscribe(@Nullable StompHeaders headers)_;alternative,to,link,unsubscribe,with,additional,custom,headers,to,send,to,the,server,p,strong,note,strong,there,is,no,need,to,set,the,subscription,id,param,headers,the,custom,headers,if,any,since,5,0;void,unsubscribe,nullable,stomp,headers,headers
StompSession -> Receiptable send(StompHeaders headers, Object payload)_;1426211309;An overloaded version of {@link #send(String, Object)} that accepts_full {@link StompHeaders} instead of a destination. The headers must_contain a destination and may also have other headers such as_"content-type" or custom headers for the broker to propagate to subscribers,_or broker-specific, non-standard headers.._@param headers the message headers_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(StompHeaders headers, Object payload)_;an,overloaded,version,of,link,send,string,object,that,accepts,full,link,stomp,headers,instead,of,a,destination,the,headers,must,contain,a,destination,and,may,also,have,other,headers,such,as,content,type,or,custom,headers,for,the,broker,to,propagate,to,subscribers,or,broker,specific,non,standard,headers,param,headers,the,message,headers,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,stomp,headers,headers,object,payload
StompSession -> Receiptable send(StompHeaders headers, Object payload)_;1437512314;An overloaded version of {@link #send(String, Object)} that accepts_full {@link StompHeaders} instead of a destination. The headers must_contain a destination and may also have other headers such as_"content-type" or custom headers for the broker to propagate to subscribers,_or broker-specific, non-standard headers.._@param headers the message headers_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(StompHeaders headers, Object payload)_;an,overloaded,version,of,link,send,string,object,that,accepts,full,link,stomp,headers,instead,of,a,destination,the,headers,must,contain,a,destination,and,may,also,have,other,headers,such,as,content,type,or,custom,headers,for,the,broker,to,propagate,to,subscribers,or,broker,specific,non,standard,headers,param,headers,the,message,headers,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,stomp,headers,headers,object,payload
StompSession -> Receiptable send(StompHeaders headers, Object payload)_;1461703498;An overloaded version of {@link #send(String, Object)} that accepts_full {@link StompHeaders} instead of a destination. The headers must_contain a destination and may also have other headers such as_"content-type" or custom headers for the broker to propagate to subscribers,_or broker-specific, non-standard headers.._@param headers the message headers_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(StompHeaders headers, Object payload)_;an,overloaded,version,of,link,send,string,object,that,accepts,full,link,stomp,headers,instead,of,a,destination,the,headers,must,contain,a,destination,and,may,also,have,other,headers,such,as,content,type,or,custom,headers,for,the,broker,to,propagate,to,subscribers,or,broker,specific,non,standard,headers,param,headers,the,message,headers,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,stomp,headers,headers,object,payload
StompSession -> Receiptable send(StompHeaders headers, Object payload)_;1461703725;An overloaded version of {@link #send(String, Object)} that accepts_full {@link StompHeaders} instead of a destination. The headers must_contain a destination and may also have other headers such as_"content-type" or custom headers for the broker to propagate to subscribers,_or broker-specific, non-standard headers.._@param headers the message headers_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(StompHeaders headers, Object payload)_;an,overloaded,version,of,link,send,string,object,that,accepts,full,link,stomp,headers,instead,of,a,destination,the,headers,must,contain,a,destination,and,may,also,have,other,headers,such,as,content,type,or,custom,headers,for,the,broker,to,propagate,to,subscribers,or,broker,specific,non,standard,headers,param,headers,the,message,headers,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,stomp,headers,headers,object,payload
StompSession -> Receiptable send(StompHeaders headers, Object payload)_;1485903353;An overloaded version of {@link #send(String, Object)} that accepts_full {@link StompHeaders} instead of a destination. The headers must_contain a destination and may also have other headers such as_"content-type" or custom headers for the broker to propagate to subscribers,_or broker-specific, non-standard headers.._@param headers the message headers_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(StompHeaders headers, Object payload)_;an,overloaded,version,of,link,send,string,object,that,accepts,full,link,stomp,headers,instead,of,a,destination,the,headers,must,contain,a,destination,and,may,also,have,other,headers,such,as,content,type,or,custom,headers,for,the,broker,to,propagate,to,subscribers,or,broker,specific,non,standard,headers,param,headers,the,message,headers,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,stomp,headers,headers,object,payload
StompSession -> Receiptable send(StompHeaders headers, Object payload)_;1495868221;An overloaded version of {@link #send(String, Object)} that accepts_full {@link StompHeaders} instead of a destination. The headers must_contain a destination and may also have other headers such as_"content-type" or custom headers for the broker to propagate to subscribers,_or broker-specific, non-standard headers.._@param headers the message headers_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(StompHeaders headers, Object payload)_;an,overloaded,version,of,link,send,string,object,that,accepts,full,link,stomp,headers,instead,of,a,destination,the,headers,must,contain,a,destination,and,may,also,have,other,headers,such,as,content,type,or,custom,headers,for,the,broker,to,propagate,to,subscribers,or,broker,specific,non,standard,headers,param,headers,the,message,headers,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,stomp,headers,headers,object,payload
StompSession -> Receiptable send(StompHeaders headers, Object payload)_;1496259743;An overloaded version of {@link #send(String, Object)} that accepts_full {@link StompHeaders} instead of a destination. The headers must_contain a destination and may also have other headers such as_"content-type" or custom headers for the broker to propagate to subscribers,_or broker-specific, non-standard headers.._@param headers the message headers_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(StompHeaders headers, Object payload)_;an,overloaded,version,of,link,send,string,object,that,accepts,full,link,stomp,headers,instead,of,a,destination,the,headers,must,contain,a,destination,and,may,also,have,other,headers,such,as,content,type,or,custom,headers,for,the,broker,to,propagate,to,subscribers,or,broker,specific,non,standard,headers,param,headers,the,message,headers,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,stomp,headers,headers,object,payload
StompSession -> Receiptable send(StompHeaders headers, Object payload)_;1496837955;An overloaded version of {@link #send(String, Object)} that accepts_full {@link StompHeaders} instead of a destination. The headers must_contain a destination and may also have other headers such as_"content-type" or custom headers for the broker to propagate to subscribers,_or broker-specific, non-standard headers.._@param headers the message headers_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(StompHeaders headers, Object payload)_;an,overloaded,version,of,link,send,string,object,that,accepts,full,link,stomp,headers,instead,of,a,destination,the,headers,must,contain,a,destination,and,may,also,have,other,headers,such,as,content,type,or,custom,headers,for,the,broker,to,propagate,to,subscribers,or,broker,specific,non,standard,headers,param,headers,the,message,headers,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,stomp,headers,headers,object,payload
StompSession -> Receiptable send(StompHeaders headers, Object payload)_;1506468851;An overloaded version of {@link #send(String, Object)} that accepts_full {@link StompHeaders} instead of a destination. The headers must_contain a destination and may also have other headers such as_"content-type" or custom headers for the broker to propagate to subscribers,_or broker-specific, non-standard headers.._@param headers the message headers_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(StompHeaders headers, Object payload)_;an,overloaded,version,of,link,send,string,object,that,accepts,full,link,stomp,headers,instead,of,a,destination,the,headers,must,contain,a,destination,and,may,also,have,other,headers,such,as,content,type,or,custom,headers,for,the,broker,to,propagate,to,subscribers,or,broker,specific,non,standard,headers,param,headers,the,message,headers,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,stomp,headers,headers,object,payload
StompSession -> Receiptable send(StompHeaders headers, Object payload)_;1519763970;An overloaded version of {@link #send(String, Object)} with full_{@link StompHeaders} instead of just a destination. The headers must_contain a destination and may also have other headers such as_"content-type" or custom headers for the broker to propagate to_subscribers, or broker-specific, non-standard headers.._@param headers the message headers_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(StompHeaders headers, Object payload)_;an,overloaded,version,of,link,send,string,object,with,full,link,stomp,headers,instead,of,just,a,destination,the,headers,must,contain,a,destination,and,may,also,have,other,headers,such,as,content,type,or,custom,headers,for,the,broker,to,propagate,to,subscribers,or,broker,specific,non,standard,headers,param,headers,the,message,headers,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,stomp,headers,headers,object,payload
StompSession -> Receiptable send(StompHeaders headers, Object payload)_;1519772955;An overloaded version of {@link #send(String, Object)} with full_{@link StompHeaders} instead of just a destination. The headers must_contain a destination and may also have other headers such as_"content-type" or custom headers for the broker to propagate to_subscribers, or broker-specific, non-standard headers.._@param headers the message headers_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(StompHeaders headers, Object payload)_;an,overloaded,version,of,link,send,string,object,with,full,link,stomp,headers,instead,of,just,a,destination,the,headers,must,contain,a,destination,and,may,also,have,other,headers,such,as,content,type,or,custom,headers,for,the,broker,to,propagate,to,subscribers,or,broker,specific,non,standard,headers,param,headers,the,message,headers,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,stomp,headers,headers,object,payload
StompSession -> Receiptable send(StompHeaders headers, Object payload)_;1551093473;An overloaded version of {@link #send(String, Object)} with full_{@link StompHeaders} instead of just a destination. The headers must_contain a destination and may also have other headers such as_"content-type" or custom headers for the broker to propagate to_subscribers, or broker-specific, non-standard headers._@param headers the message headers_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(StompHeaders headers, Object payload)_;an,overloaded,version,of,link,send,string,object,with,full,link,stomp,headers,instead,of,just,a,destination,the,headers,must,contain,a,destination,and,may,also,have,other,headers,such,as,content,type,or,custom,headers,for,the,broker,to,propagate,to,subscribers,or,broker,specific,non,standard,headers,param,headers,the,message,headers,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,stomp,headers,headers,object,payload
StompSession -> Receiptable send(StompHeaders headers, Object payload)_;1551113869;An overloaded version of {@link #send(String, Object)} with full_{@link StompHeaders} instead of just a destination. The headers must_contain a destination and may also have other headers such as_"content-type" or custom headers for the broker to propagate to_subscribers, or broker-specific, non-standard headers._@param headers the message headers_@param payload the message payload_@return a Receiptable for tracking receipts;Receiptable send(StompHeaders headers, Object payload)_;an,overloaded,version,of,link,send,string,object,with,full,link,stomp,headers,instead,of,just,a,destination,the,headers,must,contain,a,destination,and,may,also,have,other,headers,such,as,content,type,or,custom,headers,for,the,broker,to,propagate,to,subscribers,or,broker,specific,non,standard,headers,param,headers,the,message,headers,param,payload,the,message,payload,return,a,receiptable,for,tracking,receipts;receiptable,send,stomp,headers,headers,object,payload
StompSession -> Receiptable acknowledge(String messageId, boolean consumed)_;1461703498;Send an acknowledgement whether a message was consumed or not resulting_in an ACK or NACK frame respectively._<p><strong>Note:</strong> to use this when subscribing you must set the_{@link StompHeaders#setAck(String) ack} header to "client" or_"client-individual" in order ot use this._@param messageId the id of the message_@param consumed whether the message was consumed or not_@return a Receiptable for tracking events;Receiptable acknowledge(String messageId, boolean consumed)_;send,an,acknowledgement,whether,a,message,was,consumed,or,not,resulting,in,an,ack,or,nack,frame,respectively,p,strong,note,strong,to,use,this,when,subscribing,you,must,set,the,link,stomp,headers,set,ack,string,ack,header,to,client,or,client,individual,in,order,ot,use,this,param,message,id,the,id,of,the,message,param,consumed,whether,the,message,was,consumed,or,not,return,a,receiptable,for,tracking,events;receiptable,acknowledge,string,message,id,boolean,consumed
StompSession -> Receiptable acknowledge(String messageId, boolean consumed)_;1461703725;Send an acknowledgement whether a message was consumed or not resulting_in an ACK or NACK frame respectively._<p><strong>Note:</strong> to use this when subscribing you must set the_{@link StompHeaders#setAck(String) ack} header to "client" or_"client-individual" in order ot use this._@param messageId the id of the message_@param consumed whether the message was consumed or not_@return a Receiptable for tracking receipts_@since 4.3;Receiptable acknowledge(String messageId, boolean consumed)_;send,an,acknowledgement,whether,a,message,was,consumed,or,not,resulting,in,an,ack,or,nack,frame,respectively,p,strong,note,strong,to,use,this,when,subscribing,you,must,set,the,link,stomp,headers,set,ack,string,ack,header,to,client,or,client,individual,in,order,ot,use,this,param,message,id,the,id,of,the,message,param,consumed,whether,the,message,was,consumed,or,not,return,a,receiptable,for,tracking,receipts,since,4,3;receiptable,acknowledge,string,message,id,boolean,consumed
StompSession -> Receiptable acknowledge(String messageId, boolean consumed)_;1485903353;Send an acknowledgement whether a message was consumed or not resulting_in an ACK or NACK frame respectively._<p><strong>Note:</strong> to use this when subscribing you must set the_{@link StompHeaders#setAck(String) ack} header to "client" or_"client-individual" in order ot use this._@param messageId the id of the message_@param consumed whether the message was consumed or not_@return a Receiptable for tracking receipts_@since 4.3;Receiptable acknowledge(String messageId, boolean consumed)_;send,an,acknowledgement,whether,a,message,was,consumed,or,not,resulting,in,an,ack,or,nack,frame,respectively,p,strong,note,strong,to,use,this,when,subscribing,you,must,set,the,link,stomp,headers,set,ack,string,ack,header,to,client,or,client,individual,in,order,ot,use,this,param,message,id,the,id,of,the,message,param,consumed,whether,the,message,was,consumed,or,not,return,a,receiptable,for,tracking,receipts,since,4,3;receiptable,acknowledge,string,message,id,boolean,consumed
StompSession -> Receiptable acknowledge(String messageId, boolean consumed)_;1495868221;Send an acknowledgement whether a message was consumed or not resulting_in an ACK or NACK frame respectively._<p><strong>Note:</strong> to use this when subscribing you must set the_{@link StompHeaders#setAck(String) ack} header to "client" or_"client-individual" in order ot use this._@param messageId the id of the message_@param consumed whether the message was consumed or not_@return a Receiptable for tracking receipts_@since 4.3;Receiptable acknowledge(String messageId, boolean consumed)_;send,an,acknowledgement,whether,a,message,was,consumed,or,not,resulting,in,an,ack,or,nack,frame,respectively,p,strong,note,strong,to,use,this,when,subscribing,you,must,set,the,link,stomp,headers,set,ack,string,ack,header,to,client,or,client,individual,in,order,ot,use,this,param,message,id,the,id,of,the,message,param,consumed,whether,the,message,was,consumed,or,not,return,a,receiptable,for,tracking,receipts,since,4,3;receiptable,acknowledge,string,message,id,boolean,consumed
StompSession -> Receiptable acknowledge(String messageId, boolean consumed)_;1496259743;Send an acknowledgement whether a message was consumed or not resulting_in an ACK or NACK frame respectively._<p><strong>Note:</strong> to use this when subscribing you must set the_{@link StompHeaders#setAck(String) ack} header to "client" or_"client-individual" in order ot use this._@param messageId the id of the message_@param consumed whether the message was consumed or not_@return a Receiptable for tracking receipts_@since 4.3;Receiptable acknowledge(String messageId, boolean consumed)_;send,an,acknowledgement,whether,a,message,was,consumed,or,not,resulting,in,an,ack,or,nack,frame,respectively,p,strong,note,strong,to,use,this,when,subscribing,you,must,set,the,link,stomp,headers,set,ack,string,ack,header,to,client,or,client,individual,in,order,ot,use,this,param,message,id,the,id,of,the,message,param,consumed,whether,the,message,was,consumed,or,not,return,a,receiptable,for,tracking,receipts,since,4,3;receiptable,acknowledge,string,message,id,boolean,consumed
StompSession -> Receiptable acknowledge(String messageId, boolean consumed)_;1496837955;Send an acknowledgement whether a message was consumed or not resulting_in an ACK or NACK frame respectively._<p><strong>Note:</strong> to use this when subscribing you must set the_{@link StompHeaders#setAck(String) ack} header to "client" or_"client-individual" in order ot use this._@param messageId the id of the message_@param consumed whether the message was consumed or not_@return a Receiptable for tracking receipts_@since 4.3;Receiptable acknowledge(String messageId, boolean consumed)_;send,an,acknowledgement,whether,a,message,was,consumed,or,not,resulting,in,an,ack,or,nack,frame,respectively,p,strong,note,strong,to,use,this,when,subscribing,you,must,set,the,link,stomp,headers,set,ack,string,ack,header,to,client,or,client,individual,in,order,ot,use,this,param,message,id,the,id,of,the,message,param,consumed,whether,the,message,was,consumed,or,not,return,a,receiptable,for,tracking,receipts,since,4,3;receiptable,acknowledge,string,message,id,boolean,consumed
StompSession -> Receiptable acknowledge(String messageId, boolean consumed)_;1506468851;Send an acknowledgement whether a message was consumed or not resulting_in an ACK or NACK frame respectively._<p><strong>Note:</strong> to use this when subscribing you must set the_{@link StompHeaders#setAck(String) ack} header to "client" or_"client-individual" in order ot use this._@param messageId the id of the message_@param consumed whether the message was consumed or not_@return a Receiptable for tracking receipts_@since 4.3;Receiptable acknowledge(String messageId, boolean consumed)_;send,an,acknowledgement,whether,a,message,was,consumed,or,not,resulting,in,an,ack,or,nack,frame,respectively,p,strong,note,strong,to,use,this,when,subscribing,you,must,set,the,link,stomp,headers,set,ack,string,ack,header,to,client,or,client,individual,in,order,ot,use,this,param,message,id,the,id,of,the,message,param,consumed,whether,the,message,was,consumed,or,not,return,a,receiptable,for,tracking,receipts,since,4,3;receiptable,acknowledge,string,message,id,boolean,consumed
StompSession -> Receiptable acknowledge(String messageId, boolean consumed)_;1519763970;Send an acknowledgement whether a message was consumed or not resulting_in an ACK or NACK frame respectively._<p><strong>Note:</strong> to use this when subscribing you must set the_{@link StompHeaders#setAck(String) ack} header to "client" or_"client-individual" in order ot use this._@param messageId the id of the message_@param consumed whether the message was consumed or not_@return a Receiptable for tracking receipts_@since 4.3;Receiptable acknowledge(String messageId, boolean consumed)_;send,an,acknowledgement,whether,a,message,was,consumed,or,not,resulting,in,an,ack,or,nack,frame,respectively,p,strong,note,strong,to,use,this,when,subscribing,you,must,set,the,link,stomp,headers,set,ack,string,ack,header,to,client,or,client,individual,in,order,ot,use,this,param,message,id,the,id,of,the,message,param,consumed,whether,the,message,was,consumed,or,not,return,a,receiptable,for,tracking,receipts,since,4,3;receiptable,acknowledge,string,message,id,boolean,consumed
StompSession -> Receiptable acknowledge(String messageId, boolean consumed)_;1519772955;Send an acknowledgement whether a message was consumed or not resulting_in an ACK or NACK frame respectively._<p><strong>Note:</strong> to use this when subscribing you must set the_{@link StompHeaders#setAck(String) ack} header to "client" or_"client-individual" in order ot use this._@param messageId the id of the message_@param consumed whether the message was consumed or not_@return a Receiptable for tracking receipts_@since 4.3;Receiptable acknowledge(String messageId, boolean consumed)_;send,an,acknowledgement,whether,a,message,was,consumed,or,not,resulting,in,an,ack,or,nack,frame,respectively,p,strong,note,strong,to,use,this,when,subscribing,you,must,set,the,link,stomp,headers,set,ack,string,ack,header,to,client,or,client,individual,in,order,ot,use,this,param,message,id,the,id,of,the,message,param,consumed,whether,the,message,was,consumed,or,not,return,a,receiptable,for,tracking,receipts,since,4,3;receiptable,acknowledge,string,message,id,boolean,consumed
StompSession -> Receiptable acknowledge(String messageId, boolean consumed)_;1551093473;Send an acknowledgement whether a message was consumed or not resulting_in an ACK or NACK frame respectively._<p><strong>Note:</strong> to use this when subscribing you must set the_{@link StompHeaders#setAck(String) ack} header to "client" or_"client-individual" in order ot use this._@param messageId the id of the message_@param consumed whether the message was consumed or not_@return a Receiptable for tracking receipts_@since 4.3;Receiptable acknowledge(String messageId, boolean consumed)_;send,an,acknowledgement,whether,a,message,was,consumed,or,not,resulting,in,an,ack,or,nack,frame,respectively,p,strong,note,strong,to,use,this,when,subscribing,you,must,set,the,link,stomp,headers,set,ack,string,ack,header,to,client,or,client,individual,in,order,ot,use,this,param,message,id,the,id,of,the,message,param,consumed,whether,the,message,was,consumed,or,not,return,a,receiptable,for,tracking,receipts,since,4,3;receiptable,acknowledge,string,message,id,boolean,consumed
StompSession -> Receiptable acknowledge(String messageId, boolean consumed)_;1551113869;Send an acknowledgement whether a message was consumed or not resulting_in an ACK or NACK frame respectively._<p><strong>Note:</strong> to use this when subscribing you must set the_{@link StompHeaders#setAck(String) ack} header to "client" or_"client-individual" in order ot use this._@param messageId the id of the message_@param consumed whether the message was consumed or not_@return a Receiptable for tracking receipts_@since 4.3;Receiptable acknowledge(String messageId, boolean consumed)_;send,an,acknowledgement,whether,a,message,was,consumed,or,not,resulting,in,an,ack,or,nack,frame,respectively,p,strong,note,strong,to,use,this,when,subscribing,you,must,set,the,link,stomp,headers,set,ack,string,ack,header,to,client,or,client,individual,in,order,ot,use,this,param,message,id,the,id,of,the,message,param,consumed,whether,the,message,was,consumed,or,not,return,a,receiptable,for,tracking,receipts,since,4,3;receiptable,acknowledge,string,message,id,boolean,consumed
StompSession -> Subscription -> StompHeaders getSubscriptionHeaders()_;1485903353;Return the headers used on the SUBSCRIBE frame.;StompHeaders getSubscriptionHeaders()_;return,the,headers,used,on,the,subscribe,frame;stomp,headers,get,subscription,headers
StompSession -> Subscription -> StompHeaders getSubscriptionHeaders()_;1495868221;Return the headers used on the SUBSCRIBE frame.;StompHeaders getSubscriptionHeaders()_;return,the,headers,used,on,the,subscribe,frame;stomp,headers,get,subscription,headers
StompSession -> Subscription -> StompHeaders getSubscriptionHeaders()_;1496259743;Return the headers used on the SUBSCRIBE frame.;StompHeaders getSubscriptionHeaders()_;return,the,headers,used,on,the,subscribe,frame;stomp,headers,get,subscription,headers
StompSession -> Subscription -> StompHeaders getSubscriptionHeaders()_;1496837955;Return the headers used on the SUBSCRIBE frame.;StompHeaders getSubscriptionHeaders()_;return,the,headers,used,on,the,subscribe,frame;stomp,headers,get,subscription,headers
StompSession -> Subscription -> StompHeaders getSubscriptionHeaders()_;1506468851;Return the headers used on the SUBSCRIBE frame._@since 5.0;StompHeaders getSubscriptionHeaders()_;return,the,headers,used,on,the,subscribe,frame,since,5,0;stomp,headers,get,subscription,headers
StompSession -> Subscription -> StompHeaders getSubscriptionHeaders()_;1519763970;Return the headers used on the SUBSCRIBE frame._@since 5.0;StompHeaders getSubscriptionHeaders()_;return,the,headers,used,on,the,subscribe,frame,since,5,0;stomp,headers,get,subscription,headers
StompSession -> Subscription -> StompHeaders getSubscriptionHeaders()_;1519772955;Return the headers used on the SUBSCRIBE frame._@since 5.0;StompHeaders getSubscriptionHeaders()_;return,the,headers,used,on,the,subscribe,frame,since,5,0;stomp,headers,get,subscription,headers
StompSession -> Subscription -> StompHeaders getSubscriptionHeaders()_;1551093473;Return the headers used on the SUBSCRIBE frame._@since 5.0;StompHeaders getSubscriptionHeaders()_;return,the,headers,used,on,the,subscribe,frame,since,5,0;stomp,headers,get,subscription,headers
StompSession -> Subscription -> StompHeaders getSubscriptionHeaders()_;1551113869;Return the headers used on the SUBSCRIBE frame._@since 5.0;StompHeaders getSubscriptionHeaders()_;return,the,headers,used,on,the,subscribe,frame,since,5,0;stomp,headers,get,subscription,headers
StompSession -> Subscription -> void unsubscribe()_;1426211309;Remove the subscription by sending an UNSUBSCRIBE frame.;void unsubscribe()_;remove,the,subscription,by,sending,an,unsubscribe,frame;void,unsubscribe
StompSession -> Subscription -> void unsubscribe()_;1437512314;Remove the subscription by sending an UNSUBSCRIBE frame.;void unsubscribe()_;remove,the,subscription,by,sending,an,unsubscribe,frame;void,unsubscribe
StompSession -> Subscription -> void unsubscribe()_;1461703498;Remove the subscription by sending an UNSUBSCRIBE frame.;void unsubscribe()_;remove,the,subscription,by,sending,an,unsubscribe,frame;void,unsubscribe
StompSession -> Subscription -> void unsubscribe()_;1461703725;Remove the subscription by sending an UNSUBSCRIBE frame.;void unsubscribe()_;remove,the,subscription,by,sending,an,unsubscribe,frame;void,unsubscribe
StompSession -> Subscription -> void unsubscribe()_;1485903353;Remove the subscription by sending an UNSUBSCRIBE frame.;void unsubscribe()_;remove,the,subscription,by,sending,an,unsubscribe,frame;void,unsubscribe
StompSession -> Subscription -> void unsubscribe()_;1495868221;Remove the subscription by sending an UNSUBSCRIBE frame.;void unsubscribe()_;remove,the,subscription,by,sending,an,unsubscribe,frame;void,unsubscribe
StompSession -> Subscription -> void unsubscribe()_;1496259743;Remove the subscription by sending an UNSUBSCRIBE frame.;void unsubscribe()_;remove,the,subscription,by,sending,an,unsubscribe,frame;void,unsubscribe
StompSession -> Subscription -> void unsubscribe()_;1496837955;Remove the subscription by sending an UNSUBSCRIBE frame.;void unsubscribe()_;remove,the,subscription,by,sending,an,unsubscribe,frame;void,unsubscribe
StompSession -> Subscription -> void unsubscribe()_;1506468851;Remove the subscription by sending an UNSUBSCRIBE frame.;void unsubscribe()_;remove,the,subscription,by,sending,an,unsubscribe,frame;void,unsubscribe
StompSession -> Subscription -> void unsubscribe()_;1519763970;Remove the subscription by sending an UNSUBSCRIBE frame.;void unsubscribe()_;remove,the,subscription,by,sending,an,unsubscribe,frame;void,unsubscribe
StompSession -> Subscription -> void unsubscribe()_;1519772955;Remove the subscription by sending an UNSUBSCRIBE frame.;void unsubscribe()_;remove,the,subscription,by,sending,an,unsubscribe,frame;void,unsubscribe
StompSession -> Subscription -> void unsubscribe()_;1551093473;Remove the subscription by sending an UNSUBSCRIBE frame.;void unsubscribe()_;remove,the,subscription,by,sending,an,unsubscribe,frame;void,unsubscribe
StompSession -> Subscription -> void unsubscribe()_;1551113869;Remove the subscription by sending an UNSUBSCRIBE frame.;void unsubscribe()_;remove,the,subscription,by,sending,an,unsubscribe,frame;void,unsubscribe
StompSession -> Subscription -> @Nullable 		String getSubscriptionId()_;1496837955;Return the id for the subscription.;@Nullable_		String getSubscriptionId()_;return,the,id,for,the,subscription;nullable,string,get,subscription,id
StompSession -> Subscription -> @Nullable 		String getSubscriptionId()_;1506468851;Return the id for the subscription.;@Nullable_		String getSubscriptionId()_;return,the,id,for,the,subscription;nullable,string,get,subscription,id
StompSession -> Subscription -> @Nullable 		String getSubscriptionId()_;1519763970;Return the id for the subscription.;@Nullable_		String getSubscriptionId()_;return,the,id,for,the,subscription;nullable,string,get,subscription,id
StompSession -> Subscription -> @Nullable 		String getSubscriptionId()_;1519772955;Return the id for the subscription.;@Nullable_		String getSubscriptionId()_;return,the,id,for,the,subscription;nullable,string,get,subscription,id
StompSession -> Subscription -> @Nullable 		String getSubscriptionId()_;1551093473;Return the id for the subscription.;@Nullable_		String getSubscriptionId()_;return,the,id,for,the,subscription;nullable,string,get,subscription,id
StompSession -> Subscription -> @Nullable 		String getSubscriptionId()_;1551113869;Return the id for the subscription.;@Nullable_		String getSubscriptionId()_;return,the,id,for,the,subscription;nullable,string,get,subscription,id
StompSession -> Receiptable acknowledge(StompHeaders headers, boolean consumed)_;1519763970;An overloaded version of {@link #acknowledge(String, boolean)} with_full {@link StompHeaders} instead of just a {@code messageId}._@param headers the headers for the ACK or NACK message frame_@param consumed whether the message was consumed or not_@return a Receiptable for tracking receipts_@since 5.0.5;Receiptable acknowledge(StompHeaders headers, boolean consumed)_;an,overloaded,version,of,link,acknowledge,string,boolean,with,full,link,stomp,headers,instead,of,just,a,code,message,id,param,headers,the,headers,for,the,ack,or,nack,message,frame,param,consumed,whether,the,message,was,consumed,or,not,return,a,receiptable,for,tracking,receipts,since,5,0,5;receiptable,acknowledge,stomp,headers,headers,boolean,consumed
StompSession -> Receiptable acknowledge(StompHeaders headers, boolean consumed)_;1519772955;An overloaded version of {@link #acknowledge(String, boolean)} with_full {@link StompHeaders} instead of just a {@code messageId}._@param headers the headers for the ACK or NACK message frame_@param consumed whether the message was consumed or not_@return a Receiptable for tracking receipts_@since 5.0.5;Receiptable acknowledge(StompHeaders headers, boolean consumed)_;an,overloaded,version,of,link,acknowledge,string,boolean,with,full,link,stomp,headers,instead,of,just,a,code,message,id,param,headers,the,headers,for,the,ack,or,nack,message,frame,param,consumed,whether,the,message,was,consumed,or,not,return,a,receiptable,for,tracking,receipts,since,5,0,5;receiptable,acknowledge,stomp,headers,headers,boolean,consumed
StompSession -> Receiptable acknowledge(StompHeaders headers, boolean consumed)_;1551093473;An overloaded version of {@link #acknowledge(String, boolean)} with_full {@link StompHeaders} instead of just a {@code messageId}._@param headers the headers for the ACK or NACK message frame_@param consumed whether the message was consumed or not_@return a Receiptable for tracking receipts_@since 5.0.5;Receiptable acknowledge(StompHeaders headers, boolean consumed)_;an,overloaded,version,of,link,acknowledge,string,boolean,with,full,link,stomp,headers,instead,of,just,a,code,message,id,param,headers,the,headers,for,the,ack,or,nack,message,frame,param,consumed,whether,the,message,was,consumed,or,not,return,a,receiptable,for,tracking,receipts,since,5,0,5;receiptable,acknowledge,stomp,headers,headers,boolean,consumed
StompSession -> Receiptable acknowledge(StompHeaders headers, boolean consumed)_;1551113869;An overloaded version of {@link #acknowledge(String, boolean)} with_full {@link StompHeaders} instead of just a {@code messageId}._@param headers the headers for the ACK or NACK message frame_@param consumed whether the message was consumed or not_@return a Receiptable for tracking receipts_@since 5.0.5;Receiptable acknowledge(StompHeaders headers, boolean consumed)_;an,overloaded,version,of,link,acknowledge,string,boolean,with,full,link,stomp,headers,instead,of,just,a,code,message,id,param,headers,the,headers,for,the,ack,or,nack,message,frame,param,consumed,whether,the,message,was,consumed,or,not,return,a,receiptable,for,tracking,receipts,since,5,0,5;receiptable,acknowledge,stomp,headers,headers,boolean,consumed
StompSession -> String getSessionId()_;1426211309;Return the id for the session.;String getSessionId()_;return,the,id,for,the,session;string,get,session,id
StompSession -> String getSessionId()_;1437512314;Return the id for the session.;String getSessionId()_;return,the,id,for,the,session;string,get,session,id
StompSession -> String getSessionId()_;1461703498;Return the id for the session.;String getSessionId()_;return,the,id,for,the,session;string,get,session,id
StompSession -> String getSessionId()_;1461703725;Return the id for the session.;String getSessionId()_;return,the,id,for,the,session;string,get,session,id
StompSession -> String getSessionId()_;1485903353;Return the id for the session.;String getSessionId()_;return,the,id,for,the,session;string,get,session,id
StompSession -> String getSessionId()_;1495868221;Return the id for the session.;String getSessionId()_;return,the,id,for,the,session;string,get,session,id
StompSession -> String getSessionId()_;1496259743;Return the id for the session.;String getSessionId()_;return,the,id,for,the,session;string,get,session,id
StompSession -> String getSessionId()_;1496837955;Return the id for the session.;String getSessionId()_;return,the,id,for,the,session;string,get,session,id
StompSession -> String getSessionId()_;1506468851;Return the id for the session.;String getSessionId()_;return,the,id,for,the,session;string,get,session,id
StompSession -> String getSessionId()_;1519763970;Return the id for the session.;String getSessionId()_;return,the,id,for,the,session;string,get,session,id
StompSession -> String getSessionId()_;1519772955;Return the id for the session.;String getSessionId()_;return,the,id,for,the,session;string,get,session,id
StompSession -> String getSessionId()_;1551093473;Return the id for the session.;String getSessionId()_;return,the,id,for,the,session;string,get,session,id
StompSession -> String getSessionId()_;1551113869;Return the id for the session.;String getSessionId()_;return,the,id,for,the,session;string,get,session,id
StompSession -> Subscription -> void unsubscribe(@Nullable StompHeaders stompHeaders)_;1496259743;Alternative to {@link #unsubscribe()} with additional custom headers_to send to the server._<p><strong>Note:</strong> There is no need to set the subscription id.;void unsubscribe(@Nullable StompHeaders stompHeaders)_;alternative,to,link,unsubscribe,with,additional,custom,headers,to,send,to,the,server,p,strong,note,strong,there,is,no,need,to,set,the,subscription,id;void,unsubscribe,nullable,stomp,headers,stomp,headers
StompSession -> Subscription -> void unsubscribe(@Nullable StompHeaders stompHeaders)_;1496837955;Alternative to {@link #unsubscribe()} with additional custom headers_to send to the server._<p><strong>Note:</strong> There is no need to set the subscription id.;void unsubscribe(@Nullable StompHeaders stompHeaders)_;alternative,to,link,unsubscribe,with,additional,custom,headers,to,send,to,the,server,p,strong,note,strong,there,is,no,need,to,set,the,subscription,id;void,unsubscribe,nullable,stomp,headers,stomp,headers
StompSession -> Subscription -> void unsubscribe(@Nullable StompHeaders stompHeaders)_;1506468851;Alternative to {@link #unsubscribe()} with additional custom headers_to send to the server._<p><strong>Note:</strong> There is no need to set the subscription id._@since 5.0;void unsubscribe(@Nullable StompHeaders stompHeaders)_;alternative,to,link,unsubscribe,with,additional,custom,headers,to,send,to,the,server,p,strong,note,strong,there,is,no,need,to,set,the,subscription,id,since,5,0;void,unsubscribe,nullable,stomp,headers,stomp,headers
StompSession -> Subscription -> void unsubscribe(@Nullable StompHeaders stompHeaders)_;1519763970;Alternative to {@link #unsubscribe()} with additional custom headers_to send to the server._<p><strong>Note:</strong> There is no need to set the subscription id._@since 5.0;void unsubscribe(@Nullable StompHeaders stompHeaders)_;alternative,to,link,unsubscribe,with,additional,custom,headers,to,send,to,the,server,p,strong,note,strong,there,is,no,need,to,set,the,subscription,id,since,5,0;void,unsubscribe,nullable,stomp,headers,stomp,headers
StompSession -> Subscription -> String getSubscriptionId()_;1426211309;Return the id for the subscription.;String getSubscriptionId()_;return,the,id,for,the,subscription;string,get,subscription,id
StompSession -> Subscription -> String getSubscriptionId()_;1437512314;Return the id for the subscription.;String getSubscriptionId()_;return,the,id,for,the,subscription;string,get,subscription,id
StompSession -> Subscription -> String getSubscriptionId()_;1461703498;Return the id for the subscription.;String getSubscriptionId()_;return,the,id,for,the,subscription;string,get,subscription,id
StompSession -> Subscription -> String getSubscriptionId()_;1461703725;Return the id for the subscription.;String getSubscriptionId()_;return,the,id,for,the,subscription;string,get,subscription,id
StompSession -> Subscription -> String getSubscriptionId()_;1485903353;Return the id for the subscription.;String getSubscriptionId()_;return,the,id,for,the,subscription;string,get,subscription,id
StompSession -> Subscription -> String getSubscriptionId()_;1495868221;Return the id for the subscription.;String getSubscriptionId()_;return,the,id,for,the,subscription;string,get,subscription,id
StompSession -> Subscription -> String getSubscriptionId()_;1496259743;Return the id for the subscription.;String getSubscriptionId()_;return,the,id,for,the,subscription;string,get,subscription,id
StompSession -> boolean isConnected()_;1426211309;Whether the session is connected.;boolean isConnected()_;whether,the,session,is,connected;boolean,is,connected
StompSession -> boolean isConnected()_;1437512314;Whether the session is connected.;boolean isConnected()_;whether,the,session,is,connected;boolean,is,connected
StompSession -> boolean isConnected()_;1461703498;Whether the session is connected.;boolean isConnected()_;whether,the,session,is,connected;boolean,is,connected
StompSession -> boolean isConnected()_;1461703725;Whether the session is connected.;boolean isConnected()_;whether,the,session,is,connected;boolean,is,connected
StompSession -> boolean isConnected()_;1485903353;Whether the session is connected.;boolean isConnected()_;whether,the,session,is,connected;boolean,is,connected
StompSession -> boolean isConnected()_;1495868221;Whether the session is connected.;boolean isConnected()_;whether,the,session,is,connected;boolean,is,connected
StompSession -> boolean isConnected()_;1496259743;Whether the session is connected.;boolean isConnected()_;whether,the,session,is,connected;boolean,is,connected
StompSession -> boolean isConnected()_;1496837955;Whether the session is connected.;boolean isConnected()_;whether,the,session,is,connected;boolean,is,connected
StompSession -> boolean isConnected()_;1506468851;Whether the session is connected.;boolean isConnected()_;whether,the,session,is,connected;boolean,is,connected
StompSession -> boolean isConnected()_;1519763970;Whether the session is connected.;boolean isConnected()_;whether,the,session,is,connected;boolean,is,connected
StompSession -> boolean isConnected()_;1519772955;Whether the session is connected.;boolean isConnected()_;whether,the,session,is,connected;boolean,is,connected
StompSession -> boolean isConnected()_;1551093473;Whether the session is connected.;boolean isConnected()_;whether,the,session,is,connected;boolean,is,connected
StompSession -> boolean isConnected()_;1551113869;Whether the session is connected.;boolean isConnected()_;whether,the,session,is,connected;boolean,is,connected
StompSession -> Subscription subscribe(String destination, StompFrameHandler handler)_;1426211309;Subscribe to the given destination by sending a SUBSCRIBE frame and handle_received messages with the specified {@link StompFrameHandler}._@param destination the destination to subscribe to_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(String destination, StompFrameHandler handler)_;subscribe,to,the,given,destination,by,sending,a,subscribe,frame,and,handle,received,messages,with,the,specified,link,stomp,frame,handler,param,destination,the,destination,to,subscribe,to,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,string,destination,stomp,frame,handler,handler
StompSession -> Subscription subscribe(String destination, StompFrameHandler handler)_;1437512314;Subscribe to the given destination by sending a SUBSCRIBE frame and handle_received messages with the specified {@link StompFrameHandler}._@param destination the destination to subscribe to_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(String destination, StompFrameHandler handler)_;subscribe,to,the,given,destination,by,sending,a,subscribe,frame,and,handle,received,messages,with,the,specified,link,stomp,frame,handler,param,destination,the,destination,to,subscribe,to,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,string,destination,stomp,frame,handler,handler
StompSession -> Subscription subscribe(String destination, StompFrameHandler handler)_;1461703498;Subscribe to the given destination by sending a SUBSCRIBE frame and handle_received messages with the specified {@link StompFrameHandler}._@param destination the destination to subscribe to_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(String destination, StompFrameHandler handler)_;subscribe,to,the,given,destination,by,sending,a,subscribe,frame,and,handle,received,messages,with,the,specified,link,stomp,frame,handler,param,destination,the,destination,to,subscribe,to,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,string,destination,stomp,frame,handler,handler
StompSession -> Subscription subscribe(String destination, StompFrameHandler handler)_;1461703725;Subscribe to the given destination by sending a SUBSCRIBE frame and handle_received messages with the specified {@link StompFrameHandler}._@param destination the destination to subscribe to_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(String destination, StompFrameHandler handler)_;subscribe,to,the,given,destination,by,sending,a,subscribe,frame,and,handle,received,messages,with,the,specified,link,stomp,frame,handler,param,destination,the,destination,to,subscribe,to,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,string,destination,stomp,frame,handler,handler
StompSession -> Subscription subscribe(String destination, StompFrameHandler handler)_;1485903353;Subscribe to the given destination by sending a SUBSCRIBE frame and handle_received messages with the specified {@link StompFrameHandler}._@param destination the destination to subscribe to_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(String destination, StompFrameHandler handler)_;subscribe,to,the,given,destination,by,sending,a,subscribe,frame,and,handle,received,messages,with,the,specified,link,stomp,frame,handler,param,destination,the,destination,to,subscribe,to,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,string,destination,stomp,frame,handler,handler
StompSession -> Subscription subscribe(String destination, StompFrameHandler handler)_;1495868221;Subscribe to the given destination by sending a SUBSCRIBE frame and handle_received messages with the specified {@link StompFrameHandler}._@param destination the destination to subscribe to_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(String destination, StompFrameHandler handler)_;subscribe,to,the,given,destination,by,sending,a,subscribe,frame,and,handle,received,messages,with,the,specified,link,stomp,frame,handler,param,destination,the,destination,to,subscribe,to,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,string,destination,stomp,frame,handler,handler
StompSession -> Subscription subscribe(String destination, StompFrameHandler handler)_;1496259743;Subscribe to the given destination by sending a SUBSCRIBE frame and handle_received messages with the specified {@link StompFrameHandler}._@param destination the destination to subscribe to_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(String destination, StompFrameHandler handler)_;subscribe,to,the,given,destination,by,sending,a,subscribe,frame,and,handle,received,messages,with,the,specified,link,stomp,frame,handler,param,destination,the,destination,to,subscribe,to,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,string,destination,stomp,frame,handler,handler
StompSession -> Subscription subscribe(String destination, StompFrameHandler handler)_;1496837955;Subscribe to the given destination by sending a SUBSCRIBE frame and handle_received messages with the specified {@link StompFrameHandler}._@param destination the destination to subscribe to_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(String destination, StompFrameHandler handler)_;subscribe,to,the,given,destination,by,sending,a,subscribe,frame,and,handle,received,messages,with,the,specified,link,stomp,frame,handler,param,destination,the,destination,to,subscribe,to,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,string,destination,stomp,frame,handler,handler
StompSession -> Subscription subscribe(String destination, StompFrameHandler handler)_;1506468851;Subscribe to the given destination by sending a SUBSCRIBE frame and handle_received messages with the specified {@link StompFrameHandler}._@param destination the destination to subscribe to_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(String destination, StompFrameHandler handler)_;subscribe,to,the,given,destination,by,sending,a,subscribe,frame,and,handle,received,messages,with,the,specified,link,stomp,frame,handler,param,destination,the,destination,to,subscribe,to,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,string,destination,stomp,frame,handler,handler
StompSession -> Subscription subscribe(String destination, StompFrameHandler handler)_;1519763970;Subscribe to the given destination by sending a SUBSCRIBE frame and handle_received messages with the specified {@link StompFrameHandler}._@param destination the destination to subscribe to_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(String destination, StompFrameHandler handler)_;subscribe,to,the,given,destination,by,sending,a,subscribe,frame,and,handle,received,messages,with,the,specified,link,stomp,frame,handler,param,destination,the,destination,to,subscribe,to,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,string,destination,stomp,frame,handler,handler
StompSession -> Subscription subscribe(String destination, StompFrameHandler handler)_;1519772955;Subscribe to the given destination by sending a SUBSCRIBE frame and handle_received messages with the specified {@link StompFrameHandler}._@param destination the destination to subscribe to_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(String destination, StompFrameHandler handler)_;subscribe,to,the,given,destination,by,sending,a,subscribe,frame,and,handle,received,messages,with,the,specified,link,stomp,frame,handler,param,destination,the,destination,to,subscribe,to,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,string,destination,stomp,frame,handler,handler
StompSession -> Subscription subscribe(String destination, StompFrameHandler handler)_;1551093473;Subscribe to the given destination by sending a SUBSCRIBE frame and handle_received messages with the specified {@link StompFrameHandler}._@param destination the destination to subscribe to_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(String destination, StompFrameHandler handler)_;subscribe,to,the,given,destination,by,sending,a,subscribe,frame,and,handle,received,messages,with,the,specified,link,stomp,frame,handler,param,destination,the,destination,to,subscribe,to,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,string,destination,stomp,frame,handler,handler
StompSession -> Subscription subscribe(String destination, StompFrameHandler handler)_;1551113869;Subscribe to the given destination by sending a SUBSCRIBE frame and handle_received messages with the specified {@link StompFrameHandler}._@param destination the destination to subscribe to_@param handler the handler for received messages_@return a handle to use to unsubscribe and/or track receipts;Subscription subscribe(String destination, StompFrameHandler handler)_;subscribe,to,the,given,destination,by,sending,a,subscribe,frame,and,handle,received,messages,with,the,specified,link,stomp,frame,handler,param,destination,the,destination,to,subscribe,to,param,handler,the,handler,for,received,messages,return,a,handle,to,use,to,unsubscribe,and,or,track,receipts;subscription,subscribe,string,destination,stomp,frame,handler,handler
StompSession -> Receiptable -> void addReceiptLostTask(Runnable runnable)_;1426211309;Task to invoke when a receipt is not received in the configured time._@throws java.lang.IllegalArgumentException if the receiptId is {@code null}_@see org.springframework.messaging.simp.stomp.StompClientSupport#setReceiptTimeLimit(long);void addReceiptLostTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,not,received,in,the,configured,time,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null,see,org,springframework,messaging,simp,stomp,stomp,client,support,set,receipt,time,limit,long;void,add,receipt,lost,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptLostTask(Runnable runnable)_;1437512314;Task to invoke when a receipt is not received in the configured time._@throws java.lang.IllegalArgumentException if the receiptId is {@code null}_@see org.springframework.messaging.simp.stomp.StompClientSupport#setReceiptTimeLimit(long);void addReceiptLostTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,not,received,in,the,configured,time,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null,see,org,springframework,messaging,simp,stomp,stomp,client,support,set,receipt,time,limit,long;void,add,receipt,lost,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptLostTask(Runnable runnable)_;1461703498;Task to invoke when a receipt is not received in the configured time._@throws java.lang.IllegalArgumentException if the receiptId is {@code null}_@see org.springframework.messaging.simp.stomp.StompClientSupport#setReceiptTimeLimit(long);void addReceiptLostTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,not,received,in,the,configured,time,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null,see,org,springframework,messaging,simp,stomp,stomp,client,support,set,receipt,time,limit,long;void,add,receipt,lost,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptLostTask(Runnable runnable)_;1461703725;Task to invoke when a receipt is not received in the configured time._@throws java.lang.IllegalArgumentException if the receiptId is {@code null}_@see org.springframework.messaging.simp.stomp.StompClientSupport#setReceiptTimeLimit(long);void addReceiptLostTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,not,received,in,the,configured,time,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null,see,org,springframework,messaging,simp,stomp,stomp,client,support,set,receipt,time,limit,long;void,add,receipt,lost,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptLostTask(Runnable runnable)_;1485903353;Task to invoke when a receipt is not received in the configured time._@throws java.lang.IllegalArgumentException if the receiptId is {@code null}_@see org.springframework.messaging.simp.stomp.StompClientSupport#setReceiptTimeLimit(long);void addReceiptLostTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,not,received,in,the,configured,time,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null,see,org,springframework,messaging,simp,stomp,stomp,client,support,set,receipt,time,limit,long;void,add,receipt,lost,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptLostTask(Runnable runnable)_;1495868221;Task to invoke when a receipt is not received in the configured time._@throws java.lang.IllegalArgumentException if the receiptId is {@code null}_@see org.springframework.messaging.simp.stomp.StompClientSupport#setReceiptTimeLimit(long);void addReceiptLostTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,not,received,in,the,configured,time,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null,see,org,springframework,messaging,simp,stomp,stomp,client,support,set,receipt,time,limit,long;void,add,receipt,lost,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptLostTask(Runnable runnable)_;1496259743;Task to invoke when a receipt is not received in the configured time._@throws java.lang.IllegalArgumentException if the receiptId is {@code null}_@see org.springframework.messaging.simp.stomp.StompClientSupport#setReceiptTimeLimit(long);void addReceiptLostTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,not,received,in,the,configured,time,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null,see,org,springframework,messaging,simp,stomp,stomp,client,support,set,receipt,time,limit,long;void,add,receipt,lost,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptLostTask(Runnable runnable)_;1496837955;Task to invoke when a receipt is not received in the configured time._@throws java.lang.IllegalArgumentException if the receiptId is {@code null}_@see org.springframework.messaging.simp.stomp.StompClientSupport#setReceiptTimeLimit(long);void addReceiptLostTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,not,received,in,the,configured,time,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null,see,org,springframework,messaging,simp,stomp,stomp,client,support,set,receipt,time,limit,long;void,add,receipt,lost,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptLostTask(Runnable runnable)_;1506468851;Task to invoke when a receipt is not received in the configured time._@throws java.lang.IllegalArgumentException if the receiptId is {@code null}_@see org.springframework.messaging.simp.stomp.StompClientSupport#setReceiptTimeLimit(long);void addReceiptLostTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,not,received,in,the,configured,time,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null,see,org,springframework,messaging,simp,stomp,stomp,client,support,set,receipt,time,limit,long;void,add,receipt,lost,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptLostTask(Runnable runnable)_;1519763970;Task to invoke when a receipt is not received in the configured time._@throws java.lang.IllegalArgumentException if the receiptId is {@code null}_@see org.springframework.messaging.simp.stomp.StompClientSupport#setReceiptTimeLimit(long);void addReceiptLostTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,not,received,in,the,configured,time,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null,see,org,springframework,messaging,simp,stomp,stomp,client,support,set,receipt,time,limit,long;void,add,receipt,lost,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptLostTask(Runnable runnable)_;1519772955;Task to invoke when a receipt is not received in the configured time._@throws java.lang.IllegalArgumentException if the receiptId is {@code null}_@see org.springframework.messaging.simp.stomp.StompClientSupport#setReceiptTimeLimit(long);void addReceiptLostTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,not,received,in,the,configured,time,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null,see,org,springframework,messaging,simp,stomp,stomp,client,support,set,receipt,time,limit,long;void,add,receipt,lost,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptLostTask(Runnable runnable)_;1551093473;Task to invoke when a receipt is not received in the configured time._@throws java.lang.IllegalArgumentException if the receiptId is {@code null}_@see org.springframework.messaging.simp.stomp.StompClientSupport#setReceiptTimeLimit(long);void addReceiptLostTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,not,received,in,the,configured,time,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null,see,org,springframework,messaging,simp,stomp,stomp,client,support,set,receipt,time,limit,long;void,add,receipt,lost,task,runnable,runnable
StompSession -> Receiptable -> void addReceiptLostTask(Runnable runnable)_;1551113869;Task to invoke when a receipt is not received in the configured time._@throws java.lang.IllegalArgumentException if the receiptId is {@code null}_@see org.springframework.messaging.simp.stomp.StompClientSupport#setReceiptTimeLimit(long);void addReceiptLostTask(Runnable runnable)_;task,to,invoke,when,a,receipt,is,not,received,in,the,configured,time,throws,java,lang,illegal,argument,exception,if,the,receipt,id,is,code,null,see,org,springframework,messaging,simp,stomp,stomp,client,support,set,receipt,time,limit,long;void,add,receipt,lost,task,runnable,runnable
