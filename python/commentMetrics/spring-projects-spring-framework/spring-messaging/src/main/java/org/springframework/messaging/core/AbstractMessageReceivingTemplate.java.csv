# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractMessageReceivingTemplate -> @SuppressWarnings("unchecked") 	@Nullable 	protected <T> T doConvert(Message<?> message, Class<T> targetClass);1495868221;Convert from the given message to the given target class._@param message the message to convert_@param targetClass the target class to convert the payload to_@return the converted payload of the reply message (never {@code null});@SuppressWarnings("unchecked")_	@Nullable_	protected <T> T doConvert(Message<?> message, Class<T> targetClass) {_		MessageConverter messageConverter = getMessageConverter()__		T value = (T) messageConverter.fromMessage(message, targetClass)__		if (value == null) {_			throw new MessageConversionException(message, "Unable to convert payload [" + message.getPayload() +_					"] to type [" + targetClass + "] using converter [" + messageConverter + "]")__		}_		return value__	};convert,from,the,given,message,to,the,given,target,class,param,message,the,message,to,convert,param,target,class,the,target,class,to,convert,the,payload,to,return,the,converted,payload,of,the,reply,message,never,code,null;suppress,warnings,unchecked,nullable,protected,t,t,do,convert,message,message,class,t,target,class,message,converter,message,converter,get,message,converter,t,value,t,message,converter,from,message,message,target,class,if,value,null,throw,new,message,conversion,exception,message,unable,to,convert,payload,message,get,payload,to,type,target,class,using,converter,message,converter,return,value
AbstractMessageReceivingTemplate -> @SuppressWarnings("unchecked") 	@Nullable 	protected <T> T doConvert(Message<?> message, Class<T> targetClass);1502974979;Convert from the given message to the given target class._@param message the message to convert_@param targetClass the target class to convert the payload to_@return the converted payload of the reply message (never {@code null});@SuppressWarnings("unchecked")_	@Nullable_	protected <T> T doConvert(Message<?> message, Class<T> targetClass) {_		MessageConverter messageConverter = getMessageConverter()__		T value = (T) messageConverter.fromMessage(message, targetClass)__		if (value == null) {_			throw new MessageConversionException(message, "Unable to convert payload [" + message.getPayload() +_					"] to type [" + targetClass + "] using converter [" + messageConverter + "]")__		}_		return value__	};convert,from,the,given,message,to,the,given,target,class,param,message,the,message,to,convert,param,target,class,the,target,class,to,convert,the,payload,to,return,the,converted,payload,of,the,reply,message,never,code,null;suppress,warnings,unchecked,nullable,protected,t,t,do,convert,message,message,class,t,target,class,message,converter,message,converter,get,message,converter,t,value,t,message,converter,from,message,message,target,class,if,value,null,throw,new,message,conversion,exception,message,unable,to,convert,payload,message,get,payload,to,type,target,class,using,converter,message,converter,return,value
AbstractMessageReceivingTemplate -> @SuppressWarnings("unchecked") 	@Nullable 	protected <T> T doConvert(Message<?> message, Class<T> targetClass);1530174524;Convert from the given message to the given target class._@param message the message to convert_@param targetClass the target class to convert the payload to_@return the converted payload of the reply message (never {@code null});@SuppressWarnings("unchecked")_	@Nullable_	protected <T> T doConvert(Message<?> message, Class<T> targetClass) {_		MessageConverter messageConverter = getMessageConverter()__		T value = (T) messageConverter.fromMessage(message, targetClass)__		if (value == null) {_			throw new MessageConversionException(message, "Unable to convert payload [" + message.getPayload() +_					"] to type [" + targetClass + "] using converter [" + messageConverter + "]")__		}_		return value__	};convert,from,the,given,message,to,the,given,target,class,param,message,the,message,to,convert,param,target,class,the,target,class,to,convert,the,payload,to,return,the,converted,payload,of,the,reply,message,never,code,null;suppress,warnings,unchecked,nullable,protected,t,t,do,convert,message,message,class,t,target,class,message,converter,message,converter,get,message,converter,t,value,t,message,converter,from,message,message,target,class,if,value,null,throw,new,message,conversion,exception,message,unable,to,convert,payload,message,get,payload,to,type,target,class,using,converter,message,converter,return,value
AbstractMessageReceivingTemplate -> protected abstract Message<?> doReceive(D destination)_;1408751872;Actually receive a message from the given destination._@param destination the target destination_@return the received message, possibly {@code null} if the message could not_be received, for example due to a timeout;protected abstract Message<?> doReceive(D destination)_;actually,receive,a,message,from,the,given,destination,param,destination,the,target,destination,return,the,received,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;protected,abstract,message,do,receive,d,destination
AbstractMessageReceivingTemplate -> protected abstract Message<?> doReceive(D destination)_;1411389021;Actually receive a message from the given destination._@param destination the target destination_@return the received message, possibly {@code null} if the message could not_be received, for example due to a timeout;protected abstract Message<?> doReceive(D destination)_;actually,receive,a,message,from,the,given,destination,param,destination,the,target,destination,return,the,received,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;protected,abstract,message,do,receive,d,destination
AbstractMessageReceivingTemplate -> @Nullable 	protected abstract Message<?> doReceive(D destination)_;1495868221;Actually receive a message from the given destination._@param destination the target destination_@return the received message, possibly {@code null} if the message could not_be received, for example due to a timeout;@Nullable_	protected abstract Message<?> doReceive(D destination)_;actually,receive,a,message,from,the,given,destination,param,destination,the,target,destination,return,the,received,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;nullable,protected,abstract,message,do,receive,d,destination
AbstractMessageReceivingTemplate -> @Nullable 	protected abstract Message<?> doReceive(D destination)_;1502974979;Actually receive a message from the given destination._@param destination the target destination_@return the received message, possibly {@code null} if the message could not_be received, for example due to a timeout;@Nullable_	protected abstract Message<?> doReceive(D destination)_;actually,receive,a,message,from,the,given,destination,param,destination,the,target,destination,return,the,received,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;nullable,protected,abstract,message,do,receive,d,destination
AbstractMessageReceivingTemplate -> @Nullable 	protected abstract Message<?> doReceive(D destination)_;1530174524;Actually receive a message from the given destination._@param destination the target destination_@return the received message, possibly {@code null} if the message could not_be received, for example due to a timeout;@Nullable_	protected abstract Message<?> doReceive(D destination)_;actually,receive,a,message,from,the,given,destination,param,destination,the,target,destination,return,the,received,message,possibly,code,null,if,the,message,could,not,be,received,for,example,due,to,a,timeout;nullable,protected,abstract,message,do,receive,d,destination
AbstractMessageReceivingTemplate -> @SuppressWarnings("unchecked") 	protected <T> T doConvert(Message<?> message, Class<T> targetClass);1408751872;Convert from the given message to the given target class._@param message the message to convert_@param targetClass the target class to convert the payload to_@return the converted payload of the reply message (never {@code null});@SuppressWarnings("unchecked")_	protected <T> T doConvert(Message<?> message, Class<T> targetClass) {_		MessageConverter messageConverter = getMessageConverter()__		T value = (T) messageConverter.fromMessage(message, targetClass)__		if (value == null) {_			throw new MessageConversionException(message, "Unable to convert payload [" + message.getPayload() +_					"] to type [" + targetClass + "] using converter [" + messageConverter + "]")__		}_		return value__	};convert,from,the,given,message,to,the,given,target,class,param,message,the,message,to,convert,param,target,class,the,target,class,to,convert,the,payload,to,return,the,converted,payload,of,the,reply,message,never,code,null;suppress,warnings,unchecked,protected,t,t,do,convert,message,message,class,t,target,class,message,converter,message,converter,get,message,converter,t,value,t,message,converter,from,message,message,target,class,if,value,null,throw,new,message,conversion,exception,message,unable,to,convert,payload,message,get,payload,to,type,target,class,using,converter,message,converter,return,value
AbstractMessageReceivingTemplate -> @SuppressWarnings("unchecked") 	protected <T> T doConvert(Message<?> message, Class<T> targetClass);1411389021;Convert from the given message to the given target class._@param message the message to convert_@param targetClass the target class to convert the payload to_@return the converted payload of the reply message (never {@code null});@SuppressWarnings("unchecked")_	protected <T> T doConvert(Message<?> message, Class<T> targetClass) {_		MessageConverter messageConverter = getMessageConverter()__		T value = (T) messageConverter.fromMessage(message, targetClass)__		if (value == null) {_			throw new MessageConversionException(message, "Unable to convert payload [" + message.getPayload() +_					"] to type [" + targetClass + "] using converter [" + messageConverter + "]")__		}_		return value__	};convert,from,the,given,message,to,the,given,target,class,param,message,the,message,to,convert,param,target,class,the,target,class,to,convert,the,payload,to,return,the,converted,payload,of,the,reply,message,never,code,null;suppress,warnings,unchecked,protected,t,t,do,convert,message,message,class,t,target,class,message,converter,message,converter,get,message,converter,t,value,t,message,converter,from,message,message,target,class,if,value,null,throw,new,message,conversion,exception,message,unable,to,convert,payload,message,get,payload,to,type,target,class,using,converter,message,converter,return,value
