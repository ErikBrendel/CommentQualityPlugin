# id;timestamp;commentText;codeText;commentWords;codeWords
TcpOperations -> ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler)_;1386350678;Open a new connection._@param connectionHandler a handler to manage the connection_@return a ListenableFuture that can be used to determine when and if the_connection is successfully established;ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler)_;open,a,new,connection,param,connection,handler,a,handler,to,manage,the,connection,return,a,listenable,future,that,can,be,used,to,determine,when,and,if,the,connection,is,successfully,established;listenable,future,void,connect,tcp,connection,handler,p,connection,handler
TcpOperations -> ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler)_;1396404310;Open a new connection._@param connectionHandler a handler to manage the connection_@return a ListenableFuture that can be used to determine when and if the_connection is successfully established;ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler)_;open,a,new,connection,param,connection,handler,a,handler,to,manage,the,connection,return,a,listenable,future,that,can,be,used,to,determine,when,and,if,the,connection,is,successfully,established;listenable,future,void,connect,tcp,connection,handler,p,connection,handler
TcpOperations -> ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler)_;1413848647;Open a new connection._@param connectionHandler a handler to manage the connection_@return a ListenableFuture that can be used to determine when and if the_connection is successfully established;ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler)_;open,a,new,connection,param,connection,handler,a,handler,to,manage,the,connection,return,a,listenable,future,that,can,be,used,to,determine,when,and,if,the,connection,is,successfully,established;listenable,future,void,connect,tcp,connection,handler,p,connection,handler
TcpOperations -> ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler)_;1427240641;Open a new connection._@param connectionHandler a handler to manage the connection_@return a ListenableFuture that can be used to determine when and if the_connection is successfully established;ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler)_;open,a,new,connection,param,connection,handler,a,handler,to,manage,the,connection,return,a,listenable,future,that,can,be,used,to,determine,when,and,if,the,connection,is,successfully,established;listenable,future,void,connect,tcp,connection,handler,p,connection,handler
TcpOperations -> ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler)_;1430384340;Open a new connection._@param connectionHandler a handler to manage the connection_@return a ListenableFuture that can be used to determine when and if the_connection is successfully established;ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler)_;open,a,new,connection,param,connection,handler,a,handler,to,manage,the,connection,return,a,listenable,future,that,can,be,used,to,determine,when,and,if,the,connection,is,successfully,established;listenable,future,void,connect,tcp,connection,handler,p,connection,handler
TcpOperations -> ListenableFuture<Boolean> shutdown()_;1396404310;Shut down and close any open connections._@return a ListenableFuture that can be used to determine when and if the_connection is successfully closed;ListenableFuture<Boolean> shutdown()_;shut,down,and,close,any,open,connections,return,a,listenable,future,that,can,be,used,to,determine,when,and,if,the,connection,is,successfully,closed;listenable,future,boolean,shutdown
TcpOperations -> ListenableFuture<Boolean> shutdown()_;1413848647;Shut down and close any open connections._@return a ListenableFuture that can be used to determine when and if the_connection is successfully closed;ListenableFuture<Boolean> shutdown()_;shut,down,and,close,any,open,connections,return,a,listenable,future,that,can,be,used,to,determine,when,and,if,the,connection,is,successfully,closed;listenable,future,boolean,shutdown
TcpOperations -> ListenableFuture<Boolean> shutdown()_;1427240641;Shut down and close any open connections._@return a ListenableFuture that can be used to determine when and if the_connection is successfully closed;ListenableFuture<Boolean> shutdown()_;shut,down,and,close,any,open,connections,return,a,listenable,future,that,can,be,used,to,determine,when,and,if,the,connection,is,successfully,closed;listenable,future,boolean,shutdown
TcpOperations -> ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler, ReconnectStrategy reconnectStrategy)_;1386350678;Open a new connection and a strategy for reconnecting if the connection fails._@param connectionHandler a handler to manage the connection_@param reconnectStrategy a strategy for reconnecting_@return a ListenableFuture that can be used to determine when and if the_initial connection is successfully established;ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler, ReconnectStrategy reconnectStrategy)_;open,a,new,connection,and,a,strategy,for,reconnecting,if,the,connection,fails,param,connection,handler,a,handler,to,manage,the,connection,param,reconnect,strategy,a,strategy,for,reconnecting,return,a,listenable,future,that,can,be,used,to,determine,when,and,if,the,initial,connection,is,successfully,established;listenable,future,void,connect,tcp,connection,handler,p,connection,handler,reconnect,strategy,reconnect,strategy
TcpOperations -> ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler, ReconnectStrategy reconnectStrategy)_;1396404310;Open a new connection and a strategy for reconnecting if the connection fails._@param connectionHandler a handler to manage the connection_@param reconnectStrategy a strategy for reconnecting_@return a ListenableFuture that can be used to determine when and if the_initial connection is successfully established;ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler, ReconnectStrategy reconnectStrategy)_;open,a,new,connection,and,a,strategy,for,reconnecting,if,the,connection,fails,param,connection,handler,a,handler,to,manage,the,connection,param,reconnect,strategy,a,strategy,for,reconnecting,return,a,listenable,future,that,can,be,used,to,determine,when,and,if,the,initial,connection,is,successfully,established;listenable,future,void,connect,tcp,connection,handler,p,connection,handler,reconnect,strategy,reconnect,strategy
TcpOperations -> ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler, ReconnectStrategy reconnectStrategy)_;1413848647;Open a new connection and a strategy for reconnecting if the connection fails._@param connectionHandler a handler to manage the connection_@param reconnectStrategy a strategy for reconnecting_@return a ListenableFuture that can be used to determine when and if the_initial connection is successfully established;ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler, ReconnectStrategy reconnectStrategy)_;open,a,new,connection,and,a,strategy,for,reconnecting,if,the,connection,fails,param,connection,handler,a,handler,to,manage,the,connection,param,reconnect,strategy,a,strategy,for,reconnecting,return,a,listenable,future,that,can,be,used,to,determine,when,and,if,the,initial,connection,is,successfully,established;listenable,future,void,connect,tcp,connection,handler,p,connection,handler,reconnect,strategy,reconnect,strategy
TcpOperations -> ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler, ReconnectStrategy reconnectStrategy)_;1427240641;Open a new connection and a strategy for reconnecting if the connection fails._@param connectionHandler a handler to manage the connection_@param reconnectStrategy a strategy for reconnecting_@return a ListenableFuture that can be used to determine when and if the_initial connection is successfully established;ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler, ReconnectStrategy reconnectStrategy)_;open,a,new,connection,and,a,strategy,for,reconnecting,if,the,connection,fails,param,connection,handler,a,handler,to,manage,the,connection,param,reconnect,strategy,a,strategy,for,reconnecting,return,a,listenable,future,that,can,be,used,to,determine,when,and,if,the,initial,connection,is,successfully,established;listenable,future,void,connect,tcp,connection,handler,p,connection,handler,reconnect,strategy,reconnect,strategy
TcpOperations -> ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler, ReconnectStrategy reconnectStrategy)_;1430384340;Open a new connection and a strategy for reconnecting if the connection fails._@param connectionHandler a handler to manage the connection_@param reconnectStrategy a strategy for reconnecting_@return a ListenableFuture that can be used to determine when and if the_initial connection is successfully established;ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler, ReconnectStrategy reconnectStrategy)_;open,a,new,connection,and,a,strategy,for,reconnecting,if,the,connection,fails,param,connection,handler,a,handler,to,manage,the,connection,param,reconnect,strategy,a,strategy,for,reconnecting,return,a,listenable,future,that,can,be,used,to,determine,when,and,if,the,initial,connection,is,successfully,established;listenable,future,void,connect,tcp,connection,handler,p,connection,handler,reconnect,strategy,reconnect,strategy
TcpOperations -> ListenableFuture<Void> shutdown()_;1386350678;Shut down and close any open connections._@return a ListenableFuture that can be used to determine when and if the_connection is successfully closed;ListenableFuture<Void> shutdown()_;shut,down,and,close,any,open,connections,return,a,listenable,future,that,can,be,used,to,determine,when,and,if,the,connection,is,successfully,closed;listenable,future,void,shutdown
TcpOperations -> ListenableFuture<Void> shutdown()_;1430384340;Shut down and close any open connections._@return a ListenableFuture that can be used to determine when and if the_connection is successfully closed;ListenableFuture<Void> shutdown()_;shut,down,and,close,any,open,connections,return,a,listenable,future,that,can,be,used,to,determine,when,and,if,the,connection,is,successfully,closed;listenable,future,void,shutdown
