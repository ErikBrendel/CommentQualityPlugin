# id;timestamp;commentText;codeText;commentWords;codeWords
ContentTypeResolver -> @Nullable 	MimeType resolve(@Nullable MessageHeaders headers) throws InvalidMimeTypeException_;1496837955;Determine the {@link MimeType} of a message from the given MessageHeaders._@param headers the headers to use for the resolution_@return the resolved {@code MimeType}, or {@code null} if none found_@throws org.springframework.util.InvalidMimeTypeException if the content type_is a String that cannot be parsed_@throws IllegalArgumentException if there is a content type but its type is unknown;@Nullable_	MimeType resolve(@Nullable MessageHeaders headers) throws InvalidMimeTypeException_;determine,the,link,mime,type,of,a,message,from,the,given,message,headers,param,headers,the,headers,to,use,for,the,resolution,return,the,resolved,code,mime,type,or,code,null,if,none,found,throws,org,springframework,util,invalid,mime,type,exception,if,the,content,type,is,a,string,that,cannot,be,parsed,throws,illegal,argument,exception,if,there,is,a,content,type,but,its,type,is,unknown;nullable,mime,type,resolve,nullable,message,headers,headers,throws,invalid,mime,type,exception
ContentTypeResolver -> @Nullable 	MimeType resolve(@Nullable MessageHeaders headers) throws InvalidMimeTypeException_;1506468851;Determine the {@link MimeType} of a message from the given MessageHeaders._@param headers the headers to use for the resolution_@return the resolved {@code MimeType}, or {@code null} if none found_@throws InvalidMimeTypeException if the content type is a String that cannot be parsed_@throws IllegalArgumentException if there is a content type but its type is unknown;@Nullable_	MimeType resolve(@Nullable MessageHeaders headers) throws InvalidMimeTypeException_;determine,the,link,mime,type,of,a,message,from,the,given,message,headers,param,headers,the,headers,to,use,for,the,resolution,return,the,resolved,code,mime,type,or,code,null,if,none,found,throws,invalid,mime,type,exception,if,the,content,type,is,a,string,that,cannot,be,parsed,throws,illegal,argument,exception,if,there,is,a,content,type,but,its,type,is,unknown;nullable,mime,type,resolve,nullable,message,headers,headers,throws,invalid,mime,type,exception
ContentTypeResolver -> MimeType resolve(MessageHeaders headers)_;1393533834;Determine the {@link MimeType} of a message from the given MessageHeaders.__@param headers the headers to use for the resolution_@return the resolved {@code MimeType} of {@code null} if none found__@throws org.springframework.util.InvalidMimeTypeException if the content type_is a String that cannot be parsed_@throws java.lang.IllegalArgumentException if there is a content type but_its type is unknown;MimeType resolve(MessageHeaders headers)_;determine,the,link,mime,type,of,a,message,from,the,given,message,headers,param,headers,the,headers,to,use,for,the,resolution,return,the,resolved,code,mime,type,of,code,null,if,none,found,throws,org,springframework,util,invalid,mime,type,exception,if,the,content,type,is,a,string,that,cannot,be,parsed,throws,java,lang,illegal,argument,exception,if,there,is,a,content,type,but,its,type,is,unknown;mime,type,resolve,message,headers,headers
ContentTypeResolver -> MimeType resolve(MessageHeaders headers)_;1413848647;Determine the {@link MimeType} of a message from the given MessageHeaders.__@param headers the headers to use for the resolution_@return the resolved {@code MimeType} of {@code null} if none found__@throws org.springframework.util.InvalidMimeTypeException if the content type_is a String that cannot be parsed_@throws java.lang.IllegalArgumentException if there is a content type but_its type is unknown;MimeType resolve(MessageHeaders headers)_;determine,the,link,mime,type,of,a,message,from,the,given,message,headers,param,headers,the,headers,to,use,for,the,resolution,return,the,resolved,code,mime,type,of,code,null,if,none,found,throws,org,springframework,util,invalid,mime,type,exception,if,the,content,type,is,a,string,that,cannot,be,parsed,throws,java,lang,illegal,argument,exception,if,there,is,a,content,type,but,its,type,is,unknown;mime,type,resolve,message,headers,headers
ContentTypeResolver -> MimeType resolve(MessageHeaders headers)_;1467808333;Determine the {@link MimeType} of a message from the given MessageHeaders.__@param headers the headers to use for the resolution_@return the resolved {@code MimeType} of {@code null} if none found__@throws org.springframework.util.InvalidMimeTypeException if the content type_is a String that cannot be parsed_@throws java.lang.IllegalArgumentException if there is a content type but_its type is unknown;MimeType resolve(MessageHeaders headers)_;determine,the,link,mime,type,of,a,message,from,the,given,message,headers,param,headers,the,headers,to,use,for,the,resolution,return,the,resolved,code,mime,type,of,code,null,if,none,found,throws,org,springframework,util,invalid,mime,type,exception,if,the,content,type,is,a,string,that,cannot,be,parsed,throws,java,lang,illegal,argument,exception,if,there,is,a,content,type,but,its,type,is,unknown;mime,type,resolve,message,headers,headers
