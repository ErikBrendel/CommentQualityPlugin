# id;timestamp;commentText;codeText;commentWords;codeWords
SimpMessageTypeMessageCondition -> public SimpMessageTypeMessageCondition(SimpMessageType messageType);1386368611;A constructor accepting a message type._@param messageType the message type to match messages to;public SimpMessageTypeMessageCondition(SimpMessageType messageType) {_		Assert.notNull(messageType, "MessageType must not be null")__		this.messageType = messageType__	};a,constructor,accepting,a,message,type,param,message,type,the,message,type,to,match,messages,to;public,simp,message,type,message,condition,simp,message,type,message,type,assert,not,null,message,type,message,type,must,not,be,null,this,message,type,message,type
SimpMessageTypeMessageCondition -> public SimpMessageTypeMessageCondition(SimpMessageType messageType);1397429525;A constructor accepting a message type._@param messageType the message type to match messages to;public SimpMessageTypeMessageCondition(SimpMessageType messageType) {_		Assert.notNull(messageType, "MessageType must not be null")__		this.messageType = messageType__	};a,constructor,accepting,a,message,type,param,message,type,the,message,type,to,match,messages,to;public,simp,message,type,message,condition,simp,message,type,message,type,assert,not,null,message,type,message,type,must,not,be,null,this,message,type,message,type
SimpMessageTypeMessageCondition -> public SimpMessageTypeMessageCondition(SimpMessageType messageType);1413848647;A constructor accepting a message type._@param messageType the message type to match messages to;public SimpMessageTypeMessageCondition(SimpMessageType messageType) {_		Assert.notNull(messageType, "MessageType must not be null")__		this.messageType = messageType__	};a,constructor,accepting,a,message,type,param,message,type,the,message,type,to,match,messages,to;public,simp,message,type,message,condition,simp,message,type,message,type,assert,not,null,message,type,message,type,must,not,be,null,this,message,type,message,type
SimpMessageTypeMessageCondition -> public SimpMessageTypeMessageCondition(SimpMessageType messageType);1449703897;A constructor accepting a message type._@param messageType the message type to match messages to;public SimpMessageTypeMessageCondition(SimpMessageType messageType) {_		Assert.notNull(messageType, "MessageType must not be null")__		this.messageType = messageType__	};a,constructor,accepting,a,message,type,param,message,type,the,message,type,to,match,messages,to;public,simp,message,type,message,condition,simp,message,type,message,type,assert,not,null,message,type,message,type,must,not,be,null,this,message,type,message,type
SimpMessageTypeMessageCondition -> public SimpMessageTypeMessageCondition(SimpMessageType messageType);1502974979;A constructor accepting a message type._@param messageType the message type to match messages to;public SimpMessageTypeMessageCondition(SimpMessageType messageType) {_		Assert.notNull(messageType, "MessageType must not be null")__		this.messageType = messageType__	};a,constructor,accepting,a,message,type,param,message,type,the,message,type,to,match,messages,to;public,simp,message,type,message,condition,simp,message,type,message,type,assert,not,null,message,type,message,type,must,not,be,null,this,message,type,message,type
SimpMessageTypeMessageCondition -> public SimpMessageTypeMessageCondition(SimpMessageType messageType);1509542496;A constructor accepting a message type._@param messageType the message type to match messages to;public SimpMessageTypeMessageCondition(SimpMessageType messageType) {_		Assert.notNull(messageType, "MessageType must not be null")__		this.messageType = messageType__	};a,constructor,accepting,a,message,type,param,message,type,the,message,type,to,match,messages,to;public,simp,message,type,message,condition,simp,message,type,message,type,assert,not,null,message,type,message,type,must,not,be,null,this,message,type,message,type
SimpMessageTypeMessageCondition -> public SimpMessageTypeMessageCondition(SimpMessageType messageType);1509542496;A constructor accepting a message type._@param messageType the message type to match messages to;public SimpMessageTypeMessageCondition(SimpMessageType messageType) {_		Assert.notNull(messageType, "MessageType must not be null")__		this.messageType = messageType__	};a,constructor,accepting,a,message,type,param,message,type,the,message,type,to,match,messages,to;public,simp,message,type,message,condition,simp,message,type,message,type,assert,not,null,message,type,message,type,must,not,be,null,this,message,type,message,type
