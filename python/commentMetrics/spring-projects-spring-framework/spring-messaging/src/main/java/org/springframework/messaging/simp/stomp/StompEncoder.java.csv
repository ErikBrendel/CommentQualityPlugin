# id;timestamp;commentText;codeText;commentWords;codeWords
StompEncoder -> public byte[] encode(Message<byte[]> message);1380226141;Encodes the given STOMP {@code message} into a {@code byte[]}__@param message The message to encode__@return The encoded message;public byte[] encode(Message<byte[]> message) {_		try {_			if (logger.isTraceEnabled()) {_				logger.trace("Encoding " + message)__			}_			ByteArrayOutputStream baos = new ByteArrayOutputStream()__			DataOutputStream output = new DataOutputStream(baos)___			StompHeaderAccessor headers = StompHeaderAccessor.wrap(message)___			if (isHeartbeat(headers)) {_				output.write(message.getPayload())__			} else {_				writeCommand(headers, output)__				writeHeaders(headers, message, output)__				output.write(LF)__				writeBody(message, output)__				output.write((byte)0)__			}__			return baos.toByteArray()__		}_		catch (IOException e) {_			throw new StompConversionException("Failed to encode STOMP frame",  e)__		}_	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,try,if,logger,is,trace,enabled,logger,trace,encoding,message,byte,array,output,stream,baos,new,byte,array,output,stream,data,output,stream,output,new,data,output,stream,baos,stomp,header,accessor,headers,stomp,header,accessor,wrap,message,if,is,heartbeat,headers,output,write,message,get,payload,else,write,command,headers,output,write,headers,headers,message,output,output,write,lf,write,body,message,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,e,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,e
StompEncoder -> public byte[] encode(Message<byte[]> message);1380745853;Encodes the given STOMP {@code message} into a {@code byte[]}__@param message The message to encode__@return The encoded message;public byte[] encode(Message<byte[]> message) {_		try {_			if (logger.isTraceEnabled()) {_				logger.trace("Encoding " + message)__			}_			ByteArrayOutputStream baos = new ByteArrayOutputStream()__			DataOutputStream output = new DataOutputStream(baos)___			StompHeaderAccessor headers = StompHeaderAccessor.wrap(message)___			if (isHeartbeat(headers)) {_				output.write(message.getPayload())__			} else {_				writeCommand(headers, output)__				writeHeaders(headers, message, output)__				output.write(LF)__				writeBody(message, output)__				output.write((byte)0)__			}__			return baos.toByteArray()__		}_		catch (IOException e) {_			throw new StompConversionException("Failed to encode STOMP frame",  e)__		}_	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,try,if,logger,is,trace,enabled,logger,trace,encoding,message,byte,array,output,stream,baos,new,byte,array,output,stream,data,output,stream,output,new,data,output,stream,baos,stomp,header,accessor,headers,stomp,header,accessor,wrap,message,if,is,heartbeat,headers,output,write,message,get,payload,else,write,command,headers,output,write,headers,headers,message,output,output,write,lf,write,body,message,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,e,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,e
StompEncoder -> public byte[] encode(Message<byte[]> message);1381801064;Encodes the given STOMP {@code message} into a {@code byte[]}__@param message The message to encode__@return The encoded message;public byte[] encode(Message<byte[]> message) {_		try {_			if (logger.isTraceEnabled()) {_				logger.trace("Encoding " + message)__			}_			ByteArrayOutputStream baos = new ByteArrayOutputStream()__			DataOutputStream output = new DataOutputStream(baos)___			StompHeaderAccessor headers = StompHeaderAccessor.wrap(message)___			if (isHeartbeat(headers)) {_				output.write(message.getPayload())__			} else {_				writeCommand(headers, output)__				writeHeaders(headers, message, output)__				output.write(LF)__				writeBody(message, output)__				output.write((byte)0)__			}__			return baos.toByteArray()__		}_		catch (IOException e) {_			throw new StompConversionException("Failed to encode STOMP frame",  e)__		}_	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,try,if,logger,is,trace,enabled,logger,trace,encoding,message,byte,array,output,stream,baos,new,byte,array,output,stream,data,output,stream,output,new,data,output,stream,baos,stomp,header,accessor,headers,stomp,header,accessor,wrap,message,if,is,heartbeat,headers,output,write,message,get,payload,else,write,command,headers,output,write,headers,headers,message,output,output,write,lf,write,body,message,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,e,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,e
StompEncoder -> public byte[] encode(Message<byte[]> message);1384292065;Encodes the given STOMP {@code message} into a {@code byte[]}__@param message The message to encode__@return The encoded message;public byte[] encode(Message<byte[]> message) {_		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream()__			DataOutputStream output = new DataOutputStream(baos)___			StompHeaderAccessor headers = StompHeaderAccessor.wrap(message)___			if (isHeartbeat(headers)) {_				output.write(message.getPayload())__			} else {_				writeCommand(headers, output)__				writeHeaders(headers, message, output)__				output.write(LF)__				writeBody(message, output)__				output.write((byte)0)__			}__			return baos.toByteArray()__		}_		catch (IOException e) {_			throw new StompConversionException("Failed to encode STOMP frame",  e)__		}_	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,try,byte,array,output,stream,baos,new,byte,array,output,stream,data,output,stream,output,new,data,output,stream,baos,stomp,header,accessor,headers,stomp,header,accessor,wrap,message,if,is,heartbeat,headers,output,write,message,get,payload,else,write,command,headers,output,write,headers,headers,message,output,output,write,lf,write,body,message,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,e,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,e
StompEncoder -> public byte[] encode(Message<byte[]> message);1395698258;Encodes the given STOMP {@code message} into a {@code byte[]}_@param message the message to encode_@return the encoded message;public byte[] encode(Message<byte[]> message) {_		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream(256)__			DataOutputStream output = new DataOutputStream(baos)___			StompHeaderAccessor headers = StompHeaderAccessor.wrap(message)__			if (isHeartbeat(headers)) {_				output.write(message.getPayload())__			}_			else {_				writeCommand(headers, output)__				writeHeaders(headers, message, output)__				output.write(LF)__				writeBody(message, output)__				output.write((byte)0)__			}__			return baos.toByteArray()__		}_		catch (IOException e) {_			throw new StompConversionException("Failed to encode STOMP frame",  e)__		}_	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,try,byte,array,output,stream,baos,new,byte,array,output,stream,256,data,output,stream,output,new,data,output,stream,baos,stomp,header,accessor,headers,stomp,header,accessor,wrap,message,if,is,heartbeat,headers,output,write,message,get,payload,else,write,command,headers,output,write,headers,headers,message,output,output,write,lf,write,body,message,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,e,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,e
StompEncoder -> public byte[] encode(Message<byte[]> message);1395965753;Encodes the given STOMP {@code message} into a {@code byte[]}_@param message the message to encode_@return the encoded message;public byte[] encode(Message<byte[]> message) {_		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream(256)__			DataOutputStream output = new DataOutputStream(baos)___			StompHeaderAccessor headers = StompHeaderAccessor.wrap(message)__			if (isHeartbeat(headers)) {_				output.write(message.getPayload())__			}_			else {_				writeCommand(headers, output)__				writeHeaders(headers, message, output)__				output.write(LF)__				writeBody(message, output)__				output.write((byte)0)__			}__			return baos.toByteArray()__		}_		catch (IOException e) {_			throw new StompConversionException("Failed to encode STOMP frame",  e)__		}_	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,try,byte,array,output,stream,baos,new,byte,array,output,stream,256,data,output,stream,output,new,data,output,stream,baos,stomp,header,accessor,headers,stomp,header,accessor,wrap,message,if,is,heartbeat,headers,output,write,message,get,payload,else,write,command,headers,output,write,headers,headers,message,output,output,write,lf,write,body,message,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,e,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,e
StompEncoder -> public byte[] encode(Message<byte[]> message);1395966900;Encodes the given STOMP {@code message} into a {@code byte[]}_@param message the message to encode_@return the encoded message;public byte[] encode(Message<byte[]> message) {_		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream(128 + message.getPayload().length)__			DataOutputStream output = new DataOutputStream(baos)___			StompHeaderAccessor headers = StompHeaderAccessor.wrap(message)__			if (SimpMessageType.HEARTBEAT == headers.getMessageType()) {_				logger.trace("Encoded heartbeat")__				output.write(message.getPayload())__			}_			else {_				output.write(headers.getCommand().toString().getBytes(UTF8_CHARSET))__				output.write(LF)__				writeHeaders(headers, message, output)__				output.write(LF)__				writeBody(message, output)__				output.write((byte) 0)__			}__			return baos.toByteArray()__		}_		catch (IOException e) {_			throw new StompConversionException("Failed to encode STOMP frame",  e)__		}_	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,try,byte,array,output,stream,baos,new,byte,array,output,stream,128,message,get,payload,length,data,output,stream,output,new,data,output,stream,baos,stomp,header,accessor,headers,stomp,header,accessor,wrap,message,if,simp,message,type,heartbeat,headers,get,message,type,logger,trace,encoded,heartbeat,output,write,message,get,payload,else,output,write,headers,get,command,to,string,get,bytes,output,write,lf,write,headers,headers,message,output,output,write,lf,write,body,message,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,e,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,e
StompEncoder -> public byte[] encode(Message<byte[]> message);1397429525;Encodes the given STOMP {@code message} into a {@code byte[]}__@param message the message to encode_@return the encoded message;public byte[] encode(Message<byte[]> message) {_		return encode(message.getHeaders(), message.getPayload())__	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,return,encode,message,get,headers,message,get,payload
StompEncoder -> public byte[] encode(Message<byte[]> message);1403856366;Encodes the given STOMP {@code message} into a {@code byte[]}__@param message the message to encode_@return the encoded message;public byte[] encode(Message<byte[]> message) {_		return encode(message.getHeaders(), message.getPayload())__	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,return,encode,message,get,headers,message,get,payload
StompEncoder -> public byte[] encode(Message<byte[]> message);1404880799;Encodes the given STOMP {@code message} into a {@code byte[]}__@param message the message to encode_@return the encoded message;public byte[] encode(Message<byte[]> message) {_		return encode(message.getHeaders(), message.getPayload())__	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,return,encode,message,get,headers,message,get,payload
StompEncoder -> public byte[] encode(Message<byte[]> message);1405087788;Encodes the given STOMP {@code message} into a {@code byte[]}__@param message the message to encode_@return the encoded message;public byte[] encode(Message<byte[]> message) {_		return encode(message.getHeaders(), message.getPayload())__	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,return,encode,message,get,headers,message,get,payload
StompEncoder -> public byte[] encode(Message<byte[]> message);1413848647;Encodes the given STOMP {@code message} into a {@code byte[]}__@param message the message to encode_@return the encoded message;public byte[] encode(Message<byte[]> message) {_		return encode(message.getHeaders(), message.getPayload())__	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,return,encode,message,get,headers,message,get,payload
StompEncoder -> public byte[] encode(Message<byte[]> message);1415669910;Encodes the given STOMP {@code message} into a {@code byte[]}_@param message the message to encode_@return the encoded message;public byte[] encode(Message<byte[]> message) {_		return encode(message.getHeaders(), message.getPayload())__	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,return,encode,message,get,headers,message,get,payload
StompEncoder -> public byte[] encode(Message<byte[]> message);1426211309;Encodes the given STOMP {@code message} into a {@code byte[]}_@param message the message to encode_@return the encoded message;public byte[] encode(Message<byte[]> message) {_		return encode(message.getHeaders(), message.getPayload())__	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,return,encode,message,get,headers,message,get,payload
StompEncoder -> public byte[] encode(Message<byte[]> message);1468964586;Encodes the given STOMP {@code message} into a {@code byte[]}_@param message the message to encode_@return the encoded message;public byte[] encode(Message<byte[]> message) {_		return encode(message.getHeaders(), message.getPayload())__	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,return,encode,message,get,headers,message,get,payload
StompEncoder -> public byte[] encode(Message<byte[]> message);1474828967;Encodes the given STOMP {@code message} into a {@code byte[]}_@param message the message to encode_@return the encoded message;public byte[] encode(Message<byte[]> message) {_		return encode(message.getHeaders(), message.getPayload())__	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,return,encode,message,get,headers,message,get,payload
StompEncoder -> public byte[] encode(Message<byte[]> message);1474830007;Encodes the given STOMP {@code message} into a {@code byte[]}_@param message the message to encode_@return the encoded message;public byte[] encode(Message<byte[]> message) {_		return encode(message.getHeaders(), message.getPayload())__	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,return,encode,message,get,headers,message,get,payload
StompEncoder -> public byte[] encode(Message<byte[]> message);1474903230;Encodes the given STOMP {@code message} into a {@code byte[]}_@param message the message to encode_@return the encoded message;public byte[] encode(Message<byte[]> message) {_		return encode(message.getHeaders(), message.getPayload())__	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,return,encode,message,get,headers,message,get,payload
StompEncoder -> public byte[] encode(Message<byte[]> message);1481213680;Encodes the given STOMP {@code message} into a {@code byte[]}_@param message the message to encode_@return the encoded message;public byte[] encode(Message<byte[]> message) {_		return encode(message.getHeaders(), message.getPayload())__	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,return,encode,message,get,headers,message,get,payload
StompEncoder -> public byte[] encode(Message<byte[]> message);1496837955;Encodes the given STOMP {@code message} into a {@code byte[]}_@param message the message to encode_@return the encoded message;public byte[] encode(Message<byte[]> message) {_		return encode(message.getHeaders(), message.getPayload())__	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,return,encode,message,get,headers,message,get,payload
StompEncoder -> public byte[] encode(Message<byte[]> message);1499712291;Encodes the given STOMP {@code message} into a {@code byte[]}_@param message the message to encode_@return the encoded message;public byte[] encode(Message<byte[]> message) {_		return encode(message.getHeaders(), message.getPayload())__	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,return,encode,message,get,headers,message,get,payload
StompEncoder -> public byte[] encode(Message<byte[]> message);1530174524;Encodes the given STOMP {@code message} into a {@code byte[]}._@param message the message to encode_@return the encoded message;public byte[] encode(Message<byte[]> message) {_		return encode(message.getHeaders(), message.getPayload())__	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,return,encode,message,get,headers,message,get,payload
StompEncoder -> public byte[] encode(Message<byte[]> message);1531942400;Encodes the given STOMP {@code message} into a {@code byte[]}._@param message the message to encode_@return the encoded message;public byte[] encode(Message<byte[]> message) {_		return encode(message.getHeaders(), message.getPayload())__	};encodes,the,given,stomp,code,message,into,a,code,byte,param,message,the,message,to,encode,return,the,encoded,message;public,byte,encode,message,byte,message,return,encode,message,get,headers,message,get,payload
StompEncoder -> public byte[] encode(Map<String, Object> headers, byte[] payload);1397429525;Encodes the given payload and headers into a {@code byte[]}.__@param headers the headers_@param payload the payload_@return the encoded message;public byte[] encode(Map<String, Object> headers, byte[] payload) {_		Assert.notNull(headers, "'headers' is required")__		Assert.notNull(payload, "'payload' is required")__		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream(128 + payload.length)__			DataOutputStream output = new DataOutputStream(baos)___			if (SimpMessageType.HEARTBEAT.equals(SimpMessageHeaderAccessor.getMessageType(headers))) {_				logger.trace("Encoded heartbeat")__				output.write(StompDecoder.HEARTBEAT_PAYLOAD)__			}_			else {_				StompCommand command = StompHeaderAccessor.getCommand(headers)__				Assert.notNull(command, "Missing STOMP command: " + headers)__				output.write(command.toString().getBytes(StompDecoder.UTF8_CHARSET))__				output.write(LF)__				writeHeaders(command, headers, payload, output)__				output.write(LF)__				writeBody(payload, output)__				output.write((byte) 0)__			}__			return baos.toByteArray()__		}_		catch (IOException e) {_			throw new StompConversionException("Failed to encode STOMP frame",  e)__		}_	};encodes,the,given,payload,and,headers,into,a,code,byte,param,headers,the,headers,param,payload,the,payload,return,the,encoded,message;public,byte,encode,map,string,object,headers,byte,payload,assert,not,null,headers,headers,is,required,assert,not,null,payload,payload,is,required,try,byte,array,output,stream,baos,new,byte,array,output,stream,128,payload,length,data,output,stream,output,new,data,output,stream,baos,if,simp,message,type,heartbeat,equals,simp,message,header,accessor,get,message,type,headers,logger,trace,encoded,heartbeat,output,write,stomp,decoder,else,stomp,command,command,stomp,header,accessor,get,command,headers,assert,not,null,command,missing,stomp,command,headers,output,write,command,to,string,get,bytes,stomp,decoder,output,write,lf,write,headers,command,headers,payload,output,output,write,lf,write,body,payload,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,e,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,e
StompEncoder -> public byte[] encode(Map<String, Object> headers, byte[] payload);1403856366;Encodes the given payload and headers into a {@code byte[]}.__@param headers the headers_@param payload the payload_@return the encoded message;public byte[] encode(Map<String, Object> headers, byte[] payload) {_		Assert.notNull(headers, "'headers' is required")__		Assert.notNull(payload, "'payload' is required")__		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream(128 + payload.length)__			DataOutputStream output = new DataOutputStream(baos)___			if (SimpMessageType.HEARTBEAT.equals(SimpMessageHeaderAccessor.getMessageType(headers))) {_				logger.trace("Encoded heartbeat")__				output.write(StompDecoder.HEARTBEAT_PAYLOAD)__			}_			else {_				StompCommand command = StompHeaderAccessor.getCommand(headers)__				Assert.notNull(command, "Missing STOMP command: " + headers)__				output.write(command.toString().getBytes(StompDecoder.UTF8_CHARSET))__				output.write(LF)__				writeHeaders(command, headers, payload, output)__				output.write(LF)__				writeBody(payload, output)__				output.write((byte) 0)__			}__			return baos.toByteArray()__		}_		catch (IOException e) {_			throw new StompConversionException("Failed to encode STOMP frame, headers=" + headers + ".",  e)__		}_	};encodes,the,given,payload,and,headers,into,a,code,byte,param,headers,the,headers,param,payload,the,payload,return,the,encoded,message;public,byte,encode,map,string,object,headers,byte,payload,assert,not,null,headers,headers,is,required,assert,not,null,payload,payload,is,required,try,byte,array,output,stream,baos,new,byte,array,output,stream,128,payload,length,data,output,stream,output,new,data,output,stream,baos,if,simp,message,type,heartbeat,equals,simp,message,header,accessor,get,message,type,headers,logger,trace,encoded,heartbeat,output,write,stomp,decoder,else,stomp,command,command,stomp,header,accessor,get,command,headers,assert,not,null,command,missing,stomp,command,headers,output,write,command,to,string,get,bytes,stomp,decoder,output,write,lf,write,headers,command,headers,payload,output,output,write,lf,write,body,payload,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,e,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,headers,headers,e
StompEncoder -> public byte[] encode(Map<String, Object> headers, byte[] payload);1404880799;Encodes the given payload and headers into a {@code byte[]}.__@param headers the headers_@param payload the payload_@return the encoded message;public byte[] encode(Map<String, Object> headers, byte[] payload) {_		Assert.notNull(headers, "'headers' is required")__		Assert.notNull(payload, "'payload' is required")__		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream(128 + payload.length)__			DataOutputStream output = new DataOutputStream(baos)___			if (SimpMessageType.HEARTBEAT.equals(SimpMessageHeaderAccessor.getMessageType(headers))) {_				output.write(StompDecoder.HEARTBEAT_PAYLOAD)__			}_			else {_				StompCommand command = StompHeaderAccessor.getCommand(headers)__				Assert.notNull(command, "Missing STOMP command: " + headers)__				output.write(command.toString().getBytes(StompDecoder.UTF8_CHARSET))__				output.write(LF)__				writeHeaders(command, headers, payload, output)__				output.write(LF)__				writeBody(payload, output)__				output.write((byte) 0)__			}__			return baos.toByteArray()__		}_		catch (IOException e) {_			throw new StompConversionException("Failed to encode STOMP frame, headers=" + headers + ".",  e)__		}_	};encodes,the,given,payload,and,headers,into,a,code,byte,param,headers,the,headers,param,payload,the,payload,return,the,encoded,message;public,byte,encode,map,string,object,headers,byte,payload,assert,not,null,headers,headers,is,required,assert,not,null,payload,payload,is,required,try,byte,array,output,stream,baos,new,byte,array,output,stream,128,payload,length,data,output,stream,output,new,data,output,stream,baos,if,simp,message,type,heartbeat,equals,simp,message,header,accessor,get,message,type,headers,output,write,stomp,decoder,else,stomp,command,command,stomp,header,accessor,get,command,headers,assert,not,null,command,missing,stomp,command,headers,output,write,command,to,string,get,bytes,stomp,decoder,output,write,lf,write,headers,command,headers,payload,output,output,write,lf,write,body,payload,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,e,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,headers,headers,e
StompEncoder -> public byte[] encode(Map<String, Object> headers, byte[] payload);1405087788;Encodes the given payload and headers into a {@code byte[]}.__@param headers the headers_@param payload the payload_@return the encoded message;public byte[] encode(Map<String, Object> headers, byte[] payload) {_		Assert.notNull(headers, "'headers' is required")__		Assert.notNull(payload, "'payload' is required")__		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream(128 + payload.length)__			DataOutputStream output = new DataOutputStream(baos)___			if (SimpMessageType.HEARTBEAT.equals(SimpMessageHeaderAccessor.getMessageType(headers))) {_				output.write(StompDecoder.HEARTBEAT_PAYLOAD)__			}_			else {_				StompCommand command = StompHeaderAccessor.getCommand(headers)__				Assert.notNull(command, "Missing STOMP command: " + headers)__				output.write(command.toString().getBytes(StompDecoder.UTF8_CHARSET))__				output.write(LF)__				writeHeaders(command, headers, payload, output)__				output.write(LF)__				writeBody(payload, output)__				output.write((byte) 0)__			}__			return baos.toByteArray()__		}_		catch (IOException e) {_			throw new StompConversionException("Failed to encode STOMP frame, headers=" + headers + ".",  e)__		}_	};encodes,the,given,payload,and,headers,into,a,code,byte,param,headers,the,headers,param,payload,the,payload,return,the,encoded,message;public,byte,encode,map,string,object,headers,byte,payload,assert,not,null,headers,headers,is,required,assert,not,null,payload,payload,is,required,try,byte,array,output,stream,baos,new,byte,array,output,stream,128,payload,length,data,output,stream,output,new,data,output,stream,baos,if,simp,message,type,heartbeat,equals,simp,message,header,accessor,get,message,type,headers,output,write,stomp,decoder,else,stomp,command,command,stomp,header,accessor,get,command,headers,assert,not,null,command,missing,stomp,command,headers,output,write,command,to,string,get,bytes,stomp,decoder,output,write,lf,write,headers,command,headers,payload,output,output,write,lf,write,body,payload,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,e,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,headers,headers,e
StompEncoder -> public byte[] encode(Map<String, Object> headers, byte[] payload);1413848647;Encodes the given payload and headers into a {@code byte[]}.__@param headers the headers_@param payload the payload_@return the encoded message;public byte[] encode(Map<String, Object> headers, byte[] payload) {_		Assert.notNull(headers, "'headers' is required")__		Assert.notNull(payload, "'payload' is required")__		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream(128 + payload.length)__			DataOutputStream output = new DataOutputStream(baos)___			if (SimpMessageType.HEARTBEAT.equals(SimpMessageHeaderAccessor.getMessageType(headers))) {_				output.write(StompDecoder.HEARTBEAT_PAYLOAD)__			}_			else {_				StompCommand command = StompHeaderAccessor.getCommand(headers)__				Assert.notNull(command, "Missing STOMP command: " + headers)__				output.write(command.toString().getBytes(StompDecoder.UTF8_CHARSET))__				output.write(LF)__				writeHeaders(command, headers, payload, output)__				output.write(LF)__				writeBody(payload, output)__				output.write((byte) 0)__			}__			return baos.toByteArray()__		}_		catch (IOException e) {_			throw new StompConversionException("Failed to encode STOMP frame, headers=" + headers + ".",  e)__		}_	};encodes,the,given,payload,and,headers,into,a,code,byte,param,headers,the,headers,param,payload,the,payload,return,the,encoded,message;public,byte,encode,map,string,object,headers,byte,payload,assert,not,null,headers,headers,is,required,assert,not,null,payload,payload,is,required,try,byte,array,output,stream,baos,new,byte,array,output,stream,128,payload,length,data,output,stream,output,new,data,output,stream,baos,if,simp,message,type,heartbeat,equals,simp,message,header,accessor,get,message,type,headers,output,write,stomp,decoder,else,stomp,command,command,stomp,header,accessor,get,command,headers,assert,not,null,command,missing,stomp,command,headers,output,write,command,to,string,get,bytes,stomp,decoder,output,write,lf,write,headers,command,headers,payload,output,output,write,lf,write,body,payload,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,e,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,headers,headers,e
StompEncoder -> public byte[] encode(Map<String, Object> headers, byte[] payload);1415669910;Encodes the given payload and headers into a {@code byte[]}._@param headers the headers_@param payload the payload_@return the encoded message;public byte[] encode(Map<String, Object> headers, byte[] payload) {_		Assert.notNull(headers, "'headers' is required")__		Assert.notNull(payload, "'payload' is required")___		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream(128 + payload.length)__			DataOutputStream output = new DataOutputStream(baos)___			if (SimpMessageType.HEARTBEAT.equals(SimpMessageHeaderAccessor.getMessageType(headers))) {_				output.write(StompDecoder.HEARTBEAT_PAYLOAD)__			}_			else {_				StompCommand command = StompHeaderAccessor.getCommand(headers)__				Assert.notNull(command, "Missing STOMP command: " + headers)__				output.write(command.toString().getBytes(StompDecoder.UTF8_CHARSET))__				output.write(LF)__				writeHeaders(command, headers, payload, output)__				output.write(LF)__				writeBody(payload, output)__				output.write((byte) 0)__			}__			return baos.toByteArray()__		}_		catch (IOException ex) {_			throw new StompConversionException("Failed to encode STOMP frame, headers=" + headers,  ex)__		}_	};encodes,the,given,payload,and,headers,into,a,code,byte,param,headers,the,headers,param,payload,the,payload,return,the,encoded,message;public,byte,encode,map,string,object,headers,byte,payload,assert,not,null,headers,headers,is,required,assert,not,null,payload,payload,is,required,try,byte,array,output,stream,baos,new,byte,array,output,stream,128,payload,length,data,output,stream,output,new,data,output,stream,baos,if,simp,message,type,heartbeat,equals,simp,message,header,accessor,get,message,type,headers,output,write,stomp,decoder,else,stomp,command,command,stomp,header,accessor,get,command,headers,assert,not,null,command,missing,stomp,command,headers,output,write,command,to,string,get,bytes,stomp,decoder,output,write,lf,write,headers,command,headers,payload,output,output,write,lf,write,body,payload,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,ex,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,headers,headers,ex
StompEncoder -> public byte[] encode(Map<String, Object> headers, byte[] payload);1426211309;Encodes the given payload and headers into a {@code byte[]}._@param headers the headers_@param payload the payload_@return the encoded message;public byte[] encode(Map<String, Object> headers, byte[] payload) {_		Assert.notNull(headers, "'headers' is required")__		Assert.notNull(payload, "'payload' is required")___		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream(128 + payload.length)__			DataOutputStream output = new DataOutputStream(baos)___			if (SimpMessageType.HEARTBEAT.equals(SimpMessageHeaderAccessor.getMessageType(headers))) {_				if (logger.isTraceEnabled()) {_					logger.trace("Encoding heartbeat")__				}_				output.write(StompDecoder.HEARTBEAT_PAYLOAD)__			}_			else {_				StompCommand command = StompHeaderAccessor.getCommand(headers)__				Assert.notNull(command, "Missing STOMP command: " + headers)__				output.write(command.toString().getBytes(StompDecoder.UTF8_CHARSET))__				output.write(LF)__				writeHeaders(command, headers, payload, output)__				output.write(LF)__				writeBody(payload, output)__				output.write((byte) 0)__			}__			return baos.toByteArray()__		}_		catch (IOException ex) {_			throw new StompConversionException("Failed to encode STOMP frame, headers=" + headers,  ex)__		}_	};encodes,the,given,payload,and,headers,into,a,code,byte,param,headers,the,headers,param,payload,the,payload,return,the,encoded,message;public,byte,encode,map,string,object,headers,byte,payload,assert,not,null,headers,headers,is,required,assert,not,null,payload,payload,is,required,try,byte,array,output,stream,baos,new,byte,array,output,stream,128,payload,length,data,output,stream,output,new,data,output,stream,baos,if,simp,message,type,heartbeat,equals,simp,message,header,accessor,get,message,type,headers,if,logger,is,trace,enabled,logger,trace,encoding,heartbeat,output,write,stomp,decoder,else,stomp,command,command,stomp,header,accessor,get,command,headers,assert,not,null,command,missing,stomp,command,headers,output,write,command,to,string,get,bytes,stomp,decoder,output,write,lf,write,headers,command,headers,payload,output,output,write,lf,write,body,payload,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,ex,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,headers,headers,ex
StompEncoder -> public byte[] encode(Map<String, Object> headers, byte[] payload);1468964586;Encodes the given payload and headers into a {@code byte[]}._@param headers the headers_@param payload the payload_@return the encoded message;public byte[] encode(Map<String, Object> headers, byte[] payload) {_		Assert.notNull(headers, "'headers' is required")__		Assert.notNull(payload, "'payload' is required")___		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream(128 + payload.length)__			DataOutputStream output = new DataOutputStream(baos)___			if (SimpMessageType.HEARTBEAT.equals(SimpMessageHeaderAccessor.getMessageType(headers))) {_				if (logger.isTraceEnabled()) {_					logger.trace("Encoding heartbeat")__				}_				output.write(StompDecoder.HEARTBEAT_PAYLOAD)__			}_			else {_				StompCommand command = StompHeaderAccessor.getCommand(headers)__				Assert.notNull(command, "Missing STOMP command: " + headers)__				output.write(command.toString().getBytes(StandardCharsets.UTF_8))__				output.write(LF)__				writeHeaders(command, headers, payload, output)__				output.write(LF)__				writeBody(payload, output)__				output.write((byte) 0)__			}__			return baos.toByteArray()__		}_		catch (IOException ex) {_			throw new StompConversionException("Failed to encode STOMP frame, headers=" + headers,  ex)__		}_	};encodes,the,given,payload,and,headers,into,a,code,byte,param,headers,the,headers,param,payload,the,payload,return,the,encoded,message;public,byte,encode,map,string,object,headers,byte,payload,assert,not,null,headers,headers,is,required,assert,not,null,payload,payload,is,required,try,byte,array,output,stream,baos,new,byte,array,output,stream,128,payload,length,data,output,stream,output,new,data,output,stream,baos,if,simp,message,type,heartbeat,equals,simp,message,header,accessor,get,message,type,headers,if,logger,is,trace,enabled,logger,trace,encoding,heartbeat,output,write,stomp,decoder,else,stomp,command,command,stomp,header,accessor,get,command,headers,assert,not,null,command,missing,stomp,command,headers,output,write,command,to,string,get,bytes,standard,charsets,output,write,lf,write,headers,command,headers,payload,output,output,write,lf,write,body,payload,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,ex,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,headers,headers,ex
StompEncoder -> public byte[] encode(Map<String, Object> headers, byte[] payload);1474828967;Encodes the given payload and headers into a {@code byte[]}._@param headers the headers_@param payload the payload_@return the encoded message;public byte[] encode(Map<String, Object> headers, byte[] payload) {_		Assert.notNull(headers, "'headers' is required")__		Assert.notNull(payload, "'payload' is required")___		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream(128 + payload.length)__			DataOutputStream output = new DataOutputStream(baos)___			if (SimpMessageType.HEARTBEAT.equals(SimpMessageHeaderAccessor.getMessageType(headers))) {_				if (logger.isTraceEnabled()) {_					logger.trace("Encoding heartbeat")__				}_				output.write(StompDecoder.HEARTBEAT_PAYLOAD)__			}_			else {_				StompCommand command = StompHeaderAccessor.getCommand(headers)__				if (command == null) {_					throw new IllegalStateException("Missing STOMP command: " + headers)__				}__				output.write(command.toString().getBytes(StandardCharsets.UTF_8))__				output.write(LF)__				writeHeaders(command, headers, payload, output)__				output.write(LF)__				writeBody(payload, output)__				output.write((byte) 0)__			}__			return baos.toByteArray()__		}_		catch (IOException ex) {_			throw new StompConversionException("Failed to encode STOMP frame, headers=" + headers,  ex)__		}_	};encodes,the,given,payload,and,headers,into,a,code,byte,param,headers,the,headers,param,payload,the,payload,return,the,encoded,message;public,byte,encode,map,string,object,headers,byte,payload,assert,not,null,headers,headers,is,required,assert,not,null,payload,payload,is,required,try,byte,array,output,stream,baos,new,byte,array,output,stream,128,payload,length,data,output,stream,output,new,data,output,stream,baos,if,simp,message,type,heartbeat,equals,simp,message,header,accessor,get,message,type,headers,if,logger,is,trace,enabled,logger,trace,encoding,heartbeat,output,write,stomp,decoder,else,stomp,command,command,stomp,header,accessor,get,command,headers,if,command,null,throw,new,illegal,state,exception,missing,stomp,command,headers,output,write,command,to,string,get,bytes,standard,charsets,output,write,lf,write,headers,command,headers,payload,output,output,write,lf,write,body,payload,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,ex,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,headers,headers,ex
StompEncoder -> public byte[] encode(Map<String, Object> headers, byte[] payload);1474830007;Encodes the given payload and headers into a {@code byte[]}._@param headers the headers_@param payload the payload_@return the encoded message;public byte[] encode(Map<String, Object> headers, byte[] payload) {_		Assert.notNull(headers, "'headers' is required")__		Assert.notNull(payload, "'payload' is required")___		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream(128 + payload.length)__			DataOutputStream output = new DataOutputStream(baos)___			if (SimpMessageType.HEARTBEAT.equals(SimpMessageHeaderAccessor.getMessageType(headers))) {_				if (logger.isTraceEnabled()) {_					logger.trace("Encoding heartbeat")__				}_				output.write(StompDecoder.HEARTBEAT_PAYLOAD)__			}__			else {_				StompCommand command = StompHeaderAccessor.getCommand(headers)__				if (command == null) {_					throw new IllegalStateException("Missing STOMP command: " + headers)__				}__				output.write(command.toString().getBytes(StandardCharsets.UTF_8))__				output.write(LF)__				writeHeaders(command, headers, payload, output)__				output.write(LF)__				writeBody(payload, output)__				output.write((byte) 0)__			}__			return baos.toByteArray()__		}_		catch (IOException ex) {_			throw new StompConversionException("Failed to encode STOMP frame, headers=" + headers,  ex)__		}_	};encodes,the,given,payload,and,headers,into,a,code,byte,param,headers,the,headers,param,payload,the,payload,return,the,encoded,message;public,byte,encode,map,string,object,headers,byte,payload,assert,not,null,headers,headers,is,required,assert,not,null,payload,payload,is,required,try,byte,array,output,stream,baos,new,byte,array,output,stream,128,payload,length,data,output,stream,output,new,data,output,stream,baos,if,simp,message,type,heartbeat,equals,simp,message,header,accessor,get,message,type,headers,if,logger,is,trace,enabled,logger,trace,encoding,heartbeat,output,write,stomp,decoder,else,stomp,command,command,stomp,header,accessor,get,command,headers,if,command,null,throw,new,illegal,state,exception,missing,stomp,command,headers,output,write,command,to,string,get,bytes,standard,charsets,output,write,lf,write,headers,command,headers,payload,output,output,write,lf,write,body,payload,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,ex,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,headers,headers,ex
StompEncoder -> public byte[] encode(Map<String, Object> headers, byte[] payload);1474903230;Encodes the given payload and headers into a {@code byte[]}._@param headers the headers_@param payload the payload_@return the encoded message;public byte[] encode(Map<String, Object> headers, byte[] payload) {_		Assert.notNull(headers, "'headers' is required")__		Assert.notNull(payload, "'payload' is required")___		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream(128 + payload.length)__			DataOutputStream output = new DataOutputStream(baos)___			if (SimpMessageType.HEARTBEAT.equals(SimpMessageHeaderAccessor.getMessageType(headers))) {_				if (logger.isTraceEnabled()) {_					logger.trace("Encoding heartbeat")__				}_				output.write(StompDecoder.HEARTBEAT_PAYLOAD)__			}__			else {_				StompCommand command = StompHeaderAccessor.getCommand(headers)__				if (command == null) {_					throw new IllegalStateException("Missing STOMP command: " + headers)__				}__				output.write(command.toString().getBytes(StandardCharsets.UTF_8))__				output.write(LF)__				writeHeaders(command, headers, payload, output)__				output.write(LF)__				writeBody(payload, output)__				output.write((byte) 0)__			}__			return baos.toByteArray()__		}_		catch (IOException ex) {_			throw new StompConversionException("Failed to encode STOMP frame, headers=" + headers,  ex)__		}_	};encodes,the,given,payload,and,headers,into,a,code,byte,param,headers,the,headers,param,payload,the,payload,return,the,encoded,message;public,byte,encode,map,string,object,headers,byte,payload,assert,not,null,headers,headers,is,required,assert,not,null,payload,payload,is,required,try,byte,array,output,stream,baos,new,byte,array,output,stream,128,payload,length,data,output,stream,output,new,data,output,stream,baos,if,simp,message,type,heartbeat,equals,simp,message,header,accessor,get,message,type,headers,if,logger,is,trace,enabled,logger,trace,encoding,heartbeat,output,write,stomp,decoder,else,stomp,command,command,stomp,header,accessor,get,command,headers,if,command,null,throw,new,illegal,state,exception,missing,stomp,command,headers,output,write,command,to,string,get,bytes,standard,charsets,output,write,lf,write,headers,command,headers,payload,output,output,write,lf,write,body,payload,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,ex,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,headers,headers,ex
StompEncoder -> public byte[] encode(Map<String, Object> headers, byte[] payload);1481213680;Encodes the given payload and headers into a {@code byte[]}._@param headers the headers_@param payload the payload_@return the encoded message;public byte[] encode(Map<String, Object> headers, byte[] payload) {_		Assert.notNull(headers, "'headers' is required")__		Assert.notNull(payload, "'payload' is required")___		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream(128 + payload.length)__			DataOutputStream output = new DataOutputStream(baos)___			if (SimpMessageType.HEARTBEAT.equals(SimpMessageHeaderAccessor.getMessageType(headers))) {_				if (logger.isTraceEnabled()) {_					logger.trace("Encoding heartbeat")__				}_				output.write(StompDecoder.HEARTBEAT_PAYLOAD)__			}__			else {_				StompCommand command = StompHeaderAccessor.getCommand(headers)__				if (command == null) {_					throw new IllegalStateException("Missing STOMP command: " + headers)__				}__				output.write(command.toString().getBytes(StandardCharsets.UTF_8))__				output.write(LF)__				writeHeaders(command, headers, payload, output)__				output.write(LF)__				writeBody(payload, output)__				output.write((byte) 0)__			}__			return baos.toByteArray()__		}_		catch (IOException ex) {_			throw new StompConversionException("Failed to encode STOMP frame, headers=" + headers,  ex)__		}_	};encodes,the,given,payload,and,headers,into,a,code,byte,param,headers,the,headers,param,payload,the,payload,return,the,encoded,message;public,byte,encode,map,string,object,headers,byte,payload,assert,not,null,headers,headers,is,required,assert,not,null,payload,payload,is,required,try,byte,array,output,stream,baos,new,byte,array,output,stream,128,payload,length,data,output,stream,output,new,data,output,stream,baos,if,simp,message,type,heartbeat,equals,simp,message,header,accessor,get,message,type,headers,if,logger,is,trace,enabled,logger,trace,encoding,heartbeat,output,write,stomp,decoder,else,stomp,command,command,stomp,header,accessor,get,command,headers,if,command,null,throw,new,illegal,state,exception,missing,stomp,command,headers,output,write,command,to,string,get,bytes,standard,charsets,output,write,lf,write,headers,command,headers,payload,output,output,write,lf,write,body,payload,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,ex,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,headers,headers,ex
StompEncoder -> public byte[] encode(Map<String, Object> headers, byte[] payload);1496837955;Encodes the given payload and headers into a {@code byte[]}._@param headers the headers_@param payload the payload_@return the encoded message;public byte[] encode(Map<String, Object> headers, byte[] payload) {_		Assert.notNull(headers, "'headers' is required")__		Assert.notNull(payload, "'payload' is required")___		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream(128 + payload.length)__			DataOutputStream output = new DataOutputStream(baos)___			if (SimpMessageType.HEARTBEAT.equals(SimpMessageHeaderAccessor.getMessageType(headers))) {_				if (logger.isTraceEnabled()) {_					logger.trace("Encoding heartbeat")__				}_				output.write(StompDecoder.HEARTBEAT_PAYLOAD)__			}__			else {_				StompCommand command = StompHeaderAccessor.getCommand(headers)__				if (command == null) {_					throw new IllegalStateException("Missing STOMP command: " + headers)__				}__				output.write(command.toString().getBytes(StandardCharsets.UTF_8))__				output.write(LF)__				writeHeaders(command, headers, payload, output)__				output.write(LF)__				writeBody(payload, output)__				output.write((byte) 0)__			}__			return baos.toByteArray()__		}_		catch (IOException ex) {_			throw new StompConversionException("Failed to encode STOMP frame, headers=" + headers,  ex)__		}_	};encodes,the,given,payload,and,headers,into,a,code,byte,param,headers,the,headers,param,payload,the,payload,return,the,encoded,message;public,byte,encode,map,string,object,headers,byte,payload,assert,not,null,headers,headers,is,required,assert,not,null,payload,payload,is,required,try,byte,array,output,stream,baos,new,byte,array,output,stream,128,payload,length,data,output,stream,output,new,data,output,stream,baos,if,simp,message,type,heartbeat,equals,simp,message,header,accessor,get,message,type,headers,if,logger,is,trace,enabled,logger,trace,encoding,heartbeat,output,write,stomp,decoder,else,stomp,command,command,stomp,header,accessor,get,command,headers,if,command,null,throw,new,illegal,state,exception,missing,stomp,command,headers,output,write,command,to,string,get,bytes,standard,charsets,output,write,lf,write,headers,command,headers,payload,output,output,write,lf,write,body,payload,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,ex,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,headers,headers,ex
StompEncoder -> public byte[] encode(Map<String, Object> headers, byte[] payload);1499712291;Encodes the given payload and headers into a {@code byte[]}._@param headers the headers_@param payload the payload_@return the encoded message;public byte[] encode(Map<String, Object> headers, byte[] payload) {_		Assert.notNull(headers, "'headers' is required")__		Assert.notNull(payload, "'payload' is required")___		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream(128 + payload.length)__			DataOutputStream output = new DataOutputStream(baos)___			if (SimpMessageType.HEARTBEAT.equals(SimpMessageHeaderAccessor.getMessageType(headers))) {_				logger.trace("Encoding heartbeat")__				output.write(StompDecoder.HEARTBEAT_PAYLOAD)__			}__			else {_				StompCommand command = StompHeaderAccessor.getCommand(headers)__				if (command == null) {_					throw new IllegalStateException("Missing STOMP command: " + headers)__				}__				output.write(command.toString().getBytes(StandardCharsets.UTF_8))__				output.write(LF)__				writeHeaders(command, headers, payload, output)__				output.write(LF)__				writeBody(payload, output)__				output.write((byte) 0)__			}__			return baos.toByteArray()__		}_		catch (IOException ex) {_			throw new StompConversionException("Failed to encode STOMP frame, headers=" + headers,  ex)__		}_	};encodes,the,given,payload,and,headers,into,a,code,byte,param,headers,the,headers,param,payload,the,payload,return,the,encoded,message;public,byte,encode,map,string,object,headers,byte,payload,assert,not,null,headers,headers,is,required,assert,not,null,payload,payload,is,required,try,byte,array,output,stream,baos,new,byte,array,output,stream,128,payload,length,data,output,stream,output,new,data,output,stream,baos,if,simp,message,type,heartbeat,equals,simp,message,header,accessor,get,message,type,headers,logger,trace,encoding,heartbeat,output,write,stomp,decoder,else,stomp,command,command,stomp,header,accessor,get,command,headers,if,command,null,throw,new,illegal,state,exception,missing,stomp,command,headers,output,write,command,to,string,get,bytes,standard,charsets,output,write,lf,write,headers,command,headers,payload,output,output,write,lf,write,body,payload,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,ex,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,headers,headers,ex
StompEncoder -> public byte[] encode(Map<String, Object> headers, byte[] payload);1530174524;Encodes the given payload and headers into a {@code byte[]}._@param headers the headers_@param payload the payload_@return the encoded message;public byte[] encode(Map<String, Object> headers, byte[] payload) {_		Assert.notNull(headers, "'headers' is required")__		Assert.notNull(payload, "'payload' is required")___		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream(128 + payload.length)__			DataOutputStream output = new DataOutputStream(baos)___			if (SimpMessageType.HEARTBEAT.equals(SimpMessageHeaderAccessor.getMessageType(headers))) {_				logger.trace("Encoding heartbeat")__				output.write(StompDecoder.HEARTBEAT_PAYLOAD)__			}__			else {_				StompCommand command = StompHeaderAccessor.getCommand(headers)__				if (command == null) {_					throw new IllegalStateException("Missing STOMP command: " + headers)__				}__				output.write(command.toString().getBytes(StandardCharsets.UTF_8))__				output.write(LF)__				writeHeaders(command, headers, payload, output)__				output.write(LF)__				writeBody(payload, output)__				output.write((byte) 0)__			}__			return baos.toByteArray()__		}_		catch (IOException ex) {_			throw new StompConversionException("Failed to encode STOMP frame, headers=" + headers,  ex)__		}_	};encodes,the,given,payload,and,headers,into,a,code,byte,param,headers,the,headers,param,payload,the,payload,return,the,encoded,message;public,byte,encode,map,string,object,headers,byte,payload,assert,not,null,headers,headers,is,required,assert,not,null,payload,payload,is,required,try,byte,array,output,stream,baos,new,byte,array,output,stream,128,payload,length,data,output,stream,output,new,data,output,stream,baos,if,simp,message,type,heartbeat,equals,simp,message,header,accessor,get,message,type,headers,logger,trace,encoding,heartbeat,output,write,stomp,decoder,else,stomp,command,command,stomp,header,accessor,get,command,headers,if,command,null,throw,new,illegal,state,exception,missing,stomp,command,headers,output,write,command,to,string,get,bytes,standard,charsets,output,write,lf,write,headers,command,headers,payload,output,output,write,lf,write,body,payload,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,ex,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,headers,headers,ex
StompEncoder -> public byte[] encode(Map<String, Object> headers, byte[] payload);1531942400;Encodes the given payload and headers into a {@code byte[]}._@param headers the headers_@param payload the payload_@return the encoded message;public byte[] encode(Map<String, Object> headers, byte[] payload) {_		Assert.notNull(headers, "'headers' is required")__		Assert.notNull(payload, "'payload' is required")___		try {_			ByteArrayOutputStream baos = new ByteArrayOutputStream(128 + payload.length)__			DataOutputStream output = new DataOutputStream(baos)___			if (SimpMessageType.HEARTBEAT.equals(SimpMessageHeaderAccessor.getMessageType(headers))) {_				logger.trace("Encoding heartbeat")__				output.write(StompDecoder.HEARTBEAT_PAYLOAD)__			}__			else {_				StompCommand command = StompHeaderAccessor.getCommand(headers)__				if (command == null) {_					throw new IllegalStateException("Missing STOMP command: " + headers)__				}__				output.write(command.toString().getBytes(StandardCharsets.UTF_8))__				output.write(LF)__				writeHeaders(command, headers, payload, output)__				output.write(LF)__				writeBody(payload, output)__				output.write((byte) 0)__			}__			return baos.toByteArray()__		}_		catch (IOException ex) {_			throw new StompConversionException("Failed to encode STOMP frame, headers=" + headers,  ex)__		}_	};encodes,the,given,payload,and,headers,into,a,code,byte,param,headers,the,headers,param,payload,the,payload,return,the,encoded,message;public,byte,encode,map,string,object,headers,byte,payload,assert,not,null,headers,headers,is,required,assert,not,null,payload,payload,is,required,try,byte,array,output,stream,baos,new,byte,array,output,stream,128,payload,length,data,output,stream,output,new,data,output,stream,baos,if,simp,message,type,heartbeat,equals,simp,message,header,accessor,get,message,type,headers,logger,trace,encoding,heartbeat,output,write,stomp,decoder,else,stomp,command,command,stomp,header,accessor,get,command,headers,if,command,null,throw,new,illegal,state,exception,missing,stomp,command,headers,output,write,command,to,string,get,bytes,standard,charsets,output,write,lf,write,headers,command,headers,payload,output,output,write,lf,write,body,payload,output,output,write,byte,0,return,baos,to,byte,array,catch,ioexception,ex,throw,new,stomp,conversion,exception,failed,to,encode,stomp,frame,headers,headers,ex
StompEncoder -> private String escape(String inString);1395965753;See STOMP Spec 1.2:_<a href="http://stomp.github.io/stomp-specification-1.2.html#Value_Encoding">"Value Encoding"</a>.;private String escape(String inString) {_		StringBuilder sb = new StringBuilder(inString.length())__		for (int i = 0_ i < inString.length()_ i++) {_			char c = inString.charAt(i)__			if (c == '\\') {_				sb.append("\\\\")__			}_			else if (c == ':') {_				sb.append("\\c")__			}_			else if (c == '\n') {_				 sb.append("\\n")__			}_			else if (c == '\r') {_				sb.append("\\r")__			}_			else {_				sb.append(c)__			}_		}_		return sb.toString()__	};see,stomp,spec,1,2,a,href,http,stomp,github,io,stomp,specification,1,2,html,value,encoding,a;private,string,escape,string,in,string,string,builder,sb,new,string,builder,in,string,length,for,int,i,0,i,in,string,length,i,char,c,in,string,char,at,i,if,c,sb,append,else,if,c,sb,append,c,else,if,c,n,sb,append,n,else,if,c,r,sb,append,r,else,sb,append,c,return,sb,to,string
StompEncoder -> private String escape(String inString);1395966900;See STOMP Spec 1.2:_<a href="http://stomp.github.io/stomp-specification-1.2.html#Value_Encoding">"Value Encoding"</a>.;private String escape(String inString) {_		StringBuilder sb = new StringBuilder(inString.length())__		for (int i = 0_ i < inString.length()_ i++) {_			char c = inString.charAt(i)__			if (c == '\\') {_				sb.append("\\\\")__			}_			else if (c == ':') {_				sb.append("\\c")__			}_			else if (c == '\n') {_				 sb.append("\\n")__			}_			else if (c == '\r') {_				sb.append("\\r")__			}_			else {_				sb.append(c)__			}_		}_		return sb.toString()__	};see,stomp,spec,1,2,a,href,http,stomp,github,io,stomp,specification,1,2,html,value,encoding,a;private,string,escape,string,in,string,string,builder,sb,new,string,builder,in,string,length,for,int,i,0,i,in,string,length,i,char,c,in,string,char,at,i,if,c,sb,append,else,if,c,sb,append,c,else,if,c,n,sb,append,n,else,if,c,r,sb,append,r,else,sb,append,c,return,sb,to,string
StompEncoder -> private String escape(String inString);1397429525;See STOMP Spec 1.2:_<a href="http://stomp.github.io/stomp-specification-1.2.html#Value_Encoding">"Value Encoding"</a>.;private String escape(String inString) {_		StringBuilder sb = new StringBuilder(inString.length())__		for (int i = 0_ i < inString.length()_ i++) {_			char c = inString.charAt(i)__			if (c == '\\') {_				sb.append("\\\\")__			}_			else if (c == ':') {_				sb.append("\\c")__			}_			else if (c == '\n') {_				 sb.append("\\n")__			}_			else if (c == '\r') {_				sb.append("\\r")__			}_			else {_				sb.append(c)__			}_		}_		return sb.toString()__	};see,stomp,spec,1,2,a,href,http,stomp,github,io,stomp,specification,1,2,html,value,encoding,a;private,string,escape,string,in,string,string,builder,sb,new,string,builder,in,string,length,for,int,i,0,i,in,string,length,i,char,c,in,string,char,at,i,if,c,sb,append,else,if,c,sb,append,c,else,if,c,n,sb,append,n,else,if,c,r,sb,append,r,else,sb,append,c,return,sb,to,string
StompEncoder -> private String escape(String inString);1403856366;See STOMP Spec 1.2:_<a href="http://stomp.github.io/stomp-specification-1.2.html#Value_Encoding">"Value Encoding"</a>.;private String escape(String inString) {_		StringBuilder sb = new StringBuilder(inString.length())__		for (int i = 0_ i < inString.length()_ i++) {_			char c = inString.charAt(i)__			if (c == '\\') {_				sb.append("\\\\")__			}_			else if (c == ':') {_				sb.append("\\c")__			}_			else if (c == '\n') {_				 sb.append("\\n")__			}_			else if (c == '\r') {_				sb.append("\\r")__			}_			else {_				sb.append(c)__			}_		}_		return sb.toString()__	};see,stomp,spec,1,2,a,href,http,stomp,github,io,stomp,specification,1,2,html,value,encoding,a;private,string,escape,string,in,string,string,builder,sb,new,string,builder,in,string,length,for,int,i,0,i,in,string,length,i,char,c,in,string,char,at,i,if,c,sb,append,else,if,c,sb,append,c,else,if,c,n,sb,append,n,else,if,c,r,sb,append,r,else,sb,append,c,return,sb,to,string
StompEncoder -> private String escape(String inString);1404880799;See STOMP Spec 1.2:_<a href="http://stomp.github.io/stomp-specification-1.2.html#Value_Encoding">"Value Encoding"</a>.;private String escape(String inString) {_		StringBuilder sb = new StringBuilder(inString.length())__		for (int i = 0_ i < inString.length()_ i++) {_			char c = inString.charAt(i)__			if (c == '\\') {_				sb.append("\\\\")__			}_			else if (c == ':') {_				sb.append("\\c")__			}_			else if (c == '\n') {_				 sb.append("\\n")__			}_			else if (c == '\r') {_				sb.append("\\r")__			}_			else {_				sb.append(c)__			}_		}_		return sb.toString()__	};see,stomp,spec,1,2,a,href,http,stomp,github,io,stomp,specification,1,2,html,value,encoding,a;private,string,escape,string,in,string,string,builder,sb,new,string,builder,in,string,length,for,int,i,0,i,in,string,length,i,char,c,in,string,char,at,i,if,c,sb,append,else,if,c,sb,append,c,else,if,c,n,sb,append,n,else,if,c,r,sb,append,r,else,sb,append,c,return,sb,to,string
StompEncoder -> private String escape(String inString);1405087788;See STOMP Spec 1.2:_<a href="http://stomp.github.io/stomp-specification-1.2.html#Value_Encoding">"Value Encoding"</a>.;private String escape(String inString) {_		StringBuilder sb = new StringBuilder(inString.length())__		for (int i = 0_ i < inString.length()_ i++) {_			char c = inString.charAt(i)__			if (c == '\\') {_				sb.append("\\\\")__			}_			else if (c == ':') {_				sb.append("\\c")__			}_			else if (c == '\n') {_				 sb.append("\\n")__			}_			else if (c == '\r') {_				sb.append("\\r")__			}_			else {_				sb.append(c)__			}_		}_		return sb.toString()__	};see,stomp,spec,1,2,a,href,http,stomp,github,io,stomp,specification,1,2,html,value,encoding,a;private,string,escape,string,in,string,string,builder,sb,new,string,builder,in,string,length,for,int,i,0,i,in,string,length,i,char,c,in,string,char,at,i,if,c,sb,append,else,if,c,sb,append,c,else,if,c,n,sb,append,n,else,if,c,r,sb,append,r,else,sb,append,c,return,sb,to,string
StompEncoder -> private String escape(String inString);1413848647;See STOMP Spec 1.2:_<a href="http://stomp.github.io/stomp-specification-1.2.html#Value_Encoding">"Value Encoding"</a>.;private String escape(String inString) {_		StringBuilder sb = new StringBuilder(inString.length())__		for (int i = 0_ i < inString.length()_ i++) {_			char c = inString.charAt(i)__			if (c == '\\') {_				sb.append("\\\\")__			}_			else if (c == ':') {_				sb.append("\\c")__			}_			else if (c == '\n') {_				 sb.append("\\n")__			}_			else if (c == '\r') {_				sb.append("\\r")__			}_			else {_				sb.append(c)__			}_		}_		return sb.toString()__	};see,stomp,spec,1,2,a,href,http,stomp,github,io,stomp,specification,1,2,html,value,encoding,a;private,string,escape,string,in,string,string,builder,sb,new,string,builder,in,string,length,for,int,i,0,i,in,string,length,i,char,c,in,string,char,at,i,if,c,sb,append,else,if,c,sb,append,c,else,if,c,n,sb,append,n,else,if,c,r,sb,append,r,else,sb,append,c,return,sb,to,string
StompEncoder -> private String escape(String inString);1415669910;See STOMP Spec 1.2:_<a href="http://stomp.github.io/stomp-specification-1.2.html#Value_Encoding">"Value Encoding"</a>.;private String escape(String inString) {_		StringBuilder sb = new StringBuilder(inString.length())__		for (int i = 0_ i < inString.length()_ i++) {_			char c = inString.charAt(i)__			if (c == '\\') {_				sb.append("\\\\")__			}_			else if (c == ':') {_				sb.append("\\c")__			}_			else if (c == '\n') {_				 sb.append("\\n")__			}_			else if (c == '\r') {_				sb.append("\\r")__			}_			else {_				sb.append(c)__			}_		}_		return sb.toString()__	};see,stomp,spec,1,2,a,href,http,stomp,github,io,stomp,specification,1,2,html,value,encoding,a;private,string,escape,string,in,string,string,builder,sb,new,string,builder,in,string,length,for,int,i,0,i,in,string,length,i,char,c,in,string,char,at,i,if,c,sb,append,else,if,c,sb,append,c,else,if,c,n,sb,append,n,else,if,c,r,sb,append,r,else,sb,append,c,return,sb,to,string
StompEncoder -> private String escape(String inString);1426211309;See STOMP Spec 1.2:_<a href="http://stomp.github.io/stomp-specification-1.2.html#Value_Encoding">"Value Encoding"</a>.;private String escape(String inString) {_		StringBuilder sb = new StringBuilder(inString.length())__		for (int i = 0_ i < inString.length()_ i++) {_			char c = inString.charAt(i)__			if (c == '\\') {_				sb.append("\\\\")__			}_			else if (c == ':') {_				sb.append("\\c")__			}_			else if (c == '\n') {_				 sb.append("\\n")__			}_			else if (c == '\r') {_				sb.append("\\r")__			}_			else {_				sb.append(c)__			}_		}_		return sb.toString()__	};see,stomp,spec,1,2,a,href,http,stomp,github,io,stomp,specification,1,2,html,value,encoding,a;private,string,escape,string,in,string,string,builder,sb,new,string,builder,in,string,length,for,int,i,0,i,in,string,length,i,char,c,in,string,char,at,i,if,c,sb,append,else,if,c,sb,append,c,else,if,c,n,sb,append,n,else,if,c,r,sb,append,r,else,sb,append,c,return,sb,to,string
StompEncoder -> private String escape(String inString);1468964586;See STOMP Spec 1.2:_<a href="http://stomp.github.io/stomp-specification-1.2.html#Value_Encoding">"Value Encoding"</a>.;private String escape(String inString) {_		StringBuilder sb = new StringBuilder(inString.length())__		for (int i = 0_ i < inString.length()_ i++) {_			char c = inString.charAt(i)__			if (c == '\\') {_				sb.append("\\\\")__			}_			else if (c == ':') {_				sb.append("\\c")__			}_			else if (c == '\n') {_				 sb.append("\\n")__			}_			else if (c == '\r') {_				sb.append("\\r")__			}_			else {_				sb.append(c)__			}_		}_		return sb.toString()__	};see,stomp,spec,1,2,a,href,http,stomp,github,io,stomp,specification,1,2,html,value,encoding,a;private,string,escape,string,in,string,string,builder,sb,new,string,builder,in,string,length,for,int,i,0,i,in,string,length,i,char,c,in,string,char,at,i,if,c,sb,append,else,if,c,sb,append,c,else,if,c,n,sb,append,n,else,if,c,r,sb,append,r,else,sb,append,c,return,sb,to,string
StompEncoder -> private String escape(String inString);1474828967;See STOMP Spec 1.2:_<a href="http://stomp.github.io/stomp-specification-1.2.html#Value_Encoding">"Value Encoding"</a>.;private String escape(String inString) {_		StringBuilder sb = new StringBuilder(inString.length())__		for (int i = 0_ i < inString.length()_ i++) {_			char c = inString.charAt(i)__			if (c == '\\') {_				sb.append("\\\\")__			}_			else if (c == ':') {_				sb.append("\\c")__			}_			else if (c == '\n') {_				 sb.append("\\n")__			}_			else if (c == '\r') {_				sb.append("\\r")__			}_			else {_				sb.append(c)__			}_		}_		return sb.toString()__	};see,stomp,spec,1,2,a,href,http,stomp,github,io,stomp,specification,1,2,html,value,encoding,a;private,string,escape,string,in,string,string,builder,sb,new,string,builder,in,string,length,for,int,i,0,i,in,string,length,i,char,c,in,string,char,at,i,if,c,sb,append,else,if,c,sb,append,c,else,if,c,n,sb,append,n,else,if,c,r,sb,append,r,else,sb,append,c,return,sb,to,string
StompEncoder -> private String escape(String inString);1474830007;See STOMP Spec 1.2:_<a href="http://stomp.github.io/stomp-specification-1.2.html#Value_Encoding">"Value Encoding"</a>.;private String escape(String inString) {_		StringBuilder sb = new StringBuilder(inString.length())__		for (int i = 0_ i < inString.length()_ i++) {_			char c = inString.charAt(i)__			if (c == '\\') {_				sb.append("\\\\")__			}_			else if (c == ':') {_				sb.append("\\c")__			}_			else if (c == '\n') {_				 sb.append("\\n")__			}_			else if (c == '\r') {_				sb.append("\\r")__			}_			else {_				sb.append(c)__			}_		}_		return sb.toString()__	};see,stomp,spec,1,2,a,href,http,stomp,github,io,stomp,specification,1,2,html,value,encoding,a;private,string,escape,string,in,string,string,builder,sb,new,string,builder,in,string,length,for,int,i,0,i,in,string,length,i,char,c,in,string,char,at,i,if,c,sb,append,else,if,c,sb,append,c,else,if,c,n,sb,append,n,else,if,c,r,sb,append,r,else,sb,append,c,return,sb,to,string
StompEncoder -> private String escape(String inString);1474903230;See STOMP Spec 1.2:_<a href="http://stomp.github.io/stomp-specification-1.2.html#Value_Encoding">"Value Encoding"</a>.;private String escape(String inString) {_		StringBuilder sb = new StringBuilder(inString.length())__		for (int i = 0_ i < inString.length()_ i++) {_			char c = inString.charAt(i)__			if (c == '\\') {_				sb.append("\\\\")__			}_			else if (c == ':') {_				sb.append("\\c")__			}_			else if (c == '\n') {_				 sb.append("\\n")__			}_			else if (c == '\r') {_				sb.append("\\r")__			}_			else {_				sb.append(c)__			}_		}_		return sb.toString()__	};see,stomp,spec,1,2,a,href,http,stomp,github,io,stomp,specification,1,2,html,value,encoding,a;private,string,escape,string,in,string,string,builder,sb,new,string,builder,in,string,length,for,int,i,0,i,in,string,length,i,char,c,in,string,char,at,i,if,c,sb,append,else,if,c,sb,append,c,else,if,c,n,sb,append,n,else,if,c,r,sb,append,r,else,sb,append,c,return,sb,to,string
StompEncoder -> private String escape(String inString);1481213680;See STOMP Spec 1.2:_<a href="http://stomp.github.io/stomp-specification-1.2.html#Value_Encoding">"Value Encoding"</a>.;private String escape(String inString) {_		StringBuilder sb = null__		for (int i = 0_ i < inString.length()_ i++) {_			char c = inString.charAt(i)__			if (c == '\\') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\\\")__			}_			else if (c == ':') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\c")__			}_			else if (c == '\n') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\n")__			}_			else if (c == '\r') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\r")__			}_			else if (sb != null){_				sb.append(c)__			}_		}_		return (sb != null ? sb.toString() : inString)__	};see,stomp,spec,1,2,a,href,http,stomp,github,io,stomp,specification,1,2,html,value,encoding,a;private,string,escape,string,in,string,string,builder,sb,null,for,int,i,0,i,in,string,length,i,char,c,in,string,char,at,i,if,c,sb,get,string,builder,sb,in,string,i,sb,append,else,if,c,sb,get,string,builder,sb,in,string,i,sb,append,c,else,if,c,n,sb,get,string,builder,sb,in,string,i,sb,append,n,else,if,c,r,sb,get,string,builder,sb,in,string,i,sb,append,r,else,if,sb,null,sb,append,c,return,sb,null,sb,to,string,in,string
StompEncoder -> private String escape(String inString);1496837955;See STOMP Spec 1.2:_<a href="http://stomp.github.io/stomp-specification-1.2.html#Value_Encoding">"Value Encoding"</a>.;private String escape(String inString) {_		StringBuilder sb = null__		for (int i = 0_ i < inString.length()_ i++) {_			char c = inString.charAt(i)__			if (c == '\\') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\\\")__			}_			else if (c == ':') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\c")__			}_			else if (c == '\n') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\n")__			}_			else if (c == '\r') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\r")__			}_			else if (sb != null){_				sb.append(c)__			}_		}_		return (sb != null ? sb.toString() : inString)__	};see,stomp,spec,1,2,a,href,http,stomp,github,io,stomp,specification,1,2,html,value,encoding,a;private,string,escape,string,in,string,string,builder,sb,null,for,int,i,0,i,in,string,length,i,char,c,in,string,char,at,i,if,c,sb,get,string,builder,sb,in,string,i,sb,append,else,if,c,sb,get,string,builder,sb,in,string,i,sb,append,c,else,if,c,n,sb,get,string,builder,sb,in,string,i,sb,append,n,else,if,c,r,sb,get,string,builder,sb,in,string,i,sb,append,r,else,if,sb,null,sb,append,c,return,sb,null,sb,to,string,in,string
StompEncoder -> private String escape(String inString);1499712291;See STOMP Spec 1.2:_<a href="http://stomp.github.io/stomp-specification-1.2.html#Value_Encoding">"Value Encoding"</a>.;private String escape(String inString) {_		StringBuilder sb = null__		for (int i = 0_ i < inString.length()_ i++) {_			char c = inString.charAt(i)__			if (c == '\\') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\\\")__			}_			else if (c == ':') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\c")__			}_			else if (c == '\n') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\n")__			}_			else if (c == '\r') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\r")__			}_			else if (sb != null){_				sb.append(c)__			}_		}_		return (sb != null ? sb.toString() : inString)__	};see,stomp,spec,1,2,a,href,http,stomp,github,io,stomp,specification,1,2,html,value,encoding,a;private,string,escape,string,in,string,string,builder,sb,null,for,int,i,0,i,in,string,length,i,char,c,in,string,char,at,i,if,c,sb,get,string,builder,sb,in,string,i,sb,append,else,if,c,sb,get,string,builder,sb,in,string,i,sb,append,c,else,if,c,n,sb,get,string,builder,sb,in,string,i,sb,append,n,else,if,c,r,sb,get,string,builder,sb,in,string,i,sb,append,r,else,if,sb,null,sb,append,c,return,sb,null,sb,to,string,in,string
StompEncoder -> private String escape(String inString);1530174524;See STOMP Spec 1.2:_<a href="http://stomp.github.io/stomp-specification-1.2.html#Value_Encoding">"Value Encoding"</a>.;private String escape(String inString) {_		StringBuilder sb = null__		for (int i = 0_ i < inString.length()_ i++) {_			char c = inString.charAt(i)__			if (c == '\\') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\\\")__			}_			else if (c == ':') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\c")__			}_			else if (c == '\n') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\n")__			}_			else if (c == '\r') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\r")__			}_			else if (sb != null){_				sb.append(c)__			}_		}_		return (sb != null ? sb.toString() : inString)__	};see,stomp,spec,1,2,a,href,http,stomp,github,io,stomp,specification,1,2,html,value,encoding,a;private,string,escape,string,in,string,string,builder,sb,null,for,int,i,0,i,in,string,length,i,char,c,in,string,char,at,i,if,c,sb,get,string,builder,sb,in,string,i,sb,append,else,if,c,sb,get,string,builder,sb,in,string,i,sb,append,c,else,if,c,n,sb,get,string,builder,sb,in,string,i,sb,append,n,else,if,c,r,sb,get,string,builder,sb,in,string,i,sb,append,r,else,if,sb,null,sb,append,c,return,sb,null,sb,to,string,in,string
StompEncoder -> private String escape(String inString);1531942400;See STOMP Spec 1.2:_<a href="http://stomp.github.io/stomp-specification-1.2.html#Value_Encoding">"Value Encoding"</a>.;private String escape(String inString) {_		StringBuilder sb = null__		for (int i = 0_ i < inString.length()_ i++) {_			char c = inString.charAt(i)__			if (c == '\\') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\\\")__			}_			else if (c == ':') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\c")__			}_			else if (c == '\n') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\n")__			}_			else if (c == '\r') {_				sb = getStringBuilder(sb, inString, i)__				sb.append("\\r")__			}_			else if (sb != null){_				sb.append(c)__			}_		}_		return (sb != null ? sb.toString() : inString)__	};see,stomp,spec,1,2,a,href,http,stomp,github,io,stomp,specification,1,2,html,value,encoding,a;private,string,escape,string,in,string,string,builder,sb,null,for,int,i,0,i,in,string,length,i,char,c,in,string,char,at,i,if,c,sb,get,string,builder,sb,in,string,i,sb,append,else,if,c,sb,get,string,builder,sb,in,string,i,sb,append,c,else,if,c,n,sb,get,string,builder,sb,in,string,i,sb,append,n,else,if,c,r,sb,get,string,builder,sb,in,string,i,sb,append,r,else,if,sb,null,sb,append,c,return,sb,null,sb,to,string,in,string
