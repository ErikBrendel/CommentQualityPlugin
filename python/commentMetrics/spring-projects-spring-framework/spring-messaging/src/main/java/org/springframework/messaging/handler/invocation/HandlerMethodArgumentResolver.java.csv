commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Whether the given {@linkplain MethodParameter method parameter} is  * supported by this resolver.  * @param parameter the method parameter to check  * @return {@code true} if this resolver supports the supplied parameter.  * {@code false} otherwise  */ ;/**  * Whether the given {@linkplain MethodParameter method parameter} is  * supported by this resolver.  * @param parameter the method parameter to check  * @return {@code true} if this resolver supports the supplied parameter.  * {@code false} otherwise  */ boolean supportsParameter(MethodParameter parameter).
true;;2;2;/**  * Resolves a method parameter into an argument value from a given message.  * @param parameter the method parameter to resolve.  * This parameter must have previously been passed to  * {@link #supportsParameter(org.springframework.core.MethodParameter)}  * which must have returned {@code true}.  * @param message the currently processed message  * @return the resolved argument value, or {@code null}  * @throws Exception in case of errors with the preparation of argument values  */ ;/**  * Resolves a method parameter into an argument value from a given message.  * @param parameter the method parameter to resolve.  * This parameter must have previously been passed to  * {@link #supportsParameter(org.springframework.core.MethodParameter)}  * which must have returned {@code true}.  * @param message the currently processed message  * @return the resolved argument value, or {@code null}  * @throws Exception in case of errors with the preparation of argument values  */ @Nullable Object resolveArgument(MethodParameter parameter, Message<?> message) throws Exception.
