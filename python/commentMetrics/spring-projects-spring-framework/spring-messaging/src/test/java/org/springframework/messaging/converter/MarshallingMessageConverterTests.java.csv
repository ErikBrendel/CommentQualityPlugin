commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Before public void createMarshaller() throws Exception {     Jaxb2Marshaller marshaller = new Jaxb2Marshaller().     marshaller.setClassesToBeBound(MyBean.class).     marshaller.afterPropertiesSet().     this.converter = new MarshallingMessageConverter(marshaller). }
false;public;0;9;;@Test public void fromMessage() throws Exception {     String payload = "<myBean><name>Foo</name></myBean>".     Message<?> message = MessageBuilder.withPayload(payload.getBytes(StandardCharsets.UTF_8)).build().     MyBean actual = (MyBean) this.converter.fromMessage(message, MyBean.class).     assertNotNull(actual).     assertEquals("Foo", actual.getName()). }
false;public;0;6;;@Test(expected = MessageConversionException.class) public void fromMessageInvalidXml() throws Exception {     String payload = "<myBean><name>Foo</name><myBean>".     Message<?> message = MessageBuilder.withPayload(payload.getBytes(StandardCharsets.UTF_8)).build().     this.converter.fromMessage(message, MyBean.class). }
false;public;0;6;;@Test(expected = MessageConversionException.class) public void fromMessageValidXmlWithUnknownProperty() throws IOException {     String payload = "<myBean><age>42</age><myBean>".     Message<?> message = MessageBuilder.withPayload(payload.getBytes(StandardCharsets.UTF_8)).build().     this.converter.fromMessage(message, MyBean.class). }
false;public;0;12;;@Test public void toMessage() throws Exception {     MyBean payload = new MyBean().     payload.setName("Foo").     Message<?> message = this.converter.toMessage(payload, null).     assertNotNull(message).     String actual = new String((byte[]) message.getPayload(), StandardCharsets.UTF_8).     DifferenceEvaluator ev = chain(Default, downgradeDifferencesToEqual(XML_STANDALONE)).     assertThat(actual, isSimilarTo("<myBean><name>Foo</name></myBean>").withDifferenceEvaluator(ev)). }
false;public;0;3;;public String getName() {     return name. }
false;public;1;3;;public void setName(String name) {     this.name = name. }
