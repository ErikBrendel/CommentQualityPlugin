commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void defaultHeartbeatValidation() throws Exception {     trySetDefaultHeartbeat(new long[] { -1, 0 }).     trySetDefaultHeartbeat(new long[] { 0, -1 }). }
false;private;1;9;;private void trySetDefaultHeartbeat(long[] heartbeat) {     try {         this.stompClient.setDefaultHeartbeat(heartbeat).         fail("Expected exception").     } catch (IllegalArgumentException ex) {     // Ignore     } }
false;public;0;4;;@Test public void defaultHeartbeatValue() throws Exception {     assertArrayEquals(new long[] { 10000, 10000 }, this.stompClient.getDefaultHeartbeat()). }
false;public;0;8;;@Test public void isDefaultHeartbeatEnabled() throws Exception {     assertArrayEquals(new long[] { 10000, 10000 }, this.stompClient.getDefaultHeartbeat()).     assertTrue(this.stompClient.isDefaultHeartbeatEnabled()).     this.stompClient.setDefaultHeartbeat(new long[] { 0, 0 }).     assertFalse(this.stompClient.isDefaultHeartbeatEnabled()). }
false;public;0;7;;@Test public void processConnectHeadersDefault() throws Exception {     StompHeaders connectHeaders = this.stompClient.processConnectHeaders(null).     assertNotNull(connectHeaders).     assertArrayEquals(new long[] { 10000, 10000 }, connectHeaders.getHeartbeat()). }
false;public;0;10;;@Test public void processConnectHeadersWithExplicitHeartbeat() throws Exception {     StompHeaders connectHeaders = new StompHeaders().     connectHeaders.setHeartbeat(new long[] { 15000, 15000 }).     connectHeaders = this.stompClient.processConnectHeaders(connectHeaders).     assertNotNull(connectHeaders).     assertArrayEquals(new long[] { 15000, 15000 }, connectHeaders.getHeartbeat()). }
