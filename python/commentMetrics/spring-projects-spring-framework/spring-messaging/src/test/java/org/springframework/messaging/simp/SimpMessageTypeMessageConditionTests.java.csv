commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Test public void combine() {     SimpMessageType messageType = SimpMessageType.MESSAGE.     SimpMessageType subscribeType = SimpMessageType.SUBSCRIBE.     SimpMessageType actual = condition(messageType).combine(condition(subscribeType)).getMessageType().     assertEquals(subscribeType, actual).     actual = condition(messageType).combine(condition(messageType)).getMessageType().     assertEquals(messageType, actual).     actual = condition(subscribeType).combine(condition(subscribeType)).getMessageType().     assertEquals(subscribeType, actual). }
false;public;0;9;;@Test public void getMatchingCondition() {     Message<?> message = message(SimpMessageType.MESSAGE).     SimpMessageTypeMessageCondition condition = condition(SimpMessageType.MESSAGE).     SimpMessageTypeMessageCondition actual = condition.getMatchingCondition(message).     assertNotNull(actual).     assertEquals(SimpMessageType.MESSAGE, actual.getMessageType()). }
false;public;0;7;;@Test public void getMatchingConditionNoMessageType() {     Message<?> message = message(null).     SimpMessageTypeMessageCondition condition = condition(SimpMessageType.MESSAGE).     assertNull(condition.getMatchingCondition(message)). }
false;public;0;6;;@Test public void compareTo() {     Message<byte[]> message = message(null).     assertEquals(0, condition(SimpMessageType.MESSAGE).compareTo(condition(SimpMessageType.MESSAGE), message)).     assertEquals(0, condition(SimpMessageType.MESSAGE).compareTo(condition(SimpMessageType.SUBSCRIBE), message)). }
false;private;1;7;;private Message<byte[]> message(SimpMessageType messageType) {     MessageBuilder<byte[]> builder = MessageBuilder.withPayload(new byte[0]).     if (messageType != null) {         builder.setHeader(SimpMessageHeaderAccessor.MESSAGE_TYPE_HEADER, messageType).     }     return builder.build(). }
false;private;1;3;;private SimpMessageTypeMessageCondition condition(SimpMessageType messageType) {     return new SimpMessageTypeMessageCondition(messageType). }
