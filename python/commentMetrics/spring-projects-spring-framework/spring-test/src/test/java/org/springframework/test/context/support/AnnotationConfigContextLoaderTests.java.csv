commented;modifiers;parameterAmount;loc;comment;code
true;public;0;9;/**  * @since 4.0.4  */ ;/**  * @since 4.0.4  */ @Test public void configMustNotContainLocations() throws Exception {     expectedException.expect(IllegalStateException.class).     expectedException.expectMessage(containsString("does not support resource locations")).     MergedContextConfiguration mergedConfig = new MergedContextConfiguration(getClass(), new String[] { "config.xml" }, EMPTY_CLASS_ARRAY, EMPTY_STRING_ARRAY, contextLoader).     contextLoader.loadContext(mergedConfig). }
false;public;0;10;;@Test public void detectDefaultConfigurationClassesForAnnotatedInnerClass() {     Class<?>[] configClasses = contextLoader.detectDefaultConfigurationClasses(ContextConfigurationInnerClassTestCase.class).     assertNotNull(configClasses).     assertEquals("annotated static ContextConfiguration should be considered.", 1, configClasses.length).     configClasses = contextLoader.detectDefaultConfigurationClasses(AnnotatedFooConfigInnerClassTestCase.class).     assertNotNull(configClasses).     assertEquals("annotated static FooConfig should be considered.", 1, configClasses.length). }
false;public;0;6;;@Test public void detectDefaultConfigurationClassesForMultipleAnnotatedInnerClasses() {     Class<?>[] configClasses = contextLoader.detectDefaultConfigurationClasses(MultipleStaticConfigurationClassesTestCase.class).     assertNotNull(configClasses).     assertEquals("multiple annotated static classes should be considered.", 2, configClasses.length). }
false;public;0;6;;@Test public void detectDefaultConfigurationClassesForNonAnnotatedInnerClass() {     Class<?>[] configClasses = contextLoader.detectDefaultConfigurationClasses(PlainVanillaFooConfigInnerClassTestCase.class).     assertNotNull(configClasses).     assertEquals("non-annotated static FooConfig should NOT be considered.", 0, configClasses.length). }
false;public;0;6;;@Test public void detectDefaultConfigurationClassesForFinalAnnotatedInnerClass() {     Class<?>[] configClasses = contextLoader.detectDefaultConfigurationClasses(FinalConfigInnerClassTestCase.class).     assertNotNull(configClasses).     assertEquals("final annotated static Config should NOT be considered.", 0, configClasses.length). }
false;public;0;6;;@Test public void detectDefaultConfigurationClassesForPrivateAnnotatedInnerClass() {     Class<?>[] configClasses = contextLoader.detectDefaultConfigurationClasses(PrivateConfigInnerClassTestCase.class).     assertNotNull(configClasses).     assertEquals("private annotated inner classes should NOT be considered.", 0, configClasses.length). }
false;public;0;6;;@Test public void detectDefaultConfigurationClassesForNonStaticAnnotatedInnerClass() {     Class<?>[] configClasses = contextLoader.detectDefaultConfigurationClasses(NonStaticConfigInnerClassesTestCase.class).     assertNotNull(configClasses).     assertEquals("non-static annotated inner classes should NOT be considered.", 0, configClasses.length). }
