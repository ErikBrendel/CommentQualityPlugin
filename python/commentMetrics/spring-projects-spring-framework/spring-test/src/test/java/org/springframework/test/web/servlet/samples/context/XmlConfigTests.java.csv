commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Before public void setup() {     this.mockMvc = MockMvcBuilders.webAppContextSetup(this.wac).build().     given(this.personDao.getPerson(5L)).willReturn(new Person("Joe")). }
false;public;0;7;;@Test public void person() throws Exception {     this.mockMvc.perform(get("/person/5").accept(MediaType.APPLICATION_JSON)).andDo(print()).andExpect(status().isOk()).andExpect(content().string("{\"name\":\"Joe\",\"someDouble\":0.0,\"someBoolean\":false}")). }
false;public;0;6;;@Test public void tilesDefinitions() throws Exception {     //      this.mockMvc.perform(get("/")).andExpect(//      status().isOk()).andExpect(forwardedUrl("/WEB-INF/layouts/standardLayout.jsp")). }
