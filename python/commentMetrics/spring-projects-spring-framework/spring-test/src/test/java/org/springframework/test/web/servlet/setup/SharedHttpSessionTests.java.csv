commented;modifiers;parameterAmount;loc;comment;code
false;public;0;23;;@Test public void httpSession() throws Exception {     MockMvc mockMvc = MockMvcBuilders.standaloneSetup(new TestController()).apply(sharedHttpSession()).build().     String url = "/session".     MvcResult result = mockMvc.perform(get(url)).andExpect(status().isOk()).andReturn().     HttpSession session = result.getRequest().getSession(false).     assertNotNull(session).     assertEquals(1, session.getAttribute("counter")).     result = mockMvc.perform(get(url)).andExpect(status().isOk()).andReturn().     session = result.getRequest().getSession(false).     assertNotNull(session).     assertEquals(2, session.getAttribute("counter")).     result = mockMvc.perform(get(url)).andExpect(status().isOk()).andReturn().     session = result.getRequest().getSession(false).     assertNotNull(session).     assertEquals(3, session.getAttribute("counter")). }
false;public;0;23;;@Test public void noHttpSession() throws Exception {     MockMvc mockMvc = MockMvcBuilders.standaloneSetup(new TestController()).apply(sharedHttpSession()).build().     String url = "/no-session".     MvcResult result = mockMvc.perform(get(url)).andExpect(status().isOk()).andReturn().     HttpSession session = result.getRequest().getSession(false).     assertNull(session).     result = mockMvc.perform(get(url)).andExpect(status().isOk()).andReturn().     session = result.getRequest().getSession(false).     assertNull(session).     url = "/session".     result = mockMvc.perform(get(url)).andExpect(status().isOk()).andReturn().     session = result.getRequest().getSession(false).     assertNotNull(session).     assertEquals(1, session.getAttribute("counter")). }
false;public;1;6;;@GetMapping("/session") public String handle(HttpSession session) {     Integer counter = (Integer) session.getAttribute("counter").     session.setAttribute("counter", (counter != null ? counter + 1 : 1)).     return "view". }
false;public;0;4;;@GetMapping("/no-session") public String handle() {     return "view". }
