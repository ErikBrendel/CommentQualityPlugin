commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Before public void setUp() {     given(wac.getServletContext()).willReturn(mockServletContext).     given(testContext.getApplicationContext()).willReturn(wac).     MockHttpServletRequest request = new MockHttpServletRequest(mockServletContext).     MockHttpServletResponse response = new MockHttpServletResponse().     ServletWebRequest servletWebRequest = new ServletWebRequest(request, response).     request.setAttribute(SET_UP_OUTSIDE_OF_STEL, "true").     RequestContextHolder.setRequestAttributes(servletWebRequest).     assertSetUpOutsideOfStelAttributeExists(). }
false;public;0;17;;@Test public void standardApplicationContext() throws Exception {     BDDMockito.<Class<?>>given(testContext.getTestClass()).willReturn(getClass()).     given(testContext.getApplicationContext()).willReturn(mock(ApplicationContext.class)).     listener.beforeTestClass(testContext).     assertSetUpOutsideOfStelAttributeExists().     listener.prepareTestInstance(testContext).     assertSetUpOutsideOfStelAttributeExists().     listener.beforeTestMethod(testContext).     assertSetUpOutsideOfStelAttributeExists().     listener.afterTestMethod(testContext).     assertSetUpOutsideOfStelAttributeExists(). }
false;public;0;22;;@Test public void legacyWebTestCaseWithoutExistingRequestAttributes() throws Exception {     BDDMockito.<Class<?>>given(testContext.getTestClass()).willReturn(LegacyWebTestCase.class).     RequestContextHolder.resetRequestAttributes().     assertRequestAttributesDoNotExist().     listener.beforeTestClass(testContext).     listener.prepareTestInstance(testContext).     assertRequestAttributesDoNotExist().     verify(testContext, times(0)).setAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE, Boolean.TRUE).     given(testContext.getAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)).willReturn(null).     listener.beforeTestMethod(testContext).     assertRequestAttributesDoNotExist().     verify(testContext, times(0)).setAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE, Boolean.TRUE).     listener.afterTestMethod(testContext).     verify(testContext, times(1)).removeAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE).     assertRequestAttributesDoNotExist(). }
false;public;0;21;;@Test public void legacyWebTestCaseWithPresetRequestAttributes() throws Exception {     BDDMockito.<Class<?>>given(testContext.getTestClass()).willReturn(LegacyWebTestCase.class).     listener.beforeTestClass(testContext).     assertSetUpOutsideOfStelAttributeExists().     listener.prepareTestInstance(testContext).     assertSetUpOutsideOfStelAttributeExists().     verify(testContext, times(0)).setAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE, Boolean.TRUE).     given(testContext.getAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)).willReturn(null).     listener.beforeTestMethod(testContext).     assertSetUpOutsideOfStelAttributeExists().     verify(testContext, times(0)).setAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE, Boolean.TRUE).     given(testContext.getAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)).willReturn(null).     listener.afterTestMethod(testContext).     verify(testContext, times(1)).removeAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE).     assertSetUpOutsideOfStelAttributeExists(). }
false;public;0;10;;@Test public void atWebAppConfigTestCaseWithoutExistingRequestAttributes() throws Exception {     BDDMockito.<Class<?>>given(testContext.getTestClass()).willReturn(AtWebAppConfigWebTestCase.class).     RequestContextHolder.resetRequestAttributes().     listener.beforeTestClass(testContext).     assertRequestAttributesDoNotExist().     assertWebAppConfigTestCase(). }
false;public;0;9;;@Test public void atWebAppConfigTestCaseWithPresetRequestAttributes() throws Exception {     BDDMockito.<Class<?>>given(testContext.getTestClass()).willReturn(AtWebAppConfigWebTestCase.class).     listener.beforeTestClass(testContext).     assertRequestAttributesExist().     assertWebAppConfigTestCase(). }
true;public;0;11;/**  * @since 4.3  */ ;/**  * @since 4.3  */ @Test public void activateListenerWithoutExistingRequestAttributes() throws Exception {     BDDMockito.<Class<?>>given(testContext.getTestClass()).willReturn(NoAtWebAppConfigWebTestCase.class).     given(testContext.getAttribute(ServletTestExecutionListener.ACTIVATE_LISTENER)).willReturn(true).     RequestContextHolder.resetRequestAttributes().     listener.beforeTestClass(testContext).     assertRequestAttributesDoNotExist().     assertWebAppConfigTestCase(). }
false;private;0;5;;private RequestAttributes assertRequestAttributesExist() {     RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes().     assertNotNull("request attributes should exist", requestAttributes).     return requestAttributes. }
false;private;0;3;;private void assertRequestAttributesDoNotExist() {     assertNull("request attributes should not exist", RequestContextHolder.getRequestAttributes()). }
false;private;0;6;;private void assertSetUpOutsideOfStelAttributeExists() {     RequestAttributes requestAttributes = assertRequestAttributesExist().     Object setUpOutsideOfStel = requestAttributes.getAttribute(SET_UP_OUTSIDE_OF_STEL, RequestAttributes.SCOPE_REQUEST).     assertNotNull(SET_UP_OUTSIDE_OF_STEL + " should exist as a request attribute", setUpOutsideOfStel). }
false;private;0;6;;private void assertSetUpOutsideOfStelAttributeDoesNotExist() {     RequestAttributes requestAttributes = assertRequestAttributesExist().     Object setUpOutsideOfStel = requestAttributes.getAttribute(SET_UP_OUTSIDE_OF_STEL, RequestAttributes.SCOPE_REQUEST).     assertNull(SET_UP_OUTSIDE_OF_STEL + " should NOT exist as a request attribute", setUpOutsideOfStel). }
false;private;0;20;;private void assertWebAppConfigTestCase() throws Exception {     listener.prepareTestInstance(testContext).     assertRequestAttributesExist().     assertSetUpOutsideOfStelAttributeDoesNotExist().     verify(testContext, times(1)).setAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE, Boolean.TRUE).     verify(testContext, times(1)).setAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE, Boolean.TRUE).     given(testContext.getAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)).willReturn(Boolean.TRUE).     given(testContext.getAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)).willReturn(Boolean.TRUE).     listener.beforeTestMethod(testContext).     assertRequestAttributesExist().     assertSetUpOutsideOfStelAttributeDoesNotExist().     verify(testContext, times(1)).setAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE, Boolean.TRUE).     verify(testContext, times(1)).setAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE, Boolean.TRUE).     listener.afterTestMethod(testContext).     verify(testContext).removeAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE).     verify(testContext).removeAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE).     assertRequestAttributesDoNotExist(). }
