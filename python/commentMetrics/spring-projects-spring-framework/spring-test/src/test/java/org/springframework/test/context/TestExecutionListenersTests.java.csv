commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void defaultListeners() {     List<Class<?>> expected = asList(ServletTestExecutionListener.class, DirtiesContextBeforeModesTestExecutionListener.class, DependencyInjectionTestExecutionListener.class, DirtiesContextTestExecutionListener.class, TransactionalTestExecutionListener.class, SqlScriptsTestExecutionListener.class).     assertRegisteredListeners(DefaultListenersTestCase.class, expected). }
true;public;0;8;/**  * @since 4.1  */ ;/**  * @since 4.1  */ @Test public void defaultListenersMergedWithCustomListenerPrepended() {     List<Class<?>> expected = asList(QuuxTestExecutionListener.class, ServletTestExecutionListener.class, DirtiesContextBeforeModesTestExecutionListener.class, DependencyInjectionTestExecutionListener.class, DirtiesContextTestExecutionListener.class, TransactionalTestExecutionListener.class, SqlScriptsTestExecutionListener.class).     assertRegisteredListeners(MergedDefaultListenersWithCustomListenerPrependedTestCase.class, expected). }
true;public;0;8;/**  * @since 4.1  */ ;/**  * @since 4.1  */ @Test public void defaultListenersMergedWithCustomListenerAppended() {     List<Class<?>> expected = asList(ServletTestExecutionListener.class, DirtiesContextBeforeModesTestExecutionListener.class, DependencyInjectionTestExecutionListener.class, DirtiesContextTestExecutionListener.class, TransactionalTestExecutionListener.class, SqlScriptsTestExecutionListener.class, BazTestExecutionListener.class).     assertRegisteredListeners(MergedDefaultListenersWithCustomListenerAppendedTestCase.class, expected). }
true;public;0;8;/**  * @since 4.1  */ ;/**  * @since 4.1  */ @Test public void defaultListenersMergedWithCustomListenerInserted() {     List<Class<?>> expected = asList(ServletTestExecutionListener.class, DirtiesContextBeforeModesTestExecutionListener.class, DependencyInjectionTestExecutionListener.class, BarTestExecutionListener.class, DirtiesContextTestExecutionListener.class, TransactionalTestExecutionListener.class, SqlScriptsTestExecutionListener.class).     assertRegisteredListeners(MergedDefaultListenersWithCustomListenerInsertedTestCase.class, expected). }
false;public;0;4;;@Test public void nonInheritedDefaultListeners() {     assertRegisteredListeners(NonInheritedDefaultListenersTestCase.class, asList(QuuxTestExecutionListener.class)). }
false;public;0;7;;@Test public void inheritedDefaultListeners() {     assertRegisteredListeners(InheritedDefaultListenersTestCase.class, asList(QuuxTestExecutionListener.class)).     assertRegisteredListeners(SubInheritedDefaultListenersTestCase.class, asList(QuuxTestExecutionListener.class)).     assertRegisteredListeners(SubSubInheritedDefaultListenersTestCase.class, asList(QuuxTestExecutionListener.class, EnigmaTestExecutionListener.class)). }
false;public;0;4;;@Test public void customListeners() {     assertNumRegisteredListeners(ExplicitListenersTestCase.class, 3). }
false;public;0;5;;@Test public void customListenersDeclaredOnInterface() {     assertRegisteredListeners(ExplicitListenersOnTestInterfaceTestCase.class, asList(FooTestExecutionListener.class, BarTestExecutionListener.class)). }
false;public;0;4;;@Test public void nonInheritedListeners() {     assertNumRegisteredListeners(NonInheritedListenersTestCase.class, 1). }
false;public;0;4;;@Test public void inheritedListeners() {     assertNumRegisteredListeners(InheritedListenersTestCase.class, 4). }
false;public;0;4;;@Test public void customListenersRegisteredViaMetaAnnotation() {     assertNumRegisteredListeners(MetaTestCase.class, 3). }
false;public;0;4;;@Test public void nonInheritedListenersRegisteredViaMetaAnnotation() {     assertNumRegisteredListeners(MetaNonInheritedListenersTestCase.class, 1). }
false;public;0;4;;@Test public void inheritedListenersRegisteredViaMetaAnnotation() {     assertNumRegisteredListeners(MetaInheritedListenersTestCase.class, 4). }
false;public;0;4;;@Test public void customListenersRegisteredViaMetaAnnotationWithOverrides() {     assertNumRegisteredListeners(MetaWithOverridesTestCase.class, 3). }
false;public;0;4;;@Test public void customsListenersRegisteredViaMetaAnnotationWithInheritedListenersWithOverrides() {     assertNumRegisteredListeners(MetaInheritedListenersWithOverridesTestCase.class, 5). }
false;public;0;4;;@Test public void customListenersRegisteredViaMetaAnnotationWithNonInheritedListenersWithOverrides() {     assertNumRegisteredListeners(MetaNonInheritedListenersWithOverridesTestCase.class, 8). }
false;public;0;4;;@Test(expected = AnnotationConfigurationException.class) public void listenersAndValueAttributesDeclared() {     new TestContextManager(DuplicateListenersConfigTestCase.class). }
false;private;1;3;;private List<Class<?>> classes(TestContextManager testContextManager) {     return testContextManager.getTestExecutionListeners().stream().map(Object::getClass).collect(toList()). }
false;private;1;3;;private List<String> names(List<Class<?>> classes) {     return classes.stream().map(Class::getSimpleName).collect(toList()). }
false;private;2;5;;private void assertRegisteredListeners(Class<?> testClass, List<Class<?>> expected) {     TestContextManager testContextManager = new TestContextManager(testClass).     assertEquals("TELs registered for " + testClass.getSimpleName(), names(expected), names(classes(testContextManager))). }
false;private;2;5;;private void assertNumRegisteredListeners(Class<?> testClass, int expected) {     TestContextManager testContextManager = new TestContextManager(testClass).     assertEquals("Num registered TELs for " + testClass, expected, testContextManager.getTestExecutionListeners().size()). }
false;public;0;6;;@Override public int getOrder() {     // DirtiesContextTestExecutionListener (3000)     return 2500. }
false;public;0;4;;@Override public int getOrder() {     return Ordered.LOWEST_PRECEDENCE. }
false;public;0;4;;@Override public int getOrder() {     return Ordered.HIGHEST_PRECEDENCE. }
