commented;modifiers;parameterAmount;loc;comment;code
false;public;0;16;;@Before public void setUp() {     ServletContext servletContext = new MockServletContext().     MockHttpServletRequest mockRequest = new MockHttpServletRequest(servletContext).     mockRequest.setAttribute(FROM_CUSTOM_MOCK, FROM_CUSTOM_MOCK).     RequestContextHolder.setRequestAttributes(new ServletWebRequest(mockRequest, new MockHttpServletResponse())).     this.wac.setServletContext(servletContext).     new AnnotatedBeanDefinitionReader(this.wac).register(WebConfig.class).     this.wac.refresh().     this.mockMvc = webAppContextSetup(this.wac).defaultRequest(get("/").requestAttr(FROM_MVC_TEST_DEFAULT, FROM_MVC_TEST_DEFAULT)).alwaysExpect(status().isOk()).build(). }
false;public;0;4;;@Test public void singletonController() throws Exception {     this.mockMvc.perform(get("/singletonController").requestAttr(FROM_MVC_TEST_MOCK, FROM_MVC_TEST_MOCK)). }
false;public;0;13;;@After public void verifyCustomRequestAttributesAreRestored() {     RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes().     assertThat(requestAttributes, instanceOf(ServletRequestAttributes.class)).     HttpServletRequest request = ((ServletRequestAttributes) requestAttributes).getRequest().     assertThat(request.getAttribute(FROM_CUSTOM_MOCK), is(FROM_CUSTOM_MOCK)).     assertThat(request.getAttribute(FROM_MVC_TEST_DEFAULT), is(nullValue())).     assertThat(request.getAttribute(FROM_MVC_TEST_MOCK), is(nullValue())).     RequestContextHolder.resetRequestAttributes().     this.wac.close(). }
false;public;0;4;;@Bean public SingletonController singletonController() {     return new SingletonController(). }
false;public;0;4;;@RequestMapping("/singletonController") public void handle() {     assertRequestAttributes(). }
false;private,static;0;5;;private static void assertRequestAttributes() {     RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes().     assertThat(requestAttributes, instanceOf(ServletRequestAttributes.class)).     assertRequestAttributes(((ServletRequestAttributes) requestAttributes).getRequest()). }
false;private,static;1;5;;private static void assertRequestAttributes(ServletRequest request) {     assertThat(request.getAttribute(FROM_CUSTOM_MOCK), is(nullValue())).     assertThat(request.getAttribute(FROM_MVC_TEST_DEFAULT), is(FROM_MVC_TEST_DEFAULT)).     assertThat(request.getAttribute(FROM_MVC_TEST_MOCK), is(FROM_MVC_TEST_MOCK)). }
