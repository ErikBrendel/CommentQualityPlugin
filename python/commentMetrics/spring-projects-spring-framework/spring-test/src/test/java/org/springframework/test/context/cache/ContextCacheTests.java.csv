commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Before public void initialCacheState() {     assertContextCacheStatistics(contextCache, "initial state", 0, 0, 0).     assertParentContextCount(0). }
false;private;1;3;;private void assertParentContextCount(int expected) {     assertEquals("parent context count", expected, contextCache.getParentContextCount()). }
false;private;1;3;;private MergedContextConfiguration getMergedContextConfiguration(TestContext testContext) {     return (MergedContextConfiguration) ReflectionTestUtils.getField(testContext, "mergedContextConfiguration"). }
false;private;1;4;;private ApplicationContext loadContext(Class<?> testClass) {     TestContext testContext = TestContextTestUtils.buildTestContext(testClass, contextCache).     return testContext.getApplicationContext(). }
false;private;4;5;;private void loadCtxAndAssertStats(Class<?> testClass, int expectedSize, int expectedHitCount, int expectedMissCount) {     assertNotNull(loadContext(testClass)).     assertContextCacheStatistics(contextCache, testClass.getName(), expectedSize, expectedHitCount, expectedMissCount). }
false;public;0;9;;@Test public void verifyCacheKeyIsBasedOnContextLoader() {     loadCtxAndAssertStats(AnnotationConfigContextLoaderTestCase.class, 1, 0, 1).     loadCtxAndAssertStats(AnnotationConfigContextLoaderTestCase.class, 1, 1, 1).     loadCtxAndAssertStats(CustomAnnotationConfigContextLoaderTestCase.class, 2, 1, 2).     loadCtxAndAssertStats(CustomAnnotationConfigContextLoaderTestCase.class, 2, 2, 2).     loadCtxAndAssertStats(AnnotationConfigContextLoaderTestCase.class, 2, 3, 2).     loadCtxAndAssertStats(CustomAnnotationConfigContextLoaderTestCase.class, 2, 4, 2). }
false;public;0;12;;@Test public void verifyCacheKeyIsBasedOnActiveProfiles() {     int size = 0, hit = 0, miss = 0.     loadCtxAndAssertStats(FooBarProfilesTestCase.class, ++size, hit, ++miss).     loadCtxAndAssertStats(FooBarProfilesTestCase.class, size, ++hit, miss).     // Profiles {foo, bar} should not hash to the same as {bar,foo}     loadCtxAndAssertStats(BarFooProfilesTestCase.class, ++size, hit, ++miss).     loadCtxAndAssertStats(FooBarProfilesTestCase.class, size, ++hit, miss).     loadCtxAndAssertStats(FooBarProfilesTestCase.class, size, ++hit, miss).     loadCtxAndAssertStats(BarFooProfilesTestCase.class, size, ++hit, miss).     loadCtxAndAssertStats(FooBarActiveProfilesResolverTestCase.class, size, ++hit, miss). }
false;public;0;26;;@Test public void verifyCacheBehaviorForContextHierarchies() {     int size = 0.     int hits = 0.     int misses = 0.     // Level 1     loadCtxAndAssertStats(ClassHierarchyContextHierarchyLevel1TestCase.class, ++size, hits, ++misses).     loadCtxAndAssertStats(ClassHierarchyContextHierarchyLevel1TestCase.class, size, ++hits, misses).     // Level 2     loadCtxAndAssertStats(ClassHierarchyContextHierarchyLevel2TestCase.class, ++size, /* L2 */     ++hits, /* L1 */     ++misses).     loadCtxAndAssertStats(ClassHierarchyContextHierarchyLevel2TestCase.class, size, ++hits, /* L2 */     misses).     loadCtxAndAssertStats(ClassHierarchyContextHierarchyLevel2TestCase.class, size, ++hits, /* L2 */     misses).     // Level 3-A     loadCtxAndAssertStats(ClassHierarchyContextHierarchyLevel3aTestCase.class, ++size, /* L3A */     ++hits, /* L2 */     ++misses).     loadCtxAndAssertStats(ClassHierarchyContextHierarchyLevel3aTestCase.class, size, ++hits, /* L3A */     misses).     // Level 3-B     loadCtxAndAssertStats(ClassHierarchyContextHierarchyLevel3bTestCase.class, ++size, /* L3B */     ++hits, /* L2 */     ++misses).     loadCtxAndAssertStats(ClassHierarchyContextHierarchyLevel3bTestCase.class, size, ++hits, /* L3B */     misses). }
false;public;0;24;;@Test public void removeContextHierarchyCacheLevel1() {     // Load Level 3-A     TestContext testContext3a = TestContextTestUtils.buildTestContext(ClassHierarchyContextHierarchyLevel3aTestCase.class, contextCache).     testContext3a.getApplicationContext().     assertContextCacheStatistics(contextCache, "level 3, A", 3, 0, 3).     assertParentContextCount(2).     // Load Level 3-B     TestContext testContext3b = TestContextTestUtils.buildTestContext(ClassHierarchyContextHierarchyLevel3bTestCase.class, contextCache).     testContext3b.getApplicationContext().     assertContextCacheStatistics(contextCache, "level 3, A and B", 4, 1, 4).     assertParentContextCount(2).     // Remove Level 1     // Should also remove Levels 2, 3-A, and 3-B, leaving nothing.     contextCache.remove(getMergedContextConfiguration(testContext3a).getParent().getParent(), HierarchyMode.CURRENT_LEVEL).     assertContextCacheStatistics(contextCache, "removed level 1", 0, 1, 4).     assertParentContextCount(0). }
false;public;0;24;;@Test public void removeContextHierarchyCacheLevel1WithExhaustiveMode() {     // Load Level 3-A     TestContext testContext3a = TestContextTestUtils.buildTestContext(ClassHierarchyContextHierarchyLevel3aTestCase.class, contextCache).     testContext3a.getApplicationContext().     assertContextCacheStatistics(contextCache, "level 3, A", 3, 0, 3).     assertParentContextCount(2).     // Load Level 3-B     TestContext testContext3b = TestContextTestUtils.buildTestContext(ClassHierarchyContextHierarchyLevel3bTestCase.class, contextCache).     testContext3b.getApplicationContext().     assertContextCacheStatistics(contextCache, "level 3, A and B", 4, 1, 4).     assertParentContextCount(2).     // Remove Level 1     // Should also remove Levels 2, 3-A, and 3-B, leaving nothing.     contextCache.remove(getMergedContextConfiguration(testContext3a).getParent().getParent(), HierarchyMode.EXHAUSTIVE).     assertContextCacheStatistics(contextCache, "removed level 1", 0, 1, 4).     assertParentContextCount(0). }
false;public;0;25;;@Test public void removeContextHierarchyCacheLevel2() {     // Load Level 3-A     TestContext testContext3a = TestContextTestUtils.buildTestContext(ClassHierarchyContextHierarchyLevel3aTestCase.class, contextCache).     testContext3a.getApplicationContext().     assertContextCacheStatistics(contextCache, "level 3, A", 3, 0, 3).     assertParentContextCount(2).     // Load Level 3-B     TestContext testContext3b = TestContextTestUtils.buildTestContext(ClassHierarchyContextHierarchyLevel3bTestCase.class, contextCache).     testContext3b.getApplicationContext().     assertContextCacheStatistics(contextCache, "level 3, A and B", 4, 1, 4).     assertParentContextCount(2).     // Remove Level 2     // Should also remove Levels 3-A and 3-B, leaving only Level 1 as a context in the     // cache but also removing the Level 1 hierarchy since all children have been     // removed.     contextCache.remove(getMergedContextConfiguration(testContext3a).getParent(), HierarchyMode.CURRENT_LEVEL).     assertContextCacheStatistics(contextCache, "removed level 2", 1, 1, 4).     assertParentContextCount(0). }
false;public;0;23;;@Test public void removeContextHierarchyCacheLevel2WithExhaustiveMode() {     // Load Level 3-A     TestContext testContext3a = TestContextTestUtils.buildTestContext(ClassHierarchyContextHierarchyLevel3aTestCase.class, contextCache).     testContext3a.getApplicationContext().     assertContextCacheStatistics(contextCache, "level 3, A", 3, 0, 3).     assertParentContextCount(2).     // Load Level 3-B     TestContext testContext3b = TestContextTestUtils.buildTestContext(ClassHierarchyContextHierarchyLevel3bTestCase.class, contextCache).     testContext3b.getApplicationContext().     assertContextCacheStatistics(contextCache, "level 3, A and B", 4, 1, 4).     assertParentContextCount(2).     // Remove Level 2     // Should wipe the cache     contextCache.remove(getMergedContextConfiguration(testContext3a).getParent(), HierarchyMode.EXHAUSTIVE).     assertContextCacheStatistics(contextCache, "removed level 2", 0, 1, 4).     assertParentContextCount(0). }
false;public;0;28;;@Test public void removeContextHierarchyCacheLevel3Then2() {     // Load Level 3-A     TestContext testContext3a = TestContextTestUtils.buildTestContext(ClassHierarchyContextHierarchyLevel3aTestCase.class, contextCache).     testContext3a.getApplicationContext().     assertContextCacheStatistics(contextCache, "level 3, A", 3, 0, 3).     assertParentContextCount(2).     // Load Level 3-B     TestContext testContext3b = TestContextTestUtils.buildTestContext(ClassHierarchyContextHierarchyLevel3bTestCase.class, contextCache).     testContext3b.getApplicationContext().     assertContextCacheStatistics(contextCache, "level 3, A and B", 4, 1, 4).     assertParentContextCount(2).     // Remove Level 3-A     contextCache.remove(getMergedContextConfiguration(testContext3a), HierarchyMode.CURRENT_LEVEL).     assertContextCacheStatistics(contextCache, "removed level 3-A", 3, 1, 4).     assertParentContextCount(2).     // Remove Level 2     // Should also remove Level 3-B, leaving only Level 1.     contextCache.remove(getMergedContextConfiguration(testContext3b).getParent(), HierarchyMode.CURRENT_LEVEL).     assertContextCacheStatistics(contextCache, "removed level 2", 1, 1, 4).     assertParentContextCount(0). }
false;public;0;30;;@Test public void removeContextHierarchyCacheLevel3Then2WithExhaustiveMode() {     // Load Level 3-A     TestContext testContext3a = TestContextTestUtils.buildTestContext(ClassHierarchyContextHierarchyLevel3aTestCase.class, contextCache).     testContext3a.getApplicationContext().     assertContextCacheStatistics(contextCache, "level 3, A", 3, 0, 3).     assertParentContextCount(2).     // Load Level 3-B     TestContext testContext3b = TestContextTestUtils.buildTestContext(ClassHierarchyContextHierarchyLevel3bTestCase.class, contextCache).     testContext3b.getApplicationContext().     assertContextCacheStatistics(contextCache, "level 3, A and B", 4, 1, 4).     assertParentContextCount(2).     // Remove Level 3-A     // Should wipe the cache.     contextCache.remove(getMergedContextConfiguration(testContext3a), HierarchyMode.EXHAUSTIVE).     assertContextCacheStatistics(contextCache, "removed level 3-A", 0, 1, 4).     assertParentContextCount(0).     // Remove Level 2     // Should not actually do anything since the cache was cleared in the     // previous step. So the stats should remain the same.     contextCache.remove(getMergedContextConfiguration(testContext3b).getParent(), HierarchyMode.EXHAUSTIVE).     assertContextCacheStatistics(contextCache, "removed level 2", 0, 1, 4).     assertParentContextCount(0). }
false;public;1;4;;@Override public String[] resolve(Class<?> testClass) {     return new String[] { "foo", "bar" }. }
