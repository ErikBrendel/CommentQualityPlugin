commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void contextPathNull() throws IOException {     this.webClient.setWebConnection(new MockMvcWebConnection(this.mockMvc, this.webClient)).     Page page = this.webClient.getPage("http://localhost/context/a").     assertThat(page.getWebResponse().getStatusCode(), equalTo(200)). }
false;public;0;6;;@Test public void contextPathExplicit() throws IOException {     this.webClient.setWebConnection(new MockMvcWebConnection(this.mockMvc, this.webClient, "/context")).     Page page = this.webClient.getPage("http://localhost/context/a").     assertThat(page.getWebResponse().getStatusCode(), equalTo(200)). }
false;public;0;6;;@Test public void contextPathEmpty() throws IOException {     this.webClient.setWebConnection(new MockMvcWebConnection(this.mockMvc, this.webClient, "")).     Page page = this.webClient.getPage("http://localhost/context/a").     assertThat(page.getWebResponse().getStatusCode(), equalTo(200)). }
false;public;0;6;;@Test public void forward() throws IOException {     this.webClient.setWebConnection(new MockMvcWebConnection(this.mockMvc, this.webClient, "")).     Page page = this.webClient.getPage("http://localhost/forward").     assertThat(page.getWebResponse().getContentAsString(), equalTo("hello")). }
false;public;0;5;;@Test(expected = IllegalArgumentException.class) @SuppressWarnings("resource") public void contextPathDoesNotStartWithSlash() throws IOException {     new MockMvcWebConnection(this.mockMvc, this.webClient, "context"). }
false;public;0;5;;@Test(expected = IllegalArgumentException.class) @SuppressWarnings("resource") public void contextPathEndsWithSlash() throws IOException {     new MockMvcWebConnection(this.mockMvc, this.webClient, "/context/"). }
