# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractEjbTxDaoTests -> @Test 	public void test3IncrementCount2();1390392157;The default implementation of this method assumes that the transaction_for {@link #test2IncrementCount1()} was committed. Therefore, it is_expected that the previous increment has been persisted in the database.;@Test_	public void test3IncrementCount2() {_		int count = dao.getCount(TEST_NAME)__		assertEquals("Expected count=1 after test2IncrementCount1().", 1, count)___		count = dao.incrementCount(TEST_NAME)__		assertEquals("Expected count=2 now.", 2, count)__	};the,default,implementation,of,this,method,assumes,that,the,transaction,for,link,test2increment,count1,was,committed,therefore,it,is,expected,that,the,previous,increment,has,been,persisted,in,the,database;test,public,void,test3increment,count2,int,count,dao,get,count,assert,equals,expected,count,1,after,test2increment,count1,1,count,count,dao,increment,count,assert,equals,expected,count,2,now,2,count
AbstractEjbTxDaoTests -> @Test 	public void test3IncrementCount2();1413848647;The default implementation of this method assumes that the transaction_for {@link #test2IncrementCount1()} was committed. Therefore, it is_expected that the previous increment has been persisted in the database.;@Test_	public void test3IncrementCount2() {_		int count = dao.getCount(TEST_NAME)__		assertEquals("Expected count=1 after test2IncrementCount1().", 1, count)___		count = dao.incrementCount(TEST_NAME)__		assertEquals("Expected count=2 now.", 2, count)__	};the,default,implementation,of,this,method,assumes,that,the,transaction,for,link,test2increment,count1,was,committed,therefore,it,is,expected,that,the,previous,increment,has,been,persisted,in,the,database;test,public,void,test3increment,count2,int,count,dao,get,count,assert,equals,expected,count,1,after,test2increment,count1,1,count,count,dao,increment,count,assert,equals,expected,count,2,now,2,count
AbstractEjbTxDaoTests -> @Test 	public void test3IncrementCount2();1530174524;The default implementation of this method assumes that the transaction_for {@link #test2IncrementCount1()} was committed. Therefore, it is_expected that the previous increment has been persisted in the database.;@Test_	public void test3IncrementCount2() {_		int count = dao.getCount(TEST_NAME)__		assertEquals("Expected count=1 after test2IncrementCount1().", 1, count)___		count = dao.incrementCount(TEST_NAME)__		assertEquals("Expected count=2 now.", 2, count)__	};the,default,implementation,of,this,method,assumes,that,the,transaction,for,link,test2increment,count1,was,committed,therefore,it,is,expected,that,the,previous,increment,has,been,persisted,in,the,database;test,public,void,test3increment,count2,int,count,dao,get,count,assert,equals,expected,count,1,after,test2increment,count1,1,count,count,dao,increment,count,assert,equals,expected,count,2,now,2,count
