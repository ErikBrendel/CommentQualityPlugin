commented;modifiers;parameterAmount;loc;comment;code
false;public;0;52;;@Test public void listenerExecutionOrder() throws Exception {     // @formatter:off     assertEquals("Registered TestExecutionListeners", 3, this.testContextManager.getTestExecutionListeners().size()).     this.testContextManager.beforeTestMethod(this, this.testMethod).     assertExecutionOrder("beforeTestMethod", "beforeTestMethod-1", "beforeTestMethod-2", "beforeTestMethod-3").     this.testContextManager.beforeTestExecution(this, this.testMethod).     assertExecutionOrder("beforeTestExecution", "beforeTestMethod-1", "beforeTestMethod-2", "beforeTestMethod-3", "beforeTestExecution-1", "beforeTestExecution-2", "beforeTestExecution-3").     this.testContextManager.afterTestExecution(this, this.testMethod, null).     assertExecutionOrder("afterTestExecution", "beforeTestMethod-1", "beforeTestMethod-2", "beforeTestMethod-3", "beforeTestExecution-1", "beforeTestExecution-2", "beforeTestExecution-3", "afterTestExecution-3", "afterTestExecution-2", "afterTestExecution-1").     this.testContextManager.afterTestMethod(this, this.testMethod, null).     assertExecutionOrder("afterTestMethod", "beforeTestMethod-1", "beforeTestMethod-2", "beforeTestMethod-3", "beforeTestExecution-1", "beforeTestExecution-2", "beforeTestExecution-3", "afterTestExecution-3", "afterTestExecution-2", "afterTestExecution-1", "afterTestMethod-3", "afterTestMethod-2", "afterTestMethod-1"). // @formatter:on }
false;private,static;2;4;;private static void assertExecutionOrder(String usageContext, String... expectedBeforeTestMethodCalls) {     assertEquals("execution order (" + usageContext + ") ==>", Arrays.asList(expectedBeforeTestMethodCalls), executionOrder). }
false;public;0;3;;@SuppressWarnings("unused") public void exampleTestMethod() { }
false;public;1;4;;@Override public void beforeTestMethod(TestContext testContext) {     executionOrder.add("beforeTestMethod-" + this.name). }
false;public;1;4;;@Override public void beforeTestExecution(TestContext testContext) {     executionOrder.add("beforeTestExecution-" + this.name). }
false;public;1;4;;@Override public void afterTestExecution(TestContext testContext) {     executionOrder.add("afterTestExecution-" + this.name). }
false;public;1;4;;@Override public void afterTestMethod(TestContext testContext) {     executionOrder.add("afterTestMethod-" + this.name). }
