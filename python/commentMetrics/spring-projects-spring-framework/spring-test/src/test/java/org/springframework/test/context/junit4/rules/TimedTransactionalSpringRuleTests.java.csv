commented;modifiers;parameterAmount;loc;comment;code
true;public;0;6;/**  * Overridden since Spring's Rule-based JUnit support cannot properly  * integrate with timed execution that is controlled by a third-party runner.  */ ;/**  * Overridden since Spring's Rule-based JUnit support cannot properly  * integrate with timed execution that is controlled by a third-party runner.  */ @Test(timeout = 10000) @Repeat(5) @Override public void transactionalWithJUnitTimeout() {     assertInTransaction(false). }
true;public;0;4;/**  * {@code timeout} explicitly not declared due to presence of Timeout rule.  */ ;/**  * {@code timeout} explicitly not declared due to presence of Timeout rule.  */ @Test public void transactionalWithJUnitRuleBasedTimeout() {     assertInTransaction(true). }
