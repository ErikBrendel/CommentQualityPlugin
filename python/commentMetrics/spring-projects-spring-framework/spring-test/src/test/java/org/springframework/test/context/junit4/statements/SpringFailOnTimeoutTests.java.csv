commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void nullNextStatement() throws Throwable {     exception.expect(IllegalArgumentException.class).     new SpringFailOnTimeout(null, 1). }
false;public;0;5;;@Test public void negativeTimeout() throws Throwable {     exception.expect(IllegalArgumentException.class).     new SpringFailOnTimeout(statement, -1). }
false;public;0;7;;@Test public void userExceptionPropagates() throws Throwable {     doThrow(new Boom()).when(statement).evaluate().     exception.expect(Boom.class).     new SpringFailOnTimeout(statement, 1).evaluate(). }
false;public;0;10;;@Test public void timeoutExceptionThrownIfNoUserException() throws Throwable {     doAnswer((Answer<Void>) invocation -> {         TimeUnit.MILLISECONDS.sleep(50).         return null.     }).when(statement).evaluate().     exception.expect(TimeoutException.class).     new SpringFailOnTimeout(statement, 1).evaluate(). }
false;public;0;8;;@Test public void noExceptionThrownIfNoUserExceptionAndTimeoutDoesNotOccur() throws Throwable {     doAnswer((Answer<Void>) invocation -> {         return null.     }).when(statement).evaluate().     new SpringFailOnTimeout(statement, 100).evaluate(). }
