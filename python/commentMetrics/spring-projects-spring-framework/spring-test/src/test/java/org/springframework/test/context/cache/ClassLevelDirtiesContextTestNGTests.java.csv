commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;9;;@BeforeClass public static void verifyInitialCacheState() {     resetContextCache().     // Reset static counters in case tests are run multiple times in a test suite --     // for example, via JUnit's @Suite.     cacheHits.set(0).     cacheMisses.set(0).     assertContextCacheStatistics("BeforeClass", 0, cacheHits.get(), cacheMisses.get()). }
false;public;0;65;;@Test public void verifyDirtiesContextBehavior() throws Exception {     assertBehaviorForCleanTestCase().     runTestClassAndAssertStats(ClassLevelDirtiesContextWithCleanMethodsAndDefaultModeTestCase.class, 1).     assertContextCacheStatistics("after class-level @DirtiesContext with clean test method and default class mode", 0, cacheHits.incrementAndGet(), cacheMisses.get()).     assertBehaviorForCleanTestCase().     runTestClassAndAssertStats(InheritedClassLevelDirtiesContextWithCleanMethodsAndDefaultModeTestCase.class, 1).     assertContextCacheStatistics("after inherited class-level @DirtiesContext with clean test method and default class mode", 0, cacheHits.incrementAndGet(), cacheMisses.get()).     assertBehaviorForCleanTestCase().     runTestClassAndAssertStats(ClassLevelDirtiesContextWithCleanMethodsAndAfterClassModeTestCase.class, 1).     assertContextCacheStatistics("after class-level @DirtiesContext with clean test method and AFTER_CLASS mode", 0, cacheHits.incrementAndGet(), cacheMisses.get()).     assertBehaviorForCleanTestCase().     runTestClassAndAssertStats(InheritedClassLevelDirtiesContextWithCleanMethodsAndAfterClassModeTestCase.class, 1).     assertContextCacheStatistics("after inherited class-level @DirtiesContext with clean test method and AFTER_CLASS mode", 0, cacheHits.incrementAndGet(), cacheMisses.get()).     assertBehaviorForCleanTestCase().     runTestClassAndAssertStats(ClassLevelDirtiesContextWithAfterEachTestMethodModeTestCase.class, 3).     assertContextCacheStatistics("after class-level @DirtiesContext with clean test method and AFTER_EACH_TEST_METHOD mode", 0, cacheHits.incrementAndGet(), cacheMisses.addAndGet(2)).     assertBehaviorForCleanTestCase().     runTestClassAndAssertStats(InheritedClassLevelDirtiesContextWithAfterEachTestMethodModeTestCase.class, 3).     assertContextCacheStatistics("after inherited class-level @DirtiesContext with clean test method and AFTER_EACH_TEST_METHOD mode", 0, cacheHits.incrementAndGet(), cacheMisses.addAndGet(2)).     assertBehaviorForCleanTestCase().     runTestClassAndAssertStats(ClassLevelDirtiesContextWithDirtyMethodsTestCase.class, 1).     assertContextCacheStatistics("after class-level @DirtiesContext with dirty test method", 0, cacheHits.incrementAndGet(), cacheMisses.get()).     runTestClassAndAssertStats(ClassLevelDirtiesContextWithDirtyMethodsTestCase.class, 1).     assertContextCacheStatistics("after class-level @DirtiesContext with dirty test method", 0, cacheHits.get(), cacheMisses.incrementAndGet()).     runTestClassAndAssertStats(ClassLevelDirtiesContextWithDirtyMethodsTestCase.class, 1).     assertContextCacheStatistics("after class-level @DirtiesContext with dirty test method", 0, cacheHits.get(), cacheMisses.incrementAndGet()).     assertBehaviorForCleanTestCase().     runTestClassAndAssertStats(InheritedClassLevelDirtiesContextWithDirtyMethodsTestCase.class, 1).     assertContextCacheStatistics("after inherited class-level @DirtiesContext with dirty test method", 0, cacheHits.incrementAndGet(), cacheMisses.get()).     runTestClassAndAssertStats(InheritedClassLevelDirtiesContextWithDirtyMethodsTestCase.class, 1).     assertContextCacheStatistics("after inherited class-level @DirtiesContext with dirty test method", 0, cacheHits.get(), cacheMisses.incrementAndGet()).     runTestClassAndAssertStats(InheritedClassLevelDirtiesContextWithDirtyMethodsTestCase.class, 1).     assertContextCacheStatistics("after inherited class-level @DirtiesContext with dirty test method", 0, cacheHits.get(), cacheMisses.incrementAndGet()).     assertBehaviorForCleanTestCase().     runTestClassAndAssertStats(ClassLevelDirtiesContextWithCleanMethodsAndAfterClassModeTestCase.class, 1).     assertContextCacheStatistics("after class-level @DirtiesContext with clean test method and AFTER_CLASS mode", 0, cacheHits.incrementAndGet(), cacheMisses.get()). }
false;private;2;19;;private void runTestClassAndAssertStats(Class<?> testClass, int expectedTestCount) {     final int expectedTestFailureCount = 0.     final int expectedTestStartedCount = expectedTestCount.     final int expectedTestFinishedCount = expectedTestCount.     final TrackingTestNGTestListener listener = new TrackingTestNGTestListener().     final TestNG testNG = new TestNG().     testNG.addListener((ITestNGListener) listener).     testNG.setTestClasses(new Class<?>[] { testClass }).     testNG.setVerbose(0).     testNG.run().     assertEquals("Failures for test class [" + testClass + "].", expectedTestFailureCount, listener.testFailureCount).     assertEquals("Tests started for test class [" + testClass + "].", expectedTestStartedCount, listener.testStartCount).     assertEquals("Successful tests for test class [" + testClass + "].", expectedTestFinishedCount, listener.testSuccessCount). }
false;private;0;4;;private void assertBehaviorForCleanTestCase() {     runTestClassAndAssertStats(CleanTestCase.class, 1).     assertContextCacheStatistics("after clean test class", 1, cacheHits.get(), cacheMisses.incrementAndGet()). }
false;public,static;0;4;;@AfterClass public static void verifyFinalCacheState() {     assertContextCacheStatistics("AfterClass", 0, cacheHits.get(), cacheMisses.get()). }
false;protected;0;4;;protected void assertApplicationContextWasAutowired() {     org.testng.Assert.assertNotNull(this.applicationContext, "The application context should have been autowired."). }
false;;0;4;;@org.testng.annotations.Test void verifyContextWasAutowired() {     assertApplicationContextWasAutowired(). }
false;;0;4;;@org.testng.annotations.Test void verifyContextWasAutowired() {     assertApplicationContextWasAutowired(). }
false;;0;4;;@org.testng.annotations.Test void verifyContextWasAutowired() {     assertApplicationContextWasAutowired(). }
false;;0;4;;@org.testng.annotations.Test void verifyContextWasAutowired1() {     assertApplicationContextWasAutowired(). }
false;;0;4;;@org.testng.annotations.Test void verifyContextWasAutowired2() {     assertApplicationContextWasAutowired(). }
false;;0;4;;@org.testng.annotations.Test void verifyContextWasAutowired3() {     assertApplicationContextWasAutowired(). }
false;;0;5;;@org.testng.annotations.Test @DirtiesContext void dirtyContext() {     assertApplicationContextWasAutowired(). }
