commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void controller() {     new DefaultControllerSpec(new MyController()).build().get().uri("/").exchange().expectStatus().isOk().expectBody(String.class).isEqualTo("Success"). }
false;public;0;10;;@Test public void controllerAdvice() {     new DefaultControllerSpec(new MyController()).controllerAdvice(new MyControllerAdvice()).build().get().uri("/exception").exchange().expectStatus().isBadRequest().expectBody(String.class).isEqualTo("Handled exception"). }
false;public;0;10;;@Test public void controllerAdviceWithClassArgument() {     new DefaultControllerSpec(MyController.class).controllerAdvice(MyControllerAdvice.class).build().get().uri("/exception").exchange().expectStatus().isBadRequest().expectBody(String.class).isEqualTo("Handled exception"). }
false;public;0;29;;@Test public void configurerConsumers() {     TestConsumer<ArgumentResolverConfigurer> argumentResolverConsumer = new TestConsumer<>().     TestConsumer<RequestedContentTypeResolverBuilder> contenTypeResolverConsumer = new TestConsumer<>().     TestConsumer<CorsRegistry> corsRegistryConsumer = new TestConsumer<>().     TestConsumer<FormatterRegistry> formatterConsumer = new TestConsumer<>().     TestConsumer<ServerCodecConfigurer> codecsConsumer = new TestConsumer<>().     TestConsumer<PathMatchConfigurer> pathMatchingConsumer = new TestConsumer<>().     TestConsumer<ViewResolverRegistry> viewResolverConsumer = new TestConsumer<>().     new DefaultControllerSpec(new MyController()).argumentResolvers(argumentResolverConsumer).contentTypeResolver(contenTypeResolverConsumer).corsMappings(corsRegistryConsumer).formatters(formatterConsumer).httpMessageCodecs(codecsConsumer).pathMatching(pathMatchingConsumer).viewResolvers(viewResolverConsumer).build().     assertNotNull(argumentResolverConsumer.getValue()).     assertNotNull(contenTypeResolverConsumer.getValue()).     assertNotNull(corsRegistryConsumer.getValue()).     assertNotNull(formatterConsumer.getValue()).     assertNotNull(codecsConsumer.getValue()).     assertNotNull(pathMatchingConsumer.getValue()).     assertNotNull(viewResolverConsumer.getValue()). }
false;public;0;4;;@GetMapping("/") public String handle() {     return "Success". }
false;public;0;4;;@GetMapping("/exception") public void handleWithError() {     throw new IllegalStateException(). }
false;public;1;4;;@ExceptionHandler public ResponseEntity<String> handle(IllegalStateException ex) {     return ResponseEntity.status(400).body("Handled exception"). }
false;public;0;3;;public T getValue() {     return this.value. }
false;public;1;4;;@Override public void accept(T t) {     this.value = t. }
