commented;modifiers;parameterAmount;loc;comment;code
false;public;0;21;;@Test public void webFilter() {     RouterFunction<ServerResponse> routerFunction = RouterFunctions.route().GET("/", request -> ServerResponse.ok().build()).build().     new DefaultRouterFunctionSpec(routerFunction).handlerStrategies(HandlerStrategies.builder().webFilter((exchange, chain) -> {         exchange.getResponse().getHeaders().set("foo", "123").         return chain.filter(exchange).     }).build()).build().get().uri("/").exchange().expectStatus().isOk().expectHeader().valueEquals("foo", "123"). }
false;public;0;20;;@Test public void exceptionHandler() {     RouterFunction<ServerResponse> routerFunction = RouterFunctions.route().GET("/error", request -> Mono.error(new IllegalStateException("boo"))).build().     new DefaultRouterFunctionSpec(routerFunction).handlerStrategies(HandlerStrategies.builder().exceptionHandler((exchange, ex) -> {         exchange.getResponse().setStatusCode(HttpStatus.BAD_REQUEST).         return Mono.empty().     }).build()).build().get().uri("/error").exchange().expectStatus().isBadRequest(). }
