commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void resolveTestContextBootstrapperWithEmptyBootstrapWithAnnotation() {     BootstrapContext bootstrapContext = BootstrapTestUtils.buildBootstrapContext(EmptyBootstrapWithAnnotationClass.class, delegate).     exception.expect(IllegalStateException.class).     exception.expectMessage("Specify @BootstrapWith's 'value' attribute").     resolveTestContextBootstrapper(bootstrapContext). }
false;public;0;12;;@Test public void resolveTestContextBootstrapperWithDoubleMetaBootstrapWithAnnotations() {     BootstrapContext bootstrapContext = BootstrapTestUtils.buildBootstrapContext(DoubleMetaAnnotatedBootstrapWithAnnotationClass.class, delegate).     exception.expect(IllegalStateException.class).     exception.expectMessage("Configuration error: found multiple declarations of @BootstrapWith").     exception.expectMessage(FooBootstrapper.class.getName()).     exception.expectMessage(BarBootstrapper.class.getName()).     resolveTestContextBootstrapper(bootstrapContext). }
false;public;0;4;;@Test public void resolveTestContextBootstrapperForNonAnnotatedClass() {     assertBootstrapper(NonAnnotatedClass.class, DefaultTestContextBootstrapper.class). }
false;public;0;4;;@Test public void resolveTestContextBootstrapperForWebAppConfigurationAnnotatedClass() {     assertBootstrapper(WebAppConfigurationAnnotatedClass.class, WebTestContextBootstrapper.class). }
false;public;0;4;;@Test public void resolveTestContextBootstrapperWithDirectBootstrapWithAnnotation() {     assertBootstrapper(DirectBootstrapWithAnnotationClass.class, FooBootstrapper.class). }
false;public;0;4;;@Test public void resolveTestContextBootstrapperWithInheritedBootstrapWithAnnotation() {     assertBootstrapper(InheritedBootstrapWithAnnotationClass.class, FooBootstrapper.class). }
false;public;0;4;;@Test public void resolveTestContextBootstrapperWithMetaBootstrapWithAnnotation() {     assertBootstrapper(MetaAnnotatedBootstrapWithAnnotationClass.class, BarBootstrapper.class). }
false;public;0;4;;@Test public void resolveTestContextBootstrapperWithDuplicatingMetaBootstrapWithAnnotations() {     assertBootstrapper(DuplicateMetaAnnotatedBootstrapWithAnnotationClass.class, FooBootstrapper.class). }
true;public;0;4;/**  * @since 5.1  */ ;/**  * @since 5.1  */ @Test public void resolveTestContextBootstrapperWithLocalDeclarationThatOverridesMetaBootstrapWithAnnotations() {     assertBootstrapper(LocalDeclarationAndMetaAnnotatedBootstrapWithAnnotationClass.class, EnigmaBootstrapper.class). }
false;private;2;6;;private void assertBootstrapper(Class<?> testClass, Class<?> expectedBootstrapper) {     BootstrapContext bootstrapContext = BootstrapTestUtils.buildBootstrapContext(testClass, delegate).     TestContextBootstrapper bootstrapper = resolveTestContextBootstrapper(bootstrapContext).     assertNotNull(bootstrapper).     assertEquals(expectedBootstrapper, bootstrapper.getClass()). }
