commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Bean public LifecycleBean singleton() {     LifecycleBean bean = new LifecycleBean("singleton").     assertFalse(bean.isInitialized()).     return bean. }
false;public;0;7;;@Bean @Scope("prototype") public LifecycleBean prototype() {     LifecycleBean bean = new LifecycleBean("prototype").     assertFalse(bean.isInitialized()).     return bean. }
false;public;0;11;;@Test public void singletonLiteBean() {     assertNotNull(injectedSingletonBean).     assertTrue(injectedSingletonBean.isInitialized()).     LifecycleBean retrievedSingletonBean = applicationContext.getBean("singleton", LifecycleBean.class).     assertNotNull(retrievedSingletonBean).     assertTrue(retrievedSingletonBean.isInitialized()).     assertSame(injectedSingletonBean, retrievedSingletonBean). }
false;public;0;11;;@Test public void prototypeLiteBean() {     assertNotNull(injectedPrototypeBean).     assertTrue(injectedPrototypeBean.isInitialized()).     LifecycleBean retrievedPrototypeBean = applicationContext.getBean("prototype", LifecycleBean.class).     assertNotNull(retrievedPrototypeBean).     assertTrue(retrievedPrototypeBean.isInitialized()).     assertNotSame(injectedPrototypeBean, retrievedPrototypeBean). }
