commented;modifiers;parameterAmount;loc;comment;code
false;;1;7;;@BeforeEach void setUpMockMvc(WebApplicationContext wac) {     this.mockMvc = webAppContextSetup(wac).alwaysExpect(status().isOk()).alwaysExpect(content().contentTypeCompatibleWith(APPLICATION_JSON)).build(). }
false;;0;5;;@Test void getPerson42() throws Exception {     this.mockMvc.perform(get("/person/42").accept(MediaType.APPLICATION_JSON)).andExpect(jsonPath("$.name", is("Dilbert"))). }
false;;0;5;;@Test void getPerson99() throws Exception {     this.mockMvc.perform(get("/person/99").accept(MediaType.APPLICATION_JSON)).andExpect(jsonPath("$.name", is("Wally"))). }
