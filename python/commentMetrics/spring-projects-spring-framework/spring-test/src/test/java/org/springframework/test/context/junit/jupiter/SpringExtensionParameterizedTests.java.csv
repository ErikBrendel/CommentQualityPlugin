commented;modifiers;parameterAmount;loc;comment;code
false;;2;5;;@ParameterizedTest @ValueSource(strings = { "Dilbert", "Wally" }) void people(String name, @Autowired List<Person> people) {     assertTrue(people.stream().map(Person::getName).filter(str -> name.equals(str)).findFirst().isPresent()). }
false;;3;5;;@ParameterizedTest @CsvSource("dogbert, Dogbert") void dogs(String beanName, String dogName, ApplicationContext context) {     assertEquals(dogName, context.getBean(beanName, Dog.class).getName()). }
false;;3;5;;@ParameterizedTest @CsvSource({ "garfield, Garfield", "catbert, Catbert" }) void cats(String beanName, String catName, ApplicationContext context) {     assertEquals(catName, context.getBean(beanName, Cat.class).getName()). }
