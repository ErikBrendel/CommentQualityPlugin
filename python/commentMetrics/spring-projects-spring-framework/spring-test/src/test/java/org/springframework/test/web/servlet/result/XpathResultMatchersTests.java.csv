commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Test public void node() throws Exception {     new XpathResultMatchers("/foo/bar", null).node(Matchers.notNullValue()).match(getStubMvcResult()). }
false;public;0;4;;@Test(expected = AssertionError.class) public void nodeNoMatch() throws Exception {     new XpathResultMatchers("/foo/bar", null).node(Matchers.nullValue()).match(getStubMvcResult()). }
false;public;0;4;;@Test public void exists() throws Exception {     new XpathResultMatchers("/foo/bar", null).exists().match(getStubMvcResult()). }
false;public;0;4;;@Test(expected = AssertionError.class) public void existsNoMatch() throws Exception {     new XpathResultMatchers("/foo/Bar", null).exists().match(getStubMvcResult()). }
false;public;0;4;;@Test public void doesNotExist() throws Exception {     new XpathResultMatchers("/foo/Bar", null).doesNotExist().match(getStubMvcResult()). }
false;public;0;4;;@Test(expected = AssertionError.class) public void doesNotExistNoMatch() throws Exception {     new XpathResultMatchers("/foo/bar", null).doesNotExist().match(getStubMvcResult()). }
false;public;0;4;;@Test public void nodeCount() throws Exception {     new XpathResultMatchers("/foo/bar", null).nodeCount(2).match(getStubMvcResult()). }
false;public;0;4;;@Test(expected = AssertionError.class) public void nodeCountNoMatch() throws Exception {     new XpathResultMatchers("/foo/bar", null).nodeCount(1).match(getStubMvcResult()). }
false;public;0;4;;@Test public void string() throws Exception {     new XpathResultMatchers("/foo/bar[1]", null).string("111").match(getStubMvcResult()). }
false;public;0;4;;@Test(expected = AssertionError.class) public void stringNoMatch() throws Exception {     new XpathResultMatchers("/foo/bar[1]", null).string("112").match(getStubMvcResult()). }
false;public;0;4;;@Test public void number() throws Exception {     new XpathResultMatchers("/foo/bar[1]", null).number(111.0).match(getStubMvcResult()). }
false;public;0;4;;@Test(expected = AssertionError.class) public void numberNoMatch() throws Exception {     new XpathResultMatchers("/foo/bar[1]", null).number(111.1).match(getStubMvcResult()). }
false;public;0;4;;@Test public void booleanValue() throws Exception {     new XpathResultMatchers("/foo/bar[2]", null).booleanValue(true).match(getStubMvcResult()). }
false;public;0;4;;@Test(expected = AssertionError.class) public void booleanValueNoMatch() throws Exception {     new XpathResultMatchers("/foo/bar[2]", null).booleanValue(false).match(getStubMvcResult()). }
false;public;0;12;;@Test public void stringEncodingDetection() throws Exception {     String content = "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n" + "<person><name>Jürgen</name></person>".     byte[] bytes = content.getBytes(StandardCharsets.UTF_8).     MockHttpServletResponse response = new MockHttpServletResponse().     response.addHeader("Content-Type", "application/xml").     StreamUtils.copy(bytes, response.getOutputStream()).     StubMvcResult result = new StubMvcResult(null, null, null, null, null, null, response).     new XpathResultMatchers("/person/name", null).string("Jürgen").match(result). }
false;private;0;6;;private StubMvcResult getStubMvcResult() throws Exception {     MockHttpServletResponse response = new MockHttpServletResponse().     response.addHeader("Content-Type", "application/xml").     response.getWriter().print(new String(RESPONSE_CONTENT.getBytes(StandardCharsets.ISO_8859_1))).     return new StubMvcResult(null, null, null, null, null, null, response). }
