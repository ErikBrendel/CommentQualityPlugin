commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public MockHttpServletRequest getRequest() {     return request. }
false;public;0;4;;@Override public Object getHandler() {     return handler. }
false;public;0;4;;@Override public HandlerInterceptor[] getInterceptors() {     return interceptors. }
false;public;0;4;;@Override public Exception getResolvedException() {     return resolvedException. }
false;public;0;4;;@Override public ModelAndView getModelAndView() {     return mav. }
false;public;0;4;;@Override public FlashMap getFlashMap() {     return flashMap. }
false;public;0;4;;@Override public MockHttpServletResponse getResponse() {     return response. }
false;public;0;3;;public ModelAndView getMav() {     return mav. }
false;public;1;3;;public void setMav(ModelAndView mav) {     this.mav = mav. }
false;public;1;3;;public void setRequest(MockHttpServletRequest request) {     this.request = request. }
false;public;1;3;;public void setHandler(Object handler) {     this.handler = handler. }
false;public;1;3;;public void setInterceptors(HandlerInterceptor[] interceptors) {     this.interceptors = interceptors. }
false;public;1;3;;public void setResolvedException(Exception resolvedException) {     this.resolvedException = resolvedException. }
false;public;1;3;;public void setFlashMap(FlashMap flashMap) {     this.flashMap = flashMap. }
false;public;1;3;;public void setResponse(MockHttpServletResponse response) {     this.response = response. }
false;public;0;4;;@Override public Object getAsyncResult() {     return null. }
false;public;1;4;;@Override public Object getAsyncResult(long timeToWait) {     return null. }
