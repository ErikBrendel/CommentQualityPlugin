commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void xmlContent() {     this.client.get().uri("/persons").accept(MediaType.APPLICATION_XML).exchange().expectStatus().isOk().expectBody().xml(persons_XML). }
false;public;0;15;;@Test public void xpathIsEqualTo() {     this.client.get().uri("/persons").accept(MediaType.APPLICATION_XML).exchange().expectStatus().isOk().expectBody().xpath("/").exists().xpath("/persons").exists().xpath("/persons/person").exists().xpath("/persons/person").nodeCount(3).xpath("/persons/person[1]/name").isEqualTo("Jane").xpath("/persons/person[2]/name").isEqualTo("Jason").xpath("/persons/person[3]/name").isEqualTo("John"). }
false;public;0;9;;@Test public void xpathMatches() {     this.client.get().uri("/persons").accept(MediaType.APPLICATION_XML).exchange().expectStatus().isOk().expectBody().xpath("//person/name").string(startsWith("J")). }
false;public;0;9;;@Test public void xpathContainsSubstringViaRegex() {     this.client.get().uri("/persons/John").accept(MediaType.APPLICATION_XML).exchange().expectStatus().isOk().expectBody().xpath("//name[contains(text(), 'oh')]").exists(). }
false;public;0;15;;@Test public void postXmlContent() {     String content = "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>" + "<person><name>John</name></person>".     this.client.post().uri("/persons").contentType(MediaType.APPLICATION_XML).syncBody(content).exchange().expectStatus().isCreated().expectHeader().valueEquals(HttpHeaders.LOCATION, "/persons/John").expectBody().isEmpty(). }
false;public;0;3;;public List<Person> getpersons() {     return this.persons. }
false;;0;4;;@GetMapping(produces = MediaType.APPLICATION_XML_VALUE) PersonsWrapper getPersons() {     return new PersonsWrapper(new Person("Jane"), new Person("Jason"), new Person("John")). }
false;;1;4;;@GetMapping(path = "/{name}", produces = MediaType.APPLICATION_XML_VALUE) Person getPerson(@PathVariable String name) {     return new Person(name). }
false;;1;5;;@PostMapping(consumes = MediaType.APPLICATION_XML_VALUE) ResponseEntity<Object> savepersons(@RequestBody Person person) {     URI location = URI.create(String.format("/persons/%s", person.getName())).     return ResponseEntity.created(location).build(). }
