commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@After public void cleanUp() {     ContextHierarchyDirtiesContextTests.context = null.     ContextHierarchyDirtiesContextTests.foo = null.     ContextHierarchyDirtiesContextTests.bar = null.     ContextHierarchyDirtiesContextTests.baz = null. }
false;public;0;4;;@Test public void classLevelDirtiesContextWithCurrentLevelHierarchyMode() {     runTestAndVerifyHierarchies(ClassLevelDirtiesContextWithCurrentLevelModeTestCase.class, true, true, false). }
false;public;0;4;;@Test public void classLevelDirtiesContextWithExhaustiveHierarchyMode() {     runTestAndVerifyHierarchies(ClassLevelDirtiesContextWithExhaustiveModeTestCase.class, false, false, false). }
false;public;0;4;;@Test public void methodLevelDirtiesContextWithCurrentLevelHierarchyMode() {     runTestAndVerifyHierarchies(MethodLevelDirtiesContextWithCurrentLevelModeTestCase.class, true, true, false). }
false;public;0;4;;@Test public void methodLevelDirtiesContextWithExhaustiveHierarchyMode() {     runTestAndVerifyHierarchies(MethodLevelDirtiesContextWithExhaustiveModeTestCase.class, false, false, false). }
false;private;4;23;;private void runTestAndVerifyHierarchies(Class<? extends FooTestCase> testClass, boolean isFooContextActive, boolean isBarContextActive, boolean isBazContextActive) {     JUnitCore jUnitCore = new JUnitCore().     Result result = jUnitCore.run(testClass).     assertTrue("all tests passed", result.wasSuccessful()).     assertThat(ContextHierarchyDirtiesContextTests.context, notNullValue()).     ConfigurableApplicationContext bazContext = (ConfigurableApplicationContext) ContextHierarchyDirtiesContextTests.context.     assertEquals("baz", ContextHierarchyDirtiesContextTests.baz).     assertThat("bazContext#isActive()", bazContext.isActive(), is(isBazContextActive)).     ConfigurableApplicationContext barContext = (ConfigurableApplicationContext) bazContext.getParent().     assertThat(barContext, notNullValue()).     assertEquals("bar", ContextHierarchyDirtiesContextTests.bar).     assertThat("barContext#isActive()", barContext.isActive(), is(isBarContextActive)).     ConfigurableApplicationContext fooContext = (ConfigurableApplicationContext) barContext.getParent().     assertThat(fooContext, notNullValue()).     assertEquals("foo", ContextHierarchyDirtiesContextTests.foo).     assertThat("fooContext#isActive()", fooContext.isActive(), is(isFooContextActive)). }
false;public;0;4;;@Bean public String bean() {     return "foo". }
false;public;1;7;;@Override public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {     ContextHierarchyDirtiesContextTests.context = applicationContext.     ContextHierarchyDirtiesContextTests.baz = applicationContext.getBean("bean", String.class).     ContextHierarchyDirtiesContextTests.bar = applicationContext.getParent().getBean("bean", String.class).     ContextHierarchyDirtiesContextTests.foo = applicationContext.getParent().getParent().getBean("bean", String.class). }
false;public;0;4;;@Bean public String bean() {     return "bar". }
false;public;0;4;;@Bean public String bean() {     return "baz". }
false;public;0;3;;@Test public void test() { }
false;public;0;3;;@Test public void test() { }
false;public;0;4;;@Test @DirtiesContext public void test() { }
false;public;0;4;;@Test @DirtiesContext(hierarchyMode = HierarchyMode.CURRENT_LEVEL) public void test() { }
