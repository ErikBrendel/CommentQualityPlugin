commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void publishBeforeTestClassEvent() {     listener.beforeTestClass(testContext).     assertEvent(BeforeTestClassEvent.class). }
false;public;0;5;;@Test public void publishPrepareTestInstanceEvent() {     listener.prepareTestInstance(testContext).     assertEvent(PrepareTestInstanceEvent.class). }
false;public;0;5;;@Test public void publishBeforeTestMethodEvent() {     listener.beforeTestMethod(testContext).     assertEvent(BeforeTestMethodEvent.class). }
false;public;0;5;;@Test public void publishBeforeTestExecutionEvent() {     listener.beforeTestExecution(testContext).     assertEvent(BeforeTestExecutionEvent.class). }
false;public;0;5;;@Test public void publishAfterTestExecutionEvent() {     listener.afterTestExecution(testContext).     assertEvent(AfterTestExecutionEvent.class). }
false;public;0;5;;@Test public void publishAfterTestMethodEvent() {     listener.afterTestMethod(testContext).     assertEvent(AfterTestMethodEvent.class). }
false;public;0;5;;@Test public void publishAfterTestClassEvent() {     listener.afterTestClass(testContext).     assertEvent(AfterTestClassEvent.class). }
false;private;1;5;;private void assertEvent(Class<? extends TestContextEvent> eventClass) {     verify(testContext.getApplicationContext(), only()).publishEvent(testExecutionEvent.capture()).     assertThat(testExecutionEvent.getValue(), instanceOf(eventClass)).     assertThat(testExecutionEvent.getValue().getSource(), equalTo(testContext)). }
