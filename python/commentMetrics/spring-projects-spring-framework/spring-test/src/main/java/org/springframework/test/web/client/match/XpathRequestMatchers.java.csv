# id;timestamp;commentText;codeText;commentWords;codeWords
XpathRequestMatchers -> protected XpathRequestMatchers(String expression, Map<String, String> namespaces, Object ... args) 			throws XPathExpressionException;1383669853;Class constructor, not for direct instantiation. Use_{@link MockRestRequestMatchers#xpath(String, Object...)} or_{@link MockRestRequestMatchers#xpath(String, Map, Object...)}.__@param expression the XPath expression_@param namespaces XML namespaces referenced in the XPath expression, or {@code null}_@param args arguments to parameterize the XPath expression with using the_formatting specifiers defined in {@link String#format(String, Object...)}__@throws XPathExpressionException;protected XpathRequestMatchers(String expression, Map<String, String> namespaces, Object ... args)_			throws XPathExpressionException {__		this.xpathHelper = new XpathExpectationsHelper(expression, namespaces, args)__	};class,constructor,not,for,direct,instantiation,use,link,mock,rest,request,matchers,xpath,string,object,or,link,mock,rest,request,matchers,xpath,string,map,object,param,expression,the,xpath,expression,param,namespaces,xml,namespaces,referenced,in,the,xpath,expression,or,code,null,param,args,arguments,to,parameterize,the,xpath,expression,with,using,the,formatting,specifiers,defined,in,link,string,format,string,object,throws,xpath,expression,exception;protected,xpath,request,matchers,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,this,xpath,helper,new,xpath,expectations,helper,expression,namespaces,args
XpathRequestMatchers -> protected XpathRequestMatchers(String expression, Map<String, String> namespaces, Object ... args) 			throws XPathExpressionException;1413848647;Class constructor, not for direct instantiation. Use_{@link MockRestRequestMatchers#xpath(String, Object...)} or_{@link MockRestRequestMatchers#xpath(String, Map, Object...)}.__@param expression the XPath expression_@param namespaces XML namespaces referenced in the XPath expression, or {@code null}_@param args arguments to parameterize the XPath expression with using the_formatting specifiers defined in {@link String#format(String, Object...)}__@throws XPathExpressionException;protected XpathRequestMatchers(String expression, Map<String, String> namespaces, Object ... args)_			throws XPathExpressionException {__		this.xpathHelper = new XpathExpectationsHelper(expression, namespaces, args)__	};class,constructor,not,for,direct,instantiation,use,link,mock,rest,request,matchers,xpath,string,object,or,link,mock,rest,request,matchers,xpath,string,map,object,param,expression,the,xpath,expression,param,namespaces,xml,namespaces,referenced,in,the,xpath,expression,or,code,null,param,args,arguments,to,parameterize,the,xpath,expression,with,using,the,formatting,specifiers,defined,in,link,string,format,string,object,throws,xpath,expression,exception;protected,xpath,request,matchers,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,this,xpath,helper,new,xpath,expectations,helper,expression,namespaces,args
XpathRequestMatchers -> protected XpathRequestMatchers(String expression, Map<String, String> namespaces, Object ... args) 			throws XPathExpressionException;1434528594;Class constructor, not for direct instantiation. Use_{@link MockRestRequestMatchers#xpath(String, Object...)} or_{@link MockRestRequestMatchers#xpath(String, Map, Object...)}.__@param expression the XPath expression_@param namespaces XML namespaces referenced in the XPath expression, or {@code null}_@param args arguments to parameterize the XPath expression with using the_formatting specifiers defined in {@link String#format(String, Object...)}__@throws XPathExpressionException;protected XpathRequestMatchers(String expression, Map<String, String> namespaces, Object ... args)_			throws XPathExpressionException {__		this.xpathHelper = new XpathExpectationsHelper(expression, namespaces, args)__	};class,constructor,not,for,direct,instantiation,use,link,mock,rest,request,matchers,xpath,string,object,or,link,mock,rest,request,matchers,xpath,string,map,object,param,expression,the,xpath,expression,param,namespaces,xml,namespaces,referenced,in,the,xpath,expression,or,code,null,param,args,arguments,to,parameterize,the,xpath,expression,with,using,the,formatting,specifiers,defined,in,link,string,format,string,object,throws,xpath,expression,exception;protected,xpath,request,matchers,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,this,xpath,helper,new,xpath,expectations,helper,expression,namespaces,args
XpathRequestMatchers -> protected XpathRequestMatchers(String expression, Map<String, String> namespaces, Object ... args) 			throws XPathExpressionException;1470739377;Class constructor, not for direct instantiation. Use_{@link MockRestRequestMatchers#xpath(String, Object...)} or_{@link MockRestRequestMatchers#xpath(String, Map, Object...)}._@param expression the XPath expression_@param namespaces XML namespaces referenced in the XPath expression, or {@code null}_@param args arguments to parameterize the XPath expression with using the_formatting specifiers defined in {@link String#format(String, Object...)}_@throws XPathExpressionException;protected XpathRequestMatchers(String expression, Map<String, String> namespaces, Object ... args)_			throws XPathExpressionException {__		this.xpathHelper = new XpathExpectationsHelper(expression, namespaces, args)__	};class,constructor,not,for,direct,instantiation,use,link,mock,rest,request,matchers,xpath,string,object,or,link,mock,rest,request,matchers,xpath,string,map,object,param,expression,the,xpath,expression,param,namespaces,xml,namespaces,referenced,in,the,xpath,expression,or,code,null,param,args,arguments,to,parameterize,the,xpath,expression,with,using,the,formatting,specifiers,defined,in,link,string,format,string,object,throws,xpath,expression,exception;protected,xpath,request,matchers,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,this,xpath,helper,new,xpath,expectations,helper,expression,namespaces,args
XpathRequestMatchers -> protected XpathRequestMatchers(String expression, Map<String, String> namespaces, Object ... args) 			throws XPathExpressionException;1470831642;Class constructor, not for direct instantiation. Use_{@link MockRestRequestMatchers#xpath(String, Object...)} or_{@link MockRestRequestMatchers#xpath(String, Map, Object...)}._@param expression the XPath expression_@param namespaces XML namespaces referenced in the XPath expression, or {@code null}_@param args arguments to parameterize the XPath expression with using the_formatting specifiers defined in {@link String#format(String, Object...)}_@throws XPathExpressionException;protected XpathRequestMatchers(String expression, Map<String, String> namespaces, Object ... args)_			throws XPathExpressionException {__		this.xpathHelper = new XpathExpectationsHelper(expression, namespaces, args)__	};class,constructor,not,for,direct,instantiation,use,link,mock,rest,request,matchers,xpath,string,object,or,link,mock,rest,request,matchers,xpath,string,map,object,param,expression,the,xpath,expression,param,namespaces,xml,namespaces,referenced,in,the,xpath,expression,or,code,null,param,args,arguments,to,parameterize,the,xpath,expression,with,using,the,formatting,specifiers,defined,in,link,string,format,string,object,throws,xpath,expression,exception;protected,xpath,request,matchers,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,this,xpath,helper,new,xpath,expectations,helper,expression,namespaces,args
XpathRequestMatchers -> protected XpathRequestMatchers(String expression, Map<String, String> namespaces, Object ... args) 			throws XPathExpressionException;1472464380;Class constructor, not for direct instantiation. Use_{@link MockRestRequestMatchers#xpath(String, Object...)} or_{@link MockRestRequestMatchers#xpath(String, Map, Object...)}._@param expression the XPath expression_@param namespaces XML namespaces referenced in the XPath expression, or {@code null}_@param args arguments to parameterize the XPath expression with using the_formatting specifiers defined in {@link String#format(String, Object...)}_@throws XPathExpressionException;protected XpathRequestMatchers(String expression, Map<String, String> namespaces, Object ... args)_			throws XPathExpressionException {__		this.xpathHelper = new XpathExpectationsHelper(expression, namespaces, args)__	};class,constructor,not,for,direct,instantiation,use,link,mock,rest,request,matchers,xpath,string,object,or,link,mock,rest,request,matchers,xpath,string,map,object,param,expression,the,xpath,expression,param,namespaces,xml,namespaces,referenced,in,the,xpath,expression,or,code,null,param,args,arguments,to,parameterize,the,xpath,expression,with,using,the,formatting,specifiers,defined,in,link,string,format,string,object,throws,xpath,expression,exception;protected,xpath,request,matchers,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,this,xpath,helper,new,xpath,expectations,helper,expression,namespaces,args
XpathRequestMatchers -> public <T> RequestMatcher doesNotExist();1383669853;Assert that content does not exist at the given XPath.;public <T> RequestMatcher doesNotExist() {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.doesNotExist(request.getBodyAsString())__			}_		}__	};assert,that,content,does,not,exist,at,the,given,xpath;public,t,request,matcher,does,not,exist,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,does,not,exist,request,get,body,as,string
XpathRequestMatchers -> public <T> RequestMatcher doesNotExist();1413848647;Assert that content does not exist at the given XPath.;public <T> RequestMatcher doesNotExist() {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.doesNotExist(request.getBodyAsString())__			}_		}__	};assert,that,content,does,not,exist,at,the,given,xpath;public,t,request,matcher,does,not,exist,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,does,not,exist,request,get,body,as,string
XpathRequestMatchers -> public <T> RequestMatcher doesNotExist();1434528594;Assert that content does not exist at the given XPath.;public <T> RequestMatcher doesNotExist() {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.doesNotExist(request.getBodyAsBytes(), DEFAULT_ENCODING)__			}_		}__	};assert,that,content,does,not,exist,at,the,given,xpath;public,t,request,matcher,does,not,exist,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,does,not,exist,request,get,body,as,bytes
XpathRequestMatchers -> public <T> RequestMatcher doesNotExist();1470739377;Assert that content does not exist at the given XPath.;public <T> RequestMatcher doesNotExist() {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.doesNotExist(request.getBodyAsBytes(), DEFAULT_ENCODING)__			}_		}__	};assert,that,content,does,not,exist,at,the,given,xpath;public,t,request,matcher,does,not,exist,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,does,not,exist,request,get,body,as,bytes
XpathRequestMatchers -> public <T> RequestMatcher doesNotExist();1470831642;Assert that content does not exist at the given XPath.;public <T> RequestMatcher doesNotExist() {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.doesNotExist(request.getBodyAsBytes(), DEFAULT_ENCODING)__			}_		}__	};assert,that,content,does,not,exist,at,the,given,xpath;public,t,request,matcher,does,not,exist,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,does,not,exist,request,get,body,as,bytes
XpathRequestMatchers -> public <T> RequestMatcher doesNotExist();1472464380;Assert that content does not exist at the given XPath.;public <T> RequestMatcher doesNotExist() {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.doesNotExist(request.getBodyAsBytes(), DEFAULT_ENCODING)__			}_		}__	};assert,that,content,does,not,exist,at,the,given,xpath;public,t,request,matcher,does,not,exist,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,does,not,exist,request,get,body,as,bytes
XpathRequestMatchers -> public <T> RequestMatcher doesNotExist();1495868221;Assert that content does not exist at the given XPath.;public <T> RequestMatcher doesNotExist() {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.doesNotExist(request.getBodyAsBytes(), DEFAULT_ENCODING)__			}_		}__	};assert,that,content,does,not,exist,at,the,given,xpath;public,t,request,matcher,does,not,exist,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,does,not,exist,request,get,body,as,bytes
XpathRequestMatchers -> public <T> RequestMatcher doesNotExist();1516617801;Assert that content does not exist at the given XPath.;public <T> RequestMatcher doesNotExist() {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.doesNotExist(request.getBodyAsBytes(), DEFAULT_ENCODING)__			}_		}__	};assert,that,content,does,not,exist,at,the,given,xpath;public,t,request,matcher,does,not,exist,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,does,not,exist,request,get,body,as,bytes
XpathRequestMatchers -> public <T> RequestMatcher doesNotExist();1530174524;Assert that content does not exist at the given XPath.;public <T> RequestMatcher doesNotExist() {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.doesNotExist(request.getBodyAsBytes(), DEFAULT_ENCODING)__			}_		}__	};assert,that,content,does,not,exist,at,the,given,xpath;public,t,request,matcher,does,not,exist,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,does,not,exist,request,get,body,as,bytes
XpathRequestMatchers -> public <T> RequestMatcher nodeCount(final int expectedCount);1383669853;Apply the XPath and assert the number of nodes found.;public <T> RequestMatcher nodeCount(final int expectedCount) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNodeCount(request.getBodyAsString(), expectedCount)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found;public,t,request,matcher,node,count,final,int,expected,count,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,count,request,get,body,as,string,expected,count
XpathRequestMatchers -> public <T> RequestMatcher nodeCount(final int expectedCount);1413848647;Apply the XPath and assert the number of nodes found.;public <T> RequestMatcher nodeCount(final int expectedCount) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNodeCount(request.getBodyAsString(), expectedCount)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found;public,t,request,matcher,node,count,final,int,expected,count,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,count,request,get,body,as,string,expected,count
XpathRequestMatchers -> public <T> RequestMatcher nodeCount(final int expectedCount);1434528594;Apply the XPath and assert the number of nodes found.;public <T> RequestMatcher nodeCount(final int expectedCount) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNodeCount(request.getBodyAsBytes(), DEFAULT_ENCODING, expectedCount)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found;public,t,request,matcher,node,count,final,int,expected,count,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,count,request,get,body,as,bytes,expected,count
XpathRequestMatchers -> public <T> RequestMatcher nodeCount(final int expectedCount);1470739377;Apply the XPath and assert the number of nodes found.;public <T> RequestMatcher nodeCount(final int expectedCount) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNodeCount(request.getBodyAsBytes(), DEFAULT_ENCODING, expectedCount)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found;public,t,request,matcher,node,count,final,int,expected,count,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,count,request,get,body,as,bytes,expected,count
XpathRequestMatchers -> public <T> RequestMatcher nodeCount(final int expectedCount);1470831642;Apply the XPath and assert the number of nodes found.;public <T> RequestMatcher nodeCount(final int expectedCount) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNodeCount(request.getBodyAsBytes(), DEFAULT_ENCODING, expectedCount)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found;public,t,request,matcher,node,count,final,int,expected,count,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,count,request,get,body,as,bytes,expected,count
XpathRequestMatchers -> public <T> RequestMatcher nodeCount(final int expectedCount);1472464380;Apply the XPath and assert the number of nodes found.;public <T> RequestMatcher nodeCount(final int expectedCount) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNodeCount(request.getBodyAsBytes(), DEFAULT_ENCODING, expectedCount)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found;public,t,request,matcher,node,count,final,int,expected,count,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,count,request,get,body,as,bytes,expected,count
XpathRequestMatchers -> public <T> RequestMatcher nodeCount(final int expectedCount);1495868221;Apply the XPath and assert the number of nodes found.;public <T> RequestMatcher nodeCount(final int expectedCount) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNodeCount(request.getBodyAsBytes(), DEFAULT_ENCODING, expectedCount)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found;public,t,request,matcher,node,count,final,int,expected,count,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,count,request,get,body,as,bytes,expected,count
XpathRequestMatchers -> public <T> RequestMatcher nodeCount(final int expectedCount);1516617801;Apply the XPath and assert the number of nodes found.;public <T> RequestMatcher nodeCount(final int expectedCount) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNodeCount(request.getBodyAsBytes(), DEFAULT_ENCODING, expectedCount)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found;public,t,request,matcher,node,count,final,int,expected,count,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,count,request,get,body,as,bytes,expected,count
XpathRequestMatchers -> public <T> RequestMatcher nodeCount(final int expectedCount);1530174524;Apply the XPath and assert the number of nodes found.;public <T> RequestMatcher nodeCount(final int expectedCount) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNodeCount(request.getBodyAsBytes(), DEFAULT_ENCODING, expectedCount)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found;public,t,request,matcher,node,count,final,int,expected,count,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,count,request,get,body,as,bytes,expected,count
XpathRequestMatchers -> public <T> RequestMatcher node(final Matcher<? super Node> matcher);1383669853;Apply the XPath and assert it with the given {@code Matcher<Node>}.;public <T> RequestMatcher node(final Matcher<? super Node> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNode(request.getBodyAsString(), matcher)__			}_		}__	};apply,the,xpath,and,assert,it,with,the,given,code,matcher,node;public,t,request,matcher,node,final,matcher,super,node,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,request,get,body,as,string,matcher
XpathRequestMatchers -> public <T> RequestMatcher node(final Matcher<? super Node> matcher);1413848647;Apply the XPath and assert it with the given {@code Matcher<Node>}.;public <T> RequestMatcher node(final Matcher<? super Node> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNode(request.getBodyAsString(), matcher)__			}_		}__	};apply,the,xpath,and,assert,it,with,the,given,code,matcher,node;public,t,request,matcher,node,final,matcher,super,node,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,request,get,body,as,string,matcher
XpathRequestMatchers -> public <T> RequestMatcher node(final Matcher<? super Node> matcher);1434528594;Apply the XPath and assert it with the given {@code Matcher<Node>}.;public <T> RequestMatcher node(final Matcher<? super Node> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNode(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,it,with,the,given,code,matcher,node;public,t,request,matcher,node,final,matcher,super,node,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher node(final Matcher<? super Node> matcher);1470739377;Apply the XPath and assert it with the given {@code Matcher<Node>}.;public <T> RequestMatcher node(final Matcher<? super Node> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNode(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,it,with,the,given,code,matcher,node;public,t,request,matcher,node,final,matcher,super,node,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher node(final Matcher<? super Node> matcher);1470831642;Apply the XPath and assert it with the given {@code Matcher<Node>}.;public <T> RequestMatcher node(final Matcher<? super Node> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNode(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,it,with,the,given,code,matcher,node;public,t,request,matcher,node,final,matcher,super,node,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher node(final Matcher<? super Node> matcher);1472464380;Apply the XPath and assert it with the given {@code Matcher<Node>}.;public <T> RequestMatcher node(final Matcher<? super Node> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNode(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,it,with,the,given,code,matcher,node;public,t,request,matcher,node,final,matcher,super,node,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher node(final Matcher<? super Node> matcher);1495868221;Apply the XPath and assert it with the given {@code Matcher<Node>}.;public <T> RequestMatcher node(final Matcher<? super Node> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNode(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,it,with,the,given,code,matcher,node;public,t,request,matcher,node,final,matcher,super,node,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher node(final Matcher<? super Node> matcher);1516617801;Apply the XPath and assert it with the given {@code Matcher<Node>}.;public <T> RequestMatcher node(final Matcher<? super Node> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNode(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,it,with,the,given,code,matcher,node;public,t,request,matcher,node,final,matcher,super,node,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher node(final Matcher<? super Node> matcher);1530174524;Apply the XPath and assert it with the given {@code Matcher<Node>}.;public <T> RequestMatcher node(final Matcher<? super Node> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNode(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,it,with,the,given,code,matcher,node;public,t,request,matcher,node,final,matcher,super,node,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher nodeCount(final Matcher<Integer> matcher);1383669853;Apply the XPath and assert the number of nodes found with the given_{@code Matcher<Integer>}.;public <T> RequestMatcher nodeCount(final Matcher<Integer> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNodeCount(request.getBodyAsString(), matcher)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found,with,the,given,code,matcher,integer;public,t,request,matcher,node,count,final,matcher,integer,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,count,request,get,body,as,string,matcher
XpathRequestMatchers -> public <T> RequestMatcher nodeCount(final Matcher<Integer> matcher);1413848647;Apply the XPath and assert the number of nodes found with the given_{@code Matcher<Integer>}.;public <T> RequestMatcher nodeCount(final Matcher<Integer> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNodeCount(request.getBodyAsString(), matcher)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found,with,the,given,code,matcher,integer;public,t,request,matcher,node,count,final,matcher,integer,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,count,request,get,body,as,string,matcher
XpathRequestMatchers -> public <T> RequestMatcher nodeCount(final Matcher<Integer> matcher);1434528594;Apply the XPath and assert the number of nodes found with the given_{@code Matcher<Integer>}.;public <T> RequestMatcher nodeCount(final Matcher<Integer> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNodeCount(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found,with,the,given,code,matcher,integer;public,t,request,matcher,node,count,final,matcher,integer,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,count,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher nodeCount(final Matcher<Integer> matcher);1470739377;Apply the XPath and assert the number of nodes found with the given_{@code Matcher<Integer>}.;public <T> RequestMatcher nodeCount(final Matcher<Integer> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNodeCount(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found,with,the,given,code,matcher,integer;public,t,request,matcher,node,count,final,matcher,integer,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,count,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher nodeCount(final Matcher<Integer> matcher);1470831642;Apply the XPath and assert the number of nodes found with the given_{@code Matcher<Integer>}.;public <T> RequestMatcher nodeCount(final Matcher<Integer> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNodeCount(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found,with,the,given,code,matcher,integer;public,t,request,matcher,node,count,final,matcher,integer,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,count,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher nodeCount(final Matcher<Integer> matcher);1472464380;Apply the XPath and assert the number of nodes found with the given_{@code Matcher<Integer>}.;public <T> RequestMatcher nodeCount(final Matcher<Integer> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNodeCount(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found,with,the,given,code,matcher,integer;public,t,request,matcher,node,count,final,matcher,integer,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,count,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher nodeCount(final Matcher<Integer> matcher);1495868221;Apply the XPath and assert the number of nodes found with the given_{@code Matcher<Integer>}.;public <T> RequestMatcher nodeCount(final Matcher<Integer> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNodeCount(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found,with,the,given,code,matcher,integer;public,t,request,matcher,node,count,final,matcher,integer,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,count,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher nodeCount(final Matcher<Integer> matcher);1516617801;Apply the XPath and assert the number of nodes found with the given_{@code Matcher<Integer>}.;public <T> RequestMatcher nodeCount(final Matcher<Integer> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNodeCount(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found,with,the,given,code,matcher,integer;public,t,request,matcher,node,count,final,matcher,integer,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,count,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher nodeCount(final Matcher<Integer> matcher);1530174524;Apply the XPath and assert the number of nodes found with the given_{@code Matcher<Integer>}.;public <T> RequestMatcher nodeCount(final Matcher<Integer> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNodeCount(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found,with,the,given,code,matcher,integer;public,t,request,matcher,node,count,final,matcher,integer,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,node,count,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher booleanValue(final Boolean value);1383669853;Apply the XPath and assert the boolean value found.;public <T> RequestMatcher booleanValue(final Boolean value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertBoolean(request.getBodyAsString(), value)__			}_		}__	};apply,the,xpath,and,assert,the,boolean,value,found;public,t,request,matcher,boolean,value,final,boolean,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,boolean,request,get,body,as,string,value
XpathRequestMatchers -> public <T> RequestMatcher booleanValue(final Boolean value);1413848647;Apply the XPath and assert the boolean value found.;public <T> RequestMatcher booleanValue(final Boolean value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertBoolean(request.getBodyAsString(), value)__			}_		}__	};apply,the,xpath,and,assert,the,boolean,value,found;public,t,request,matcher,boolean,value,final,boolean,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,boolean,request,get,body,as,string,value
XpathRequestMatchers -> public <T> RequestMatcher booleanValue(final Boolean value);1434528594;Apply the XPath and assert the boolean value found.;public <T> RequestMatcher booleanValue(final Boolean value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertBoolean(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,boolean,value,found;public,t,request,matcher,boolean,value,final,boolean,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,boolean,request,get,body,as,bytes,value
XpathRequestMatchers -> public <T> RequestMatcher booleanValue(final Boolean value);1470739377;Apply the XPath and assert the boolean value found.;public <T> RequestMatcher booleanValue(final Boolean value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertBoolean(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,boolean,value,found;public,t,request,matcher,boolean,value,final,boolean,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,boolean,request,get,body,as,bytes,value
XpathRequestMatchers -> public <T> RequestMatcher booleanValue(final Boolean value);1470831642;Apply the XPath and assert the boolean value found.;public <T> RequestMatcher booleanValue(final Boolean value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertBoolean(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,boolean,value,found;public,t,request,matcher,boolean,value,final,boolean,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,boolean,request,get,body,as,bytes,value
XpathRequestMatchers -> public <T> RequestMatcher booleanValue(final Boolean value);1472464380;Apply the XPath and assert the boolean value found.;public <T> RequestMatcher booleanValue(final Boolean value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertBoolean(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,boolean,value,found;public,t,request,matcher,boolean,value,final,boolean,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,boolean,request,get,body,as,bytes,value
XpathRequestMatchers -> public <T> RequestMatcher booleanValue(final Boolean value);1495868221;Apply the XPath and assert the boolean value found.;public <T> RequestMatcher booleanValue(final Boolean value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertBoolean(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,boolean,value,found;public,t,request,matcher,boolean,value,final,boolean,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,boolean,request,get,body,as,bytes,value
XpathRequestMatchers -> public <T> RequestMatcher booleanValue(final Boolean value);1516617801;Apply the XPath and assert the boolean value found.;public <T> RequestMatcher booleanValue(final Boolean value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertBoolean(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,boolean,value,found;public,t,request,matcher,boolean,value,final,boolean,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,boolean,request,get,body,as,bytes,value
XpathRequestMatchers -> public <T> RequestMatcher booleanValue(final Boolean value);1530174524;Apply the XPath and assert the boolean value found.;public <T> RequestMatcher booleanValue(final Boolean value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertBoolean(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,boolean,value,found;public,t,request,matcher,boolean,value,final,boolean,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,boolean,request,get,body,as,bytes,value
XpathRequestMatchers -> public <T> RequestMatcher string(final Matcher<? super String> matcher);1383669853;Apply the XPath and assert the String content found with the given matcher.;public <T> RequestMatcher string(final Matcher<? super String> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertString(request.getBodyAsString(), matcher)__			}_		}__	};apply,the,xpath,and,assert,the,string,content,found,with,the,given,matcher;public,t,request,matcher,string,final,matcher,super,string,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,string,request,get,body,as,string,matcher
XpathRequestMatchers -> public <T> RequestMatcher string(final Matcher<? super String> matcher);1413848647;Apply the XPath and assert the String content found with the given matcher.;public <T> RequestMatcher string(final Matcher<? super String> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertString(request.getBodyAsString(), matcher)__			}_		}__	};apply,the,xpath,and,assert,the,string,content,found,with,the,given,matcher;public,t,request,matcher,string,final,matcher,super,string,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,string,request,get,body,as,string,matcher
XpathRequestMatchers -> public <T> RequestMatcher string(final Matcher<? super String> matcher);1434528594;Apply the XPath and assert the String content found with the given matcher.;public <T> RequestMatcher string(final Matcher<? super String> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertString(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,string,content,found,with,the,given,matcher;public,t,request,matcher,string,final,matcher,super,string,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,string,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher string(final Matcher<? super String> matcher);1470739377;Apply the XPath and assert the String content found with the given matcher.;public <T> RequestMatcher string(final Matcher<? super String> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertString(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,string,content,found,with,the,given,matcher;public,t,request,matcher,string,final,matcher,super,string,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,string,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher string(final Matcher<? super String> matcher);1470831642;Apply the XPath and assert the String content found with the given matcher.;public <T> RequestMatcher string(final Matcher<? super String> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertString(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,string,content,found,with,the,given,matcher;public,t,request,matcher,string,final,matcher,super,string,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,string,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher string(final Matcher<? super String> matcher);1472464380;Apply the XPath and assert the String content found with the given matcher.;public <T> RequestMatcher string(final Matcher<? super String> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertString(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,string,content,found,with,the,given,matcher;public,t,request,matcher,string,final,matcher,super,string,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,string,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher string(final Matcher<? super String> matcher);1495868221;Apply the XPath and assert the String content found with the given matcher.;public <T> RequestMatcher string(final Matcher<? super String> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertString(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,string,content,found,with,the,given,matcher;public,t,request,matcher,string,final,matcher,super,string,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,string,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher string(final Matcher<? super String> matcher);1516617801;Apply the XPath and assert the String content found with the given matcher.;public <T> RequestMatcher string(final Matcher<? super String> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertString(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,string,content,found,with,the,given,matcher;public,t,request,matcher,string,final,matcher,super,string,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,string,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher string(final Matcher<? super String> matcher);1530174524;Apply the XPath and assert the String content found with the given matcher.;public <T> RequestMatcher string(final Matcher<? super String> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertString(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,string,content,found,with,the,given,matcher;public,t,request,matcher,string,final,matcher,super,string,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,string,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public RequestMatcher number(final Double value);1383669853;Apply the XPath and assert the number of nodes found.;public RequestMatcher number(final Double value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNumber(request.getBodyAsString(), value)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found;public,request,matcher,number,final,double,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,number,request,get,body,as,string,value
XpathRequestMatchers -> public RequestMatcher number(final Double value);1413848647;Apply the XPath and assert the number of nodes found.;public RequestMatcher number(final Double value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNumber(request.getBodyAsString(), value)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found;public,request,matcher,number,final,double,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,number,request,get,body,as,string,value
XpathRequestMatchers -> public RequestMatcher number(final Double value);1434528594;Apply the XPath and assert the number of nodes found.;public RequestMatcher number(final Double value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNumber(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found;public,request,matcher,number,final,double,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,number,request,get,body,as,bytes,value
XpathRequestMatchers -> public RequestMatcher number(final Double value);1470739377;Apply the XPath and assert the number of nodes found.;public RequestMatcher number(final Double value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNumber(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found;public,request,matcher,number,final,double,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,number,request,get,body,as,bytes,value
XpathRequestMatchers -> public RequestMatcher number(final Double value);1470831642;Apply the XPath and assert the number of nodes found.;public RequestMatcher number(final Double value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNumber(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found;public,request,matcher,number,final,double,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,number,request,get,body,as,bytes,value
XpathRequestMatchers -> public RequestMatcher number(final Double value);1472464380;Apply the XPath and assert the number of nodes found.;public RequestMatcher number(final Double value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNumber(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found;public,request,matcher,number,final,double,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,number,request,get,body,as,bytes,value
XpathRequestMatchers -> public RequestMatcher number(final Double value);1495868221;Apply the XPath and assert the number of nodes found.;public RequestMatcher number(final Double value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNumber(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found;public,request,matcher,number,final,double,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,number,request,get,body,as,bytes,value
XpathRequestMatchers -> public RequestMatcher number(final Double value);1516617801;Apply the XPath and assert the number of nodes found.;public RequestMatcher number(final Double value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNumber(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found;public,request,matcher,number,final,double,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,number,request,get,body,as,bytes,value
XpathRequestMatchers -> public RequestMatcher number(final Double value);1530174524;Apply the XPath and assert the number of nodes found.;public RequestMatcher number(final Double value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNumber(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,number,of,nodes,found;public,request,matcher,number,final,double,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,number,request,get,body,as,bytes,value
XpathRequestMatchers -> public <T> RequestMatcher number(final Matcher<? super Double> matcher);1383669853;Apply the XPath and assert the number found with the given matcher.;public <T> RequestMatcher number(final Matcher<? super Double> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNumber(request.getBodyAsString(), matcher)__			}_		}__	};apply,the,xpath,and,assert,the,number,found,with,the,given,matcher;public,t,request,matcher,number,final,matcher,super,double,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,number,request,get,body,as,string,matcher
XpathRequestMatchers -> public <T> RequestMatcher number(final Matcher<? super Double> matcher);1413848647;Apply the XPath and assert the number found with the given matcher.;public <T> RequestMatcher number(final Matcher<? super Double> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNumber(request.getBodyAsString(), matcher)__			}_		}__	};apply,the,xpath,and,assert,the,number,found,with,the,given,matcher;public,t,request,matcher,number,final,matcher,super,double,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,number,request,get,body,as,string,matcher
XpathRequestMatchers -> public <T> RequestMatcher number(final Matcher<? super Double> matcher);1434528594;Apply the XPath and assert the number found with the given matcher.;public <T> RequestMatcher number(final Matcher<? super Double> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNumber(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,number,found,with,the,given,matcher;public,t,request,matcher,number,final,matcher,super,double,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,number,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher number(final Matcher<? super Double> matcher);1470739377;Apply the XPath and assert the number found with the given matcher.;public <T> RequestMatcher number(final Matcher<? super Double> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNumber(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,number,found,with,the,given,matcher;public,t,request,matcher,number,final,matcher,super,double,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,number,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher number(final Matcher<? super Double> matcher);1470831642;Apply the XPath and assert the number found with the given matcher.;public <T> RequestMatcher number(final Matcher<? super Double> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNumber(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,number,found,with,the,given,matcher;public,t,request,matcher,number,final,matcher,super,double,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,number,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher number(final Matcher<? super Double> matcher);1472464380;Apply the XPath and assert the number found with the given matcher.;public <T> RequestMatcher number(final Matcher<? super Double> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNumber(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,number,found,with,the,given,matcher;public,t,request,matcher,number,final,matcher,super,double,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,number,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher number(final Matcher<? super Double> matcher);1495868221;Apply the XPath and assert the number found with the given matcher.;public <T> RequestMatcher number(final Matcher<? super Double> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNumber(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,number,found,with,the,given,matcher;public,t,request,matcher,number,final,matcher,super,double,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,number,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher number(final Matcher<? super Double> matcher);1516617801;Apply the XPath and assert the number found with the given matcher.;public <T> RequestMatcher number(final Matcher<? super Double> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNumber(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,number,found,with,the,given,matcher;public,t,request,matcher,number,final,matcher,super,double,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,number,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher number(final Matcher<? super Double> matcher);1530174524;Apply the XPath and assert the number found with the given matcher.;public <T> RequestMatcher number(final Matcher<? super Double> matcher) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertNumber(request.getBodyAsBytes(), DEFAULT_ENCODING, matcher)__			}_		}__	};apply,the,xpath,and,assert,the,number,found,with,the,given,matcher;public,t,request,matcher,number,final,matcher,super,double,matcher,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,number,request,get,body,as,bytes,matcher
XpathRequestMatchers -> public <T> RequestMatcher exists();1383669853;Assert that content exists at the given XPath.;public <T> RequestMatcher exists() {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.exists(request.getBodyAsString())__			}_		}__	};assert,that,content,exists,at,the,given,xpath;public,t,request,matcher,exists,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,exists,request,get,body,as,string
XpathRequestMatchers -> public <T> RequestMatcher exists();1413848647;Assert that content exists at the given XPath.;public <T> RequestMatcher exists() {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.exists(request.getBodyAsString())__			}_		}__	};assert,that,content,exists,at,the,given,xpath;public,t,request,matcher,exists,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,exists,request,get,body,as,string
XpathRequestMatchers -> public <T> RequestMatcher exists();1434528594;Assert that content exists at the given XPath.;public <T> RequestMatcher exists() {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.exists(request.getBodyAsBytes(), DEFAULT_ENCODING)__			}_		}__	};assert,that,content,exists,at,the,given,xpath;public,t,request,matcher,exists,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,exists,request,get,body,as,bytes
XpathRequestMatchers -> public <T> RequestMatcher exists();1470739377;Assert that content exists at the given XPath.;public <T> RequestMatcher exists() {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.exists(request.getBodyAsBytes(), DEFAULT_ENCODING)__			}_		}__	};assert,that,content,exists,at,the,given,xpath;public,t,request,matcher,exists,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,exists,request,get,body,as,bytes
XpathRequestMatchers -> public <T> RequestMatcher exists();1470831642;Assert that content exists at the given XPath.;public <T> RequestMatcher exists() {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.exists(request.getBodyAsBytes(), DEFAULT_ENCODING)__			}_		}__	};assert,that,content,exists,at,the,given,xpath;public,t,request,matcher,exists,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,exists,request,get,body,as,bytes
XpathRequestMatchers -> public <T> RequestMatcher exists();1472464380;Assert that content exists at the given XPath.;public <T> RequestMatcher exists() {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.exists(request.getBodyAsBytes(), DEFAULT_ENCODING)__			}_		}__	};assert,that,content,exists,at,the,given,xpath;public,t,request,matcher,exists,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,exists,request,get,body,as,bytes
XpathRequestMatchers -> public <T> RequestMatcher exists();1495868221;Assert that content exists at the given XPath.;public <T> RequestMatcher exists() {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.exists(request.getBodyAsBytes(), DEFAULT_ENCODING)__			}_		}__	};assert,that,content,exists,at,the,given,xpath;public,t,request,matcher,exists,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,exists,request,get,body,as,bytes
XpathRequestMatchers -> public <T> RequestMatcher exists();1516617801;Assert that content exists at the given XPath.;public <T> RequestMatcher exists() {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.exists(request.getBodyAsBytes(), DEFAULT_ENCODING)__			}_		}__	};assert,that,content,exists,at,the,given,xpath;public,t,request,matcher,exists,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,exists,request,get,body,as,bytes
XpathRequestMatchers -> public <T> RequestMatcher exists();1530174524;Assert that content exists at the given XPath.;public <T> RequestMatcher exists() {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.exists(request.getBodyAsBytes(), DEFAULT_ENCODING)__			}_		}__	};assert,that,content,exists,at,the,given,xpath;public,t,request,matcher,exists,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,exists,request,get,body,as,bytes
XpathRequestMatchers -> public RequestMatcher string(final String value);1383669853;Apply the XPath and assert the String content found.;public RequestMatcher string(final String value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertString(request.getBodyAsString(), value)__			}_		}__	};apply,the,xpath,and,assert,the,string,content,found;public,request,matcher,string,final,string,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,string,request,get,body,as,string,value
XpathRequestMatchers -> public RequestMatcher string(final String value);1413848647;Apply the XPath and assert the String content found.;public RequestMatcher string(final String value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertString(request.getBodyAsString(), value)__			}_		}__	};apply,the,xpath,and,assert,the,string,content,found;public,request,matcher,string,final,string,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,string,request,get,body,as,string,value
XpathRequestMatchers -> public RequestMatcher string(final String value);1434528594;Apply the XPath and assert the String content found.;public RequestMatcher string(final String value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertString(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,string,content,found;public,request,matcher,string,final,string,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,string,request,get,body,as,bytes,value
XpathRequestMatchers -> public RequestMatcher string(final String value);1470739377;Apply the XPath and assert the String content found.;public RequestMatcher string(final String value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertString(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,string,content,found;public,request,matcher,string,final,string,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,string,request,get,body,as,bytes,value
XpathRequestMatchers -> public RequestMatcher string(final String value);1470831642;Apply the XPath and assert the String content found.;public RequestMatcher string(final String value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertString(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,string,content,found;public,request,matcher,string,final,string,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,string,request,get,body,as,bytes,value
XpathRequestMatchers -> public RequestMatcher string(final String value);1472464380;Apply the XPath and assert the String content found.;public RequestMatcher string(final String value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertString(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,string,content,found;public,request,matcher,string,final,string,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,string,request,get,body,as,bytes,value
XpathRequestMatchers -> public RequestMatcher string(final String value);1495868221;Apply the XPath and assert the String content found.;public RequestMatcher string(final String value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertString(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,string,content,found;public,request,matcher,string,final,string,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,string,request,get,body,as,bytes,value
XpathRequestMatchers -> public RequestMatcher string(final String value);1516617801;Apply the XPath and assert the String content found.;public RequestMatcher string(final String value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertString(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,string,content,found;public,request,matcher,string,final,string,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,string,request,get,body,as,bytes,value
XpathRequestMatchers -> public RequestMatcher string(final String value);1530174524;Apply the XPath and assert the String content found.;public RequestMatcher string(final String value) {_		return new AbstractXpathRequestMatcher() {_			@Override_			protected void matchInternal(MockClientHttpRequest request) throws Exception {_				xpathHelper.assertString(request.getBodyAsBytes(), DEFAULT_ENCODING, value)__			}_		}__	};apply,the,xpath,and,assert,the,string,content,found;public,request,matcher,string,final,string,value,return,new,abstract,xpath,request,matcher,override,protected,void,match,internal,mock,client,http,request,request,throws,exception,xpath,helper,assert,string,request,get,body,as,bytes,value
XpathRequestMatchers -> protected XpathRequestMatchers(String expression, @Nullable Map<String, String> namespaces, Object ... args) 			throws XPathExpressionException;1495868221;Class constructor, not for direct instantiation. Use_{@link MockRestRequestMatchers#xpath(String, Object...)} or_{@link MockRestRequestMatchers#xpath(String, Map, Object...)}._@param expression the XPath expression_@param namespaces XML namespaces referenced in the XPath expression, or {@code null}_@param args arguments to parameterize the XPath expression with using the_formatting specifiers defined in {@link String#format(String, Object...)}_@throws XPathExpressionException;protected XpathRequestMatchers(String expression, @Nullable Map<String, String> namespaces, Object ... args)_			throws XPathExpressionException {__		this.xpathHelper = new XpathExpectationsHelper(expression, namespaces, args)__	};class,constructor,not,for,direct,instantiation,use,link,mock,rest,request,matchers,xpath,string,object,or,link,mock,rest,request,matchers,xpath,string,map,object,param,expression,the,xpath,expression,param,namespaces,xml,namespaces,referenced,in,the,xpath,expression,or,code,null,param,args,arguments,to,parameterize,the,xpath,expression,with,using,the,formatting,specifiers,defined,in,link,string,format,string,object,throws,xpath,expression,exception;protected,xpath,request,matchers,string,expression,nullable,map,string,string,namespaces,object,args,throws,xpath,expression,exception,this,xpath,helper,new,xpath,expectations,helper,expression,namespaces,args
XpathRequestMatchers -> protected XpathRequestMatchers(String expression, @Nullable Map<String, String> namespaces, Object ... args) 			throws XPathExpressionException;1516617801;Class constructor, not for direct instantiation. Use_{@link MockRestRequestMatchers#xpath(String, Object...)} or_{@link MockRestRequestMatchers#xpath(String, Map, Object...)}._@param expression the XPath expression_@param namespaces XML namespaces referenced in the XPath expression, or {@code null}_@param args arguments to parameterize the XPath expression with using the_formatting specifiers defined in {@link String#format(String, Object...)}_@throws XPathExpressionException if expression compilation failed;protected XpathRequestMatchers(String expression, @Nullable Map<String, String> namespaces, Object ... args)_			throws XPathExpressionException {__		this.xpathHelper = new XpathExpectationsHelper(expression, namespaces, args)__	};class,constructor,not,for,direct,instantiation,use,link,mock,rest,request,matchers,xpath,string,object,or,link,mock,rest,request,matchers,xpath,string,map,object,param,expression,the,xpath,expression,param,namespaces,xml,namespaces,referenced,in,the,xpath,expression,or,code,null,param,args,arguments,to,parameterize,the,xpath,expression,with,using,the,formatting,specifiers,defined,in,link,string,format,string,object,throws,xpath,expression,exception,if,expression,compilation,failed;protected,xpath,request,matchers,string,expression,nullable,map,string,string,namespaces,object,args,throws,xpath,expression,exception,this,xpath,helper,new,xpath,expectations,helper,expression,namespaces,args
XpathRequestMatchers -> protected XpathRequestMatchers(String expression, @Nullable Map<String, String> namespaces, Object ... args) 			throws XPathExpressionException;1530174524;Class constructor, not for direct instantiation. Use_{@link MockRestRequestMatchers#xpath(String, Object...)} or_{@link MockRestRequestMatchers#xpath(String, Map, Object...)}._@param expression the XPath expression_@param namespaces the XML namespaces referenced in the XPath expression, or {@code null}_@param args arguments to parameterize the XPath expression with using the_formatting specifiers defined in {@link String#format(String, Object...)}_@throws XPathExpressionException if expression compilation failed;protected XpathRequestMatchers(String expression, @Nullable Map<String, String> namespaces, Object ... args)_			throws XPathExpressionException {__		this.xpathHelper = new XpathExpectationsHelper(expression, namespaces, args)__	};class,constructor,not,for,direct,instantiation,use,link,mock,rest,request,matchers,xpath,string,object,or,link,mock,rest,request,matchers,xpath,string,map,object,param,expression,the,xpath,expression,param,namespaces,the,xml,namespaces,referenced,in,the,xpath,expression,or,code,null,param,args,arguments,to,parameterize,the,xpath,expression,with,using,the,formatting,specifiers,defined,in,link,string,format,string,object,throws,xpath,expression,exception,if,expression,compilation,failed;protected,xpath,request,matchers,string,expression,nullable,map,string,string,namespaces,object,args,throws,xpath,expression,exception,this,xpath,helper,new,xpath,expectations,helper,expression,namespaces,args
