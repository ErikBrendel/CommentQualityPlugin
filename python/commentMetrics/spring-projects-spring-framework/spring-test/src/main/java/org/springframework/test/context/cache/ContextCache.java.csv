# id;timestamp;commentText;codeText;commentWords;codeWords
ContextCache -> boolean contains(MergedContextConfiguration key)_;1429559310;Determine whether there is a cached context for the given key._@param key the context key (never {@code null})_@return {@code true} if the cache contains a context with the given key;boolean contains(MergedContextConfiguration key)_;determine,whether,there,is,a,cached,context,for,the,given,key,param,key,the,context,key,never,code,null,return,code,true,if,the,cache,contains,a,context,with,the,given,key;boolean,contains,merged,context,configuration,key
ContextCache -> boolean contains(MergedContextConfiguration key)_;1459796164;Determine whether there is a cached context for the given key._@param key the context key (never {@code null})_@return {@code true} if the cache contains a context with the given key;boolean contains(MergedContextConfiguration key)_;determine,whether,there,is,a,cached,context,for,the,given,key,param,key,the,context,key,never,code,null,return,code,true,if,the,cache,contains,a,context,with,the,given,key;boolean,contains,merged,context,configuration,key
ContextCache -> boolean contains(MergedContextConfiguration key)_;1467315591;Determine whether there is a cached context for the given key._@param key the context key (never {@code null})_@return {@code true} if the cache contains a context with the given key;boolean contains(MergedContextConfiguration key)_;determine,whether,there,is,a,cached,context,for,the,given,key,param,key,the,context,key,never,code,null,return,code,true,if,the,cache,contains,a,context,with,the,given,key;boolean,contains,merged,context,configuration,key
ContextCache -> boolean contains(MergedContextConfiguration key)_;1495868221;Determine whether there is a cached context for the given key._@param key the context key (never {@code null})_@return {@code true} if the cache contains a context with the given key;boolean contains(MergedContextConfiguration key)_;determine,whether,there,is,a,cached,context,for,the,given,key,param,key,the,context,key,never,code,null,return,code,true,if,the,cache,contains,a,context,with,the,given,key;boolean,contains,merged,context,configuration,key
ContextCache -> boolean contains(MergedContextConfiguration key)_;1516617801;Determine whether there is a cached context for the given key._@param key the context key (never {@code null})_@return {@code true} if the cache contains a context with the given key;boolean contains(MergedContextConfiguration key)_;determine,whether,there,is,a,cached,context,for,the,given,key,param,key,the,context,key,never,code,null,return,code,true,if,the,cache,contains,a,context,with,the,given,key;boolean,contains,merged,context,configuration,key
ContextCache -> int getMissCount()_;1429559310;Get the overall miss count for this cache._<p>A <em>miss</em> is any access to the cache that returns a {@code null}_context for the queried key.;int getMissCount()_;get,the,overall,miss,count,for,this,cache,p,a,em,miss,em,is,any,access,to,the,cache,that,returns,a,code,null,context,for,the,queried,key;int,get,miss,count
ContextCache -> int getMissCount()_;1459796164;Get the overall miss count for this cache._<p>A <em>miss</em> is any access to the cache that returns a {@code null}_context for the queried key.;int getMissCount()_;get,the,overall,miss,count,for,this,cache,p,a,em,miss,em,is,any,access,to,the,cache,that,returns,a,code,null,context,for,the,queried,key;int,get,miss,count
ContextCache -> int getMissCount()_;1467315591;Get the overall miss count for this cache._<p>A <em>miss</em> is any access to the cache that returns a {@code null}_context for the queried key.;int getMissCount()_;get,the,overall,miss,count,for,this,cache,p,a,em,miss,em,is,any,access,to,the,cache,that,returns,a,code,null,context,for,the,queried,key;int,get,miss,count
ContextCache -> int getMissCount()_;1495868221;Get the overall miss count for this cache._<p>A <em>miss</em> is any access to the cache that returns a {@code null}_context for the queried key.;int getMissCount()_;get,the,overall,miss,count,for,this,cache,p,a,em,miss,em,is,any,access,to,the,cache,that,returns,a,code,null,context,for,the,queried,key;int,get,miss,count
ContextCache -> int getMissCount()_;1516617801;Get the overall miss count for this cache._<p>A <em>miss</em> is any access to the cache that returns a {@code null}_context for the queried key.;int getMissCount()_;get,the,overall,miss,count,for,this,cache,p,a,em,miss,em,is,any,access,to,the,cache,that,returns,a,code,null,context,for,the,queried,key;int,get,miss,count
ContextCache -> void remove(MergedContextConfiguration key, HierarchyMode hierarchyMode)_;1429559310;Remove the context with the given key from the cache and explicitly_{@linkplain org.springframework.context.ConfigurableApplicationContext#close() close}_it if it is an instance of {@code ConfigurableApplicationContext}._<p>Generally speaking, this method should be called if the state of_a singleton bean has been modified, potentially affecting future_interaction with the context._<p>In addition, the semantics of the supplied {@code HierarchyMode} must_be honored. See the Javadoc for {@link HierarchyMode} for details._@param key the context key_ never {@code null}_@param hierarchyMode the hierarchy mode_ may be {@code null} if the context_is not part of a hierarchy;void remove(MergedContextConfiguration key, HierarchyMode hierarchyMode)_;remove,the,context,with,the,given,key,from,the,cache,and,explicitly,linkplain,org,springframework,context,configurable,application,context,close,close,it,if,it,is,an,instance,of,code,configurable,application,context,p,generally,speaking,this,method,should,be,called,if,the,state,of,a,singleton,bean,has,been,modified,potentially,affecting,future,interaction,with,the,context,p,in,addition,the,semantics,of,the,supplied,code,hierarchy,mode,must,be,honored,see,the,javadoc,for,link,hierarchy,mode,for,details,param,key,the,context,key,never,code,null,param,hierarchy,mode,the,hierarchy,mode,may,be,code,null,if,the,context,is,not,part,of,a,hierarchy;void,remove,merged,context,configuration,key,hierarchy,mode,hierarchy,mode
ContextCache -> void remove(MergedContextConfiguration key, HierarchyMode hierarchyMode)_;1459796164;Remove the context with the given key from the cache and explicitly_{@linkplain org.springframework.context.ConfigurableApplicationContext#close() close}_it if it is an instance of {@code ConfigurableApplicationContext}._<p>Generally speaking, this method should be called to properly evict_a context from the cache (e.g., due to a custom eviction policy) or if_the state of a singleton bean has been modified, potentially affecting_future interaction with the context._<p>In addition, the semantics of the supplied {@code HierarchyMode} must_be honored. See the Javadoc for {@link HierarchyMode} for details._@param key the context key_ never {@code null}_@param hierarchyMode the hierarchy mode_ may be {@code null} if the context_is not part of a hierarchy;void remove(MergedContextConfiguration key, HierarchyMode hierarchyMode)_;remove,the,context,with,the,given,key,from,the,cache,and,explicitly,linkplain,org,springframework,context,configurable,application,context,close,close,it,if,it,is,an,instance,of,code,configurable,application,context,p,generally,speaking,this,method,should,be,called,to,properly,evict,a,context,from,the,cache,e,g,due,to,a,custom,eviction,policy,or,if,the,state,of,a,singleton,bean,has,been,modified,potentially,affecting,future,interaction,with,the,context,p,in,addition,the,semantics,of,the,supplied,code,hierarchy,mode,must,be,honored,see,the,javadoc,for,link,hierarchy,mode,for,details,param,key,the,context,key,never,code,null,param,hierarchy,mode,the,hierarchy,mode,may,be,code,null,if,the,context,is,not,part,of,a,hierarchy;void,remove,merged,context,configuration,key,hierarchy,mode,hierarchy,mode
ContextCache -> void remove(MergedContextConfiguration key, HierarchyMode hierarchyMode)_;1467315591;Remove the context with the given key from the cache and explicitly_{@linkplain org.springframework.context.ConfigurableApplicationContext#close() close}_it if it is an instance of {@code ConfigurableApplicationContext}._<p>Generally speaking, this method should be called to properly evict_a context from the cache (e.g., due to a custom eviction policy) or if_the state of a singleton bean has been modified, potentially affecting_future interaction with the context._<p>In addition, the semantics of the supplied {@code HierarchyMode} must_be honored. See the Javadoc for {@link HierarchyMode} for details._@param key the context key_ never {@code null}_@param hierarchyMode the hierarchy mode_ may be {@code null} if the context_is not part of a hierarchy;void remove(MergedContextConfiguration key, HierarchyMode hierarchyMode)_;remove,the,context,with,the,given,key,from,the,cache,and,explicitly,linkplain,org,springframework,context,configurable,application,context,close,close,it,if,it,is,an,instance,of,code,configurable,application,context,p,generally,speaking,this,method,should,be,called,to,properly,evict,a,context,from,the,cache,e,g,due,to,a,custom,eviction,policy,or,if,the,state,of,a,singleton,bean,has,been,modified,potentially,affecting,future,interaction,with,the,context,p,in,addition,the,semantics,of,the,supplied,code,hierarchy,mode,must,be,honored,see,the,javadoc,for,link,hierarchy,mode,for,details,param,key,the,context,key,never,code,null,param,hierarchy,mode,the,hierarchy,mode,may,be,code,null,if,the,context,is,not,part,of,a,hierarchy;void,remove,merged,context,configuration,key,hierarchy,mode,hierarchy,mode
ContextCache -> void reset()_;1429559310;Reset all state maintained by this cache including statistics._@see #clear()_@see #clearStatistics();void reset()_;reset,all,state,maintained,by,this,cache,including,statistics,see,clear,see,clear,statistics;void,reset
ContextCache -> void reset()_;1459796164;Reset all state maintained by this cache including statistics._@see #clear()_@see #clearStatistics();void reset()_;reset,all,state,maintained,by,this,cache,including,statistics,see,clear,see,clear,statistics;void,reset
ContextCache -> void reset()_;1467315591;Reset all state maintained by this cache including statistics._@see #clear()_@see #clearStatistics();void reset()_;reset,all,state,maintained,by,this,cache,including,statistics,see,clear,see,clear,statistics;void,reset
ContextCache -> void reset()_;1495868221;Reset all state maintained by this cache including statistics._@see #clear()_@see #clearStatistics();void reset()_;reset,all,state,maintained,by,this,cache,including,statistics,see,clear,see,clear,statistics;void,reset
ContextCache -> void reset()_;1516617801;Reset all state maintained by this cache including statistics._@see #clear()_@see #clearStatistics();void reset()_;reset,all,state,maintained,by,this,cache,including,statistics,see,clear,see,clear,statistics;void,reset
ContextCache -> ApplicationContext get(MergedContextConfiguration key)_;1429559310;Obtain a cached {@code ApplicationContext} for the given key._<p>The {@link #getHitCount() hit} and {@link #getMissCount() miss} counts_must be updated accordingly._@param key the context key (never {@code null})_@return the corresponding {@code ApplicationContext} instance, or {@code null}_if not found in the cache_@see #remove;ApplicationContext get(MergedContextConfiguration key)_;obtain,a,cached,code,application,context,for,the,given,key,p,the,link,get,hit,count,hit,and,link,get,miss,count,miss,counts,must,be,updated,accordingly,param,key,the,context,key,never,code,null,return,the,corresponding,code,application,context,instance,or,code,null,if,not,found,in,the,cache,see,remove;application,context,get,merged,context,configuration,key
ContextCache -> ApplicationContext get(MergedContextConfiguration key)_;1459796164;Obtain a cached {@code ApplicationContext} for the given key._<p>The {@linkplain #getHitCount() hit} and {@linkplain #getMissCount() miss}_counts must be updated accordingly._@param key the context key (never {@code null})_@return the corresponding {@code ApplicationContext} instance, or {@code null}_if not found in the cache_@see #remove;ApplicationContext get(MergedContextConfiguration key)_;obtain,a,cached,code,application,context,for,the,given,key,p,the,linkplain,get,hit,count,hit,and,linkplain,get,miss,count,miss,counts,must,be,updated,accordingly,param,key,the,context,key,never,code,null,return,the,corresponding,code,application,context,instance,or,code,null,if,not,found,in,the,cache,see,remove;application,context,get,merged,context,configuration,key
ContextCache -> ApplicationContext get(MergedContextConfiguration key)_;1467315591;Obtain a cached {@code ApplicationContext} for the given key._<p>The {@linkplain #getHitCount() hit} and {@linkplain #getMissCount() miss}_counts must be updated accordingly._@param key the context key (never {@code null})_@return the corresponding {@code ApplicationContext} instance, or {@code null}_if not found in the cache_@see #remove;ApplicationContext get(MergedContextConfiguration key)_;obtain,a,cached,code,application,context,for,the,given,key,p,the,linkplain,get,hit,count,hit,and,linkplain,get,miss,count,miss,counts,must,be,updated,accordingly,param,key,the,context,key,never,code,null,return,the,corresponding,code,application,context,instance,or,code,null,if,not,found,in,the,cache,see,remove;application,context,get,merged,context,configuration,key
ContextCache -> void clear()_;1429559310;Clear all contexts from the cache, clearing context hierarchy information as well.;void clear()_;clear,all,contexts,from,the,cache,clearing,context,hierarchy,information,as,well;void,clear
ContextCache -> void clear()_;1459796164;Clear all contexts from the cache, clearing context hierarchy information as well.;void clear()_;clear,all,contexts,from,the,cache,clearing,context,hierarchy,information,as,well;void,clear
ContextCache -> void clear()_;1467315591;Clear all contexts from the cache, clearing context hierarchy information as well.;void clear()_;clear,all,contexts,from,the,cache,clearing,context,hierarchy,information,as,well;void,clear
ContextCache -> void clear()_;1495868221;Clear all contexts from the cache, clearing context hierarchy information as well.;void clear()_;clear,all,contexts,from,the,cache,clearing,context,hierarchy,information,as,well;void,clear
ContextCache -> void clear()_;1516617801;Clear all contexts from the cache, clearing context hierarchy information as well.;void clear()_;clear,all,contexts,from,the,cache,clearing,context,hierarchy,information,as,well;void,clear
ContextCache -> void put(MergedContextConfiguration key, ApplicationContext context)_;1429559310;Explicitly add an {@code ApplicationContext} instance to the cache_under the given key._@param key the context key (never {@code null})_@param context the {@code ApplicationContext} instance (never {@code null});void put(MergedContextConfiguration key, ApplicationContext context)_;explicitly,add,an,code,application,context,instance,to,the,cache,under,the,given,key,param,key,the,context,key,never,code,null,param,context,the,code,application,context,instance,never,code,null;void,put,merged,context,configuration,key,application,context,context
ContextCache -> void put(MergedContextConfiguration key, ApplicationContext context)_;1459796164;Explicitly add an {@code ApplicationContext} instance to the cache_under the given key, potentially honoring a custom eviction policy._@param key the context key (never {@code null})_@param context the {@code ApplicationContext} instance (never {@code null});void put(MergedContextConfiguration key, ApplicationContext context)_;explicitly,add,an,code,application,context,instance,to,the,cache,under,the,given,key,potentially,honoring,a,custom,eviction,policy,param,key,the,context,key,never,code,null,param,context,the,code,application,context,instance,never,code,null;void,put,merged,context,configuration,key,application,context,context
ContextCache -> void put(MergedContextConfiguration key, ApplicationContext context)_;1467315591;Explicitly add an {@code ApplicationContext} instance to the cache_under the given key, potentially honoring a custom eviction policy._@param key the context key (never {@code null})_@param context the {@code ApplicationContext} instance (never {@code null});void put(MergedContextConfiguration key, ApplicationContext context)_;explicitly,add,an,code,application,context,instance,to,the,cache,under,the,given,key,potentially,honoring,a,custom,eviction,policy,param,key,the,context,key,never,code,null,param,context,the,code,application,context,instance,never,code,null;void,put,merged,context,configuration,key,application,context,context
ContextCache -> void put(MergedContextConfiguration key, ApplicationContext context)_;1495868221;Explicitly add an {@code ApplicationContext} instance to the cache_under the given key, potentially honoring a custom eviction policy._@param key the context key (never {@code null})_@param context the {@code ApplicationContext} instance (never {@code null});void put(MergedContextConfiguration key, ApplicationContext context)_;explicitly,add,an,code,application,context,instance,to,the,cache,under,the,given,key,potentially,honoring,a,custom,eviction,policy,param,key,the,context,key,never,code,null,param,context,the,code,application,context,instance,never,code,null;void,put,merged,context,configuration,key,application,context,context
ContextCache -> void put(MergedContextConfiguration key, ApplicationContext context)_;1516617801;Explicitly add an {@code ApplicationContext} instance to the cache_under the given key, potentially honoring a custom eviction policy._@param key the context key (never {@code null})_@param context the {@code ApplicationContext} instance (never {@code null});void put(MergedContextConfiguration key, ApplicationContext context)_;explicitly,add,an,code,application,context,instance,to,the,cache,under,the,given,key,potentially,honoring,a,custom,eviction,policy,param,key,the,context,key,never,code,null,param,context,the,code,application,context,instance,never,code,null;void,put,merged,context,configuration,key,application,context,context
ContextCache -> @Nullable 	ApplicationContext get(MergedContextConfiguration key)_;1495868221;Obtain a cached {@code ApplicationContext} for the given key._<p>The {@linkplain #getHitCount() hit} and {@linkplain #getMissCount() miss}_counts must be updated accordingly._@param key the context key (never {@code null})_@return the corresponding {@code ApplicationContext} instance, or {@code null}_if not found in the cache_@see #remove;@Nullable_	ApplicationContext get(MergedContextConfiguration key)_;obtain,a,cached,code,application,context,for,the,given,key,p,the,linkplain,get,hit,count,hit,and,linkplain,get,miss,count,miss,counts,must,be,updated,accordingly,param,key,the,context,key,never,code,null,return,the,corresponding,code,application,context,instance,or,code,null,if,not,found,in,the,cache,see,remove;nullable,application,context,get,merged,context,configuration,key
ContextCache -> @Nullable 	ApplicationContext get(MergedContextConfiguration key)_;1516617801;Obtain a cached {@code ApplicationContext} for the given key._<p>The {@linkplain #getHitCount() hit} and {@linkplain #getMissCount() miss}_counts must be updated accordingly._@param key the context key (never {@code null})_@return the corresponding {@code ApplicationContext} instance, or {@code null}_if not found in the cache_@see #remove;@Nullable_	ApplicationContext get(MergedContextConfiguration key)_;obtain,a,cached,code,application,context,for,the,given,key,p,the,linkplain,get,hit,count,hit,and,linkplain,get,miss,count,miss,counts,must,be,updated,accordingly,param,key,the,context,key,never,code,null,return,the,corresponding,code,application,context,instance,or,code,null,if,not,found,in,the,cache,see,remove;nullable,application,context,get,merged,context,configuration,key
ContextCache -> int getHitCount()_;1429559310;Get the overall hit count for this cache._<p>A <em>hit</em> is any access to the cache that returns a non-null_context for the queried key.;int getHitCount()_;get,the,overall,hit,count,for,this,cache,p,a,em,hit,em,is,any,access,to,the,cache,that,returns,a,non,null,context,for,the,queried,key;int,get,hit,count
ContextCache -> int getHitCount()_;1459796164;Get the overall hit count for this cache._<p>A <em>hit</em> is any access to the cache that returns a non-null_context for the queried key.;int getHitCount()_;get,the,overall,hit,count,for,this,cache,p,a,em,hit,em,is,any,access,to,the,cache,that,returns,a,non,null,context,for,the,queried,key;int,get,hit,count
ContextCache -> int getHitCount()_;1467315591;Get the overall hit count for this cache._<p>A <em>hit</em> is any access to the cache that returns a non-null_context for the queried key.;int getHitCount()_;get,the,overall,hit,count,for,this,cache,p,a,em,hit,em,is,any,access,to,the,cache,that,returns,a,non,null,context,for,the,queried,key;int,get,hit,count
ContextCache -> int getHitCount()_;1495868221;Get the overall hit count for this cache._<p>A <em>hit</em> is any access to the cache that returns a non-null_context for the queried key.;int getHitCount()_;get,the,overall,hit,count,for,this,cache,p,a,em,hit,em,is,any,access,to,the,cache,that,returns,a,non,null,context,for,the,queried,key;int,get,hit,count
ContextCache -> int getHitCount()_;1516617801;Get the overall hit count for this cache._<p>A <em>hit</em> is any access to the cache that returns a non-null_context for the queried key.;int getHitCount()_;get,the,overall,hit,count,for,this,cache,p,a,em,hit,em,is,any,access,to,the,cache,that,returns,a,non,null,context,for,the,queried,key;int,get,hit,count
ContextCache -> void logStatistics()_;1429559310;Log the statistics for this {@code ContextCache} at {@code DEBUG} level_using the {@value #CONTEXT_CACHE_LOGGING_CATEGORY} logging category._<p>The following information should be logged._<ul>_<li>name of the concrete {@code ContextCache} implementation</li>_<li>{@linkplain #size}</li>_<li>{@linkplain #getParentContextCount() parent context count}</li>_<li>{@linkplain #getHitCount() hit count}</li>_<li>{@linkplain #getMissCount() miss count}</li>_<li>any other information useful for monitoring the state of this cache</li>_</ul>;void logStatistics()_;log,the,statistics,for,this,code,context,cache,at,code,debug,level,using,the,value,logging,category,p,the,following,information,should,be,logged,ul,li,name,of,the,concrete,code,context,cache,implementation,li,li,linkplain,size,li,li,linkplain,get,parent,context,count,parent,context,count,li,li,linkplain,get,hit,count,hit,count,li,li,linkplain,get,miss,count,miss,count,li,li,any,other,information,useful,for,monitoring,the,state,of,this,cache,li,ul;void,log,statistics
ContextCache -> void logStatistics()_;1459796164;Log the statistics for this {@code ContextCache} at {@code DEBUG} level_using the {@value #CONTEXT_CACHE_LOGGING_CATEGORY} logging category._<p>The following information should be logged._<ul>_<li>name of the concrete {@code ContextCache} implementation</li>_<li>{@linkplain #size}</li>_<li>{@linkplain #getParentContextCount() parent context count}</li>_<li>{@linkplain #getHitCount() hit count}</li>_<li>{@linkplain #getMissCount() miss count}</li>_<li>any other information useful for monitoring the state of this cache</li>_</ul>;void logStatistics()_;log,the,statistics,for,this,code,context,cache,at,code,debug,level,using,the,value,logging,category,p,the,following,information,should,be,logged,ul,li,name,of,the,concrete,code,context,cache,implementation,li,li,linkplain,size,li,li,linkplain,get,parent,context,count,parent,context,count,li,li,linkplain,get,hit,count,hit,count,li,li,linkplain,get,miss,count,miss,count,li,li,any,other,information,useful,for,monitoring,the,state,of,this,cache,li,ul;void,log,statistics
ContextCache -> void logStatistics()_;1467315591;Log the statistics for this {@code ContextCache} at {@code DEBUG} level_using the {@value #CONTEXT_CACHE_LOGGING_CATEGORY} logging category._<p>The following information should be logged._<ul>_<li>name of the concrete {@code ContextCache} implementation</li>_<li>{@linkplain #size}</li>_<li>{@linkplain #getParentContextCount() parent context count}</li>_<li>{@linkplain #getHitCount() hit count}</li>_<li>{@linkplain #getMissCount() miss count}</li>_<li>any other information useful for monitoring the state of this cache</li>_</ul>;void logStatistics()_;log,the,statistics,for,this,code,context,cache,at,code,debug,level,using,the,value,logging,category,p,the,following,information,should,be,logged,ul,li,name,of,the,concrete,code,context,cache,implementation,li,li,linkplain,size,li,li,linkplain,get,parent,context,count,parent,context,count,li,li,linkplain,get,hit,count,hit,count,li,li,linkplain,get,miss,count,miss,count,li,li,any,other,information,useful,for,monitoring,the,state,of,this,cache,li,ul;void,log,statistics
ContextCache -> void logStatistics()_;1495868221;Log the statistics for this {@code ContextCache} at {@code DEBUG} level_using the {@value #CONTEXT_CACHE_LOGGING_CATEGORY} logging category._<p>The following information should be logged._<ul>_<li>name of the concrete {@code ContextCache} implementation</li>_<li>{@linkplain #size}</li>_<li>{@linkplain #getParentContextCount() parent context count}</li>_<li>{@linkplain #getHitCount() hit count}</li>_<li>{@linkplain #getMissCount() miss count}</li>_<li>any other information useful for monitoring the state of this cache</li>_</ul>;void logStatistics()_;log,the,statistics,for,this,code,context,cache,at,code,debug,level,using,the,value,logging,category,p,the,following,information,should,be,logged,ul,li,name,of,the,concrete,code,context,cache,implementation,li,li,linkplain,size,li,li,linkplain,get,parent,context,count,parent,context,count,li,li,linkplain,get,hit,count,hit,count,li,li,linkplain,get,miss,count,miss,count,li,li,any,other,information,useful,for,monitoring,the,state,of,this,cache,li,ul;void,log,statistics
ContextCache -> void logStatistics()_;1516617801;Log the statistics for this {@code ContextCache} at {@code DEBUG} level_using the {@value #CONTEXT_CACHE_LOGGING_CATEGORY} logging category._<p>The following information should be logged._<ul>_<li>name of the concrete {@code ContextCache} implementation</li>_<li>{@linkplain #size}</li>_<li>{@linkplain #getParentContextCount() parent context count}</li>_<li>{@linkplain #getHitCount() hit count}</li>_<li>{@linkplain #getMissCount() miss count}</li>_<li>any other information useful for monitoring the state of this cache</li>_</ul>;void logStatistics()_;log,the,statistics,for,this,code,context,cache,at,code,debug,level,using,the,value,logging,category,p,the,following,information,should,be,logged,ul,li,name,of,the,concrete,code,context,cache,implementation,li,li,linkplain,size,li,li,linkplain,get,parent,context,count,parent,context,count,li,li,linkplain,get,hit,count,hit,count,li,li,linkplain,get,miss,count,miss,count,li,li,any,other,information,useful,for,monitoring,the,state,of,this,cache,li,ul;void,log,statistics
ContextCache -> void remove(MergedContextConfiguration key, @Nullable HierarchyMode hierarchyMode)_;1495868221;Remove the context with the given key from the cache and explicitly_{@linkplain org.springframework.context.ConfigurableApplicationContext#close() close}_it if it is an instance of {@code ConfigurableApplicationContext}._<p>Generally speaking, this method should be called to properly evict_a context from the cache (e.g., due to a custom eviction policy) or if_the state of a singleton bean has been modified, potentially affecting_future interaction with the context._<p>In addition, the semantics of the supplied {@code HierarchyMode} must_be honored. See the Javadoc for {@link HierarchyMode} for details._@param key the context key_ never {@code null}_@param hierarchyMode the hierarchy mode_ may be {@code null} if the context_is not part of a hierarchy;void remove(MergedContextConfiguration key, @Nullable HierarchyMode hierarchyMode)_;remove,the,context,with,the,given,key,from,the,cache,and,explicitly,linkplain,org,springframework,context,configurable,application,context,close,close,it,if,it,is,an,instance,of,code,configurable,application,context,p,generally,speaking,this,method,should,be,called,to,properly,evict,a,context,from,the,cache,e,g,due,to,a,custom,eviction,policy,or,if,the,state,of,a,singleton,bean,has,been,modified,potentially,affecting,future,interaction,with,the,context,p,in,addition,the,semantics,of,the,supplied,code,hierarchy,mode,must,be,honored,see,the,javadoc,for,link,hierarchy,mode,for,details,param,key,the,context,key,never,code,null,param,hierarchy,mode,the,hierarchy,mode,may,be,code,null,if,the,context,is,not,part,of,a,hierarchy;void,remove,merged,context,configuration,key,nullable,hierarchy,mode,hierarchy,mode
ContextCache -> void remove(MergedContextConfiguration key, @Nullable HierarchyMode hierarchyMode)_;1516617801;Remove the context with the given key from the cache and explicitly_{@linkplain org.springframework.context.ConfigurableApplicationContext#close() close}_it if it is an instance of {@code ConfigurableApplicationContext}._<p>Generally speaking, this method should be called to properly evict_a context from the cache (e.g., due to a custom eviction policy) or if_the state of a singleton bean has been modified, potentially affecting_future interaction with the context._<p>In addition, the semantics of the supplied {@code HierarchyMode} must_be honored. See the Javadoc for {@link HierarchyMode} for details._@param key the context key_ never {@code null}_@param hierarchyMode the hierarchy mode_ may be {@code null} if the context_is not part of a hierarchy;void remove(MergedContextConfiguration key, @Nullable HierarchyMode hierarchyMode)_;remove,the,context,with,the,given,key,from,the,cache,and,explicitly,linkplain,org,springframework,context,configurable,application,context,close,close,it,if,it,is,an,instance,of,code,configurable,application,context,p,generally,speaking,this,method,should,be,called,to,properly,evict,a,context,from,the,cache,e,g,due,to,a,custom,eviction,policy,or,if,the,state,of,a,singleton,bean,has,been,modified,potentially,affecting,future,interaction,with,the,context,p,in,addition,the,semantics,of,the,supplied,code,hierarchy,mode,must,be,honored,see,the,javadoc,for,link,hierarchy,mode,for,details,param,key,the,context,key,never,code,null,param,hierarchy,mode,the,hierarchy,mode,may,be,code,null,if,the,context,is,not,part,of,a,hierarchy;void,remove,merged,context,configuration,key,nullable,hierarchy,mode,hierarchy,mode
ContextCache -> int getParentContextCount()_;1429559310;Determine the number of parent contexts currently tracked within the cache.;int getParentContextCount()_;determine,the,number,of,parent,contexts,currently,tracked,within,the,cache;int,get,parent,context,count
ContextCache -> int getParentContextCount()_;1459796164;Determine the number of parent contexts currently tracked within the cache.;int getParentContextCount()_;determine,the,number,of,parent,contexts,currently,tracked,within,the,cache;int,get,parent,context,count
ContextCache -> int getParentContextCount()_;1467315591;Determine the number of parent contexts currently tracked within the cache.;int getParentContextCount()_;determine,the,number,of,parent,contexts,currently,tracked,within,the,cache;int,get,parent,context,count
ContextCache -> int getParentContextCount()_;1495868221;Determine the number of parent contexts currently tracked within the cache.;int getParentContextCount()_;determine,the,number,of,parent,contexts,currently,tracked,within,the,cache;int,get,parent,context,count
ContextCache -> int getParentContextCount()_;1516617801;Determine the number of parent contexts currently tracked within the cache.;int getParentContextCount()_;determine,the,number,of,parent,contexts,currently,tracked,within,the,cache;int,get,parent,context,count
ContextCache -> int size()_;1429559310;Determine the number of contexts currently stored in the cache._<p>If the cache contains more than {@code Integer.MAX_VALUE} elements,_this method must return {@code Integer.MAX_VALUE}.;int size()_;determine,the,number,of,contexts,currently,stored,in,the,cache,p,if,the,cache,contains,more,than,code,integer,elements,this,method,must,return,code,integer;int,size
ContextCache -> int size()_;1459796164;Determine the number of contexts currently stored in the cache._<p>If the cache contains more than {@code Integer.MAX_VALUE} elements,_this method must return {@code Integer.MAX_VALUE}.;int size()_;determine,the,number,of,contexts,currently,stored,in,the,cache,p,if,the,cache,contains,more,than,code,integer,elements,this,method,must,return,code,integer;int,size
ContextCache -> int size()_;1467315591;Determine the number of contexts currently stored in the cache._<p>If the cache contains more than {@code Integer.MAX_VALUE} elements,_this method must return {@code Integer.MAX_VALUE}.;int size()_;determine,the,number,of,contexts,currently,stored,in,the,cache,p,if,the,cache,contains,more,than,code,integer,elements,this,method,must,return,code,integer;int,size
ContextCache -> int size()_;1495868221;Determine the number of contexts currently stored in the cache._<p>If the cache contains more than {@code Integer.MAX_VALUE} elements,_this method must return {@code Integer.MAX_VALUE}.;int size()_;determine,the,number,of,contexts,currently,stored,in,the,cache,p,if,the,cache,contains,more,than,code,integer,elements,this,method,must,return,code,integer;int,size
ContextCache -> int size()_;1516617801;Determine the number of contexts currently stored in the cache._<p>If the cache contains more than {@code Integer.MAX_VALUE} elements,_this method must return {@code Integer.MAX_VALUE}.;int size()_;determine,the,number,of,contexts,currently,stored,in,the,cache,p,if,the,cache,contains,more,than,code,integer,elements,this,method,must,return,code,integer;int,size
ContextCache -> void clearStatistics()_;1429559310;Clear hit and miss count statistics for the cache (i.e., reset counters to zero).;void clearStatistics()_;clear,hit,and,miss,count,statistics,for,the,cache,i,e,reset,counters,to,zero;void,clear,statistics
ContextCache -> void clearStatistics()_;1459796164;Clear hit and miss count statistics for the cache (i.e., reset counters to zero).;void clearStatistics()_;clear,hit,and,miss,count,statistics,for,the,cache,i,e,reset,counters,to,zero;void,clear,statistics
ContextCache -> void clearStatistics()_;1467315591;Clear hit and miss count statistics for the cache (i.e., reset counters to zero).;void clearStatistics()_;clear,hit,and,miss,count,statistics,for,the,cache,i,e,reset,counters,to,zero;void,clear,statistics
ContextCache -> void clearStatistics()_;1495868221;Clear hit and miss count statistics for the cache (i.e., reset counters to zero).;void clearStatistics()_;clear,hit,and,miss,count,statistics,for,the,cache,i,e,reset,counters,to,zero;void,clear,statistics
ContextCache -> void clearStatistics()_;1516617801;Clear hit and miss count statistics for the cache (i.e., reset counters to zero).;void clearStatistics()_;clear,hit,and,miss,count,statistics,for,the,cache,i,e,reset,counters,to,zero;void,clear,statistics
