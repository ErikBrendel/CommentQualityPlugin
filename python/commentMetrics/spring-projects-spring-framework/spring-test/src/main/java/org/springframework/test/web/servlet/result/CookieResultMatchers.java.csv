# id;timestamp;commentText;codeText;commentWords;codeWords
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher);1383669853;Assert a cookie's maxAge with a Hamcrest {@link Matcher}.;public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("No cookie with name: " + name, cookie != null)__				assertThat("Response cookie maxAge", cookie.getMaxAge(), matcher)__			}_		}__	};assert,a,cookie,s,max,age,with,a,hamcrest,link,matcher;public,result,matcher,max,age,final,string,name,final,matcher,super,integer,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null,assert,that,response,cookie,max,age,cookie,get,max,age,matcher
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher);1413848647;Assert a cookie's maxAge with a Hamcrest {@link Matcher}.;public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("No cookie with name: " + name, cookie != null)__				assertThat("Response cookie maxAge", cookie.getMaxAge(), matcher)__			}_		}__	};assert,a,cookie,s,max,age,with,a,hamcrest,link,matcher;public,result,matcher,max,age,final,string,name,final,matcher,super,integer,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null,assert,that,response,cookie,max,age,cookie,get,max,age,matcher
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher);1427238287;Assert a cookie's maxAge with a Hamcrest {@link Matcher}.;public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("No cookie with name: " + name, cookie != null)__				assertThat("Response cookie maxAge", cookie.getMaxAge(), matcher)__			}_		}__	};assert,a,cookie,s,max,age,with,a,hamcrest,link,matcher;public,result,matcher,max,age,final,string,name,final,matcher,super,integer,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null,assert,that,response,cookie,max,age,cookie,get,max,age,matcher
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher);1437424890;Assert a cookie's maxAge with a Hamcrest {@link Matcher}.;public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("No cookie with name: " + name, cookie != null)__				assertThat("Response cookie maxAge", cookie.getMaxAge(), matcher)__			}_		}__	};assert,a,cookie,s,max,age,with,a,hamcrest,link,matcher;public,result,matcher,max,age,final,string,name,final,matcher,super,integer,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null,assert,that,response,cookie,max,age,cookie,get,max,age,matcher
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher);1493235170;Assert a cookie's maxAge with a Hamcrest {@link Matcher}.;public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("No cookie with name '" + name + "'", cookie != null)__			assertThat("Response cookie '" + name + "' maxAge", cookie.getMaxAge(), matcher)__		}__	};assert,a,cookie,s,max,age,with,a,hamcrest,link,matcher;public,result,matcher,max,age,final,string,name,final,matcher,super,integer,matcher,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null,assert,that,response,cookie,name,max,age,cookie,get,max,age,matcher
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher);1493299207;Assert a cookie's maxAge with a Hamcrest {@link Matcher}.;public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("No cookie with name '" + name + "'", cookie != null)__			assertThat("Response cookie '" + name + "' maxAge", cookie.getMaxAge(), matcher)__		}__	};assert,a,cookie,s,max,age,with,a,hamcrest,link,matcher;public,result,matcher,max,age,final,string,name,final,matcher,super,integer,matcher,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null,assert,that,response,cookie,name,max,age,cookie,get,max,age,matcher
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher);1493321531;Assert a cookie's maxAge with a Hamcrest {@link Matcher}.;public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("No cookie with name '" + name + "'", cookie != null)__			assertThat("Response cookie '" + name + "' maxAge", cookie.getMaxAge(), matcher)__		}__	};assert,a,cookie,s,max,age,with,a,hamcrest,link,matcher;public,result,matcher,max,age,final,string,name,final,matcher,super,integer,matcher,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null,assert,that,response,cookie,name,max,age,cookie,get,max,age,matcher
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher);1493929656;Assert a cookie's maxAge with a Hamcrest {@link Matcher}.;public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' maxAge", cookie.getMaxAge(), matcher)__		}__	};assert,a,cookie,s,max,age,with,a,hamcrest,link,matcher;public,result,matcher,max,age,final,string,name,final,matcher,super,integer,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,max,age,cookie,get,max,age,matcher
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher);1496955179;Assert a cookie's maxAge with a Hamcrest {@link Matcher}.;public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' maxAge", cookie.getMaxAge(), matcher)__		}__	};assert,a,cookie,s,max,age,with,a,hamcrest,link,matcher;public,result,matcher,max,age,final,string,name,final,matcher,super,integer,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,max,age,cookie,get,max,age,matcher
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher);1530174524;Assert a cookie's maxAge with a Hamcrest {@link Matcher}.;public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' maxAge", cookie.getMaxAge(), matcher)__		}__	};assert,a,cookie,s,max,age,with,a,hamcrest,link,matcher;public,result,matcher,max,age,final,string,name,final,matcher,super,integer,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,max,age,cookie,get,max,age,matcher
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher);1530174524;Assert a cookie's maxAge with a Hamcrest {@link Matcher}.;public ResultMatcher maxAge(final String name, final Matcher<? super Integer> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' maxAge", cookie.getMaxAge(), matcher)__		}__	};assert,a,cookie,s,max,age,with,a,hamcrest,link,matcher;public,result,matcher,max,age,final,string,name,final,matcher,super,integer,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,max,age,cookie,get,max,age,matcher
CookieResultMatchers -> public ResultMatcher secure(final String name, final boolean secure);1383669853;Assert whether the cookie must be sent over a secure protocol or not.;public ResultMatcher secure(final String name, final boolean secure) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertEquals("Response cookie secure", secure, cookie.getSecure())__			}_		}__	};assert,whether,the,cookie,must,be,sent,over,a,secure,protocol,or,not;public,result,matcher,secure,final,string,name,final,boolean,secure,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,secure,secure,cookie,get,secure
CookieResultMatchers -> public ResultMatcher secure(final String name, final boolean secure);1413848647;Assert whether the cookie must be sent over a secure protocol or not.;public ResultMatcher secure(final String name, final boolean secure) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertEquals("Response cookie secure", secure, cookie.getSecure())__			}_		}__	};assert,whether,the,cookie,must,be,sent,over,a,secure,protocol,or,not;public,result,matcher,secure,final,string,name,final,boolean,secure,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,secure,secure,cookie,get,secure
CookieResultMatchers -> public ResultMatcher secure(final String name, final boolean secure);1427238287;Assert whether the cookie must be sent over a secure protocol or not.;public ResultMatcher secure(final String name, final boolean secure) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertEquals("Response cookie secure", secure, cookie.getSecure())__			}_		}__	};assert,whether,the,cookie,must,be,sent,over,a,secure,protocol,or,not;public,result,matcher,secure,final,string,name,final,boolean,secure,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,secure,secure,cookie,get,secure
CookieResultMatchers -> public ResultMatcher secure(final String name, final boolean secure);1437424890;Assert whether the cookie must be sent over a secure protocol or not.;public ResultMatcher secure(final String name, final boolean secure) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertEquals("Response cookie secure", secure, cookie.getSecure())__			}_		}__	};assert,whether,the,cookie,must,be,sent,over,a,secure,protocol,or,not;public,result,matcher,secure,final,string,name,final,boolean,secure,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,secure,secure,cookie,get,secure
CookieResultMatchers -> public ResultMatcher secure(final String name, final boolean secure);1493235170;Assert whether the cookie must be sent over a secure protocol or not.;public ResultMatcher secure(final String name, final boolean secure) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertEquals("Response cookie '" + name + "' secure", secure, cookie.getSecure())__		}__	};assert,whether,the,cookie,must,be,sent,over,a,secure,protocol,or,not;public,result,matcher,secure,final,string,name,final,boolean,secure,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,name,secure,secure,cookie,get,secure
CookieResultMatchers -> public ResultMatcher secure(final String name, final boolean secure);1493299207;Assert whether the cookie must be sent over a secure protocol or not.;public ResultMatcher secure(final String name, final boolean secure) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertEquals("Response cookie '" + name + "' secure", secure, cookie.getSecure())__		}__	};assert,whether,the,cookie,must,be,sent,over,a,secure,protocol,or,not;public,result,matcher,secure,final,string,name,final,boolean,secure,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,name,secure,secure,cookie,get,secure
CookieResultMatchers -> public ResultMatcher secure(final String name, final boolean secure);1493321531;Assert whether the cookie must be sent over a secure protocol or not.;public ResultMatcher secure(final String name, final boolean secure) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertEquals("Response cookie '" + name + "' secure", secure, cookie.getSecure())__		}__	};assert,whether,the,cookie,must,be,sent,over,a,secure,protocol,or,not;public,result,matcher,secure,final,string,name,final,boolean,secure,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,name,secure,secure,cookie,get,secure
CookieResultMatchers -> public ResultMatcher secure(final String name, final boolean secure);1493929656;Assert whether the cookie must be sent over a secure protocol or not.;public ResultMatcher secure(final String name, final boolean secure) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' secure", secure, cookie.getSecure())__		}__	};assert,whether,the,cookie,must,be,sent,over,a,secure,protocol,or,not;public,result,matcher,secure,final,string,name,final,boolean,secure,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,secure,secure,cookie,get,secure
CookieResultMatchers -> public ResultMatcher secure(final String name, final boolean secure);1496955179;Assert whether the cookie must be sent over a secure protocol or not.;public ResultMatcher secure(final String name, final boolean secure) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' secure", secure, cookie.getSecure())__		}__	};assert,whether,the,cookie,must,be,sent,over,a,secure,protocol,or,not;public,result,matcher,secure,final,string,name,final,boolean,secure,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,secure,secure,cookie,get,secure
CookieResultMatchers -> public ResultMatcher secure(final String name, final boolean secure);1530174524;Assert whether the cookie must be sent over a secure protocol or not.;public ResultMatcher secure(final String name, final boolean secure) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' secure", secure, cookie.getSecure())__		}__	};assert,whether,the,cookie,must,be,sent,over,a,secure,protocol,or,not;public,result,matcher,secure,final,string,name,final,boolean,secure,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,secure,secure,cookie,get,secure
CookieResultMatchers -> public ResultMatcher secure(final String name, final boolean secure);1530174524;Assert whether the cookie must be sent over a secure protocol or not.;public ResultMatcher secure(final String name, final boolean secure) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' secure", secure, cookie.getSecure())__		}__	};assert,whether,the,cookie,must,be,sent,over,a,secure,protocol,or,not;public,result,matcher,secure,final,string,name,final,boolean,secure,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,secure,secure,cookie,get,secure
CookieResultMatchers -> public ResultMatcher httpOnly(final String name, final boolean httpOnly);1493299207;Assert whether the cookie must be httpOnly.;public ResultMatcher httpOnly(final String name, final boolean httpOnly) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertEquals("Response cookie httpOnly", httpOnly, cookie.isHttpOnly())__		}__	};assert,whether,the,cookie,must,be,http,only;public,result,matcher,http,only,final,string,name,final,boolean,http,only,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,http,only,http,only,cookie,is,http,only
CookieResultMatchers -> public ResultMatcher httpOnly(final String name, final boolean httpOnly);1493321531;Assert whether the cookie must be HTTP only._@since 4.3.9;public ResultMatcher httpOnly(final String name, final boolean httpOnly) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertEquals("Response cookie '" + name + "' httpOnly", httpOnly, cookie.isHttpOnly())__		}__	};assert,whether,the,cookie,must,be,http,only,since,4,3,9;public,result,matcher,http,only,final,string,name,final,boolean,http,only,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,name,http,only,http,only,cookie,is,http,only
CookieResultMatchers -> public ResultMatcher httpOnly(final String name, final boolean httpOnly);1493929656;Assert whether the cookie must be HTTP only._@since 4.3.9;public ResultMatcher httpOnly(final String name, final boolean httpOnly) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' httpOnly", httpOnly, cookie.isHttpOnly())__		}__	};assert,whether,the,cookie,must,be,http,only,since,4,3,9;public,result,matcher,http,only,final,string,name,final,boolean,http,only,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,http,only,http,only,cookie,is,http,only
CookieResultMatchers -> public ResultMatcher httpOnly(final String name, final boolean httpOnly);1496955179;Assert whether the cookie must be HTTP only._@since 4.3.9;public ResultMatcher httpOnly(final String name, final boolean httpOnly) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' httpOnly", httpOnly, cookie.isHttpOnly())__		}__	};assert,whether,the,cookie,must,be,http,only,since,4,3,9;public,result,matcher,http,only,final,string,name,final,boolean,http,only,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,http,only,http,only,cookie,is,http,only
CookieResultMatchers -> public ResultMatcher httpOnly(final String name, final boolean httpOnly);1530174524;Assert whether the cookie must be HTTP only._@since 4.3.9;public ResultMatcher httpOnly(final String name, final boolean httpOnly) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' httpOnly", httpOnly, cookie.isHttpOnly())__		}__	};assert,whether,the,cookie,must,be,http,only,since,4,3,9;public,result,matcher,http,only,final,string,name,final,boolean,http,only,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,http,only,http,only,cookie,is,http,only
CookieResultMatchers -> public ResultMatcher httpOnly(final String name, final boolean httpOnly);1530174524;Assert whether the cookie must be HTTP only._@since 4.3.9;public ResultMatcher httpOnly(final String name, final boolean httpOnly) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' httpOnly", httpOnly, cookie.isHttpOnly())__		}__	};assert,whether,the,cookie,must,be,http,only,since,4,3,9;public,result,matcher,http,only,final,string,name,final,boolean,http,only,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,http,only,http,only,cookie,is,http,only
CookieResultMatchers -> public ResultMatcher comment(final String name, final String comment);1383669853;Assert a cookie's comment value.;public ResultMatcher comment(final String name, final String comment) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertEquals("Response cookie comment", comment, cookie.getComment())__			}_		}__	};assert,a,cookie,s,comment,value;public,result,matcher,comment,final,string,name,final,string,comment,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,comment,comment,cookie,get,comment
CookieResultMatchers -> public ResultMatcher comment(final String name, final String comment);1413848647;Assert a cookie's comment value.;public ResultMatcher comment(final String name, final String comment) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertEquals("Response cookie comment", comment, cookie.getComment())__			}_		}__	};assert,a,cookie,s,comment,value;public,result,matcher,comment,final,string,name,final,string,comment,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,comment,comment,cookie,get,comment
CookieResultMatchers -> public ResultMatcher comment(final String name, final String comment);1427238287;Assert a cookie's comment value.;public ResultMatcher comment(final String name, final String comment) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertEquals("Response cookie comment", comment, cookie.getComment())__			}_		}__	};assert,a,cookie,s,comment,value;public,result,matcher,comment,final,string,name,final,string,comment,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,comment,comment,cookie,get,comment
CookieResultMatchers -> public ResultMatcher comment(final String name, final String comment);1437424890;Assert a cookie's comment value.;public ResultMatcher comment(final String name, final String comment) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertEquals("Response cookie comment", comment, cookie.getComment())__			}_		}__	};assert,a,cookie,s,comment,value;public,result,matcher,comment,final,string,name,final,string,comment,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,comment,comment,cookie,get,comment
CookieResultMatchers -> public ResultMatcher comment(final String name, final String comment);1493235170;Assert a cookie's comment value.;public ResultMatcher comment(final String name, final String comment) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertEquals("Response cookie '" + name + "' comment", comment, cookie.getComment())__		}__	};assert,a,cookie,s,comment,value;public,result,matcher,comment,final,string,name,final,string,comment,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,name,comment,comment,cookie,get,comment
CookieResultMatchers -> public ResultMatcher comment(final String name, final String comment);1493299207;Assert a cookie's comment value.;public ResultMatcher comment(final String name, final String comment) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertEquals("Response cookie '" + name + "' comment", comment, cookie.getComment())__		}__	};assert,a,cookie,s,comment,value;public,result,matcher,comment,final,string,name,final,string,comment,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,name,comment,comment,cookie,get,comment
CookieResultMatchers -> public ResultMatcher comment(final String name, final String comment);1493321531;Assert a cookie's comment value.;public ResultMatcher comment(final String name, final String comment) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertEquals("Response cookie '" + name + "' comment", comment, cookie.getComment())__		}__	};assert,a,cookie,s,comment,value;public,result,matcher,comment,final,string,name,final,string,comment,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,name,comment,comment,cookie,get,comment
CookieResultMatchers -> public ResultMatcher comment(final String name, final String comment);1493929656;Assert a cookie's comment value.;public ResultMatcher comment(final String name, final String comment) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' comment", comment, cookie.getComment())__		}__	};assert,a,cookie,s,comment,value;public,result,matcher,comment,final,string,name,final,string,comment,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,comment,comment,cookie,get,comment
CookieResultMatchers -> public ResultMatcher comment(final String name, final String comment);1496955179;Assert a cookie's comment value.;public ResultMatcher comment(final String name, final String comment) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' comment", comment, cookie.getComment())__		}__	};assert,a,cookie,s,comment,value;public,result,matcher,comment,final,string,name,final,string,comment,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,comment,comment,cookie,get,comment
CookieResultMatchers -> public ResultMatcher comment(final String name, final String comment);1530174524;Assert a cookie's comment value.;public ResultMatcher comment(final String name, final String comment) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' comment", comment, cookie.getComment())__		}__	};assert,a,cookie,s,comment,value;public,result,matcher,comment,final,string,name,final,string,comment,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,comment,comment,cookie,get,comment
CookieResultMatchers -> public ResultMatcher comment(final String name, final String comment);1530174524;Assert a cookie's comment value.;public ResultMatcher comment(final String name, final String comment) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' comment", comment, cookie.getComment())__		}__	};assert,a,cookie,s,comment,value;public,result,matcher,comment,final,string,name,final,string,comment,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,comment,comment,cookie,get,comment
CookieResultMatchers -> public ResultMatcher domain(final String name, final Matcher<? super String> matcher);1383669853;Assert a cookie's domain with a Hamcrest {@link Matcher}.;public ResultMatcher domain(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertThat("Response cookie domain", cookie.getDomain(), matcher)__			}_		}__	};assert,a,cookie,s,domain,with,a,hamcrest,link,matcher;public,result,matcher,domain,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,domain,cookie,get,domain,matcher
CookieResultMatchers -> public ResultMatcher domain(final String name, final Matcher<? super String> matcher);1413848647;Assert a cookie's domain with a Hamcrest {@link Matcher}.;public ResultMatcher domain(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertThat("Response cookie domain", cookie.getDomain(), matcher)__			}_		}__	};assert,a,cookie,s,domain,with,a,hamcrest,link,matcher;public,result,matcher,domain,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,domain,cookie,get,domain,matcher
CookieResultMatchers -> public ResultMatcher domain(final String name, final Matcher<? super String> matcher);1427238287;Assert a cookie's domain with a Hamcrest {@link Matcher}.;public ResultMatcher domain(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertThat("Response cookie domain", cookie.getDomain(), matcher)__			}_		}__	};assert,a,cookie,s,domain,with,a,hamcrest,link,matcher;public,result,matcher,domain,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,domain,cookie,get,domain,matcher
CookieResultMatchers -> public ResultMatcher domain(final String name, final Matcher<? super String> matcher);1437424890;Assert a cookie's domain with a Hamcrest {@link Matcher}.;public ResultMatcher domain(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertThat("Response cookie domain", cookie.getDomain(), matcher)__			}_		}__	};assert,a,cookie,s,domain,with,a,hamcrest,link,matcher;public,result,matcher,domain,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,domain,cookie,get,domain,matcher
CookieResultMatchers -> public ResultMatcher domain(final String name, final Matcher<? super String> matcher);1493235170;Assert a cookie's domain with a Hamcrest {@link Matcher}.;public ResultMatcher domain(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertThat("Response cookie '" + name + "' domain", cookie.getDomain(), matcher)__		}__	};assert,a,cookie,s,domain,with,a,hamcrest,link,matcher;public,result,matcher,domain,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,name,domain,cookie,get,domain,matcher
CookieResultMatchers -> public ResultMatcher domain(final String name, final Matcher<? super String> matcher);1493299207;Assert a cookie's domain with a Hamcrest {@link Matcher}.;public ResultMatcher domain(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertThat("Response cookie '" + name + "' domain", cookie.getDomain(), matcher)__		}__	};assert,a,cookie,s,domain,with,a,hamcrest,link,matcher;public,result,matcher,domain,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,name,domain,cookie,get,domain,matcher
CookieResultMatchers -> public ResultMatcher domain(final String name, final Matcher<? super String> matcher);1493321531;Assert a cookie's domain with a Hamcrest {@link Matcher}.;public ResultMatcher domain(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertThat("Response cookie '" + name + "' domain", cookie.getDomain(), matcher)__		}__	};assert,a,cookie,s,domain,with,a,hamcrest,link,matcher;public,result,matcher,domain,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,name,domain,cookie,get,domain,matcher
CookieResultMatchers -> public ResultMatcher domain(final String name, final Matcher<? super String> matcher);1493929656;Assert a cookie's domain with a Hamcrest {@link Matcher}.;public ResultMatcher domain(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' domain", cookie.getDomain(), matcher)__		}__	};assert,a,cookie,s,domain,with,a,hamcrest,link,matcher;public,result,matcher,domain,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,domain,cookie,get,domain,matcher
CookieResultMatchers -> public ResultMatcher domain(final String name, final Matcher<? super String> matcher);1496955179;Assert a cookie's domain with a Hamcrest {@link Matcher}.;public ResultMatcher domain(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' domain", cookie.getDomain(), matcher)__		}__	};assert,a,cookie,s,domain,with,a,hamcrest,link,matcher;public,result,matcher,domain,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,domain,cookie,get,domain,matcher
CookieResultMatchers -> public ResultMatcher domain(final String name, final Matcher<? super String> matcher);1530174524;Assert a cookie's domain with a Hamcrest {@link Matcher}.;public ResultMatcher domain(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' domain", cookie.getDomain(), matcher)__		}__	};assert,a,cookie,s,domain,with,a,hamcrest,link,matcher;public,result,matcher,domain,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,domain,cookie,get,domain,matcher
CookieResultMatchers -> public ResultMatcher domain(final String name, final Matcher<? super String> matcher);1530174524;Assert a cookie's domain with a Hamcrest {@link Matcher}.;public ResultMatcher domain(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' domain", cookie.getDomain(), matcher)__		}__	};assert,a,cookie,s,domain,with,a,hamcrest,link,matcher;public,result,matcher,domain,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,domain,cookie,get,domain,matcher
CookieResultMatchers -> public ResultMatcher version(final String name, final Matcher<? super Integer> matcher);1383669853;Assert a cookie's version with a Hamcrest {@link Matcher};public ResultMatcher version(final String name, final Matcher<? super Integer> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertThat("Response cookie version", cookie.getVersion(), matcher)__			}_		}__	};assert,a,cookie,s,version,with,a,hamcrest,link,matcher;public,result,matcher,version,final,string,name,final,matcher,super,integer,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,version,cookie,get,version,matcher
CookieResultMatchers -> public ResultMatcher version(final String name, final Matcher<? super Integer> matcher);1413848647;Assert a cookie's version with a Hamcrest {@link Matcher};public ResultMatcher version(final String name, final Matcher<? super Integer> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertThat("Response cookie version", cookie.getVersion(), matcher)__			}_		}__	};assert,a,cookie,s,version,with,a,hamcrest,link,matcher;public,result,matcher,version,final,string,name,final,matcher,super,integer,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,version,cookie,get,version,matcher
CookieResultMatchers -> public ResultMatcher version(final String name, final Matcher<? super Integer> matcher);1427238287;Assert a cookie's version with a Hamcrest {@link Matcher};public ResultMatcher version(final String name, final Matcher<? super Integer> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertThat("Response cookie version", cookie.getVersion(), matcher)__			}_		}__	};assert,a,cookie,s,version,with,a,hamcrest,link,matcher;public,result,matcher,version,final,string,name,final,matcher,super,integer,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,version,cookie,get,version,matcher
CookieResultMatchers -> public ResultMatcher version(final String name, final Matcher<? super Integer> matcher);1437424890;Assert a cookie's version with a Hamcrest {@link Matcher};public ResultMatcher version(final String name, final Matcher<? super Integer> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertThat("Response cookie version", cookie.getVersion(), matcher)__			}_		}__	};assert,a,cookie,s,version,with,a,hamcrest,link,matcher;public,result,matcher,version,final,string,name,final,matcher,super,integer,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,version,cookie,get,version,matcher
CookieResultMatchers -> public ResultMatcher version(final String name, final Matcher<? super Integer> matcher);1493235170;Assert a cookie's version with a Hamcrest {@link Matcher};public ResultMatcher version(final String name, final Matcher<? super Integer> matcher) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertThat("Response cookie '" + name + "' version", cookie.getVersion(), matcher)__		}__	};assert,a,cookie,s,version,with,a,hamcrest,link,matcher;public,result,matcher,version,final,string,name,final,matcher,super,integer,matcher,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,name,version,cookie,get,version,matcher
CookieResultMatchers -> public ResultMatcher version(final String name, final Matcher<? super Integer> matcher);1493299207;Assert a cookie's version with a Hamcrest {@link Matcher};public ResultMatcher version(final String name, final Matcher<? super Integer> matcher) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertThat("Response cookie '" + name + "' version", cookie.getVersion(), matcher)__		}__	};assert,a,cookie,s,version,with,a,hamcrest,link,matcher;public,result,matcher,version,final,string,name,final,matcher,super,integer,matcher,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,name,version,cookie,get,version,matcher
CookieResultMatchers -> public ResultMatcher version(final String name, final Matcher<? super Integer> matcher);1493321531;Assert a cookie's version with a Hamcrest {@link Matcher};public ResultMatcher version(final String name, final Matcher<? super Integer> matcher) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertThat("Response cookie '" + name + "' version", cookie.getVersion(), matcher)__		}__	};assert,a,cookie,s,version,with,a,hamcrest,link,matcher;public,result,matcher,version,final,string,name,final,matcher,super,integer,matcher,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,name,version,cookie,get,version,matcher
CookieResultMatchers -> public ResultMatcher version(final String name, final Matcher<? super Integer> matcher);1493929656;Assert a cookie's version with a Hamcrest {@link Matcher};public ResultMatcher version(final String name, final Matcher<? super Integer> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' version", cookie.getVersion(), matcher)__		}__	};assert,a,cookie,s,version,with,a,hamcrest,link,matcher;public,result,matcher,version,final,string,name,final,matcher,super,integer,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,version,cookie,get,version,matcher
CookieResultMatchers -> public ResultMatcher version(final String name, final Matcher<? super Integer> matcher);1496955179;Assert a cookie's version with a Hamcrest {@link Matcher};public ResultMatcher version(final String name, final Matcher<? super Integer> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' version", cookie.getVersion(), matcher)__		}__	};assert,a,cookie,s,version,with,a,hamcrest,link,matcher;public,result,matcher,version,final,string,name,final,matcher,super,integer,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,version,cookie,get,version,matcher
CookieResultMatchers -> public ResultMatcher version(final String name, final Matcher<? super Integer> matcher);1530174524;Assert a cookie's version with a Hamcrest {@link Matcher}.;public ResultMatcher version(final String name, final Matcher<? super Integer> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' version", cookie.getVersion(), matcher)__		}__	};assert,a,cookie,s,version,with,a,hamcrest,link,matcher;public,result,matcher,version,final,string,name,final,matcher,super,integer,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,version,cookie,get,version,matcher
CookieResultMatchers -> public ResultMatcher version(final String name, final Matcher<? super Integer> matcher);1530174524;Assert a cookie's version with a Hamcrest {@link Matcher}.;public ResultMatcher version(final String name, final Matcher<? super Integer> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' version", cookie.getVersion(), matcher)__		}__	};assert,a,cookie,s,version,with,a,hamcrest,link,matcher;public,result,matcher,version,final,string,name,final,matcher,super,integer,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,version,cookie,get,version,matcher
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final int maxAge);1383669853;Assert a cookie's maxAge value.;public ResultMatcher maxAge(final String name, final int maxAge) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("No cookie with name: " + name, cookie != null)__				assertEquals("Response cookie maxAge", maxAge, cookie.getMaxAge())__			}_		}__	};assert,a,cookie,s,max,age,value;public,result,matcher,max,age,final,string,name,final,int,max,age,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null,assert,equals,response,cookie,max,age,max,age,cookie,get,max,age
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final int maxAge);1413848647;Assert a cookie's maxAge value.;public ResultMatcher maxAge(final String name, final int maxAge) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("No cookie with name: " + name, cookie != null)__				assertEquals("Response cookie maxAge", maxAge, cookie.getMaxAge())__			}_		}__	};assert,a,cookie,s,max,age,value;public,result,matcher,max,age,final,string,name,final,int,max,age,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null,assert,equals,response,cookie,max,age,max,age,cookie,get,max,age
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final int maxAge);1427238287;Assert a cookie's maxAge value.;public ResultMatcher maxAge(final String name, final int maxAge) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("No cookie with name: " + name, cookie != null)__				assertEquals("Response cookie maxAge", maxAge, cookie.getMaxAge())__			}_		}__	};assert,a,cookie,s,max,age,value;public,result,matcher,max,age,final,string,name,final,int,max,age,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null,assert,equals,response,cookie,max,age,max,age,cookie,get,max,age
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final int maxAge);1437424890;Assert a cookie's maxAge value.;public ResultMatcher maxAge(final String name, final int maxAge) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("No cookie with name: " + name, cookie != null)__				assertEquals("Response cookie maxAge", maxAge, cookie.getMaxAge())__			}_		}__	};assert,a,cookie,s,max,age,value;public,result,matcher,max,age,final,string,name,final,int,max,age,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null,assert,equals,response,cookie,max,age,max,age,cookie,get,max,age
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final int maxAge);1493235170;Assert a cookie's maxAge value.;public ResultMatcher maxAge(final String name, final int maxAge) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("No cookie with name: " + name, cookie != null)__			assertEquals("Response cookie '" + name + "' maxAge", maxAge, cookie.getMaxAge())__		}__	};assert,a,cookie,s,max,age,value;public,result,matcher,max,age,final,string,name,final,int,max,age,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null,assert,equals,response,cookie,name,max,age,max,age,cookie,get,max,age
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final int maxAge);1493299207;Assert a cookie's maxAge value.;public ResultMatcher maxAge(final String name, final int maxAge) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("No cookie with name: " + name, cookie != null)__			assertEquals("Response cookie '" + name + "' maxAge", maxAge, cookie.getMaxAge())__		}__	};assert,a,cookie,s,max,age,value;public,result,matcher,max,age,final,string,name,final,int,max,age,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null,assert,equals,response,cookie,name,max,age,max,age,cookie,get,max,age
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final int maxAge);1493321531;Assert a cookie's maxAge value.;public ResultMatcher maxAge(final String name, final int maxAge) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("No cookie with name: " + name, cookie != null)__			assertEquals("Response cookie '" + name + "' maxAge", maxAge, cookie.getMaxAge())__		}__	};assert,a,cookie,s,max,age,value;public,result,matcher,max,age,final,string,name,final,int,max,age,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null,assert,equals,response,cookie,name,max,age,max,age,cookie,get,max,age
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final int maxAge);1493929656;Assert a cookie's maxAge value.;public ResultMatcher maxAge(final String name, final int maxAge) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' maxAge", maxAge, cookie.getMaxAge())__		}__	};assert,a,cookie,s,max,age,value;public,result,matcher,max,age,final,string,name,final,int,max,age,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,max,age,max,age,cookie,get,max,age
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final int maxAge);1496955179;Assert a cookie's maxAge value.;public ResultMatcher maxAge(final String name, final int maxAge) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' maxAge", maxAge, cookie.getMaxAge())__		}__	};assert,a,cookie,s,max,age,value;public,result,matcher,max,age,final,string,name,final,int,max,age,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,max,age,max,age,cookie,get,max,age
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final int maxAge);1530174524;Assert a cookie's maxAge value.;public ResultMatcher maxAge(final String name, final int maxAge) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' maxAge", maxAge, cookie.getMaxAge())__		}__	};assert,a,cookie,s,max,age,value;public,result,matcher,max,age,final,string,name,final,int,max,age,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,max,age,max,age,cookie,get,max,age
CookieResultMatchers -> public ResultMatcher maxAge(final String name, final int maxAge);1530174524;Assert a cookie's maxAge value.;public ResultMatcher maxAge(final String name, final int maxAge) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' maxAge", maxAge, cookie.getMaxAge())__		}__	};assert,a,cookie,s,max,age,value;public,result,matcher,max,age,final,string,name,final,int,max,age,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,max,age,max,age,cookie,get,max,age
CookieResultMatchers -> public ResultMatcher exists(final String name);1383669853;Assert a cookie exists. The existence check is irrespective of whether_max age is 0 (i.e. expired).;public ResultMatcher exists(final String name) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("No cookie with name: " + name, cookie != null)__			}_		}__	};assert,a,cookie,exists,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,exists,final,string,name,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null
CookieResultMatchers -> public ResultMatcher exists(final String name);1413848647;Assert a cookie exists. The existence check is irrespective of whether_max age is 0 (i.e. expired).;public ResultMatcher exists(final String name) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("No cookie with name: " + name, cookie != null)__			}_		}__	};assert,a,cookie,exists,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,exists,final,string,name,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null
CookieResultMatchers -> public ResultMatcher exists(final String name);1427238287;Assert a cookie exists. The existence check is irrespective of whether_max age is 0 (i.e. expired).;public ResultMatcher exists(final String name) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("No cookie with name: " + name, cookie != null)__			}_		}__	};assert,a,cookie,exists,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,exists,final,string,name,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null
CookieResultMatchers -> public ResultMatcher exists(final String name);1437424890;Assert a cookie exists. The existence check is irrespective of whether_max age is 0 (i.e. expired).;public ResultMatcher exists(final String name) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("No cookie with name: " + name, cookie != null)__			}_		}__	};assert,a,cookie,exists,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,exists,final,string,name,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null
CookieResultMatchers -> public ResultMatcher exists(final String name);1493235170;Assert a cookie exists. The existence check is irrespective of whether_max age is 0 (i.e. expired).;public ResultMatcher exists(final String name) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("No cookie with name '" + name + "'", cookie != null)__		}__	};assert,a,cookie,exists,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,exists,final,string,name,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null
CookieResultMatchers -> public ResultMatcher exists(final String name);1493299207;Assert a cookie exists. The existence check is irrespective of whether_max age is 0 (i.e. expired).;public ResultMatcher exists(final String name) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("No cookie with name '" + name + "'", cookie != null)__		}__	};assert,a,cookie,exists,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,exists,final,string,name,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null
CookieResultMatchers -> public ResultMatcher exists(final String name);1493321531;Assert a cookie exists. The existence check is irrespective of whether_max age is 0 (i.e. expired).;public ResultMatcher exists(final String name) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("No cookie with name '" + name + "'", cookie != null)__		}__	};assert,a,cookie,exists,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,exists,final,string,name,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,no,cookie,with,name,name,cookie,null
CookieResultMatchers -> public ResultMatcher exists(final String name);1493929656;Assert a cookie exists. The existence check is irrespective of whether_max age is 0 (i.e. expired).;public ResultMatcher exists(final String name) {_		return result -> getCookie(result, name)__	};assert,a,cookie,exists,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,exists,final,string,name,return,result,get,cookie,result,name
CookieResultMatchers -> public ResultMatcher exists(final String name);1496955179;Assert a cookie exists. The existence check is irrespective of whether_max age is 0 (i.e. expired).;public ResultMatcher exists(final String name) {_		return result -> getCookie(result, name)__	};assert,a,cookie,exists,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,exists,final,string,name,return,result,get,cookie,result,name
CookieResultMatchers -> public ResultMatcher exists(final String name);1530174524;Assert a cookie exists. The existence check is irrespective of whether_max age is 0 (i.e. expired).;public ResultMatcher exists(final String name) {_		return result -> getCookie(result, name)__	};assert,a,cookie,exists,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,exists,final,string,name,return,result,get,cookie,result,name
CookieResultMatchers -> public ResultMatcher exists(final String name);1530174524;Assert a cookie exists. The existence check is irrespective of whether_max age is 0 (i.e. expired).;public ResultMatcher exists(final String name) {_		return result -> getCookie(result, name)__	};assert,a,cookie,exists,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,exists,final,string,name,return,result,get,cookie,result,name
CookieResultMatchers -> public ResultMatcher version(final String name, final int version);1383669853;Assert a cookie's version value.;public ResultMatcher version(final String name, final int version) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertEquals("Response cookie version", version, cookie.getVersion())__			}_		}__	};assert,a,cookie,s,version,value;public,result,matcher,version,final,string,name,final,int,version,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,version,version,cookie,get,version
CookieResultMatchers -> public ResultMatcher version(final String name, final int version);1413848647;Assert a cookie's version value.;public ResultMatcher version(final String name, final int version) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertEquals("Response cookie version", version, cookie.getVersion())__			}_		}__	};assert,a,cookie,s,version,value;public,result,matcher,version,final,string,name,final,int,version,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,version,version,cookie,get,version
CookieResultMatchers -> public ResultMatcher version(final String name, final int version);1427238287;Assert a cookie's version value.;public ResultMatcher version(final String name, final int version) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertEquals("Response cookie version", version, cookie.getVersion())__			}_		}__	};assert,a,cookie,s,version,value;public,result,matcher,version,final,string,name,final,int,version,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,version,version,cookie,get,version
CookieResultMatchers -> public ResultMatcher version(final String name, final int version);1437424890;Assert a cookie's version value.;public ResultMatcher version(final String name, final int version) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertEquals("Response cookie version", version, cookie.getVersion())__			}_		}__	};assert,a,cookie,s,version,value;public,result,matcher,version,final,string,name,final,int,version,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,version,version,cookie,get,version
CookieResultMatchers -> public ResultMatcher version(final String name, final int version);1493235170;Assert a cookie's version value.;public ResultMatcher version(final String name, final int version) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertEquals("Response cookie '" + name + "' version", version, cookie.getVersion())__		}__	};assert,a,cookie,s,version,value;public,result,matcher,version,final,string,name,final,int,version,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,name,version,version,cookie,get,version
CookieResultMatchers -> public ResultMatcher version(final String name, final int version);1493299207;Assert a cookie's version value.;public ResultMatcher version(final String name, final int version) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertEquals("Response cookie '" + name + "' version", version, cookie.getVersion())__		}__	};assert,a,cookie,s,version,value;public,result,matcher,version,final,string,name,final,int,version,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,name,version,version,cookie,get,version
CookieResultMatchers -> public ResultMatcher version(final String name, final int version);1493321531;Assert a cookie's version value.;public ResultMatcher version(final String name, final int version) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertEquals("Response cookie '" + name + "' version", version, cookie.getVersion())__		}__	};assert,a,cookie,s,version,value;public,result,matcher,version,final,string,name,final,int,version,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,name,version,version,cookie,get,version
CookieResultMatchers -> public ResultMatcher version(final String name, final int version);1493929656;Assert a cookie's version value.;public ResultMatcher version(final String name, final int version) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' version", version, cookie.getVersion())__		}__	};assert,a,cookie,s,version,value;public,result,matcher,version,final,string,name,final,int,version,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,version,version,cookie,get,version
CookieResultMatchers -> public ResultMatcher version(final String name, final int version);1496955179;Assert a cookie's version value.;public ResultMatcher version(final String name, final int version) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' version", version, cookie.getVersion())__		}__	};assert,a,cookie,s,version,value;public,result,matcher,version,final,string,name,final,int,version,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,version,version,cookie,get,version
CookieResultMatchers -> public ResultMatcher version(final String name, final int version);1530174524;Assert a cookie's version value.;public ResultMatcher version(final String name, final int version) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' version", version, cookie.getVersion())__		}__	};assert,a,cookie,s,version,value;public,result,matcher,version,final,string,name,final,int,version,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,version,version,cookie,get,version
CookieResultMatchers -> public ResultMatcher version(final String name, final int version);1530174524;Assert a cookie's version value.;public ResultMatcher version(final String name, final int version) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' version", version, cookie.getVersion())__		}__	};assert,a,cookie,s,version,value;public,result,matcher,version,final,string,name,final,int,version,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,version,version,cookie,get,version
CookieResultMatchers -> public ResultMatcher doesNotExist(final String name);1383669853;Assert a cookie does not exist. Note that the existence check is_irrespective of whether max age is 0, i.e. expired.;public ResultMatcher doesNotExist(final String name) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("Unexpected cookie with name " + name, cookie == null)__			}_		}__	};assert,a,cookie,does,not,exist,note,that,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,does,not,exist,final,string,name,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,unexpected,cookie,with,name,name,cookie,null
CookieResultMatchers -> public ResultMatcher doesNotExist(final String name);1413848647;Assert a cookie does not exist. Note that the existence check is_irrespective of whether max age is 0, i.e. expired.;public ResultMatcher doesNotExist(final String name) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("Unexpected cookie with name " + name, cookie == null)__			}_		}__	};assert,a,cookie,does,not,exist,note,that,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,does,not,exist,final,string,name,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,unexpected,cookie,with,name,name,cookie,null
CookieResultMatchers -> public ResultMatcher doesNotExist(final String name);1427238287;Assert a cookie does not exist. Note that the existence check is_irrespective of whether max age is 0, i.e. expired.;public ResultMatcher doesNotExist(final String name) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("Unexpected cookie with name " + name, cookie == null)__			}_		}__	};assert,a,cookie,does,not,exist,note,that,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,does,not,exist,final,string,name,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,unexpected,cookie,with,name,name,cookie,null
CookieResultMatchers -> public ResultMatcher doesNotExist(final String name);1437424890;Assert a cookie does not exist. Note that the existence check is_irrespective of whether max age is 0, i.e. expired.;public ResultMatcher doesNotExist(final String name) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("Unexpected cookie with name " + name, cookie == null)__			}_		}__	};assert,a,cookie,does,not,exist,note,that,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,does,not,exist,final,string,name,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,unexpected,cookie,with,name,name,cookie,null
CookieResultMatchers -> public ResultMatcher doesNotExist(final String name);1493235170;Assert a cookie does not exist. Note that the existence check is_irrespective of whether max age is 0, i.e. expired.;public ResultMatcher doesNotExist(final String name) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("Unexpected cookie with name '" + name + "'", cookie == null)__		}__	};assert,a,cookie,does,not,exist,note,that,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,does,not,exist,final,string,name,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,unexpected,cookie,with,name,name,cookie,null
CookieResultMatchers -> public ResultMatcher doesNotExist(final String name);1493299207;Assert a cookie does not exist. Note that the existence check is_irrespective of whether max age is 0, i.e. expired.;public ResultMatcher doesNotExist(final String name) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("Unexpected cookie with name '" + name + "'", cookie == null)__		}__	};assert,a,cookie,does,not,exist,note,that,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,does,not,exist,final,string,name,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,unexpected,cookie,with,name,name,cookie,null
CookieResultMatchers -> public ResultMatcher doesNotExist(final String name);1493321531;Assert a cookie does not exist. Note that the existence check is_irrespective of whether max age is 0, i.e. expired.;public ResultMatcher doesNotExist(final String name) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("Unexpected cookie with name '" + name + "'", cookie == null)__		}__	};assert,a,cookie,does,not,exist,note,that,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,does,not,exist,final,string,name,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,unexpected,cookie,with,name,name,cookie,null
CookieResultMatchers -> public ResultMatcher doesNotExist(final String name);1493929656;Assert a cookie does not exist. Note that the existence check is_irrespective of whether max age is 0, i.e. expired.;public ResultMatcher doesNotExist(final String name) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("Unexpected cookie with name '" + name + "'", cookie == null)__		}__	};assert,a,cookie,does,not,exist,note,that,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,does,not,exist,final,string,name,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,unexpected,cookie,with,name,name,cookie,null
CookieResultMatchers -> public ResultMatcher doesNotExist(final String name);1496955179;Assert a cookie does not exist. Note that the existence check is_irrespective of whether max age is 0, i.e. expired.;public ResultMatcher doesNotExist(final String name) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("Unexpected cookie with name '" + name + "'", cookie == null)__		}__	};assert,a,cookie,does,not,exist,note,that,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,does,not,exist,final,string,name,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,unexpected,cookie,with,name,name,cookie,null
CookieResultMatchers -> public ResultMatcher doesNotExist(final String name);1530174524;Assert a cookie does not exist. Note that the existence check is_irrespective of whether max age is 0, i.e. expired.;public ResultMatcher doesNotExist(final String name) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("Unexpected cookie with name '" + name + "'", cookie == null)__		}__	};assert,a,cookie,does,not,exist,note,that,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,does,not,exist,final,string,name,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,unexpected,cookie,with,name,name,cookie,null
CookieResultMatchers -> public ResultMatcher doesNotExist(final String name);1530174524;Assert a cookie does not exist. Note that the existence check is_irrespective of whether max age is 0, i.e. expired.;public ResultMatcher doesNotExist(final String name) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("Unexpected cookie with name '" + name + "'", cookie == null)__		}__	};assert,a,cookie,does,not,exist,note,that,the,existence,check,is,irrespective,of,whether,max,age,is,0,i,e,expired;public,result,matcher,does,not,exist,final,string,name,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,unexpected,cookie,with,name,name,cookie,null
CookieResultMatchers -> protected CookieResultMatchers();1383669853;Protected constructor._Use {@link MockMvcResultMatchers#cookie()}.;protected CookieResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,cookie;protected,cookie,result,matchers
CookieResultMatchers -> protected CookieResultMatchers();1413848647;Protected constructor._Use {@link MockMvcResultMatchers#cookie()}.;protected CookieResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,cookie;protected,cookie,result,matchers
CookieResultMatchers -> protected CookieResultMatchers();1427238287;Protected constructor._Use {@link MockMvcResultMatchers#cookie()}.;protected CookieResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,cookie;protected,cookie,result,matchers
CookieResultMatchers -> protected CookieResultMatchers();1437424890;Protected constructor._Use {@link MockMvcResultMatchers#cookie()}.;protected CookieResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,cookie;protected,cookie,result,matchers
CookieResultMatchers -> protected CookieResultMatchers();1493235170;Protected constructor._Use {@link MockMvcResultMatchers#cookie()}.;protected CookieResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,cookie;protected,cookie,result,matchers
CookieResultMatchers -> protected CookieResultMatchers();1493299207;Protected constructor._Use {@link MockMvcResultMatchers#cookie()}.;protected CookieResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,cookie;protected,cookie,result,matchers
CookieResultMatchers -> protected CookieResultMatchers();1493321531;Protected constructor._Use {@link MockMvcResultMatchers#cookie()}.;protected CookieResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,cookie;protected,cookie,result,matchers
CookieResultMatchers -> protected CookieResultMatchers();1493929656;Protected constructor._Use {@link MockMvcResultMatchers#cookie()}.;protected CookieResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,cookie;protected,cookie,result,matchers
CookieResultMatchers -> protected CookieResultMatchers();1496955179;Protected constructor._Use {@link MockMvcResultMatchers#cookie()}.;protected CookieResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,cookie;protected,cookie,result,matchers
CookieResultMatchers -> protected CookieResultMatchers();1530174524;Protected constructor._Use {@link MockMvcResultMatchers#cookie()}.;protected CookieResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,cookie;protected,cookie,result,matchers
CookieResultMatchers -> protected CookieResultMatchers();1530174524;Protected constructor._Use {@link MockMvcResultMatchers#cookie()}.;protected CookieResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,cookie;protected,cookie,result,matchers
CookieResultMatchers -> public ResultMatcher value(final String name, final Matcher<? super String> matcher);1383669853;Assert a cookie value with the given Hamcrest {@link Matcher}.;public ResultMatcher value(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("Response cookie not found: " + name, cookie != null)__				assertThat("Response cookie", cookie.getValue(), matcher)__			}_		}__	};assert,a,cookie,value,with,the,given,hamcrest,link,matcher;public,result,matcher,value,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,response,cookie,not,found,name,cookie,null,assert,that,response,cookie,cookie,get,value,matcher
CookieResultMatchers -> public ResultMatcher value(final String name, final Matcher<? super String> matcher);1413848647;Assert a cookie value with the given Hamcrest {@link Matcher}.;public ResultMatcher value(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("Response cookie not found: " + name, cookie != null)__				assertThat("Response cookie", cookie.getValue(), matcher)__			}_		}__	};assert,a,cookie,value,with,the,given,hamcrest,link,matcher;public,result,matcher,value,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,response,cookie,not,found,name,cookie,null,assert,that,response,cookie,cookie,get,value,matcher
CookieResultMatchers -> public ResultMatcher value(final String name, final Matcher<? super String> matcher);1427238287;Assert a cookie value with the given Hamcrest {@link Matcher}.;public ResultMatcher value(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("Response cookie not found: " + name, cookie != null)__				assertThat("Response cookie", cookie.getValue(), matcher)__			}_		}__	};assert,a,cookie,value,with,the,given,hamcrest,link,matcher;public,result,matcher,value,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,response,cookie,not,found,name,cookie,null,assert,that,response,cookie,cookie,get,value,matcher
CookieResultMatchers -> public ResultMatcher value(final String name, final Matcher<? super String> matcher);1437424890;Assert a cookie value with the given Hamcrest {@link Matcher}.;public ResultMatcher value(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("Response cookie not found: " + name, cookie != null)__				assertThat("Response cookie", cookie.getValue(), matcher)__			}_		}__	};assert,a,cookie,value,with,the,given,hamcrest,link,matcher;public,result,matcher,value,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,response,cookie,not,found,name,cookie,null,assert,that,response,cookie,cookie,get,value,matcher
CookieResultMatchers -> public ResultMatcher value(final String name, final Matcher<? super String> matcher);1493235170;Assert a cookie value with the given Hamcrest {@link Matcher}.;public ResultMatcher value(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("Response cookie '" + name + "' not found", cookie != null)__			assertThat("Response cookie '" + name + "'", cookie.getValue(), matcher)__		}__	};assert,a,cookie,value,with,the,given,hamcrest,link,matcher;public,result,matcher,value,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,response,cookie,name,not,found,cookie,null,assert,that,response,cookie,name,cookie,get,value,matcher
CookieResultMatchers -> public ResultMatcher value(final String name, final Matcher<? super String> matcher);1493299207;Assert a cookie value with the given Hamcrest {@link Matcher}.;public ResultMatcher value(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("Response cookie '" + name + "' not found", cookie != null)__			assertThat("Response cookie '" + name + "'", cookie.getValue(), matcher)__		}__	};assert,a,cookie,value,with,the,given,hamcrest,link,matcher;public,result,matcher,value,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,response,cookie,name,not,found,cookie,null,assert,that,response,cookie,name,cookie,get,value,matcher
CookieResultMatchers -> public ResultMatcher value(final String name, final Matcher<? super String> matcher);1493321531;Assert a cookie value with the given Hamcrest {@link Matcher}.;public ResultMatcher value(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("Response cookie '" + name + "' not found", cookie != null)__			assertThat("Response cookie '" + name + "'", cookie.getValue(), matcher)__		}__	};assert,a,cookie,value,with,the,given,hamcrest,link,matcher;public,result,matcher,value,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,response,cookie,name,not,found,cookie,null,assert,that,response,cookie,name,cookie,get,value,matcher
CookieResultMatchers -> public ResultMatcher value(final String name, final Matcher<? super String> matcher);1493929656;Assert a cookie value with the given Hamcrest {@link Matcher}.;public ResultMatcher value(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "'", cookie.getValue(), matcher)__		}__	};assert,a,cookie,value,with,the,given,hamcrest,link,matcher;public,result,matcher,value,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,cookie,get,value,matcher
CookieResultMatchers -> public ResultMatcher value(final String name, final Matcher<? super String> matcher);1496955179;Assert a cookie value with the given Hamcrest {@link Matcher}.;public ResultMatcher value(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "'", cookie.getValue(), matcher)__		}__	};assert,a,cookie,value,with,the,given,hamcrest,link,matcher;public,result,matcher,value,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,cookie,get,value,matcher
CookieResultMatchers -> public ResultMatcher value(final String name, final Matcher<? super String> matcher);1530174524;Assert a cookie value with the given Hamcrest {@link Matcher}.;public ResultMatcher value(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "'", cookie.getValue(), matcher)__		}__	};assert,a,cookie,value,with,the,given,hamcrest,link,matcher;public,result,matcher,value,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,cookie,get,value,matcher
CookieResultMatchers -> public ResultMatcher value(final String name, final Matcher<? super String> matcher);1530174524;Assert a cookie value with the given Hamcrest {@link Matcher}.;public ResultMatcher value(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "'", cookie.getValue(), matcher)__		}__	};assert,a,cookie,value,with,the,given,hamcrest,link,matcher;public,result,matcher,value,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,cookie,get,value,matcher
CookieResultMatchers -> public ResultMatcher domain(final String name, final String domain);1383669853;Assert a cookie's domain value.;public ResultMatcher domain(final String name, final String domain) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertEquals("Response cookie domain", domain, cookie.getDomain())__			}_		}__	};assert,a,cookie,s,domain,value;public,result,matcher,domain,final,string,name,final,string,domain,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,domain,domain,cookie,get,domain
CookieResultMatchers -> public ResultMatcher domain(final String name, final String domain);1413848647;Assert a cookie's domain value.;public ResultMatcher domain(final String name, final String domain) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertEquals("Response cookie domain", domain, cookie.getDomain())__			}_		}__	};assert,a,cookie,s,domain,value;public,result,matcher,domain,final,string,name,final,string,domain,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,domain,domain,cookie,get,domain
CookieResultMatchers -> public ResultMatcher domain(final String name, final String domain);1427238287;Assert a cookie's domain value.;public ResultMatcher domain(final String name, final String domain) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertEquals("Response cookie domain", domain, cookie.getDomain())__			}_		}__	};assert,a,cookie,s,domain,value;public,result,matcher,domain,final,string,name,final,string,domain,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,domain,domain,cookie,get,domain
CookieResultMatchers -> public ResultMatcher domain(final String name, final String domain);1437424890;Assert a cookie's domain value.;public ResultMatcher domain(final String name, final String domain) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertEquals("Response cookie domain", domain, cookie.getDomain())__			}_		}__	};assert,a,cookie,s,domain,value;public,result,matcher,domain,final,string,name,final,string,domain,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,domain,domain,cookie,get,domain
CookieResultMatchers -> public ResultMatcher domain(final String name, final String domain);1493235170;Assert a cookie's domain value.;public ResultMatcher domain(final String name, final String domain) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertEquals("Response cookie '" + name + "' domain", domain, cookie.getDomain())__		}__	};assert,a,cookie,s,domain,value;public,result,matcher,domain,final,string,name,final,string,domain,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,name,domain,domain,cookie,get,domain
CookieResultMatchers -> public ResultMatcher domain(final String name, final String domain);1493299207;Assert a cookie's domain value.;public ResultMatcher domain(final String name, final String domain) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertEquals("Response cookie '" + name + "' domain", domain, cookie.getDomain())__		}__	};assert,a,cookie,s,domain,value;public,result,matcher,domain,final,string,name,final,string,domain,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,name,domain,domain,cookie,get,domain
CookieResultMatchers -> public ResultMatcher domain(final String name, final String domain);1493321531;Assert a cookie's domain value.;public ResultMatcher domain(final String name, final String domain) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertEquals("Response cookie '" + name + "' domain", domain, cookie.getDomain())__		}__	};assert,a,cookie,s,domain,value;public,result,matcher,domain,final,string,name,final,string,domain,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,equals,response,cookie,name,domain,domain,cookie,get,domain
CookieResultMatchers -> public ResultMatcher domain(final String name, final String domain);1493929656;Assert a cookie's domain value.;public ResultMatcher domain(final String name, final String domain) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' domain", domain, cookie.getDomain())__		}__	};assert,a,cookie,s,domain,value;public,result,matcher,domain,final,string,name,final,string,domain,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,domain,domain,cookie,get,domain
CookieResultMatchers -> public ResultMatcher domain(final String name, final String domain);1496955179;Assert a cookie's domain value.;public ResultMatcher domain(final String name, final String domain) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' domain", domain, cookie.getDomain())__		}__	};assert,a,cookie,s,domain,value;public,result,matcher,domain,final,string,name,final,string,domain,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,domain,domain,cookie,get,domain
CookieResultMatchers -> public ResultMatcher domain(final String name, final String domain);1530174524;Assert a cookie's domain value.;public ResultMatcher domain(final String name, final String domain) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' domain", domain, cookie.getDomain())__		}__	};assert,a,cookie,s,domain,value;public,result,matcher,domain,final,string,name,final,string,domain,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,domain,domain,cookie,get,domain
CookieResultMatchers -> public ResultMatcher domain(final String name, final String domain);1530174524;Assert a cookie's domain value.;public ResultMatcher domain(final String name, final String domain) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie '" + name + "' domain", domain, cookie.getDomain())__		}__	};assert,a,cookie,s,domain,value;public,result,matcher,domain,final,string,name,final,string,domain,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,name,domain,domain,cookie,get,domain
CookieResultMatchers -> public ResultMatcher value(final String name, final String expectedValue);1383669853;Assert a cookie value.;public ResultMatcher value(final String name, final String expectedValue) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("Response cookie not found: " + name, cookie != null)__				assertEquals("Response cookie", expectedValue, cookie.getValue())__			}_		}__	};assert,a,cookie,value;public,result,matcher,value,final,string,name,final,string,expected,value,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,response,cookie,not,found,name,cookie,null,assert,equals,response,cookie,expected,value,cookie,get,value
CookieResultMatchers -> public ResultMatcher value(final String name, final String expectedValue);1413848647;Assert a cookie value.;public ResultMatcher value(final String name, final String expectedValue) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("Response cookie not found: " + name, cookie != null)__				assertEquals("Response cookie", expectedValue, cookie.getValue())__			}_		}__	};assert,a,cookie,value;public,result,matcher,value,final,string,name,final,string,expected,value,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,response,cookie,not,found,name,cookie,null,assert,equals,response,cookie,expected,value,cookie,get,value
CookieResultMatchers -> public ResultMatcher value(final String name, final String expectedValue);1427238287;Assert a cookie value.;public ResultMatcher value(final String name, final String expectedValue) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("Response cookie not found: " + name, cookie != null)__				assertEquals("Response cookie", expectedValue, cookie.getValue())__			}_		}__	};assert,a,cookie,value;public,result,matcher,value,final,string,name,final,string,expected,value,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,response,cookie,not,found,name,cookie,null,assert,equals,response,cookie,expected,value,cookie,get,value
CookieResultMatchers -> public ResultMatcher value(final String name, final String expectedValue);1437424890;Assert a cookie value.;public ResultMatcher value(final String name, final String expectedValue) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				Cookie cookie = result.getResponse().getCookie(name)__				assertTrue("Response cookie not found: " + name, cookie != null)__				assertEquals("Response cookie", expectedValue, cookie.getValue())__			}_		}__	};assert,a,cookie,value;public,result,matcher,value,final,string,name,final,string,expected,value,return,new,result,matcher,override,public,void,match,mvc,result,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,response,cookie,not,found,name,cookie,null,assert,equals,response,cookie,expected,value,cookie,get,value
CookieResultMatchers -> public ResultMatcher value(final String name, final String expectedValue);1493235170;Assert a cookie value.;public ResultMatcher value(final String name, final String expectedValue) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("Response cookie '" + name + "' not found", cookie != null)__			assertEquals("Response cookie", expectedValue, cookie.getValue())__		}__	};assert,a,cookie,value;public,result,matcher,value,final,string,name,final,string,expected,value,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,response,cookie,name,not,found,cookie,null,assert,equals,response,cookie,expected,value,cookie,get,value
CookieResultMatchers -> public ResultMatcher value(final String name, final String expectedValue);1493299207;Assert a cookie value.;public ResultMatcher value(final String name, final String expectedValue) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("Response cookie '" + name + "' not found", cookie != null)__			assertEquals("Response cookie", expectedValue, cookie.getValue())__		}__	};assert,a,cookie,value;public,result,matcher,value,final,string,name,final,string,expected,value,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,response,cookie,name,not,found,cookie,null,assert,equals,response,cookie,expected,value,cookie,get,value
CookieResultMatchers -> public ResultMatcher value(final String name, final String expectedValue);1493321531;Assert a cookie value.;public ResultMatcher value(final String name, final String expectedValue) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertTrue("Response cookie '" + name + "' not found", cookie != null)__			assertEquals("Response cookie", expectedValue, cookie.getValue())__		}__	};assert,a,cookie,value;public,result,matcher,value,final,string,name,final,string,expected,value,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,true,response,cookie,name,not,found,cookie,null,assert,equals,response,cookie,expected,value,cookie,get,value
CookieResultMatchers -> public ResultMatcher value(final String name, final String expectedValue);1493929656;Assert a cookie value.;public ResultMatcher value(final String name, final String expectedValue) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie", expectedValue, cookie.getValue())__		}__	};assert,a,cookie,value;public,result,matcher,value,final,string,name,final,string,expected,value,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,expected,value,cookie,get,value
CookieResultMatchers -> public ResultMatcher value(final String name, final String expectedValue);1496955179;Assert a cookie value.;public ResultMatcher value(final String name, final String expectedValue) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie", expectedValue, cookie.getValue())__		}__	};assert,a,cookie,value;public,result,matcher,value,final,string,name,final,string,expected,value,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,expected,value,cookie,get,value
CookieResultMatchers -> public ResultMatcher value(final String name, final String expectedValue);1530174524;Assert a cookie value.;public ResultMatcher value(final String name, final String expectedValue) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie", expectedValue, cookie.getValue())__		}__	};assert,a,cookie,value;public,result,matcher,value,final,string,name,final,string,expected,value,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,expected,value,cookie,get,value
CookieResultMatchers -> public ResultMatcher value(final String name, final String expectedValue);1530174524;Assert a cookie value.;public ResultMatcher value(final String name, final String expectedValue) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertEquals("Response cookie", expectedValue, cookie.getValue())__		}__	};assert,a,cookie,value;public,result,matcher,value,final,string,name,final,string,expected,value,return,result,cookie,cookie,get,cookie,result,name,assert,equals,response,cookie,expected,value,cookie,get,value
CookieResultMatchers -> public ResultMatcher comment(final String name, final Matcher<? super String> matcher);1383669853;Assert a cookie's comment with a Hamcrest {@link Matcher}.;public ResultMatcher comment(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertThat("Response cookie comment", cookie.getComment(), matcher)__			}_		}__	};assert,a,cookie,s,comment,with,a,hamcrest,link,matcher;public,result,matcher,comment,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,comment,cookie,get,comment,matcher
CookieResultMatchers -> public ResultMatcher comment(final String name, final Matcher<? super String> matcher);1413848647;Assert a cookie's comment with a Hamcrest {@link Matcher}.;public ResultMatcher comment(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertThat("Response cookie comment", cookie.getComment(), matcher)__			}_		}__	};assert,a,cookie,s,comment,with,a,hamcrest,link,matcher;public,result,matcher,comment,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,comment,cookie,get,comment,matcher
CookieResultMatchers -> public ResultMatcher comment(final String name, final Matcher<? super String> matcher);1427238287;Assert a cookie's comment with a Hamcrest {@link Matcher}.;public ResultMatcher comment(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertThat("Response cookie comment", cookie.getComment(), matcher)__			}_		}__	};assert,a,cookie,s,comment,with,a,hamcrest,link,matcher;public,result,matcher,comment,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,comment,cookie,get,comment,matcher
CookieResultMatchers -> public ResultMatcher comment(final String name, final Matcher<? super String> matcher);1437424890;Assert a cookie's comment with a Hamcrest {@link Matcher}.;public ResultMatcher comment(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertThat("Response cookie comment", cookie.getComment(), matcher)__			}_		}__	};assert,a,cookie,s,comment,with,a,hamcrest,link,matcher;public,result,matcher,comment,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,comment,cookie,get,comment,matcher
CookieResultMatchers -> public ResultMatcher comment(final String name, final Matcher<? super String> matcher);1493235170;Assert a cookie's comment with a Hamcrest {@link Matcher}.;public ResultMatcher comment(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertThat("Response cookie '" + name + "' comment", cookie.getComment(), matcher)__		}__	};assert,a,cookie,s,comment,with,a,hamcrest,link,matcher;public,result,matcher,comment,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,name,comment,cookie,get,comment,matcher
CookieResultMatchers -> public ResultMatcher comment(final String name, final Matcher<? super String> matcher);1493299207;Assert a cookie's comment with a Hamcrest {@link Matcher}.;public ResultMatcher comment(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertThat("Response cookie '" + name + "' comment", cookie.getComment(), matcher)__		}__	};assert,a,cookie,s,comment,with,a,hamcrest,link,matcher;public,result,matcher,comment,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,name,comment,cookie,get,comment,matcher
CookieResultMatchers -> public ResultMatcher comment(final String name, final Matcher<? super String> matcher);1493321531;Assert a cookie's comment with a Hamcrest {@link Matcher}.;public ResultMatcher comment(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertThat("Response cookie '" + name + "' comment", cookie.getComment(), matcher)__		}__	};assert,a,cookie,s,comment,with,a,hamcrest,link,matcher;public,result,matcher,comment,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,name,comment,cookie,get,comment,matcher
CookieResultMatchers -> public ResultMatcher comment(final String name, final Matcher<? super String> matcher);1493929656;Assert a cookie's comment with a Hamcrest {@link Matcher}.;public ResultMatcher comment(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' comment", cookie.getComment(), matcher)__		}__	};assert,a,cookie,s,comment,with,a,hamcrest,link,matcher;public,result,matcher,comment,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,comment,cookie,get,comment,matcher
CookieResultMatchers -> public ResultMatcher comment(final String name, final Matcher<? super String> matcher);1496955179;Assert a cookie's comment with a Hamcrest {@link Matcher}.;public ResultMatcher comment(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' comment", cookie.getComment(), matcher)__		}__	};assert,a,cookie,s,comment,with,a,hamcrest,link,matcher;public,result,matcher,comment,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,comment,cookie,get,comment,matcher
CookieResultMatchers -> public ResultMatcher comment(final String name, final Matcher<? super String> matcher);1530174524;Assert a cookie's comment with a Hamcrest {@link Matcher}.;public ResultMatcher comment(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' comment", cookie.getComment(), matcher)__		}__	};assert,a,cookie,s,comment,with,a,hamcrest,link,matcher;public,result,matcher,comment,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,comment,cookie,get,comment,matcher
CookieResultMatchers -> public ResultMatcher comment(final String name, final Matcher<? super String> matcher);1530174524;Assert a cookie's comment with a Hamcrest {@link Matcher}.;public ResultMatcher comment(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' comment", cookie.getComment(), matcher)__		}__	};assert,a,cookie,s,comment,with,a,hamcrest,link,matcher;public,result,matcher,comment,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,comment,cookie,get,comment,matcher
CookieResultMatchers -> public ResultMatcher path(final String name, final Matcher<? super String> matcher);1383669853;Assert a cookie path with a Hamcrest {@link Matcher}.;public ResultMatcher path(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertThat("Response cookie path", cookie.getPath(), matcher)__			}_		}__	};assert,a,cookie,path,with,a,hamcrest,link,matcher;public,result,matcher,path,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,path,cookie,get,path,matcher
CookieResultMatchers -> public ResultMatcher path(final String name, final Matcher<? super String> matcher);1413848647;Assert a cookie path with a Hamcrest {@link Matcher}.;public ResultMatcher path(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertThat("Response cookie path", cookie.getPath(), matcher)__			}_		}__	};assert,a,cookie,path,with,a,hamcrest,link,matcher;public,result,matcher,path,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,path,cookie,get,path,matcher
CookieResultMatchers -> public ResultMatcher path(final String name, final Matcher<? super String> matcher);1427238287;Assert a cookie path with a Hamcrest {@link Matcher}.;public ResultMatcher path(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertThat("Response cookie path", cookie.getPath(), matcher)__			}_		}__	};assert,a,cookie,path,with,a,hamcrest,link,matcher;public,result,matcher,path,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,path,cookie,get,path,matcher
CookieResultMatchers -> public ResultMatcher path(final String name, final Matcher<? super String> matcher);1437424890;Assert a cookie path with a Hamcrest {@link Matcher}.;public ResultMatcher path(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				Cookie cookie = result.getResponse().getCookie(name)__				assertThat("Response cookie path", cookie.getPath(), matcher)__			}_		}__	};assert,a,cookie,path,with,a,hamcrest,link,matcher;public,result,matcher,path,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,path,cookie,get,path,matcher
CookieResultMatchers -> public ResultMatcher path(final String name, final Matcher<? super String> matcher);1493235170;Assert a cookie path with a Hamcrest {@link Matcher}.;public ResultMatcher path(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertThat("Response cookie '" + name + "' path", cookie.getPath(), matcher)__		}__	};assert,a,cookie,path,with,a,hamcrest,link,matcher;public,result,matcher,path,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,name,path,cookie,get,path,matcher
CookieResultMatchers -> public ResultMatcher path(final String name, final Matcher<? super String> matcher);1493299207;Assert a cookie path with a Hamcrest {@link Matcher}.;public ResultMatcher path(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertThat("Response cookie '" + name + "' path", cookie.getPath(), matcher)__		}__	};assert,a,cookie,path,with,a,hamcrest,link,matcher;public,result,matcher,path,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,name,path,cookie,get,path,matcher
CookieResultMatchers -> public ResultMatcher path(final String name, final Matcher<? super String> matcher);1493321531;Assert a cookie path with a Hamcrest {@link Matcher}.;public ResultMatcher path(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = result.getResponse().getCookie(name)__			assertThat("Response cookie '" + name + "' path", cookie.getPath(), matcher)__		}__	};assert,a,cookie,path,with,a,hamcrest,link,matcher;public,result,matcher,path,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,result,get,response,get,cookie,name,assert,that,response,cookie,name,path,cookie,get,path,matcher
CookieResultMatchers -> public ResultMatcher path(final String name, final Matcher<? super String> matcher);1493929656;Assert a cookie path with a Hamcrest {@link Matcher}.;public ResultMatcher path(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' path", cookie.getPath(), matcher)__		}__	};assert,a,cookie,path,with,a,hamcrest,link,matcher;public,result,matcher,path,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,path,cookie,get,path,matcher
CookieResultMatchers -> public ResultMatcher path(final String name, final Matcher<? super String> matcher);1496955179;Assert a cookie path with a Hamcrest {@link Matcher}.;public ResultMatcher path(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' path", cookie.getPath(), matcher)__		}__	};assert,a,cookie,path,with,a,hamcrest,link,matcher;public,result,matcher,path,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,path,cookie,get,path,matcher
CookieResultMatchers -> public ResultMatcher path(final String name, final Matcher<? super String> matcher);1530174524;Assert a cookie path with a Hamcrest {@link Matcher}.;public ResultMatcher path(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' path", cookie.getPath(), matcher)__		}__	};assert,a,cookie,path,with,a,hamcrest,link,matcher;public,result,matcher,path,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,path,cookie,get,path,matcher
CookieResultMatchers -> public ResultMatcher path(final String name, final Matcher<? super String> matcher);1530174524;Assert a cookie path with a Hamcrest {@link Matcher}.;public ResultMatcher path(final String name, final Matcher<? super String> matcher) {_		return result -> {_			Cookie cookie = getCookie(result, name)__			assertThat("Response cookie '" + name + "' path", cookie.getPath(), matcher)__		}__	};assert,a,cookie,path,with,a,hamcrest,link,matcher;public,result,matcher,path,final,string,name,final,matcher,super,string,matcher,return,result,cookie,cookie,get,cookie,result,name,assert,that,response,cookie,name,path,cookie,get,path,matcher
