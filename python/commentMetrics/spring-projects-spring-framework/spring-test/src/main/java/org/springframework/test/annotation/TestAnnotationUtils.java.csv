# id;timestamp;commentText;codeText;commentWords;codeWords
TestAnnotationUtils -> public static int getRepeatCount(Method method);1431894269;Get the repeat count configured via the {@link Repeat @Repeat}_annotation on the supplied {@code method}._<p>Non-negative configured values will be converted to {@code 1}._@return the configured repeat count, or {@code 1} if the method is_not annotated with {@code @Repeat};public static int getRepeatCount(Method method) {_		Repeat repeat = AnnotationUtils.findAnnotation(method, Repeat.class)__		if (repeat == null) {_			return 1__		}_		return Math.max(1, repeat.value())__	};get,the,repeat,count,configured,via,the,link,repeat,repeat,annotation,on,the,supplied,code,method,p,non,negative,configured,values,will,be,converted,to,code,1,return,the,configured,repeat,count,or,code,1,if,the,method,is,not,annotated,with,code,repeat;public,static,int,get,repeat,count,method,method,repeat,repeat,annotation,utils,find,annotation,method,repeat,class,if,repeat,null,return,1,return,math,max,1,repeat,value
TestAnnotationUtils -> public static int getRepeatCount(Method method);1432856630;Get the repeat count configured via the {@link Repeat @Repeat}_annotation on the supplied {@code method}._<p>Non-negative configured values will be converted to {@code 1}._@return the configured repeat count, or {@code 1} if the method is_not annotated with {@code @Repeat};public static int getRepeatCount(Method method) {_		Repeat repeat = AnnotationUtils.findAnnotation(method, Repeat.class)__		if (repeat == null) {_			return 1__		}_		return Math.max(1, repeat.value())__	};get,the,repeat,count,configured,via,the,link,repeat,repeat,annotation,on,the,supplied,code,method,p,non,negative,configured,values,will,be,converted,to,code,1,return,the,configured,repeat,count,or,code,1,if,the,method,is,not,annotated,with,code,repeat;public,static,int,get,repeat,count,method,method,repeat,repeat,annotation,utils,find,annotation,method,repeat,class,if,repeat,null,return,1,return,math,max,1,repeat,value
TestAnnotationUtils -> public static int getRepeatCount(Method method);1432857944;Get the repeat count configured via the {@link Repeat @Repeat}_annotation on the supplied {@code method}._<p>Non-negative configured values will be converted to {@code 1}._@return the configured repeat count, or {@code 1} if the method is_not annotated with {@code @Repeat};public static int getRepeatCount(Method method) {_		Repeat repeat = AnnotationUtils.findAnnotation(method, Repeat.class)__		if (repeat == null) {_			return 1__		}_		return Math.max(1, repeat.value())__	};get,the,repeat,count,configured,via,the,link,repeat,repeat,annotation,on,the,supplied,code,method,p,non,negative,configured,values,will,be,converted,to,code,1,return,the,configured,repeat,count,or,code,1,if,the,method,is,not,annotated,with,code,repeat;public,static,int,get,repeat,count,method,method,repeat,repeat,annotation,utils,find,annotation,method,repeat,class,if,repeat,null,return,1,return,math,max,1,repeat,value
TestAnnotationUtils -> public static int getRepeatCount(Method method);1434234880;Get the repeat count configured via the {@link Repeat @Repeat}_annotation on the supplied {@code method}._<p>Non-negative configured values will be converted to {@code 1}._@return the configured repeat count, or {@code 1} if the method is_not annotated with {@code @Repeat};public static int getRepeatCount(Method method) {_		Repeat repeat = AnnotationUtils.findAnnotation(method, Repeat.class)__		if (repeat == null) {_			return 1__		}_		return Math.max(1, repeat.value())__	};get,the,repeat,count,configured,via,the,link,repeat,repeat,annotation,on,the,supplied,code,method,p,non,negative,configured,values,will,be,converted,to,code,1,return,the,configured,repeat,count,or,code,1,if,the,method,is,not,annotated,with,code,repeat;public,static,int,get,repeat,count,method,method,repeat,repeat,annotation,utils,find,annotation,method,repeat,class,if,repeat,null,return,1,return,math,max,1,repeat,value
TestAnnotationUtils -> public static int getRepeatCount(Method method);1458754760;Get the repeat count configured via the {@link Repeat @Repeat}_annotation on the supplied {@code method}._<p>Non-negative configured values will be converted to {@code 1}._@return the configured repeat count, or {@code 1} if the method is_not annotated with {@code @Repeat};public static int getRepeatCount(Method method) {_		Repeat repeat = AnnotatedElementUtils.findMergedAnnotation(method, Repeat.class)__		if (repeat == null) {_			return 1__		}_		return Math.max(1, repeat.value())__	};get,the,repeat,count,configured,via,the,link,repeat,repeat,annotation,on,the,supplied,code,method,p,non,negative,configured,values,will,be,converted,to,code,1,return,the,configured,repeat,count,or,code,1,if,the,method,is,not,annotated,with,code,repeat;public,static,int,get,repeat,count,method,method,repeat,repeat,annotated,element,utils,find,merged,annotation,method,repeat,class,if,repeat,null,return,1,return,math,max,1,repeat,value
TestAnnotationUtils -> public static int getRepeatCount(Method method);1530174524;Get the repeat count configured via the {@link Repeat @Repeat}_annotation on the supplied {@code method}._<p>Non-negative configured values will be converted to {@code 1}._@return the configured repeat count, or {@code 1} if the method is_not annotated with {@code @Repeat};public static int getRepeatCount(Method method) {_		Repeat repeat = AnnotatedElementUtils.findMergedAnnotation(method, Repeat.class)__		if (repeat == null) {_			return 1__		}_		return Math.max(1, repeat.value())__	};get,the,repeat,count,configured,via,the,link,repeat,repeat,annotation,on,the,supplied,code,method,p,non,negative,configured,values,will,be,converted,to,code,1,return,the,configured,repeat,count,or,code,1,if,the,method,is,not,annotated,with,code,repeat;public,static,int,get,repeat,count,method,method,repeat,repeat,annotated,element,utils,find,merged,annotation,method,repeat,class,if,repeat,null,return,1,return,math,max,1,repeat,value
TestAnnotationUtils -> public static int getRepeatCount(Method method);1530405080;Get the repeat count configured via the {@link Repeat @Repeat}_annotation on the supplied {@code method}._<p>Non-negative configured values will be converted to {@code 1}._@return the configured repeat count, or {@code 1} if the method is_not annotated with {@code @Repeat};public static int getRepeatCount(Method method) {_		Repeat repeat = AnnotatedElementUtils.findMergedAnnotation(method, Repeat.class)__		if (repeat == null) {_			return 1__		}_		return Math.max(1, repeat.value())__	};get,the,repeat,count,configured,via,the,link,repeat,repeat,annotation,on,the,supplied,code,method,p,non,negative,configured,values,will,be,converted,to,code,1,return,the,configured,repeat,count,or,code,1,if,the,method,is,not,annotated,with,code,repeat;public,static,int,get,repeat,count,method,method,repeat,repeat,annotated,element,utils,find,merged,annotation,method,repeat,class,if,repeat,null,return,1,return,math,max,1,repeat,value
TestAnnotationUtils -> public static long getTimeout(Method method);1431894269;Get the {@code timeout} configured via the {@link Timed @Timed}_annotation on the supplied {@code method}._<p>Negative configured values will be converted to {@code 0}._@return the configured timeout, or {@code 0} if the method is not_annotated with {@code @Timed};public static long getTimeout(Method method) {_		AnnotationAttributes attributes = AnnotatedElementUtils.findAnnotationAttributes(method, Timed.class.getName())__		if (attributes == null) {_			return 0__		}_		else {_			long millis = attributes.<Long> getNumber("millis").longValue()__			return Math.max(0, millis)__		}_	};get,the,code,timeout,configured,via,the,link,timed,timed,annotation,on,the,supplied,code,method,p,negative,configured,values,will,be,converted,to,code,0,return,the,configured,timeout,or,code,0,if,the,method,is,not,annotated,with,code,timed;public,static,long,get,timeout,method,method,annotation,attributes,attributes,annotated,element,utils,find,annotation,attributes,method,timed,class,get,name,if,attributes,null,return,0,else,long,millis,attributes,long,get,number,millis,long,value,return,math,max,0,millis
TestAnnotationUtils -> public static long getTimeout(Method method);1432856630;Get the {@code timeout} configured via the {@link Timed @Timed}_annotation on the supplied {@code method}._<p>Negative configured values will be converted to {@code 0}._@return the configured timeout, or {@code 0} if the method is not_annotated with {@code @Timed};public static long getTimeout(Method method) {_		Timed timed = AnnotatedElementUtils.findAnnotation(method, Timed.class)__		if (timed == null) {_			return 0__		}_		else {_			return Math.max(0, timed.millis())__		}_	};get,the,code,timeout,configured,via,the,link,timed,timed,annotation,on,the,supplied,code,method,p,negative,configured,values,will,be,converted,to,code,0,return,the,configured,timeout,or,code,0,if,the,method,is,not,annotated,with,code,timed;public,static,long,get,timeout,method,method,timed,timed,annotated,element,utils,find,annotation,method,timed,class,if,timed,null,return,0,else,return,math,max,0,timed,millis
TestAnnotationUtils -> public static long getTimeout(Method method);1432857944;Get the {@code timeout} configured via the {@link Timed @Timed}_annotation on the supplied {@code method}._<p>Negative configured values will be converted to {@code 0}._@return the configured timeout, or {@code 0} if the method is not_annotated with {@code @Timed};public static long getTimeout(Method method) {_		Timed timed = AnnotatedElementUtils.findAnnotation(method, Timed.class)__		if (timed == null) {_			return 0__		}_		return Math.max(0, timed.millis())__	};get,the,code,timeout,configured,via,the,link,timed,timed,annotation,on,the,supplied,code,method,p,negative,configured,values,will,be,converted,to,code,0,return,the,configured,timeout,or,code,0,if,the,method,is,not,annotated,with,code,timed;public,static,long,get,timeout,method,method,timed,timed,annotated,element,utils,find,annotation,method,timed,class,if,timed,null,return,0,return,math,max,0,timed,millis
TestAnnotationUtils -> public static long getTimeout(Method method);1434234880;Get the {@code timeout} configured via the {@link Timed @Timed}_annotation on the supplied {@code method}._<p>Negative configured values will be converted to {@code 0}._@return the configured timeout, or {@code 0} if the method is not_annotated with {@code @Timed};public static long getTimeout(Method method) {_		Timed timed = AnnotatedElementUtils.findMergedAnnotation(method, Timed.class)__		if (timed == null) {_			return 0__		}_		return Math.max(0, timed.millis())__	};get,the,code,timeout,configured,via,the,link,timed,timed,annotation,on,the,supplied,code,method,p,negative,configured,values,will,be,converted,to,code,0,return,the,configured,timeout,or,code,0,if,the,method,is,not,annotated,with,code,timed;public,static,long,get,timeout,method,method,timed,timed,annotated,element,utils,find,merged,annotation,method,timed,class,if,timed,null,return,0,return,math,max,0,timed,millis
TestAnnotationUtils -> public static long getTimeout(Method method);1458754760;Get the {@code timeout} configured via the {@link Timed @Timed}_annotation on the supplied {@code method}._<p>Negative configured values will be converted to {@code 0}._@return the configured timeout, or {@code 0} if the method is not_annotated with {@code @Timed};public static long getTimeout(Method method) {_		Timed timed = AnnotatedElementUtils.findMergedAnnotation(method, Timed.class)__		if (timed == null) {_			return 0__		}_		return Math.max(0, timed.millis())__	};get,the,code,timeout,configured,via,the,link,timed,timed,annotation,on,the,supplied,code,method,p,negative,configured,values,will,be,converted,to,code,0,return,the,configured,timeout,or,code,0,if,the,method,is,not,annotated,with,code,timed;public,static,long,get,timeout,method,method,timed,timed,annotated,element,utils,find,merged,annotation,method,timed,class,if,timed,null,return,0,return,math,max,0,timed,millis
TestAnnotationUtils -> public static long getTimeout(Method method);1530174524;Get the {@code timeout} configured via the {@link Timed @Timed}_annotation on the supplied {@code method}._<p>Negative configured values will be converted to {@code 0}._@return the configured timeout, or {@code 0} if the method is not_annotated with {@code @Timed};public static long getTimeout(Method method) {_		Timed timed = AnnotatedElementUtils.findMergedAnnotation(method, Timed.class)__		if (timed == null) {_			return 0__		}_		return Math.max(0, timed.millis())__	};get,the,code,timeout,configured,via,the,link,timed,timed,annotation,on,the,supplied,code,method,p,negative,configured,values,will,be,converted,to,code,0,return,the,configured,timeout,or,code,0,if,the,method,is,not,annotated,with,code,timed;public,static,long,get,timeout,method,method,timed,timed,annotated,element,utils,find,merged,annotation,method,timed,class,if,timed,null,return,0,return,math,max,0,timed,millis
TestAnnotationUtils -> public static long getTimeout(Method method);1530405080;Get the {@code timeout} configured via the {@link Timed @Timed}_annotation on the supplied {@code method}._<p>Negative configured values will be converted to {@code 0}._@return the configured timeout, or {@code 0} if the method is not_annotated with {@code @Timed};public static long getTimeout(Method method) {_		Timed timed = AnnotatedElementUtils.findMergedAnnotation(method, Timed.class)__		if (timed == null) {_			return 0__		}_		return Math.max(0, timed.millis())__	};get,the,code,timeout,configured,via,the,link,timed,timed,annotation,on,the,supplied,code,method,p,negative,configured,values,will,be,converted,to,code,0,return,the,configured,timeout,or,code,0,if,the,method,is,not,annotated,with,code,timed;public,static,long,get,timeout,method,method,timed,timed,annotated,element,utils,find,merged,annotation,method,timed,class,if,timed,null,return,0,return,math,max,0,timed,millis
