# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractRequestExpectationManager -> RequestExpectationGroup -> @Nullable 		public RequestExpectation findExpectation(ClientHttpRequest request) throws IOException;1516212100;Return a matching expectation, or {@code null} if none match.;@Nullable_		public RequestExpectation findExpectation(ClientHttpRequest request) throws IOException {_			for (RequestExpectation expectation : this.expectations) {_				try {_					expectation.match(request)__					return expectation__				}_				catch (AssertionError error) {_					_				}_			}_			return null__		};return,a,matching,expectation,or,code,null,if,none,match;nullable,public,request,expectation,find,expectation,client,http,request,request,throws,ioexception,for,request,expectation,expectation,this,expectations,try,expectation,match,request,return,expectation,catch,assertion,error,error,return,null
AbstractRequestExpectationManager -> RequestExpectationGroup -> @Nullable 		public RequestExpectation findExpectation(ClientHttpRequest request) throws IOException;1516212100;Return a matching expectation, or {@code null} if none match.;@Nullable_		public RequestExpectation findExpectation(ClientHttpRequest request) throws IOException {_			for (RequestExpectation expectation : this.expectations) {_				try {_					expectation.match(request)__					return expectation__				}_				catch (AssertionError error) {_					_				}_			}_			return null__		};return,a,matching,expectation,or,code,null,if,none,match;nullable,public,request,expectation,find,expectation,client,http,request,request,throws,ioexception,for,request,expectation,expectation,this,expectations,try,expectation,match,request,return,expectation,catch,assertion,error,error,return,null
AbstractRequestExpectationManager -> RequestExpectationGroup -> @Nullable 		public RequestExpectation findExpectation(ClientHttpRequest request) throws IOException;1516361410;Return a matching expectation, or {@code null} if none match.;@Nullable_		public RequestExpectation findExpectation(ClientHttpRequest request) throws IOException {_			for (RequestExpectation expectation : this.expectations) {_				try {_					expectation.match(request)__					return expectation__				}_				catch (AssertionError error) {_					_				}_			}_			return null__		};return,a,matching,expectation,or,code,null,if,none,match;nullable,public,request,expectation,find,expectation,client,http,request,request,throws,ioexception,for,request,expectation,expectation,this,expectations,try,expectation,match,request,return,expectation,catch,assertion,error,error,return,null
AbstractRequestExpectationManager -> RequestExpectationGroup -> @Nullable 		public RequestExpectation findExpectation(ClientHttpRequest request) throws IOException;1530294255;Return a matching expectation, or {@code null} if none match.;@Nullable_		public RequestExpectation findExpectation(ClientHttpRequest request) throws IOException {_			for (RequestExpectation expectation : this.expectations) {_				try {_					expectation.match(request)__					return expectation__				}_				catch (AssertionError error) {_					_				}_			}_			return null__		};return,a,matching,expectation,or,code,null,if,none,match;nullable,public,request,expectation,find,expectation,client,http,request,request,throws,ioexception,for,request,expectation,expectation,this,expectations,try,expectation,match,request,return,expectation,catch,assertion,error,error,return,null
AbstractRequestExpectationManager -> @Deprecated 	@Nullable 	protected ClientHttpResponse validateRequestInternal(ClientHttpRequest request) throws IOException;1516361410;Subclasses must implement the actual validation of the request_matching to declared expectations._@deprecated as of 5.0.3, subclasses should implement {@link #matchRequest(ClientHttpRequest)}_instead and return only the matched expectation, leaving the call to create the response_as a separate step (to be invoked by this class).;@Deprecated_	@Nullable_	protected ClientHttpResponse validateRequestInternal(ClientHttpRequest request) throws IOException {_		return null__	};subclasses,must,implement,the,actual,validation,of,the,request,matching,to,declared,expectations,deprecated,as,of,5,0,3,subclasses,should,implement,link,match,request,client,http,request,instead,and,return,only,the,matched,expectation,leaving,the,call,to,create,the,response,as,a,separate,step,to,be,invoked,by,this,class;deprecated,nullable,protected,client,http,response,validate,request,internal,client,http,request,request,throws,ioexception,return,null
AbstractRequestExpectationManager -> @Deprecated 	@Nullable 	protected ClientHttpResponse validateRequestInternal(ClientHttpRequest request) throws IOException;1530294255;Subclasses must implement the actual validation of the request_matching to declared expectations._@deprecated as of 5.0.3, subclasses should implement {@link #matchRequest(ClientHttpRequest)}_instead and return only the matched expectation, leaving the call to create the response_as a separate step (to be invoked by this class).;@Deprecated_	@Nullable_	protected ClientHttpResponse validateRequestInternal(ClientHttpRequest request) throws IOException {_		return null__	};subclasses,must,implement,the,actual,validation,of,the,request,matching,to,declared,expectations,deprecated,as,of,5,0,3,subclasses,should,implement,link,match,request,client,http,request,instead,and,return,only,the,matched,expectation,leaving,the,call,to,create,the,response,as,a,separate,step,to,be,invoked,by,this,class;deprecated,nullable,protected,client,http,response,validate,request,internal,client,http,request,request,throws,ioexception,return,null
AbstractRequestExpectationManager -> protected AssertionError createUnexpectedRequestError(ClientHttpRequest request);1456288439;Return an {@code AssertionError} that a sub-class can raise for an_unexpected request.;protected AssertionError createUnexpectedRequestError(ClientHttpRequest request) {_		HttpMethod method = request.getMethod()__		URI uri = request.getURI()__		String message = "No further requests expected: HTTP " + method + " " + uri + "\n"__		return new AssertionError(message + getRequestDetails())__	};return,an,code,assertion,error,that,a,sub,class,can,raise,for,an,unexpected,request;protected,assertion,error,create,unexpected,request,error,client,http,request,request,http,method,method,request,get,method,uri,uri,request,get,uri,string,message,no,further,requests,expected,http,method,uri,n,return,new,assertion,error,message,get,request,details
AbstractRequestExpectationManager -> protected AssertionError createUnexpectedRequestError(ClientHttpRequest request);1464277480;Return an {@code AssertionError} that a sub-class can raise for an_unexpected request.;protected AssertionError createUnexpectedRequestError(ClientHttpRequest request) {_		HttpMethod method = request.getMethod()__		URI uri = request.getURI()__		String message = "No further requests expected: HTTP " + method + " " + uri + "\n"__		return new AssertionError(message + getRequestDetails())__	};return,an,code,assertion,error,that,a,sub,class,can,raise,for,an,unexpected,request;protected,assertion,error,create,unexpected,request,error,client,http,request,request,http,method,method,request,get,method,uri,uri,request,get,uri,string,message,no,further,requests,expected,http,method,uri,n,return,new,assertion,error,message,get,request,details
AbstractRequestExpectationManager -> protected AssertionError createUnexpectedRequestError(ClientHttpRequest request);1465306936;Return an {@code AssertionError} that a sub-class can raise for an_unexpected request.;protected AssertionError createUnexpectedRequestError(ClientHttpRequest request) {_		HttpMethod method = request.getMethod()__		URI uri = request.getURI()__		String message = "No further requests expected: HTTP " + method + " " + uri + "\n"__		return new AssertionError(message + getRequestDetails())__	};return,an,code,assertion,error,that,a,sub,class,can,raise,for,an,unexpected,request;protected,assertion,error,create,unexpected,request,error,client,http,request,request,http,method,method,request,get,method,uri,uri,request,get,uri,string,message,no,further,requests,expected,http,method,uri,n,return,new,assertion,error,message,get,request,details
AbstractRequestExpectationManager -> protected AssertionError createUnexpectedRequestError(ClientHttpRequest request);1467730834;Return an {@code AssertionError} that a sub-class can raise for an_unexpected request.;protected AssertionError createUnexpectedRequestError(ClientHttpRequest request) {_		HttpMethod method = request.getMethod()__		URI uri = request.getURI()__		String message = "No further requests expected: HTTP " + method + " " + uri + "\n"__		return new AssertionError(message + getRequestDetails())__	};return,an,code,assertion,error,that,a,sub,class,can,raise,for,an,unexpected,request;protected,assertion,error,create,unexpected,request,error,client,http,request,request,http,method,method,request,get,method,uri,uri,request,get,uri,string,message,no,further,requests,expected,http,method,uri,n,return,new,assertion,error,message,get,request,details
AbstractRequestExpectationManager -> protected AssertionError createUnexpectedRequestError(ClientHttpRequest request);1484689765;Return an {@code AssertionError} that a sub-class can raise for an_unexpected request.;protected AssertionError createUnexpectedRequestError(ClientHttpRequest request) {_		HttpMethod method = request.getMethod()__		URI uri = request.getURI()__		String message = "No further requests expected: HTTP " + method + " " + uri + "\n"__		return new AssertionError(message + getRequestDetails())__	};return,an,code,assertion,error,that,a,sub,class,can,raise,for,an,unexpected,request;protected,assertion,error,create,unexpected,request,error,client,http,request,request,http,method,method,request,get,method,uri,uri,request,get,uri,string,message,no,further,requests,expected,http,method,uri,n,return,new,assertion,error,message,get,request,details
AbstractRequestExpectationManager -> protected AssertionError createUnexpectedRequestError(ClientHttpRequest request);1495868221;Return an {@code AssertionError} that a sub-class can raise for an_unexpected request.;protected AssertionError createUnexpectedRequestError(ClientHttpRequest request) {_		HttpMethod method = request.getMethod()__		URI uri = request.getURI()__		String message = "No further requests expected: HTTP " + method + " " + uri + "\n"__		return new AssertionError(message + getRequestDetails())__	};return,an,code,assertion,error,that,a,sub,class,can,raise,for,an,unexpected,request;protected,assertion,error,create,unexpected,request,error,client,http,request,request,http,method,method,request,get,method,uri,uri,request,get,uri,string,message,no,further,requests,expected,http,method,uri,n,return,new,assertion,error,message,get,request,details
AbstractRequestExpectationManager -> protected AssertionError createUnexpectedRequestError(ClientHttpRequest request);1497612763;Return an {@code AssertionError} that a sub-class can raise for an_unexpected request.;protected AssertionError createUnexpectedRequestError(ClientHttpRequest request) {_		HttpMethod method = request.getMethod()__		URI uri = request.getURI()__		String message = "No further requests expected: HTTP " + method + " " + uri + "\n"__		return new AssertionError(message + getRequestDetails())__	};return,an,code,assertion,error,that,a,sub,class,can,raise,for,an,unexpected,request;protected,assertion,error,create,unexpected,request,error,client,http,request,request,http,method,method,request,get,method,uri,uri,request,get,uri,string,message,no,further,requests,expected,http,method,uri,n,return,new,assertion,error,message,get,request,details
AbstractRequestExpectationManager -> protected AssertionError createUnexpectedRequestError(ClientHttpRequest request);1500978584;Return an {@code AssertionError} that a sub-class can raise for an_unexpected request.;protected AssertionError createUnexpectedRequestError(ClientHttpRequest request) {_		HttpMethod method = request.getMethod()__		URI uri = request.getURI()__		String message = "No further requests expected: HTTP " + method + " " + uri + "\n"__		return new AssertionError(message + getRequestDetails())__	};return,an,code,assertion,error,that,a,sub,class,can,raise,for,an,unexpected,request;protected,assertion,error,create,unexpected,request,error,client,http,request,request,http,method,method,request,get,method,uri,uri,request,get,uri,string,message,no,further,requests,expected,http,method,uri,n,return,new,assertion,error,message,get,request,details
AbstractRequestExpectationManager -> protected AssertionError createUnexpectedRequestError(ClientHttpRequest request);1509376770;Return an {@code AssertionError} that a sub-class can raise for an_unexpected request.;protected AssertionError createUnexpectedRequestError(ClientHttpRequest request) {_		HttpMethod method = request.getMethod()__		URI uri = request.getURI()__		String message = "No further requests expected: HTTP " + method + " " + uri + "\n"__		return new AssertionError(message + getRequestDetails())__	};return,an,code,assertion,error,that,a,sub,class,can,raise,for,an,unexpected,request;protected,assertion,error,create,unexpected,request,error,client,http,request,request,http,method,method,request,get,method,uri,uri,request,get,uri,string,message,no,further,requests,expected,http,method,uri,n,return,new,assertion,error,message,get,request,details
AbstractRequestExpectationManager -> protected AssertionError createUnexpectedRequestError(ClientHttpRequest request);1509378020;Return an {@code AssertionError} that a sub-class can raise for an_unexpected request.;protected AssertionError createUnexpectedRequestError(ClientHttpRequest request) {_		HttpMethod method = request.getMethod()__		URI uri = request.getURI()__		String message = "No further requests expected: HTTP " + method + " " + uri + "\n"__		return new AssertionError(message + getRequestDetails())__	};return,an,code,assertion,error,that,a,sub,class,can,raise,for,an,unexpected,request;protected,assertion,error,create,unexpected,request,error,client,http,request,request,http,method,method,request,get,method,uri,uri,request,get,uri,string,message,no,further,requests,expected,http,method,uri,n,return,new,assertion,error,message,get,request,details
AbstractRequestExpectationManager -> protected AssertionError createUnexpectedRequestError(ClientHttpRequest request);1516212100;Return an {@code AssertionError} that a sub-class can raise for an_unexpected request.;protected AssertionError createUnexpectedRequestError(ClientHttpRequest request) {_		HttpMethod method = request.getMethod()__		URI uri = request.getURI()__		String message = "No further requests expected: HTTP " + method + " " + uri + "\n"__		return new AssertionError(message + getRequestDetails())__	};return,an,code,assertion,error,that,a,sub,class,can,raise,for,an,unexpected,request;protected,assertion,error,create,unexpected,request,error,client,http,request,request,http,method,method,request,get,method,uri,uri,request,get,uri,string,message,no,further,requests,expected,http,method,uri,n,return,new,assertion,error,message,get,request,details
AbstractRequestExpectationManager -> protected AssertionError createUnexpectedRequestError(ClientHttpRequest request);1516212100;Return an {@code AssertionError} that a sub-class can raise for an_unexpected request.;protected AssertionError createUnexpectedRequestError(ClientHttpRequest request) {_		HttpMethod method = request.getMethod()__		URI uri = request.getURI()__		String message = "No further requests expected: HTTP " + method + " " + uri + "\n"__		return new AssertionError(message + getRequestDetails())__	};return,an,code,assertion,error,that,a,sub,class,can,raise,for,an,unexpected,request;protected,assertion,error,create,unexpected,request,error,client,http,request,request,http,method,method,request,get,method,uri,uri,request,get,uri,string,message,no,further,requests,expected,http,method,uri,n,return,new,assertion,error,message,get,request,details
AbstractRequestExpectationManager -> protected AssertionError createUnexpectedRequestError(ClientHttpRequest request);1516361410;Return an {@code AssertionError} that a sub-class can raise for an_unexpected request.;protected AssertionError createUnexpectedRequestError(ClientHttpRequest request) {_		HttpMethod method = request.getMethod()__		URI uri = request.getURI()__		String message = "No further requests expected: HTTP " + method + " " + uri + "\n"__		return new AssertionError(message + getRequestDetails())__	};return,an,code,assertion,error,that,a,sub,class,can,raise,for,an,unexpected,request;protected,assertion,error,create,unexpected,request,error,client,http,request,request,http,method,method,request,get,method,uri,uri,request,get,uri,string,message,no,further,requests,expected,http,method,uri,n,return,new,assertion,error,message,get,request,details
AbstractRequestExpectationManager -> protected AssertionError createUnexpectedRequestError(ClientHttpRequest request);1530294255;Return an {@code AssertionError} that a sub-class can raise for an_unexpected request.;protected AssertionError createUnexpectedRequestError(ClientHttpRequest request) {_		HttpMethod method = request.getMethod()__		URI uri = request.getURI()__		String message = "No further requests expected: HTTP " + method + " " + uri + "\n"__		return new AssertionError(message + getRequestDetails())__	};return,an,code,assertion,error,that,a,sub,class,can,raise,for,an,unexpected,request;protected,assertion,error,create,unexpected,request,error,client,http,request,request,http,method,method,request,get,method,uri,uri,request,get,uri,string,message,no,further,requests,expected,http,method,uri,n,return,new,assertion,error,message,get,request,details
AbstractRequestExpectationManager -> RequestExpectationGroup -> public void update(RequestExpectation expectation);1500978584;Invoke this for an expectation that has been matched._<p>The given expectation will either be stored if it has a remaining_count or it will be removed otherwise.;public void update(RequestExpectation expectation) {_			if (expectation.hasRemainingCount()) {_				this.expectations.add(expectation)__			}_			else {_				this.expectations.remove(expectation)__			}_		};invoke,this,for,an,expectation,that,has,been,matched,p,the,given,expectation,will,either,be,stored,if,it,has,a,remaining,count,or,it,will,be,removed,otherwise;public,void,update,request,expectation,expectation,if,expectation,has,remaining,count,this,expectations,add,expectation,else,this,expectations,remove,expectation
AbstractRequestExpectationManager -> RequestExpectationGroup -> public void update(RequestExpectation expectation);1509376770;Invoke this for an expectation that has been matched._<p>The given expectation will either be stored if it has a remaining_count or it will be removed otherwise.;public void update(RequestExpectation expectation) {_			if (expectation.hasRemainingCount()) {_				this.expectations.add(expectation)__			}_			else {_				this.expectations.remove(expectation)__			}_		};invoke,this,for,an,expectation,that,has,been,matched,p,the,given,expectation,will,either,be,stored,if,it,has,a,remaining,count,or,it,will,be,removed,otherwise;public,void,update,request,expectation,expectation,if,expectation,has,remaining,count,this,expectations,add,expectation,else,this,expectations,remove,expectation
AbstractRequestExpectationManager -> RequestExpectationGroup -> public void update(RequestExpectation expectation);1509378020;Invoke this for an expectation that has been matched._<p>The given expectation will either be stored if it has a remaining_count or it will be removed otherwise.;public void update(RequestExpectation expectation) {_			if (expectation.hasRemainingCount()) {_				this.expectations.add(expectation)__			}_			else {_				this.expectations.remove(expectation)__			}_		};invoke,this,for,an,expectation,that,has,been,matched,p,the,given,expectation,will,either,be,stored,if,it,has,a,remaining,count,or,it,will,be,removed,otherwise;public,void,update,request,expectation,expectation,if,expectation,has,remaining,count,this,expectations,add,expectation,else,this,expectations,remove,expectation
AbstractRequestExpectationManager -> RequestExpectationGroup -> public void update(RequestExpectation expectation);1516212100;Invoke this for an expectation that has been matched._<p>The given expectation will either be stored if it has a remaining_count or it will be removed otherwise.;public void update(RequestExpectation expectation) {_			if (expectation.hasRemainingCount()) {_				this.expectations.add(expectation)__			}_			else {_				this.expectations.remove(expectation)__			}_		};invoke,this,for,an,expectation,that,has,been,matched,p,the,given,expectation,will,either,be,stored,if,it,has,a,remaining,count,or,it,will,be,removed,otherwise;public,void,update,request,expectation,expectation,if,expectation,has,remaining,count,this,expectations,add,expectation,else,this,expectations,remove,expectation
AbstractRequestExpectationManager -> RequestExpectationGroup -> public void update(RequestExpectation expectation);1516212100;Invoke this for an expectation that has been matched._<p>The count of the given expectation is incremented, then it is_either stored if remainingCount > 0 or removed otherwise.;public void update(RequestExpectation expectation) {_			expectation.incrementAndValidate()__			updateInternal(expectation)__		};invoke,this,for,an,expectation,that,has,been,matched,p,the,count,of,the,given,expectation,is,incremented,then,it,is,either,stored,if,remaining,count,0,or,removed,otherwise;public,void,update,request,expectation,expectation,expectation,increment,and,validate,update,internal,expectation
AbstractRequestExpectationManager -> RequestExpectationGroup -> public void update(RequestExpectation expectation);1516361410;Invoke this for an expectation that has been matched._<p>The count of the given expectation is incremented, then it is_either stored if remainingCount > 0 or removed otherwise.;public void update(RequestExpectation expectation) {_			expectation.incrementAndValidate()__			updateInternal(expectation)__		};invoke,this,for,an,expectation,that,has,been,matched,p,the,count,of,the,given,expectation,is,incremented,then,it,is,either,stored,if,remaining,count,0,or,removed,otherwise;public,void,update,request,expectation,expectation,expectation,increment,and,validate,update,internal,expectation
AbstractRequestExpectationManager -> RequestExpectationGroup -> public void update(RequestExpectation expectation);1530294255;Invoke this for an expectation that has been matched._<p>The count of the given expectation is incremented, then it is_either stored if remainingCount > 0 or removed otherwise.;public void update(RequestExpectation expectation) {_			expectation.incrementAndValidate()__			updateInternal(expectation)__		};invoke,this,for,an,expectation,that,has,been,matched,p,the,count,of,the,given,expectation,is,incremented,then,it,is,either,stored,if,remaining,count,0,or,removed,otherwise;public,void,update,request,expectation,expectation,expectation,increment,and,validate,update,internal,expectation
AbstractRequestExpectationManager -> protected void afterExpectationsDeclared();1456288439;Invoked after the phase of declaring expected requests is over. This is_detected from {@link #validateRequest} on the first actual request.;protected void afterExpectationsDeclared() {_	};invoked,after,the,phase,of,declaring,expected,requests,is,over,this,is,detected,from,link,validate,request,on,the,first,actual,request;protected,void,after,expectations,declared
AbstractRequestExpectationManager -> protected void afterExpectationsDeclared();1464277480;Invoked after the phase of declaring expected requests is over. This is_detected from {@link #validateRequest} on the first actual request.;protected void afterExpectationsDeclared() {_	};invoked,after,the,phase,of,declaring,expected,requests,is,over,this,is,detected,from,link,validate,request,on,the,first,actual,request;protected,void,after,expectations,declared
AbstractRequestExpectationManager -> protected void afterExpectationsDeclared();1465306936;Invoked after the phase of declaring expected requests is over. This is_detected from {@link #validateRequest} on the first actual request.;protected void afterExpectationsDeclared() {_	};invoked,after,the,phase,of,declaring,expected,requests,is,over,this,is,detected,from,link,validate,request,on,the,first,actual,request;protected,void,after,expectations,declared
AbstractRequestExpectationManager -> protected void afterExpectationsDeclared();1467730834;Invoked after the phase of declaring expected requests is over. This is_detected from {@link #validateRequest} on the first actual request.;protected void afterExpectationsDeclared() {_	};invoked,after,the,phase,of,declaring,expected,requests,is,over,this,is,detected,from,link,validate,request,on,the,first,actual,request;protected,void,after,expectations,declared
AbstractRequestExpectationManager -> protected void afterExpectationsDeclared();1484689765;Invoked after the phase of declaring expected requests is over. This is_detected from {@link #validateRequest} on the first actual request.;protected void afterExpectationsDeclared() {_	};invoked,after,the,phase,of,declaring,expected,requests,is,over,this,is,detected,from,link,validate,request,on,the,first,actual,request;protected,void,after,expectations,declared
AbstractRequestExpectationManager -> protected void afterExpectationsDeclared();1495868221;Invoked after the phase of declaring expected requests is over. This is_detected from {@link #validateRequest} on the first actual request.;protected void afterExpectationsDeclared() {_	};invoked,after,the,phase,of,declaring,expected,requests,is,over,this,is,detected,from,link,validate,request,on,the,first,actual,request;protected,void,after,expectations,declared
AbstractRequestExpectationManager -> protected void afterExpectationsDeclared();1497612763;Invoked after the phase of declaring expected requests is over. This is_detected from {@link #validateRequest} on the first actual request.;protected void afterExpectationsDeclared() {_	};invoked,after,the,phase,of,declaring,expected,requests,is,over,this,is,detected,from,link,validate,request,on,the,first,actual,request;protected,void,after,expectations,declared
AbstractRequestExpectationManager -> protected void afterExpectationsDeclared();1500978584;Invoked at the time of the first actual request, which effectively means_the expectations declaration phase is over.;protected void afterExpectationsDeclared() {_	};invoked,at,the,time,of,the,first,actual,request,which,effectively,means,the,expectations,declaration,phase,is,over;protected,void,after,expectations,declared
AbstractRequestExpectationManager -> protected void afterExpectationsDeclared();1509376770;Invoked at the time of the first actual request, which effectively means_the expectations declaration phase is over.;protected void afterExpectationsDeclared() {_	};invoked,at,the,time,of,the,first,actual,request,which,effectively,means,the,expectations,declaration,phase,is,over;protected,void,after,expectations,declared
AbstractRequestExpectationManager -> protected void afterExpectationsDeclared();1509378020;Invoked at the time of the first actual request, which effectively means_the expectations declaration phase is over.;protected void afterExpectationsDeclared() {_	};invoked,at,the,time,of,the,first,actual,request,which,effectively,means,the,expectations,declaration,phase,is,over;protected,void,after,expectations,declared
AbstractRequestExpectationManager -> protected void afterExpectationsDeclared();1516212100;Invoked at the time of the first actual request, which effectively means_the expectations declaration phase is over.;protected void afterExpectationsDeclared() {_	};invoked,at,the,time,of,the,first,actual,request,which,effectively,means,the,expectations,declaration,phase,is,over;protected,void,after,expectations,declared
AbstractRequestExpectationManager -> protected void afterExpectationsDeclared();1516212100;Invoked at the time of the first actual request, which effectively means_the expectations declaration phase is over.;protected void afterExpectationsDeclared() {_	};invoked,at,the,time,of,the,first,actual,request,which,effectively,means,the,expectations,declaration,phase,is,over;protected,void,after,expectations,declared
AbstractRequestExpectationManager -> protected void afterExpectationsDeclared();1516361410;Invoked at the time of the first actual request, which effectively means_the expectations declaration phase is over.;protected void afterExpectationsDeclared() {_	};invoked,at,the,time,of,the,first,actual,request,which,effectively,means,the,expectations,declaration,phase,is,over;protected,void,after,expectations,declared
AbstractRequestExpectationManager -> protected void afterExpectationsDeclared();1530294255;Invoked at the time of the first actual request, which effectively means_the expectations declaration phase is over.;protected void afterExpectationsDeclared() {_	};invoked,at,the,time,of,the,first,actual,request,which,effectively,means,the,expectations,declaration,phase,is,over;protected,void,after,expectations,declared
AbstractRequestExpectationManager -> protected RequestExpectation matchRequest(ClientHttpRequest request) throws IOException;1516212100;As of 5.0.3 subclasses should implement this method instead of_{@link #validateRequestInternal(ClientHttpRequest)} in order to match the_request to an expectation, leaving the call to create the response as a separate step_(to be invoked by this class)._@param request the current request_@return the matched expectation with its request count updated via_{@link RequestExpectation#incrementAndValidate()}._@since 5.0.3;protected RequestExpectation matchRequest(ClientHttpRequest request) throws IOException {_		throw new java.lang.UnsupportedOperationException(_				"It looks like neither the deprecated \"validateRequestInternal\"" +_						"nor its replacement (this method) are implemented.")__	};as,of,5,0,3,subclasses,should,implement,this,method,instead,of,link,validate,request,internal,client,http,request,in,order,to,match,the,request,to,an,expectation,leaving,the,call,to,create,the,response,as,a,separate,step,to,be,invoked,by,this,class,param,request,the,current,request,return,the,matched,expectation,with,its,request,count,updated,via,link,request,expectation,increment,and,validate,since,5,0,3;protected,request,expectation,match,request,client,http,request,request,throws,ioexception,throw,new,java,lang,unsupported,operation,exception,it,looks,like,neither,the,deprecated,validate,request,internal,nor,its,replacement,this,method,are,implemented
AbstractRequestExpectationManager -> protected RequestExpectation matchRequest(ClientHttpRequest request) throws IOException;1516361410;As of 5.0.3 subclasses should implement this method instead of_{@link #validateRequestInternal(ClientHttpRequest)} in order to match the_request to an expectation, leaving the call to create the response as a separate step_(to be invoked by this class)._@param request the current request_@return the matched expectation with its request count updated via_{@link RequestExpectation#incrementAndValidate()}._@since 5.0.3;protected RequestExpectation matchRequest(ClientHttpRequest request) throws IOException {_		throw new UnsupportedOperationException("It looks like neither the deprecated \"validateRequestInternal\"" +_				"nor its replacement (this method) are implemented.")__	};as,of,5,0,3,subclasses,should,implement,this,method,instead,of,link,validate,request,internal,client,http,request,in,order,to,match,the,request,to,an,expectation,leaving,the,call,to,create,the,response,as,a,separate,step,to,be,invoked,by,this,class,param,request,the,current,request,return,the,matched,expectation,with,its,request,count,updated,via,link,request,expectation,increment,and,validate,since,5,0,3;protected,request,expectation,match,request,client,http,request,request,throws,ioexception,throw,new,unsupported,operation,exception,it,looks,like,neither,the,deprecated,validate,request,internal,nor,its,replacement,this,method,are,implemented
AbstractRequestExpectationManager -> protected RequestExpectation matchRequest(ClientHttpRequest request) throws IOException;1530294255;As of 5.0.3 subclasses should implement this method instead of_{@link #validateRequestInternal(ClientHttpRequest)} in order to match the_request to an expectation, leaving the call to create the response as a separate step_(to be invoked by this class)._@param request the current request_@return the matched expectation with its request count updated via_{@link RequestExpectation#incrementAndValidate()}._@since 5.0.3;protected RequestExpectation matchRequest(ClientHttpRequest request) throws IOException {_		throw new UnsupportedOperationException("It looks like neither the deprecated \"validateRequestInternal\"" +_				"nor its replacement (this method) are implemented.")__	};as,of,5,0,3,subclasses,should,implement,this,method,instead,of,link,validate,request,internal,client,http,request,in,order,to,match,the,request,to,an,expectation,leaving,the,call,to,create,the,response,as,a,separate,step,to,be,invoked,by,this,class,param,request,the,current,request,return,the,matched,expectation,with,its,request,count,updated,via,link,request,expectation,increment,and,validate,since,5,0,3;protected,request,expectation,match,request,client,http,request,request,throws,ioexception,throw,new,unsupported,operation,exception,it,looks,like,neither,the,deprecated,validate,request,internal,nor,its,replacement,this,method,are,implemented
AbstractRequestExpectationManager -> protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request) throws IOException_;1465306936;Subclasses must implement the actual validation of the request_matching it to a declared expectation.;protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request) throws IOException_;subclasses,must,implement,the,actual,validation,of,the,request,matching,it,to,a,declared,expectation;protected,abstract,client,http,response,validate,request,internal,client,http,request,request,throws,ioexception
AbstractRequestExpectationManager -> protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request) throws IOException_;1467730834;Subclasses must implement the actual validation of the request_matching it to a declared expectation.;protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request) throws IOException_;subclasses,must,implement,the,actual,validation,of,the,request,matching,it,to,a,declared,expectation;protected,abstract,client,http,response,validate,request,internal,client,http,request,request,throws,ioexception
AbstractRequestExpectationManager -> protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request) throws IOException_;1484689765;Subclasses must implement the actual validation of the request_matching it to a declared expectation.;protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request) throws IOException_;subclasses,must,implement,the,actual,validation,of,the,request,matching,it,to,a,declared,expectation;protected,abstract,client,http,response,validate,request,internal,client,http,request,request,throws,ioexception
AbstractRequestExpectationManager -> protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request) throws IOException_;1495868221;Subclasses must implement the actual validation of the request_matching it to a declared expectation.;protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request) throws IOException_;subclasses,must,implement,the,actual,validation,of,the,request,matching,it,to,a,declared,expectation;protected,abstract,client,http,response,validate,request,internal,client,http,request,request,throws,ioexception
AbstractRequestExpectationManager -> protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request) throws IOException_;1497612763;Subclasses must implement the actual validation of the request_matching it to a declared expectation.;protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request) throws IOException_;subclasses,must,implement,the,actual,validation,of,the,request,matching,it,to,a,declared,expectation;protected,abstract,client,http,response,validate,request,internal,client,http,request,request,throws,ioexception
AbstractRequestExpectationManager -> protected String getRequestDetails();1456288439;Return details of executed requests.;protected String getRequestDetails() {_		StringBuilder sb = new StringBuilder()__		sb.append(getRequests().size()).append(" request(s) executed")__		if (!getRequests().isEmpty()) {_			sb.append(":\n")__			for (ClientHttpRequest request : getRequests()) {_				sb.append(request.toString()).append("\n")__			}_		}_		else {_			sb.append(".\n")__		}_		return sb.toString()__	};return,details,of,executed,requests;protected,string,get,request,details,string,builder,sb,new,string,builder,sb,append,get,requests,size,append,request,s,executed,if,get,requests,is,empty,sb,append,n,for,client,http,request,request,get,requests,sb,append,request,to,string,append,n,else,sb,append,n,return,sb,to,string
AbstractRequestExpectationManager -> protected String getRequestDetails();1464277480;Return details of executed requests.;protected String getRequestDetails() {_		StringBuilder sb = new StringBuilder()__		sb.append(getRequests().size()).append(" request(s) executed")__		if (!getRequests().isEmpty()) {_			sb.append(":\n")__			for (ClientHttpRequest request : getRequests()) {_				sb.append(request.toString()).append("\n")__			}_		}_		else {_			sb.append(".\n")__		}_		return sb.toString()__	};return,details,of,executed,requests;protected,string,get,request,details,string,builder,sb,new,string,builder,sb,append,get,requests,size,append,request,s,executed,if,get,requests,is,empty,sb,append,n,for,client,http,request,request,get,requests,sb,append,request,to,string,append,n,else,sb,append,n,return,sb,to,string
AbstractRequestExpectationManager -> protected String getRequestDetails();1465306936;Return details of executed requests.;protected String getRequestDetails() {_		StringBuilder sb = new StringBuilder()__		sb.append(getRequests().size()).append(" request(s) executed")__		if (!getRequests().isEmpty()) {_			sb.append(":\n")__			for (ClientHttpRequest request : getRequests()) {_				sb.append(request.toString()).append("\n")__			}_		}_		else {_			sb.append(".\n")__		}_		return sb.toString()__	};return,details,of,executed,requests;protected,string,get,request,details,string,builder,sb,new,string,builder,sb,append,get,requests,size,append,request,s,executed,if,get,requests,is,empty,sb,append,n,for,client,http,request,request,get,requests,sb,append,request,to,string,append,n,else,sb,append,n,return,sb,to,string
AbstractRequestExpectationManager -> protected String getRequestDetails();1467730834;Return details of executed requests.;protected String getRequestDetails() {_		StringBuilder sb = new StringBuilder()__		sb.append(getRequests().size()).append(" request(s) executed")__		if (!getRequests().isEmpty()) {_			sb.append(":\n")__			for (ClientHttpRequest request : getRequests()) {_				sb.append(request.toString()).append("\n")__			}_		}_		else {_			sb.append(".\n")__		}_		return sb.toString()__	};return,details,of,executed,requests;protected,string,get,request,details,string,builder,sb,new,string,builder,sb,append,get,requests,size,append,request,s,executed,if,get,requests,is,empty,sb,append,n,for,client,http,request,request,get,requests,sb,append,request,to,string,append,n,else,sb,append,n,return,sb,to,string
AbstractRequestExpectationManager -> protected String getRequestDetails();1484689765;Return details of executed requests.;protected String getRequestDetails() {_		StringBuilder sb = new StringBuilder()__		sb.append(getRequests().size()).append(" request(s) executed")__		if (!getRequests().isEmpty()) {_			sb.append(":\n")__			for (ClientHttpRequest request : getRequests()) {_				sb.append(request.toString()).append("\n")__			}_		}_		else {_			sb.append(".\n")__		}_		return sb.toString()__	};return,details,of,executed,requests;protected,string,get,request,details,string,builder,sb,new,string,builder,sb,append,get,requests,size,append,request,s,executed,if,get,requests,is,empty,sb,append,n,for,client,http,request,request,get,requests,sb,append,request,to,string,append,n,else,sb,append,n,return,sb,to,string
AbstractRequestExpectationManager -> protected String getRequestDetails();1495868221;Return details of executed requests.;protected String getRequestDetails() {_		StringBuilder sb = new StringBuilder()__		sb.append(getRequests().size()).append(" request(s) executed")__		if (!getRequests().isEmpty()) {_			sb.append(":\n")__			for (ClientHttpRequest request : getRequests()) {_				sb.append(request.toString()).append("\n")__			}_		}_		else {_			sb.append(".\n")__		}_		return sb.toString()__	};return,details,of,executed,requests;protected,string,get,request,details,string,builder,sb,new,string,builder,sb,append,get,requests,size,append,request,s,executed,if,get,requests,is,empty,sb,append,n,for,client,http,request,request,get,requests,sb,append,request,to,string,append,n,else,sb,append,n,return,sb,to,string
AbstractRequestExpectationManager -> protected String getRequestDetails();1497612763;Return details of executed requests.;protected String getRequestDetails() {_		StringBuilder sb = new StringBuilder()__		sb.append(getRequests().size()).append(" request(s) executed")__		if (!getRequests().isEmpty()) {_			sb.append(":\n")__			for (ClientHttpRequest request : getRequests()) {_				sb.append(request.toString()).append("\n")__			}_		}_		else {_			sb.append(".\n")__		}_		return sb.toString()__	};return,details,of,executed,requests;protected,string,get,request,details,string,builder,sb,new,string,builder,sb,append,get,requests,size,append,request,s,executed,if,get,requests,is,empty,sb,append,n,for,client,http,request,request,get,requests,sb,append,request,to,string,append,n,else,sb,append,n,return,sb,to,string
AbstractRequestExpectationManager -> protected String getRequestDetails();1500978584;Return details of executed requests.;protected String getRequestDetails() {_		StringBuilder sb = new StringBuilder()__		sb.append(this.requests.size()).append(" request(s) executed")__		if (!this.requests.isEmpty()) {_			sb.append(":\n")__			for (ClientHttpRequest request : this.requests) {_				sb.append(request.toString()).append("\n")__			}_		}_		else {_			sb.append(".\n")__		}_		return sb.toString()__	};return,details,of,executed,requests;protected,string,get,request,details,string,builder,sb,new,string,builder,sb,append,this,requests,size,append,request,s,executed,if,this,requests,is,empty,sb,append,n,for,client,http,request,request,this,requests,sb,append,request,to,string,append,n,else,sb,append,n,return,sb,to,string
AbstractRequestExpectationManager -> protected String getRequestDetails();1509376770;Return details of executed requests.;protected String getRequestDetails() {_		StringBuilder sb = new StringBuilder()__		sb.append(this.requests.size()).append(" request(s) executed")__		if (!this.requests.isEmpty()) {_			sb.append(":\n")__			for (ClientHttpRequest request : this.requests) {_				sb.append(request.toString()).append("\n")__			}_		}_		else {_			sb.append(".\n")__		}_		return sb.toString()__	};return,details,of,executed,requests;protected,string,get,request,details,string,builder,sb,new,string,builder,sb,append,this,requests,size,append,request,s,executed,if,this,requests,is,empty,sb,append,n,for,client,http,request,request,this,requests,sb,append,request,to,string,append,n,else,sb,append,n,return,sb,to,string
AbstractRequestExpectationManager -> protected String getRequestDetails();1509378020;Return details of executed requests.;protected String getRequestDetails() {_		StringBuilder sb = new StringBuilder()__		sb.append(this.requests.size()).append(" request(s) executed")__		if (!this.requests.isEmpty()) {_			sb.append(":\n")__			for (ClientHttpRequest request : this.requests) {_				sb.append(request.toString()).append("\n")__			}_		}_		else {_			sb.append(".\n")__		}_		return sb.toString()__	};return,details,of,executed,requests;protected,string,get,request,details,string,builder,sb,new,string,builder,sb,append,this,requests,size,append,request,s,executed,if,this,requests,is,empty,sb,append,n,for,client,http,request,request,this,requests,sb,append,request,to,string,append,n,else,sb,append,n,return,sb,to,string
AbstractRequestExpectationManager -> protected String getRequestDetails();1516212100;Return details of executed requests.;protected String getRequestDetails() {_		StringBuilder sb = new StringBuilder()__		sb.append(this.requests.size()).append(" request(s) executed")__		if (!this.requests.isEmpty()) {_			sb.append(":\n")__			for (ClientHttpRequest request : this.requests) {_				sb.append(request.toString()).append("\n")__			}_		}_		else {_			sb.append(".\n")__		}_		return sb.toString()__	};return,details,of,executed,requests;protected,string,get,request,details,string,builder,sb,new,string,builder,sb,append,this,requests,size,append,request,s,executed,if,this,requests,is,empty,sb,append,n,for,client,http,request,request,this,requests,sb,append,request,to,string,append,n,else,sb,append,n,return,sb,to,string
AbstractRequestExpectationManager -> protected String getRequestDetails();1516212100;Return details of executed requests.;protected String getRequestDetails() {_		StringBuilder sb = new StringBuilder()__		sb.append(this.requests.size()).append(" request(s) executed")__		if (!this.requests.isEmpty()) {_			sb.append(":\n")__			for (ClientHttpRequest request : this.requests) {_				sb.append(request.toString()).append("\n")__			}_		}_		else {_			sb.append(".\n")__		}_		return sb.toString()__	};return,details,of,executed,requests;protected,string,get,request,details,string,builder,sb,new,string,builder,sb,append,this,requests,size,append,request,s,executed,if,this,requests,is,empty,sb,append,n,for,client,http,request,request,this,requests,sb,append,request,to,string,append,n,else,sb,append,n,return,sb,to,string
AbstractRequestExpectationManager -> protected String getRequestDetails();1516361410;Return details of executed requests.;protected String getRequestDetails() {_		StringBuilder sb = new StringBuilder()__		sb.append(this.requests.size()).append(" request(s) executed")__		if (!this.requests.isEmpty()) {_			sb.append(":\n")__			for (ClientHttpRequest request : this.requests) {_				sb.append(request.toString()).append("\n")__			}_		}_		else {_			sb.append(".\n")__		}_		return sb.toString()__	};return,details,of,executed,requests;protected,string,get,request,details,string,builder,sb,new,string,builder,sb,append,this,requests,size,append,request,s,executed,if,this,requests,is,empty,sb,append,n,for,client,http,request,request,this,requests,sb,append,request,to,string,append,n,else,sb,append,n,return,sb,to,string
AbstractRequestExpectationManager -> protected String getRequestDetails();1530294255;Return details of executed requests.;protected String getRequestDetails() {_		StringBuilder sb = new StringBuilder()__		sb.append(this.requests.size()).append(" request(s) executed")__		if (!this.requests.isEmpty()) {_			sb.append(":\n")__			for (ClientHttpRequest request : this.requests) {_				sb.append(request.toString()).append("\n")__			}_		}_		else {_			sb.append(".\n")__		}_		return sb.toString()__	};return,details,of,executed,requests;protected,string,get,request,details,string,builder,sb,new,string,builder,sb,append,this,requests,size,append,request,s,executed,if,this,requests,is,empty,sb,append,n,for,client,http,request,request,this,requests,sb,append,request,to,string,append,n,else,sb,append,n,return,sb,to,string
AbstractRequestExpectationManager -> protected List<ClientHttpRequest> getRequests();1500978584;Return a read-only list of requests executed so far.;protected List<ClientHttpRequest> getRequests() {_		return Collections.unmodifiableList(this.requests)__	};return,a,read,only,list,of,requests,executed,so,far;protected,list,client,http,request,get,requests,return,collections,unmodifiable,list,this,requests
AbstractRequestExpectationManager -> protected List<ClientHttpRequest> getRequests();1509376770;Return a read-only list of requests executed so far.;protected List<ClientHttpRequest> getRequests() {_		return Collections.unmodifiableList(this.requests)__	};return,a,read,only,list,of,requests,executed,so,far;protected,list,client,http,request,get,requests,return,collections,unmodifiable,list,this,requests
AbstractRequestExpectationManager -> protected List<ClientHttpRequest> getRequests();1509378020;Return a read-only list of requests executed so far.;protected List<ClientHttpRequest> getRequests() {_		return Collections.unmodifiableList(this.requests)__	};return,a,read,only,list,of,requests,executed,so,far;protected,list,client,http,request,get,requests,return,collections,unmodifiable,list,this,requests
AbstractRequestExpectationManager -> protected List<ClientHttpRequest> getRequests();1516212100;Return a read-only list of requests executed so far.;protected List<ClientHttpRequest> getRequests() {_		return Collections.unmodifiableList(this.requests)__	};return,a,read,only,list,of,requests,executed,so,far;protected,list,client,http,request,get,requests,return,collections,unmodifiable,list,this,requests
AbstractRequestExpectationManager -> protected List<ClientHttpRequest> getRequests();1516212100;Return a read-only list of requests executed so far.;protected List<ClientHttpRequest> getRequests() {_		return Collections.unmodifiableList(this.requests)__	};return,a,read,only,list,of,requests,executed,so,far;protected,list,client,http,request,get,requests,return,collections,unmodifiable,list,this,requests
AbstractRequestExpectationManager -> protected List<ClientHttpRequest> getRequests();1516361410;Return a read-only list of requests executed so far.;protected List<ClientHttpRequest> getRequests() {_		return Collections.unmodifiableList(this.requests)__	};return,a,read,only,list,of,requests,executed,so,far;protected,list,client,http,request,get,requests,return,collections,unmodifiable,list,this,requests
AbstractRequestExpectationManager -> protected List<ClientHttpRequest> getRequests();1530294255;Return a read-only list of requests executed so far.;protected List<ClientHttpRequest> getRequests() {_		return Collections.unmodifiableList(this.requests)__	};return,a,read,only,list,of,requests,executed,so,far;protected,list,client,http,request,get,requests,return,collections,unmodifiable,list,this,requests
AbstractRequestExpectationManager -> protected List<RequestExpectation> getExpectations();1500978584;Return a read-only list of the expectations.;protected List<RequestExpectation> getExpectations() {_		return Collections.unmodifiableList(this.expectations)__	};return,a,read,only,list,of,the,expectations;protected,list,request,expectation,get,expectations,return,collections,unmodifiable,list,this,expectations
AbstractRequestExpectationManager -> protected List<RequestExpectation> getExpectations();1509376770;Return a read-only list of the expectations.;protected List<RequestExpectation> getExpectations() {_		return Collections.unmodifiableList(this.expectations)__	};return,a,read,only,list,of,the,expectations;protected,list,request,expectation,get,expectations,return,collections,unmodifiable,list,this,expectations
AbstractRequestExpectationManager -> protected List<RequestExpectation> getExpectations();1509378020;Return a read-only list of the expectations.;protected List<RequestExpectation> getExpectations() {_		return Collections.unmodifiableList(this.expectations)__	};return,a,read,only,list,of,the,expectations;protected,list,request,expectation,get,expectations,return,collections,unmodifiable,list,this,expectations
AbstractRequestExpectationManager -> protected List<RequestExpectation> getExpectations();1516212100;Return a read-only list of the expectations.;protected List<RequestExpectation> getExpectations() {_		return Collections.unmodifiableList(this.expectations)__	};return,a,read,only,list,of,the,expectations;protected,list,request,expectation,get,expectations,return,collections,unmodifiable,list,this,expectations
AbstractRequestExpectationManager -> protected List<RequestExpectation> getExpectations();1516212100;Return a read-only list of the expectations.;protected List<RequestExpectation> getExpectations() {_		return Collections.unmodifiableList(this.expectations)__	};return,a,read,only,list,of,the,expectations;protected,list,request,expectation,get,expectations,return,collections,unmodifiable,list,this,expectations
AbstractRequestExpectationManager -> protected List<RequestExpectation> getExpectations();1516361410;Return a read-only list of the expectations.;protected List<RequestExpectation> getExpectations() {_		return Collections.unmodifiableList(this.expectations)__	};return,a,read,only,list,of,the,expectations;protected,list,request,expectation,get,expectations,return,collections,unmodifiable,list,this,expectations
AbstractRequestExpectationManager -> protected List<RequestExpectation> getExpectations();1530294255;Return a read-only list of the expectations.;protected List<RequestExpectation> getExpectations() {_		return Collections.unmodifiableList(this.expectations)__	};return,a,read,only,list,of,the,expectations;protected,list,request,expectation,get,expectations,return,collections,unmodifiable,list,this,expectations
AbstractRequestExpectationManager -> RequestExpectationGroup -> @Deprecated 		public void updateAll(Collection<RequestExpectation> expectations);1516212100;Add expectations to this group._@deprecated as of 5.0.3 please use {@link #addAllExpectations(Collection)} instead.;@Deprecated_		public void updateAll(Collection<RequestExpectation> expectations) {_			expectations.forEach(this::updateInternal)__		};add,expectations,to,this,group,deprecated,as,of,5,0,3,please,use,link,add,all,expectations,collection,instead;deprecated,public,void,update,all,collection,request,expectation,expectations,expectations,for,each,this,update,internal
AbstractRequestExpectationManager -> RequestExpectationGroup -> @Deprecated 		public void updateAll(Collection<RequestExpectation> expectations);1516361410;Add expectations to this group._@deprecated as of 5.0.3 please use {@link #addAllExpectations(Collection)} instead.;@Deprecated_		public void updateAll(Collection<RequestExpectation> expectations) {_			expectations.forEach(this::updateInternal)__		};add,expectations,to,this,group,deprecated,as,of,5,0,3,please,use,link,add,all,expectations,collection,instead;deprecated,public,void,update,all,collection,request,expectation,expectations,expectations,for,each,this,update,internal
AbstractRequestExpectationManager -> RequestExpectationGroup -> @Deprecated 		public void updateAll(Collection<RequestExpectation> expectations);1530294255;Add expectations to this group._@deprecated as of 5.0.3, if favor of {@link #addAllExpectations};@Deprecated_		public void updateAll(Collection<RequestExpectation> expectations) {_			expectations.forEach(this::updateInternal)__		};add,expectations,to,this,group,deprecated,as,of,5,0,3,if,favor,of,link,add,all,expectations;deprecated,public,void,update,all,collection,request,expectation,expectations,expectations,for,each,this,update,internal
AbstractRequestExpectationManager -> protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request) 			throws IOException_;1456288439;Sub-classes must implement the actual validation of the request_matching it to a declared expectation.;protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request)_			throws IOException_;sub,classes,must,implement,the,actual,validation,of,the,request,matching,it,to,a,declared,expectation;protected,abstract,client,http,response,validate,request,internal,client,http,request,request,throws,ioexception
AbstractRequestExpectationManager -> protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request) 			throws IOException_;1464277480;Sub-classes must implement the actual validation of the request_matching it to a declared expectation.;protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request)_			throws IOException_;sub,classes,must,implement,the,actual,validation,of,the,request,matching,it,to,a,declared,expectation;protected,abstract,client,http,response,validate,request,internal,client,http,request,request,throws,ioexception
AbstractRequestExpectationManager -> protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request) 			throws IOException_;1500978584;Sub-classes must implement the actual validation of the request_matching to declared expectations.;protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request)_			throws IOException_;sub,classes,must,implement,the,actual,validation,of,the,request,matching,to,declared,expectations;protected,abstract,client,http,response,validate,request,internal,client,http,request,request,throws,ioexception
AbstractRequestExpectationManager -> protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request) 			throws IOException_;1509376770;Sub-classes must implement the actual validation of the request_matching to declared expectations.;protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request)_			throws IOException_;sub,classes,must,implement,the,actual,validation,of,the,request,matching,to,declared,expectations;protected,abstract,client,http,response,validate,request,internal,client,http,request,request,throws,ioexception
AbstractRequestExpectationManager -> protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request) 			throws IOException_;1509378020;Subclasses must implement the actual validation of the request_matching to declared expectations.;protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request)_			throws IOException_;subclasses,must,implement,the,actual,validation,of,the,request,matching,to,declared,expectations;protected,abstract,client,http,response,validate,request,internal,client,http,request,request,throws,ioexception
AbstractRequestExpectationManager -> protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request) 			throws IOException_;1516212100;Subclasses must implement the actual validation of the request_matching to declared expectations.;protected abstract ClientHttpResponse validateRequestInternal(ClientHttpRequest request)_			throws IOException_;subclasses,must,implement,the,actual,validation,of,the,request,matching,to,declared,expectations;protected,abstract,client,http,response,validate,request,internal,client,http,request,request,throws,ioexception
AbstractRequestExpectationManager -> RequestExpectationGroup -> public void updateAll(Collection<RequestExpectation> expectations);1500978584;Collection variant of {@link #update(RequestExpectation)} that can_be used to insert expectations.;public void updateAll(Collection<RequestExpectation> expectations) {_			expectations.forEach(this::update)__		};collection,variant,of,link,update,request,expectation,that,can,be,used,to,insert,expectations;public,void,update,all,collection,request,expectation,expectations,expectations,for,each,this,update
AbstractRequestExpectationManager -> RequestExpectationGroup -> public void updateAll(Collection<RequestExpectation> expectations);1509376770;Collection variant of {@link #update(RequestExpectation)} that can_be used to insert expectations.;public void updateAll(Collection<RequestExpectation> expectations) {_			expectations.forEach(this::update)__		};collection,variant,of,link,update,request,expectation,that,can,be,used,to,insert,expectations;public,void,update,all,collection,request,expectation,expectations,expectations,for,each,this,update
AbstractRequestExpectationManager -> RequestExpectationGroup -> public void updateAll(Collection<RequestExpectation> expectations);1509378020;Collection variant of {@link #update(RequestExpectation)} that can_be used to insert expectations.;public void updateAll(Collection<RequestExpectation> expectations) {_			expectations.forEach(this::update)__		};collection,variant,of,link,update,request,expectation,that,can,be,used,to,insert,expectations;public,void,update,all,collection,request,expectation,expectations,expectations,for,each,this,update
AbstractRequestExpectationManager -> RequestExpectationGroup -> public void updateAll(Collection<RequestExpectation> expectations);1516212100;Collection variant of {@link #update(RequestExpectation)} that can_be used to insert expectations.;public void updateAll(Collection<RequestExpectation> expectations) {_			expectations.forEach(this::update)__		};collection,variant,of,link,update,request,expectation,that,can,be,used,to,insert,expectations;public,void,update,all,collection,request,expectation,expectations,expectations,for,each,this,update
