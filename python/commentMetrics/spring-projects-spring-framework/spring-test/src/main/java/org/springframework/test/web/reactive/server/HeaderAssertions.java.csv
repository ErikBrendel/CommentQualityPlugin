# id;timestamp;commentText;codeText;commentWords;codeWords
HeaderAssertions -> public WebTestClient.ResponseSpec lastModified(int lastModified);1487556888;Expect a "Last-Modified" header with the given value.;public WebTestClient.ResponseSpec lastModified(int lastModified) {_		long actual = getHeaders().getLastModified()__		assertEquals("Response header Last-Modified", lastModified, actual)__		return this.responseSpec__	};expect,a,last,modified,header,with,the,given,value;public,web,test,client,response,spec,last,modified,int,last,modified,long,actual,get,headers,get,last,modified,assert,equals,response,header,last,modified,last,modified,actual,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec lastModified(int lastModified);1487556888;Expect a "Last-Modified" header with the given value.;public WebTestClient.ResponseSpec lastModified(int lastModified) {_		long actual = getHeaders().getLastModified()__		assertEquals("Response header Last-Modified", lastModified, actual)__		return this.responseSpec__	};expect,a,last,modified,header,with,the,given,value;public,web,test,client,response,spec,last,modified,int,last,modified,long,actual,get,headers,get,last,modified,assert,equals,response,header,last,modified,last,modified,actual,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec lastModified(int lastModified);1487556888;Expect a "Last-Modified" header with the given value.;public WebTestClient.ResponseSpec lastModified(int lastModified) {_		return assertHeader("Last-Modified", lastModified, getHeaders().getLastModified())__	};expect,a,last,modified,header,with,the,given,value;public,web,test,client,response,spec,last,modified,int,last,modified,return,assert,header,last,modified,last,modified,get,headers,get,last,modified
HeaderAssertions -> public WebTestClient.ResponseSpec lastModified(int lastModified);1487645987;Expect a "Last-Modified" header with the given value.;public WebTestClient.ResponseSpec lastModified(int lastModified) {_		return assertHeader("Last-Modified", lastModified, getHeaders().getLastModified())__	};expect,a,last,modified,header,with,the,given,value;public,web,test,client,response,spec,last,modified,int,last,modified,return,assert,header,last,modified,last,modified,get,headers,get,last,modified
HeaderAssertions -> public WebTestClient.ResponseSpec lastModified(int lastModified);1489423061;Expect a "Last-Modified" header with the given value.;public WebTestClient.ResponseSpec lastModified(int lastModified) {_		return assertHeader("Last-Modified", lastModified, getHeaders().getLastModified())__	};expect,a,last,modified,header,with,the,given,value;public,web,test,client,response,spec,last,modified,int,last,modified,return,assert,header,last,modified,last,modified,get,headers,get,last,modified
HeaderAssertions -> public WebTestClient.ResponseSpec lastModified(int lastModified);1496955179;Expect a "Last-Modified" header with the given value.;public WebTestClient.ResponseSpec lastModified(int lastModified) {_		return assertHeader("Last-Modified", lastModified, getHeaders().getLastModified())__	};expect,a,last,modified,header,with,the,given,value;public,web,test,client,response,spec,last,modified,int,last,modified,return,assert,header,last,modified,last,modified,get,headers,get,last,modified
HeaderAssertions -> public WebTestClient.ResponseSpec lastModified(int lastModified);1509267085;Expect a "Last-Modified" header with the given value.;public WebTestClient.ResponseSpec lastModified(int lastModified) {_		return assertHeader("Last-Modified", lastModified, getHeaders().getLastModified())__	};expect,a,last,modified,header,with,the,given,value;public,web,test,client,response,spec,last,modified,int,last,modified,return,assert,header,last,modified,last,modified,get,headers,get,last,modified
HeaderAssertions -> public WebTestClient.ResponseSpec lastModified(int lastModified);1513884864;Expect a "Last-Modified" header with the given value.;public WebTestClient.ResponseSpec lastModified(int lastModified) {_		return assertHeader("Last-Modified", lastModified, getHeaders().getLastModified())__	};expect,a,last,modified,header,with,the,given,value;public,web,test,client,response,spec,last,modified,int,last,modified,return,assert,header,last,modified,last,modified,get,headers,get,last,modified
HeaderAssertions -> public WebTestClient.ResponseSpec lastModified(int lastModified);1515364415;Expect a "Last-Modified" header with the given value.;public WebTestClient.ResponseSpec lastModified(int lastModified) {_		return assertHeader("Last-Modified", lastModified, getHeaders().getLastModified())__	};expect,a,last,modified,header,with,the,given,value;public,web,test,client,response,spec,last,modified,int,last,modified,return,assert,header,last,modified,last,modified,get,headers,get,last,modified
HeaderAssertions -> public WebTestClient.ResponseSpec lastModified(int lastModified);1516891819;Expect a "Last-Modified" header with the given value.;public WebTestClient.ResponseSpec lastModified(int lastModified) {_		return assertHeader("Last-Modified", lastModified, getHeaders().getLastModified())__	};expect,a,last,modified,header,with,the,given,value;public,web,test,client,response,spec,last,modified,int,last,modified,return,assert,header,last,modified,last,modified,get,headers,get,last,modified
HeaderAssertions -> public WebTestClient.ResponseSpec lastModified(int lastModified);1516983894;Expect a "Last-Modified" header with the given value.;public WebTestClient.ResponseSpec lastModified(int lastModified) {_		return assertHeader("Last-Modified", lastModified, getHeaders().getLastModified())__	};expect,a,last,modified,header,with,the,given,value;public,web,test,client,response,spec,last,modified,int,last,modified,return,assert,header,last,modified,last,modified,get,headers,get,last,modified
HeaderAssertions -> public WebTestClient.ResponseSpec lastModified(int lastModified);1530174524;Expect a "Last-Modified" header with the given value.;public WebTestClient.ResponseSpec lastModified(int lastModified) {_		return assertHeader("Last-Modified", lastModified, getHeaders().getLastModified())__	};expect,a,last,modified,header,with,the,given,value;public,web,test,client,response,spec,last,modified,int,last,modified,return,assert,header,last,modified,last,modified,get,headers,get,last,modified
HeaderAssertions -> public WebTestClient.ResponseSpec lastModified(int lastModified);1530174524;Expect a "Last-Modified" header with the given value.;public WebTestClient.ResponseSpec lastModified(int lastModified) {_		return assertHeader("Last-Modified", lastModified, getHeaders().getLastModified())__	};expect,a,last,modified,header,with,the,given,value;public,web,test,client,response,spec,last,modified,int,last,modified,return,assert,header,last,modified,last,modified,get,headers,get,last,modified
HeaderAssertions -> public WebTestClient.ResponseSpec lastModified(int lastModified);1532122838;Expect a "Last-Modified" header with the given value.;public WebTestClient.ResponseSpec lastModified(int lastModified) {_		return assertHeader("Last-Modified", lastModified, getHeaders().getLastModified())__	};expect,a,last,modified,header,with,the,given,value;public,web,test,client,response,spec,last,modified,int,last,modified,return,assert,header,last,modified,last,modified,get,headers,get,last,modified
HeaderAssertions -> public WebTestClient.ResponseSpec lastModified(int lastModified);1532140120;Expect a "Last-Modified" header with the given value.;public WebTestClient.ResponseSpec lastModified(int lastModified) {_		return assertHeader("Last-Modified", lastModified, getHeaders().getLastModified())__	};expect,a,last,modified,header,with,the,given,value;public,web,test,client,response,spec,last,modified,int,last,modified,return,assert,header,last,modified,last,modified,get,headers,get,last,modified
HeaderAssertions -> public WebTestClient.ResponseSpec value(String name, Matcher<? super String> matcher);1532122838;Assert the primary value of the response header with a {@link Matcher}._@param name the header name_@param matcher the matcher to sue_@since 5.1;public WebTestClient.ResponseSpec value(String name, Matcher<? super String> matcher) {_		String value = getRequiredValue(name)__		this.exchangeResult.assertWithDiagnostics(() -> MatcherAssert.assertThat(value, matcher))__		return this.responseSpec__	};assert,the,primary,value,of,the,response,header,with,a,link,matcher,param,name,the,header,name,param,matcher,the,matcher,to,sue,since,5,1;public,web,test,client,response,spec,value,string,name,matcher,super,string,matcher,string,value,get,required,value,name,this,exchange,result,assert,with,diagnostics,matcher,assert,assert,that,value,matcher,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec value(String name, Matcher<? super String> matcher);1532140120;Assert the primary value of the response header with a {@link Matcher}._@param name the header name_@param matcher the matcher to sue_@since 5.1;public WebTestClient.ResponseSpec value(String name, Matcher<? super String> matcher) {_		String value = getRequiredValue(name)__		this.exchangeResult.assertWithDiagnostics(() -> MatcherAssert.assertThat(value, matcher))__		return this.responseSpec__	};assert,the,primary,value,of,the,response,header,with,a,link,matcher,param,name,the,header,name,param,matcher,the,matcher,to,sue,since,5,1;public,web,test,client,response,spec,value,string,name,matcher,super,string,matcher,string,value,get,required,value,name,this,exchange,result,assert,with,diagnostics,matcher,assert,assert,that,value,matcher,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec value(String name, Matcher<? super String> matcher);1536182174;Assert the primary value of the response header with a {@link Matcher}._@param name the header name_@param matcher the matcher to sue_@since 5.1;public WebTestClient.ResponseSpec value(String name, Matcher<? super String> matcher) {_		String value = getRequiredValue(name)__		this.exchangeResult.assertWithDiagnostics(() -> MatcherAssert.assertThat(value, matcher))__		return this.responseSpec__	};assert,the,primary,value,of,the,response,header,with,a,link,matcher,param,name,the,header,name,param,matcher,the,matcher,to,sue,since,5,1;public,web,test,client,response,spec,value,string,name,matcher,super,string,matcher,string,value,get,required,value,name,this,exchange,result,assert,with,diagnostics,matcher,assert,assert,that,value,matcher,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec valueEquals(String headerName, String... values);1487556888;Expect a header with the given name to match the specified values.;public WebTestClient.ResponseSpec valueEquals(String headerName, String... values) {_		List<String> actual = getHeaders().get(headerName)__		assertEquals("Response header [" + headerName + "]", Arrays.asList(values), actual)__		return this.responseSpec__	};expect,a,header,with,the,given,name,to,match,the,specified,values;public,web,test,client,response,spec,value,equals,string,header,name,string,values,list,string,actual,get,headers,get,header,name,assert,equals,response,header,header,name,arrays,as,list,values,actual,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec valueEquals(String headerName, String... values);1487556888;Expect a header with the given name to match the specified values.;public WebTestClient.ResponseSpec valueEquals(String headerName, String... values) {_		List<String> actual = getHeaders().get(headerName)__		assertEquals("Response header [" + headerName + "]", Arrays.asList(values), actual)__		return this.responseSpec__	};expect,a,header,with,the,given,name,to,match,the,specified,values;public,web,test,client,response,spec,value,equals,string,header,name,string,values,list,string,actual,get,headers,get,header,name,assert,equals,response,header,header,name,arrays,as,list,values,actual,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec valueEquals(String headerName, String... values);1487556888;Expect a header with the given name to match the specified values.;public WebTestClient.ResponseSpec valueEquals(String headerName, String... values) {_		return assertHeader(headerName, Arrays.asList(values), getHeaders().get(headerName))__	};expect,a,header,with,the,given,name,to,match,the,specified,values;public,web,test,client,response,spec,value,equals,string,header,name,string,values,return,assert,header,header,name,arrays,as,list,values,get,headers,get,header,name
HeaderAssertions -> public WebTestClient.ResponseSpec valueEquals(String headerName, String... values);1487645987;Expect a header with the given name to match the specified values.;public WebTestClient.ResponseSpec valueEquals(String headerName, String... values) {_		return assertHeader(headerName, Arrays.asList(values), getHeaders().get(headerName))__	};expect,a,header,with,the,given,name,to,match,the,specified,values;public,web,test,client,response,spec,value,equals,string,header,name,string,values,return,assert,header,header,name,arrays,as,list,values,get,headers,get,header,name
HeaderAssertions -> public WebTestClient.ResponseSpec valueEquals(String headerName, String... values);1489423061;Expect a header with the given name to match the specified values.;public WebTestClient.ResponseSpec valueEquals(String headerName, String... values) {_		return assertHeader(headerName, Arrays.asList(values), getHeaders().get(headerName))__	};expect,a,header,with,the,given,name,to,match,the,specified,values;public,web,test,client,response,spec,value,equals,string,header,name,string,values,return,assert,header,header,name,arrays,as,list,values,get,headers,get,header,name
HeaderAssertions -> public WebTestClient.ResponseSpec valueEquals(String headerName, String... values);1496955179;Expect a header with the given name to match the specified values.;public WebTestClient.ResponseSpec valueEquals(String headerName, String... values) {_		return assertHeader(headerName, Arrays.asList(values), getHeaders().get(headerName))__	};expect,a,header,with,the,given,name,to,match,the,specified,values;public,web,test,client,response,spec,value,equals,string,header,name,string,values,return,assert,header,header,name,arrays,as,list,values,get,headers,get,header,name
HeaderAssertions -> public WebTestClient.ResponseSpec valueEquals(String headerName, String... values);1509267085;Expect a header with the given name to match the specified values.;public WebTestClient.ResponseSpec valueEquals(String headerName, String... values) {_		return assertHeader(headerName, Arrays.asList(values), getHeaders().get(headerName))__	};expect,a,header,with,the,given,name,to,match,the,specified,values;public,web,test,client,response,spec,value,equals,string,header,name,string,values,return,assert,header,header,name,arrays,as,list,values,get,headers,get,header,name
HeaderAssertions -> public WebTestClient.ResponseSpec valueEquals(String headerName, String... values);1513884864;Expect a header with the given name to match the specified values.;public WebTestClient.ResponseSpec valueEquals(String headerName, String... values) {_		return assertHeader(headerName, Arrays.asList(values), getHeaders().get(headerName))__	};expect,a,header,with,the,given,name,to,match,the,specified,values;public,web,test,client,response,spec,value,equals,string,header,name,string,values,return,assert,header,header,name,arrays,as,list,values,get,headers,get,header,name
HeaderAssertions -> public WebTestClient.ResponseSpec valueEquals(String headerName, String... values);1515364415;Expect a header with the given name to match the specified values.;public WebTestClient.ResponseSpec valueEquals(String headerName, String... values) {_		return assertHeader(headerName, Arrays.asList(values), getHeaders().get(headerName))__	};expect,a,header,with,the,given,name,to,match,the,specified,values;public,web,test,client,response,spec,value,equals,string,header,name,string,values,return,assert,header,header,name,arrays,as,list,values,get,headers,get,header,name
HeaderAssertions -> public WebTestClient.ResponseSpec valueEquals(String headerName, String... values);1516891819;Expect a header with the given name to match the specified values.;public WebTestClient.ResponseSpec valueEquals(String headerName, String... values) {_		return assertHeader(headerName, Arrays.asList(values), getHeaders().get(headerName))__	};expect,a,header,with,the,given,name,to,match,the,specified,values;public,web,test,client,response,spec,value,equals,string,header,name,string,values,return,assert,header,header,name,arrays,as,list,values,get,headers,get,header,name
HeaderAssertions -> public WebTestClient.ResponseSpec valueEquals(String headerName, String... values);1516983894;Expect a header with the given name to match the specified values.;public WebTestClient.ResponseSpec valueEquals(String headerName, String... values) {_		return assertHeader(headerName, Arrays.asList(values), getHeaders().get(headerName))__	};expect,a,header,with,the,given,name,to,match,the,specified,values;public,web,test,client,response,spec,value,equals,string,header,name,string,values,return,assert,header,header,name,arrays,as,list,values,get,headers,get,header,name
HeaderAssertions -> public WebTestClient.ResponseSpec valueEquals(String headerName, String... values);1530174524;Expect a header with the given name to match the specified values.;public WebTestClient.ResponseSpec valueEquals(String headerName, String... values) {_		return assertHeader(headerName, Arrays.asList(values), getHeaders().get(headerName))__	};expect,a,header,with,the,given,name,to,match,the,specified,values;public,web,test,client,response,spec,value,equals,string,header,name,string,values,return,assert,header,header,name,arrays,as,list,values,get,headers,get,header,name
HeaderAssertions -> public WebTestClient.ResponseSpec valueEquals(String headerName, String... values);1530174524;Expect a header with the given name to match the specified values.;public WebTestClient.ResponseSpec valueEquals(String headerName, String... values) {_		return assertHeader(headerName, Arrays.asList(values), getHeaders().get(headerName))__	};expect,a,header,with,the,given,name,to,match,the,specified,values;public,web,test,client,response,spec,value,equals,string,header,name,string,values,return,assert,header,header,name,arrays,as,list,values,get,headers,get,header,name
HeaderAssertions -> public WebTestClient.ResponseSpec valueEquals(String headerName, String... values);1532122838;Expect a header with the given name to match the specified values.;public WebTestClient.ResponseSpec valueEquals(String headerName, String... values) {_		return assertHeader(headerName, Arrays.asList(values), getHeaders().get(headerName))__	};expect,a,header,with,the,given,name,to,match,the,specified,values;public,web,test,client,response,spec,value,equals,string,header,name,string,values,return,assert,header,header,name,arrays,as,list,values,get,headers,get,header,name
HeaderAssertions -> public WebTestClient.ResponseSpec valueEquals(String headerName, String... values);1532140120;Expect a header with the given name to match the specified values.;public WebTestClient.ResponseSpec valueEquals(String headerName, String... values) {_		return assertHeader(headerName, Arrays.asList(values), getHeaders().get(headerName))__	};expect,a,header,with,the,given,name,to,match,the,specified,values;public,web,test,client,response,spec,value,equals,string,header,name,string,values,return,assert,header,header,name,arrays,as,list,values,get,headers,get,header,name
HeaderAssertions -> public WebTestClient.ResponseSpec valueEquals(String headerName, String... values);1536182174;Expect a header with the given name to match the specified values.;public WebTestClient.ResponseSpec valueEquals(String headerName, String... values) {_		return assertHeader(headerName, Arrays.asList(values), getHeaders().get(headerName))__	};expect,a,header,with,the,given,name,to,match,the,specified,values;public,web,test,client,response,spec,value,equals,string,header,name,string,values,return,assert,header,header,name,arrays,as,list,values,get,headers,get,header,name
HeaderAssertions -> public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl);1487556888;Expect a "Cache-Control" header with the given value.;public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl) {_		String actual = getHeaders().getCacheControl()__		assertEquals("Response header Cache-Control", cacheControl.getHeaderValue(), actual)__		return this.responseSpec__	};expect,a,cache,control,header,with,the,given,value;public,web,test,client,response,spec,cache,control,cache,control,cache,control,string,actual,get,headers,get,cache,control,assert,equals,response,header,cache,control,cache,control,get,header,value,actual,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl);1487556888;Expect a "Cache-Control" header with the given value.;public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl) {_		String actual = getHeaders().getCacheControl()__		assertEquals("Response header Cache-Control", cacheControl.getHeaderValue(), actual)__		return this.responseSpec__	};expect,a,cache,control,header,with,the,given,value;public,web,test,client,response,spec,cache,control,cache,control,cache,control,string,actual,get,headers,get,cache,control,assert,equals,response,header,cache,control,cache,control,get,header,value,actual,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl);1487556888;Expect a "Cache-Control" header with the given value.;public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl) {_		return assertHeader("Cache-Control", cacheControl.getHeaderValue(), getHeaders().getCacheControl())__	};expect,a,cache,control,header,with,the,given,value;public,web,test,client,response,spec,cache,control,cache,control,cache,control,return,assert,header,cache,control,cache,control,get,header,value,get,headers,get,cache,control
HeaderAssertions -> public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl);1487645987;Expect a "Cache-Control" header with the given value.;public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl) {_		return assertHeader("Cache-Control", cacheControl.getHeaderValue(), getHeaders().getCacheControl())__	};expect,a,cache,control,header,with,the,given,value;public,web,test,client,response,spec,cache,control,cache,control,cache,control,return,assert,header,cache,control,cache,control,get,header,value,get,headers,get,cache,control
HeaderAssertions -> public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl);1489423061;Expect a "Cache-Control" header with the given value.;public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl) {_		return assertHeader("Cache-Control", cacheControl.getHeaderValue(), getHeaders().getCacheControl())__	};expect,a,cache,control,header,with,the,given,value;public,web,test,client,response,spec,cache,control,cache,control,cache,control,return,assert,header,cache,control,cache,control,get,header,value,get,headers,get,cache,control
HeaderAssertions -> public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl);1496955179;Expect a "Cache-Control" header with the given value.;public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl) {_		return assertHeader("Cache-Control", cacheControl.getHeaderValue(), getHeaders().getCacheControl())__	};expect,a,cache,control,header,with,the,given,value;public,web,test,client,response,spec,cache,control,cache,control,cache,control,return,assert,header,cache,control,cache,control,get,header,value,get,headers,get,cache,control
HeaderAssertions -> public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl);1509267085;Expect a "Cache-Control" header with the given value.;public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl) {_		return assertHeader("Cache-Control", cacheControl.getHeaderValue(), getHeaders().getCacheControl())__	};expect,a,cache,control,header,with,the,given,value;public,web,test,client,response,spec,cache,control,cache,control,cache,control,return,assert,header,cache,control,cache,control,get,header,value,get,headers,get,cache,control
HeaderAssertions -> public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl);1513884864;Expect a "Cache-Control" header with the given value.;public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl) {_		return assertHeader("Cache-Control", cacheControl.getHeaderValue(), getHeaders().getCacheControl())__	};expect,a,cache,control,header,with,the,given,value;public,web,test,client,response,spec,cache,control,cache,control,cache,control,return,assert,header,cache,control,cache,control,get,header,value,get,headers,get,cache,control
HeaderAssertions -> public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl);1515364415;Expect a "Cache-Control" header with the given value.;public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl) {_		return assertHeader("Cache-Control", cacheControl.getHeaderValue(), getHeaders().getCacheControl())__	};expect,a,cache,control,header,with,the,given,value;public,web,test,client,response,spec,cache,control,cache,control,cache,control,return,assert,header,cache,control,cache,control,get,header,value,get,headers,get,cache,control
HeaderAssertions -> public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl);1516891819;Expect a "Cache-Control" header with the given value.;public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl) {_		return assertHeader("Cache-Control", cacheControl.getHeaderValue(), getHeaders().getCacheControl())__	};expect,a,cache,control,header,with,the,given,value;public,web,test,client,response,spec,cache,control,cache,control,cache,control,return,assert,header,cache,control,cache,control,get,header,value,get,headers,get,cache,control
HeaderAssertions -> public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl);1516983894;Expect a "Cache-Control" header with the given value.;public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl) {_		return assertHeader("Cache-Control", cacheControl.getHeaderValue(), getHeaders().getCacheControl())__	};expect,a,cache,control,header,with,the,given,value;public,web,test,client,response,spec,cache,control,cache,control,cache,control,return,assert,header,cache,control,cache,control,get,header,value,get,headers,get,cache,control
HeaderAssertions -> public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl);1530174524;Expect a "Cache-Control" header with the given value.;public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl) {_		return assertHeader("Cache-Control", cacheControl.getHeaderValue(), getHeaders().getCacheControl())__	};expect,a,cache,control,header,with,the,given,value;public,web,test,client,response,spec,cache,control,cache,control,cache,control,return,assert,header,cache,control,cache,control,get,header,value,get,headers,get,cache,control
HeaderAssertions -> public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl);1530174524;Expect a "Cache-Control" header with the given value.;public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl) {_		return assertHeader("Cache-Control", cacheControl.getHeaderValue(), getHeaders().getCacheControl())__	};expect,a,cache,control,header,with,the,given,value;public,web,test,client,response,spec,cache,control,cache,control,cache,control,return,assert,header,cache,control,cache,control,get,header,value,get,headers,get,cache,control
HeaderAssertions -> public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl);1532122838;Expect a "Cache-Control" header with the given value.;public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl) {_		return assertHeader("Cache-Control", cacheControl.getHeaderValue(), getHeaders().getCacheControl())__	};expect,a,cache,control,header,with,the,given,value;public,web,test,client,response,spec,cache,control,cache,control,cache,control,return,assert,header,cache,control,cache,control,get,header,value,get,headers,get,cache,control
HeaderAssertions -> public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl);1532140120;Expect a "Cache-Control" header with the given value.;public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl) {_		return assertHeader("Cache-Control", cacheControl.getHeaderValue(), getHeaders().getCacheControl())__	};expect,a,cache,control,header,with,the,given,value;public,web,test,client,response,spec,cache,control,cache,control,cache,control,return,assert,header,cache,control,cache,control,get,header,value,get,headers,get,cache,control
HeaderAssertions -> public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl);1536182174;Expect a "Cache-Control" header with the given value.;public WebTestClient.ResponseSpec cacheControl(CacheControl cacheControl) {_		return assertHeader("Cache-Control", cacheControl.getHeaderValue(), getHeaders().getCacheControl())__	};expect,a,cache,control,header,with,the,given,value;public,web,test,client,response,spec,cache,control,cache,control,cache,control,return,assert,header,cache,control,cache,control,get,header,value,get,headers,get,cache,control
HeaderAssertions -> public WebTestClient.ResponseSpec contentLength(long contentLength);1487556888;Expect a "Content-Length" header with the given value.;public WebTestClient.ResponseSpec contentLength(long contentLength) {_		long actual = getHeaders().getContentLength()__		assertEquals("Response header Content-Length", contentLength, actual)__		return this.responseSpec__	};expect,a,content,length,header,with,the,given,value;public,web,test,client,response,spec,content,length,long,content,length,long,actual,get,headers,get,content,length,assert,equals,response,header,content,length,content,length,actual,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec contentLength(long contentLength);1487556888;Expect a "Content-Length" header with the given value.;public WebTestClient.ResponseSpec contentLength(long contentLength) {_		long actual = getHeaders().getContentLength()__		assertEquals("Response header Content-Length", contentLength, actual)__		return this.responseSpec__	};expect,a,content,length,header,with,the,given,value;public,web,test,client,response,spec,content,length,long,content,length,long,actual,get,headers,get,content,length,assert,equals,response,header,content,length,content,length,actual,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec contentLength(long contentLength);1487556888;Expect a "Content-Length" header with the given value.;public WebTestClient.ResponseSpec contentLength(long contentLength) {_		return assertHeader("Content-Length", contentLength, getHeaders().getContentLength())__	};expect,a,content,length,header,with,the,given,value;public,web,test,client,response,spec,content,length,long,content,length,return,assert,header,content,length,content,length,get,headers,get,content,length
HeaderAssertions -> public WebTestClient.ResponseSpec contentLength(long contentLength);1487645987;Expect a "Content-Length" header with the given value.;public WebTestClient.ResponseSpec contentLength(long contentLength) {_		return assertHeader("Content-Length", contentLength, getHeaders().getContentLength())__	};expect,a,content,length,header,with,the,given,value;public,web,test,client,response,spec,content,length,long,content,length,return,assert,header,content,length,content,length,get,headers,get,content,length
HeaderAssertions -> public WebTestClient.ResponseSpec contentLength(long contentLength);1489423061;Expect a "Content-Length" header with the given value.;public WebTestClient.ResponseSpec contentLength(long contentLength) {_		return assertHeader("Content-Length", contentLength, getHeaders().getContentLength())__	};expect,a,content,length,header,with,the,given,value;public,web,test,client,response,spec,content,length,long,content,length,return,assert,header,content,length,content,length,get,headers,get,content,length
HeaderAssertions -> public WebTestClient.ResponseSpec contentLength(long contentLength);1496955179;Expect a "Content-Length" header with the given value.;public WebTestClient.ResponseSpec contentLength(long contentLength) {_		return assertHeader("Content-Length", contentLength, getHeaders().getContentLength())__	};expect,a,content,length,header,with,the,given,value;public,web,test,client,response,spec,content,length,long,content,length,return,assert,header,content,length,content,length,get,headers,get,content,length
HeaderAssertions -> public WebTestClient.ResponseSpec contentLength(long contentLength);1509267085;Expect a "Content-Length" header with the given value.;public WebTestClient.ResponseSpec contentLength(long contentLength) {_		return assertHeader("Content-Length", contentLength, getHeaders().getContentLength())__	};expect,a,content,length,header,with,the,given,value;public,web,test,client,response,spec,content,length,long,content,length,return,assert,header,content,length,content,length,get,headers,get,content,length
HeaderAssertions -> public WebTestClient.ResponseSpec contentLength(long contentLength);1513884864;Expect a "Content-Length" header with the given value.;public WebTestClient.ResponseSpec contentLength(long contentLength) {_		return assertHeader("Content-Length", contentLength, getHeaders().getContentLength())__	};expect,a,content,length,header,with,the,given,value;public,web,test,client,response,spec,content,length,long,content,length,return,assert,header,content,length,content,length,get,headers,get,content,length
HeaderAssertions -> public WebTestClient.ResponseSpec contentLength(long contentLength);1515364415;Expect a "Content-Length" header with the given value.;public WebTestClient.ResponseSpec contentLength(long contentLength) {_		return assertHeader("Content-Length", contentLength, getHeaders().getContentLength())__	};expect,a,content,length,header,with,the,given,value;public,web,test,client,response,spec,content,length,long,content,length,return,assert,header,content,length,content,length,get,headers,get,content,length
HeaderAssertions -> public WebTestClient.ResponseSpec contentLength(long contentLength);1516891819;Expect a "Content-Length" header with the given value.;public WebTestClient.ResponseSpec contentLength(long contentLength) {_		return assertHeader("Content-Length", contentLength, getHeaders().getContentLength())__	};expect,a,content,length,header,with,the,given,value;public,web,test,client,response,spec,content,length,long,content,length,return,assert,header,content,length,content,length,get,headers,get,content,length
HeaderAssertions -> public WebTestClient.ResponseSpec contentLength(long contentLength);1516983894;Expect a "Content-Length" header with the given value.;public WebTestClient.ResponseSpec contentLength(long contentLength) {_		return assertHeader("Content-Length", contentLength, getHeaders().getContentLength())__	};expect,a,content,length,header,with,the,given,value;public,web,test,client,response,spec,content,length,long,content,length,return,assert,header,content,length,content,length,get,headers,get,content,length
HeaderAssertions -> public WebTestClient.ResponseSpec contentLength(long contentLength);1530174524;Expect a "Content-Length" header with the given value.;public WebTestClient.ResponseSpec contentLength(long contentLength) {_		return assertHeader("Content-Length", contentLength, getHeaders().getContentLength())__	};expect,a,content,length,header,with,the,given,value;public,web,test,client,response,spec,content,length,long,content,length,return,assert,header,content,length,content,length,get,headers,get,content,length
HeaderAssertions -> public WebTestClient.ResponseSpec contentLength(long contentLength);1530174524;Expect a "Content-Length" header with the given value.;public WebTestClient.ResponseSpec contentLength(long contentLength) {_		return assertHeader("Content-Length", contentLength, getHeaders().getContentLength())__	};expect,a,content,length,header,with,the,given,value;public,web,test,client,response,spec,content,length,long,content,length,return,assert,header,content,length,content,length,get,headers,get,content,length
HeaderAssertions -> public WebTestClient.ResponseSpec contentLength(long contentLength);1532122838;Expect a "Content-Length" header with the given value.;public WebTestClient.ResponseSpec contentLength(long contentLength) {_		return assertHeader("Content-Length", contentLength, getHeaders().getContentLength())__	};expect,a,content,length,header,with,the,given,value;public,web,test,client,response,spec,content,length,long,content,length,return,assert,header,content,length,content,length,get,headers,get,content,length
HeaderAssertions -> public WebTestClient.ResponseSpec contentLength(long contentLength);1532140120;Expect a "Content-Length" header with the given value.;public WebTestClient.ResponseSpec contentLength(long contentLength) {_		return assertHeader("Content-Length", contentLength, getHeaders().getContentLength())__	};expect,a,content,length,header,with,the,given,value;public,web,test,client,response,spec,content,length,long,content,length,return,assert,header,content,length,content,length,get,headers,get,content,length
HeaderAssertions -> public WebTestClient.ResponseSpec contentLength(long contentLength);1536182174;Expect a "Content-Length" header with the given value.;public WebTestClient.ResponseSpec contentLength(long contentLength) {_		return assertHeader("Content-Length", contentLength, getHeaders().getContentLength())__	};expect,a,content,length,header,with,the,given,value;public,web,test,client,response,spec,content,length,long,content,length,return,assert,header,content,length,content,length,get,headers,get,content,length
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(String mediaType);1513884864;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(String mediaType) {_		return contentType(MediaType.parseMediaType(mediaType))__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,string,media,type,return,content,type,media,type,parse,media,type,media,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(String mediaType);1515364415;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(String mediaType) {_		return contentType(MediaType.parseMediaType(mediaType))__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,string,media,type,return,content,type,media,type,parse,media,type,media,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(String mediaType);1516891819;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(String mediaType) {_		return contentType(MediaType.parseMediaType(mediaType))__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,string,media,type,return,content,type,media,type,parse,media,type,media,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(String mediaType);1516983894;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(String mediaType) {_		return contentType(MediaType.parseMediaType(mediaType))__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,string,media,type,return,content,type,media,type,parse,media,type,media,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(String mediaType);1530174524;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(String mediaType) {_		return contentType(MediaType.parseMediaType(mediaType))__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,string,media,type,return,content,type,media,type,parse,media,type,media,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(String mediaType);1530174524;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(String mediaType) {_		return contentType(MediaType.parseMediaType(mediaType))__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,string,media,type,return,content,type,media,type,parse,media,type,media,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(String mediaType);1532122838;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(String mediaType) {_		return contentType(MediaType.parseMediaType(mediaType))__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,string,media,type,return,content,type,media,type,parse,media,type,media,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(String mediaType);1532140120;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(String mediaType) {_		return contentType(MediaType.parseMediaType(mediaType))__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,string,media,type,return,content,type,media,type,parse,media,type,media,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(String mediaType);1536182174;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(String mediaType) {_		return contentType(MediaType.parseMediaType(mediaType))__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,string,media,type,return,content,type,media,type,parse,media,type,media,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentTypeCompatibleWith(MediaType mediaType);1513884864;Expect a "Content-Type" header compatible with the given value.;public WebTestClient.ResponseSpec contentTypeCompatibleWith(MediaType mediaType) {_		MediaType actual = getHeaders().getContentType()__		String message = getMessage("Content-Type") + "=[" + actual.toString() + "]"_				+ " is not compatible with [" + mediaType.toString() + "]"__		this.exchangeResult.assertWithDiagnostics(() ->_				assertTrue(message, actual.isCompatibleWith(mediaType)))__		return this.responseSpec__	};expect,a,content,type,header,compatible,with,the,given,value;public,web,test,client,response,spec,content,type,compatible,with,media,type,media,type,media,type,actual,get,headers,get,content,type,string,message,get,message,content,type,actual,to,string,is,not,compatible,with,media,type,to,string,this,exchange,result,assert,with,diagnostics,assert,true,message,actual,is,compatible,with,media,type,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec contentTypeCompatibleWith(MediaType mediaType);1515364415;Expect a "Content-Type" header compatible with the given value.;public WebTestClient.ResponseSpec contentTypeCompatibleWith(MediaType mediaType) {_		MediaType actual = getHeaders().getContentType()__		String message = getMessage("Content-Type") + "=[" + actual + "] is not compatible with [" + mediaType + "]"__		this.exchangeResult.assertWithDiagnostics(() ->_				assertTrue(message, (actual != null && actual.isCompatibleWith(mediaType))))__		return this.responseSpec__	};expect,a,content,type,header,compatible,with,the,given,value;public,web,test,client,response,spec,content,type,compatible,with,media,type,media,type,media,type,actual,get,headers,get,content,type,string,message,get,message,content,type,actual,is,not,compatible,with,media,type,this,exchange,result,assert,with,diagnostics,assert,true,message,actual,null,actual,is,compatible,with,media,type,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec contentTypeCompatibleWith(MediaType mediaType);1516891819;Expect a "Content-Type" header compatible with the given value.;public WebTestClient.ResponseSpec contentTypeCompatibleWith(MediaType mediaType) {_		MediaType actual = getHeaders().getContentType()__		String message = getMessage("Content-Type") + "=[" + actual + "] is not compatible with [" + mediaType + "]"__		this.exchangeResult.assertWithDiagnostics(() ->_				assertTrue(message, (actual != null && actual.isCompatibleWith(mediaType))))__		return this.responseSpec__	};expect,a,content,type,header,compatible,with,the,given,value;public,web,test,client,response,spec,content,type,compatible,with,media,type,media,type,media,type,actual,get,headers,get,content,type,string,message,get,message,content,type,actual,is,not,compatible,with,media,type,this,exchange,result,assert,with,diagnostics,assert,true,message,actual,null,actual,is,compatible,with,media,type,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec contentTypeCompatibleWith(MediaType mediaType);1516983894;Expect a "Content-Type" header compatible with the given value.;public WebTestClient.ResponseSpec contentTypeCompatibleWith(MediaType mediaType) {_		MediaType actual = getHeaders().getContentType()__		String message = getMessage("Content-Type") + "=[" + actual + "] is not compatible with [" + mediaType + "]"__		this.exchangeResult.assertWithDiagnostics(() ->_				assertTrue(message, (actual != null && actual.isCompatibleWith(mediaType))))__		return this.responseSpec__	};expect,a,content,type,header,compatible,with,the,given,value;public,web,test,client,response,spec,content,type,compatible,with,media,type,media,type,media,type,actual,get,headers,get,content,type,string,message,get,message,content,type,actual,is,not,compatible,with,media,type,this,exchange,result,assert,with,diagnostics,assert,true,message,actual,null,actual,is,compatible,with,media,type,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec contentTypeCompatibleWith(MediaType mediaType);1530174524;Expect a "Content-Type" header compatible with the given value.;public WebTestClient.ResponseSpec contentTypeCompatibleWith(MediaType mediaType) {_		MediaType actual = getHeaders().getContentType()__		String message = getMessage("Content-Type") + "=[" + actual + "] is not compatible with [" + mediaType + "]"__		this.exchangeResult.assertWithDiagnostics(() ->_				assertTrue(message, (actual != null && actual.isCompatibleWith(mediaType))))__		return this.responseSpec__	};expect,a,content,type,header,compatible,with,the,given,value;public,web,test,client,response,spec,content,type,compatible,with,media,type,media,type,media,type,actual,get,headers,get,content,type,string,message,get,message,content,type,actual,is,not,compatible,with,media,type,this,exchange,result,assert,with,diagnostics,assert,true,message,actual,null,actual,is,compatible,with,media,type,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec contentTypeCompatibleWith(MediaType mediaType);1530174524;Expect a "Content-Type" header compatible with the given value.;public WebTestClient.ResponseSpec contentTypeCompatibleWith(MediaType mediaType) {_		MediaType actual = getHeaders().getContentType()__		String message = getMessage("Content-Type") + "=[" + actual + "] is not compatible with [" + mediaType + "]"__		this.exchangeResult.assertWithDiagnostics(() ->_				assertTrue(message, (actual != null && actual.isCompatibleWith(mediaType))))__		return this.responseSpec__	};expect,a,content,type,header,compatible,with,the,given,value;public,web,test,client,response,spec,content,type,compatible,with,media,type,media,type,media,type,actual,get,headers,get,content,type,string,message,get,message,content,type,actual,is,not,compatible,with,media,type,this,exchange,result,assert,with,diagnostics,assert,true,message,actual,null,actual,is,compatible,with,media,type,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec contentTypeCompatibleWith(MediaType mediaType);1532122838;Expect a "Content-Type" header compatible with the given value.;public WebTestClient.ResponseSpec contentTypeCompatibleWith(MediaType mediaType) {_		MediaType actual = getHeaders().getContentType()__		String message = getMessage("Content-Type") + "=[" + actual + "] is not compatible with [" + mediaType + "]"__		this.exchangeResult.assertWithDiagnostics(() ->_				AssertionErrors.assertTrue(message, (actual != null && actual.isCompatibleWith(mediaType))))__		return this.responseSpec__	};expect,a,content,type,header,compatible,with,the,given,value;public,web,test,client,response,spec,content,type,compatible,with,media,type,media,type,media,type,actual,get,headers,get,content,type,string,message,get,message,content,type,actual,is,not,compatible,with,media,type,this,exchange,result,assert,with,diagnostics,assertion,errors,assert,true,message,actual,null,actual,is,compatible,with,media,type,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec contentTypeCompatibleWith(MediaType mediaType);1532140120;Expect a "Content-Type" header compatible with the given value.;public WebTestClient.ResponseSpec contentTypeCompatibleWith(MediaType mediaType) {_		MediaType actual = getHeaders().getContentType()__		String message = getMessage("Content-Type") + "=[" + actual + "] is not compatible with [" + mediaType + "]"__		this.exchangeResult.assertWithDiagnostics(() ->_				AssertionErrors.assertTrue(message, (actual != null && actual.isCompatibleWith(mediaType))))__		return this.responseSpec__	};expect,a,content,type,header,compatible,with,the,given,value;public,web,test,client,response,spec,content,type,compatible,with,media,type,media,type,media,type,actual,get,headers,get,content,type,string,message,get,message,content,type,actual,is,not,compatible,with,media,type,this,exchange,result,assert,with,diagnostics,assertion,errors,assert,true,message,actual,null,actual,is,compatible,with,media,type,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec contentTypeCompatibleWith(MediaType mediaType);1536182174;Expect a "Content-Type" header compatible with the given value.;public WebTestClient.ResponseSpec contentTypeCompatibleWith(MediaType mediaType) {_		MediaType actual = getHeaders().getContentType()__		String message = getMessage("Content-Type") + "=[" + actual + "] is not compatible with [" + mediaType + "]"__		this.exchangeResult.assertWithDiagnostics(() ->_				AssertionErrors.assertTrue(message, (actual != null && actual.isCompatibleWith(mediaType))))__		return this.responseSpec__	};expect,a,content,type,header,compatible,with,the,given,value;public,web,test,client,response,spec,content,type,compatible,with,media,type,media,type,media,type,actual,get,headers,get,content,type,string,message,get,message,content,type,actual,is,not,compatible,with,media,type,this,exchange,result,assert,with,diagnostics,assertion,errors,assert,true,message,actual,null,actual,is,compatible,with,media,type,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec expires(int expires);1487556888;Expect an "Expires" header with the given value.;public WebTestClient.ResponseSpec expires(int expires) {_		long actual = getHeaders().getExpires()__		assertEquals("Response header Expires", expires, actual)__		return this.responseSpec__	};expect,an,expires,header,with,the,given,value;public,web,test,client,response,spec,expires,int,expires,long,actual,get,headers,get,expires,assert,equals,response,header,expires,expires,actual,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec expires(int expires);1487556888;Expect an "Expires" header with the given value.;public WebTestClient.ResponseSpec expires(int expires) {_		long actual = getHeaders().getExpires()__		assertEquals("Response header Expires", expires, actual)__		return this.responseSpec__	};expect,an,expires,header,with,the,given,value;public,web,test,client,response,spec,expires,int,expires,long,actual,get,headers,get,expires,assert,equals,response,header,expires,expires,actual,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec expires(int expires);1487556888;Expect an "Expires" header with the given value.;public WebTestClient.ResponseSpec expires(int expires) {_		return assertHeader("Expires", expires, getHeaders().getExpires())__	};expect,an,expires,header,with,the,given,value;public,web,test,client,response,spec,expires,int,expires,return,assert,header,expires,expires,get,headers,get,expires
HeaderAssertions -> public WebTestClient.ResponseSpec expires(int expires);1487645987;Expect an "Expires" header with the given value.;public WebTestClient.ResponseSpec expires(int expires) {_		return assertHeader("Expires", expires, getHeaders().getExpires())__	};expect,an,expires,header,with,the,given,value;public,web,test,client,response,spec,expires,int,expires,return,assert,header,expires,expires,get,headers,get,expires
HeaderAssertions -> public WebTestClient.ResponseSpec expires(int expires);1489423061;Expect an "Expires" header with the given value.;public WebTestClient.ResponseSpec expires(int expires) {_		return assertHeader("Expires", expires, getHeaders().getExpires())__	};expect,an,expires,header,with,the,given,value;public,web,test,client,response,spec,expires,int,expires,return,assert,header,expires,expires,get,headers,get,expires
HeaderAssertions -> public WebTestClient.ResponseSpec expires(int expires);1496955179;Expect an "Expires" header with the given value.;public WebTestClient.ResponseSpec expires(int expires) {_		return assertHeader("Expires", expires, getHeaders().getExpires())__	};expect,an,expires,header,with,the,given,value;public,web,test,client,response,spec,expires,int,expires,return,assert,header,expires,expires,get,headers,get,expires
HeaderAssertions -> public WebTestClient.ResponseSpec expires(int expires);1509267085;Expect an "Expires" header with the given value.;public WebTestClient.ResponseSpec expires(int expires) {_		return assertHeader("Expires", expires, getHeaders().getExpires())__	};expect,an,expires,header,with,the,given,value;public,web,test,client,response,spec,expires,int,expires,return,assert,header,expires,expires,get,headers,get,expires
HeaderAssertions -> public WebTestClient.ResponseSpec expires(int expires);1513884864;Expect an "Expires" header with the given value.;public WebTestClient.ResponseSpec expires(int expires) {_		return assertHeader("Expires", expires, getHeaders().getExpires())__	};expect,an,expires,header,with,the,given,value;public,web,test,client,response,spec,expires,int,expires,return,assert,header,expires,expires,get,headers,get,expires
HeaderAssertions -> public WebTestClient.ResponseSpec expires(int expires);1515364415;Expect an "Expires" header with the given value.;public WebTestClient.ResponseSpec expires(int expires) {_		return assertHeader("Expires", expires, getHeaders().getExpires())__	};expect,an,expires,header,with,the,given,value;public,web,test,client,response,spec,expires,int,expires,return,assert,header,expires,expires,get,headers,get,expires
HeaderAssertions -> public WebTestClient.ResponseSpec expires(int expires);1516891819;Expect an "Expires" header with the given value.;public WebTestClient.ResponseSpec expires(int expires) {_		return assertHeader("Expires", expires, getHeaders().getExpires())__	};expect,an,expires,header,with,the,given,value;public,web,test,client,response,spec,expires,int,expires,return,assert,header,expires,expires,get,headers,get,expires
HeaderAssertions -> public WebTestClient.ResponseSpec expires(int expires);1516983894;Expect an "Expires" header with the given value.;public WebTestClient.ResponseSpec expires(int expires) {_		return assertHeader("Expires", expires, getHeaders().getExpires())__	};expect,an,expires,header,with,the,given,value;public,web,test,client,response,spec,expires,int,expires,return,assert,header,expires,expires,get,headers,get,expires
HeaderAssertions -> public WebTestClient.ResponseSpec expires(int expires);1530174524;Expect an "Expires" header with the given value.;public WebTestClient.ResponseSpec expires(int expires) {_		return assertHeader("Expires", expires, getHeaders().getExpires())__	};expect,an,expires,header,with,the,given,value;public,web,test,client,response,spec,expires,int,expires,return,assert,header,expires,expires,get,headers,get,expires
HeaderAssertions -> public WebTestClient.ResponseSpec expires(int expires);1530174524;Expect an "Expires" header with the given value.;public WebTestClient.ResponseSpec expires(int expires) {_		return assertHeader("Expires", expires, getHeaders().getExpires())__	};expect,an,expires,header,with,the,given,value;public,web,test,client,response,spec,expires,int,expires,return,assert,header,expires,expires,get,headers,get,expires
HeaderAssertions -> public WebTestClient.ResponseSpec expires(int expires);1532122838;Expect an "Expires" header with the given value.;public WebTestClient.ResponseSpec expires(int expires) {_		return assertHeader("Expires", expires, getHeaders().getExpires())__	};expect,an,expires,header,with,the,given,value;public,web,test,client,response,spec,expires,int,expires,return,assert,header,expires,expires,get,headers,get,expires
HeaderAssertions -> public WebTestClient.ResponseSpec expires(int expires);1532140120;Expect an "Expires" header with the given value.;public WebTestClient.ResponseSpec expires(int expires) {_		return assertHeader("Expires", expires, getHeaders().getExpires())__	};expect,an,expires,header,with,the,given,value;public,web,test,client,response,spec,expires,int,expires,return,assert,header,expires,expires,get,headers,get,expires
HeaderAssertions -> public WebTestClient.ResponseSpec valueMatches(String name, String pattern);1487556888;Expect a header with the given name whose first value matches the_provided regex pattern._@param name the header name_@param pattern String pattern to pass to {@link Pattern#compile(String)};public WebTestClient.ResponseSpec valueMatches(String name, String pattern) {_		return this.exchangeResult.assertWithDiagnosticsAndReturn(() -> {_			String value = getHeaders().getFirst(name)__			assertTrue(getMessage(name) + " not found", value != null)__			boolean match = Pattern.compile(pattern).matcher(value).matches()__			assertTrue(getMessage(name) + "=\'" + value + "\' does not match \'" + pattern + "\'", match)__			return this.responseSpec__		})__	};expect,a,header,with,the,given,name,whose,first,value,matches,the,provided,regex,pattern,param,name,the,header,name,param,pattern,string,pattern,to,pass,to,link,pattern,compile,string;public,web,test,client,response,spec,value,matches,string,name,string,pattern,return,this,exchange,result,assert,with,diagnostics,and,return,string,value,get,headers,get,first,name,assert,true,get,message,name,not,found,value,null,boolean,match,pattern,compile,pattern,matcher,value,matches,assert,true,get,message,name,value,does,not,match,pattern,match,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec valueMatches(String name, String pattern);1487645987;Expect a header with the given name whose first value matches the_provided regex pattern._@param name the header name_@param pattern String pattern to pass to {@link Pattern#compile(String)};public WebTestClient.ResponseSpec valueMatches(String name, String pattern) {_		String value = getHeaders().getFirst(name)__		assertTrue(getMessage(name) + " not found", value != null)__		boolean match = Pattern.compile(pattern).matcher(value).matches()__		String message = getMessage(name) + "=\'" + value + "\' does not match \'" + pattern + "\'"__		this.exchangeResult.assertWithDiagnostics(() -> assertTrue(message, match))__		return this.responseSpec__	};expect,a,header,with,the,given,name,whose,first,value,matches,the,provided,regex,pattern,param,name,the,header,name,param,pattern,string,pattern,to,pass,to,link,pattern,compile,string;public,web,test,client,response,spec,value,matches,string,name,string,pattern,string,value,get,headers,get,first,name,assert,true,get,message,name,not,found,value,null,boolean,match,pattern,compile,pattern,matcher,value,matches,string,message,get,message,name,value,does,not,match,pattern,this,exchange,result,assert,with,diagnostics,assert,true,message,match,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec valueMatches(String name, String pattern);1489423061;Expect a header with the given name whose first value matches the_provided regex pattern._@param name the header name_@param pattern String pattern to pass to {@link Pattern#compile(String)};public WebTestClient.ResponseSpec valueMatches(String name, String pattern) {_		String value = getHeaders().getFirst(name)__		assertTrue(getMessage(name) + " not found", value != null)__		boolean match = Pattern.compile(pattern).matcher(value).matches()__		String message = getMessage(name) + "=\'" + value + "\' does not match \'" + pattern + "\'"__		this.exchangeResult.assertWithDiagnostics(() -> assertTrue(message, match))__		return this.responseSpec__	};expect,a,header,with,the,given,name,whose,first,value,matches,the,provided,regex,pattern,param,name,the,header,name,param,pattern,string,pattern,to,pass,to,link,pattern,compile,string;public,web,test,client,response,spec,value,matches,string,name,string,pattern,string,value,get,headers,get,first,name,assert,true,get,message,name,not,found,value,null,boolean,match,pattern,compile,pattern,matcher,value,matches,string,message,get,message,name,value,does,not,match,pattern,this,exchange,result,assert,with,diagnostics,assert,true,message,match,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec valueMatches(String name, String pattern);1496955179;Expect a header with the given name whose first value matches the_provided regex pattern._@param name the header name_@param pattern String pattern to pass to {@link Pattern#compile(String)};public WebTestClient.ResponseSpec valueMatches(String name, String pattern) {_		String value = getHeaders().getFirst(name)__		if (value == null) {_			fail(getMessage(name) + " not found")__		}_		boolean match = Pattern.compile(pattern).matcher(value).matches()__		String message = getMessage(name) + "=\'" + value + "\' does not match \'" + pattern + "\'"__		this.exchangeResult.assertWithDiagnostics(() -> assertTrue(message, match))__		return this.responseSpec__	};expect,a,header,with,the,given,name,whose,first,value,matches,the,provided,regex,pattern,param,name,the,header,name,param,pattern,string,pattern,to,pass,to,link,pattern,compile,string;public,web,test,client,response,spec,value,matches,string,name,string,pattern,string,value,get,headers,get,first,name,if,value,null,fail,get,message,name,not,found,boolean,match,pattern,compile,pattern,matcher,value,matches,string,message,get,message,name,value,does,not,match,pattern,this,exchange,result,assert,with,diagnostics,assert,true,message,match,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec valueMatches(String name, String pattern);1509267085;Expect a header with the given name whose first value matches the_provided regex pattern._@param name the header name_@param pattern String pattern to pass to {@link Pattern#compile(String)};public WebTestClient.ResponseSpec valueMatches(String name, String pattern) {_		String value = getHeaders().getFirst(name)__		if (value == null) {_			fail(getMessage(name) + " not found")__		}_		boolean match = Pattern.compile(pattern).matcher(value).matches()__		String message = getMessage(name) + "=[" + value + "] does not match [" + pattern + "]"__		this.exchangeResult.assertWithDiagnostics(() -> assertTrue(message, match))__		return this.responseSpec__	};expect,a,header,with,the,given,name,whose,first,value,matches,the,provided,regex,pattern,param,name,the,header,name,param,pattern,string,pattern,to,pass,to,link,pattern,compile,string;public,web,test,client,response,spec,value,matches,string,name,string,pattern,string,value,get,headers,get,first,name,if,value,null,fail,get,message,name,not,found,boolean,match,pattern,compile,pattern,matcher,value,matches,string,message,get,message,name,value,does,not,match,pattern,this,exchange,result,assert,with,diagnostics,assert,true,message,match,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec valueMatches(String name, String pattern);1513884864;Expect a header with the given name whose first value matches the_provided regex pattern._@param name the header name_@param pattern String pattern to pass to {@link Pattern#compile(String)};public WebTestClient.ResponseSpec valueMatches(String name, String pattern) {_		String value = getHeaders().getFirst(name)__		if (value == null) {_			fail(getMessage(name) + " not found")__		}_		boolean match = Pattern.compile(pattern).matcher(value).matches()__		String message = getMessage(name) + "=[" + value + "] does not match [" + pattern + "]"__		this.exchangeResult.assertWithDiagnostics(() -> assertTrue(message, match))__		return this.responseSpec__	};expect,a,header,with,the,given,name,whose,first,value,matches,the,provided,regex,pattern,param,name,the,header,name,param,pattern,string,pattern,to,pass,to,link,pattern,compile,string;public,web,test,client,response,spec,value,matches,string,name,string,pattern,string,value,get,headers,get,first,name,if,value,null,fail,get,message,name,not,found,boolean,match,pattern,compile,pattern,matcher,value,matches,string,message,get,message,name,value,does,not,match,pattern,this,exchange,result,assert,with,diagnostics,assert,true,message,match,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec valueMatches(String name, String pattern);1515364415;Expect a header with the given name whose first value matches the_provided regex pattern._@param name the header name_@param pattern String pattern to pass to {@link Pattern#compile(String)};public WebTestClient.ResponseSpec valueMatches(String name, String pattern) {_		String value = getHeaders().getFirst(name)__		if (value == null) {_			fail(getMessage(name) + " not found")__		}_		boolean match = Pattern.compile(pattern).matcher(value).matches()__		String message = getMessage(name) + "=[" + value + "] does not match [" + pattern + "]"__		this.exchangeResult.assertWithDiagnostics(() -> assertTrue(message, match))__		return this.responseSpec__	};expect,a,header,with,the,given,name,whose,first,value,matches,the,provided,regex,pattern,param,name,the,header,name,param,pattern,string,pattern,to,pass,to,link,pattern,compile,string;public,web,test,client,response,spec,value,matches,string,name,string,pattern,string,value,get,headers,get,first,name,if,value,null,fail,get,message,name,not,found,boolean,match,pattern,compile,pattern,matcher,value,matches,string,message,get,message,name,value,does,not,match,pattern,this,exchange,result,assert,with,diagnostics,assert,true,message,match,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec valueMatches(String name, String pattern);1516891819;Expect a header with the given name whose first value matches the_provided regex pattern._@param name the header name_@param pattern String pattern to pass to {@link Pattern#compile(String)};public WebTestClient.ResponseSpec valueMatches(String name, String pattern) {_		String value = getHeaders().getFirst(name)__		if (value == null) {_			fail(getMessage(name) + " not found")__		}_		boolean match = Pattern.compile(pattern).matcher(value).matches()__		String message = getMessage(name) + "=[" + value + "] does not match [" + pattern + "]"__		this.exchangeResult.assertWithDiagnostics(() -> assertTrue(message, match))__		return this.responseSpec__	};expect,a,header,with,the,given,name,whose,first,value,matches,the,provided,regex,pattern,param,name,the,header,name,param,pattern,string,pattern,to,pass,to,link,pattern,compile,string;public,web,test,client,response,spec,value,matches,string,name,string,pattern,string,value,get,headers,get,first,name,if,value,null,fail,get,message,name,not,found,boolean,match,pattern,compile,pattern,matcher,value,matches,string,message,get,message,name,value,does,not,match,pattern,this,exchange,result,assert,with,diagnostics,assert,true,message,match,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec valueMatches(String name, String pattern);1516983894;Expect a header with the given name whose first value matches the_provided regex pattern._@param name the header name_@param pattern String pattern to pass to {@link Pattern#compile(String)};public WebTestClient.ResponseSpec valueMatches(String name, String pattern) {_		String value = getHeaders().getFirst(name)__		if (value == null) {_			fail(getMessage(name) + " not found")__		}_		boolean match = Pattern.compile(pattern).matcher(value).matches()__		String message = getMessage(name) + "=[" + value + "] does not match [" + pattern + "]"__		this.exchangeResult.assertWithDiagnostics(() -> assertTrue(message, match))__		return this.responseSpec__	};expect,a,header,with,the,given,name,whose,first,value,matches,the,provided,regex,pattern,param,name,the,header,name,param,pattern,string,pattern,to,pass,to,link,pattern,compile,string;public,web,test,client,response,spec,value,matches,string,name,string,pattern,string,value,get,headers,get,first,name,if,value,null,fail,get,message,name,not,found,boolean,match,pattern,compile,pattern,matcher,value,matches,string,message,get,message,name,value,does,not,match,pattern,this,exchange,result,assert,with,diagnostics,assert,true,message,match,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec valueMatches(String name, String pattern);1530174524;Expect a header with the given name whose first value matches the_provided regex pattern._@param name the header name_@param pattern the String pattern to pass to {@link Pattern#compile(String)};public WebTestClient.ResponseSpec valueMatches(String name, String pattern) {_		String value = getHeaders().getFirst(name)__		if (value == null) {_			fail(getMessage(name) + " not found")__		}_		boolean match = Pattern.compile(pattern).matcher(value).matches()__		String message = getMessage(name) + "=[" + value + "] does not match [" + pattern + "]"__		this.exchangeResult.assertWithDiagnostics(() -> assertTrue(message, match))__		return this.responseSpec__	};expect,a,header,with,the,given,name,whose,first,value,matches,the,provided,regex,pattern,param,name,the,header,name,param,pattern,the,string,pattern,to,pass,to,link,pattern,compile,string;public,web,test,client,response,spec,value,matches,string,name,string,pattern,string,value,get,headers,get,first,name,if,value,null,fail,get,message,name,not,found,boolean,match,pattern,compile,pattern,matcher,value,matches,string,message,get,message,name,value,does,not,match,pattern,this,exchange,result,assert,with,diagnostics,assert,true,message,match,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec valueMatches(String name, String pattern);1530174524;Expect a header with the given name whose first value matches the_provided regex pattern._@param name the header name_@param pattern the String pattern to pass to {@link Pattern#compile(String)};public WebTestClient.ResponseSpec valueMatches(String name, String pattern) {_		String value = getHeaders().getFirst(name)__		if (value == null) {_			fail(getMessage(name) + " not found")__		}_		boolean match = Pattern.compile(pattern).matcher(value).matches()__		String message = getMessage(name) + "=[" + value + "] does not match [" + pattern + "]"__		this.exchangeResult.assertWithDiagnostics(() -> assertTrue(message, match))__		return this.responseSpec__	};expect,a,header,with,the,given,name,whose,first,value,matches,the,provided,regex,pattern,param,name,the,header,name,param,pattern,the,string,pattern,to,pass,to,link,pattern,compile,string;public,web,test,client,response,spec,value,matches,string,name,string,pattern,string,value,get,headers,get,first,name,if,value,null,fail,get,message,name,not,found,boolean,match,pattern,compile,pattern,matcher,value,matches,string,message,get,message,name,value,does,not,match,pattern,this,exchange,result,assert,with,diagnostics,assert,true,message,match,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec valueMatches(String name, String pattern);1532122838;Match the primary value of the response header with a regex._@param name the header name_@param pattern the regex pattern;public WebTestClient.ResponseSpec valueMatches(String name, String pattern) {_		String value = getRequiredValue(name)__		String message = getMessage(name) + "=[" + value + "] does not match [" + pattern + "]"__		this.exchangeResult.assertWithDiagnostics(() -> AssertionErrors.assertTrue(message, value.matches(pattern)))__		return this.responseSpec__	};match,the,primary,value,of,the,response,header,with,a,regex,param,name,the,header,name,param,pattern,the,regex,pattern;public,web,test,client,response,spec,value,matches,string,name,string,pattern,string,value,get,required,value,name,string,message,get,message,name,value,does,not,match,pattern,this,exchange,result,assert,with,diagnostics,assertion,errors,assert,true,message,value,matches,pattern,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec valueMatches(String name, String pattern);1532140120;Match the primary value of the response header with a regex._@param name the header name_@param pattern the regex pattern;public WebTestClient.ResponseSpec valueMatches(String name, String pattern) {_		String value = getRequiredValue(name)__		String message = getMessage(name) + "=[" + value + "] does not match [" + pattern + "]"__		this.exchangeResult.assertWithDiagnostics(() -> AssertionErrors.assertTrue(message, value.matches(pattern)))__		return this.responseSpec__	};match,the,primary,value,of,the,response,header,with,a,regex,param,name,the,header,name,param,pattern,the,regex,pattern;public,web,test,client,response,spec,value,matches,string,name,string,pattern,string,value,get,required,value,name,string,message,get,message,name,value,does,not,match,pattern,this,exchange,result,assert,with,diagnostics,assertion,errors,assert,true,message,value,matches,pattern,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec valueMatches(String name, String pattern);1536182174;Match the primary value of the response header with a regex._@param name the header name_@param pattern the regex pattern;public WebTestClient.ResponseSpec valueMatches(String name, String pattern) {_		String value = getRequiredValue(name)__		String message = getMessage(name) + "=[" + value + "] does not match [" + pattern + "]"__		this.exchangeResult.assertWithDiagnostics(() -> AssertionErrors.assertTrue(message, value.matches(pattern)))__		return this.responseSpec__	};match,the,primary,value,of,the,response,header,with,a,regex,param,name,the,header,name,param,pattern,the,regex,pattern;public,web,test,client,response,spec,value,matches,string,name,string,pattern,string,value,get,required,value,name,string,message,get,message,name,value,does,not,match,pattern,this,exchange,result,assert,with,diagnostics,assertion,errors,assert,true,message,value,matches,pattern,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(MediaType mediaType);1487556888;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(MediaType mediaType) {_		MediaType actual = getHeaders().getContentType()__		assertEquals("Response header Content-Type", mediaType, actual)__		return this.responseSpec__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,media,type,media,type,media,type,actual,get,headers,get,content,type,assert,equals,response,header,content,type,media,type,actual,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(MediaType mediaType);1487556888;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(MediaType mediaType) {_		MediaType actual = getHeaders().getContentType()__		assertEquals("Response header Content-Type", mediaType, actual)__		return this.responseSpec__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,media,type,media,type,media,type,actual,get,headers,get,content,type,assert,equals,response,header,content,type,media,type,actual,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(MediaType mediaType);1487556888;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(MediaType mediaType) {_		return assertHeader("Content-Type", mediaType, getHeaders().getContentType())__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,media,type,media,type,return,assert,header,content,type,media,type,get,headers,get,content,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(MediaType mediaType);1487645987;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(MediaType mediaType) {_		return assertHeader("Content-Type", mediaType, getHeaders().getContentType())__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,media,type,media,type,return,assert,header,content,type,media,type,get,headers,get,content,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(MediaType mediaType);1489423061;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(MediaType mediaType) {_		return assertHeader("Content-Type", mediaType, getHeaders().getContentType())__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,media,type,media,type,return,assert,header,content,type,media,type,get,headers,get,content,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(MediaType mediaType);1496955179;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(MediaType mediaType) {_		return assertHeader("Content-Type", mediaType, getHeaders().getContentType())__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,media,type,media,type,return,assert,header,content,type,media,type,get,headers,get,content,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(MediaType mediaType);1509267085;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(MediaType mediaType) {_		return assertHeader("Content-Type", mediaType, getHeaders().getContentType())__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,media,type,media,type,return,assert,header,content,type,media,type,get,headers,get,content,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(MediaType mediaType);1513884864;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(MediaType mediaType) {_		return assertHeader("Content-Type", mediaType, getHeaders().getContentType())__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,media,type,media,type,return,assert,header,content,type,media,type,get,headers,get,content,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(MediaType mediaType);1515364415;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(MediaType mediaType) {_		return assertHeader("Content-Type", mediaType, getHeaders().getContentType())__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,media,type,media,type,return,assert,header,content,type,media,type,get,headers,get,content,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(MediaType mediaType);1516891819;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(MediaType mediaType) {_		return assertHeader("Content-Type", mediaType, getHeaders().getContentType())__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,media,type,media,type,return,assert,header,content,type,media,type,get,headers,get,content,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(MediaType mediaType);1516983894;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(MediaType mediaType) {_		return assertHeader("Content-Type", mediaType, getHeaders().getContentType())__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,media,type,media,type,return,assert,header,content,type,media,type,get,headers,get,content,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(MediaType mediaType);1530174524;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(MediaType mediaType) {_		return assertHeader("Content-Type", mediaType, getHeaders().getContentType())__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,media,type,media,type,return,assert,header,content,type,media,type,get,headers,get,content,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(MediaType mediaType);1530174524;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(MediaType mediaType) {_		return assertHeader("Content-Type", mediaType, getHeaders().getContentType())__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,media,type,media,type,return,assert,header,content,type,media,type,get,headers,get,content,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(MediaType mediaType);1532122838;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(MediaType mediaType) {_		return assertHeader("Content-Type", mediaType, getHeaders().getContentType())__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,media,type,media,type,return,assert,header,content,type,media,type,get,headers,get,content,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(MediaType mediaType);1532140120;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(MediaType mediaType) {_		return assertHeader("Content-Type", mediaType, getHeaders().getContentType())__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,media,type,media,type,return,assert,header,content,type,media,type,get,headers,get,content,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentType(MediaType mediaType);1536182174;Expect a "Content-Type" header with the given value.;public WebTestClient.ResponseSpec contentType(MediaType mediaType) {_		return assertHeader("Content-Type", mediaType, getHeaders().getContentType())__	};expect,a,content,type,header,with,the,given,value;public,web,test,client,response,spec,content,type,media,type,media,type,return,assert,header,content,type,media,type,get,headers,get,content,type
HeaderAssertions -> public WebTestClient.ResponseSpec value(String name, Consumer<String> consumer);1532140120;Assert the primary value of the response header with a {@link Matcher}._@param name the header name_@param consumer the matcher to sue_@since 5.1;public WebTestClient.ResponseSpec value(String name, Consumer<String> consumer) {_		String value = getRequiredValue(name)__		this.exchangeResult.assertWithDiagnostics(() -> consumer.accept(value))__		return this.responseSpec__	};assert,the,primary,value,of,the,response,header,with,a,link,matcher,param,name,the,header,name,param,consumer,the,matcher,to,sue,since,5,1;public,web,test,client,response,spec,value,string,name,consumer,string,consumer,string,value,get,required,value,name,this,exchange,result,assert,with,diagnostics,consumer,accept,value,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec value(String name, Consumer<String> consumer);1536182174;Assert the primary value of the response header with a {@link Matcher}._@param name the header name_@param consumer the matcher to sue_@since 5.1;public WebTestClient.ResponseSpec value(String name, Consumer<String> consumer) {_		String value = getRequiredValue(name)__		this.exchangeResult.assertWithDiagnostics(() -> consumer.accept(value))__		return this.responseSpec__	};assert,the,primary,value,of,the,response,header,with,a,link,matcher,param,name,the,header,name,param,consumer,the,matcher,to,sue,since,5,1;public,web,test,client,response,spec,value,string,name,consumer,string,consumer,string,value,get,required,value,name,this,exchange,result,assert,with,diagnostics,consumer,accept,value,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec valueMatches(String headerName, String pattern);1487556888;Expect a header with the given name whose first value matches the_provided regex pattern._@param headerName the header name_@param pattern String pattern to pass to {@link Pattern#compile(String)};public WebTestClient.ResponseSpec valueMatches(String headerName, String pattern) {_		List<String> values = getHeaders().get(headerName)__		String value = CollectionUtils.isEmpty(values) ? "" : values.get(0)__		boolean match = Pattern.compile(pattern).matcher(value).matches()__		String message = "Response header " + headerName + "=\'" + value + "\' does not match " + pattern__		assertTrue(message, match)__		return this.responseSpec__	};expect,a,header,with,the,given,name,whose,first,value,matches,the,provided,regex,pattern,param,header,name,the,header,name,param,pattern,string,pattern,to,pass,to,link,pattern,compile,string;public,web,test,client,response,spec,value,matches,string,header,name,string,pattern,list,string,values,get,headers,get,header,name,string,value,collection,utils,is,empty,values,values,get,0,boolean,match,pattern,compile,pattern,matcher,value,matches,string,message,response,header,header,name,value,does,not,match,pattern,assert,true,message,match,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec valueMatches(String headerName, String pattern);1487556888;Expect a header with the given name whose first value matches the_provided regex pattern._@param headerName the header name_@param pattern String pattern to pass to {@link Pattern#compile(String)};public WebTestClient.ResponseSpec valueMatches(String headerName, String pattern) {_		List<String> values = getHeaders().get(headerName)__		String value = CollectionUtils.isEmpty(values) ? "" : values.get(0)__		boolean match = Pattern.compile(pattern).matcher(value).matches()__		String message = "Response header " + headerName + "=\'" + value + "\' does not match " + pattern__		assertTrue(message, match)__		return this.responseSpec__	};expect,a,header,with,the,given,name,whose,first,value,matches,the,provided,regex,pattern,param,header,name,the,header,name,param,pattern,string,pattern,to,pass,to,link,pattern,compile,string;public,web,test,client,response,spec,value,matches,string,header,name,string,pattern,list,string,values,get,headers,get,header,name,string,value,collection,utils,is,empty,values,values,get,0,boolean,match,pattern,compile,pattern,matcher,value,matches,string,message,response,header,header,name,value,does,not,match,pattern,assert,true,message,match,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec doesNotExist(String name);1513884864;Expect that the header with the given name is not present.;public WebTestClient.ResponseSpec doesNotExist(String name) {_		if (getHeaders().containsKey(name)) {_			String message = getMessage(name) + " exists with value=[" + getHeaders().getFirst(name) + "]"__			this.exchangeResult.assertWithDiagnostics(() -> fail(message))__		}_		return this.responseSpec__	};expect,that,the,header,with,the,given,name,is,not,present;public,web,test,client,response,spec,does,not,exist,string,name,if,get,headers,contains,key,name,string,message,get,message,name,exists,with,value,get,headers,get,first,name,this,exchange,result,assert,with,diagnostics,fail,message,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec doesNotExist(String name);1515364415;Expect that the header with the given name is not present.;public WebTestClient.ResponseSpec doesNotExist(String name) {_		if (getHeaders().containsKey(name)) {_			String message = getMessage(name) + " exists with value=[" + getHeaders().getFirst(name) + "]"__			this.exchangeResult.assertWithDiagnostics(() -> fail(message))__		}_		return this.responseSpec__	};expect,that,the,header,with,the,given,name,is,not,present;public,web,test,client,response,spec,does,not,exist,string,name,if,get,headers,contains,key,name,string,message,get,message,name,exists,with,value,get,headers,get,first,name,this,exchange,result,assert,with,diagnostics,fail,message,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec doesNotExist(String name);1516891819;Expect that the header with the given name is not present.;public WebTestClient.ResponseSpec doesNotExist(String name) {_		if (getHeaders().containsKey(name)) {_			String message = getMessage(name) + " exists with value=[" + getHeaders().getFirst(name) + "]"__			this.exchangeResult.assertWithDiagnostics(() -> fail(message))__		}_		return this.responseSpec__	};expect,that,the,header,with,the,given,name,is,not,present;public,web,test,client,response,spec,does,not,exist,string,name,if,get,headers,contains,key,name,string,message,get,message,name,exists,with,value,get,headers,get,first,name,this,exchange,result,assert,with,diagnostics,fail,message,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec doesNotExist(String name);1516983894;Expect that the header with the given name is not present.;public WebTestClient.ResponseSpec doesNotExist(String name) {_		if (getHeaders().containsKey(name)) {_			String message = getMessage(name) + " exists with value=[" + getHeaders().getFirst(name) + "]"__			this.exchangeResult.assertWithDiagnostics(() -> fail(message))__		}_		return this.responseSpec__	};expect,that,the,header,with,the,given,name,is,not,present;public,web,test,client,response,spec,does,not,exist,string,name,if,get,headers,contains,key,name,string,message,get,message,name,exists,with,value,get,headers,get,first,name,this,exchange,result,assert,with,diagnostics,fail,message,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec doesNotExist(String name);1530174524;Expect that the header with the given name is not present.;public WebTestClient.ResponseSpec doesNotExist(String name) {_		if (getHeaders().containsKey(name)) {_			String message = getMessage(name) + " exists with value=[" + getHeaders().getFirst(name) + "]"__			this.exchangeResult.assertWithDiagnostics(() -> fail(message))__		}_		return this.responseSpec__	};expect,that,the,header,with,the,given,name,is,not,present;public,web,test,client,response,spec,does,not,exist,string,name,if,get,headers,contains,key,name,string,message,get,message,name,exists,with,value,get,headers,get,first,name,this,exchange,result,assert,with,diagnostics,fail,message,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec doesNotExist(String name);1530174524;Expect that the header with the given name is not present.;public WebTestClient.ResponseSpec doesNotExist(String name) {_		if (getHeaders().containsKey(name)) {_			String message = getMessage(name) + " exists with value=[" + getHeaders().getFirst(name) + "]"__			this.exchangeResult.assertWithDiagnostics(() -> fail(message))__		}_		return this.responseSpec__	};expect,that,the,header,with,the,given,name,is,not,present;public,web,test,client,response,spec,does,not,exist,string,name,if,get,headers,contains,key,name,string,message,get,message,name,exists,with,value,get,headers,get,first,name,this,exchange,result,assert,with,diagnostics,fail,message,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec doesNotExist(String name);1532122838;Expect that the header with the given name is not present.;public WebTestClient.ResponseSpec doesNotExist(String name) {_		if (getHeaders().containsKey(name)) {_			String message = getMessage(name) + " exists with value=[" + getHeaders().getFirst(name) + "]"__			this.exchangeResult.assertWithDiagnostics(() -> AssertionErrors.fail(message))__		}_		return this.responseSpec__	};expect,that,the,header,with,the,given,name,is,not,present;public,web,test,client,response,spec,does,not,exist,string,name,if,get,headers,contains,key,name,string,message,get,message,name,exists,with,value,get,headers,get,first,name,this,exchange,result,assert,with,diagnostics,assertion,errors,fail,message,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec doesNotExist(String name);1532140120;Expect that the header with the given name is not present.;public WebTestClient.ResponseSpec doesNotExist(String name) {_		if (getHeaders().containsKey(name)) {_			String message = getMessage(name) + " exists with value=[" + getHeaders().getFirst(name) + "]"__			this.exchangeResult.assertWithDiagnostics(() -> AssertionErrors.fail(message))__		}_		return this.responseSpec__	};expect,that,the,header,with,the,given,name,is,not,present;public,web,test,client,response,spec,does,not,exist,string,name,if,get,headers,contains,key,name,string,message,get,message,name,exists,with,value,get,headers,get,first,name,this,exchange,result,assert,with,diagnostics,assertion,errors,fail,message,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec doesNotExist(String name);1536182174;Expect that the header with the given name is not present.;public WebTestClient.ResponseSpec doesNotExist(String name) {_		if (getHeaders().containsKey(name)) {_			String message = getMessage(name) + " exists with value=[" + getHeaders().getFirst(name) + "]"__			this.exchangeResult.assertWithDiagnostics(() -> AssertionErrors.fail(message))__		}_		return this.responseSpec__	};expect,that,the,header,with,the,given,name,is,not,present;public,web,test,client,response,spec,does,not,exist,string,name,if,get,headers,contains,key,name,string,message,get,message,name,exists,with,value,get,headers,get,first,name,this,exchange,result,assert,with,diagnostics,assertion,errors,fail,message,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition);1487556888;Expect a "Content-Disposition" header with the given value.;public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition) {_		ContentDisposition actual = getHeaders().getContentDisposition()__		assertEquals("Response header Content-Disposition", contentDisposition, actual)__		return this.responseSpec__	};expect,a,content,disposition,header,with,the,given,value;public,web,test,client,response,spec,content,disposition,content,disposition,content,disposition,content,disposition,actual,get,headers,get,content,disposition,assert,equals,response,header,content,disposition,content,disposition,actual,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition);1487556888;Expect a "Content-Disposition" header with the given value.;public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition) {_		ContentDisposition actual = getHeaders().getContentDisposition()__		assertEquals("Response header Content-Disposition", contentDisposition, actual)__		return this.responseSpec__	};expect,a,content,disposition,header,with,the,given,value;public,web,test,client,response,spec,content,disposition,content,disposition,content,disposition,content,disposition,actual,get,headers,get,content,disposition,assert,equals,response,header,content,disposition,content,disposition,actual,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition);1487556888;Expect a "Content-Disposition" header with the given value.;public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition) {_		return assertHeader("Content-Disposition", contentDisposition, getHeaders().getContentDisposition())__	};expect,a,content,disposition,header,with,the,given,value;public,web,test,client,response,spec,content,disposition,content,disposition,content,disposition,return,assert,header,content,disposition,content,disposition,get,headers,get,content,disposition
HeaderAssertions -> public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition);1487645987;Expect a "Content-Disposition" header with the given value.;public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition) {_		return assertHeader("Content-Disposition", contentDisposition, getHeaders().getContentDisposition())__	};expect,a,content,disposition,header,with,the,given,value;public,web,test,client,response,spec,content,disposition,content,disposition,content,disposition,return,assert,header,content,disposition,content,disposition,get,headers,get,content,disposition
HeaderAssertions -> public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition);1489423061;Expect a "Content-Disposition" header with the given value.;public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition) {_		return assertHeader("Content-Disposition", contentDisposition, getHeaders().getContentDisposition())__	};expect,a,content,disposition,header,with,the,given,value;public,web,test,client,response,spec,content,disposition,content,disposition,content,disposition,return,assert,header,content,disposition,content,disposition,get,headers,get,content,disposition
HeaderAssertions -> public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition);1496955179;Expect a "Content-Disposition" header with the given value.;public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition) {_		return assertHeader("Content-Disposition", contentDisposition, getHeaders().getContentDisposition())__	};expect,a,content,disposition,header,with,the,given,value;public,web,test,client,response,spec,content,disposition,content,disposition,content,disposition,return,assert,header,content,disposition,content,disposition,get,headers,get,content,disposition
HeaderAssertions -> public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition);1509267085;Expect a "Content-Disposition" header with the given value.;public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition) {_		return assertHeader("Content-Disposition", contentDisposition, getHeaders().getContentDisposition())__	};expect,a,content,disposition,header,with,the,given,value;public,web,test,client,response,spec,content,disposition,content,disposition,content,disposition,return,assert,header,content,disposition,content,disposition,get,headers,get,content,disposition
HeaderAssertions -> public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition);1513884864;Expect a "Content-Disposition" header with the given value.;public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition) {_		return assertHeader("Content-Disposition", contentDisposition, getHeaders().getContentDisposition())__	};expect,a,content,disposition,header,with,the,given,value;public,web,test,client,response,spec,content,disposition,content,disposition,content,disposition,return,assert,header,content,disposition,content,disposition,get,headers,get,content,disposition
HeaderAssertions -> public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition);1515364415;Expect a "Content-Disposition" header with the given value.;public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition) {_		return assertHeader("Content-Disposition", contentDisposition, getHeaders().getContentDisposition())__	};expect,a,content,disposition,header,with,the,given,value;public,web,test,client,response,spec,content,disposition,content,disposition,content,disposition,return,assert,header,content,disposition,content,disposition,get,headers,get,content,disposition
HeaderAssertions -> public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition);1516891819;Expect a "Content-Disposition" header with the given value.;public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition) {_		return assertHeader("Content-Disposition", contentDisposition, getHeaders().getContentDisposition())__	};expect,a,content,disposition,header,with,the,given,value;public,web,test,client,response,spec,content,disposition,content,disposition,content,disposition,return,assert,header,content,disposition,content,disposition,get,headers,get,content,disposition
HeaderAssertions -> public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition);1516983894;Expect a "Content-Disposition" header with the given value.;public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition) {_		return assertHeader("Content-Disposition", contentDisposition, getHeaders().getContentDisposition())__	};expect,a,content,disposition,header,with,the,given,value;public,web,test,client,response,spec,content,disposition,content,disposition,content,disposition,return,assert,header,content,disposition,content,disposition,get,headers,get,content,disposition
HeaderAssertions -> public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition);1530174524;Expect a "Content-Disposition" header with the given value.;public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition) {_		return assertHeader("Content-Disposition", contentDisposition, getHeaders().getContentDisposition())__	};expect,a,content,disposition,header,with,the,given,value;public,web,test,client,response,spec,content,disposition,content,disposition,content,disposition,return,assert,header,content,disposition,content,disposition,get,headers,get,content,disposition
HeaderAssertions -> public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition);1530174524;Expect a "Content-Disposition" header with the given value.;public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition) {_		return assertHeader("Content-Disposition", contentDisposition, getHeaders().getContentDisposition())__	};expect,a,content,disposition,header,with,the,given,value;public,web,test,client,response,spec,content,disposition,content,disposition,content,disposition,return,assert,header,content,disposition,content,disposition,get,headers,get,content,disposition
HeaderAssertions -> public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition);1532122838;Expect a "Content-Disposition" header with the given value.;public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition) {_		return assertHeader("Content-Disposition", contentDisposition, getHeaders().getContentDisposition())__	};expect,a,content,disposition,header,with,the,given,value;public,web,test,client,response,spec,content,disposition,content,disposition,content,disposition,return,assert,header,content,disposition,content,disposition,get,headers,get,content,disposition
HeaderAssertions -> public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition);1532140120;Expect a "Content-Disposition" header with the given value.;public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition) {_		return assertHeader("Content-Disposition", contentDisposition, getHeaders().getContentDisposition())__	};expect,a,content,disposition,header,with,the,given,value;public,web,test,client,response,spec,content,disposition,content,disposition,content,disposition,return,assert,header,content,disposition,content,disposition,get,headers,get,content,disposition
HeaderAssertions -> public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition);1536182174;Expect a "Content-Disposition" header with the given value.;public WebTestClient.ResponseSpec contentDisposition(ContentDisposition contentDisposition) {_		return assertHeader("Content-Disposition", contentDisposition, getHeaders().getContentDisposition())__	};expect,a,content,disposition,header,with,the,given,value;public,web,test,client,response,spec,content,disposition,content,disposition,content,disposition,return,assert,header,content,disposition,content,disposition,get,headers,get,content,disposition
HeaderAssertions -> public WebTestClient.ResponseSpec contentTypeCompatibleWith(String mediaType);1513884864;Expect a "Content-Type" header compatible with the given value.;public WebTestClient.ResponseSpec contentTypeCompatibleWith(String mediaType) {_		return contentTypeCompatibleWith(MediaType.parseMediaType(mediaType))__	};expect,a,content,type,header,compatible,with,the,given,value;public,web,test,client,response,spec,content,type,compatible,with,string,media,type,return,content,type,compatible,with,media,type,parse,media,type,media,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentTypeCompatibleWith(String mediaType);1515364415;Expect a "Content-Type" header compatible with the given value.;public WebTestClient.ResponseSpec contentTypeCompatibleWith(String mediaType) {_		return contentTypeCompatibleWith(MediaType.parseMediaType(mediaType))__	};expect,a,content,type,header,compatible,with,the,given,value;public,web,test,client,response,spec,content,type,compatible,with,string,media,type,return,content,type,compatible,with,media,type,parse,media,type,media,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentTypeCompatibleWith(String mediaType);1516891819;Expect a "Content-Type" header compatible with the given value.;public WebTestClient.ResponseSpec contentTypeCompatibleWith(String mediaType) {_		return contentTypeCompatibleWith(MediaType.parseMediaType(mediaType))__	};expect,a,content,type,header,compatible,with,the,given,value;public,web,test,client,response,spec,content,type,compatible,with,string,media,type,return,content,type,compatible,with,media,type,parse,media,type,media,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentTypeCompatibleWith(String mediaType);1516983894;Expect a "Content-Type" header compatible with the given value.;public WebTestClient.ResponseSpec contentTypeCompatibleWith(String mediaType) {_		return contentTypeCompatibleWith(MediaType.parseMediaType(mediaType))__	};expect,a,content,type,header,compatible,with,the,given,value;public,web,test,client,response,spec,content,type,compatible,with,string,media,type,return,content,type,compatible,with,media,type,parse,media,type,media,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentTypeCompatibleWith(String mediaType);1530174524;Expect a "Content-Type" header compatible with the given value.;public WebTestClient.ResponseSpec contentTypeCompatibleWith(String mediaType) {_		return contentTypeCompatibleWith(MediaType.parseMediaType(mediaType))__	};expect,a,content,type,header,compatible,with,the,given,value;public,web,test,client,response,spec,content,type,compatible,with,string,media,type,return,content,type,compatible,with,media,type,parse,media,type,media,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentTypeCompatibleWith(String mediaType);1530174524;Expect a "Content-Type" header compatible with the given value.;public WebTestClient.ResponseSpec contentTypeCompatibleWith(String mediaType) {_		return contentTypeCompatibleWith(MediaType.parseMediaType(mediaType))__	};expect,a,content,type,header,compatible,with,the,given,value;public,web,test,client,response,spec,content,type,compatible,with,string,media,type,return,content,type,compatible,with,media,type,parse,media,type,media,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentTypeCompatibleWith(String mediaType);1532122838;Expect a "Content-Type" header compatible with the given value.;public WebTestClient.ResponseSpec contentTypeCompatibleWith(String mediaType) {_		return contentTypeCompatibleWith(MediaType.parseMediaType(mediaType))__	};expect,a,content,type,header,compatible,with,the,given,value;public,web,test,client,response,spec,content,type,compatible,with,string,media,type,return,content,type,compatible,with,media,type,parse,media,type,media,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentTypeCompatibleWith(String mediaType);1532140120;Expect a "Content-Type" header compatible with the given value.;public WebTestClient.ResponseSpec contentTypeCompatibleWith(String mediaType) {_		return contentTypeCompatibleWith(MediaType.parseMediaType(mediaType))__	};expect,a,content,type,header,compatible,with,the,given,value;public,web,test,client,response,spec,content,type,compatible,with,string,media,type,return,content,type,compatible,with,media,type,parse,media,type,media,type
HeaderAssertions -> public WebTestClient.ResponseSpec contentTypeCompatibleWith(String mediaType);1536182174;Expect a "Content-Type" header compatible with the given value.;public WebTestClient.ResponseSpec contentTypeCompatibleWith(String mediaType) {_		return contentTypeCompatibleWith(MediaType.parseMediaType(mediaType))__	};expect,a,content,type,header,compatible,with,the,given,value;public,web,test,client,response,spec,content,type,compatible,with,string,media,type,return,content,type,compatible,with,media,type,parse,media,type,media,type
HeaderAssertions -> public WebTestClient.ResponseSpec exists(String name);1516983894;Expect that the header with the given name is present._@since 5.0.3;public WebTestClient.ResponseSpec exists(String name) {_		if (!getHeaders().containsKey(name)) {_			String message = getMessage(name) + " does not exist"__			this.exchangeResult.assertWithDiagnostics(() -> fail(message))__		}_		return this.responseSpec__	};expect,that,the,header,with,the,given,name,is,present,since,5,0,3;public,web,test,client,response,spec,exists,string,name,if,get,headers,contains,key,name,string,message,get,message,name,does,not,exist,this,exchange,result,assert,with,diagnostics,fail,message,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec exists(String name);1530174524;Expect that the header with the given name is present._@since 5.0.3;public WebTestClient.ResponseSpec exists(String name) {_		if (!getHeaders().containsKey(name)) {_			String message = getMessage(name) + " does not exist"__			this.exchangeResult.assertWithDiagnostics(() -> fail(message))__		}_		return this.responseSpec__	};expect,that,the,header,with,the,given,name,is,present,since,5,0,3;public,web,test,client,response,spec,exists,string,name,if,get,headers,contains,key,name,string,message,get,message,name,does,not,exist,this,exchange,result,assert,with,diagnostics,fail,message,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec exists(String name);1530174524;Expect that the header with the given name is present._@since 5.0.3;public WebTestClient.ResponseSpec exists(String name) {_		if (!getHeaders().containsKey(name)) {_			String message = getMessage(name) + " does not exist"__			this.exchangeResult.assertWithDiagnostics(() -> fail(message))__		}_		return this.responseSpec__	};expect,that,the,header,with,the,given,name,is,present,since,5,0,3;public,web,test,client,response,spec,exists,string,name,if,get,headers,contains,key,name,string,message,get,message,name,does,not,exist,this,exchange,result,assert,with,diagnostics,fail,message,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec exists(String name);1532122838;Expect that the header with the given name is present._@since 5.0.3;public WebTestClient.ResponseSpec exists(String name) {_		if (!getHeaders().containsKey(name)) {_			String message = getMessage(name) + " does not exist"__			this.exchangeResult.assertWithDiagnostics(() -> AssertionErrors.fail(message))__		}_		return this.responseSpec__	};expect,that,the,header,with,the,given,name,is,present,since,5,0,3;public,web,test,client,response,spec,exists,string,name,if,get,headers,contains,key,name,string,message,get,message,name,does,not,exist,this,exchange,result,assert,with,diagnostics,assertion,errors,fail,message,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec exists(String name);1532140120;Expect that the header with the given name is present._@since 5.0.3;public WebTestClient.ResponseSpec exists(String name) {_		if (!getHeaders().containsKey(name)) {_			String message = getMessage(name) + " does not exist"__			this.exchangeResult.assertWithDiagnostics(() -> AssertionErrors.fail(message))__		}_		return this.responseSpec__	};expect,that,the,header,with,the,given,name,is,present,since,5,0,3;public,web,test,client,response,spec,exists,string,name,if,get,headers,contains,key,name,string,message,get,message,name,does,not,exist,this,exchange,result,assert,with,diagnostics,assertion,errors,fail,message,return,this,response,spec
HeaderAssertions -> public WebTestClient.ResponseSpec exists(String name);1536182174;Expect that the header with the given name is present._@since 5.0.3;public WebTestClient.ResponseSpec exists(String name) {_		if (!getHeaders().containsKey(name)) {_			String message = getMessage(name) + " does not exist"__			this.exchangeResult.assertWithDiagnostics(() -> AssertionErrors.fail(message))__		}_		return this.responseSpec__	};expect,that,the,header,with,the,given,name,is,present,since,5,0,3;public,web,test,client,response,spec,exists,string,name,if,get,headers,contains,key,name,string,message,get,message,name,does,not,exist,this,exchange,result,assert,with,diagnostics,assertion,errors,fail,message,return,this,response,spec
