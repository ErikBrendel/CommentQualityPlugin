# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultContextCache -> @Override 	public void put(MergedContextConfiguration key, ApplicationContext context);1429559310;{@inheritDoc};@Override_	public void put(MergedContextConfiguration key, ApplicationContext context) {_		Assert.notNull(key, "Key must not be null")__		Assert.notNull(context, "ApplicationContext must not be null")___		this.contextMap.put(key, context)__		MergedContextConfiguration child = key__		MergedContextConfiguration parent = child.getParent()__		while (parent != null) {_			Set<MergedContextConfiguration> list = this.hierarchyMap.get(parent)__			if (list == null) {_				list = new HashSet<MergedContextConfiguration>()__				this.hierarchyMap.put(parent, list)__			}_			list.add(child)__			child = parent__			parent = child.getParent()__		}_	};inherit,doc;override,public,void,put,merged,context,configuration,key,application,context,context,assert,not,null,key,key,must,not,be,null,assert,not,null,context,application,context,must,not,be,null,this,context,map,put,key,context,merged,context,configuration,child,key,merged,context,configuration,parent,child,get,parent,while,parent,null,set,merged,context,configuration,list,this,hierarchy,map,get,parent,if,list,null,list,new,hash,set,merged,context,configuration,this,hierarchy,map,put,parent,list,list,add,child,child,parent,parent,child,get,parent
DefaultContextCache -> @Override 	public void put(MergedContextConfiguration key, ApplicationContext context);1459796164;{@inheritDoc};@Override_	public void put(MergedContextConfiguration key, ApplicationContext context) {_		Assert.notNull(key, "Key must not be null")__		Assert.notNull(context, "ApplicationContext must not be null")___		this.contextMap.put(key, context)__		MergedContextConfiguration child = key__		MergedContextConfiguration parent = child.getParent()__		while (parent != null) {_			Set<MergedContextConfiguration> list = this.hierarchyMap.get(parent)__			if (list == null) {_				list = new HashSet<MergedContextConfiguration>()__				this.hierarchyMap.put(parent, list)__			}_			list.add(child)__			child = parent__			parent = child.getParent()__		}_	};inherit,doc;override,public,void,put,merged,context,configuration,key,application,context,context,assert,not,null,key,key,must,not,be,null,assert,not,null,context,application,context,must,not,be,null,this,context,map,put,key,context,merged,context,configuration,child,key,merged,context,configuration,parent,child,get,parent,while,parent,null,set,merged,context,configuration,list,this,hierarchy,map,get,parent,if,list,null,list,new,hash,set,merged,context,configuration,this,hierarchy,map,put,parent,list,list,add,child,child,parent,parent,child,get,parent
DefaultContextCache -> @Override 	public void put(MergedContextConfiguration key, ApplicationContext context);1465306936;{@inheritDoc};@Override_	public void put(MergedContextConfiguration key, ApplicationContext context) {_		Assert.notNull(key, "Key must not be null")__		Assert.notNull(context, "ApplicationContext must not be null")___		this.contextMap.put(key, context)__		MergedContextConfiguration child = key__		MergedContextConfiguration parent = child.getParent()__		while (parent != null) {_			Set<MergedContextConfiguration> list = this.hierarchyMap.get(parent)__			if (list == null) {_				list = new HashSet<MergedContextConfiguration>()__				this.hierarchyMap.put(parent, list)__			}_			list.add(child)__			child = parent__			parent = child.getParent()__		}_	};inherit,doc;override,public,void,put,merged,context,configuration,key,application,context,context,assert,not,null,key,key,must,not,be,null,assert,not,null,context,application,context,must,not,be,null,this,context,map,put,key,context,merged,context,configuration,child,key,merged,context,configuration,parent,child,get,parent,while,parent,null,set,merged,context,configuration,list,this,hierarchy,map,get,parent,if,list,null,list,new,hash,set,merged,context,configuration,this,hierarchy,map,put,parent,list,list,add,child,child,parent,parent,child,get,parent
DefaultContextCache -> @Override 	public void put(MergedContextConfiguration key, ApplicationContext context);1467730834;{@inheritDoc};@Override_	public void put(MergedContextConfiguration key, ApplicationContext context) {_		Assert.notNull(key, "Key must not be null")__		Assert.notNull(context, "ApplicationContext must not be null")___		this.contextMap.put(key, context)__		MergedContextConfiguration child = key__		MergedContextConfiguration parent = child.getParent()__		while (parent != null) {_			Set<MergedContextConfiguration> list = this.hierarchyMap.get(parent)__			if (list == null) {_				list = new HashSet<>()__				this.hierarchyMap.put(parent, list)__			}_			list.add(child)__			child = parent__			parent = child.getParent()__		}_	};inherit,doc;override,public,void,put,merged,context,configuration,key,application,context,context,assert,not,null,key,key,must,not,be,null,assert,not,null,context,application,context,must,not,be,null,this,context,map,put,key,context,merged,context,configuration,child,key,merged,context,configuration,parent,child,get,parent,while,parent,null,set,merged,context,configuration,list,this,hierarchy,map,get,parent,if,list,null,list,new,hash,set,this,hierarchy,map,put,parent,list,list,add,child,child,parent,parent,child,get,parent
DefaultContextCache -> @Override 	public void put(MergedContextConfiguration key, ApplicationContext context);1496242568;{@inheritDoc};@Override_	public void put(MergedContextConfiguration key, ApplicationContext context) {_		Assert.notNull(key, "Key must not be null")__		Assert.notNull(context, "ApplicationContext must not be null")___		this.contextMap.put(key, context)__		MergedContextConfiguration child = key__		MergedContextConfiguration parent = child.getParent()__		while (parent != null) {_			Set<MergedContextConfiguration> list = this.hierarchyMap.get(parent)__			if (list == null) {_				list = new HashSet<>()__				this.hierarchyMap.put(parent, list)__			}_			list.add(child)__			child = parent__			parent = child.getParent()__		}_	};inherit,doc;override,public,void,put,merged,context,configuration,key,application,context,context,assert,not,null,key,key,must,not,be,null,assert,not,null,context,application,context,must,not,be,null,this,context,map,put,key,context,merged,context,configuration,child,key,merged,context,configuration,parent,child,get,parent,while,parent,null,set,merged,context,configuration,list,this,hierarchy,map,get,parent,if,list,null,list,new,hash,set,this,hierarchy,map,put,parent,list,list,add,child,child,parent,parent,child,get,parent
DefaultContextCache -> @Override 	public void put(MergedContextConfiguration key, ApplicationContext context);1496955179;{@inheritDoc};@Override_	public void put(MergedContextConfiguration key, ApplicationContext context) {_		Assert.notNull(key, "Key must not be null")__		Assert.notNull(context, "ApplicationContext must not be null")___		this.contextMap.put(key, context)__		MergedContextConfiguration child = key__		MergedContextConfiguration parent = child.getParent()__		while (parent != null) {_			Set<MergedContextConfiguration> list = this.hierarchyMap.get(parent)__			if (list == null) {_				list = new HashSet<>()__				this.hierarchyMap.put(parent, list)__			}_			list.add(child)__			child = parent__			parent = child.getParent()__		}_	};inherit,doc;override,public,void,put,merged,context,configuration,key,application,context,context,assert,not,null,key,key,must,not,be,null,assert,not,null,context,application,context,must,not,be,null,this,context,map,put,key,context,merged,context,configuration,child,key,merged,context,configuration,parent,child,get,parent,while,parent,null,set,merged,context,configuration,list,this,hierarchy,map,get,parent,if,list,null,list,new,hash,set,this,hierarchy,map,put,parent,list,list,add,child,child,parent,parent,child,get,parent
DefaultContextCache -> @Override 	public void put(MergedContextConfiguration key, ApplicationContext context);1502974979;{@inheritDoc};@Override_	public void put(MergedContextConfiguration key, ApplicationContext context) {_		Assert.notNull(key, "Key must not be null")__		Assert.notNull(context, "ApplicationContext must not be null")___		this.contextMap.put(key, context)__		MergedContextConfiguration child = key__		MergedContextConfiguration parent = child.getParent()__		while (parent != null) {_			Set<MergedContextConfiguration> list = this.hierarchyMap.get(parent)__			if (list == null) {_				list = new HashSet<>()__				this.hierarchyMap.put(parent, list)__			}_			list.add(child)__			child = parent__			parent = child.getParent()__		}_	};inherit,doc;override,public,void,put,merged,context,configuration,key,application,context,context,assert,not,null,key,key,must,not,be,null,assert,not,null,context,application,context,must,not,be,null,this,context,map,put,key,context,merged,context,configuration,child,key,merged,context,configuration,parent,child,get,parent,while,parent,null,set,merged,context,configuration,list,this,hierarchy,map,get,parent,if,list,null,list,new,hash,set,this,hierarchy,map,put,parent,list,list,add,child,child,parent,parent,child,get,parent
DefaultContextCache -> @Override 	public void put(MergedContextConfiguration key, ApplicationContext context);1521822983;{@inheritDoc};@Override_	public void put(MergedContextConfiguration key, ApplicationContext context) {_		Assert.notNull(key, "Key must not be null")__		Assert.notNull(context, "ApplicationContext must not be null")___		this.contextMap.put(key, context)__		MergedContextConfiguration child = key__		MergedContextConfiguration parent = child.getParent()__		while (parent != null) {_			Set<MergedContextConfiguration> list = this.hierarchyMap.computeIfAbsent(parent, k -> new HashSet<>())__			list.add(child)__			child = parent__			parent = child.getParent()__		}_	};inherit,doc;override,public,void,put,merged,context,configuration,key,application,context,context,assert,not,null,key,key,must,not,be,null,assert,not,null,context,application,context,must,not,be,null,this,context,map,put,key,context,merged,context,configuration,child,key,merged,context,configuration,parent,child,get,parent,while,parent,null,set,merged,context,configuration,list,this,hierarchy,map,compute,if,absent,parent,k,new,hash,set,list,add,child,child,parent,parent,child,get,parent
DefaultContextCache -> LruCache -> LruCache(int initialCapacity, float loadFactor);1459796164;Create a new {@code LruCache} with the supplied initial capacity and_load factor._@param initialCapacity the initial capacity_@param loadFactor the load factor;LruCache(int initialCapacity, float loadFactor) {_			super(initialCapacity, loadFactor, true)__		};create,a,new,code,lru,cache,with,the,supplied,initial,capacity,and,load,factor,param,initial,capacity,the,initial,capacity,param,load,factor,the,load,factor;lru,cache,int,initial,capacity,float,load,factor,super,initial,capacity,load,factor,true
DefaultContextCache -> LruCache -> LruCache(int initialCapacity, float loadFactor);1465306936;Create a new {@code LruCache} with the supplied initial capacity_and load factor._@param initialCapacity the initial capacity_@param loadFactor the load factor;LruCache(int initialCapacity, float loadFactor) {_			super(initialCapacity, loadFactor, true)__		};create,a,new,code,lru,cache,with,the,supplied,initial,capacity,and,load,factor,param,initial,capacity,the,initial,capacity,param,load,factor,the,load,factor;lru,cache,int,initial,capacity,float,load,factor,super,initial,capacity,load,factor,true
DefaultContextCache -> LruCache -> LruCache(int initialCapacity, float loadFactor);1467730834;Create a new {@code LruCache} with the supplied initial capacity_and load factor._@param initialCapacity the initial capacity_@param loadFactor the load factor;LruCache(int initialCapacity, float loadFactor) {_			super(initialCapacity, loadFactor, true)__		};create,a,new,code,lru,cache,with,the,supplied,initial,capacity,and,load,factor,param,initial,capacity,the,initial,capacity,param,load,factor,the,load,factor;lru,cache,int,initial,capacity,float,load,factor,super,initial,capacity,load,factor,true
DefaultContextCache -> LruCache -> LruCache(int initialCapacity, float loadFactor);1496242568;Create a new {@code LruCache} with the supplied initial capacity_and load factor._@param initialCapacity the initial capacity_@param loadFactor the load factor;LruCache(int initialCapacity, float loadFactor) {_			super(initialCapacity, loadFactor, true)__		};create,a,new,code,lru,cache,with,the,supplied,initial,capacity,and,load,factor,param,initial,capacity,the,initial,capacity,param,load,factor,the,load,factor;lru,cache,int,initial,capacity,float,load,factor,super,initial,capacity,load,factor,true
DefaultContextCache -> LruCache -> LruCache(int initialCapacity, float loadFactor);1496955179;Create a new {@code LruCache} with the supplied initial capacity_and load factor._@param initialCapacity the initial capacity_@param loadFactor the load factor;LruCache(int initialCapacity, float loadFactor) {_			super(initialCapacity, loadFactor, true)__		};create,a,new,code,lru,cache,with,the,supplied,initial,capacity,and,load,factor,param,initial,capacity,the,initial,capacity,param,load,factor,the,load,factor;lru,cache,int,initial,capacity,float,load,factor,super,initial,capacity,load,factor,true
DefaultContextCache -> LruCache -> LruCache(int initialCapacity, float loadFactor);1502974979;Create a new {@code LruCache} with the supplied initial capacity_and load factor._@param initialCapacity the initial capacity_@param loadFactor the load factor;LruCache(int initialCapacity, float loadFactor) {_			super(initialCapacity, loadFactor, true)__		};create,a,new,code,lru,cache,with,the,supplied,initial,capacity,and,load,factor,param,initial,capacity,the,initial,capacity,param,load,factor,the,load,factor;lru,cache,int,initial,capacity,float,load,factor,super,initial,capacity,load,factor,true
DefaultContextCache -> LruCache -> LruCache(int initialCapacity, float loadFactor);1521822983;Create a new {@code LruCache} with the supplied initial capacity_and load factor._@param initialCapacity the initial capacity_@param loadFactor the load factor;LruCache(int initialCapacity, float loadFactor) {_			super(initialCapacity, loadFactor, true)__		};create,a,new,code,lru,cache,with,the,supplied,initial,capacity,and,load,factor,param,initial,capacity,the,initial,capacity,param,load,factor,the,load,factor;lru,cache,int,initial,capacity,float,load,factor,super,initial,capacity,load,factor,true
DefaultContextCache -> @Override 	public void clear();1429559310;{@inheritDoc};@Override_	public void clear() {_		synchronized (contextMap) {_			this.contextMap.clear()__			this.hierarchyMap.clear()__		}_	};inherit,doc;override,public,void,clear,synchronized,context,map,this,context,map,clear,this,hierarchy,map,clear
DefaultContextCache -> @Override 	public void clear();1459796164;{@inheritDoc};@Override_	public void clear() {_		synchronized (this.contextMap) {_			this.contextMap.clear()__			this.hierarchyMap.clear()__		}_	};inherit,doc;override,public,void,clear,synchronized,this,context,map,this,context,map,clear,this,hierarchy,map,clear
DefaultContextCache -> @Override 	public void clear();1465306936;{@inheritDoc};@Override_	public void clear() {_		synchronized (this.contextMap) {_			this.contextMap.clear()__			this.hierarchyMap.clear()__		}_	};inherit,doc;override,public,void,clear,synchronized,this,context,map,this,context,map,clear,this,hierarchy,map,clear
DefaultContextCache -> @Override 	public void clear();1467730834;{@inheritDoc};@Override_	public void clear() {_		synchronized (this.contextMap) {_			this.contextMap.clear()__			this.hierarchyMap.clear()__		}_	};inherit,doc;override,public,void,clear,synchronized,this,context,map,this,context,map,clear,this,hierarchy,map,clear
DefaultContextCache -> @Override 	public void clear();1496242568;{@inheritDoc};@Override_	public void clear() {_		synchronized (this.contextMap) {_			this.contextMap.clear()__			this.hierarchyMap.clear()__		}_	};inherit,doc;override,public,void,clear,synchronized,this,context,map,this,context,map,clear,this,hierarchy,map,clear
DefaultContextCache -> @Override 	public void clear();1496955179;{@inheritDoc};@Override_	public void clear() {_		synchronized (this.contextMap) {_			this.contextMap.clear()__			this.hierarchyMap.clear()__		}_	};inherit,doc;override,public,void,clear,synchronized,this,context,map,this,context,map,clear,this,hierarchy,map,clear
DefaultContextCache -> @Override 	public void clear();1502974979;{@inheritDoc};@Override_	public void clear() {_		synchronized (this.contextMap) {_			this.contextMap.clear()__			this.hierarchyMap.clear()__		}_	};inherit,doc;override,public,void,clear,synchronized,this,context,map,this,context,map,clear,this,hierarchy,map,clear
DefaultContextCache -> @Override 	public void clear();1521822983;{@inheritDoc};@Override_	public void clear() {_		synchronized (this.contextMap) {_			this.contextMap.clear()__			this.hierarchyMap.clear()__		}_	};inherit,doc;override,public,void,clear,synchronized,this,context,map,this,context,map,clear,this,hierarchy,map,clear
DefaultContextCache -> @Override 	public int getHitCount();1429559310;{@inheritDoc};@Override_	public int getHitCount() {_		return this.hitCount.get()__	};inherit,doc;override,public,int,get,hit,count,return,this,hit,count,get
DefaultContextCache -> @Override 	public int getHitCount();1459796164;{@inheritDoc};@Override_	public int getHitCount() {_		return this.hitCount.get()__	};inherit,doc;override,public,int,get,hit,count,return,this,hit,count,get
DefaultContextCache -> @Override 	public int getHitCount();1465306936;{@inheritDoc};@Override_	public int getHitCount() {_		return this.hitCount.get()__	};inherit,doc;override,public,int,get,hit,count,return,this,hit,count,get
DefaultContextCache -> @Override 	public int getHitCount();1467730834;{@inheritDoc};@Override_	public int getHitCount() {_		return this.hitCount.get()__	};inherit,doc;override,public,int,get,hit,count,return,this,hit,count,get
DefaultContextCache -> @Override 	public int getHitCount();1496242568;{@inheritDoc};@Override_	public int getHitCount() {_		return this.hitCount.get()__	};inherit,doc;override,public,int,get,hit,count,return,this,hit,count,get
DefaultContextCache -> @Override 	public int getHitCount();1496955179;{@inheritDoc};@Override_	public int getHitCount() {_		return this.hitCount.get()__	};inherit,doc;override,public,int,get,hit,count,return,this,hit,count,get
DefaultContextCache -> @Override 	public int getHitCount();1502974979;{@inheritDoc};@Override_	public int getHitCount() {_		return this.hitCount.get()__	};inherit,doc;override,public,int,get,hit,count,return,this,hit,count,get
DefaultContextCache -> @Override 	public int getHitCount();1521822983;{@inheritDoc};@Override_	public int getHitCount() {_		return this.hitCount.get()__	};inherit,doc;override,public,int,get,hit,count,return,this,hit,count,get
DefaultContextCache -> @Override 	public void clearStatistics();1429559310;{@inheritDoc};@Override_	public void clearStatistics() {_		synchronized (contextMap) {_			this.hitCount.set(0)__			this.missCount.set(0)__		}_	};inherit,doc;override,public,void,clear,statistics,synchronized,context,map,this,hit,count,set,0,this,miss,count,set,0
DefaultContextCache -> @Override 	public void clearStatistics();1459796164;{@inheritDoc};@Override_	public void clearStatistics() {_		synchronized (this.contextMap) {_			this.hitCount.set(0)__			this.missCount.set(0)__		}_	};inherit,doc;override,public,void,clear,statistics,synchronized,this,context,map,this,hit,count,set,0,this,miss,count,set,0
DefaultContextCache -> @Override 	public void clearStatistics();1465306936;{@inheritDoc};@Override_	public void clearStatistics() {_		synchronized (this.contextMap) {_			this.hitCount.set(0)__			this.missCount.set(0)__		}_	};inherit,doc;override,public,void,clear,statistics,synchronized,this,context,map,this,hit,count,set,0,this,miss,count,set,0
DefaultContextCache -> @Override 	public void clearStatistics();1467730834;{@inheritDoc};@Override_	public void clearStatistics() {_		synchronized (this.contextMap) {_			this.hitCount.set(0)__			this.missCount.set(0)__		}_	};inherit,doc;override,public,void,clear,statistics,synchronized,this,context,map,this,hit,count,set,0,this,miss,count,set,0
DefaultContextCache -> @Override 	public void clearStatistics();1496242568;{@inheritDoc};@Override_	public void clearStatistics() {_		synchronized (this.contextMap) {_			this.hitCount.set(0)__			this.missCount.set(0)__		}_	};inherit,doc;override,public,void,clear,statistics,synchronized,this,context,map,this,hit,count,set,0,this,miss,count,set,0
DefaultContextCache -> @Override 	public void clearStatistics();1496955179;{@inheritDoc};@Override_	public void clearStatistics() {_		synchronized (this.contextMap) {_			this.hitCount.set(0)__			this.missCount.set(0)__		}_	};inherit,doc;override,public,void,clear,statistics,synchronized,this,context,map,this,hit,count,set,0,this,miss,count,set,0
DefaultContextCache -> @Override 	public void clearStatistics();1502974979;{@inheritDoc};@Override_	public void clearStatistics() {_		synchronized (this.contextMap) {_			this.hitCount.set(0)__			this.missCount.set(0)__		}_	};inherit,doc;override,public,void,clear,statistics,synchronized,this,context,map,this,hit,count,set,0,this,miss,count,set,0
DefaultContextCache -> @Override 	public void clearStatistics();1521822983;{@inheritDoc};@Override_	public void clearStatistics() {_		synchronized (this.contextMap) {_			this.hitCount.set(0)__			this.missCount.set(0)__		}_	};inherit,doc;override,public,void,clear,statistics,synchronized,this,context,map,this,hit,count,set,0,this,miss,count,set,0
DefaultContextCache -> public DefaultContextCache(int maxSize);1459796164;Create a new {@code DefaultContextCache} using the supplied maximum_cache size._@param maxSize the maximum cache size_@throws IllegalArgumentException if the supplied {@code maxSize} value_is not positive_@since 4.3_@see #DefaultContextCache();public DefaultContextCache(int maxSize) {_		Assert.isTrue(maxSize > 0, "maxSize must be positive")__		this.maxSize = maxSize__	};create,a,new,code,default,context,cache,using,the,supplied,maximum,cache,size,param,max,size,the,maximum,cache,size,throws,illegal,argument,exception,if,the,supplied,code,max,size,value,is,not,positive,since,4,3,see,default,context,cache;public,default,context,cache,int,max,size,assert,is,true,max,size,0,max,size,must,be,positive,this,max,size,max,size
DefaultContextCache -> public DefaultContextCache(int maxSize);1465306936;Create a new {@code DefaultContextCache} using the supplied maximum_cache size._@param maxSize the maximum cache size_@throws IllegalArgumentException if the supplied {@code maxSize} value_is not positive_@since 4.3_@see #DefaultContextCache();public DefaultContextCache(int maxSize) {_		Assert.isTrue(maxSize > 0, "'maxSize' must be positive")__		this.maxSize = maxSize__	};create,a,new,code,default,context,cache,using,the,supplied,maximum,cache,size,param,max,size,the,maximum,cache,size,throws,illegal,argument,exception,if,the,supplied,code,max,size,value,is,not,positive,since,4,3,see,default,context,cache;public,default,context,cache,int,max,size,assert,is,true,max,size,0,max,size,must,be,positive,this,max,size,max,size
DefaultContextCache -> public DefaultContextCache(int maxSize);1467730834;Create a new {@code DefaultContextCache} using the supplied maximum_cache size._@param maxSize the maximum cache size_@throws IllegalArgumentException if the supplied {@code maxSize} value_is not positive_@since 4.3_@see #DefaultContextCache();public DefaultContextCache(int maxSize) {_		Assert.isTrue(maxSize > 0, "'maxSize' must be positive")__		this.maxSize = maxSize__	};create,a,new,code,default,context,cache,using,the,supplied,maximum,cache,size,param,max,size,the,maximum,cache,size,throws,illegal,argument,exception,if,the,supplied,code,max,size,value,is,not,positive,since,4,3,see,default,context,cache;public,default,context,cache,int,max,size,assert,is,true,max,size,0,max,size,must,be,positive,this,max,size,max,size
DefaultContextCache -> public DefaultContextCache(int maxSize);1496242568;Create a new {@code DefaultContextCache} using the supplied maximum_cache size._@param maxSize the maximum cache size_@throws IllegalArgumentException if the supplied {@code maxSize} value_is not positive_@since 4.3_@see #DefaultContextCache();public DefaultContextCache(int maxSize) {_		Assert.isTrue(maxSize > 0, "'maxSize' must be positive")__		this.maxSize = maxSize__	};create,a,new,code,default,context,cache,using,the,supplied,maximum,cache,size,param,max,size,the,maximum,cache,size,throws,illegal,argument,exception,if,the,supplied,code,max,size,value,is,not,positive,since,4,3,see,default,context,cache;public,default,context,cache,int,max,size,assert,is,true,max,size,0,max,size,must,be,positive,this,max,size,max,size
DefaultContextCache -> public DefaultContextCache(int maxSize);1496955179;Create a new {@code DefaultContextCache} using the supplied maximum_cache size._@param maxSize the maximum cache size_@throws IllegalArgumentException if the supplied {@code maxSize} value_is not positive_@since 4.3_@see #DefaultContextCache();public DefaultContextCache(int maxSize) {_		Assert.isTrue(maxSize > 0, "'maxSize' must be positive")__		this.maxSize = maxSize__	};create,a,new,code,default,context,cache,using,the,supplied,maximum,cache,size,param,max,size,the,maximum,cache,size,throws,illegal,argument,exception,if,the,supplied,code,max,size,value,is,not,positive,since,4,3,see,default,context,cache;public,default,context,cache,int,max,size,assert,is,true,max,size,0,max,size,must,be,positive,this,max,size,max,size
DefaultContextCache -> public DefaultContextCache(int maxSize);1502974979;Create a new {@code DefaultContextCache} using the supplied maximum_cache size._@param maxSize the maximum cache size_@throws IllegalArgumentException if the supplied {@code maxSize} value_is not positive_@since 4.3_@see #DefaultContextCache();public DefaultContextCache(int maxSize) {_		Assert.isTrue(maxSize > 0, "'maxSize' must be positive")__		this.maxSize = maxSize__	};create,a,new,code,default,context,cache,using,the,supplied,maximum,cache,size,param,max,size,the,maximum,cache,size,throws,illegal,argument,exception,if,the,supplied,code,max,size,value,is,not,positive,since,4,3,see,default,context,cache;public,default,context,cache,int,max,size,assert,is,true,max,size,0,max,size,must,be,positive,this,max,size,max,size
DefaultContextCache -> public DefaultContextCache(int maxSize);1521822983;Create a new {@code DefaultContextCache} using the supplied maximum_cache size._@param maxSize the maximum cache size_@throws IllegalArgumentException if the supplied {@code maxSize} value_is not positive_@since 4.3_@see #DefaultContextCache();public DefaultContextCache(int maxSize) {_		Assert.isTrue(maxSize > 0, "'maxSize' must be positive")__		this.maxSize = maxSize__	};create,a,new,code,default,context,cache,using,the,supplied,maximum,cache,size,param,max,size,the,maximum,cache,size,throws,illegal,argument,exception,if,the,supplied,code,max,size,value,is,not,positive,since,4,3,see,default,context,cache;public,default,context,cache,int,max,size,assert,is,true,max,size,0,max,size,must,be,positive,this,max,size,max,size
DefaultContextCache -> @Override 	@Nullable 	public ApplicationContext get(MergedContextConfiguration key);1502974979;{@inheritDoc};@Override_	@Nullable_	public ApplicationContext get(MergedContextConfiguration key) {_		Assert.notNull(key, "Key must not be null")__		ApplicationContext context = this.contextMap.get(key)__		if (context == null) {_			this.missCount.incrementAndGet()__		}_		else {_			this.hitCount.incrementAndGet()__		}_		return context__	};inherit,doc;override,nullable,public,application,context,get,merged,context,configuration,key,assert,not,null,key,key,must,not,be,null,application,context,context,this,context,map,get,key,if,context,null,this,miss,count,increment,and,get,else,this,hit,count,increment,and,get,return,context
DefaultContextCache -> @Override 	@Nullable 	public ApplicationContext get(MergedContextConfiguration key);1521822983;{@inheritDoc};@Override_	@Nullable_	public ApplicationContext get(MergedContextConfiguration key) {_		Assert.notNull(key, "Key must not be null")__		ApplicationContext context = this.contextMap.get(key)__		if (context == null) {_			this.missCount.incrementAndGet()__		}_		else {_			this.hitCount.incrementAndGet()__		}_		return context__	};inherit,doc;override,nullable,public,application,context,get,merged,context,configuration,key,assert,not,null,key,key,must,not,be,null,application,context,context,this,context,map,get,key,if,context,null,this,miss,count,increment,and,get,else,this,hit,count,increment,and,get,return,context
DefaultContextCache -> @Override 	public int getParentContextCount();1429559310;{@inheritDoc};@Override_	public int getParentContextCount() {_		return this.hierarchyMap.size()__	};inherit,doc;override,public,int,get,parent,context,count,return,this,hierarchy,map,size
DefaultContextCache -> @Override 	public int getParentContextCount();1459796164;{@inheritDoc};@Override_	public int getParentContextCount() {_		return this.hierarchyMap.size()__	};inherit,doc;override,public,int,get,parent,context,count,return,this,hierarchy,map,size
DefaultContextCache -> @Override 	public int getParentContextCount();1465306936;{@inheritDoc};@Override_	public int getParentContextCount() {_		return this.hierarchyMap.size()__	};inherit,doc;override,public,int,get,parent,context,count,return,this,hierarchy,map,size
DefaultContextCache -> @Override 	public int getParentContextCount();1467730834;{@inheritDoc};@Override_	public int getParentContextCount() {_		return this.hierarchyMap.size()__	};inherit,doc;override,public,int,get,parent,context,count,return,this,hierarchy,map,size
DefaultContextCache -> @Override 	public int getParentContextCount();1496242568;{@inheritDoc};@Override_	public int getParentContextCount() {_		return this.hierarchyMap.size()__	};inherit,doc;override,public,int,get,parent,context,count,return,this,hierarchy,map,size
DefaultContextCache -> @Override 	public int getParentContextCount();1496955179;{@inheritDoc};@Override_	public int getParentContextCount() {_		return this.hierarchyMap.size()__	};inherit,doc;override,public,int,get,parent,context,count,return,this,hierarchy,map,size
DefaultContextCache -> @Override 	public int getParentContextCount();1502974979;{@inheritDoc};@Override_	public int getParentContextCount() {_		return this.hierarchyMap.size()__	};inherit,doc;override,public,int,get,parent,context,count,return,this,hierarchy,map,size
DefaultContextCache -> @Override 	public int getParentContextCount();1521822983;{@inheritDoc};@Override_	public int getParentContextCount() {_		return this.hierarchyMap.size()__	};inherit,doc;override,public,int,get,parent,context,count,return,this,hierarchy,map,size
DefaultContextCache -> @Override 	public void remove(MergedContextConfiguration key, @Nullable HierarchyMode hierarchyMode);1496242568;{@inheritDoc};@Override_	public void remove(MergedContextConfiguration key, @Nullable HierarchyMode hierarchyMode) {_		Assert.notNull(key, "Key must not be null")___		_		_		MergedContextConfiguration startKey = key__		if (hierarchyMode == HierarchyMode.EXHAUSTIVE) {_			while (startKey.getParent() != null) {_				startKey = startKey.getParent()__			}_		}__		List<MergedContextConfiguration> removedContexts = new ArrayList<>()__		remove(removedContexts, startKey)___		_		_		for (MergedContextConfiguration currentKey : removedContexts) {_			for (Set<MergedContextConfiguration> children : this.hierarchyMap.values()) {_				children.remove(currentKey)__			}_		}__		_		for (MergedContextConfiguration currentKey : this.hierarchyMap.keySet()) {_			if (this.hierarchyMap.get(currentKey).isEmpty()) {_				this.hierarchyMap.remove(currentKey)__			}_		}_	};inherit,doc;override,public,void,remove,merged,context,configuration,key,nullable,hierarchy,mode,hierarchy,mode,assert,not,null,key,key,must,not,be,null,merged,context,configuration,start,key,key,if,hierarchy,mode,hierarchy,mode,exhaustive,while,start,key,get,parent,null,start,key,start,key,get,parent,list,merged,context,configuration,removed,contexts,new,array,list,remove,removed,contexts,start,key,for,merged,context,configuration,current,key,removed,contexts,for,set,merged,context,configuration,children,this,hierarchy,map,values,children,remove,current,key,for,merged,context,configuration,current,key,this,hierarchy,map,key,set,if,this,hierarchy,map,get,current,key,is,empty,this,hierarchy,map,remove,current,key
DefaultContextCache -> @Override 	public void remove(MergedContextConfiguration key, @Nullable HierarchyMode hierarchyMode);1496955179;{@inheritDoc};@Override_	public void remove(MergedContextConfiguration key, @Nullable HierarchyMode hierarchyMode) {_		Assert.notNull(key, "Key must not be null")___		_		_		MergedContextConfiguration startKey = key__		if (hierarchyMode == HierarchyMode.EXHAUSTIVE) {_			MergedContextConfiguration parent = startKey.getParent()__			while (parent != null) {_				startKey = parent__				parent = startKey.getParent()__			}_		}__		List<MergedContextConfiguration> removedContexts = new ArrayList<>()__		remove(removedContexts, startKey)___		_		_		for (MergedContextConfiguration currentKey : removedContexts) {_			for (Set<MergedContextConfiguration> children : this.hierarchyMap.values()) {_				children.remove(currentKey)__			}_		}__		_		for (MergedContextConfiguration currentKey : this.hierarchyMap.keySet()) {_			if (this.hierarchyMap.get(currentKey).isEmpty()) {_				this.hierarchyMap.remove(currentKey)__			}_		}_	};inherit,doc;override,public,void,remove,merged,context,configuration,key,nullable,hierarchy,mode,hierarchy,mode,assert,not,null,key,key,must,not,be,null,merged,context,configuration,start,key,key,if,hierarchy,mode,hierarchy,mode,exhaustive,merged,context,configuration,parent,start,key,get,parent,while,parent,null,start,key,parent,parent,start,key,get,parent,list,merged,context,configuration,removed,contexts,new,array,list,remove,removed,contexts,start,key,for,merged,context,configuration,current,key,removed,contexts,for,set,merged,context,configuration,children,this,hierarchy,map,values,children,remove,current,key,for,merged,context,configuration,current,key,this,hierarchy,map,key,set,if,this,hierarchy,map,get,current,key,is,empty,this,hierarchy,map,remove,current,key
DefaultContextCache -> @Override 	public void remove(MergedContextConfiguration key, @Nullable HierarchyMode hierarchyMode);1502974979;{@inheritDoc};@Override_	public void remove(MergedContextConfiguration key, @Nullable HierarchyMode hierarchyMode) {_		Assert.notNull(key, "Key must not be null")___		_		_		MergedContextConfiguration startKey = key__		if (hierarchyMode == HierarchyMode.EXHAUSTIVE) {_			MergedContextConfiguration parent = startKey.getParent()__			while (parent != null) {_				startKey = parent__				parent = startKey.getParent()__			}_		}__		List<MergedContextConfiguration> removedContexts = new ArrayList<>()__		remove(removedContexts, startKey)___		_		_		for (MergedContextConfiguration currentKey : removedContexts) {_			for (Set<MergedContextConfiguration> children : this.hierarchyMap.values()) {_				children.remove(currentKey)__			}_		}__		_		for (MergedContextConfiguration currentKey : this.hierarchyMap.keySet()) {_			if (this.hierarchyMap.get(currentKey).isEmpty()) {_				this.hierarchyMap.remove(currentKey)__			}_		}_	};inherit,doc;override,public,void,remove,merged,context,configuration,key,nullable,hierarchy,mode,hierarchy,mode,assert,not,null,key,key,must,not,be,null,merged,context,configuration,start,key,key,if,hierarchy,mode,hierarchy,mode,exhaustive,merged,context,configuration,parent,start,key,get,parent,while,parent,null,start,key,parent,parent,start,key,get,parent,list,merged,context,configuration,removed,contexts,new,array,list,remove,removed,contexts,start,key,for,merged,context,configuration,current,key,removed,contexts,for,set,merged,context,configuration,children,this,hierarchy,map,values,children,remove,current,key,for,merged,context,configuration,current,key,this,hierarchy,map,key,set,if,this,hierarchy,map,get,current,key,is,empty,this,hierarchy,map,remove,current,key
DefaultContextCache -> @Override 	public void remove(MergedContextConfiguration key, @Nullable HierarchyMode hierarchyMode);1521822983;{@inheritDoc};@Override_	public void remove(MergedContextConfiguration key, @Nullable HierarchyMode hierarchyMode) {_		Assert.notNull(key, "Key must not be null")___		_		_		MergedContextConfiguration startKey = key__		if (hierarchyMode == HierarchyMode.EXHAUSTIVE) {_			MergedContextConfiguration parent = startKey.getParent()__			while (parent != null) {_				startKey = parent__				parent = startKey.getParent()__			}_		}__		List<MergedContextConfiguration> removedContexts = new ArrayList<>()__		remove(removedContexts, startKey)___		_		_		for (MergedContextConfiguration currentKey : removedContexts) {_			for (Set<MergedContextConfiguration> children : this.hierarchyMap.values()) {_				children.remove(currentKey)__			}_		}__		_		for (MergedContextConfiguration currentKey : this.hierarchyMap.keySet()) {_			if (this.hierarchyMap.get(currentKey).isEmpty()) {_				this.hierarchyMap.remove(currentKey)__			}_		}_	};inherit,doc;override,public,void,remove,merged,context,configuration,key,nullable,hierarchy,mode,hierarchy,mode,assert,not,null,key,key,must,not,be,null,merged,context,configuration,start,key,key,if,hierarchy,mode,hierarchy,mode,exhaustive,merged,context,configuration,parent,start,key,get,parent,while,parent,null,start,key,parent,parent,start,key,get,parent,list,merged,context,configuration,removed,contexts,new,array,list,remove,removed,contexts,start,key,for,merged,context,configuration,current,key,removed,contexts,for,set,merged,context,configuration,children,this,hierarchy,map,values,children,remove,current,key,for,merged,context,configuration,current,key,this,hierarchy,map,key,set,if,this,hierarchy,map,get,current,key,is,empty,this,hierarchy,map,remove,current,key
DefaultContextCache -> @Override 	public void reset();1429559310;{@inheritDoc};@Override_	public void reset() {_		synchronized (contextMap) {_			clear()__			clearStatistics()__		}_	};inherit,doc;override,public,void,reset,synchronized,context,map,clear,clear,statistics
DefaultContextCache -> @Override 	public void reset();1459796164;{@inheritDoc};@Override_	public void reset() {_		synchronized (this.contextMap) {_			clear()__			clearStatistics()__		}_	};inherit,doc;override,public,void,reset,synchronized,this,context,map,clear,clear,statistics
DefaultContextCache -> @Override 	public void reset();1465306936;{@inheritDoc};@Override_	public void reset() {_		synchronized (this.contextMap) {_			clear()__			clearStatistics()__		}_	};inherit,doc;override,public,void,reset,synchronized,this,context,map,clear,clear,statistics
DefaultContextCache -> @Override 	public void reset();1467730834;{@inheritDoc};@Override_	public void reset() {_		synchronized (this.contextMap) {_			clear()__			clearStatistics()__		}_	};inherit,doc;override,public,void,reset,synchronized,this,context,map,clear,clear,statistics
DefaultContextCache -> @Override 	public void reset();1496242568;{@inheritDoc};@Override_	public void reset() {_		synchronized (this.contextMap) {_			clear()__			clearStatistics()__		}_	};inherit,doc;override,public,void,reset,synchronized,this,context,map,clear,clear,statistics
DefaultContextCache -> @Override 	public void reset();1496955179;{@inheritDoc};@Override_	public void reset() {_		synchronized (this.contextMap) {_			clear()__			clearStatistics()__		}_	};inherit,doc;override,public,void,reset,synchronized,this,context,map,clear,clear,statistics
DefaultContextCache -> @Override 	public void reset();1502974979;{@inheritDoc};@Override_	public void reset() {_		synchronized (this.contextMap) {_			clear()__			clearStatistics()__		}_	};inherit,doc;override,public,void,reset,synchronized,this,context,map,clear,clear,statistics
DefaultContextCache -> @Override 	public void reset();1521822983;{@inheritDoc};@Override_	public void reset() {_		synchronized (this.contextMap) {_			clear()__			clearStatistics()__		}_	};inherit,doc;override,public,void,reset,synchronized,this,context,map,clear,clear,statistics
DefaultContextCache -> @Override 	public int getMissCount();1429559310;{@inheritDoc};@Override_	public int getMissCount() {_		return this.missCount.get()__	};inherit,doc;override,public,int,get,miss,count,return,this,miss,count,get
DefaultContextCache -> @Override 	public int getMissCount();1459796164;{@inheritDoc};@Override_	public int getMissCount() {_		return this.missCount.get()__	};inherit,doc;override,public,int,get,miss,count,return,this,miss,count,get
DefaultContextCache -> @Override 	public int getMissCount();1465306936;{@inheritDoc};@Override_	public int getMissCount() {_		return this.missCount.get()__	};inherit,doc;override,public,int,get,miss,count,return,this,miss,count,get
DefaultContextCache -> @Override 	public int getMissCount();1467730834;{@inheritDoc};@Override_	public int getMissCount() {_		return this.missCount.get()__	};inherit,doc;override,public,int,get,miss,count,return,this,miss,count,get
DefaultContextCache -> @Override 	public int getMissCount();1496242568;{@inheritDoc};@Override_	public int getMissCount() {_		return this.missCount.get()__	};inherit,doc;override,public,int,get,miss,count,return,this,miss,count,get
DefaultContextCache -> @Override 	public int getMissCount();1496955179;{@inheritDoc};@Override_	public int getMissCount() {_		return this.missCount.get()__	};inherit,doc;override,public,int,get,miss,count,return,this,miss,count,get
DefaultContextCache -> @Override 	public int getMissCount();1502974979;{@inheritDoc};@Override_	public int getMissCount() {_		return this.missCount.get()__	};inherit,doc;override,public,int,get,miss,count,return,this,miss,count,get
DefaultContextCache -> @Override 	public int getMissCount();1521822983;{@inheritDoc};@Override_	public int getMissCount() {_		return this.missCount.get()__	};inherit,doc;override,public,int,get,miss,count,return,this,miss,count,get
DefaultContextCache -> @Override 	public String toString();1429559310;Generate a text string containing the implementation type of this_cache and its statistics._<p>The string returned by this method contains all information_required for compliance with the contract for {@link #logStatistics()}._@return a string representation of this cache, including statistics;@Override_	public String toString() {_		return new ToStringCreator(this)_				.append("size", size())_				.append("parentContextCount", getParentContextCount())_				.append("hitCount", getHitCount())_				.append("missCount", getMissCount())_				.toString()__	};generate,a,text,string,containing,the,implementation,type,of,this,cache,and,its,statistics,p,the,string,returned,by,this,method,contains,all,information,required,for,compliance,with,the,contract,for,link,log,statistics,return,a,string,representation,of,this,cache,including,statistics;override,public,string,to,string,return,new,to,string,creator,this,append,size,size,append,parent,context,count,get,parent,context,count,append,hit,count,get,hit,count,append,miss,count,get,miss,count,to,string
DefaultContextCache -> @Override 	public String toString();1459796164;Generate a text string containing the implementation type of this_cache and its statistics._<p>The string returned by this method contains all information_required for compliance with the contract for {@link #logStatistics()}._@return a string representation of this cache, including statistics;@Override_	public String toString() {_		return new ToStringCreator(this)_				.append("size", size())_				.append("maxSize", getMaxSize())_				.append("parentContextCount", getParentContextCount())_				.append("hitCount", getHitCount())_				.append("missCount", getMissCount())_				.toString()__	};generate,a,text,string,containing,the,implementation,type,of,this,cache,and,its,statistics,p,the,string,returned,by,this,method,contains,all,information,required,for,compliance,with,the,contract,for,link,log,statistics,return,a,string,representation,of,this,cache,including,statistics;override,public,string,to,string,return,new,to,string,creator,this,append,size,size,append,max,size,get,max,size,append,parent,context,count,get,parent,context,count,append,hit,count,get,hit,count,append,miss,count,get,miss,count,to,string
DefaultContextCache -> @Override 	public String toString();1465306936;Generate a text string containing the implementation type of this_cache and its statistics._<p>The string returned by this method contains all information_required for compliance with the contract for {@link #logStatistics()}._@return a string representation of this cache, including statistics;@Override_	public String toString() {_		return new ToStringCreator(this)_				.append("size", size())_				.append("maxSize", getMaxSize())_				.append("parentContextCount", getParentContextCount())_				.append("hitCount", getHitCount())_				.append("missCount", getMissCount())_				.toString()__	};generate,a,text,string,containing,the,implementation,type,of,this,cache,and,its,statistics,p,the,string,returned,by,this,method,contains,all,information,required,for,compliance,with,the,contract,for,link,log,statistics,return,a,string,representation,of,this,cache,including,statistics;override,public,string,to,string,return,new,to,string,creator,this,append,size,size,append,max,size,get,max,size,append,parent,context,count,get,parent,context,count,append,hit,count,get,hit,count,append,miss,count,get,miss,count,to,string
DefaultContextCache -> @Override 	public String toString();1467730834;Generate a text string containing the implementation type of this_cache and its statistics._<p>The string returned by this method contains all information_required for compliance with the contract for {@link #logStatistics()}._@return a string representation of this cache, including statistics;@Override_	public String toString() {_		return new ToStringCreator(this)_				.append("size", size())_				.append("maxSize", getMaxSize())_				.append("parentContextCount", getParentContextCount())_				.append("hitCount", getHitCount())_				.append("missCount", getMissCount())_				.toString()__	};generate,a,text,string,containing,the,implementation,type,of,this,cache,and,its,statistics,p,the,string,returned,by,this,method,contains,all,information,required,for,compliance,with,the,contract,for,link,log,statistics,return,a,string,representation,of,this,cache,including,statistics;override,public,string,to,string,return,new,to,string,creator,this,append,size,size,append,max,size,get,max,size,append,parent,context,count,get,parent,context,count,append,hit,count,get,hit,count,append,miss,count,get,miss,count,to,string
DefaultContextCache -> @Override 	public String toString();1496242568;Generate a text string containing the implementation type of this_cache and its statistics._<p>The string returned by this method contains all information_required for compliance with the contract for {@link #logStatistics()}._@return a string representation of this cache, including statistics;@Override_	public String toString() {_		return new ToStringCreator(this)_				.append("size", size())_				.append("maxSize", getMaxSize())_				.append("parentContextCount", getParentContextCount())_				.append("hitCount", getHitCount())_				.append("missCount", getMissCount())_				.toString()__	};generate,a,text,string,containing,the,implementation,type,of,this,cache,and,its,statistics,p,the,string,returned,by,this,method,contains,all,information,required,for,compliance,with,the,contract,for,link,log,statistics,return,a,string,representation,of,this,cache,including,statistics;override,public,string,to,string,return,new,to,string,creator,this,append,size,size,append,max,size,get,max,size,append,parent,context,count,get,parent,context,count,append,hit,count,get,hit,count,append,miss,count,get,miss,count,to,string
DefaultContextCache -> @Override 	public String toString();1496955179;Generate a text string containing the implementation type of this_cache and its statistics._<p>The string returned by this method contains all information_required for compliance with the contract for {@link #logStatistics()}._@return a string representation of this cache, including statistics;@Override_	public String toString() {_		return new ToStringCreator(this)_				.append("size", size())_				.append("maxSize", getMaxSize())_				.append("parentContextCount", getParentContextCount())_				.append("hitCount", getHitCount())_				.append("missCount", getMissCount())_				.toString()__	};generate,a,text,string,containing,the,implementation,type,of,this,cache,and,its,statistics,p,the,string,returned,by,this,method,contains,all,information,required,for,compliance,with,the,contract,for,link,log,statistics,return,a,string,representation,of,this,cache,including,statistics;override,public,string,to,string,return,new,to,string,creator,this,append,size,size,append,max,size,get,max,size,append,parent,context,count,get,parent,context,count,append,hit,count,get,hit,count,append,miss,count,get,miss,count,to,string
DefaultContextCache -> @Override 	public String toString();1502974979;Generate a text string containing the implementation type of this_cache and its statistics._<p>The string returned by this method contains all information_required for compliance with the contract for {@link #logStatistics()}._@return a string representation of this cache, including statistics;@Override_	public String toString() {_		return new ToStringCreator(this)_				.append("size", size())_				.append("maxSize", getMaxSize())_				.append("parentContextCount", getParentContextCount())_				.append("hitCount", getHitCount())_				.append("missCount", getMissCount())_				.toString()__	};generate,a,text,string,containing,the,implementation,type,of,this,cache,and,its,statistics,p,the,string,returned,by,this,method,contains,all,information,required,for,compliance,with,the,contract,for,link,log,statistics,return,a,string,representation,of,this,cache,including,statistics;override,public,string,to,string,return,new,to,string,creator,this,append,size,size,append,max,size,get,max,size,append,parent,context,count,get,parent,context,count,append,hit,count,get,hit,count,append,miss,count,get,miss,count,to,string
DefaultContextCache -> @Override 	public String toString();1521822983;Generate a text string containing the implementation type of this_cache and its statistics._<p>The string returned by this method contains all information_required for compliance with the contract for {@link #logStatistics()}._@return a string representation of this cache, including statistics;@Override_	public String toString() {_		return new ToStringCreator(this)_				.append("size", size())_				.append("maxSize", getMaxSize())_				.append("parentContextCount", getParentContextCount())_				.append("hitCount", getHitCount())_				.append("missCount", getMissCount())_				.toString()__	};generate,a,text,string,containing,the,implementation,type,of,this,cache,and,its,statistics,p,the,string,returned,by,this,method,contains,all,information,required,for,compliance,with,the,contract,for,link,log,statistics,return,a,string,representation,of,this,cache,including,statistics;override,public,string,to,string,return,new,to,string,creator,this,append,size,size,append,max,size,get,max,size,append,parent,context,count,get,parent,context,count,append,hit,count,get,hit,count,append,miss,count,get,miss,count,to,string
DefaultContextCache -> @Override 	public void logStatistics();1429559310;{@inheritDoc};@Override_	public void logStatistics() {_		if (statsLogger.isDebugEnabled()) {_			statsLogger.debug("Spring test ApplicationContext cache statistics: " + this)__		}_	};inherit,doc;override,public,void,log,statistics,if,stats,logger,is,debug,enabled,stats,logger,debug,spring,test,application,context,cache,statistics,this
DefaultContextCache -> @Override 	public void logStatistics();1459796164;{@inheritDoc};@Override_	public void logStatistics() {_		if (statsLogger.isDebugEnabled()) {_			statsLogger.debug("Spring test ApplicationContext cache statistics: " + this)__		}_	};inherit,doc;override,public,void,log,statistics,if,stats,logger,is,debug,enabled,stats,logger,debug,spring,test,application,context,cache,statistics,this
DefaultContextCache -> @Override 	public void logStatistics();1465306936;{@inheritDoc};@Override_	public void logStatistics() {_		if (statsLogger.isDebugEnabled()) {_			statsLogger.debug("Spring test ApplicationContext cache statistics: " + this)__		}_	};inherit,doc;override,public,void,log,statistics,if,stats,logger,is,debug,enabled,stats,logger,debug,spring,test,application,context,cache,statistics,this
DefaultContextCache -> @Override 	public void logStatistics();1467730834;{@inheritDoc};@Override_	public void logStatistics() {_		if (statsLogger.isDebugEnabled()) {_			statsLogger.debug("Spring test ApplicationContext cache statistics: " + this)__		}_	};inherit,doc;override,public,void,log,statistics,if,stats,logger,is,debug,enabled,stats,logger,debug,spring,test,application,context,cache,statistics,this
DefaultContextCache -> @Override 	public void logStatistics();1496242568;{@inheritDoc};@Override_	public void logStatistics() {_		if (statsLogger.isDebugEnabled()) {_			statsLogger.debug("Spring test ApplicationContext cache statistics: " + this)__		}_	};inherit,doc;override,public,void,log,statistics,if,stats,logger,is,debug,enabled,stats,logger,debug,spring,test,application,context,cache,statistics,this
DefaultContextCache -> @Override 	public void logStatistics();1496955179;{@inheritDoc};@Override_	public void logStatistics() {_		if (statsLogger.isDebugEnabled()) {_			statsLogger.debug("Spring test ApplicationContext cache statistics: " + this)__		}_	};inherit,doc;override,public,void,log,statistics,if,stats,logger,is,debug,enabled,stats,logger,debug,spring,test,application,context,cache,statistics,this
DefaultContextCache -> @Override 	public void logStatistics();1502974979;{@inheritDoc};@Override_	public void logStatistics() {_		if (statsLogger.isDebugEnabled()) {_			statsLogger.debug("Spring test ApplicationContext cache statistics: " + this)__		}_	};inherit,doc;override,public,void,log,statistics,if,stats,logger,is,debug,enabled,stats,logger,debug,spring,test,application,context,cache,statistics,this
DefaultContextCache -> @Override 	public void logStatistics();1521822983;{@inheritDoc};@Override_	public void logStatistics() {_		if (statsLogger.isDebugEnabled()) {_			statsLogger.debug("Spring test ApplicationContext cache statistics: " + this)__		}_	};inherit,doc;override,public,void,log,statistics,if,stats,logger,is,debug,enabled,stats,logger,debug,spring,test,application,context,cache,statistics,this
DefaultContextCache -> @Override 	public ApplicationContext get(MergedContextConfiguration key);1429559310;{@inheritDoc};@Override_	public ApplicationContext get(MergedContextConfiguration key) {_		Assert.notNull(key, "Key must not be null")__		ApplicationContext context = this.contextMap.get(key)__		if (context == null) {_			this.missCount.incrementAndGet()__		}_		else {_			this.hitCount.incrementAndGet()__		}_		return context__	};inherit,doc;override,public,application,context,get,merged,context,configuration,key,assert,not,null,key,key,must,not,be,null,application,context,context,this,context,map,get,key,if,context,null,this,miss,count,increment,and,get,else,this,hit,count,increment,and,get,return,context
DefaultContextCache -> @Override 	public ApplicationContext get(MergedContextConfiguration key);1459796164;{@inheritDoc};@Override_	public ApplicationContext get(MergedContextConfiguration key) {_		Assert.notNull(key, "Key must not be null")__		ApplicationContext context = this.contextMap.get(key)__		if (context == null) {_			this.missCount.incrementAndGet()__		}_		else {_			this.hitCount.incrementAndGet()__		}_		return context__	};inherit,doc;override,public,application,context,get,merged,context,configuration,key,assert,not,null,key,key,must,not,be,null,application,context,context,this,context,map,get,key,if,context,null,this,miss,count,increment,and,get,else,this,hit,count,increment,and,get,return,context
DefaultContextCache -> @Override 	public ApplicationContext get(MergedContextConfiguration key);1465306936;{@inheritDoc};@Override_	public ApplicationContext get(MergedContextConfiguration key) {_		Assert.notNull(key, "Key must not be null")__		ApplicationContext context = this.contextMap.get(key)__		if (context == null) {_			this.missCount.incrementAndGet()__		}_		else {_			this.hitCount.incrementAndGet()__		}_		return context__	};inherit,doc;override,public,application,context,get,merged,context,configuration,key,assert,not,null,key,key,must,not,be,null,application,context,context,this,context,map,get,key,if,context,null,this,miss,count,increment,and,get,else,this,hit,count,increment,and,get,return,context
DefaultContextCache -> @Override 	public ApplicationContext get(MergedContextConfiguration key);1467730834;{@inheritDoc};@Override_	public ApplicationContext get(MergedContextConfiguration key) {_		Assert.notNull(key, "Key must not be null")__		ApplicationContext context = this.contextMap.get(key)__		if (context == null) {_			this.missCount.incrementAndGet()__		}_		else {_			this.hitCount.incrementAndGet()__		}_		return context__	};inherit,doc;override,public,application,context,get,merged,context,configuration,key,assert,not,null,key,key,must,not,be,null,application,context,context,this,context,map,get,key,if,context,null,this,miss,count,increment,and,get,else,this,hit,count,increment,and,get,return,context
DefaultContextCache -> @Override 	public ApplicationContext get(MergedContextConfiguration key);1496242568;{@inheritDoc};@Override_	public ApplicationContext get(MergedContextConfiguration key) {_		Assert.notNull(key, "Key must not be null")__		ApplicationContext context = this.contextMap.get(key)__		if (context == null) {_			this.missCount.incrementAndGet()__		}_		else {_			this.hitCount.incrementAndGet()__		}_		return context__	};inherit,doc;override,public,application,context,get,merged,context,configuration,key,assert,not,null,key,key,must,not,be,null,application,context,context,this,context,map,get,key,if,context,null,this,miss,count,increment,and,get,else,this,hit,count,increment,and,get,return,context
DefaultContextCache -> @Override 	public ApplicationContext get(MergedContextConfiguration key);1496955179;{@inheritDoc};@Override_	public ApplicationContext get(MergedContextConfiguration key) {_		Assert.notNull(key, "Key must not be null")__		ApplicationContext context = this.contextMap.get(key)__		if (context == null) {_			this.missCount.incrementAndGet()__		}_		else {_			this.hitCount.incrementAndGet()__		}_		return context__	};inherit,doc;override,public,application,context,get,merged,context,configuration,key,assert,not,null,key,key,must,not,be,null,application,context,context,this,context,map,get,key,if,context,null,this,miss,count,increment,and,get,else,this,hit,count,increment,and,get,return,context
DefaultContextCache -> @Override 	public int size();1429559310;{@inheritDoc};@Override_	public int size() {_		return this.contextMap.size()__	};inherit,doc;override,public,int,size,return,this,context,map,size
DefaultContextCache -> @Override 	public int size();1459796164;{@inheritDoc};@Override_	public int size() {_		return this.contextMap.size()__	};inherit,doc;override,public,int,size,return,this,context,map,size
DefaultContextCache -> @Override 	public int size();1465306936;{@inheritDoc};@Override_	public int size() {_		return this.contextMap.size()__	};inherit,doc;override,public,int,size,return,this,context,map,size
DefaultContextCache -> @Override 	public int size();1467730834;{@inheritDoc};@Override_	public int size() {_		return this.contextMap.size()__	};inherit,doc;override,public,int,size,return,this,context,map,size
DefaultContextCache -> @Override 	public int size();1496242568;{@inheritDoc};@Override_	public int size() {_		return this.contextMap.size()__	};inherit,doc;override,public,int,size,return,this,context,map,size
DefaultContextCache -> @Override 	public int size();1496955179;{@inheritDoc};@Override_	public int size() {_		return this.contextMap.size()__	};inherit,doc;override,public,int,size,return,this,context,map,size
DefaultContextCache -> @Override 	public int size();1502974979;{@inheritDoc};@Override_	public int size() {_		return this.contextMap.size()__	};inherit,doc;override,public,int,size,return,this,context,map,size
DefaultContextCache -> @Override 	public int size();1521822983;{@inheritDoc};@Override_	public int size() {_		return this.contextMap.size()__	};inherit,doc;override,public,int,size,return,this,context,map,size
DefaultContextCache -> @Override 	public boolean contains(MergedContextConfiguration key);1429559310;{@inheritDoc};@Override_	public boolean contains(MergedContextConfiguration key) {_		Assert.notNull(key, "Key must not be null")__		return this.contextMap.containsKey(key)__	};inherit,doc;override,public,boolean,contains,merged,context,configuration,key,assert,not,null,key,key,must,not,be,null,return,this,context,map,contains,key,key
DefaultContextCache -> @Override 	public boolean contains(MergedContextConfiguration key);1459796164;{@inheritDoc};@Override_	public boolean contains(MergedContextConfiguration key) {_		Assert.notNull(key, "Key must not be null")__		return this.contextMap.containsKey(key)__	};inherit,doc;override,public,boolean,contains,merged,context,configuration,key,assert,not,null,key,key,must,not,be,null,return,this,context,map,contains,key,key
DefaultContextCache -> @Override 	public boolean contains(MergedContextConfiguration key);1465306936;{@inheritDoc};@Override_	public boolean contains(MergedContextConfiguration key) {_		Assert.notNull(key, "Key must not be null")__		return this.contextMap.containsKey(key)__	};inherit,doc;override,public,boolean,contains,merged,context,configuration,key,assert,not,null,key,key,must,not,be,null,return,this,context,map,contains,key,key
DefaultContextCache -> @Override 	public boolean contains(MergedContextConfiguration key);1467730834;{@inheritDoc};@Override_	public boolean contains(MergedContextConfiguration key) {_		Assert.notNull(key, "Key must not be null")__		return this.contextMap.containsKey(key)__	};inherit,doc;override,public,boolean,contains,merged,context,configuration,key,assert,not,null,key,key,must,not,be,null,return,this,context,map,contains,key,key
DefaultContextCache -> @Override 	public boolean contains(MergedContextConfiguration key);1496242568;{@inheritDoc};@Override_	public boolean contains(MergedContextConfiguration key) {_		Assert.notNull(key, "Key must not be null")__		return this.contextMap.containsKey(key)__	};inherit,doc;override,public,boolean,contains,merged,context,configuration,key,assert,not,null,key,key,must,not,be,null,return,this,context,map,contains,key,key
DefaultContextCache -> @Override 	public boolean contains(MergedContextConfiguration key);1496955179;{@inheritDoc};@Override_	public boolean contains(MergedContextConfiguration key) {_		Assert.notNull(key, "Key must not be null")__		return this.contextMap.containsKey(key)__	};inherit,doc;override,public,boolean,contains,merged,context,configuration,key,assert,not,null,key,key,must,not,be,null,return,this,context,map,contains,key,key
DefaultContextCache -> @Override 	public boolean contains(MergedContextConfiguration key);1502974979;{@inheritDoc};@Override_	public boolean contains(MergedContextConfiguration key) {_		Assert.notNull(key, "Key must not be null")__		return this.contextMap.containsKey(key)__	};inherit,doc;override,public,boolean,contains,merged,context,configuration,key,assert,not,null,key,key,must,not,be,null,return,this,context,map,contains,key,key
DefaultContextCache -> @Override 	public boolean contains(MergedContextConfiguration key);1521822983;{@inheritDoc};@Override_	public boolean contains(MergedContextConfiguration key) {_		Assert.notNull(key, "Key must not be null")__		return this.contextMap.containsKey(key)__	};inherit,doc;override,public,boolean,contains,merged,context,configuration,key,assert,not,null,key,key,must,not,be,null,return,this,context,map,contains,key,key
DefaultContextCache -> @Override 	public void remove(MergedContextConfiguration key, HierarchyMode hierarchyMode);1429559310;{@inheritDoc};@Override_	public void remove(MergedContextConfiguration key, HierarchyMode hierarchyMode) {_		Assert.notNull(key, "Key must not be null")___		_		_		MergedContextConfiguration startKey = key__		if (hierarchyMode == HierarchyMode.EXHAUSTIVE) {_			while (startKey.getParent() != null) {_				startKey = startKey.getParent()__			}_		}__		List<MergedContextConfiguration> removedContexts = new ArrayList<MergedContextConfiguration>()__		remove(removedContexts, startKey)___		_		_		for (MergedContextConfiguration currentKey : removedContexts) {_			for (Set<MergedContextConfiguration> children : this.hierarchyMap.values()) {_				children.remove(currentKey)__			}_		}__		_		for (MergedContextConfiguration currentKey : this.hierarchyMap.keySet()) {_			if (this.hierarchyMap.get(currentKey).isEmpty()) {_				this.hierarchyMap.remove(currentKey)__			}_		}_	};inherit,doc;override,public,void,remove,merged,context,configuration,key,hierarchy,mode,hierarchy,mode,assert,not,null,key,key,must,not,be,null,merged,context,configuration,start,key,key,if,hierarchy,mode,hierarchy,mode,exhaustive,while,start,key,get,parent,null,start,key,start,key,get,parent,list,merged,context,configuration,removed,contexts,new,array,list,merged,context,configuration,remove,removed,contexts,start,key,for,merged,context,configuration,current,key,removed,contexts,for,set,merged,context,configuration,children,this,hierarchy,map,values,children,remove,current,key,for,merged,context,configuration,current,key,this,hierarchy,map,key,set,if,this,hierarchy,map,get,current,key,is,empty,this,hierarchy,map,remove,current,key
DefaultContextCache -> @Override 	public void remove(MergedContextConfiguration key, HierarchyMode hierarchyMode);1459796164;{@inheritDoc};@Override_	public void remove(MergedContextConfiguration key, HierarchyMode hierarchyMode) {_		Assert.notNull(key, "Key must not be null")___		_		_		MergedContextConfiguration startKey = key__		if (hierarchyMode == HierarchyMode.EXHAUSTIVE) {_			while (startKey.getParent() != null) {_				startKey = startKey.getParent()__			}_		}__		List<MergedContextConfiguration> removedContexts = new ArrayList<MergedContextConfiguration>()__		remove(removedContexts, startKey)___		_		_		for (MergedContextConfiguration currentKey : removedContexts) {_			for (Set<MergedContextConfiguration> children : this.hierarchyMap.values()) {_				children.remove(currentKey)__			}_		}__		_		for (MergedContextConfiguration currentKey : this.hierarchyMap.keySet()) {_			if (this.hierarchyMap.get(currentKey).isEmpty()) {_				this.hierarchyMap.remove(currentKey)__			}_		}_	};inherit,doc;override,public,void,remove,merged,context,configuration,key,hierarchy,mode,hierarchy,mode,assert,not,null,key,key,must,not,be,null,merged,context,configuration,start,key,key,if,hierarchy,mode,hierarchy,mode,exhaustive,while,start,key,get,parent,null,start,key,start,key,get,parent,list,merged,context,configuration,removed,contexts,new,array,list,merged,context,configuration,remove,removed,contexts,start,key,for,merged,context,configuration,current,key,removed,contexts,for,set,merged,context,configuration,children,this,hierarchy,map,values,children,remove,current,key,for,merged,context,configuration,current,key,this,hierarchy,map,key,set,if,this,hierarchy,map,get,current,key,is,empty,this,hierarchy,map,remove,current,key
DefaultContextCache -> @Override 	public void remove(MergedContextConfiguration key, HierarchyMode hierarchyMode);1465306936;{@inheritDoc};@Override_	public void remove(MergedContextConfiguration key, HierarchyMode hierarchyMode) {_		Assert.notNull(key, "Key must not be null")___		_		_		MergedContextConfiguration startKey = key__		if (hierarchyMode == HierarchyMode.EXHAUSTIVE) {_			while (startKey.getParent() != null) {_				startKey = startKey.getParent()__			}_		}__		List<MergedContextConfiguration> removedContexts = new ArrayList<MergedContextConfiguration>()__		remove(removedContexts, startKey)___		_		_		for (MergedContextConfiguration currentKey : removedContexts) {_			for (Set<MergedContextConfiguration> children : this.hierarchyMap.values()) {_				children.remove(currentKey)__			}_		}__		_		for (MergedContextConfiguration currentKey : this.hierarchyMap.keySet()) {_			if (this.hierarchyMap.get(currentKey).isEmpty()) {_				this.hierarchyMap.remove(currentKey)__			}_		}_	};inherit,doc;override,public,void,remove,merged,context,configuration,key,hierarchy,mode,hierarchy,mode,assert,not,null,key,key,must,not,be,null,merged,context,configuration,start,key,key,if,hierarchy,mode,hierarchy,mode,exhaustive,while,start,key,get,parent,null,start,key,start,key,get,parent,list,merged,context,configuration,removed,contexts,new,array,list,merged,context,configuration,remove,removed,contexts,start,key,for,merged,context,configuration,current,key,removed,contexts,for,set,merged,context,configuration,children,this,hierarchy,map,values,children,remove,current,key,for,merged,context,configuration,current,key,this,hierarchy,map,key,set,if,this,hierarchy,map,get,current,key,is,empty,this,hierarchy,map,remove,current,key
DefaultContextCache -> @Override 	public void remove(MergedContextConfiguration key, HierarchyMode hierarchyMode);1467730834;{@inheritDoc};@Override_	public void remove(MergedContextConfiguration key, HierarchyMode hierarchyMode) {_		Assert.notNull(key, "Key must not be null")___		_		_		MergedContextConfiguration startKey = key__		if (hierarchyMode == HierarchyMode.EXHAUSTIVE) {_			while (startKey.getParent() != null) {_				startKey = startKey.getParent()__			}_		}__		List<MergedContextConfiguration> removedContexts = new ArrayList<>()__		remove(removedContexts, startKey)___		_		_		for (MergedContextConfiguration currentKey : removedContexts) {_			for (Set<MergedContextConfiguration> children : this.hierarchyMap.values()) {_				children.remove(currentKey)__			}_		}__		_		for (MergedContextConfiguration currentKey : this.hierarchyMap.keySet()) {_			if (this.hierarchyMap.get(currentKey).isEmpty()) {_				this.hierarchyMap.remove(currentKey)__			}_		}_	};inherit,doc;override,public,void,remove,merged,context,configuration,key,hierarchy,mode,hierarchy,mode,assert,not,null,key,key,must,not,be,null,merged,context,configuration,start,key,key,if,hierarchy,mode,hierarchy,mode,exhaustive,while,start,key,get,parent,null,start,key,start,key,get,parent,list,merged,context,configuration,removed,contexts,new,array,list,remove,removed,contexts,start,key,for,merged,context,configuration,current,key,removed,contexts,for,set,merged,context,configuration,children,this,hierarchy,map,values,children,remove,current,key,for,merged,context,configuration,current,key,this,hierarchy,map,key,set,if,this,hierarchy,map,get,current,key,is,empty,this,hierarchy,map,remove,current,key
DefaultContextCache -> public DefaultContextCache();1459796164;Create a new {@code DefaultContextCache} using the maximum cache size_obtained via {@link ContextCacheUtils#retrieveMaxCacheSize()}._@since 4.3_@see #DefaultContextCache(int)_@see ContextCacheUtils#retrieveMaxCacheSize();public DefaultContextCache() {_		this(ContextCacheUtils.retrieveMaxCacheSize())__	};create,a,new,code,default,context,cache,using,the,maximum,cache,size,obtained,via,link,context,cache,utils,retrieve,max,cache,size,since,4,3,see,default,context,cache,int,see,context,cache,utils,retrieve,max,cache,size;public,default,context,cache,this,context,cache,utils,retrieve,max,cache,size
DefaultContextCache -> public DefaultContextCache();1465306936;Create a new {@code DefaultContextCache} using the maximum cache size_obtained via {@link ContextCacheUtils#retrieveMaxCacheSize()}._@since 4.3_@see #DefaultContextCache(int)_@see ContextCacheUtils#retrieveMaxCacheSize();public DefaultContextCache() {_		this(ContextCacheUtils.retrieveMaxCacheSize())__	};create,a,new,code,default,context,cache,using,the,maximum,cache,size,obtained,via,link,context,cache,utils,retrieve,max,cache,size,since,4,3,see,default,context,cache,int,see,context,cache,utils,retrieve,max,cache,size;public,default,context,cache,this,context,cache,utils,retrieve,max,cache,size
DefaultContextCache -> public DefaultContextCache();1467730834;Create a new {@code DefaultContextCache} using the maximum cache size_obtained via {@link ContextCacheUtils#retrieveMaxCacheSize()}._@since 4.3_@see #DefaultContextCache(int)_@see ContextCacheUtils#retrieveMaxCacheSize();public DefaultContextCache() {_		this(ContextCacheUtils.retrieveMaxCacheSize())__	};create,a,new,code,default,context,cache,using,the,maximum,cache,size,obtained,via,link,context,cache,utils,retrieve,max,cache,size,since,4,3,see,default,context,cache,int,see,context,cache,utils,retrieve,max,cache,size;public,default,context,cache,this,context,cache,utils,retrieve,max,cache,size
DefaultContextCache -> public DefaultContextCache();1496242568;Create a new {@code DefaultContextCache} using the maximum cache size_obtained via {@link ContextCacheUtils#retrieveMaxCacheSize()}._@since 4.3_@see #DefaultContextCache(int)_@see ContextCacheUtils#retrieveMaxCacheSize();public DefaultContextCache() {_		this(ContextCacheUtils.retrieveMaxCacheSize())__	};create,a,new,code,default,context,cache,using,the,maximum,cache,size,obtained,via,link,context,cache,utils,retrieve,max,cache,size,since,4,3,see,default,context,cache,int,see,context,cache,utils,retrieve,max,cache,size;public,default,context,cache,this,context,cache,utils,retrieve,max,cache,size
DefaultContextCache -> public DefaultContextCache();1496955179;Create a new {@code DefaultContextCache} using the maximum cache size_obtained via {@link ContextCacheUtils#retrieveMaxCacheSize()}._@since 4.3_@see #DefaultContextCache(int)_@see ContextCacheUtils#retrieveMaxCacheSize();public DefaultContextCache() {_		this(ContextCacheUtils.retrieveMaxCacheSize())__	};create,a,new,code,default,context,cache,using,the,maximum,cache,size,obtained,via,link,context,cache,utils,retrieve,max,cache,size,since,4,3,see,default,context,cache,int,see,context,cache,utils,retrieve,max,cache,size;public,default,context,cache,this,context,cache,utils,retrieve,max,cache,size
DefaultContextCache -> public DefaultContextCache();1502974979;Create a new {@code DefaultContextCache} using the maximum cache size_obtained via {@link ContextCacheUtils#retrieveMaxCacheSize()}._@since 4.3_@see #DefaultContextCache(int)_@see ContextCacheUtils#retrieveMaxCacheSize();public DefaultContextCache() {_		this(ContextCacheUtils.retrieveMaxCacheSize())__	};create,a,new,code,default,context,cache,using,the,maximum,cache,size,obtained,via,link,context,cache,utils,retrieve,max,cache,size,since,4,3,see,default,context,cache,int,see,context,cache,utils,retrieve,max,cache,size;public,default,context,cache,this,context,cache,utils,retrieve,max,cache,size
DefaultContextCache -> public DefaultContextCache();1521822983;Create a new {@code DefaultContextCache} using the maximum cache size_obtained via {@link ContextCacheUtils#retrieveMaxCacheSize()}._@since 4.3_@see #DefaultContextCache(int)_@see ContextCacheUtils#retrieveMaxCacheSize();public DefaultContextCache() {_		this(ContextCacheUtils.retrieveMaxCacheSize())__	};create,a,new,code,default,context,cache,using,the,maximum,cache,size,obtained,via,link,context,cache,utils,retrieve,max,cache,size,since,4,3,see,default,context,cache,int,see,context,cache,utils,retrieve,max,cache,size;public,default,context,cache,this,context,cache,utils,retrieve,max,cache,size
DefaultContextCache -> public int getMaxSize();1459796164;Get the maximum size of this cache.;public int getMaxSize() {_		return this.maxSize__	};get,the,maximum,size,of,this,cache;public,int,get,max,size,return,this,max,size
DefaultContextCache -> public int getMaxSize();1465306936;Get the maximum size of this cache.;public int getMaxSize() {_		return this.maxSize__	};get,the,maximum,size,of,this,cache;public,int,get,max,size,return,this,max,size
DefaultContextCache -> public int getMaxSize();1467730834;Get the maximum size of this cache.;public int getMaxSize() {_		return this.maxSize__	};get,the,maximum,size,of,this,cache;public,int,get,max,size,return,this,max,size
DefaultContextCache -> public int getMaxSize();1496242568;Get the maximum size of this cache.;public int getMaxSize() {_		return this.maxSize__	};get,the,maximum,size,of,this,cache;public,int,get,max,size,return,this,max,size
DefaultContextCache -> public int getMaxSize();1496955179;Get the maximum size of this cache.;public int getMaxSize() {_		return this.maxSize__	};get,the,maximum,size,of,this,cache;public,int,get,max,size,return,this,max,size
DefaultContextCache -> public int getMaxSize();1502974979;Get the maximum size of this cache.;public int getMaxSize() {_		return this.maxSize__	};get,the,maximum,size,of,this,cache;public,int,get,max,size,return,this,max,size
DefaultContextCache -> public int getMaxSize();1521822983;Get the maximum size of this cache.;public int getMaxSize() {_		return this.maxSize__	};get,the,maximum,size,of,this,cache;public,int,get,max,size,return,this,max,size
