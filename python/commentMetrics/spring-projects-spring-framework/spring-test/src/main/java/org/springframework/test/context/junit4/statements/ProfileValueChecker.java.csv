commented;modifiers;parameterAmount;loc;comment;code
true;public;0;20;/**  * Determine if the test specified by arguments to the  * {@linkplain #ProfileValueChecker constructor} is <em>enabled</em> in  * the current environment, as configured via the {@link IfProfileValue  * &#064.IfProfileValue} annotation.  * <p>If the test is not annotated with {@code @IfProfileValue} it is  * considered enabled.  * <p>If a test is not enabled, this method will abort further evaluation  * of the execution chain with a failed assumption. otherwise, this method  * will simply evaluate the next {@link Statement} in the execution chain.  * @see ProfileValueUtils#isTestEnabledInThisEnvironment(Class)  * @see ProfileValueUtils#isTestEnabledInThisEnvironment(Method, Class)  * @throws AssumptionViolatedException if the test is disabled  * @throws Throwable if evaluation of the next statement fails  */ ;/**  * Determine if the test specified by arguments to the  * {@linkplain #ProfileValueChecker constructor} is <em>enabled</em> in  * the current environment, as configured via the {@link IfProfileValue  * &#064.IfProfileValue} annotation.  * <p>If the test is not annotated with {@code @IfProfileValue} it is  * considered enabled.  * <p>If a test is not enabled, this method will abort further evaluation  * of the execution chain with a failed assumption. otherwise, this method  * will simply evaluate the next {@link Statement} in the execution chain.  * @see ProfileValueUtils#isTestEnabledInThisEnvironment(Class)  * @see ProfileValueUtils#isTestEnabledInThisEnvironment(Method, Class)  * @throws AssumptionViolatedException if the test is disabled  * @throws Throwable if evaluation of the next statement fails  */ @Override public void evaluate() throws Throwable {     if (this.testMethod == null) {         if (!ProfileValueUtils.isTestEnabledInThisEnvironment(this.testClass)) {             Annotation ann = AnnotatedElementUtils.findMergedAnnotation(this.testClass, IfProfileValue.class).             throw new AssumptionViolatedException(String.format("Profile configured via [%s] is not enabled in this environment for test class [%s].", ann, this.testClass.getName())).         }     } else {         if (!ProfileValueUtils.isTestEnabledInThisEnvironment(this.testMethod, this.testClass)) {             throw new AssumptionViolatedException(String.format("Profile configured via @IfProfileValue is not enabled in this environment for test method [%s].", this.testMethod)).         }     }     this.next.evaluate(). }
