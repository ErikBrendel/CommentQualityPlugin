# id;timestamp;commentText;codeText;commentWords;codeWords
MockMvcWebClientBuilder -> public MockMvcWebClientBuilder withDelegate(WebClient webClient);1438019281;Supply the {@code WebClient} that the client {@linkplain #build built}_by this builder should delegate to when processing_non-{@linkplain WebRequestMatcher matching} requests._@param webClient the {@code WebClient} to delegate to for requests_that do not match_ never {@code null}_@return this builder for further customization_@see #build();public MockMvcWebClientBuilder withDelegate(WebClient webClient) {_		Assert.notNull(webClient, "webClient must not be null")__		webClient.setWebConnection(createConnection(webClient.getWebConnection()))__		this.webClient = webClient__		return this__	};supply,the,code,web,client,that,the,client,linkplain,build,built,by,this,builder,should,delegate,to,when,processing,non,linkplain,web,request,matcher,matching,requests,param,web,client,the,code,web,client,to,delegate,to,for,requests,that,do,not,match,never,code,null,return,this,builder,for,further,customization,see,build;public,mock,mvc,web,client,builder,with,delegate,web,client,web,client,assert,not,null,web,client,web,client,must,not,be,null,web,client,set,web,connection,create,connection,web,client,get,web,connection,this,web,client,web,client,return,this
MockMvcWebClientBuilder -> public MockMvcWebClientBuilder withDelegate(WebClient webClient);1438029682;Supply the {@code WebClient} that the client {@linkplain #build built}_by this builder should delegate to when processing_non-{@linkplain WebRequestMatcher matching} requests._@param webClient the {@code WebClient} to delegate to for requests_that do not match_ never {@code null}_@return this builder for further customization_@see #build();public MockMvcWebClientBuilder withDelegate(WebClient webClient) {_		Assert.notNull(webClient, "webClient must not be null")__		webClient.setWebConnection(createConnection(webClient.getWebConnection()))__		this.webClient = webClient__		return this__	};supply,the,code,web,client,that,the,client,linkplain,build,built,by,this,builder,should,delegate,to,when,processing,non,linkplain,web,request,matcher,matching,requests,param,web,client,the,code,web,client,to,delegate,to,for,requests,that,do,not,match,never,code,null,return,this,builder,for,further,customization,see,build;public,mock,mvc,web,client,builder,with,delegate,web,client,web,client,assert,not,null,web,client,web,client,must,not,be,null,web,client,set,web,connection,create,connection,web,client,get,web,connection,this,web,client,web,client,return,this
MockMvcWebClientBuilder -> public MockMvcWebClientBuilder withDelegate(WebClient webClient);1447511562;Supply the {@code WebClient} that the client {@linkplain #build built}_by this builder should delegate to when processing_non-{@linkplain WebRequestMatcher matching} requests._@param webClient the {@code WebClient} to delegate to for requests_that do not match_ never {@code null}_@return this builder for further customization_@see #build();public MockMvcWebClientBuilder withDelegate(WebClient webClient) {_		Assert.notNull(webClient, "WebClient must not be null")__		webClient.setWebConnection(createConnection(webClient.getWebConnection()))__		this.webClient = webClient__		return this__	};supply,the,code,web,client,that,the,client,linkplain,build,built,by,this,builder,should,delegate,to,when,processing,non,linkplain,web,request,matcher,matching,requests,param,web,client,the,code,web,client,to,delegate,to,for,requests,that,do,not,match,never,code,null,return,this,builder,for,further,customization,see,build;public,mock,mvc,web,client,builder,with,delegate,web,client,web,client,assert,not,null,web,client,web,client,must,not,be,null,web,client,set,web,connection,create,connection,web,client,get,web,connection,this,web,client,web,client,return,this
MockMvcWebClientBuilder -> public MockMvcWebClientBuilder withDelegate(WebClient webClient);1458316915;Supply the {@code WebClient} that the client {@linkplain #build built}_by this builder should delegate to when processing_non-{@linkplain WebRequestMatcher matching} requests._@param webClient the {@code WebClient} to delegate to for requests_that do not match_ never {@code null}_@return this builder for further customization_@see #build();public MockMvcWebClientBuilder withDelegate(WebClient webClient) {_		Assert.notNull(webClient, "WebClient must not be null")__		webClient.setWebConnection(createConnection(webClient))__		this.webClient = webClient__		return this__	};supply,the,code,web,client,that,the,client,linkplain,build,built,by,this,builder,should,delegate,to,when,processing,non,linkplain,web,request,matcher,matching,requests,param,web,client,the,code,web,client,to,delegate,to,for,requests,that,do,not,match,never,code,null,return,this,builder,for,further,customization,see,build;public,mock,mvc,web,client,builder,with,delegate,web,client,web,client,assert,not,null,web,client,web,client,must,not,be,null,web,client,set,web,connection,create,connection,web,client,this,web,client,web,client,return,this
MockMvcWebClientBuilder -> public MockMvcWebClientBuilder withDelegate(WebClient webClient);1460400578;Supply the {@code WebClient} that the client {@linkplain #build built}_by this builder should delegate to when processing_non-{@linkplain WebRequestMatcher matching} requests._@param webClient the {@code WebClient} to delegate to for requests_that do not match_ never {@code null}_@return this builder for further customization_@see #build();public MockMvcWebClientBuilder withDelegate(WebClient webClient) {_		Assert.notNull(webClient, "WebClient must not be null")__		webClient.setWebConnection(createConnection(webClient))__		this.webClient = webClient__		return this__	};supply,the,code,web,client,that,the,client,linkplain,build,built,by,this,builder,should,delegate,to,when,processing,non,linkplain,web,request,matcher,matching,requests,param,web,client,the,code,web,client,to,delegate,to,for,requests,that,do,not,match,never,code,null,return,this,builder,for,further,customization,see,build;public,mock,mvc,web,client,builder,with,delegate,web,client,web,client,assert,not,null,web,client,web,client,must,not,be,null,web,client,set,web,connection,create,connection,web,client,this,web,client,web,client,return,this
MockMvcWebClientBuilder -> public MockMvcWebClientBuilder withDelegate(WebClient webClient);1498780456;Supply the {@code WebClient} that the client {@linkplain #build built}_by this builder should delegate to when processing_non-{@linkplain WebRequestMatcher matching} requests._@param webClient the {@code WebClient} to delegate to for requests_that do not match_ never {@code null}_@return this builder for further customization_@see #build();public MockMvcWebClientBuilder withDelegate(WebClient webClient) {_		Assert.notNull(webClient, "WebClient must not be null")__		webClient.setWebConnection(createConnection(webClient))__		this.webClient = webClient__		return this__	};supply,the,code,web,client,that,the,client,linkplain,build,built,by,this,builder,should,delegate,to,when,processing,non,linkplain,web,request,matcher,matching,requests,param,web,client,the,code,web,client,to,delegate,to,for,requests,that,do,not,match,never,code,null,return,this,builder,for,further,customization,see,build;public,mock,mvc,web,client,builder,with,delegate,web,client,web,client,assert,not,null,web,client,web,client,must,not,be,null,web,client,set,web,connection,create,connection,web,client,this,web,client,web,client,return,this
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context);1437991650;Create a new instance with the supplied {@link WebApplicationContext}._@param context the {@code WebApplicationContext} to create a {@link MockMvc}_instance from_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context) {_		Assert.notNull(context, "WebApplicationContext must not be null")__		return new MockMvcWebClientBuilder(context)__	};create,a,new,instance,with,the,supplied,link,web,application,context,param,context,the,code,web,application,context,to,create,a,link,mock,mvc,instance,from,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,web,app,context,setup,web,application,context,context,assert,not,null,context,web,application,context,must,not,be,null,return,new,mock,mvc,web,client,builder,context
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context);1438019281;Create a new {@code MockMvcWebClientBuilder} based on the supplied_{@link WebApplicationContext}._@param context the {@code WebApplicationContext} to create a {@link MockMvc}_instance from_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context) {_		Assert.notNull(context, "WebApplicationContext must not be null")__		return new MockMvcWebClientBuilder(context)__	};create,a,new,code,mock,mvc,web,client,builder,based,on,the,supplied,link,web,application,context,param,context,the,code,web,application,context,to,create,a,link,mock,mvc,instance,from,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,web,app,context,setup,web,application,context,context,assert,not,null,context,web,application,context,must,not,be,null,return,new,mock,mvc,web,client,builder,context
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context);1438029682;Create a new {@code MockMvcWebClientBuilder} based on the supplied_{@link WebApplicationContext}._@param context the {@code WebApplicationContext} to create a {@link MockMvc}_instance from_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context) {_		Assert.notNull(context, "WebApplicationContext must not be null")__		return new MockMvcWebClientBuilder(context)__	};create,a,new,code,mock,mvc,web,client,builder,based,on,the,supplied,link,web,application,context,param,context,the,code,web,application,context,to,create,a,link,mock,mvc,instance,from,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,web,app,context,setup,web,application,context,context,assert,not,null,context,web,application,context,must,not,be,null,return,new,mock,mvc,web,client,builder,context
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context);1447511562;Create a new {@code MockMvcWebClientBuilder} based on the supplied_{@link WebApplicationContext}._@param context the {@code WebApplicationContext} to create a {@link MockMvc}_instance from_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context) {_		Assert.notNull(context, "WebApplicationContext must not be null")__		return new MockMvcWebClientBuilder(context)__	};create,a,new,code,mock,mvc,web,client,builder,based,on,the,supplied,link,web,application,context,param,context,the,code,web,application,context,to,create,a,link,mock,mvc,instance,from,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,web,app,context,setup,web,application,context,context,assert,not,null,context,web,application,context,must,not,be,null,return,new,mock,mvc,web,client,builder,context
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context);1458316915;Create a new {@code MockMvcWebClientBuilder} based on the supplied_{@link WebApplicationContext}._@param context the {@code WebApplicationContext} to create a {@link MockMvc}_instance from_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context) {_		Assert.notNull(context, "WebApplicationContext must not be null")__		return new MockMvcWebClientBuilder(context)__	};create,a,new,code,mock,mvc,web,client,builder,based,on,the,supplied,link,web,application,context,param,context,the,code,web,application,context,to,create,a,link,mock,mvc,instance,from,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,web,app,context,setup,web,application,context,context,assert,not,null,context,web,application,context,must,not,be,null,return,new,mock,mvc,web,client,builder,context
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context);1460400578;Create a new {@code MockMvcWebClientBuilder} based on the supplied_{@link WebApplicationContext}._@param context the {@code WebApplicationContext} to create a {@link MockMvc}_instance from_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context) {_		Assert.notNull(context, "WebApplicationContext must not be null")__		return new MockMvcWebClientBuilder(context)__	};create,a,new,code,mock,mvc,web,client,builder,based,on,the,supplied,link,web,application,context,param,context,the,code,web,application,context,to,create,a,link,mock,mvc,instance,from,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,web,app,context,setup,web,application,context,context,assert,not,null,context,web,application,context,must,not,be,null,return,new,mock,mvc,web,client,builder,context
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context);1498780456;Create a new {@code MockMvcWebClientBuilder} based on the supplied_{@link WebApplicationContext}._@param context the {@code WebApplicationContext} to create a {@link MockMvc}_instance from_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context) {_		Assert.notNull(context, "WebApplicationContext must not be null")__		return new MockMvcWebClientBuilder(context)__	};create,a,new,code,mock,mvc,web,client,builder,based,on,the,supplied,link,web,application,context,param,context,the,code,web,application,context,to,create,a,link,mock,mvc,instance,from,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,web,app,context,setup,web,application,context,context,assert,not,null,context,web,application,context,must,not,be,null,return,new,mock,mvc,web,client,builder,context
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder mockMvcSetup(MockMvc mockMvc);1437991650;Create a new instance with the supplied {@link MockMvc} instance._@param mockMvc the {@code MockMvc} instance to use_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder mockMvcSetup(MockMvc mockMvc) {_		Assert.notNull(mockMvc, "MockMvc must not be null")__		return new MockMvcWebClientBuilder(mockMvc)__	};create,a,new,instance,with,the,supplied,link,mock,mvc,instance,param,mock,mvc,the,code,mock,mvc,instance,to,use,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,mock,mvc,setup,mock,mvc,mock,mvc,assert,not,null,mock,mvc,mock,mvc,must,not,be,null,return,new,mock,mvc,web,client,builder,mock,mvc
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder mockMvcSetup(MockMvc mockMvc);1438019281;Create a new {@code MockMvcWebClientBuilder} based on the supplied_{@link MockMvc} instance._@param mockMvc the {@code MockMvc} instance to use_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder mockMvcSetup(MockMvc mockMvc) {_		Assert.notNull(mockMvc, "MockMvc must not be null")__		return new MockMvcWebClientBuilder(mockMvc)__	};create,a,new,code,mock,mvc,web,client,builder,based,on,the,supplied,link,mock,mvc,instance,param,mock,mvc,the,code,mock,mvc,instance,to,use,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,mock,mvc,setup,mock,mvc,mock,mvc,assert,not,null,mock,mvc,mock,mvc,must,not,be,null,return,new,mock,mvc,web,client,builder,mock,mvc
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder mockMvcSetup(MockMvc mockMvc);1438029682;Create a new {@code MockMvcWebClientBuilder} based on the supplied_{@link MockMvc} instance._@param mockMvc the {@code MockMvc} instance to use_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder mockMvcSetup(MockMvc mockMvc) {_		Assert.notNull(mockMvc, "MockMvc must not be null")__		return new MockMvcWebClientBuilder(mockMvc)__	};create,a,new,code,mock,mvc,web,client,builder,based,on,the,supplied,link,mock,mvc,instance,param,mock,mvc,the,code,mock,mvc,instance,to,use,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,mock,mvc,setup,mock,mvc,mock,mvc,assert,not,null,mock,mvc,mock,mvc,must,not,be,null,return,new,mock,mvc,web,client,builder,mock,mvc
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder mockMvcSetup(MockMvc mockMvc);1447511562;Create a new {@code MockMvcWebClientBuilder} based on the supplied_{@link MockMvc} instance._@param mockMvc the {@code MockMvc} instance to use_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder mockMvcSetup(MockMvc mockMvc) {_		Assert.notNull(mockMvc, "MockMvc must not be null")__		return new MockMvcWebClientBuilder(mockMvc)__	};create,a,new,code,mock,mvc,web,client,builder,based,on,the,supplied,link,mock,mvc,instance,param,mock,mvc,the,code,mock,mvc,instance,to,use,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,mock,mvc,setup,mock,mvc,mock,mvc,assert,not,null,mock,mvc,mock,mvc,must,not,be,null,return,new,mock,mvc,web,client,builder,mock,mvc
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder mockMvcSetup(MockMvc mockMvc);1458316915;Create a new {@code MockMvcWebClientBuilder} based on the supplied_{@link MockMvc} instance._@param mockMvc the {@code MockMvc} instance to use_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder mockMvcSetup(MockMvc mockMvc) {_		Assert.notNull(mockMvc, "MockMvc must not be null")__		return new MockMvcWebClientBuilder(mockMvc)__	};create,a,new,code,mock,mvc,web,client,builder,based,on,the,supplied,link,mock,mvc,instance,param,mock,mvc,the,code,mock,mvc,instance,to,use,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,mock,mvc,setup,mock,mvc,mock,mvc,assert,not,null,mock,mvc,mock,mvc,must,not,be,null,return,new,mock,mvc,web,client,builder,mock,mvc
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder mockMvcSetup(MockMvc mockMvc);1460400578;Create a new {@code MockMvcWebClientBuilder} based on the supplied_{@link MockMvc} instance._@param mockMvc the {@code MockMvc} instance to use_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder mockMvcSetup(MockMvc mockMvc) {_		Assert.notNull(mockMvc, "MockMvc must not be null")__		return new MockMvcWebClientBuilder(mockMvc)__	};create,a,new,code,mock,mvc,web,client,builder,based,on,the,supplied,link,mock,mvc,instance,param,mock,mvc,the,code,mock,mvc,instance,to,use,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,mock,mvc,setup,mock,mvc,mock,mvc,assert,not,null,mock,mvc,mock,mvc,must,not,be,null,return,new,mock,mvc,web,client,builder,mock,mvc
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder mockMvcSetup(MockMvc mockMvc);1498780456;Create a new {@code MockMvcWebClientBuilder} based on the supplied_{@link MockMvc} instance._@param mockMvc the {@code MockMvc} instance to use_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder mockMvcSetup(MockMvc mockMvc) {_		Assert.notNull(mockMvc, "MockMvc must not be null")__		return new MockMvcWebClientBuilder(mockMvc)__	};create,a,new,code,mock,mvc,web,client,builder,based,on,the,supplied,link,mock,mvc,instance,param,mock,mvc,the,code,mock,mvc,instance,to,use,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,mock,mvc,setup,mock,mvc,mock,mvc,assert,not,null,mock,mvc,mock,mvc,must,not,be,null,return,new,mock,mvc,web,client,builder,mock,mvc
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context, MockMvcConfigurer configurer);1437991650;Create a new instance with the supplied {@link WebApplicationContext}_and {@link MockMvcConfigurer}._@param context the {@code WebApplicationContext} to create a {@link MockMvc}_instance from_ never {@code null}_@param configurer the MockMvcConfigurer to apply_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context, MockMvcConfigurer configurer) {_		Assert.notNull(context, "WebApplicationContext must not be null")__		Assert.notNull(configurer, "MockMvcConfigurer must not be null")__		return new MockMvcWebClientBuilder(context, configurer)__	};create,a,new,instance,with,the,supplied,link,web,application,context,and,link,mock,mvc,configurer,param,context,the,code,web,application,context,to,create,a,link,mock,mvc,instance,from,never,code,null,param,configurer,the,mock,mvc,configurer,to,apply,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,web,app,context,setup,web,application,context,context,mock,mvc,configurer,configurer,assert,not,null,context,web,application,context,must,not,be,null,assert,not,null,configurer,mock,mvc,configurer,must,not,be,null,return,new,mock,mvc,web,client,builder,context,configurer
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context, MockMvcConfigurer configurer);1438019281;Create a new {@code MockMvcWebClientBuilder} based on the supplied_{@link WebApplicationContext} and {@link MockMvcConfigurer}._@param context the {@code WebApplicationContext} to create a {@link MockMvc}_instance from_ never {@code null}_@param configurer the MockMvcConfigurer to apply_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context, MockMvcConfigurer configurer) {_		Assert.notNull(context, "WebApplicationContext must not be null")__		Assert.notNull(configurer, "MockMvcConfigurer must not be null")__		return new MockMvcWebClientBuilder(context, configurer)__	};create,a,new,code,mock,mvc,web,client,builder,based,on,the,supplied,link,web,application,context,and,link,mock,mvc,configurer,param,context,the,code,web,application,context,to,create,a,link,mock,mvc,instance,from,never,code,null,param,configurer,the,mock,mvc,configurer,to,apply,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,web,app,context,setup,web,application,context,context,mock,mvc,configurer,configurer,assert,not,null,context,web,application,context,must,not,be,null,assert,not,null,configurer,mock,mvc,configurer,must,not,be,null,return,new,mock,mvc,web,client,builder,context,configurer
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context, MockMvcConfigurer configurer);1438029682;Create a new {@code MockMvcWebClientBuilder} based on the supplied_{@link WebApplicationContext} and {@link MockMvcConfigurer}._@param context the {@code WebApplicationContext} to create a {@link MockMvc}_instance from_ never {@code null}_@param configurer the {@code MockMvcConfigurer} to apply_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context, MockMvcConfigurer configurer) {_		Assert.notNull(context, "WebApplicationContext must not be null")__		Assert.notNull(configurer, "MockMvcConfigurer must not be null")__		return new MockMvcWebClientBuilder(context, configurer)__	};create,a,new,code,mock,mvc,web,client,builder,based,on,the,supplied,link,web,application,context,and,link,mock,mvc,configurer,param,context,the,code,web,application,context,to,create,a,link,mock,mvc,instance,from,never,code,null,param,configurer,the,code,mock,mvc,configurer,to,apply,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,web,app,context,setup,web,application,context,context,mock,mvc,configurer,configurer,assert,not,null,context,web,application,context,must,not,be,null,assert,not,null,configurer,mock,mvc,configurer,must,not,be,null,return,new,mock,mvc,web,client,builder,context,configurer
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context, MockMvcConfigurer configurer);1447511562;Create a new {@code MockMvcWebClientBuilder} based on the supplied_{@link WebApplicationContext} and {@link MockMvcConfigurer}._@param context the {@code WebApplicationContext} to create a {@link MockMvc}_instance from_ never {@code null}_@param configurer the {@code MockMvcConfigurer} to apply_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context, MockMvcConfigurer configurer) {_		Assert.notNull(context, "WebApplicationContext must not be null")__		Assert.notNull(configurer, "MockMvcConfigurer must not be null")__		return new MockMvcWebClientBuilder(context, configurer)__	};create,a,new,code,mock,mvc,web,client,builder,based,on,the,supplied,link,web,application,context,and,link,mock,mvc,configurer,param,context,the,code,web,application,context,to,create,a,link,mock,mvc,instance,from,never,code,null,param,configurer,the,code,mock,mvc,configurer,to,apply,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,web,app,context,setup,web,application,context,context,mock,mvc,configurer,configurer,assert,not,null,context,web,application,context,must,not,be,null,assert,not,null,configurer,mock,mvc,configurer,must,not,be,null,return,new,mock,mvc,web,client,builder,context,configurer
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context, MockMvcConfigurer configurer);1458316915;Create a new {@code MockMvcWebClientBuilder} based on the supplied_{@link WebApplicationContext} and {@link MockMvcConfigurer}._@param context the {@code WebApplicationContext} to create a {@link MockMvc}_instance from_ never {@code null}_@param configurer the {@code MockMvcConfigurer} to apply_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context, MockMvcConfigurer configurer) {_		Assert.notNull(context, "WebApplicationContext must not be null")__		Assert.notNull(configurer, "MockMvcConfigurer must not be null")__		return new MockMvcWebClientBuilder(context, configurer)__	};create,a,new,code,mock,mvc,web,client,builder,based,on,the,supplied,link,web,application,context,and,link,mock,mvc,configurer,param,context,the,code,web,application,context,to,create,a,link,mock,mvc,instance,from,never,code,null,param,configurer,the,code,mock,mvc,configurer,to,apply,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,web,app,context,setup,web,application,context,context,mock,mvc,configurer,configurer,assert,not,null,context,web,application,context,must,not,be,null,assert,not,null,configurer,mock,mvc,configurer,must,not,be,null,return,new,mock,mvc,web,client,builder,context,configurer
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context, MockMvcConfigurer configurer);1460400578;Create a new {@code MockMvcWebClientBuilder} based on the supplied_{@link WebApplicationContext} and {@link MockMvcConfigurer}._@param context the {@code WebApplicationContext} to create a {@link MockMvc}_instance from_ never {@code null}_@param configurer the {@code MockMvcConfigurer} to apply_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context, MockMvcConfigurer configurer) {_		Assert.notNull(context, "WebApplicationContext must not be null")__		Assert.notNull(configurer, "MockMvcConfigurer must not be null")__		return new MockMvcWebClientBuilder(context, configurer)__	};create,a,new,code,mock,mvc,web,client,builder,based,on,the,supplied,link,web,application,context,and,link,mock,mvc,configurer,param,context,the,code,web,application,context,to,create,a,link,mock,mvc,instance,from,never,code,null,param,configurer,the,code,mock,mvc,configurer,to,apply,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,web,app,context,setup,web,application,context,context,mock,mvc,configurer,configurer,assert,not,null,context,web,application,context,must,not,be,null,assert,not,null,configurer,mock,mvc,configurer,must,not,be,null,return,new,mock,mvc,web,client,builder,context,configurer
MockMvcWebClientBuilder -> public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context, MockMvcConfigurer configurer);1498780456;Create a new {@code MockMvcWebClientBuilder} based on the supplied_{@link WebApplicationContext} and {@link MockMvcConfigurer}._@param context the {@code WebApplicationContext} to create a {@link MockMvc}_instance from_ never {@code null}_@param configurer the {@code MockMvcConfigurer} to apply_ never {@code null}_@return the MockMvcWebClientBuilder to customize;public static MockMvcWebClientBuilder webAppContextSetup(WebApplicationContext context, MockMvcConfigurer configurer) {_		Assert.notNull(context, "WebApplicationContext must not be null")__		Assert.notNull(configurer, "MockMvcConfigurer must not be null")__		return new MockMvcWebClientBuilder(context, configurer)__	};create,a,new,code,mock,mvc,web,client,builder,based,on,the,supplied,link,web,application,context,and,link,mock,mvc,configurer,param,context,the,code,web,application,context,to,create,a,link,mock,mvc,instance,from,never,code,null,param,configurer,the,code,mock,mvc,configurer,to,apply,never,code,null,return,the,mock,mvc,web,client,builder,to,customize;public,static,mock,mvc,web,client,builder,web,app,context,setup,web,application,context,context,mock,mvc,configurer,configurer,assert,not,null,context,web,application,context,must,not,be,null,assert,not,null,configurer,mock,mvc,configurer,must,not,be,null,return,new,mock,mvc,web,client,builder,context,configurer
MockMvcWebClientBuilder -> public WebClient build();1438019281;Build the {@link WebClient} configured via this builder._<p>The returned client will use the configured {@link MockMvc} instance_for processing any {@linkplain WebRequestMatcher matching} requests_and a delegate {@code WebClient} for all other requests._<p>If a {@linkplain #withDelegate delegate} has been explicitly configured,_it will be used_ otherwise, a default {@code WebClient} will be configured_as the delegate._@return the {@code WebClient} to use_@see #withDelegate(WebClient);public WebClient build() {_		return (this.webClient != null ? this.webClient : withDelegate(new WebClient()).build())__	};build,the,link,web,client,configured,via,this,builder,p,the,returned,client,will,use,the,configured,link,mock,mvc,instance,for,processing,any,linkplain,web,request,matcher,matching,requests,and,a,delegate,code,web,client,for,all,other,requests,p,if,a,linkplain,with,delegate,delegate,has,been,explicitly,configured,it,will,be,used,otherwise,a,default,code,web,client,will,be,configured,as,the,delegate,return,the,code,web,client,to,use,see,with,delegate,web,client;public,web,client,build,return,this,web,client,null,this,web,client,with,delegate,new,web,client,build
MockMvcWebClientBuilder -> public WebClient build();1438029682;Build the {@link WebClient} configured via this builder._<p>The returned client will use the configured {@link MockMvc} instance_for processing any {@linkplain WebRequestMatcher matching} requests_and a delegate {@code WebClient} for all other requests._<p>If a {@linkplain #withDelegate delegate} has been explicitly configured,_it will be used_ otherwise, a default {@code WebClient} will be configured_as the delegate._@return the {@code WebClient} to use_@see #withDelegate(WebClient);public WebClient build() {_		return (this.webClient != null ? this.webClient : withDelegate(new WebClient()).build())__	};build,the,link,web,client,configured,via,this,builder,p,the,returned,client,will,use,the,configured,link,mock,mvc,instance,for,processing,any,linkplain,web,request,matcher,matching,requests,and,a,delegate,code,web,client,for,all,other,requests,p,if,a,linkplain,with,delegate,delegate,has,been,explicitly,configured,it,will,be,used,otherwise,a,default,code,web,client,will,be,configured,as,the,delegate,return,the,code,web,client,to,use,see,with,delegate,web,client;public,web,client,build,return,this,web,client,null,this,web,client,with,delegate,new,web,client,build
MockMvcWebClientBuilder -> public WebClient build();1447511562;Build the {@link WebClient} configured via this builder._<p>The returned client will use the configured {@link MockMvc} instance_for processing any {@linkplain WebRequestMatcher matching} requests_and a delegate {@code WebClient} for all other requests._<p>If a {@linkplain #withDelegate delegate} has been explicitly configured,_it will be used_ otherwise, a default {@code WebClient} will be configured_as the delegate._@return the {@code WebClient} to use_@see #withDelegate(WebClient);public WebClient build() {_		return (this.webClient != null ? this.webClient : withDelegate(new WebClient()).build())__	};build,the,link,web,client,configured,via,this,builder,p,the,returned,client,will,use,the,configured,link,mock,mvc,instance,for,processing,any,linkplain,web,request,matcher,matching,requests,and,a,delegate,code,web,client,for,all,other,requests,p,if,a,linkplain,with,delegate,delegate,has,been,explicitly,configured,it,will,be,used,otherwise,a,default,code,web,client,will,be,configured,as,the,delegate,return,the,code,web,client,to,use,see,with,delegate,web,client;public,web,client,build,return,this,web,client,null,this,web,client,with,delegate,new,web,client,build
MockMvcWebClientBuilder -> public WebClient build();1458316915;Build the {@link WebClient} configured via this builder._<p>The returned client will use the configured {@link MockMvc} instance_for processing any {@linkplain WebRequestMatcher matching} requests_and a delegate {@code WebClient} for all other requests._<p>If a {@linkplain #withDelegate delegate} has been explicitly configured,_it will be used_ otherwise, a default {@code WebClient} will be configured_as the delegate._@return the {@code WebClient} to use_@see #withDelegate(WebClient);public WebClient build() {_		return (this.webClient != null ? this.webClient : withDelegate(new WebClient()).build())__	};build,the,link,web,client,configured,via,this,builder,p,the,returned,client,will,use,the,configured,link,mock,mvc,instance,for,processing,any,linkplain,web,request,matcher,matching,requests,and,a,delegate,code,web,client,for,all,other,requests,p,if,a,linkplain,with,delegate,delegate,has,been,explicitly,configured,it,will,be,used,otherwise,a,default,code,web,client,will,be,configured,as,the,delegate,return,the,code,web,client,to,use,see,with,delegate,web,client;public,web,client,build,return,this,web,client,null,this,web,client,with,delegate,new,web,client,build
MockMvcWebClientBuilder -> public WebClient build();1460400578;Build the {@link WebClient} configured via this builder._<p>The returned client will use the configured {@link MockMvc} instance_for processing any {@linkplain WebRequestMatcher matching} requests_and a delegate {@code WebClient} for all other requests._<p>If a {@linkplain #withDelegate delegate} has been explicitly configured,_it will be used_ otherwise, a default {@code WebClient} will be configured_as the delegate._@return the {@code WebClient} to use_@see #withDelegate(WebClient);public WebClient build() {_		return (this.webClient != null ? this.webClient : withDelegate(new WebClient()).build())__	};build,the,link,web,client,configured,via,this,builder,p,the,returned,client,will,use,the,configured,link,mock,mvc,instance,for,processing,any,linkplain,web,request,matcher,matching,requests,and,a,delegate,code,web,client,for,all,other,requests,p,if,a,linkplain,with,delegate,delegate,has,been,explicitly,configured,it,will,be,used,otherwise,a,default,code,web,client,will,be,configured,as,the,delegate,return,the,code,web,client,to,use,see,with,delegate,web,client;public,web,client,build,return,this,web,client,null,this,web,client,with,delegate,new,web,client,build
MockMvcWebClientBuilder -> public WebClient build();1498780456;Build the {@link WebClient} configured via this builder._<p>The returned client will use the configured {@link MockMvc} instance_for processing any {@linkplain WebRequestMatcher matching} requests_and a delegate {@code WebClient} for all other requests._<p>If a {@linkplain #withDelegate delegate} has been explicitly configured,_it will be used_ otherwise, a default {@code WebClient} will be configured_as the delegate._@return the {@code WebClient} to use_@see #withDelegate(WebClient);public WebClient build() {_		return (this.webClient != null ? this.webClient : withDelegate(new WebClient()).build())__	};build,the,link,web,client,configured,via,this,builder,p,the,returned,client,will,use,the,configured,link,mock,mvc,instance,for,processing,any,linkplain,web,request,matcher,matching,requests,and,a,delegate,code,web,client,for,all,other,requests,p,if,a,linkplain,with,delegate,delegate,has,been,explicitly,configured,it,will,be,used,otherwise,a,default,code,web,client,will,be,configured,as,the,delegate,return,the,code,web,client,to,use,see,with,delegate,web,client;public,web,client,build,return,this,web,client,null,this,web,client,with,delegate,new,web,client,build
