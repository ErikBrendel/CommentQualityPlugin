# id;timestamp;commentText;codeText;commentWords;codeWords
ContextConfiguration -> boolean inheritInitializers() default true_;1345469597;Whether or not {@linkplain #initializers context initializers} from test_superclasses should be <em>inherited</em>.__<p>The default value is <code>true</code>. This means that an annotated_class will <em>inherit</em> the application context initializers defined_by test superclasses. Specifically, the initializers for a given test_class will be added to the set of initializers defined by test_superclasses. Thus, subclasses have the option of <em>extending</em> the_set of initializers.__<p>If <code>inheritInitializers</code> is set to <code>false</code>, the_initializers for the annotated class will <em>shadow</em> and effectively_replace any initializers defined by superclasses.__<p>In the following example, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be initialized using_{@code BaseInitializer} <strong>and</strong> {@code ExtendedInitializer}._Note, however, that the order in which the initializers are invoked_depends on whether they implement {@link org.springframework.core.Ordered_Ordered} or are annotated with {@link org.springframework.core.annotation.Order_&#064_Order}._<pre class="code">_&#064_ContextConfiguration(initializers = BaseInitializer.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(initializers = ExtendedInitializer.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 3.2;boolean inheritInitializers() default true_;whether,or,not,linkplain,initializers,context,initializers,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,code,this,means,that,an,annotated,class,will,em,inherit,em,the,application,context,initializers,defined,by,test,superclasses,specifically,the,initializers,for,a,given,test,class,will,be,added,to,the,set,of,initializers,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,set,of,initializers,p,if,code,inherit,initializers,code,is,set,to,code,false,code,the,initializers,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,initializers,defined,by,superclasses,p,in,the,following,example,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,initialized,using,code,base,initializer,strong,and,strong,code,extended,initializer,note,however,that,the,order,in,which,the,initializers,are,invoked,depends,on,whether,they,implement,link,org,springframework,core,ordered,ordered,or,are,annotated,with,link,org,springframework,core,annotation,order,064,order,pre,class,code,064,context,configuration,initializers,base,initializer,class,public,class,base,test,064,context,configuration,initializers,extended,initializer,class,public,class,extended,test,extends,base,test,pre,since,3,2;boolean,inherit,initializers,default,true
ContextConfiguration -> boolean inheritInitializers() default true_;1356735495;Whether or not {@linkplain #initializers context initializers} from test_superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the application context initializers defined_by test superclasses. Specifically, the initializers for a given test_class will be added to the set of initializers defined by test_superclasses. Thus, subclasses have the option of <em>extending</em> the_set of initializers.__<p>If {@code inheritInitializers} is set to {@code false}, the_initializers for the annotated class will <em>shadow</em> and effectively_replace any initializers defined by superclasses.__<p>In the following example, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be initialized using_{@code BaseInitializer} <strong>and</strong> {@code ExtendedInitializer}._Note, however, that the order in which the initializers are invoked_depends on whether they implement {@link org.springframework.core.Ordered_Ordered} or are annotated with {@link org.springframework.core.annotation.Order_&#064_Order}._<pre class="code">_&#064_ContextConfiguration(initializers = BaseInitializer.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(initializers = ExtendedInitializer.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 3.2;boolean inheritInitializers() default true_;whether,or,not,linkplain,initializers,context,initializers,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,application,context,initializers,defined,by,test,superclasses,specifically,the,initializers,for,a,given,test,class,will,be,added,to,the,set,of,initializers,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,set,of,initializers,p,if,code,inherit,initializers,is,set,to,code,false,the,initializers,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,initializers,defined,by,superclasses,p,in,the,following,example,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,initialized,using,code,base,initializer,strong,and,strong,code,extended,initializer,note,however,that,the,order,in,which,the,initializers,are,invoked,depends,on,whether,they,implement,link,org,springframework,core,ordered,ordered,or,are,annotated,with,link,org,springframework,core,annotation,order,064,order,pre,class,code,064,context,configuration,initializers,base,initializer,class,public,class,base,test,064,context,configuration,initializers,extended,initializer,class,public,class,extended,test,extends,base,test,pre,since,3,2;boolean,inherit,initializers,default,true
ContextConfiguration -> boolean inheritInitializers() default true_;1363208506;Whether or not {@linkplain #initializers context initializers} from test_superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the application context initializers defined_by test superclasses. Specifically, the initializers for a given test_class will be added to the set of initializers defined by test_superclasses. Thus, subclasses have the option of <em>extending</em> the_set of initializers.__<p>If {@code inheritInitializers} is set to {@code false}, the_initializers for the annotated class will <em>shadow</em> and effectively_replace any initializers defined by superclasses.__<p>In the following example, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be initialized using_{@code BaseInitializer} <strong>and</strong> {@code ExtendedInitializer}._Note, however, that the order in which the initializers are invoked_depends on whether they implement {@link org.springframework.core.Ordered_Ordered} or are annotated with {@link org.springframework.core.annotation.Order_&#064_Order}._<pre class="code">_&#064_ContextConfiguration(initializers = BaseInitializer.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(initializers = ExtendedInitializer.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 3.2;boolean inheritInitializers() default true_;whether,or,not,linkplain,initializers,context,initializers,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,application,context,initializers,defined,by,test,superclasses,specifically,the,initializers,for,a,given,test,class,will,be,added,to,the,set,of,initializers,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,set,of,initializers,p,if,code,inherit,initializers,is,set,to,code,false,the,initializers,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,initializers,defined,by,superclasses,p,in,the,following,example,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,initialized,using,code,base,initializer,strong,and,strong,code,extended,initializer,note,however,that,the,order,in,which,the,initializers,are,invoked,depends,on,whether,they,implement,link,org,springframework,core,ordered,ordered,or,are,annotated,with,link,org,springframework,core,annotation,order,064,order,pre,class,code,064,context,configuration,initializers,base,initializer,class,public,class,base,test,064,context,configuration,initializers,extended,initializer,class,public,class,extended,test,extends,base,test,pre,since,3,2;boolean,inherit,initializers,default,true
ContextConfiguration -> boolean inheritInitializers() default true_;1386769390;Whether or not {@linkplain #initializers context initializers} from test_superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the application context initializers defined_by test superclasses. Specifically, the initializers for a given test_class will be added to the set of initializers defined by test_superclasses. Thus, subclasses have the option of <em>extending</em> the_set of initializers.__<p>If {@code inheritInitializers} is set to {@code false}, the_initializers for the annotated class will <em>shadow</em> and effectively_replace any initializers defined by superclasses.__<p>In the following example, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be initialized using_{@code BaseInitializer} <strong>and</strong> {@code ExtendedInitializer}._Note, however, that the order in which the initializers are invoked_depends on whether they implement {@link org.springframework.core.Ordered_Ordered} or are annotated with {@link org.springframework.core.annotation.Order_&#064_Order}._<pre class="code">_&#064_ContextConfiguration(initializers = BaseInitializer.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(initializers = ExtendedInitializer.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 3.2;boolean inheritInitializers() default true_;whether,or,not,linkplain,initializers,context,initializers,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,application,context,initializers,defined,by,test,superclasses,specifically,the,initializers,for,a,given,test,class,will,be,added,to,the,set,of,initializers,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,set,of,initializers,p,if,code,inherit,initializers,is,set,to,code,false,the,initializers,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,initializers,defined,by,superclasses,p,in,the,following,example,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,initialized,using,code,base,initializer,strong,and,strong,code,extended,initializer,note,however,that,the,order,in,which,the,initializers,are,invoked,depends,on,whether,they,implement,link,org,springframework,core,ordered,ordered,or,are,annotated,with,link,org,springframework,core,annotation,order,064,order,pre,class,code,064,context,configuration,initializers,base,initializer,class,public,class,base,test,064,context,configuration,initializers,extended,initializer,class,public,class,extended,test,extends,base,test,pre,since,3,2;boolean,inherit,initializers,default,true
ContextConfiguration -> boolean inheritInitializers() default true_;1396374528;Whether or not {@linkplain #initializers context initializers} from test_superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the application context initializers defined_by test superclasses. Specifically, the initializers for a given test_class will be added to the set of initializers defined by test_superclasses. Thus, subclasses have the option of <em>extending</em> the_set of initializers.__<p>If {@code inheritInitializers} is set to {@code false}, the_initializers for the annotated class will <em>shadow</em> and effectively_replace any initializers defined by superclasses.__<p>In the following example, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be initialized using_{@code BaseInitializer} <strong>and</strong> {@code ExtendedInitializer}._Note, however, that the order in which the initializers are invoked_depends on whether they implement {@link org.springframework.core.Ordered_Ordered} or are annotated with {@link org.springframework.core.annotation.Order_&#064_Order}._<pre class="code">_&#064_ContextConfiguration(initializers = BaseInitializer.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(initializers = ExtendedInitializer.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 3.2;boolean inheritInitializers() default true_;whether,or,not,linkplain,initializers,context,initializers,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,application,context,initializers,defined,by,test,superclasses,specifically,the,initializers,for,a,given,test,class,will,be,added,to,the,set,of,initializers,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,set,of,initializers,p,if,code,inherit,initializers,is,set,to,code,false,the,initializers,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,initializers,defined,by,superclasses,p,in,the,following,example,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,initialized,using,code,base,initializer,strong,and,strong,code,extended,initializer,note,however,that,the,order,in,which,the,initializers,are,invoked,depends,on,whether,they,implement,link,org,springframework,core,ordered,ordered,or,are,annotated,with,link,org,springframework,core,annotation,order,064,order,pre,class,code,064,context,configuration,initializers,base,initializer,class,public,class,base,test,064,context,configuration,initializers,extended,initializer,class,public,class,extended,test,extends,base,test,pre,since,3,2;boolean,inherit,initializers,default,true
ContextConfiguration -> boolean inheritInitializers() default true_;1397082962;Whether or not {@linkplain #initializers context initializers} from test_superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the application context initializers defined_by test superclasses. Specifically, the initializers for a given test_class will be added to the set of initializers defined by test_superclasses. Thus, subclasses have the option of <em>extending</em> the_set of initializers.__<p>If {@code inheritInitializers} is set to {@code false}, the_initializers for the annotated class will <em>shadow</em> and effectively_replace any initializers defined by superclasses.__<p>In the following example, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be initialized using_{@code BaseInitializer} <strong>and</strong> {@code ExtendedInitializer}._Note, however, that the order in which the initializers are invoked_depends on whether they implement {@link org.springframework.core.Ordered_Ordered} or are annotated with {@link org.springframework.core.annotation.Order_&#064_Order}._<pre class="code">_&#064_ContextConfiguration(initializers = BaseInitializer.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(initializers = ExtendedInitializer.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 3.2;boolean inheritInitializers() default true_;whether,or,not,linkplain,initializers,context,initializers,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,application,context,initializers,defined,by,test,superclasses,specifically,the,initializers,for,a,given,test,class,will,be,added,to,the,set,of,initializers,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,set,of,initializers,p,if,code,inherit,initializers,is,set,to,code,false,the,initializers,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,initializers,defined,by,superclasses,p,in,the,following,example,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,initialized,using,code,base,initializer,strong,and,strong,code,extended,initializer,note,however,that,the,order,in,which,the,initializers,are,invoked,depends,on,whether,they,implement,link,org,springframework,core,ordered,ordered,or,are,annotated,with,link,org,springframework,core,annotation,order,064,order,pre,class,code,064,context,configuration,initializers,base,initializer,class,public,class,base,test,064,context,configuration,initializers,extended,initializer,class,public,class,extended,test,extends,base,test,pre,since,3,2;boolean,inherit,initializers,default,true
ContextConfiguration -> boolean inheritInitializers() default true_;1406214559;Whether or not {@linkplain #initializers context initializers} from test_superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the application context initializers defined_by test superclasses. Specifically, the initializers for a given test_class will be added to the set of initializers defined by test_superclasses. Thus, subclasses have the option of <em>extending</em> the_set of initializers.__<p>If {@code inheritInitializers} is set to {@code false}, the_initializers for the annotated class will <em>shadow</em> and effectively_replace any initializers defined by superclasses.__<p>In the following example, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be initialized using_{@code BaseInitializer} <strong>and</strong> {@code ExtendedInitializer}._Note, however, that the order in which the initializers are invoked_depends on whether they implement {@link org.springframework.core.Ordered_Ordered} or are annotated with {@link org.springframework.core.annotation.Order_&#064_Order}._<pre class="code">_&#064_ContextConfiguration(initializers = BaseInitializer.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(initializers = ExtendedInitializer.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 3.2;boolean inheritInitializers() default true_;whether,or,not,linkplain,initializers,context,initializers,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,application,context,initializers,defined,by,test,superclasses,specifically,the,initializers,for,a,given,test,class,will,be,added,to,the,set,of,initializers,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,set,of,initializers,p,if,code,inherit,initializers,is,set,to,code,false,the,initializers,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,initializers,defined,by,superclasses,p,in,the,following,example,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,initialized,using,code,base,initializer,strong,and,strong,code,extended,initializer,note,however,that,the,order,in,which,the,initializers,are,invoked,depends,on,whether,they,implement,link,org,springframework,core,ordered,ordered,or,are,annotated,with,link,org,springframework,core,annotation,order,064,order,pre,class,code,064,context,configuration,initializers,base,initializer,class,public,class,base,test,064,context,configuration,initializers,extended,initializer,class,public,class,extended,test,extends,base,test,pre,since,3,2;boolean,inherit,initializers,default,true
ContextConfiguration -> boolean inheritInitializers() default true_;1407419079;Whether or not {@linkplain #initializers context initializers} from test_superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the application context initializers defined_by test superclasses. Specifically, the initializers for a given test_class will be added to the set of initializers defined by test_superclasses. Thus, subclasses have the option of <em>extending</em> the_set of initializers.__<p>If {@code inheritInitializers} is set to {@code false}, the_initializers for the annotated class will <em>shadow</em> and effectively_replace any initializers defined by superclasses.__<p>In the following example, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be initialized using_{@code BaseInitializer} <strong>and</strong> {@code ExtendedInitializer}._Note, however, that the order in which the initializers are invoked_depends on whether they implement {@link org.springframework.core.Ordered_Ordered} or are annotated with {@link org.springframework.core.annotation.Order_&#064_Order}._<pre class="code">_&#064_ContextConfiguration(initializers = BaseInitializer.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(initializers = ExtendedInitializer.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 3.2;boolean inheritInitializers() default true_;whether,or,not,linkplain,initializers,context,initializers,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,application,context,initializers,defined,by,test,superclasses,specifically,the,initializers,for,a,given,test,class,will,be,added,to,the,set,of,initializers,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,set,of,initializers,p,if,code,inherit,initializers,is,set,to,code,false,the,initializers,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,initializers,defined,by,superclasses,p,in,the,following,example,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,initialized,using,code,base,initializer,strong,and,strong,code,extended,initializer,note,however,that,the,order,in,which,the,initializers,are,invoked,depends,on,whether,they,implement,link,org,springframework,core,ordered,ordered,or,are,annotated,with,link,org,springframework,core,annotation,order,064,order,pre,class,code,064,context,configuration,initializers,base,initializer,class,public,class,base,test,064,context,configuration,initializers,extended,initializer,class,public,class,extended,test,extends,base,test,pre,since,3,2;boolean,inherit,initializers,default,true
ContextConfiguration -> boolean inheritInitializers() default true_;1407967503;Whether or not {@linkplain #initializers context initializers} from test_superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the application context initializers defined_by test superclasses. Specifically, the initializers for a given test_class will be added to the set of initializers defined by test_superclasses. Thus, subclasses have the option of <em>extending</em> the_set of initializers.__<p>If {@code inheritInitializers} is set to {@code false}, the_initializers for the annotated class will <em>shadow</em> and effectively_replace any initializers defined by superclasses.__<p>In the following example, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be initialized using_{@code BaseInitializer} <strong>and</strong> {@code ExtendedInitializer}._Note, however, that the order in which the initializers are invoked_depends on whether they implement {@link org.springframework.core.Ordered_Ordered} or are annotated with {@link org.springframework.core.annotation.Order_&#064_Order}._<pre class="code">_&#064_ContextConfiguration(initializers = BaseInitializer.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(initializers = ExtendedInitializer.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 3.2;boolean inheritInitializers() default true_;whether,or,not,linkplain,initializers,context,initializers,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,application,context,initializers,defined,by,test,superclasses,specifically,the,initializers,for,a,given,test,class,will,be,added,to,the,set,of,initializers,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,set,of,initializers,p,if,code,inherit,initializers,is,set,to,code,false,the,initializers,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,initializers,defined,by,superclasses,p,in,the,following,example,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,initialized,using,code,base,initializer,strong,and,strong,code,extended,initializer,note,however,that,the,order,in,which,the,initializers,are,invoked,depends,on,whether,they,implement,link,org,springframework,core,ordered,ordered,or,are,annotated,with,link,org,springframework,core,annotation,order,064,order,pre,class,code,064,context,configuration,initializers,base,initializer,class,public,class,base,test,064,context,configuration,initializers,extended,initializer,class,public,class,extended,test,extends,base,test,pre,since,3,2;boolean,inherit,initializers,default,true
ContextConfiguration -> boolean inheritInitializers() default true_;1432246071;Whether or not {@linkplain #initializers context initializers} from test_superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the application context initializers defined_by test superclasses. Specifically, the initializers for a given test_class will be added to the set of initializers defined by test_superclasses. Thus, subclasses have the option of <em>extending</em> the_set of initializers.__<p>If {@code inheritInitializers} is set to {@code false}, the_initializers for the annotated class will <em>shadow</em> and effectively_replace any initializers defined by superclasses.__<p>In the following example, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be initialized using_{@code BaseInitializer} <strong>and</strong> {@code ExtendedInitializer}._Note, however, that the order in which the initializers are invoked_depends on whether they implement {@link org.springframework.core.Ordered_Ordered} or are annotated with {@link org.springframework.core.annotation.Order_&#064_Order}._<pre class="code">_&#064_ContextConfiguration(initializers = BaseInitializer.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(initializers = ExtendedInitializer.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 3.2;boolean inheritInitializers() default true_;whether,or,not,linkplain,initializers,context,initializers,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,application,context,initializers,defined,by,test,superclasses,specifically,the,initializers,for,a,given,test,class,will,be,added,to,the,set,of,initializers,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,set,of,initializers,p,if,code,inherit,initializers,is,set,to,code,false,the,initializers,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,initializers,defined,by,superclasses,p,in,the,following,example,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,initialized,using,code,base,initializer,strong,and,strong,code,extended,initializer,note,however,that,the,order,in,which,the,initializers,are,invoked,depends,on,whether,they,implement,link,org,springframework,core,ordered,ordered,or,are,annotated,with,link,org,springframework,core,annotation,order,064,order,pre,class,code,064,context,configuration,initializers,base,initializer,class,public,class,base,test,064,context,configuration,initializers,extended,initializer,class,public,class,extended,test,extends,base,test,pre,since,3,2;boolean,inherit,initializers,default,true
ContextConfiguration -> boolean inheritInitializers() default true_;1438176426;Whether or not {@linkplain #initializers context initializers} from test_superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the application context initializers defined_by test superclasses. Specifically, the initializers for a given test_class will be added to the set of initializers defined by test_superclasses. Thus, subclasses have the option of <em>extending</em> the_set of initializers.__<p>If {@code inheritInitializers} is set to {@code false}, the_initializers for the annotated class will <em>shadow</em> and effectively_replace any initializers defined by superclasses.__<p>In the following example, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be initialized using_{@code BaseInitializer} <strong>and</strong> {@code ExtendedInitializer}._Note, however, that the order in which the initializers are invoked_depends on whether they implement {@link org.springframework.core.Ordered_Ordered} or are annotated with {@link org.springframework.core.annotation.Order_&#064_Order}._<pre class="code">_&#064_ContextConfiguration(initializers = BaseInitializer.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(initializers = ExtendedInitializer.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 3.2;boolean inheritInitializers() default true_;whether,or,not,linkplain,initializers,context,initializers,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,application,context,initializers,defined,by,test,superclasses,specifically,the,initializers,for,a,given,test,class,will,be,added,to,the,set,of,initializers,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,set,of,initializers,p,if,code,inherit,initializers,is,set,to,code,false,the,initializers,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,initializers,defined,by,superclasses,p,in,the,following,example,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,initialized,using,code,base,initializer,strong,and,strong,code,extended,initializer,note,however,that,the,order,in,which,the,initializers,are,invoked,depends,on,whether,they,implement,link,org,springframework,core,ordered,ordered,or,are,annotated,with,link,org,springframework,core,annotation,order,064,order,pre,class,code,064,context,configuration,initializers,base,initializer,class,public,class,base,test,064,context,configuration,initializers,extended,initializer,class,public,class,extended,test,extends,base,test,pre,since,3,2;boolean,inherit,initializers,default,true
ContextConfiguration -> boolean inheritInitializers() default true_;1449505825;Whether or not {@linkplain #initializers context initializers} from test_superclasses should be <em>inherited</em>._<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the application context initializers defined_by test superclasses. Specifically, the initializers for a given test_class will be added to the set of initializers defined by test_superclasses. Thus, subclasses have the option of <em>extending</em> the_set of initializers._<p>If {@code inheritInitializers} is set to {@code false}, the_initializers for the annotated class will <em>shadow</em> and effectively_replace any initializers defined by superclasses._<p>In the following example, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be initialized using_{@code BaseInitializer} <strong>and</strong> {@code ExtendedInitializer}._Note, however, that the order in which the initializers are invoked_depends on whether they implement {@link org.springframework.core.Ordered_Ordered} or are annotated with {@link org.springframework.core.annotation.Order_&#064_Order}._<pre class="code">_&#064_ContextConfiguration(initializers = BaseInitializer.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(initializers = ExtendedInitializer.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 3.2;boolean inheritInitializers() default true_;whether,or,not,linkplain,initializers,context,initializers,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,application,context,initializers,defined,by,test,superclasses,specifically,the,initializers,for,a,given,test,class,will,be,added,to,the,set,of,initializers,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,set,of,initializers,p,if,code,inherit,initializers,is,set,to,code,false,the,initializers,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,initializers,defined,by,superclasses,p,in,the,following,example,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,initialized,using,code,base,initializer,strong,and,strong,code,extended,initializer,note,however,that,the,order,in,which,the,initializers,are,invoked,depends,on,whether,they,implement,link,org,springframework,core,ordered,ordered,or,are,annotated,with,link,org,springframework,core,annotation,order,064,order,pre,class,code,064,context,configuration,initializers,base,initializer,class,public,class,base,test,064,context,configuration,initializers,extended,initializer,class,public,class,extended,test,extends,base,test,pre,since,3,2;boolean,inherit,initializers,default,true
ContextConfiguration -> boolean inheritInitializers() default true_;1462470884;Whether or not {@linkplain #initializers context initializers} from test_superclasses should be <em>inherited</em>._<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the application context initializers defined_by test superclasses. Specifically, the initializers for a given test_class will be added to the set of initializers defined by test_superclasses. Thus, subclasses have the option of <em>extending</em> the_set of initializers._<p>If {@code inheritInitializers} is set to {@code false}, the_initializers for the annotated class will <em>shadow</em> and effectively_replace any initializers defined by superclasses._<p>In the following example, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be initialized using_{@code BaseInitializer} <strong>and</strong> {@code ExtendedInitializer}._Note, however, that the order in which the initializers are invoked_depends on whether they implement {@link org.springframework.core.Ordered_Ordered} or are annotated with {@link org.springframework.core.annotation.Order_&#064_Order}._<pre class="code">_&#064_ContextConfiguration(initializers = BaseInitializer.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(initializers = ExtendedInitializer.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 3.2;boolean inheritInitializers() default true_;whether,or,not,linkplain,initializers,context,initializers,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,application,context,initializers,defined,by,test,superclasses,specifically,the,initializers,for,a,given,test,class,will,be,added,to,the,set,of,initializers,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,set,of,initializers,p,if,code,inherit,initializers,is,set,to,code,false,the,initializers,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,initializers,defined,by,superclasses,p,in,the,following,example,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,initialized,using,code,base,initializer,strong,and,strong,code,extended,initializer,note,however,that,the,order,in,which,the,initializers,are,invoked,depends,on,whether,they,implement,link,org,springframework,core,ordered,ordered,or,are,annotated,with,link,org,springframework,core,annotation,order,064,order,pre,class,code,064,context,configuration,initializers,base,initializer,class,public,class,base,test,064,context,configuration,initializers,extended,initializer,class,public,class,extended,test,extends,base,test,pre,since,3,2;boolean,inherit,initializers,default,true
ContextConfiguration -> boolean inheritInitializers() default true_;1496955179;Whether or not {@linkplain #initializers context initializers} from test_superclasses should be <em>inherited</em>._<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the application context initializers defined_by test superclasses. Specifically, the initializers for a given test_class will be added to the set of initializers defined by test_superclasses. Thus, subclasses have the option of <em>extending</em> the_set of initializers._<p>If {@code inheritInitializers} is set to {@code false}, the_initializers for the annotated class will <em>shadow</em> and effectively_replace any initializers defined by superclasses._<p>In the following example, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be initialized using_{@code BaseInitializer} <strong>and</strong> {@code ExtendedInitializer}._Note, however, that the order in which the initializers are invoked_depends on whether they implement {@link org.springframework.core.Ordered_Ordered} or are annotated with {@link org.springframework.core.annotation.Order_&#064_Order}._<pre class="code">_&#064_ContextConfiguration(initializers = BaseInitializer.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(initializers = ExtendedInitializer.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 3.2;boolean inheritInitializers() default true_;whether,or,not,linkplain,initializers,context,initializers,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,application,context,initializers,defined,by,test,superclasses,specifically,the,initializers,for,a,given,test,class,will,be,added,to,the,set,of,initializers,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,set,of,initializers,p,if,code,inherit,initializers,is,set,to,code,false,the,initializers,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,initializers,defined,by,superclasses,p,in,the,following,example,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,initialized,using,code,base,initializer,strong,and,strong,code,extended,initializer,note,however,that,the,order,in,which,the,initializers,are,invoked,depends,on,whether,they,implement,link,org,springframework,core,ordered,ordered,or,are,annotated,with,link,org,springframework,core,annotation,order,064,order,pre,class,code,064,context,configuration,initializers,base,initializer,class,public,class,base,test,064,context,configuration,initializers,extended,initializer,class,public,class,extended,test,extends,base,test,pre,since,3,2;boolean,inherit,initializers,default,true
ContextConfiguration -> String[] value() default {}_;1328020251;Alias for {@link #locations}.__<p>This attribute may <strong>not</strong> be used in conjunction_with {@link #locations} or {@link #classes}, but it may be used_instead of {@link #locations}._@since 3.0;String[] value() default {}_;alias,for,link,locations,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,or,link,classes,but,it,may,be,used,instead,of,link,locations,since,3,0;string,value,default
ContextConfiguration -> String[] value() default {}_;1337278668;Alias for {@link #locations}.__<p>This attribute may <strong>not</strong> be used in conjunction_with {@link #locations} or {@link #classes}, but it may be used_instead of {@link #locations}._@since 3.0;String[] value() default {}_;alias,for,link,locations,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,or,link,classes,but,it,may,be,used,instead,of,link,locations,since,3,0;string,value,default
ContextConfiguration -> String[] value() default {}_;1345469597;Alias for {@link #locations}.__<p>This attribute may <strong>not</strong> be used in conjunction_with {@link #locations} or {@link #classes}, but it may be used_instead of {@link #locations}._@since 3.0_@see #inheritLocations;String[] value() default {}_;alias,for,link,locations,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,or,link,classes,but,it,may,be,used,instead,of,link,locations,since,3,0,see,inherit,locations;string,value,default
ContextConfiguration -> String[] value() default {}_;1356735495;Alias for {@link #locations}.__<p>This attribute may <strong>not</strong> be used in conjunction_with {@link #locations} or {@link #classes}, but it may be used_instead of {@link #locations}._@since 3.0_@see #inheritLocations;String[] value() default {}_;alias,for,link,locations,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,or,link,classes,but,it,may,be,used,instead,of,link,locations,since,3,0,see,inherit,locations;string,value,default
ContextConfiguration -> String[] value() default {}_;1363208506;Alias for {@link #locations}.__<p>This attribute may <strong>not</strong> be used in conjunction_with {@link #locations} or {@link #classes}, but it may be used_instead of {@link #locations}._@since 3.0_@see #inheritLocations;String[] value() default {}_;alias,for,link,locations,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,or,link,classes,but,it,may,be,used,instead,of,link,locations,since,3,0,see,inherit,locations;string,value,default
ContextConfiguration -> String[] value() default {}_;1386769390;Alias for {@link #locations}.__<p>This attribute may <strong>not</strong> be used in conjunction_with {@link #locations} or {@link #classes}, but it may be used_instead of {@link #locations}._@since 3.0_@see #inheritLocations;String[] value() default {}_;alias,for,link,locations,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,or,link,classes,but,it,may,be,used,instead,of,link,locations,since,3,0,see,inherit,locations;string,value,default
ContextConfiguration -> String[] value() default {}_;1396374528;Alias for {@link #locations}.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #locations}, but it may be used instead of {@link #locations}._@since 3.0_@see #inheritLocations;String[] value() default {}_;alias,for,link,locations,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,but,it,may,be,used,instead,of,link,locations,since,3,0,see,inherit,locations;string,value,default
ContextConfiguration -> String[] value() default {}_;1397082962;Alias for {@link #locations}.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #locations}, but it may be used instead of {@link #locations}.__@since 3.0_@see #inheritLocations;String[] value() default {}_;alias,for,link,locations,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,but,it,may,be,used,instead,of,link,locations,since,3,0,see,inherit,locations;string,value,default
ContextConfiguration -> String[] value() default {}_;1406214559;Alias for {@link #locations}.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #locations}, but it may be used instead of {@link #locations}.__@since 3.0_@see #inheritLocations;String[] value() default {}_;alias,for,link,locations,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,but,it,may,be,used,instead,of,link,locations,since,3,0,see,inherit,locations;string,value,default
ContextConfiguration -> String[] value() default {}_;1407419079;Alias for {@link #locations}.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #locations}, but it may be used instead of {@link #locations}.__@since 3.0_@see #inheritLocations;String[] value() default {}_;alias,for,link,locations,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,but,it,may,be,used,instead,of,link,locations,since,3,0,see,inherit,locations;string,value,default
ContextConfiguration -> String[] value() default {}_;1407967503;Alias for {@link #locations}.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #locations}, but it may be used instead of {@link #locations}.__@since 3.0_@see #inheritLocations;String[] value() default {}_;alias,for,link,locations,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,but,it,may,be,used,instead,of,link,locations,since,3,0,see,inherit,locations;string,value,default
ContextConfiguration -> String name() default ""_;1363208506;The name of the context hierarchy level represented by this configuration.__<p>If not specified the name will be inferred based on the numerical level_within all declared contexts within the hierarchy.__<p>This attribute is only applicable when used within a test class hierarchy_that is configured using {@code @ContextHierarchy}, in which case the name_can be used for <em>merging</em> or <em>overriding</em> this configuration_with configuration of the same name in hierarchy levels defined in superclasses._See the Javadoc for {@link ContextHierarchy @ContextHierarchy} for details.__@since 3.2.2;String name() default ""_;the,name,of,the,context,hierarchy,level,represented,by,this,configuration,p,if,not,specified,the,name,will,be,inferred,based,on,the,numerical,level,within,all,declared,contexts,within,the,hierarchy,p,this,attribute,is,only,applicable,when,used,within,a,test,class,hierarchy,that,is,configured,using,code,context,hierarchy,in,which,case,the,name,can,be,used,for,em,merging,em,or,em,overriding,em,this,configuration,with,configuration,of,the,same,name,in,hierarchy,levels,defined,in,superclasses,see,the,javadoc,for,link,context,hierarchy,context,hierarchy,for,details,since,3,2,2;string,name,default
ContextConfiguration -> String name() default ""_;1386769390;The name of the context hierarchy level represented by this configuration.__<p>If not specified the name will be inferred based on the numerical level_within all declared contexts within the hierarchy.__<p>This attribute is only applicable when used within a test class hierarchy_that is configured using {@code @ContextHierarchy}, in which case the name_can be used for <em>merging</em> or <em>overriding</em> this configuration_with configuration of the same name in hierarchy levels defined in superclasses._See the Javadoc for {@link ContextHierarchy @ContextHierarchy} for details.__@since 3.2.2;String name() default ""_;the,name,of,the,context,hierarchy,level,represented,by,this,configuration,p,if,not,specified,the,name,will,be,inferred,based,on,the,numerical,level,within,all,declared,contexts,within,the,hierarchy,p,this,attribute,is,only,applicable,when,used,within,a,test,class,hierarchy,that,is,configured,using,code,context,hierarchy,in,which,case,the,name,can,be,used,for,em,merging,em,or,em,overriding,em,this,configuration,with,configuration,of,the,same,name,in,hierarchy,levels,defined,in,superclasses,see,the,javadoc,for,link,context,hierarchy,context,hierarchy,for,details,since,3,2,2;string,name,default
ContextConfiguration -> String name() default ""_;1396374528;The name of the context hierarchy level represented by this configuration.__<p>If not specified the name will be inferred based on the numerical level_within all declared contexts within the hierarchy.__<p>This attribute is only applicable when used within a test class hierarchy_that is configured using {@code @ContextHierarchy}, in which case the name_can be used for <em>merging</em> or <em>overriding</em> this configuration_with configuration of the same name in hierarchy levels defined in superclasses._See the Javadoc for {@link ContextHierarchy @ContextHierarchy} for details.__@since 3.2.2;String name() default ""_;the,name,of,the,context,hierarchy,level,represented,by,this,configuration,p,if,not,specified,the,name,will,be,inferred,based,on,the,numerical,level,within,all,declared,contexts,within,the,hierarchy,p,this,attribute,is,only,applicable,when,used,within,a,test,class,hierarchy,that,is,configured,using,code,context,hierarchy,in,which,case,the,name,can,be,used,for,em,merging,em,or,em,overriding,em,this,configuration,with,configuration,of,the,same,name,in,hierarchy,levels,defined,in,superclasses,see,the,javadoc,for,link,context,hierarchy,context,hierarchy,for,details,since,3,2,2;string,name,default
ContextConfiguration -> String name() default ""_;1397082962;The name of the context hierarchy level represented by this configuration.__<p>If not specified the name will be inferred based on the numerical level_within all declared contexts within the hierarchy.__<p>This attribute is only applicable when used within a test class hierarchy_that is configured using {@code @ContextHierarchy}, in which case the name_can be used for <em>merging</em> or <em>overriding</em> this configuration_with configuration of the same name in hierarchy levels defined in superclasses._See the Javadoc for {@link ContextHierarchy @ContextHierarchy} for details.__@since 3.2.2;String name() default ""_;the,name,of,the,context,hierarchy,level,represented,by,this,configuration,p,if,not,specified,the,name,will,be,inferred,based,on,the,numerical,level,within,all,declared,contexts,within,the,hierarchy,p,this,attribute,is,only,applicable,when,used,within,a,test,class,hierarchy,that,is,configured,using,code,context,hierarchy,in,which,case,the,name,can,be,used,for,em,merging,em,or,em,overriding,em,this,configuration,with,configuration,of,the,same,name,in,hierarchy,levels,defined,in,superclasses,see,the,javadoc,for,link,context,hierarchy,context,hierarchy,for,details,since,3,2,2;string,name,default
ContextConfiguration -> String name() default ""_;1406214559;The name of the context hierarchy level represented by this configuration.__<p>If not specified the name will be inferred based on the numerical level_within all declared contexts within the hierarchy.__<p>This attribute is only applicable when used within a test class hierarchy_that is configured using {@code @ContextHierarchy}, in which case the name_can be used for <em>merging</em> or <em>overriding</em> this configuration_with configuration of the same name in hierarchy levels defined in superclasses._See the Javadoc for {@link ContextHierarchy @ContextHierarchy} for details.__@since 3.2.2;String name() default ""_;the,name,of,the,context,hierarchy,level,represented,by,this,configuration,p,if,not,specified,the,name,will,be,inferred,based,on,the,numerical,level,within,all,declared,contexts,within,the,hierarchy,p,this,attribute,is,only,applicable,when,used,within,a,test,class,hierarchy,that,is,configured,using,code,context,hierarchy,in,which,case,the,name,can,be,used,for,em,merging,em,or,em,overriding,em,this,configuration,with,configuration,of,the,same,name,in,hierarchy,levels,defined,in,superclasses,see,the,javadoc,for,link,context,hierarchy,context,hierarchy,for,details,since,3,2,2;string,name,default
ContextConfiguration -> String name() default ""_;1407419079;The name of the context hierarchy level represented by this configuration.__<p>If not specified the name will be inferred based on the numerical level_within all declared contexts within the hierarchy.__<p>This attribute is only applicable when used within a test class hierarchy_that is configured using {@code @ContextHierarchy}, in which case the name_can be used for <em>merging</em> or <em>overriding</em> this configuration_with configuration of the same name in hierarchy levels defined in superclasses._See the Javadoc for {@link ContextHierarchy @ContextHierarchy} for details.__@since 3.2.2;String name() default ""_;the,name,of,the,context,hierarchy,level,represented,by,this,configuration,p,if,not,specified,the,name,will,be,inferred,based,on,the,numerical,level,within,all,declared,contexts,within,the,hierarchy,p,this,attribute,is,only,applicable,when,used,within,a,test,class,hierarchy,that,is,configured,using,code,context,hierarchy,in,which,case,the,name,can,be,used,for,em,merging,em,or,em,overriding,em,this,configuration,with,configuration,of,the,same,name,in,hierarchy,levels,defined,in,superclasses,see,the,javadoc,for,link,context,hierarchy,context,hierarchy,for,details,since,3,2,2;string,name,default
ContextConfiguration -> String name() default ""_;1407967503;The name of the context hierarchy level represented by this configuration.__<p>If not specified the name will be inferred based on the numerical level_within all declared contexts within the hierarchy.__<p>This attribute is only applicable when used within a test class hierarchy_that is configured using {@code @ContextHierarchy}, in which case the name_can be used for <em>merging</em> or <em>overriding</em> this configuration_with configuration of the same name in hierarchy levels defined in superclasses._See the Javadoc for {@link ContextHierarchy @ContextHierarchy} for details.__@since 3.2.2;String name() default ""_;the,name,of,the,context,hierarchy,level,represented,by,this,configuration,p,if,not,specified,the,name,will,be,inferred,based,on,the,numerical,level,within,all,declared,contexts,within,the,hierarchy,p,this,attribute,is,only,applicable,when,used,within,a,test,class,hierarchy,that,is,configured,using,code,context,hierarchy,in,which,case,the,name,can,be,used,for,em,merging,em,or,em,overriding,em,this,configuration,with,configuration,of,the,same,name,in,hierarchy,levels,defined,in,superclasses,see,the,javadoc,for,link,context,hierarchy,context,hierarchy,for,details,since,3,2,2;string,name,default
ContextConfiguration -> String name() default ""_;1432246071;The name of the context hierarchy level represented by this configuration.__<p>If not specified the name will be inferred based on the numerical level_within all declared contexts within the hierarchy.__<p>This attribute is only applicable when used within a test class hierarchy_that is configured using {@code @ContextHierarchy}, in which case the name_can be used for <em>merging</em> or <em>overriding</em> this configuration_with configuration of the same name in hierarchy levels defined in superclasses._See the Javadoc for {@link ContextHierarchy @ContextHierarchy} for details.__@since 3.2.2;String name() default ""_;the,name,of,the,context,hierarchy,level,represented,by,this,configuration,p,if,not,specified,the,name,will,be,inferred,based,on,the,numerical,level,within,all,declared,contexts,within,the,hierarchy,p,this,attribute,is,only,applicable,when,used,within,a,test,class,hierarchy,that,is,configured,using,code,context,hierarchy,in,which,case,the,name,can,be,used,for,em,merging,em,or,em,overriding,em,this,configuration,with,configuration,of,the,same,name,in,hierarchy,levels,defined,in,superclasses,see,the,javadoc,for,link,context,hierarchy,context,hierarchy,for,details,since,3,2,2;string,name,default
ContextConfiguration -> String name() default ""_;1438176426;The name of the context hierarchy level represented by this configuration.__<p>If not specified the name will be inferred based on the numerical level_within all declared contexts within the hierarchy.__<p>This attribute is only applicable when used within a test class hierarchy_that is configured using {@code @ContextHierarchy}, in which case the name_can be used for <em>merging</em> or <em>overriding</em> this configuration_with configuration of the same name in hierarchy levels defined in superclasses._See the Javadoc for {@link ContextHierarchy @ContextHierarchy} for details.__@since 3.2.2;String name() default ""_;the,name,of,the,context,hierarchy,level,represented,by,this,configuration,p,if,not,specified,the,name,will,be,inferred,based,on,the,numerical,level,within,all,declared,contexts,within,the,hierarchy,p,this,attribute,is,only,applicable,when,used,within,a,test,class,hierarchy,that,is,configured,using,code,context,hierarchy,in,which,case,the,name,can,be,used,for,em,merging,em,or,em,overriding,em,this,configuration,with,configuration,of,the,same,name,in,hierarchy,levels,defined,in,superclasses,see,the,javadoc,for,link,context,hierarchy,context,hierarchy,for,details,since,3,2,2;string,name,default
ContextConfiguration -> String name() default ""_;1449505825;The name of the context hierarchy level represented by this configuration._<p>If not specified the name will be inferred based on the numerical level_within all declared contexts within the hierarchy._<p>This attribute is only applicable when used within a test class hierarchy_that is configured using {@code @ContextHierarchy}, in which case the name_can be used for <em>merging</em> or <em>overriding</em> this configuration_with configuration of the same name in hierarchy levels defined in superclasses._See the Javadoc for {@link ContextHierarchy @ContextHierarchy} for details._@since 3.2.2;String name() default ""_;the,name,of,the,context,hierarchy,level,represented,by,this,configuration,p,if,not,specified,the,name,will,be,inferred,based,on,the,numerical,level,within,all,declared,contexts,within,the,hierarchy,p,this,attribute,is,only,applicable,when,used,within,a,test,class,hierarchy,that,is,configured,using,code,context,hierarchy,in,which,case,the,name,can,be,used,for,em,merging,em,or,em,overriding,em,this,configuration,with,configuration,of,the,same,name,in,hierarchy,levels,defined,in,superclasses,see,the,javadoc,for,link,context,hierarchy,context,hierarchy,for,details,since,3,2,2;string,name,default
ContextConfiguration -> String name() default ""_;1462470884;The name of the context hierarchy level represented by this configuration._<p>If not specified the name will be inferred based on the numerical level_within all declared contexts within the hierarchy._<p>This attribute is only applicable when used within a test class hierarchy_that is configured using {@code @ContextHierarchy}, in which case the name_can be used for <em>merging</em> or <em>overriding</em> this configuration_with configuration of the same name in hierarchy levels defined in superclasses._See the Javadoc for {@link ContextHierarchy @ContextHierarchy} for details._@since 3.2.2;String name() default ""_;the,name,of,the,context,hierarchy,level,represented,by,this,configuration,p,if,not,specified,the,name,will,be,inferred,based,on,the,numerical,level,within,all,declared,contexts,within,the,hierarchy,p,this,attribute,is,only,applicable,when,used,within,a,test,class,hierarchy,that,is,configured,using,code,context,hierarchy,in,which,case,the,name,can,be,used,for,em,merging,em,or,em,overriding,em,this,configuration,with,configuration,of,the,same,name,in,hierarchy,levels,defined,in,superclasses,see,the,javadoc,for,link,context,hierarchy,context,hierarchy,for,details,since,3,2,2;string,name,default
ContextConfiguration -> String name() default ""_;1496955179;The name of the context hierarchy level represented by this configuration._<p>If not specified the name will be inferred based on the numerical level_within all declared contexts within the hierarchy._<p>This attribute is only applicable when used within a test class hierarchy_that is configured using {@code @ContextHierarchy}, in which case the name_can be used for <em>merging</em> or <em>overriding</em> this configuration_with configuration of the same name in hierarchy levels defined in superclasses._See the Javadoc for {@link ContextHierarchy @ContextHierarchy} for details._@since 3.2.2;String name() default ""_;the,name,of,the,context,hierarchy,level,represented,by,this,configuration,p,if,not,specified,the,name,will,be,inferred,based,on,the,numerical,level,within,all,declared,contexts,within,the,hierarchy,p,this,attribute,is,only,applicable,when,used,within,a,test,class,hierarchy,that,is,configured,using,code,context,hierarchy,in,which,case,the,name,can,be,used,for,em,merging,em,or,em,overriding,em,this,configuration,with,configuration,of,the,same,name,in,hierarchy,levels,defined,in,superclasses,see,the,javadoc,for,link,context,hierarchy,context,hierarchy,for,details,since,3,2,2;string,name,default
ContextConfiguration -> Class<? extends ContextLoader> loader() default ContextLoader.class_;1328020251;The type of {@link ContextLoader} (or {@link SmartContextLoader}) to use_for loading an {@link org.springframework.context.ApplicationContext_ApplicationContext}.__<p>If not specified, the loader will be inherited from the first superclass_that is annotated with {@code @ContextConfiguration} and specifies an_explicit loader. If no class in the hierarchy specifies an explicit_loader, a default loader will be used instead.__<p>The default concrete implementation chosen at runtime will be_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader}. For further details on the default behavior_of various concrete {@code ContextLoaders}, check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader},_{@link org.springframework.test.context.support.GenericXmlContextLoader_GenericXmlContextLoader}, and_{@link org.springframework.test.context.support.AnnotationConfigContextLoader_AnnotationConfigContextLoader}._@since 2.5;Class<? extends ContextLoader> loader() default ContextLoader.class_;the,type,of,link,context,loader,or,link,smart,context,loader,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,if,not,specified,the,loader,will,be,inherited,from,the,first,superclass,that,is,annotated,with,code,context,configuration,and,specifies,an,explicit,loader,if,no,class,in,the,hierarchy,specifies,an,explicit,loader,a,default,loader,will,be,used,instead,p,the,default,concrete,implementation,chosen,at,runtime,will,be,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,for,further,details,on,the,default,behavior,of,various,concrete,code,context,loaders,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,and,link,org,springframework,test,context,support,annotation,config,context,loader,annotation,config,context,loader,since,2,5;class,extends,context,loader,loader,default,context,loader,class
ContextConfiguration -> Class<? extends ContextLoader> loader() default ContextLoader.class_;1337278668;The type of {@link ContextLoader} (or {@link SmartContextLoader}) to use_for loading an {@link org.springframework.context.ApplicationContext_ApplicationContext}.__<p>If not specified, the loader will be inherited from the first superclass_that is annotated with {@code @ContextConfiguration} and specifies an_explicit loader. If no class in the hierarchy specifies an explicit_loader, a default loader will be used instead.__<p>The default concrete implementation chosen at runtime will be_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader}. For further details on the default behavior_of various concrete {@code ContextLoaders}, check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader},_{@link org.springframework.test.context.support.GenericXmlContextLoader_GenericXmlContextLoader}, and_{@link org.springframework.test.context.support.AnnotationConfigContextLoader_AnnotationConfigContextLoader}._@since 2.5;Class<? extends ContextLoader> loader() default ContextLoader.class_;the,type,of,link,context,loader,or,link,smart,context,loader,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,if,not,specified,the,loader,will,be,inherited,from,the,first,superclass,that,is,annotated,with,code,context,configuration,and,specifies,an,explicit,loader,if,no,class,in,the,hierarchy,specifies,an,explicit,loader,a,default,loader,will,be,used,instead,p,the,default,concrete,implementation,chosen,at,runtime,will,be,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,for,further,details,on,the,default,behavior,of,various,concrete,code,context,loaders,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,and,link,org,springframework,test,context,support,annotation,config,context,loader,annotation,config,context,loader,since,2,5;class,extends,context,loader,loader,default,context,loader,class
ContextConfiguration -> Class<? extends ContextLoader> loader() default ContextLoader.class_;1345469597;The type of {@link SmartContextLoader} (or {@link ContextLoader}) to use_for loading an {@link org.springframework.context.ApplicationContext_ApplicationContext}.__<p>If not specified, the loader will be inherited from the first superclass_that is annotated with {@code @ContextConfiguration} and specifies an_explicit loader. If no class in the hierarchy specifies an explicit_loader, a default loader will be used instead.__<p>The default concrete implementation chosen at runtime will be_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader}. For further details on the default behavior_of various concrete {@code ContextLoaders}, check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader},_{@link org.springframework.test.context.support.GenericXmlContextLoader_GenericXmlContextLoader}, and_{@link org.springframework.test.context.support.AnnotationConfigContextLoader_AnnotationConfigContextLoader}._@since 2.5;Class<? extends ContextLoader> loader() default ContextLoader.class_;the,type,of,link,smart,context,loader,or,link,context,loader,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,if,not,specified,the,loader,will,be,inherited,from,the,first,superclass,that,is,annotated,with,code,context,configuration,and,specifies,an,explicit,loader,if,no,class,in,the,hierarchy,specifies,an,explicit,loader,a,default,loader,will,be,used,instead,p,the,default,concrete,implementation,chosen,at,runtime,will,be,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,for,further,details,on,the,default,behavior,of,various,concrete,code,context,loaders,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,and,link,org,springframework,test,context,support,annotation,config,context,loader,annotation,config,context,loader,since,2,5;class,extends,context,loader,loader,default,context,loader,class
ContextConfiguration -> Class<? extends ContextLoader> loader() default ContextLoader.class_;1356735495;The type of {@link SmartContextLoader} (or {@link ContextLoader}) to use_for loading an {@link org.springframework.context.ApplicationContext_ApplicationContext}.__<p>If not specified, the loader will be inherited from the first superclass_that is annotated with {@code @ContextConfiguration} and specifies an_explicit loader. If no class in the hierarchy specifies an explicit_loader, a default loader will be used instead.__<p>The default concrete implementation chosen at runtime will be_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader}. For further details on the default behavior_of various concrete {@code ContextLoaders}, check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader},_{@link org.springframework.test.context.support.GenericXmlContextLoader_GenericXmlContextLoader}, and_{@link org.springframework.test.context.support.AnnotationConfigContextLoader_AnnotationConfigContextLoader}._@since 2.5;Class<? extends ContextLoader> loader() default ContextLoader.class_;the,type,of,link,smart,context,loader,or,link,context,loader,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,if,not,specified,the,loader,will,be,inherited,from,the,first,superclass,that,is,annotated,with,code,context,configuration,and,specifies,an,explicit,loader,if,no,class,in,the,hierarchy,specifies,an,explicit,loader,a,default,loader,will,be,used,instead,p,the,default,concrete,implementation,chosen,at,runtime,will,be,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,for,further,details,on,the,default,behavior,of,various,concrete,code,context,loaders,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,and,link,org,springframework,test,context,support,annotation,config,context,loader,annotation,config,context,loader,since,2,5;class,extends,context,loader,loader,default,context,loader,class
ContextConfiguration -> Class<? extends ContextLoader> loader() default ContextLoader.class_;1363208506;The type of {@link SmartContextLoader} (or {@link ContextLoader}) to use_for loading an {@link org.springframework.context.ApplicationContext_ApplicationContext}.__<p>If not specified, the loader will be inherited from the first superclass_that is annotated with {@code @ContextConfiguration} and specifies an_explicit loader. If no class in the hierarchy specifies an explicit_loader, a default loader will be used instead.__<p>The default concrete implementation chosen at runtime will be either_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader} or_{@link org.springframework.test.context.web.WebDelegatingSmartContextLoader_WebDelegatingSmartContextLoader} depending on the absence or presence of_{@link org.springframework.test.context.web.WebAppConfiguration_&#064_WebAppConfiguration}. For further details on the default behavior_of various concrete {@code SmartContextLoaders}, check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader},_{@link org.springframework.test.context.support.GenericXmlContextLoader_GenericXmlContextLoader},_{@link org.springframework.test.context.support.AnnotationConfigContextLoader_AnnotationConfigContextLoader},_{@link org.springframework.test.context.web.GenericXmlWebContextLoader_GenericXmlWebContextLoader}, and_{@link org.springframework.test.context.web.AnnotationConfigWebContextLoader_AnnotationConfigWebContextLoader}.__@since 2.5;Class<? extends ContextLoader> loader() default ContextLoader.class_;the,type,of,link,smart,context,loader,or,link,context,loader,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,if,not,specified,the,loader,will,be,inherited,from,the,first,superclass,that,is,annotated,with,code,context,configuration,and,specifies,an,explicit,loader,if,no,class,in,the,hierarchy,specifies,an,explicit,loader,a,default,loader,will,be,used,instead,p,the,default,concrete,implementation,chosen,at,runtime,will,be,either,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,or,link,org,springframework,test,context,web,web,delegating,smart,context,loader,web,delegating,smart,context,loader,depending,on,the,absence,or,presence,of,link,org,springframework,test,context,web,web,app,configuration,064,web,app,configuration,for,further,details,on,the,default,behavior,of,various,concrete,code,smart,context,loaders,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,link,org,springframework,test,context,support,annotation,config,context,loader,annotation,config,context,loader,link,org,springframework,test,context,web,generic,xml,web,context,loader,generic,xml,web,context,loader,and,link,org,springframework,test,context,web,annotation,config,web,context,loader,annotation,config,web,context,loader,since,2,5;class,extends,context,loader,loader,default,context,loader,class
ContextConfiguration -> Class<? extends ContextLoader> loader() default ContextLoader.class_;1386769390;The type of {@link SmartContextLoader} (or {@link ContextLoader}) to use_for loading an {@link org.springframework.context.ApplicationContext_ApplicationContext}.__<p>If not specified, the loader will be inherited from the first superclass_that is annotated with {@code @ContextConfiguration} and specifies an_explicit loader. If no class in the hierarchy specifies an explicit_loader, a default loader will be used instead.__<p>The default concrete implementation chosen at runtime will be either_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader} or_{@link org.springframework.test.context.web.WebDelegatingSmartContextLoader_WebDelegatingSmartContextLoader} depending on the absence or presence of_{@link org.springframework.test.context.web.WebAppConfiguration_&#064_WebAppConfiguration}. For further details on the default behavior_of various concrete {@code SmartContextLoaders}, check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader},_{@link org.springframework.test.context.support.GenericXmlContextLoader_GenericXmlContextLoader},_{@link org.springframework.test.context.support.AnnotationConfigContextLoader_AnnotationConfigContextLoader},_{@link org.springframework.test.context.web.GenericXmlWebContextLoader_GenericXmlWebContextLoader}, and_{@link org.springframework.test.context.web.AnnotationConfigWebContextLoader_AnnotationConfigWebContextLoader}.__@since 2.5;Class<? extends ContextLoader> loader() default ContextLoader.class_;the,type,of,link,smart,context,loader,or,link,context,loader,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,if,not,specified,the,loader,will,be,inherited,from,the,first,superclass,that,is,annotated,with,code,context,configuration,and,specifies,an,explicit,loader,if,no,class,in,the,hierarchy,specifies,an,explicit,loader,a,default,loader,will,be,used,instead,p,the,default,concrete,implementation,chosen,at,runtime,will,be,either,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,or,link,org,springframework,test,context,web,web,delegating,smart,context,loader,web,delegating,smart,context,loader,depending,on,the,absence,or,presence,of,link,org,springframework,test,context,web,web,app,configuration,064,web,app,configuration,for,further,details,on,the,default,behavior,of,various,concrete,code,smart,context,loaders,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,link,org,springframework,test,context,support,annotation,config,context,loader,annotation,config,context,loader,link,org,springframework,test,context,web,generic,xml,web,context,loader,generic,xml,web,context,loader,and,link,org,springframework,test,context,web,annotation,config,web,context,loader,annotation,config,web,context,loader,since,2,5;class,extends,context,loader,loader,default,context,loader,class
ContextConfiguration -> Class<? extends ContextLoader> loader() default ContextLoader.class_;1396374528;The type of {@link SmartContextLoader} (or {@link ContextLoader}) to use_for loading an {@link org.springframework.context.ApplicationContext_ApplicationContext}.__<p>If not specified, the loader will be inherited from the first superclass_that is annotated with {@code @ContextConfiguration} and specifies an_explicit loader. If no class in the hierarchy specifies an explicit_loader, a default loader will be used instead.__<p>The default concrete implementation chosen at runtime will be either_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader} or_{@link org.springframework.test.context.web.WebDelegatingSmartContextLoader_WebDelegatingSmartContextLoader} depending on the absence or presence of_{@link org.springframework.test.context.web.WebAppConfiguration_&#064_WebAppConfiguration}. For further details on the default behavior_of various concrete {@code SmartContextLoaders}, check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader},_{@link org.springframework.test.context.support.GenericXmlContextLoader_GenericXmlContextLoader},_{@link org.springframework.test.context.support.AnnotationConfigContextLoader_AnnotationConfigContextLoader},_{@link org.springframework.test.context.web.GenericXmlWebContextLoader_GenericXmlWebContextLoader}, and_{@link org.springframework.test.context.web.AnnotationConfigWebContextLoader_AnnotationConfigWebContextLoader}.__@since 2.5;Class<? extends ContextLoader> loader() default ContextLoader.class_;the,type,of,link,smart,context,loader,or,link,context,loader,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,if,not,specified,the,loader,will,be,inherited,from,the,first,superclass,that,is,annotated,with,code,context,configuration,and,specifies,an,explicit,loader,if,no,class,in,the,hierarchy,specifies,an,explicit,loader,a,default,loader,will,be,used,instead,p,the,default,concrete,implementation,chosen,at,runtime,will,be,either,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,or,link,org,springframework,test,context,web,web,delegating,smart,context,loader,web,delegating,smart,context,loader,depending,on,the,absence,or,presence,of,link,org,springframework,test,context,web,web,app,configuration,064,web,app,configuration,for,further,details,on,the,default,behavior,of,various,concrete,code,smart,context,loaders,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,link,org,springframework,test,context,support,annotation,config,context,loader,annotation,config,context,loader,link,org,springframework,test,context,web,generic,xml,web,context,loader,generic,xml,web,context,loader,and,link,org,springframework,test,context,web,annotation,config,web,context,loader,annotation,config,web,context,loader,since,2,5;class,extends,context,loader,loader,default,context,loader,class
ContextConfiguration -> Class<? extends ContextLoader> loader() default ContextLoader.class_;1397082962;The type of {@link SmartContextLoader} (or {@link ContextLoader}) to use_for loading an {@link org.springframework.context.ApplicationContext_ApplicationContext}.__<p>If not specified, the loader will be inherited from the first superclass_that is annotated with {@code @ContextConfiguration} and specifies an_explicit loader. If no class in the hierarchy specifies an explicit_loader, a default loader will be used instead.__<p>The default concrete implementation chosen at runtime will be either_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader} or_{@link org.springframework.test.context.web.WebDelegatingSmartContextLoader_WebDelegatingSmartContextLoader} depending on the absence or presence of_{@link org.springframework.test.context.web.WebAppConfiguration_&#064_WebAppConfiguration}. For further details on the default behavior_of various concrete {@code SmartContextLoaders}, check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader},_{@link org.springframework.test.context.support.GenericXmlContextLoader_GenericXmlContextLoader},_{@link org.springframework.test.context.support.AnnotationConfigContextLoader_AnnotationConfigContextLoader},_{@link org.springframework.test.context.web.GenericXmlWebContextLoader_GenericXmlWebContextLoader}, and_{@link org.springframework.test.context.web.AnnotationConfigWebContextLoader_AnnotationConfigWebContextLoader}.__@since 2.5;Class<? extends ContextLoader> loader() default ContextLoader.class_;the,type,of,link,smart,context,loader,or,link,context,loader,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,if,not,specified,the,loader,will,be,inherited,from,the,first,superclass,that,is,annotated,with,code,context,configuration,and,specifies,an,explicit,loader,if,no,class,in,the,hierarchy,specifies,an,explicit,loader,a,default,loader,will,be,used,instead,p,the,default,concrete,implementation,chosen,at,runtime,will,be,either,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,or,link,org,springframework,test,context,web,web,delegating,smart,context,loader,web,delegating,smart,context,loader,depending,on,the,absence,or,presence,of,link,org,springframework,test,context,web,web,app,configuration,064,web,app,configuration,for,further,details,on,the,default,behavior,of,various,concrete,code,smart,context,loaders,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,link,org,springframework,test,context,support,annotation,config,context,loader,annotation,config,context,loader,link,org,springframework,test,context,web,generic,xml,web,context,loader,generic,xml,web,context,loader,and,link,org,springframework,test,context,web,annotation,config,web,context,loader,annotation,config,web,context,loader,since,2,5;class,extends,context,loader,loader,default,context,loader,class
ContextConfiguration -> Class<? extends ContextLoader> loader() default ContextLoader.class_;1406214559;The type of {@link SmartContextLoader} (or {@link ContextLoader}) to use_for loading an {@link org.springframework.context.ApplicationContext_ApplicationContext}.__<p>If not specified, the loader will be inherited from the first superclass_that is annotated with {@code @ContextConfiguration} and specifies an_explicit loader. If no class in the hierarchy specifies an explicit_loader, a default loader will be used instead.__<p>The default concrete implementation chosen at runtime will be either_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader} or_{@link org.springframework.test.context.web.WebDelegatingSmartContextLoader_WebDelegatingSmartContextLoader} depending on the absence or presence of_{@link org.springframework.test.context.web.WebAppConfiguration_&#064_WebAppConfiguration}. For further details on the default behavior_of various concrete {@code SmartContextLoaders}, check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader AbstractContextLoader},_{@link org.springframework.test.context.support.GenericXmlContextLoader GenericXmlContextLoader},_{@link org.springframework.test.context.support.GenericGroovyXmlContextLoader GenericGroovyXmlContextLoader},_{@link org.springframework.test.context.support.AnnotationConfigContextLoader AnnotationConfigContextLoader},_{@link org.springframework.test.context.web.GenericXmlWebContextLoader GenericXmlWebContextLoader},_{@link org.springframework.test.context.web.GenericGroovyXmlWebContextLoader GenericGroovyXmlWebContextLoader}, and_{@link org.springframework.test.context.web.AnnotationConfigWebContextLoader AnnotationConfigWebContextLoader}.__@since 2.5;Class<? extends ContextLoader> loader() default ContextLoader.class_;the,type,of,link,smart,context,loader,or,link,context,loader,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,if,not,specified,the,loader,will,be,inherited,from,the,first,superclass,that,is,annotated,with,code,context,configuration,and,specifies,an,explicit,loader,if,no,class,in,the,hierarchy,specifies,an,explicit,loader,a,default,loader,will,be,used,instead,p,the,default,concrete,implementation,chosen,at,runtime,will,be,either,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,or,link,org,springframework,test,context,web,web,delegating,smart,context,loader,web,delegating,smart,context,loader,depending,on,the,absence,or,presence,of,link,org,springframework,test,context,web,web,app,configuration,064,web,app,configuration,for,further,details,on,the,default,behavior,of,various,concrete,code,smart,context,loaders,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,link,org,springframework,test,context,support,generic,groovy,xml,context,loader,generic,groovy,xml,context,loader,link,org,springframework,test,context,support,annotation,config,context,loader,annotation,config,context,loader,link,org,springframework,test,context,web,generic,xml,web,context,loader,generic,xml,web,context,loader,link,org,springframework,test,context,web,generic,groovy,xml,web,context,loader,generic,groovy,xml,web,context,loader,and,link,org,springframework,test,context,web,annotation,config,web,context,loader,annotation,config,web,context,loader,since,2,5;class,extends,context,loader,loader,default,context,loader,class
ContextConfiguration -> Class<? extends ContextLoader> loader() default ContextLoader.class_;1407419079;The type of {@link SmartContextLoader} (or {@link ContextLoader}) to use_for loading an {@link org.springframework.context.ApplicationContext_ApplicationContext}.__<p>If not specified, the loader will be inherited from the first superclass_that is annotated with {@code @ContextConfiguration} and specifies an_explicit loader. If no class in the hierarchy specifies an explicit_loader, a default loader will be used instead.__<p>The default concrete implementation chosen at runtime will be either_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader} or_{@link org.springframework.test.context.web.WebDelegatingSmartContextLoader_WebDelegatingSmartContextLoader} depending on the absence or presence of_{@link org.springframework.test.context.web.WebAppConfiguration_&#064_WebAppConfiguration}. For further details on the default behavior_of various concrete {@code SmartContextLoaders}, check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader AbstractContextLoader},_{@link org.springframework.test.context.support.GenericXmlContextLoader GenericXmlContextLoader},_{@link org.springframework.test.context.support.GenericGroovyXmlContextLoader GenericGroovyXmlContextLoader},_{@link org.springframework.test.context.support.AnnotationConfigContextLoader AnnotationConfigContextLoader},_{@link org.springframework.test.context.web.GenericXmlWebContextLoader GenericXmlWebContextLoader},_{@link org.springframework.test.context.web.GenericGroovyXmlWebContextLoader GenericGroovyXmlWebContextLoader}, and_{@link org.springframework.test.context.web.AnnotationConfigWebContextLoader AnnotationConfigWebContextLoader}.__@since 2.5;Class<? extends ContextLoader> loader() default ContextLoader.class_;the,type,of,link,smart,context,loader,or,link,context,loader,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,if,not,specified,the,loader,will,be,inherited,from,the,first,superclass,that,is,annotated,with,code,context,configuration,and,specifies,an,explicit,loader,if,no,class,in,the,hierarchy,specifies,an,explicit,loader,a,default,loader,will,be,used,instead,p,the,default,concrete,implementation,chosen,at,runtime,will,be,either,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,or,link,org,springframework,test,context,web,web,delegating,smart,context,loader,web,delegating,smart,context,loader,depending,on,the,absence,or,presence,of,link,org,springframework,test,context,web,web,app,configuration,064,web,app,configuration,for,further,details,on,the,default,behavior,of,various,concrete,code,smart,context,loaders,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,link,org,springframework,test,context,support,generic,groovy,xml,context,loader,generic,groovy,xml,context,loader,link,org,springframework,test,context,support,annotation,config,context,loader,annotation,config,context,loader,link,org,springframework,test,context,web,generic,xml,web,context,loader,generic,xml,web,context,loader,link,org,springframework,test,context,web,generic,groovy,xml,web,context,loader,generic,groovy,xml,web,context,loader,and,link,org,springframework,test,context,web,annotation,config,web,context,loader,annotation,config,web,context,loader,since,2,5;class,extends,context,loader,loader,default,context,loader,class
ContextConfiguration -> Class<? extends ContextLoader> loader() default ContextLoader.class_;1407967503;The type of {@link SmartContextLoader} (or {@link ContextLoader}) to use_for loading an {@link org.springframework.context.ApplicationContext_ApplicationContext}.__<p>If not specified, the loader will be inherited from the first superclass_that is annotated with {@code @ContextConfiguration} and specifies an_explicit loader. If no class in the hierarchy specifies an explicit_loader, a default loader will be used instead.__<p>The default concrete implementation chosen at runtime will be either_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader} or_{@link org.springframework.test.context.web.WebDelegatingSmartContextLoader_WebDelegatingSmartContextLoader} depending on the absence or presence of_{@link org.springframework.test.context.web.WebAppConfiguration_&#064_WebAppConfiguration}. For further details on the default behavior_of various concrete {@code SmartContextLoaders}, check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader AbstractContextLoader},_{@link org.springframework.test.context.support.GenericXmlContextLoader GenericXmlContextLoader},_{@link org.springframework.test.context.support.GenericGroovyXmlContextLoader GenericGroovyXmlContextLoader},_{@link org.springframework.test.context.support.AnnotationConfigContextLoader AnnotationConfigContextLoader},_{@link org.springframework.test.context.web.GenericXmlWebContextLoader GenericXmlWebContextLoader},_{@link org.springframework.test.context.web.GenericGroovyXmlWebContextLoader GenericGroovyXmlWebContextLoader}, and_{@link org.springframework.test.context.web.AnnotationConfigWebContextLoader AnnotationConfigWebContextLoader}.__@since 2.5;Class<? extends ContextLoader> loader() default ContextLoader.class_;the,type,of,link,smart,context,loader,or,link,context,loader,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,if,not,specified,the,loader,will,be,inherited,from,the,first,superclass,that,is,annotated,with,code,context,configuration,and,specifies,an,explicit,loader,if,no,class,in,the,hierarchy,specifies,an,explicit,loader,a,default,loader,will,be,used,instead,p,the,default,concrete,implementation,chosen,at,runtime,will,be,either,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,or,link,org,springframework,test,context,web,web,delegating,smart,context,loader,web,delegating,smart,context,loader,depending,on,the,absence,or,presence,of,link,org,springframework,test,context,web,web,app,configuration,064,web,app,configuration,for,further,details,on,the,default,behavior,of,various,concrete,code,smart,context,loaders,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,link,org,springframework,test,context,support,generic,groovy,xml,context,loader,generic,groovy,xml,context,loader,link,org,springframework,test,context,support,annotation,config,context,loader,annotation,config,context,loader,link,org,springframework,test,context,web,generic,xml,web,context,loader,generic,xml,web,context,loader,link,org,springframework,test,context,web,generic,groovy,xml,web,context,loader,generic,groovy,xml,web,context,loader,and,link,org,springframework,test,context,web,annotation,config,web,context,loader,annotation,config,web,context,loader,since,2,5;class,extends,context,loader,loader,default,context,loader,class
ContextConfiguration -> Class<? extends ContextLoader> loader() default ContextLoader.class_;1432246071;The type of {@link SmartContextLoader} (or {@link ContextLoader}) to use_for loading an {@link org.springframework.context.ApplicationContext_ApplicationContext}.__<p>If not specified, the loader will be inherited from the first superclass_that is annotated with {@code @ContextConfiguration} and specifies an_explicit loader. If no class in the hierarchy specifies an explicit_loader, a default loader will be used instead.__<p>The default concrete implementation chosen at runtime will be either_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader} or_{@link org.springframework.test.context.web.WebDelegatingSmartContextLoader_WebDelegatingSmartContextLoader} depending on the absence or presence of_{@link org.springframework.test.context.web.WebAppConfiguration_&#064_WebAppConfiguration}. For further details on the default behavior_of various concrete {@code SmartContextLoaders}, check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader AbstractContextLoader},_{@link org.springframework.test.context.support.GenericXmlContextLoader GenericXmlContextLoader},_{@link org.springframework.test.context.support.GenericGroovyXmlContextLoader GenericGroovyXmlContextLoader},_{@link org.springframework.test.context.support.AnnotationConfigContextLoader AnnotationConfigContextLoader},_{@link org.springframework.test.context.web.GenericXmlWebContextLoader GenericXmlWebContextLoader},_{@link org.springframework.test.context.web.GenericGroovyXmlWebContextLoader GenericGroovyXmlWebContextLoader}, and_{@link org.springframework.test.context.web.AnnotationConfigWebContextLoader AnnotationConfigWebContextLoader}.__@since 2.5;Class<? extends ContextLoader> loader() default ContextLoader.class_;the,type,of,link,smart,context,loader,or,link,context,loader,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,if,not,specified,the,loader,will,be,inherited,from,the,first,superclass,that,is,annotated,with,code,context,configuration,and,specifies,an,explicit,loader,if,no,class,in,the,hierarchy,specifies,an,explicit,loader,a,default,loader,will,be,used,instead,p,the,default,concrete,implementation,chosen,at,runtime,will,be,either,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,or,link,org,springframework,test,context,web,web,delegating,smart,context,loader,web,delegating,smart,context,loader,depending,on,the,absence,or,presence,of,link,org,springframework,test,context,web,web,app,configuration,064,web,app,configuration,for,further,details,on,the,default,behavior,of,various,concrete,code,smart,context,loaders,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,link,org,springframework,test,context,support,generic,groovy,xml,context,loader,generic,groovy,xml,context,loader,link,org,springframework,test,context,support,annotation,config,context,loader,annotation,config,context,loader,link,org,springframework,test,context,web,generic,xml,web,context,loader,generic,xml,web,context,loader,link,org,springframework,test,context,web,generic,groovy,xml,web,context,loader,generic,groovy,xml,web,context,loader,and,link,org,springframework,test,context,web,annotation,config,web,context,loader,annotation,config,web,context,loader,since,2,5;class,extends,context,loader,loader,default,context,loader,class
ContextConfiguration -> Class<? extends ContextLoader> loader() default ContextLoader.class_;1438176426;The type of {@link SmartContextLoader} (or {@link ContextLoader}) to use_for loading an {@link org.springframework.context.ApplicationContext_ApplicationContext}.__<p>If not specified, the loader will be inherited from the first superclass_that is annotated with {@code @ContextConfiguration} and specifies an_explicit loader. If no class in the hierarchy specifies an explicit_loader, a default loader will be used instead.__<p>The default concrete implementation chosen at runtime will be either_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader} or_{@link org.springframework.test.context.web.WebDelegatingSmartContextLoader_WebDelegatingSmartContextLoader} depending on the absence or presence of_{@link org.springframework.test.context.web.WebAppConfiguration_&#064_WebAppConfiguration}. For further details on the default behavior_of various concrete {@code SmartContextLoaders}, check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader AbstractContextLoader},_{@link org.springframework.test.context.support.GenericXmlContextLoader GenericXmlContextLoader},_{@link org.springframework.test.context.support.GenericGroovyXmlContextLoader GenericGroovyXmlContextLoader},_{@link org.springframework.test.context.support.AnnotationConfigContextLoader AnnotationConfigContextLoader},_{@link org.springframework.test.context.web.GenericXmlWebContextLoader GenericXmlWebContextLoader},_{@link org.springframework.test.context.web.GenericGroovyXmlWebContextLoader GenericGroovyXmlWebContextLoader}, and_{@link org.springframework.test.context.web.AnnotationConfigWebContextLoader AnnotationConfigWebContextLoader}.__@since 2.5;Class<? extends ContextLoader> loader() default ContextLoader.class_;the,type,of,link,smart,context,loader,or,link,context,loader,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,if,not,specified,the,loader,will,be,inherited,from,the,first,superclass,that,is,annotated,with,code,context,configuration,and,specifies,an,explicit,loader,if,no,class,in,the,hierarchy,specifies,an,explicit,loader,a,default,loader,will,be,used,instead,p,the,default,concrete,implementation,chosen,at,runtime,will,be,either,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,or,link,org,springframework,test,context,web,web,delegating,smart,context,loader,web,delegating,smart,context,loader,depending,on,the,absence,or,presence,of,link,org,springframework,test,context,web,web,app,configuration,064,web,app,configuration,for,further,details,on,the,default,behavior,of,various,concrete,code,smart,context,loaders,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,link,org,springframework,test,context,support,generic,groovy,xml,context,loader,generic,groovy,xml,context,loader,link,org,springframework,test,context,support,annotation,config,context,loader,annotation,config,context,loader,link,org,springframework,test,context,web,generic,xml,web,context,loader,generic,xml,web,context,loader,link,org,springframework,test,context,web,generic,groovy,xml,web,context,loader,generic,groovy,xml,web,context,loader,and,link,org,springframework,test,context,web,annotation,config,web,context,loader,annotation,config,web,context,loader,since,2,5;class,extends,context,loader,loader,default,context,loader,class
ContextConfiguration -> Class<? extends ContextLoader> loader() default ContextLoader.class_;1449505825;The type of {@link SmartContextLoader} (or {@link ContextLoader}) to use_for loading an {@link org.springframework.context.ApplicationContext_ApplicationContext}._<p>If not specified, the loader will be inherited from the first superclass_that is annotated with {@code @ContextConfiguration} and specifies an_explicit loader. If no class in the hierarchy specifies an explicit_loader, a default loader will be used instead._<p>The default concrete implementation chosen at runtime will be either_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader} or_{@link org.springframework.test.context.web.WebDelegatingSmartContextLoader_WebDelegatingSmartContextLoader} depending on the absence or presence of_{@link org.springframework.test.context.web.WebAppConfiguration_&#064_WebAppConfiguration}. For further details on the default behavior_of various concrete {@code SmartContextLoaders}, check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader AbstractContextLoader},_{@link org.springframework.test.context.support.GenericXmlContextLoader GenericXmlContextLoader},_{@link org.springframework.test.context.support.GenericGroovyXmlContextLoader GenericGroovyXmlContextLoader},_{@link org.springframework.test.context.support.AnnotationConfigContextLoader AnnotationConfigContextLoader},_{@link org.springframework.test.context.web.GenericXmlWebContextLoader GenericXmlWebContextLoader},_{@link org.springframework.test.context.web.GenericGroovyXmlWebContextLoader GenericGroovyXmlWebContextLoader}, and_{@link org.springframework.test.context.web.AnnotationConfigWebContextLoader AnnotationConfigWebContextLoader}._@since 2.5;Class<? extends ContextLoader> loader() default ContextLoader.class_;the,type,of,link,smart,context,loader,or,link,context,loader,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,if,not,specified,the,loader,will,be,inherited,from,the,first,superclass,that,is,annotated,with,code,context,configuration,and,specifies,an,explicit,loader,if,no,class,in,the,hierarchy,specifies,an,explicit,loader,a,default,loader,will,be,used,instead,p,the,default,concrete,implementation,chosen,at,runtime,will,be,either,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,or,link,org,springframework,test,context,web,web,delegating,smart,context,loader,web,delegating,smart,context,loader,depending,on,the,absence,or,presence,of,link,org,springframework,test,context,web,web,app,configuration,064,web,app,configuration,for,further,details,on,the,default,behavior,of,various,concrete,code,smart,context,loaders,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,link,org,springframework,test,context,support,generic,groovy,xml,context,loader,generic,groovy,xml,context,loader,link,org,springframework,test,context,support,annotation,config,context,loader,annotation,config,context,loader,link,org,springframework,test,context,web,generic,xml,web,context,loader,generic,xml,web,context,loader,link,org,springframework,test,context,web,generic,groovy,xml,web,context,loader,generic,groovy,xml,web,context,loader,and,link,org,springframework,test,context,web,annotation,config,web,context,loader,annotation,config,web,context,loader,since,2,5;class,extends,context,loader,loader,default,context,loader,class
ContextConfiguration -> Class<? extends ContextLoader> loader() default ContextLoader.class_;1462470884;The type of {@link SmartContextLoader} (or {@link ContextLoader}) to use_for loading an {@link org.springframework.context.ApplicationContext_ApplicationContext}._<p>If not specified, the loader will be inherited from the first superclass_that is annotated with {@code @ContextConfiguration} and specifies an_explicit loader. If no class in the hierarchy specifies an explicit_loader, a default loader will be used instead._<p>The default concrete implementation chosen at runtime will be either_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader} or_{@link org.springframework.test.context.web.WebDelegatingSmartContextLoader_WebDelegatingSmartContextLoader} depending on the absence or presence of_{@link org.springframework.test.context.web.WebAppConfiguration_&#064_WebAppConfiguration}. For further details on the default behavior_of various concrete {@code SmartContextLoaders}, check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader AbstractContextLoader},_{@link org.springframework.test.context.support.GenericXmlContextLoader GenericXmlContextLoader},_{@link org.springframework.test.context.support.GenericGroovyXmlContextLoader GenericGroovyXmlContextLoader},_{@link org.springframework.test.context.support.AnnotationConfigContextLoader AnnotationConfigContextLoader},_{@link org.springframework.test.context.web.GenericXmlWebContextLoader GenericXmlWebContextLoader},_{@link org.springframework.test.context.web.GenericGroovyXmlWebContextLoader GenericGroovyXmlWebContextLoader}, and_{@link org.springframework.test.context.web.AnnotationConfigWebContextLoader AnnotationConfigWebContextLoader}._@since 2.5;Class<? extends ContextLoader> loader() default ContextLoader.class_;the,type,of,link,smart,context,loader,or,link,context,loader,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,if,not,specified,the,loader,will,be,inherited,from,the,first,superclass,that,is,annotated,with,code,context,configuration,and,specifies,an,explicit,loader,if,no,class,in,the,hierarchy,specifies,an,explicit,loader,a,default,loader,will,be,used,instead,p,the,default,concrete,implementation,chosen,at,runtime,will,be,either,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,or,link,org,springframework,test,context,web,web,delegating,smart,context,loader,web,delegating,smart,context,loader,depending,on,the,absence,or,presence,of,link,org,springframework,test,context,web,web,app,configuration,064,web,app,configuration,for,further,details,on,the,default,behavior,of,various,concrete,code,smart,context,loaders,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,link,org,springframework,test,context,support,generic,groovy,xml,context,loader,generic,groovy,xml,context,loader,link,org,springframework,test,context,support,annotation,config,context,loader,annotation,config,context,loader,link,org,springframework,test,context,web,generic,xml,web,context,loader,generic,xml,web,context,loader,link,org,springframework,test,context,web,generic,groovy,xml,web,context,loader,generic,groovy,xml,web,context,loader,and,link,org,springframework,test,context,web,annotation,config,web,context,loader,annotation,config,web,context,loader,since,2,5;class,extends,context,loader,loader,default,context,loader,class
ContextConfiguration -> Class<? extends ContextLoader> loader() default ContextLoader.class_;1496955179;The type of {@link SmartContextLoader} (or {@link ContextLoader}) to use_for loading an {@link org.springframework.context.ApplicationContext_ApplicationContext}._<p>If not specified, the loader will be inherited from the first superclass_that is annotated with {@code @ContextConfiguration} and specifies an_explicit loader. If no class in the hierarchy specifies an explicit_loader, a default loader will be used instead._<p>The default concrete implementation chosen at runtime will be either_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader} or_{@link org.springframework.test.context.web.WebDelegatingSmartContextLoader_WebDelegatingSmartContextLoader} depending on the absence or presence of_{@link org.springframework.test.context.web.WebAppConfiguration_&#064_WebAppConfiguration}. For further details on the default behavior_of various concrete {@code SmartContextLoaders}, check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader AbstractContextLoader},_{@link org.springframework.test.context.support.GenericXmlContextLoader GenericXmlContextLoader},_{@link org.springframework.test.context.support.GenericGroovyXmlContextLoader GenericGroovyXmlContextLoader},_{@link org.springframework.test.context.support.AnnotationConfigContextLoader AnnotationConfigContextLoader},_{@link org.springframework.test.context.web.GenericXmlWebContextLoader GenericXmlWebContextLoader},_{@link org.springframework.test.context.web.GenericGroovyXmlWebContextLoader GenericGroovyXmlWebContextLoader}, and_{@link org.springframework.test.context.web.AnnotationConfigWebContextLoader AnnotationConfigWebContextLoader}._@since 2.5;Class<? extends ContextLoader> loader() default ContextLoader.class_;the,type,of,link,smart,context,loader,or,link,context,loader,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,if,not,specified,the,loader,will,be,inherited,from,the,first,superclass,that,is,annotated,with,code,context,configuration,and,specifies,an,explicit,loader,if,no,class,in,the,hierarchy,specifies,an,explicit,loader,a,default,loader,will,be,used,instead,p,the,default,concrete,implementation,chosen,at,runtime,will,be,either,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,or,link,org,springframework,test,context,web,web,delegating,smart,context,loader,web,delegating,smart,context,loader,depending,on,the,absence,or,presence,of,link,org,springframework,test,context,web,web,app,configuration,064,web,app,configuration,for,further,details,on,the,default,behavior,of,various,concrete,code,smart,context,loaders,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,link,org,springframework,test,context,support,generic,groovy,xml,context,loader,generic,groovy,xml,context,loader,link,org,springframework,test,context,support,annotation,config,context,loader,annotation,config,context,loader,link,org,springframework,test,context,web,generic,xml,web,context,loader,generic,xml,web,context,loader,link,org,springframework,test,context,web,generic,groovy,xml,web,context,loader,generic,groovy,xml,web,context,loader,and,link,org,springframework,test,context,web,annotation,config,web,context,loader,annotation,config,web,context,loader,since,2,5;class,extends,context,loader,loader,default,context,loader,class
ContextConfiguration -> @AliasFor("locations") 	String[] value() default {}_;1438176426;Alias for {@link #locations}.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #locations}, but it may be used instead of {@link #locations}.__@since 3.0_@see #inheritLocations;@AliasFor("locations")_	String[] value() default {}_;alias,for,link,locations,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,but,it,may,be,used,instead,of,link,locations,since,3,0,see,inherit,locations;alias,for,locations,string,value,default
ContextConfiguration -> @AliasFor("locations") 	String[] value() default {}_;1449505825;Alias for {@link #locations}._<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #locations}, but it may be used instead of {@link #locations}._@since 3.0_@see #inheritLocations;@AliasFor("locations")_	String[] value() default {}_;alias,for,link,locations,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,but,it,may,be,used,instead,of,link,locations,since,3,0,see,inherit,locations;alias,for,locations,string,value,default
ContextConfiguration -> @AliasFor("locations") 	String[] value() default {}_;1462470884;Alias for {@link #locations}._<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #locations}, but it may be used instead of {@link #locations}._@since 3.0_@see #inheritLocations;@AliasFor("locations")_	String[] value() default {}_;alias,for,link,locations,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,but,it,may,be,used,instead,of,link,locations,since,3,0,see,inherit,locations;alias,for,locations,string,value,default
ContextConfiguration -> @AliasFor("locations") 	String[] value() default {}_;1496955179;Alias for {@link #locations}._<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #locations}, but it may be used instead of {@link #locations}._@since 3.0_@see #inheritLocations;@AliasFor("locations")_	String[] value() default {}_;alias,for,link,locations,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,but,it,may,be,used,instead,of,link,locations,since,3,0,see,inherit,locations;alias,for,locations,string,value,default
ContextConfiguration -> @AliasFor("value") 	String[] locations() default {}_;1438176426;The resource locations to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader#modifyLocations_AbstractContextLoader.modifyLocations()} for details on how a location_will be interpreted at runtime, in particular in case of a relative_path. Also, check out the documentation on_{@link org.springframework.test.context.support.AbstractContextLoader#generateDefaultLocations_AbstractContextLoader.generateDefaultLocations()} for details on the_default locations that are going to be used if none are specified.__<p>Note that the aforementioned default rules only apply for a standard_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader} subclass such as_{@link org.springframework.test.context.support.GenericXmlContextLoader GenericXmlContextLoader} or_{@link org.springframework.test.context.support.GenericGroovyXmlContextLoader GenericGroovyXmlContextLoader}_which are the effective default implementations used at runtime if_{@code locations} are configured. See the documentation for {@link #loader}_for further details regarding default loaders.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value}, but it may be used instead of {@link #value}.__@since 2.5_@see #inheritLocations;@AliasFor("value")_	String[] locations() default {}_;the,resource,locations,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,modify,locations,abstract,context,loader,modify,locations,for,details,on,how,a,location,will,be,interpreted,at,runtime,in,particular,in,case,of,a,relative,path,also,check,out,the,documentation,on,link,org,springframework,test,context,support,abstract,context,loader,generate,default,locations,abstract,context,loader,generate,default,locations,for,details,on,the,default,locations,that,are,going,to,be,used,if,none,are,specified,p,note,that,the,aforementioned,default,rules,only,apply,for,a,standard,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,subclass,such,as,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,or,link,org,springframework,test,context,support,generic,groovy,xml,context,loader,generic,groovy,xml,context,loader,which,are,the,effective,default,implementations,used,at,runtime,if,code,locations,are,configured,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,but,it,may,be,used,instead,of,link,value,since,2,5,see,inherit,locations;alias,for,value,string,locations,default
ContextConfiguration -> @AliasFor("value") 	String[] locations() default {}_;1449505825;The resource locations to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}._<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader#modifyLocations_AbstractContextLoader.modifyLocations()} for details on how a location_will be interpreted at runtime, in particular in case of a relative_path. Also, check out the documentation on_{@link org.springframework.test.context.support.AbstractContextLoader#generateDefaultLocations_AbstractContextLoader.generateDefaultLocations()} for details on the_default locations that are going to be used if none are specified._<p>Note that the aforementioned default rules only apply for a standard_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader} subclass such as_{@link org.springframework.test.context.support.GenericXmlContextLoader GenericXmlContextLoader} or_{@link org.springframework.test.context.support.GenericGroovyXmlContextLoader GenericGroovyXmlContextLoader}_which are the effective default implementations used at runtime if_{@code locations} are configured. See the documentation for {@link #loader}_for further details regarding default loaders._<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value}, but it may be used instead of {@link #value}._@since 2.5_@see #inheritLocations;@AliasFor("value")_	String[] locations() default {}_;the,resource,locations,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,modify,locations,abstract,context,loader,modify,locations,for,details,on,how,a,location,will,be,interpreted,at,runtime,in,particular,in,case,of,a,relative,path,also,check,out,the,documentation,on,link,org,springframework,test,context,support,abstract,context,loader,generate,default,locations,abstract,context,loader,generate,default,locations,for,details,on,the,default,locations,that,are,going,to,be,used,if,none,are,specified,p,note,that,the,aforementioned,default,rules,only,apply,for,a,standard,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,subclass,such,as,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,or,link,org,springframework,test,context,support,generic,groovy,xml,context,loader,generic,groovy,xml,context,loader,which,are,the,effective,default,implementations,used,at,runtime,if,code,locations,are,configured,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,but,it,may,be,used,instead,of,link,value,since,2,5,see,inherit,locations;alias,for,value,string,locations,default
ContextConfiguration -> @AliasFor("value") 	String[] locations() default {}_;1462470884;The resource locations to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}._<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader#modifyLocations_AbstractContextLoader.modifyLocations()} for details on how a location_will be interpreted at runtime, in particular in case of a relative_path. Also, check out the documentation on_{@link org.springframework.test.context.support.AbstractContextLoader#generateDefaultLocations_AbstractContextLoader.generateDefaultLocations()} for details on the_default locations that are going to be used if none are specified._<p>Note that the aforementioned default rules only apply for a standard_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader} subclass such as_{@link org.springframework.test.context.support.GenericXmlContextLoader GenericXmlContextLoader} or_{@link org.springframework.test.context.support.GenericGroovyXmlContextLoader GenericGroovyXmlContextLoader}_which are the effective default implementations used at runtime if_{@code locations} are configured. See the documentation for {@link #loader}_for further details regarding default loaders._<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value}, but it may be used instead of {@link #value}._@since 2.5_@see #inheritLocations;@AliasFor("value")_	String[] locations() default {}_;the,resource,locations,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,modify,locations,abstract,context,loader,modify,locations,for,details,on,how,a,location,will,be,interpreted,at,runtime,in,particular,in,case,of,a,relative,path,also,check,out,the,documentation,on,link,org,springframework,test,context,support,abstract,context,loader,generate,default,locations,abstract,context,loader,generate,default,locations,for,details,on,the,default,locations,that,are,going,to,be,used,if,none,are,specified,p,note,that,the,aforementioned,default,rules,only,apply,for,a,standard,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,subclass,such,as,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,or,link,org,springframework,test,context,support,generic,groovy,xml,context,loader,generic,groovy,xml,context,loader,which,are,the,effective,default,implementations,used,at,runtime,if,code,locations,are,configured,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,but,it,may,be,used,instead,of,link,value,since,2,5,see,inherit,locations;alias,for,value,string,locations,default
ContextConfiguration -> @AliasFor("value") 	String[] locations() default {}_;1496955179;The resource locations to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}._<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader#modifyLocations_AbstractContextLoader.modifyLocations()} for details on how a location_will be interpreted at runtime, in particular in case of a relative_path. Also, check out the documentation on_{@link org.springframework.test.context.support.AbstractContextLoader#generateDefaultLocations_AbstractContextLoader.generateDefaultLocations()} for details on the_default locations that are going to be used if none are specified._<p>Note that the aforementioned default rules only apply for a standard_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader} subclass such as_{@link org.springframework.test.context.support.GenericXmlContextLoader GenericXmlContextLoader} or_{@link org.springframework.test.context.support.GenericGroovyXmlContextLoader GenericGroovyXmlContextLoader}_which are the effective default implementations used at runtime if_{@code locations} are configured. See the documentation for {@link #loader}_for further details regarding default loaders._<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value}, but it may be used instead of {@link #value}._@since 2.5_@see #inheritLocations;@AliasFor("value")_	String[] locations() default {}_;the,resource,locations,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,modify,locations,abstract,context,loader,modify,locations,for,details,on,how,a,location,will,be,interpreted,at,runtime,in,particular,in,case,of,a,relative,path,also,check,out,the,documentation,on,link,org,springframework,test,context,support,abstract,context,loader,generate,default,locations,abstract,context,loader,generate,default,locations,for,details,on,the,default,locations,that,are,going,to,be,used,if,none,are,specified,p,note,that,the,aforementioned,default,rules,only,apply,for,a,standard,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,subclass,such,as,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,or,link,org,springframework,test,context,support,generic,groovy,xml,context,loader,generic,groovy,xml,context,loader,which,are,the,effective,default,implementations,used,at,runtime,if,code,locations,are,configured,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,but,it,may,be,used,instead,of,link,value,since,2,5,see,inherit,locations;alias,for,value,string,locations,default
ContextConfiguration -> Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;1345469597;The application context <em>initializer classes</em> to use for initializing_a {@link ConfigurableApplicationContext}.__<p>The concrete {@code ConfigurableApplicationContext} type supported by each_declared initializer must be compatible with the type of {@code ApplicationContext}_created by the {@link SmartContextLoader} in use.__<p>{@code SmartContextLoader} implementations typically detect whether_Spring's {@link org.springframework.core.Ordered Ordered} interface has been_implemented or if the @{@link org.springframework.core.annotation.Order Order}_annotation is present and sort instances accordingly prior to invoking them.__@since 3.2_@see org.springframework.context.ApplicationContextInitializer_@see org.springframework.context.ConfigurableApplicationContext_@see #inheritInitializers_@see #loader;Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;the,application,context,em,initializer,classes,em,to,use,for,initializing,a,link,configurable,application,context,p,the,concrete,code,configurable,application,context,type,supported,by,each,declared,initializer,must,be,compatible,with,the,type,of,code,application,context,created,by,the,link,smart,context,loader,in,use,p,code,smart,context,loader,implementations,typically,detect,whether,spring,s,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,or,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,and,sort,instances,accordingly,prior,to,invoking,them,since,3,2,see,org,springframework,context,application,context,initializer,see,org,springframework,context,configurable,application,context,see,inherit,initializers,see,loader;class,extends,application,context,initializer,extends,configurable,application,context,initializers,default
ContextConfiguration -> Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;1356735495;The application context <em>initializer classes</em> to use for initializing_a {@link ConfigurableApplicationContext}.__<p>The concrete {@code ConfigurableApplicationContext} type supported by each_declared initializer must be compatible with the type of {@code ApplicationContext}_created by the {@link SmartContextLoader} in use.__<p>{@code SmartContextLoader} implementations typically detect whether_Spring's {@link org.springframework.core.Ordered Ordered} interface has been_implemented or if the @{@link org.springframework.core.annotation.Order Order}_annotation is present and sort instances accordingly prior to invoking them.__@since 3.2_@see org.springframework.context.ApplicationContextInitializer_@see org.springframework.context.ConfigurableApplicationContext_@see #inheritInitializers_@see #loader;Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;the,application,context,em,initializer,classes,em,to,use,for,initializing,a,link,configurable,application,context,p,the,concrete,code,configurable,application,context,type,supported,by,each,declared,initializer,must,be,compatible,with,the,type,of,code,application,context,created,by,the,link,smart,context,loader,in,use,p,code,smart,context,loader,implementations,typically,detect,whether,spring,s,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,or,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,and,sort,instances,accordingly,prior,to,invoking,them,since,3,2,see,org,springframework,context,application,context,initializer,see,org,springframework,context,configurable,application,context,see,inherit,initializers,see,loader;class,extends,application,context,initializer,extends,configurable,application,context,initializers,default
ContextConfiguration -> Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;1363208506;The application context <em>initializer classes</em> to use for initializing_a {@link ConfigurableApplicationContext}.__<p>The concrete {@code ConfigurableApplicationContext} type supported by each_declared initializer must be compatible with the type of {@code ApplicationContext}_created by the {@link SmartContextLoader} in use.__<p>{@code SmartContextLoader} implementations typically detect whether_Spring's {@link org.springframework.core.Ordered Ordered} interface has been_implemented or if the @{@link org.springframework.core.annotation.Order Order}_annotation is present and sort instances accordingly prior to invoking them.__@since 3.2_@see org.springframework.context.ApplicationContextInitializer_@see org.springframework.context.ConfigurableApplicationContext_@see #inheritInitializers_@see #loader;Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;the,application,context,em,initializer,classes,em,to,use,for,initializing,a,link,configurable,application,context,p,the,concrete,code,configurable,application,context,type,supported,by,each,declared,initializer,must,be,compatible,with,the,type,of,code,application,context,created,by,the,link,smart,context,loader,in,use,p,code,smart,context,loader,implementations,typically,detect,whether,spring,s,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,or,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,and,sort,instances,accordingly,prior,to,invoking,them,since,3,2,see,org,springframework,context,application,context,initializer,see,org,springframework,context,configurable,application,context,see,inherit,initializers,see,loader;class,extends,application,context,initializer,extends,configurable,application,context,initializers,default
ContextConfiguration -> Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;1386769390;The application context <em>initializer classes</em> to use for initializing_a {@link ConfigurableApplicationContext}.__<p>The concrete {@code ConfigurableApplicationContext} type supported by each_declared initializer must be compatible with the type of {@code ApplicationContext}_created by the {@link SmartContextLoader} in use.__<p>{@code SmartContextLoader} implementations typically detect whether_Spring's {@link org.springframework.core.Ordered Ordered} interface has been_implemented or if the @{@link org.springframework.core.annotation.Order Order}_annotation is present and sort instances accordingly prior to invoking them.__@since 3.2_@see org.springframework.context.ApplicationContextInitializer_@see org.springframework.context.ConfigurableApplicationContext_@see #inheritInitializers_@see #loader;Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;the,application,context,em,initializer,classes,em,to,use,for,initializing,a,link,configurable,application,context,p,the,concrete,code,configurable,application,context,type,supported,by,each,declared,initializer,must,be,compatible,with,the,type,of,code,application,context,created,by,the,link,smart,context,loader,in,use,p,code,smart,context,loader,implementations,typically,detect,whether,spring,s,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,or,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,and,sort,instances,accordingly,prior,to,invoking,them,since,3,2,see,org,springframework,context,application,context,initializer,see,org,springframework,context,configurable,application,context,see,inherit,initializers,see,loader;class,extends,application,context,initializer,extends,configurable,application,context,initializers,default
ContextConfiguration -> Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;1396374528;The application context <em>initializer classes</em> to use for initializing_a {@link ConfigurableApplicationContext}.__<p>The concrete {@code ConfigurableApplicationContext} type supported by each_declared initializer must be compatible with the type of {@code ApplicationContext}_created by the {@link SmartContextLoader} in use.__<p>{@code SmartContextLoader} implementations typically detect whether_Spring's {@link org.springframework.core.Ordered Ordered} interface has been_implemented or if the @{@link org.springframework.core.annotation.Order Order}_annotation is present and sort instances accordingly prior to invoking them.__@since 3.2_@see org.springframework.context.ApplicationContextInitializer_@see org.springframework.context.ConfigurableApplicationContext_@see #inheritInitializers_@see #loader;Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;the,application,context,em,initializer,classes,em,to,use,for,initializing,a,link,configurable,application,context,p,the,concrete,code,configurable,application,context,type,supported,by,each,declared,initializer,must,be,compatible,with,the,type,of,code,application,context,created,by,the,link,smart,context,loader,in,use,p,code,smart,context,loader,implementations,typically,detect,whether,spring,s,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,or,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,and,sort,instances,accordingly,prior,to,invoking,them,since,3,2,see,org,springframework,context,application,context,initializer,see,org,springframework,context,configurable,application,context,see,inherit,initializers,see,loader;class,extends,application,context,initializer,extends,configurable,application,context,initializers,default
ContextConfiguration -> Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;1397082962;The application context <em>initializer classes</em> to use for initializing_a {@link ConfigurableApplicationContext}.__<p>The concrete {@code ConfigurableApplicationContext} type supported by each_declared initializer must be compatible with the type of {@code ApplicationContext}_created by the {@link SmartContextLoader} in use.__<p>{@code SmartContextLoader} implementations typically detect whether_Spring's {@link org.springframework.core.Ordered Ordered} interface has been_implemented or if the @{@link org.springframework.core.annotation.Order Order}_annotation is present and sort instances accordingly prior to invoking them.__@since 3.2_@see org.springframework.context.ApplicationContextInitializer_@see org.springframework.context.ConfigurableApplicationContext_@see #inheritInitializers_@see #loader;Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;the,application,context,em,initializer,classes,em,to,use,for,initializing,a,link,configurable,application,context,p,the,concrete,code,configurable,application,context,type,supported,by,each,declared,initializer,must,be,compatible,with,the,type,of,code,application,context,created,by,the,link,smart,context,loader,in,use,p,code,smart,context,loader,implementations,typically,detect,whether,spring,s,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,or,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,and,sort,instances,accordingly,prior,to,invoking,them,since,3,2,see,org,springframework,context,application,context,initializer,see,org,springframework,context,configurable,application,context,see,inherit,initializers,see,loader;class,extends,application,context,initializer,extends,configurable,application,context,initializers,default
ContextConfiguration -> Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;1406214559;The application context <em>initializer classes</em> to use for initializing_a {@link ConfigurableApplicationContext}.__<p>The concrete {@code ConfigurableApplicationContext} type supported by each_declared initializer must be compatible with the type of {@code ApplicationContext}_created by the {@link SmartContextLoader} in use.__<p>{@code SmartContextLoader} implementations typically detect whether_Spring's {@link org.springframework.core.Ordered Ordered} interface has been_implemented or if the @{@link org.springframework.core.annotation.Order Order}_annotation is present and sort instances accordingly prior to invoking them.__@since 3.2_@see org.springframework.context.ApplicationContextInitializer_@see org.springframework.context.ConfigurableApplicationContext_@see #inheritInitializers_@see #loader;Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;the,application,context,em,initializer,classes,em,to,use,for,initializing,a,link,configurable,application,context,p,the,concrete,code,configurable,application,context,type,supported,by,each,declared,initializer,must,be,compatible,with,the,type,of,code,application,context,created,by,the,link,smart,context,loader,in,use,p,code,smart,context,loader,implementations,typically,detect,whether,spring,s,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,or,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,and,sort,instances,accordingly,prior,to,invoking,them,since,3,2,see,org,springframework,context,application,context,initializer,see,org,springframework,context,configurable,application,context,see,inherit,initializers,see,loader;class,extends,application,context,initializer,extends,configurable,application,context,initializers,default
ContextConfiguration -> Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;1407419079;The application context <em>initializer classes</em> to use for initializing_a {@link ConfigurableApplicationContext}.__<p>The concrete {@code ConfigurableApplicationContext} type supported by each_declared initializer must be compatible with the type of {@code ApplicationContext}_created by the {@link SmartContextLoader} in use.__<p>{@code SmartContextLoader} implementations typically detect whether_Spring's {@link org.springframework.core.Ordered Ordered} interface has been_implemented or if the @{@link org.springframework.core.annotation.Order Order}_annotation is present and sort instances accordingly prior to invoking them.__@since 3.2_@see org.springframework.context.ApplicationContextInitializer_@see org.springframework.context.ConfigurableApplicationContext_@see #inheritInitializers_@see #loader;Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;the,application,context,em,initializer,classes,em,to,use,for,initializing,a,link,configurable,application,context,p,the,concrete,code,configurable,application,context,type,supported,by,each,declared,initializer,must,be,compatible,with,the,type,of,code,application,context,created,by,the,link,smart,context,loader,in,use,p,code,smart,context,loader,implementations,typically,detect,whether,spring,s,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,or,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,and,sort,instances,accordingly,prior,to,invoking,them,since,3,2,see,org,springframework,context,application,context,initializer,see,org,springframework,context,configurable,application,context,see,inherit,initializers,see,loader;class,extends,application,context,initializer,extends,configurable,application,context,initializers,default
ContextConfiguration -> Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;1407967503;The application context <em>initializer classes</em> to use for initializing_a {@link ConfigurableApplicationContext}.__<p>The concrete {@code ConfigurableApplicationContext} type supported by each_declared initializer must be compatible with the type of {@code ApplicationContext}_created by the {@link SmartContextLoader} in use.__<p>{@code SmartContextLoader} implementations typically detect whether_Spring's {@link org.springframework.core.Ordered Ordered} interface has been_implemented or if the @{@link org.springframework.core.annotation.Order Order}_annotation is present and sort instances accordingly prior to invoking them.__@since 3.2_@see org.springframework.context.ApplicationContextInitializer_@see org.springframework.context.ConfigurableApplicationContext_@see #inheritInitializers_@see #loader;Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;the,application,context,em,initializer,classes,em,to,use,for,initializing,a,link,configurable,application,context,p,the,concrete,code,configurable,application,context,type,supported,by,each,declared,initializer,must,be,compatible,with,the,type,of,code,application,context,created,by,the,link,smart,context,loader,in,use,p,code,smart,context,loader,implementations,typically,detect,whether,spring,s,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,or,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,and,sort,instances,accordingly,prior,to,invoking,them,since,3,2,see,org,springframework,context,application,context,initializer,see,org,springframework,context,configurable,application,context,see,inherit,initializers,see,loader;class,extends,application,context,initializer,extends,configurable,application,context,initializers,default
ContextConfiguration -> Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;1432246071;The application context <em>initializer classes</em> to use for initializing_a {@link ConfigurableApplicationContext}.__<p>The concrete {@code ConfigurableApplicationContext} type supported by each_declared initializer must be compatible with the type of {@code ApplicationContext}_created by the {@link SmartContextLoader} in use.__<p>{@code SmartContextLoader} implementations typically detect whether_Spring's {@link org.springframework.core.Ordered Ordered} interface has been_implemented or if the @{@link org.springframework.core.annotation.Order Order}_annotation is present and sort instances accordingly prior to invoking them.__@since 3.2_@see org.springframework.context.ApplicationContextInitializer_@see org.springframework.context.ConfigurableApplicationContext_@see #inheritInitializers_@see #loader;Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;the,application,context,em,initializer,classes,em,to,use,for,initializing,a,link,configurable,application,context,p,the,concrete,code,configurable,application,context,type,supported,by,each,declared,initializer,must,be,compatible,with,the,type,of,code,application,context,created,by,the,link,smart,context,loader,in,use,p,code,smart,context,loader,implementations,typically,detect,whether,spring,s,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,or,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,and,sort,instances,accordingly,prior,to,invoking,them,since,3,2,see,org,springframework,context,application,context,initializer,see,org,springframework,context,configurable,application,context,see,inherit,initializers,see,loader;class,extends,application,context,initializer,extends,configurable,application,context,initializers,default
ContextConfiguration -> Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;1438176426;The application context <em>initializer classes</em> to use for initializing_a {@link ConfigurableApplicationContext}.__<p>The concrete {@code ConfigurableApplicationContext} type supported by each_declared initializer must be compatible with the type of {@code ApplicationContext}_created by the {@link SmartContextLoader} in use.__<p>{@code SmartContextLoader} implementations typically detect whether_Spring's {@link org.springframework.core.Ordered Ordered} interface has been_implemented or if the @{@link org.springframework.core.annotation.Order Order}_annotation is present and sort instances accordingly prior to invoking them.__@since 3.2_@see org.springframework.context.ApplicationContextInitializer_@see org.springframework.context.ConfigurableApplicationContext_@see #inheritInitializers_@see #loader;Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;the,application,context,em,initializer,classes,em,to,use,for,initializing,a,link,configurable,application,context,p,the,concrete,code,configurable,application,context,type,supported,by,each,declared,initializer,must,be,compatible,with,the,type,of,code,application,context,created,by,the,link,smart,context,loader,in,use,p,code,smart,context,loader,implementations,typically,detect,whether,spring,s,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,or,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,and,sort,instances,accordingly,prior,to,invoking,them,since,3,2,see,org,springframework,context,application,context,initializer,see,org,springframework,context,configurable,application,context,see,inherit,initializers,see,loader;class,extends,application,context,initializer,extends,configurable,application,context,initializers,default
ContextConfiguration -> Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;1449505825;The application context <em>initializer classes</em> to use for initializing_a {@link ConfigurableApplicationContext}._<p>The concrete {@code ConfigurableApplicationContext} type supported by each_declared initializer must be compatible with the type of {@code ApplicationContext}_created by the {@link SmartContextLoader} in use._<p>{@code SmartContextLoader} implementations typically detect whether_Spring's {@link org.springframework.core.Ordered Ordered} interface has been_implemented or if the @{@link org.springframework.core.annotation.Order Order}_annotation is present and sort instances accordingly prior to invoking them._@since 3.2_@see org.springframework.context.ApplicationContextInitializer_@see org.springframework.context.ConfigurableApplicationContext_@see #inheritInitializers_@see #loader;Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;the,application,context,em,initializer,classes,em,to,use,for,initializing,a,link,configurable,application,context,p,the,concrete,code,configurable,application,context,type,supported,by,each,declared,initializer,must,be,compatible,with,the,type,of,code,application,context,created,by,the,link,smart,context,loader,in,use,p,code,smart,context,loader,implementations,typically,detect,whether,spring,s,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,or,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,and,sort,instances,accordingly,prior,to,invoking,them,since,3,2,see,org,springframework,context,application,context,initializer,see,org,springframework,context,configurable,application,context,see,inherit,initializers,see,loader;class,extends,application,context,initializer,extends,configurable,application,context,initializers,default
ContextConfiguration -> Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;1462470884;The application context <em>initializer classes</em> to use for initializing_a {@link ConfigurableApplicationContext}._<p>The concrete {@code ConfigurableApplicationContext} type supported by each_declared initializer must be compatible with the type of {@code ApplicationContext}_created by the {@link SmartContextLoader} in use._<p>{@code SmartContextLoader} implementations typically detect whether_Spring's {@link org.springframework.core.Ordered Ordered} interface has been_implemented or if the @{@link org.springframework.core.annotation.Order Order}_annotation is present and sort instances accordingly prior to invoking them._@since 3.2_@see org.springframework.context.ApplicationContextInitializer_@see org.springframework.context.ConfigurableApplicationContext_@see #inheritInitializers_@see #loader;Class<? extends ApplicationContextInitializer<? extends ConfigurableApplicationContext>>[] initializers() default {}_;the,application,context,em,initializer,classes,em,to,use,for,initializing,a,link,configurable,application,context,p,the,concrete,code,configurable,application,context,type,supported,by,each,declared,initializer,must,be,compatible,with,the,type,of,code,application,context,created,by,the,link,smart,context,loader,in,use,p,code,smart,context,loader,implementations,typically,detect,whether,spring,s,link,org,springframework,core,ordered,ordered,interface,has,been,implemented,or,if,the,link,org,springframework,core,annotation,order,order,annotation,is,present,and,sort,instances,accordingly,prior,to,invoking,them,since,3,2,see,org,springframework,context,application,context,initializer,see,org,springframework,context,configurable,application,context,see,inherit,initializers,see,loader;class,extends,application,context,initializer,extends,configurable,application,context,initializers,default
ContextConfiguration -> Class<?>[] classes() default {}_;1328020251;The {@link org.springframework.context.annotation.Configuration_configuration classes} to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AnnotationConfigContextLoader#detectDefaultConfigurationClasses_AnnotationConfigContextLoader.detectDefaultConfigurationClasses()} for details_on how default configuration classes will be detected if none are specified._See the documentation for {@link #loader} for further details regarding_default loaders.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #locations} or {@link #value}._@since 3.1_@see org.springframework.context.annotation.Configuration_@see org.springframework.test.context.support.AnnotationConfigContextLoader;Class<?>[] classes() default {}_;the,link,org,springframework,context,annotation,configuration,configuration,classes,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,annotation,config,context,loader,detect,default,configuration,classes,annotation,config,context,loader,detect,default,configuration,classes,for,details,on,how,default,configuration,classes,will,be,detected,if,none,are,specified,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,or,link,value,since,3,1,see,org,springframework,context,annotation,configuration,see,org,springframework,test,context,support,annotation,config,context,loader;class,classes,default
ContextConfiguration -> Class<?>[] classes() default {}_;1337278668;The <em>annotated classes</em> to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AnnotationConfigContextLoader#detectDefaultConfigurationClasses_AnnotationConfigContextLoader.detectDefaultConfigurationClasses()} for details_on how default configuration classes will be detected if no_<em>annotated classes</em> are specified. See the documentation for_{@link #loader} for further details regarding default loaders.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #locations} or {@link #value}.__@since 3.1_@see org.springframework.context.annotation.Configuration_@see org.springframework.test.context.support.AnnotationConfigContextLoader;Class<?>[] classes() default {}_;the,em,annotated,classes,em,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,annotation,config,context,loader,detect,default,configuration,classes,annotation,config,context,loader,detect,default,configuration,classes,for,details,on,how,default,configuration,classes,will,be,detected,if,no,em,annotated,classes,em,are,specified,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,or,link,value,since,3,1,see,org,springframework,context,annotation,configuration,see,org,springframework,test,context,support,annotation,config,context,loader;class,classes,default
ContextConfiguration -> Class<?>[] classes() default {}_;1345469597;The <em>annotated classes</em> to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AnnotationConfigContextLoader#detectDefaultConfigurationClasses_AnnotationConfigContextLoader.detectDefaultConfigurationClasses()} for details_on how default configuration classes will be detected if no_<em>annotated classes</em> are specified. See the documentation for_{@link #loader} for further details regarding default loaders.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #locations} or {@link #value}.__@since 3.1_@see org.springframework.context.annotation.Configuration_@see org.springframework.test.context.support.AnnotationConfigContextLoader_@see #inheritLocations;Class<?>[] classes() default {}_;the,em,annotated,classes,em,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,annotation,config,context,loader,detect,default,configuration,classes,annotation,config,context,loader,detect,default,configuration,classes,for,details,on,how,default,configuration,classes,will,be,detected,if,no,em,annotated,classes,em,are,specified,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,or,link,value,since,3,1,see,org,springframework,context,annotation,configuration,see,org,springframework,test,context,support,annotation,config,context,loader,see,inherit,locations;class,classes,default
ContextConfiguration -> Class<?>[] classes() default {}_;1356735495;The <em>annotated classes</em> to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AnnotationConfigContextLoader#detectDefaultConfigurationClasses_AnnotationConfigContextLoader.detectDefaultConfigurationClasses()} for details_on how default configuration classes will be detected if no_<em>annotated classes</em> are specified. See the documentation for_{@link #loader} for further details regarding default loaders.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #locations} or {@link #value}.__@since 3.1_@see org.springframework.context.annotation.Configuration_@see org.springframework.test.context.support.AnnotationConfigContextLoader_@see #inheritLocations;Class<?>[] classes() default {}_;the,em,annotated,classes,em,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,annotation,config,context,loader,detect,default,configuration,classes,annotation,config,context,loader,detect,default,configuration,classes,for,details,on,how,default,configuration,classes,will,be,detected,if,no,em,annotated,classes,em,are,specified,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,or,link,value,since,3,1,see,org,springframework,context,annotation,configuration,see,org,springframework,test,context,support,annotation,config,context,loader,see,inherit,locations;class,classes,default
ContextConfiguration -> Class<?>[] classes() default {}_;1363208506;The <em>annotated classes</em> to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AnnotationConfigContextLoader#detectDefaultConfigurationClasses_AnnotationConfigContextLoader.detectDefaultConfigurationClasses()} for details_on how default configuration classes will be detected if no_<em>annotated classes</em> are specified. See the documentation for_{@link #loader} for further details regarding default loaders.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #locations} or {@link #value}.__@since 3.1_@see org.springframework.context.annotation.Configuration_@see org.springframework.test.context.support.AnnotationConfigContextLoader_@see #inheritLocations;Class<?>[] classes() default {}_;the,em,annotated,classes,em,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,annotation,config,context,loader,detect,default,configuration,classes,annotation,config,context,loader,detect,default,configuration,classes,for,details,on,how,default,configuration,classes,will,be,detected,if,no,em,annotated,classes,em,are,specified,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,or,link,value,since,3,1,see,org,springframework,context,annotation,configuration,see,org,springframework,test,context,support,annotation,config,context,loader,see,inherit,locations;class,classes,default
ContextConfiguration -> Class<?>[] classes() default {}_;1386769390;The <em>annotated classes</em> to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AnnotationConfigContextLoader#detectDefaultConfigurationClasses_AnnotationConfigContextLoader.detectDefaultConfigurationClasses()} for details_on how default configuration classes will be detected if no_<em>annotated classes</em> are specified. See the documentation for_{@link #loader} for further details regarding default loaders.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #locations} or {@link #value}.__@since 3.1_@see org.springframework.context.annotation.Configuration_@see org.springframework.test.context.support.AnnotationConfigContextLoader_@see #inheritLocations;Class<?>[] classes() default {}_;the,em,annotated,classes,em,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,annotation,config,context,loader,detect,default,configuration,classes,annotation,config,context,loader,detect,default,configuration,classes,for,details,on,how,default,configuration,classes,will,be,detected,if,no,em,annotated,classes,em,are,specified,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,locations,or,link,value,since,3,1,see,org,springframework,context,annotation,configuration,see,org,springframework,test,context,support,annotation,config,context,loader,see,inherit,locations;class,classes,default
ContextConfiguration -> Class<?>[] classes() default {}_;1396374528;The <em>annotated classes</em> to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AnnotationConfigContextLoader#detectDefaultConfigurationClasses_AnnotationConfigContextLoader.detectDefaultConfigurationClasses()} for details_on how default configuration classes will be detected if no_<em>annotated classes</em> are specified. See the documentation for_{@link #loader} for further details regarding default loaders.__@since 3.1_@see org.springframework.context.annotation.Configuration_@see org.springframework.test.context.support.AnnotationConfigContextLoader_@see #inheritLocations;Class<?>[] classes() default {}_;the,em,annotated,classes,em,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,annotation,config,context,loader,detect,default,configuration,classes,annotation,config,context,loader,detect,default,configuration,classes,for,details,on,how,default,configuration,classes,will,be,detected,if,no,em,annotated,classes,em,are,specified,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,since,3,1,see,org,springframework,context,annotation,configuration,see,org,springframework,test,context,support,annotation,config,context,loader,see,inherit,locations;class,classes,default
ContextConfiguration -> Class<?>[] classes() default {}_;1397082962;The <em>annotated classes</em> to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AnnotationConfigContextLoader#detectDefaultConfigurationClasses_AnnotationConfigContextLoader.detectDefaultConfigurationClasses()} for details_on how default configuration classes will be detected if no_<em>annotated classes</em> are specified. See the documentation for_{@link #loader} for further details regarding default loaders.__@since 3.1_@see org.springframework.context.annotation.Configuration_@see org.springframework.test.context.support.AnnotationConfigContextLoader_@see #inheritLocations;Class<?>[] classes() default {}_;the,em,annotated,classes,em,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,annotation,config,context,loader,detect,default,configuration,classes,annotation,config,context,loader,detect,default,configuration,classes,for,details,on,how,default,configuration,classes,will,be,detected,if,no,em,annotated,classes,em,are,specified,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,since,3,1,see,org,springframework,context,annotation,configuration,see,org,springframework,test,context,support,annotation,config,context,loader,see,inherit,locations;class,classes,default
ContextConfiguration -> Class<?>[] classes() default {}_;1406214559;The <em>annotated classes</em> to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AnnotationConfigContextLoader#detectDefaultConfigurationClasses_AnnotationConfigContextLoader.detectDefaultConfigurationClasses()} for details_on how default configuration classes will be detected if no_<em>annotated classes</em> are specified. See the documentation for_{@link #loader} for further details regarding default loaders.__@since 3.1_@see org.springframework.context.annotation.Configuration_@see org.springframework.test.context.support.AnnotationConfigContextLoader_@see #inheritLocations;Class<?>[] classes() default {}_;the,em,annotated,classes,em,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,annotation,config,context,loader,detect,default,configuration,classes,annotation,config,context,loader,detect,default,configuration,classes,for,details,on,how,default,configuration,classes,will,be,detected,if,no,em,annotated,classes,em,are,specified,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,since,3,1,see,org,springframework,context,annotation,configuration,see,org,springframework,test,context,support,annotation,config,context,loader,see,inherit,locations;class,classes,default
ContextConfiguration -> Class<?>[] classes() default {}_;1407419079;The <em>annotated classes</em> to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AnnotationConfigContextLoader#detectDefaultConfigurationClasses_AnnotationConfigContextLoader.detectDefaultConfigurationClasses()} for details_on how default configuration classes will be detected if no_<em>annotated classes</em> are specified. See the documentation for_{@link #loader} for further details regarding default loaders.__@since 3.1_@see org.springframework.context.annotation.Configuration_@see org.springframework.test.context.support.AnnotationConfigContextLoader_@see #inheritLocations;Class<?>[] classes() default {}_;the,em,annotated,classes,em,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,annotation,config,context,loader,detect,default,configuration,classes,annotation,config,context,loader,detect,default,configuration,classes,for,details,on,how,default,configuration,classes,will,be,detected,if,no,em,annotated,classes,em,are,specified,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,since,3,1,see,org,springframework,context,annotation,configuration,see,org,springframework,test,context,support,annotation,config,context,loader,see,inherit,locations;class,classes,default
ContextConfiguration -> Class<?>[] classes() default {}_;1407967503;The <em>annotated classes</em> to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AnnotationConfigContextLoader#detectDefaultConfigurationClasses_AnnotationConfigContextLoader.detectDefaultConfigurationClasses()} for details_on how default configuration classes will be detected if no_<em>annotated classes</em> are specified. See the documentation for_{@link #loader} for further details regarding default loaders.__@since 3.1_@see org.springframework.context.annotation.Configuration_@see org.springframework.test.context.support.AnnotationConfigContextLoader_@see #inheritLocations;Class<?>[] classes() default {}_;the,em,annotated,classes,em,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,annotation,config,context,loader,detect,default,configuration,classes,annotation,config,context,loader,detect,default,configuration,classes,for,details,on,how,default,configuration,classes,will,be,detected,if,no,em,annotated,classes,em,are,specified,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,since,3,1,see,org,springframework,context,annotation,configuration,see,org,springframework,test,context,support,annotation,config,context,loader,see,inherit,locations;class,classes,default
ContextConfiguration -> Class<?>[] classes() default {}_;1432246071;The <em>annotated classes</em> to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AnnotationConfigContextLoader#detectDefaultConfigurationClasses_AnnotationConfigContextLoader.detectDefaultConfigurationClasses()} for details_on how default configuration classes will be detected if no_<em>annotated classes</em> are specified. See the documentation for_{@link #loader} for further details regarding default loaders.__@since 3.1_@see org.springframework.context.annotation.Configuration_@see org.springframework.test.context.support.AnnotationConfigContextLoader_@see #inheritLocations;Class<?>[] classes() default {}_;the,em,annotated,classes,em,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,annotation,config,context,loader,detect,default,configuration,classes,annotation,config,context,loader,detect,default,configuration,classes,for,details,on,how,default,configuration,classes,will,be,detected,if,no,em,annotated,classes,em,are,specified,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,since,3,1,see,org,springframework,context,annotation,configuration,see,org,springframework,test,context,support,annotation,config,context,loader,see,inherit,locations;class,classes,default
ContextConfiguration -> Class<?>[] classes() default {}_;1438176426;The <em>annotated classes</em> to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AnnotationConfigContextLoader#detectDefaultConfigurationClasses_AnnotationConfigContextLoader.detectDefaultConfigurationClasses()} for details_on how default configuration classes will be detected if no_<em>annotated classes</em> are specified. See the documentation for_{@link #loader} for further details regarding default loaders.__@since 3.1_@see org.springframework.context.annotation.Configuration_@see org.springframework.test.context.support.AnnotationConfigContextLoader_@see #inheritLocations;Class<?>[] classes() default {}_;the,em,annotated,classes,em,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,annotation,config,context,loader,detect,default,configuration,classes,annotation,config,context,loader,detect,default,configuration,classes,for,details,on,how,default,configuration,classes,will,be,detected,if,no,em,annotated,classes,em,are,specified,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,since,3,1,see,org,springframework,context,annotation,configuration,see,org,springframework,test,context,support,annotation,config,context,loader,see,inherit,locations;class,classes,default
ContextConfiguration -> Class<?>[] classes() default {}_;1449505825;The <em>annotated classes</em> to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}._<p>Check out the javadoc for_{@link org.springframework.test.context.support.AnnotationConfigContextLoader#detectDefaultConfigurationClasses_AnnotationConfigContextLoader.detectDefaultConfigurationClasses()} for details_on how default configuration classes will be detected if no_<em>annotated classes</em> are specified. See the documentation for_{@link #loader} for further details regarding default loaders._@since 3.1_@see org.springframework.context.annotation.Configuration_@see org.springframework.test.context.support.AnnotationConfigContextLoader_@see #inheritLocations;Class<?>[] classes() default {}_;the,em,annotated,classes,em,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,annotation,config,context,loader,detect,default,configuration,classes,annotation,config,context,loader,detect,default,configuration,classes,for,details,on,how,default,configuration,classes,will,be,detected,if,no,em,annotated,classes,em,are,specified,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,since,3,1,see,org,springframework,context,annotation,configuration,see,org,springframework,test,context,support,annotation,config,context,loader,see,inherit,locations;class,classes,default
ContextConfiguration -> Class<?>[] classes() default {}_;1462470884;The <em>annotated classes</em> to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}._<p>Check out the javadoc for_{@link org.springframework.test.context.support.AnnotationConfigContextLoader#detectDefaultConfigurationClasses_AnnotationConfigContextLoader.detectDefaultConfigurationClasses()} for details_on how default configuration classes will be detected if no_<em>annotated classes</em> are specified. See the documentation for_{@link #loader} for further details regarding default loaders._@since 3.1_@see org.springframework.context.annotation.Configuration_@see org.springframework.test.context.support.AnnotationConfigContextLoader_@see #inheritLocations;Class<?>[] classes() default {}_;the,em,annotated,classes,em,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,annotation,config,context,loader,detect,default,configuration,classes,annotation,config,context,loader,detect,default,configuration,classes,for,details,on,how,default,configuration,classes,will,be,detected,if,no,em,annotated,classes,em,are,specified,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,since,3,1,see,org,springframework,context,annotation,configuration,see,org,springframework,test,context,support,annotation,config,context,loader,see,inherit,locations;class,classes,default
ContextConfiguration -> Class<?>[] classes() default {}_;1496955179;The <em>annotated classes</em> to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}._<p>Check out the javadoc for_{@link org.springframework.test.context.support.AnnotationConfigContextLoader#detectDefaultConfigurationClasses_AnnotationConfigContextLoader.detectDefaultConfigurationClasses()} for details_on how default configuration classes will be detected if no_<em>annotated classes</em> are specified. See the documentation for_{@link #loader} for further details regarding default loaders._@since 3.1_@see org.springframework.context.annotation.Configuration_@see org.springframework.test.context.support.AnnotationConfigContextLoader_@see #inheritLocations;Class<?>[] classes() default {}_;the,em,annotated,classes,em,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,annotation,config,context,loader,detect,default,configuration,classes,annotation,config,context,loader,detect,default,configuration,classes,for,details,on,how,default,configuration,classes,will,be,detected,if,no,em,annotated,classes,em,are,specified,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,since,3,1,see,org,springframework,context,annotation,configuration,see,org,springframework,test,context,support,annotation,config,context,loader,see,inherit,locations;class,classes,default
ContextConfiguration -> boolean inheritLocations() default true_;1328020251;Whether or not {@link #locations resource locations} or_{@link #classes configuration classes} from superclasses should be_<em>inherited</em>.__<p>The default value is <code>true</code>. This means that an annotated_class will <em>inherit</em> the resource locations or configuration_classes defined by annotated superclasses. Specifically, the resource_locations or configuration classes for an annotated class will be_appended to the list of resource locations or configuration classes_defined by annotated superclasses. Thus, subclasses have the option of_<em>extending</em> the list of resource locations or configuration_classes.__<p>If <code>inheritLocations</code> is set to <code>false</code>, the_resource locations or configuration classes for the annotated class_will <em>shadow</em> and effectively replace any resource locations_or configuration classes defined by superclasses.__<p>In the following example that uses path-based resource locations, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from_&quot_base-context.xml&quot_ <strong>and</strong>_&quot_extended-context.xml&quot_, in that order. Beans defined in_&quot_extended-context.xml&quot_ may therefore override those defined in_&quot_base-context.xml&quot_._<pre class="code">_&#064_ContextConfiguration(&quot_base-context.xml&quot_)_public class BaseTest {_// ...___&#064_ContextConfiguration(&quot_extended-context.xml&quot_)_public class ExtendedTest extends BaseTest {_// ...__</pre>__<p>Similarly, in the following example that uses configuration_classes, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from the_{@code BaseConfig} <strong>and</strong> {@code ExtendedConfig}_configuration classes, in that order. Beans defined in_{@code ExtendedConfig} may therefore override those defined in_{@code BaseConfig}._<pre class="code">_&#064_ContextConfiguration(classes=BaseConfig.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(classes=ExtendedConfig.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 2.5;boolean inheritLocations() default true_;whether,or,not,link,locations,resource,locations,or,link,classes,configuration,classes,from,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,code,this,means,that,an,annotated,class,will,em,inherit,em,the,resource,locations,or,configuration,classes,defined,by,annotated,superclasses,specifically,the,resource,locations,or,configuration,classes,for,an,annotated,class,will,be,appended,to,the,list,of,resource,locations,or,configuration,classes,defined,by,annotated,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,resource,locations,or,configuration,classes,p,if,code,inherit,locations,code,is,set,to,code,false,code,the,resource,locations,or,configuration,classes,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,resource,locations,or,configuration,classes,defined,by,superclasses,p,in,the,following,example,that,uses,path,based,resource,locations,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,quot,base,context,xml,quot,strong,and,strong,quot,extended,context,xml,quot,in,that,order,beans,defined,in,quot,extended,context,xml,quot,may,therefore,override,those,defined,in,quot,base,context,xml,quot,pre,class,code,064,context,configuration,quot,base,context,xml,quot,public,class,base,test,064,context,configuration,quot,extended,context,xml,quot,public,class,extended,test,extends,base,test,pre,p,similarly,in,the,following,example,that,uses,configuration,classes,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,the,code,base,config,strong,and,strong,code,extended,config,configuration,classes,in,that,order,beans,defined,in,code,extended,config,may,therefore,override,those,defined,in,code,base,config,pre,class,code,064,context,configuration,classes,base,config,class,public,class,base,test,064,context,configuration,classes,extended,config,class,public,class,extended,test,extends,base,test,pre,since,2,5;boolean,inherit,locations,default,true
ContextConfiguration -> boolean inheritLocations() default true_;1337278668;Whether or not {@link #locations resource locations} or <em>annotated_classes</em> from test superclasses should be <em>inherited</em>.__<p>The default value is <code>true</code>. This means that an annotated_class will <em>inherit</em> the resource locations or annotated classes_defined by test superclasses. Specifically, the resource locations or_annotated classes for a given test class will be appended to the list of_resource locations or annotated classes defined by test superclasses._Thus, subclasses have the option of <em>extending</em> the list of resource_locations or annotated classes.__<p>If <code>inheritLocations</code> is set to <code>false</code>, the_resource locations or annotated classes for the annotated class_will <em>shadow</em> and effectively replace any resource locations_or annotated classes defined by superclasses.__<p>In the following example that uses path-based resource locations, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from_&quot_base-context.xml&quot_ <strong>and</strong>_&quot_extended-context.xml&quot_, in that order. Beans defined in_&quot_extended-context.xml&quot_ may therefore override those defined in_&quot_base-context.xml&quot_._<pre class="code">_&#064_ContextConfiguration(&quot_base-context.xml&quot_)_public class BaseTest {_// ...___&#064_ContextConfiguration(&quot_extended-context.xml&quot_)_public class ExtendedTest extends BaseTest {_// ...__</pre>__<p>Similarly, in the following example that uses annotated_classes, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from the_{@code BaseConfig} <strong>and</strong> {@code ExtendedConfig}_configuration classes, in that order. Beans defined in_{@code ExtendedConfig} may therefore override those defined in_{@code BaseConfig}._<pre class="code">_&#064_ContextConfiguration(classes=BaseConfig.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(classes=ExtendedConfig.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 2.5;boolean inheritLocations() default true_;whether,or,not,link,locations,resource,locations,or,em,annotated,classes,em,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,code,this,means,that,an,annotated,class,will,em,inherit,em,the,resource,locations,or,annotated,classes,defined,by,test,superclasses,specifically,the,resource,locations,or,annotated,classes,for,a,given,test,class,will,be,appended,to,the,list,of,resource,locations,or,annotated,classes,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,resource,locations,or,annotated,classes,p,if,code,inherit,locations,code,is,set,to,code,false,code,the,resource,locations,or,annotated,classes,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,resource,locations,or,annotated,classes,defined,by,superclasses,p,in,the,following,example,that,uses,path,based,resource,locations,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,quot,base,context,xml,quot,strong,and,strong,quot,extended,context,xml,quot,in,that,order,beans,defined,in,quot,extended,context,xml,quot,may,therefore,override,those,defined,in,quot,base,context,xml,quot,pre,class,code,064,context,configuration,quot,base,context,xml,quot,public,class,base,test,064,context,configuration,quot,extended,context,xml,quot,public,class,extended,test,extends,base,test,pre,p,similarly,in,the,following,example,that,uses,annotated,classes,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,the,code,base,config,strong,and,strong,code,extended,config,configuration,classes,in,that,order,beans,defined,in,code,extended,config,may,therefore,override,those,defined,in,code,base,config,pre,class,code,064,context,configuration,classes,base,config,class,public,class,base,test,064,context,configuration,classes,extended,config,class,public,class,extended,test,extends,base,test,pre,since,2,5;boolean,inherit,locations,default,true
ContextConfiguration -> boolean inheritLocations() default true_;1345469597;Whether or not {@link #locations resource locations} or <em>annotated_classes</em> from test superclasses should be <em>inherited</em>.__<p>The default value is <code>true</code>. This means that an annotated_class will <em>inherit</em> the resource locations or annotated classes_defined by test superclasses. Specifically, the resource locations or_annotated classes for a given test class will be appended to the list of_resource locations or annotated classes defined by test superclasses._Thus, subclasses have the option of <em>extending</em> the list of resource_locations or annotated classes.__<p>If <code>inheritLocations</code> is set to <code>false</code>, the_resource locations or annotated classes for the annotated class_will <em>shadow</em> and effectively replace any resource locations_or annotated classes defined by superclasses.__<p>In the following example that uses path-based resource locations, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from_&quot_base-context.xml&quot_ <strong>and</strong>_&quot_extended-context.xml&quot_, in that order. Beans defined in_&quot_extended-context.xml&quot_ may therefore override those defined in_&quot_base-context.xml&quot_._<pre class="code">_&#064_ContextConfiguration(&quot_base-context.xml&quot_)_public class BaseTest {_// ...___&#064_ContextConfiguration(&quot_extended-context.xml&quot_)_public class ExtendedTest extends BaseTest {_// ...__</pre>__<p>Similarly, in the following example that uses annotated_classes, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from the_{@code BaseConfig} <strong>and</strong> {@code ExtendedConfig}_configuration classes, in that order. Beans defined in_{@code ExtendedConfig} may therefore override those defined in_{@code BaseConfig}._<pre class="code">_&#064_ContextConfiguration(classes=BaseConfig.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(classes=ExtendedConfig.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 2.5;boolean inheritLocations() default true_;whether,or,not,link,locations,resource,locations,or,em,annotated,classes,em,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,code,this,means,that,an,annotated,class,will,em,inherit,em,the,resource,locations,or,annotated,classes,defined,by,test,superclasses,specifically,the,resource,locations,or,annotated,classes,for,a,given,test,class,will,be,appended,to,the,list,of,resource,locations,or,annotated,classes,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,resource,locations,or,annotated,classes,p,if,code,inherit,locations,code,is,set,to,code,false,code,the,resource,locations,or,annotated,classes,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,resource,locations,or,annotated,classes,defined,by,superclasses,p,in,the,following,example,that,uses,path,based,resource,locations,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,quot,base,context,xml,quot,strong,and,strong,quot,extended,context,xml,quot,in,that,order,beans,defined,in,quot,extended,context,xml,quot,may,therefore,override,those,defined,in,quot,base,context,xml,quot,pre,class,code,064,context,configuration,quot,base,context,xml,quot,public,class,base,test,064,context,configuration,quot,extended,context,xml,quot,public,class,extended,test,extends,base,test,pre,p,similarly,in,the,following,example,that,uses,annotated,classes,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,the,code,base,config,strong,and,strong,code,extended,config,configuration,classes,in,that,order,beans,defined,in,code,extended,config,may,therefore,override,those,defined,in,code,base,config,pre,class,code,064,context,configuration,classes,base,config,class,public,class,base,test,064,context,configuration,classes,extended,config,class,public,class,extended,test,extends,base,test,pre,since,2,5;boolean,inherit,locations,default,true
ContextConfiguration -> boolean inheritLocations() default true_;1356735495;Whether or not {@link #locations resource locations} or <em>annotated_classes</em> from test superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the resource locations or annotated classes_defined by test superclasses. Specifically, the resource locations or_annotated classes for a given test class will be appended to the list of_resource locations or annotated classes defined by test superclasses._Thus, subclasses have the option of <em>extending</em> the list of resource_locations or annotated classes.__<p>If {@code inheritLocations} is set to {@code false}, the_resource locations or annotated classes for the annotated class_will <em>shadow</em> and effectively replace any resource locations_or annotated classes defined by superclasses.__<p>In the following example that uses path-based resource locations, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from_&quot_base-context.xml&quot_ <strong>and</strong>_&quot_extended-context.xml&quot_, in that order. Beans defined in_&quot_extended-context.xml&quot_ may therefore override those defined in_&quot_base-context.xml&quot_._<pre class="code">_&#064_ContextConfiguration(&quot_base-context.xml&quot_)_public class BaseTest {_// ...___&#064_ContextConfiguration(&quot_extended-context.xml&quot_)_public class ExtendedTest extends BaseTest {_// ...__</pre>__<p>Similarly, in the following example that uses annotated_classes, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from the_{@code BaseConfig} <strong>and</strong> {@code ExtendedConfig}_configuration classes, in that order. Beans defined in_{@code ExtendedConfig} may therefore override those defined in_{@code BaseConfig}._<pre class="code">_&#064_ContextConfiguration(classes=BaseConfig.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(classes=ExtendedConfig.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 2.5;boolean inheritLocations() default true_;whether,or,not,link,locations,resource,locations,or,em,annotated,classes,em,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,resource,locations,or,annotated,classes,defined,by,test,superclasses,specifically,the,resource,locations,or,annotated,classes,for,a,given,test,class,will,be,appended,to,the,list,of,resource,locations,or,annotated,classes,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,resource,locations,or,annotated,classes,p,if,code,inherit,locations,is,set,to,code,false,the,resource,locations,or,annotated,classes,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,resource,locations,or,annotated,classes,defined,by,superclasses,p,in,the,following,example,that,uses,path,based,resource,locations,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,quot,base,context,xml,quot,strong,and,strong,quot,extended,context,xml,quot,in,that,order,beans,defined,in,quot,extended,context,xml,quot,may,therefore,override,those,defined,in,quot,base,context,xml,quot,pre,class,code,064,context,configuration,quot,base,context,xml,quot,public,class,base,test,064,context,configuration,quot,extended,context,xml,quot,public,class,extended,test,extends,base,test,pre,p,similarly,in,the,following,example,that,uses,annotated,classes,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,the,code,base,config,strong,and,strong,code,extended,config,configuration,classes,in,that,order,beans,defined,in,code,extended,config,may,therefore,override,those,defined,in,code,base,config,pre,class,code,064,context,configuration,classes,base,config,class,public,class,base,test,064,context,configuration,classes,extended,config,class,public,class,extended,test,extends,base,test,pre,since,2,5;boolean,inherit,locations,default,true
ContextConfiguration -> boolean inheritLocations() default true_;1363208506;Whether or not {@link #locations resource locations} or <em>annotated_classes</em> from test superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the resource locations or annotated classes_defined by test superclasses. Specifically, the resource locations or_annotated classes for a given test class will be appended to the list of_resource locations or annotated classes defined by test superclasses._Thus, subclasses have the option of <em>extending</em> the list of resource_locations or annotated classes.__<p>If {@code inheritLocations} is set to {@code false}, the_resource locations or annotated classes for the annotated class_will <em>shadow</em> and effectively replace any resource locations_or annotated classes defined by superclasses.__<p>In the following example that uses path-based resource locations, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from_&quot_base-context.xml&quot_ <strong>and</strong>_&quot_extended-context.xml&quot_, in that order. Beans defined in_&quot_extended-context.xml&quot_ may therefore override those defined in_&quot_base-context.xml&quot_._<pre class="code">_&#064_ContextConfiguration(&quot_base-context.xml&quot_)_public class BaseTest {_// ...___&#064_ContextConfiguration(&quot_extended-context.xml&quot_)_public class ExtendedTest extends BaseTest {_// ...__</pre>__<p>Similarly, in the following example that uses annotated_classes, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from the_{@code BaseConfig} <strong>and</strong> {@code ExtendedConfig}_configuration classes, in that order. Beans defined in_{@code ExtendedConfig} may therefore override those defined in_{@code BaseConfig}._<pre class="code">_&#064_ContextConfiguration(classes=BaseConfig.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(classes=ExtendedConfig.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 2.5;boolean inheritLocations() default true_;whether,or,not,link,locations,resource,locations,or,em,annotated,classes,em,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,resource,locations,or,annotated,classes,defined,by,test,superclasses,specifically,the,resource,locations,or,annotated,classes,for,a,given,test,class,will,be,appended,to,the,list,of,resource,locations,or,annotated,classes,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,resource,locations,or,annotated,classes,p,if,code,inherit,locations,is,set,to,code,false,the,resource,locations,or,annotated,classes,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,resource,locations,or,annotated,classes,defined,by,superclasses,p,in,the,following,example,that,uses,path,based,resource,locations,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,quot,base,context,xml,quot,strong,and,strong,quot,extended,context,xml,quot,in,that,order,beans,defined,in,quot,extended,context,xml,quot,may,therefore,override,those,defined,in,quot,base,context,xml,quot,pre,class,code,064,context,configuration,quot,base,context,xml,quot,public,class,base,test,064,context,configuration,quot,extended,context,xml,quot,public,class,extended,test,extends,base,test,pre,p,similarly,in,the,following,example,that,uses,annotated,classes,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,the,code,base,config,strong,and,strong,code,extended,config,configuration,classes,in,that,order,beans,defined,in,code,extended,config,may,therefore,override,those,defined,in,code,base,config,pre,class,code,064,context,configuration,classes,base,config,class,public,class,base,test,064,context,configuration,classes,extended,config,class,public,class,extended,test,extends,base,test,pre,since,2,5;boolean,inherit,locations,default,true
ContextConfiguration -> boolean inheritLocations() default true_;1386769390;Whether or not {@link #locations resource locations} or <em>annotated_classes</em> from test superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the resource locations or annotated classes_defined by test superclasses. Specifically, the resource locations or_annotated classes for a given test class will be appended to the list of_resource locations or annotated classes defined by test superclasses._Thus, subclasses have the option of <em>extending</em> the list of resource_locations or annotated classes.__<p>If {@code inheritLocations} is set to {@code false}, the_resource locations or annotated classes for the annotated class_will <em>shadow</em> and effectively replace any resource locations_or annotated classes defined by superclasses.__<p>In the following example that uses path-based resource locations, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from_&quot_base-context.xml&quot_ <strong>and</strong>_&quot_extended-context.xml&quot_, in that order. Beans defined in_&quot_extended-context.xml&quot_ may therefore override those defined in_&quot_base-context.xml&quot_._<pre class="code">_&#064_ContextConfiguration(&quot_base-context.xml&quot_)_public class BaseTest {_// ...___&#064_ContextConfiguration(&quot_extended-context.xml&quot_)_public class ExtendedTest extends BaseTest {_// ...__</pre>__<p>Similarly, in the following example that uses annotated_classes, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from the_{@code BaseConfig} <strong>and</strong> {@code ExtendedConfig}_configuration classes, in that order. Beans defined in_{@code ExtendedConfig} may therefore override those defined in_{@code BaseConfig}._<pre class="code">_&#064_ContextConfiguration(classes=BaseConfig.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(classes=ExtendedConfig.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 2.5;boolean inheritLocations() default true_;whether,or,not,link,locations,resource,locations,or,em,annotated,classes,em,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,resource,locations,or,annotated,classes,defined,by,test,superclasses,specifically,the,resource,locations,or,annotated,classes,for,a,given,test,class,will,be,appended,to,the,list,of,resource,locations,or,annotated,classes,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,resource,locations,or,annotated,classes,p,if,code,inherit,locations,is,set,to,code,false,the,resource,locations,or,annotated,classes,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,resource,locations,or,annotated,classes,defined,by,superclasses,p,in,the,following,example,that,uses,path,based,resource,locations,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,quot,base,context,xml,quot,strong,and,strong,quot,extended,context,xml,quot,in,that,order,beans,defined,in,quot,extended,context,xml,quot,may,therefore,override,those,defined,in,quot,base,context,xml,quot,pre,class,code,064,context,configuration,quot,base,context,xml,quot,public,class,base,test,064,context,configuration,quot,extended,context,xml,quot,public,class,extended,test,extends,base,test,pre,p,similarly,in,the,following,example,that,uses,annotated,classes,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,the,code,base,config,strong,and,strong,code,extended,config,configuration,classes,in,that,order,beans,defined,in,code,extended,config,may,therefore,override,those,defined,in,code,base,config,pre,class,code,064,context,configuration,classes,base,config,class,public,class,base,test,064,context,configuration,classes,extended,config,class,public,class,extended,test,extends,base,test,pre,since,2,5;boolean,inherit,locations,default,true
ContextConfiguration -> boolean inheritLocations() default true_;1396374528;Whether or not {@link #locations resource locations} or <em>annotated_classes</em> from test superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the resource locations or annotated classes_defined by test superclasses. Specifically, the resource locations or_annotated classes for a given test class will be appended to the list of_resource locations or annotated classes defined by test superclasses._Thus, subclasses have the option of <em>extending</em> the list of resource_locations or annotated classes.__<p>If {@code inheritLocations} is set to {@code false}, the_resource locations or annotated classes for the annotated class_will <em>shadow</em> and effectively replace any resource locations_or annotated classes defined by superclasses.__<p>In the following example that uses path-based resource locations, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from_&quot_base-context.xml&quot_ <strong>and</strong>_&quot_extended-context.xml&quot_, in that order. Beans defined in_&quot_extended-context.xml&quot_ may therefore override those defined in_&quot_base-context.xml&quot_._<pre class="code">_&#064_ContextConfiguration(&quot_base-context.xml&quot_)_public class BaseTest {_// ...___&#064_ContextConfiguration(&quot_extended-context.xml&quot_)_public class ExtendedTest extends BaseTest {_// ...__</pre>__<p>Similarly, in the following example that uses annotated_classes, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from the_{@code BaseConfig} <strong>and</strong> {@code ExtendedConfig}_configuration classes, in that order. Beans defined in_{@code ExtendedConfig} may therefore override those defined in_{@code BaseConfig}._<pre class="code">_&#064_ContextConfiguration(classes=BaseConfig.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(classes=ExtendedConfig.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 2.5;boolean inheritLocations() default true_;whether,or,not,link,locations,resource,locations,or,em,annotated,classes,em,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,resource,locations,or,annotated,classes,defined,by,test,superclasses,specifically,the,resource,locations,or,annotated,classes,for,a,given,test,class,will,be,appended,to,the,list,of,resource,locations,or,annotated,classes,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,resource,locations,or,annotated,classes,p,if,code,inherit,locations,is,set,to,code,false,the,resource,locations,or,annotated,classes,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,resource,locations,or,annotated,classes,defined,by,superclasses,p,in,the,following,example,that,uses,path,based,resource,locations,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,quot,base,context,xml,quot,strong,and,strong,quot,extended,context,xml,quot,in,that,order,beans,defined,in,quot,extended,context,xml,quot,may,therefore,override,those,defined,in,quot,base,context,xml,quot,pre,class,code,064,context,configuration,quot,base,context,xml,quot,public,class,base,test,064,context,configuration,quot,extended,context,xml,quot,public,class,extended,test,extends,base,test,pre,p,similarly,in,the,following,example,that,uses,annotated,classes,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,the,code,base,config,strong,and,strong,code,extended,config,configuration,classes,in,that,order,beans,defined,in,code,extended,config,may,therefore,override,those,defined,in,code,base,config,pre,class,code,064,context,configuration,classes,base,config,class,public,class,base,test,064,context,configuration,classes,extended,config,class,public,class,extended,test,extends,base,test,pre,since,2,5;boolean,inherit,locations,default,true
ContextConfiguration -> boolean inheritLocations() default true_;1397082962;Whether or not {@link #locations resource locations} or <em>annotated_classes</em> from test superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the resource locations or annotated classes_defined by test superclasses. Specifically, the resource locations or_annotated classes for a given test class will be appended to the list of_resource locations or annotated classes defined by test superclasses._Thus, subclasses have the option of <em>extending</em> the list of resource_locations or annotated classes.__<p>If {@code inheritLocations} is set to {@code false}, the_resource locations or annotated classes for the annotated class_will <em>shadow</em> and effectively replace any resource locations_or annotated classes defined by superclasses.__<p>In the following example that uses path-based resource locations, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from_&quot_base-context.xml&quot_ <strong>and</strong>_&quot_extended-context.xml&quot_, in that order. Beans defined in_&quot_extended-context.xml&quot_ may therefore override those defined in_&quot_base-context.xml&quot_._<pre class="code">_&#064_ContextConfiguration(&quot_base-context.xml&quot_)_public class BaseTest {_// ...___&#064_ContextConfiguration(&quot_extended-context.xml&quot_)_public class ExtendedTest extends BaseTest {_// ...__</pre>__<p>Similarly, in the following example that uses annotated_classes, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from the_{@code BaseConfig} <strong>and</strong> {@code ExtendedConfig}_configuration classes, in that order. Beans defined in_{@code ExtendedConfig} may therefore override those defined in_{@code BaseConfig}._<pre class="code">_&#064_ContextConfiguration(classes=BaseConfig.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(classes=ExtendedConfig.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 2.5;boolean inheritLocations() default true_;whether,or,not,link,locations,resource,locations,or,em,annotated,classes,em,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,resource,locations,or,annotated,classes,defined,by,test,superclasses,specifically,the,resource,locations,or,annotated,classes,for,a,given,test,class,will,be,appended,to,the,list,of,resource,locations,or,annotated,classes,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,resource,locations,or,annotated,classes,p,if,code,inherit,locations,is,set,to,code,false,the,resource,locations,or,annotated,classes,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,resource,locations,or,annotated,classes,defined,by,superclasses,p,in,the,following,example,that,uses,path,based,resource,locations,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,quot,base,context,xml,quot,strong,and,strong,quot,extended,context,xml,quot,in,that,order,beans,defined,in,quot,extended,context,xml,quot,may,therefore,override,those,defined,in,quot,base,context,xml,quot,pre,class,code,064,context,configuration,quot,base,context,xml,quot,public,class,base,test,064,context,configuration,quot,extended,context,xml,quot,public,class,extended,test,extends,base,test,pre,p,similarly,in,the,following,example,that,uses,annotated,classes,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,the,code,base,config,strong,and,strong,code,extended,config,configuration,classes,in,that,order,beans,defined,in,code,extended,config,may,therefore,override,those,defined,in,code,base,config,pre,class,code,064,context,configuration,classes,base,config,class,public,class,base,test,064,context,configuration,classes,extended,config,class,public,class,extended,test,extends,base,test,pre,since,2,5;boolean,inherit,locations,default,true
ContextConfiguration -> boolean inheritLocations() default true_;1406214559;Whether or not {@link #locations resource locations} or <em>annotated_classes</em> from test superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the resource locations or annotated classes_defined by test superclasses. Specifically, the resource locations or_annotated classes for a given test class will be appended to the list of_resource locations or annotated classes defined by test superclasses._Thus, subclasses have the option of <em>extending</em> the list of resource_locations or annotated classes.__<p>If {@code inheritLocations} is set to {@code false}, the_resource locations or annotated classes for the annotated class_will <em>shadow</em> and effectively replace any resource locations_or annotated classes defined by superclasses.__<p>In the following example that uses path-based resource locations, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from_{@code "base-context.xml"} <strong>and</strong>_{@code "extended-context.xml"}, in that order. Beans defined in_{@code "extended-context.xml"} may therefore override those defined_in {@code "base-context.xml"}._<pre class="code">_&#064_ContextConfiguration("base-context.xml")_public class BaseTest {_// ...___&#064_ContextConfiguration("extended-context.xml")_public class ExtendedTest extends BaseTest {_// ...__</pre>__<p>Similarly, in the following example that uses annotated_classes, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from the_{@code BaseConfig} <strong>and</strong> {@code ExtendedConfig}_configuration classes, in that order. Beans defined in_{@code ExtendedConfig} may therefore override those defined in_{@code BaseConfig}._<pre class="code">_&#064_ContextConfiguration(classes=BaseConfig.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(classes=ExtendedConfig.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 2.5;boolean inheritLocations() default true_;whether,or,not,link,locations,resource,locations,or,em,annotated,classes,em,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,resource,locations,or,annotated,classes,defined,by,test,superclasses,specifically,the,resource,locations,or,annotated,classes,for,a,given,test,class,will,be,appended,to,the,list,of,resource,locations,or,annotated,classes,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,resource,locations,or,annotated,classes,p,if,code,inherit,locations,is,set,to,code,false,the,resource,locations,or,annotated,classes,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,resource,locations,or,annotated,classes,defined,by,superclasses,p,in,the,following,example,that,uses,path,based,resource,locations,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,code,base,context,xml,strong,and,strong,code,extended,context,xml,in,that,order,beans,defined,in,code,extended,context,xml,may,therefore,override,those,defined,in,code,base,context,xml,pre,class,code,064,context,configuration,base,context,xml,public,class,base,test,064,context,configuration,extended,context,xml,public,class,extended,test,extends,base,test,pre,p,similarly,in,the,following,example,that,uses,annotated,classes,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,the,code,base,config,strong,and,strong,code,extended,config,configuration,classes,in,that,order,beans,defined,in,code,extended,config,may,therefore,override,those,defined,in,code,base,config,pre,class,code,064,context,configuration,classes,base,config,class,public,class,base,test,064,context,configuration,classes,extended,config,class,public,class,extended,test,extends,base,test,pre,since,2,5;boolean,inherit,locations,default,true
ContextConfiguration -> boolean inheritLocations() default true_;1407419079;Whether or not {@link #locations resource locations} or <em>annotated_classes</em> from test superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the resource locations or annotated classes_defined by test superclasses. Specifically, the resource locations or_annotated classes for a given test class will be appended to the list of_resource locations or annotated classes defined by test superclasses._Thus, subclasses have the option of <em>extending</em> the list of resource_locations or annotated classes.__<p>If {@code inheritLocations} is set to {@code false}, the_resource locations or annotated classes for the annotated class_will <em>shadow</em> and effectively replace any resource locations_or annotated classes defined by superclasses.__<p>In the following example that uses path-based resource locations, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from_{@code "base-context.xml"} <strong>and</strong>_{@code "extended-context.xml"}, in that order. Beans defined in_{@code "extended-context.xml"} may therefore override those defined_in {@code "base-context.xml"}._<pre class="code">_&#064_ContextConfiguration("base-context.xml")_public class BaseTest {_// ...___&#064_ContextConfiguration("extended-context.xml")_public class ExtendedTest extends BaseTest {_// ...__</pre>__<p>Similarly, in the following example that uses annotated_classes, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from the_{@code BaseConfig} <strong>and</strong> {@code ExtendedConfig}_configuration classes, in that order. Beans defined in_{@code ExtendedConfig} may therefore override those defined in_{@code BaseConfig}._<pre class="code">_&#064_ContextConfiguration(classes=BaseConfig.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(classes=ExtendedConfig.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 2.5;boolean inheritLocations() default true_;whether,or,not,link,locations,resource,locations,or,em,annotated,classes,em,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,resource,locations,or,annotated,classes,defined,by,test,superclasses,specifically,the,resource,locations,or,annotated,classes,for,a,given,test,class,will,be,appended,to,the,list,of,resource,locations,or,annotated,classes,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,resource,locations,or,annotated,classes,p,if,code,inherit,locations,is,set,to,code,false,the,resource,locations,or,annotated,classes,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,resource,locations,or,annotated,classes,defined,by,superclasses,p,in,the,following,example,that,uses,path,based,resource,locations,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,code,base,context,xml,strong,and,strong,code,extended,context,xml,in,that,order,beans,defined,in,code,extended,context,xml,may,therefore,override,those,defined,in,code,base,context,xml,pre,class,code,064,context,configuration,base,context,xml,public,class,base,test,064,context,configuration,extended,context,xml,public,class,extended,test,extends,base,test,pre,p,similarly,in,the,following,example,that,uses,annotated,classes,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,the,code,base,config,strong,and,strong,code,extended,config,configuration,classes,in,that,order,beans,defined,in,code,extended,config,may,therefore,override,those,defined,in,code,base,config,pre,class,code,064,context,configuration,classes,base,config,class,public,class,base,test,064,context,configuration,classes,extended,config,class,public,class,extended,test,extends,base,test,pre,since,2,5;boolean,inherit,locations,default,true
ContextConfiguration -> boolean inheritLocations() default true_;1407967503;Whether or not {@link #locations resource locations} or <em>annotated_classes</em> from test superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the resource locations or annotated classes_defined by test superclasses. Specifically, the resource locations or_annotated classes for a given test class will be appended to the list of_resource locations or annotated classes defined by test superclasses._Thus, subclasses have the option of <em>extending</em> the list of resource_locations or annotated classes.__<p>If {@code inheritLocations} is set to {@code false}, the_resource locations or annotated classes for the annotated class_will <em>shadow</em> and effectively replace any resource locations_or annotated classes defined by superclasses.__<p>In the following example that uses path-based resource locations, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from_{@code "base-context.xml"} <strong>and</strong>_{@code "extended-context.xml"}, in that order. Beans defined in_{@code "extended-context.xml"} may therefore override those defined_in {@code "base-context.xml"}._<pre class="code">_&#064_ContextConfiguration("base-context.xml")_public class BaseTest {_// ...___&#064_ContextConfiguration("extended-context.xml")_public class ExtendedTest extends BaseTest {_// ...__</pre>__<p>Similarly, in the following example that uses annotated_classes, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from the_{@code BaseConfig} <strong>and</strong> {@code ExtendedConfig}_configuration classes, in that order. Beans defined in_{@code ExtendedConfig} may therefore override those defined in_{@code BaseConfig}._<pre class="code">_&#064_ContextConfiguration(classes=BaseConfig.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(classes=ExtendedConfig.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 2.5;boolean inheritLocations() default true_;whether,or,not,link,locations,resource,locations,or,em,annotated,classes,em,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,resource,locations,or,annotated,classes,defined,by,test,superclasses,specifically,the,resource,locations,or,annotated,classes,for,a,given,test,class,will,be,appended,to,the,list,of,resource,locations,or,annotated,classes,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,resource,locations,or,annotated,classes,p,if,code,inherit,locations,is,set,to,code,false,the,resource,locations,or,annotated,classes,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,resource,locations,or,annotated,classes,defined,by,superclasses,p,in,the,following,example,that,uses,path,based,resource,locations,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,code,base,context,xml,strong,and,strong,code,extended,context,xml,in,that,order,beans,defined,in,code,extended,context,xml,may,therefore,override,those,defined,in,code,base,context,xml,pre,class,code,064,context,configuration,base,context,xml,public,class,base,test,064,context,configuration,extended,context,xml,public,class,extended,test,extends,base,test,pre,p,similarly,in,the,following,example,that,uses,annotated,classes,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,the,code,base,config,strong,and,strong,code,extended,config,configuration,classes,in,that,order,beans,defined,in,code,extended,config,may,therefore,override,those,defined,in,code,base,config,pre,class,code,064,context,configuration,classes,base,config,class,public,class,base,test,064,context,configuration,classes,extended,config,class,public,class,extended,test,extends,base,test,pre,since,2,5;boolean,inherit,locations,default,true
ContextConfiguration -> boolean inheritLocations() default true_;1432246071;Whether or not {@link #locations resource locations} or <em>annotated_classes</em> from test superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the resource locations or annotated classes_defined by test superclasses. Specifically, the resource locations or_annotated classes for a given test class will be appended to the list of_resource locations or annotated classes defined by test superclasses._Thus, subclasses have the option of <em>extending</em> the list of resource_locations or annotated classes.__<p>If {@code inheritLocations} is set to {@code false}, the_resource locations or annotated classes for the annotated class_will <em>shadow</em> and effectively replace any resource locations_or annotated classes defined by superclasses.__<p>In the following example that uses path-based resource locations, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from_{@code "base-context.xml"} <strong>and</strong>_{@code "extended-context.xml"}, in that order. Beans defined in_{@code "extended-context.xml"} may therefore override those defined_in {@code "base-context.xml"}._<pre class="code">_&#064_ContextConfiguration("base-context.xml")_public class BaseTest {_// ...___&#064_ContextConfiguration("extended-context.xml")_public class ExtendedTest extends BaseTest {_// ...__</pre>__<p>Similarly, in the following example that uses annotated_classes, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from the_{@code BaseConfig} <strong>and</strong> {@code ExtendedConfig}_configuration classes, in that order. Beans defined in_{@code ExtendedConfig} may therefore override those defined in_{@code BaseConfig}._<pre class="code">_&#064_ContextConfiguration(classes=BaseConfig.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(classes=ExtendedConfig.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 2.5;boolean inheritLocations() default true_;whether,or,not,link,locations,resource,locations,or,em,annotated,classes,em,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,resource,locations,or,annotated,classes,defined,by,test,superclasses,specifically,the,resource,locations,or,annotated,classes,for,a,given,test,class,will,be,appended,to,the,list,of,resource,locations,or,annotated,classes,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,resource,locations,or,annotated,classes,p,if,code,inherit,locations,is,set,to,code,false,the,resource,locations,or,annotated,classes,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,resource,locations,or,annotated,classes,defined,by,superclasses,p,in,the,following,example,that,uses,path,based,resource,locations,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,code,base,context,xml,strong,and,strong,code,extended,context,xml,in,that,order,beans,defined,in,code,extended,context,xml,may,therefore,override,those,defined,in,code,base,context,xml,pre,class,code,064,context,configuration,base,context,xml,public,class,base,test,064,context,configuration,extended,context,xml,public,class,extended,test,extends,base,test,pre,p,similarly,in,the,following,example,that,uses,annotated,classes,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,the,code,base,config,strong,and,strong,code,extended,config,configuration,classes,in,that,order,beans,defined,in,code,extended,config,may,therefore,override,those,defined,in,code,base,config,pre,class,code,064,context,configuration,classes,base,config,class,public,class,base,test,064,context,configuration,classes,extended,config,class,public,class,extended,test,extends,base,test,pre,since,2,5;boolean,inherit,locations,default,true
ContextConfiguration -> boolean inheritLocations() default true_;1438176426;Whether or not {@link #locations resource locations} or <em>annotated_classes</em> from test superclasses should be <em>inherited</em>.__<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the resource locations or annotated classes_defined by test superclasses. Specifically, the resource locations or_annotated classes for a given test class will be appended to the list of_resource locations or annotated classes defined by test superclasses._Thus, subclasses have the option of <em>extending</em> the list of resource_locations or annotated classes.__<p>If {@code inheritLocations} is set to {@code false}, the_resource locations or annotated classes for the annotated class_will <em>shadow</em> and effectively replace any resource locations_or annotated classes defined by superclasses.__<p>In the following example that uses path-based resource locations, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from_{@code "base-context.xml"} <strong>and</strong>_{@code "extended-context.xml"}, in that order. Beans defined in_{@code "extended-context.xml"} may therefore override those defined_in {@code "base-context.xml"}._<pre class="code">_&#064_ContextConfiguration("base-context.xml")_public class BaseTest {_// ...___&#064_ContextConfiguration("extended-context.xml")_public class ExtendedTest extends BaseTest {_// ...__</pre>__<p>Similarly, in the following example that uses annotated_classes, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from the_{@code BaseConfig} <strong>and</strong> {@code ExtendedConfig}_configuration classes, in that order. Beans defined in_{@code ExtendedConfig} may therefore override those defined in_{@code BaseConfig}._<pre class="code">_&#064_ContextConfiguration(classes=BaseConfig.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(classes=ExtendedConfig.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 2.5;boolean inheritLocations() default true_;whether,or,not,link,locations,resource,locations,or,em,annotated,classes,em,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,resource,locations,or,annotated,classes,defined,by,test,superclasses,specifically,the,resource,locations,or,annotated,classes,for,a,given,test,class,will,be,appended,to,the,list,of,resource,locations,or,annotated,classes,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,resource,locations,or,annotated,classes,p,if,code,inherit,locations,is,set,to,code,false,the,resource,locations,or,annotated,classes,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,resource,locations,or,annotated,classes,defined,by,superclasses,p,in,the,following,example,that,uses,path,based,resource,locations,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,code,base,context,xml,strong,and,strong,code,extended,context,xml,in,that,order,beans,defined,in,code,extended,context,xml,may,therefore,override,those,defined,in,code,base,context,xml,pre,class,code,064,context,configuration,base,context,xml,public,class,base,test,064,context,configuration,extended,context,xml,public,class,extended,test,extends,base,test,pre,p,similarly,in,the,following,example,that,uses,annotated,classes,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,the,code,base,config,strong,and,strong,code,extended,config,configuration,classes,in,that,order,beans,defined,in,code,extended,config,may,therefore,override,those,defined,in,code,base,config,pre,class,code,064,context,configuration,classes,base,config,class,public,class,base,test,064,context,configuration,classes,extended,config,class,public,class,extended,test,extends,base,test,pre,since,2,5;boolean,inherit,locations,default,true
ContextConfiguration -> boolean inheritLocations() default true_;1449505825;Whether or not {@link #locations resource locations} or <em>annotated_classes</em> from test superclasses should be <em>inherited</em>._<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the resource locations or annotated classes_defined by test superclasses. Specifically, the resource locations or_annotated classes for a given test class will be appended to the list of_resource locations or annotated classes defined by test superclasses._Thus, subclasses have the option of <em>extending</em> the list of resource_locations or annotated classes._<p>If {@code inheritLocations} is set to {@code false}, the_resource locations or annotated classes for the annotated class_will <em>shadow</em> and effectively replace any resource locations_or annotated classes defined by superclasses._<p>In the following example that uses path-based resource locations, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from_{@code "base-context.xml"} <strong>and</strong>_{@code "extended-context.xml"}, in that order. Beans defined in_{@code "extended-context.xml"} may therefore override those defined_in {@code "base-context.xml"}._<pre class="code">_&#064_ContextConfiguration("base-context.xml")_public class BaseTest {_// ...___&#064_ContextConfiguration("extended-context.xml")_public class ExtendedTest extends BaseTest {_// ...__</pre>_<p>Similarly, in the following example that uses annotated_classes, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from the_{@code BaseConfig} <strong>and</strong> {@code ExtendedConfig}_configuration classes, in that order. Beans defined in_{@code ExtendedConfig} may therefore override those defined in_{@code BaseConfig}._<pre class="code">_&#064_ContextConfiguration(classes=BaseConfig.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(classes=ExtendedConfig.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 2.5;boolean inheritLocations() default true_;whether,or,not,link,locations,resource,locations,or,em,annotated,classes,em,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,resource,locations,or,annotated,classes,defined,by,test,superclasses,specifically,the,resource,locations,or,annotated,classes,for,a,given,test,class,will,be,appended,to,the,list,of,resource,locations,or,annotated,classes,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,resource,locations,or,annotated,classes,p,if,code,inherit,locations,is,set,to,code,false,the,resource,locations,or,annotated,classes,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,resource,locations,or,annotated,classes,defined,by,superclasses,p,in,the,following,example,that,uses,path,based,resource,locations,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,code,base,context,xml,strong,and,strong,code,extended,context,xml,in,that,order,beans,defined,in,code,extended,context,xml,may,therefore,override,those,defined,in,code,base,context,xml,pre,class,code,064,context,configuration,base,context,xml,public,class,base,test,064,context,configuration,extended,context,xml,public,class,extended,test,extends,base,test,pre,p,similarly,in,the,following,example,that,uses,annotated,classes,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,the,code,base,config,strong,and,strong,code,extended,config,configuration,classes,in,that,order,beans,defined,in,code,extended,config,may,therefore,override,those,defined,in,code,base,config,pre,class,code,064,context,configuration,classes,base,config,class,public,class,base,test,064,context,configuration,classes,extended,config,class,public,class,extended,test,extends,base,test,pre,since,2,5;boolean,inherit,locations,default,true
ContextConfiguration -> boolean inheritLocations() default true_;1462470884;Whether or not {@link #locations resource locations} or <em>annotated_classes</em> from test superclasses should be <em>inherited</em>._<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the resource locations or annotated classes_defined by test superclasses. Specifically, the resource locations or_annotated classes for a given test class will be appended to the list of_resource locations or annotated classes defined by test superclasses._Thus, subclasses have the option of <em>extending</em> the list of resource_locations or annotated classes._<p>If {@code inheritLocations} is set to {@code false}, the_resource locations or annotated classes for the annotated class_will <em>shadow</em> and effectively replace any resource locations_or annotated classes defined by superclasses._<p>In the following example that uses path-based resource locations, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from_{@code "base-context.xml"} <strong>and</strong>_{@code "extended-context.xml"}, in that order. Beans defined in_{@code "extended-context.xml"} may therefore override those defined_in {@code "base-context.xml"}._<pre class="code">_&#064_ContextConfiguration("base-context.xml")_public class BaseTest {_// ...___&#064_ContextConfiguration("extended-context.xml")_public class ExtendedTest extends BaseTest {_// ...__</pre>_<p>Similarly, in the following example that uses annotated_classes, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from the_{@code BaseConfig} <strong>and</strong> {@code ExtendedConfig}_configuration classes, in that order. Beans defined in_{@code ExtendedConfig} may therefore override those defined in_{@code BaseConfig}._<pre class="code">_&#064_ContextConfiguration(classes=BaseConfig.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(classes=ExtendedConfig.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 2.5;boolean inheritLocations() default true_;whether,or,not,link,locations,resource,locations,or,em,annotated,classes,em,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,resource,locations,or,annotated,classes,defined,by,test,superclasses,specifically,the,resource,locations,or,annotated,classes,for,a,given,test,class,will,be,appended,to,the,list,of,resource,locations,or,annotated,classes,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,resource,locations,or,annotated,classes,p,if,code,inherit,locations,is,set,to,code,false,the,resource,locations,or,annotated,classes,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,resource,locations,or,annotated,classes,defined,by,superclasses,p,in,the,following,example,that,uses,path,based,resource,locations,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,code,base,context,xml,strong,and,strong,code,extended,context,xml,in,that,order,beans,defined,in,code,extended,context,xml,may,therefore,override,those,defined,in,code,base,context,xml,pre,class,code,064,context,configuration,base,context,xml,public,class,base,test,064,context,configuration,extended,context,xml,public,class,extended,test,extends,base,test,pre,p,similarly,in,the,following,example,that,uses,annotated,classes,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,the,code,base,config,strong,and,strong,code,extended,config,configuration,classes,in,that,order,beans,defined,in,code,extended,config,may,therefore,override,those,defined,in,code,base,config,pre,class,code,064,context,configuration,classes,base,config,class,public,class,base,test,064,context,configuration,classes,extended,config,class,public,class,extended,test,extends,base,test,pre,since,2,5;boolean,inherit,locations,default,true
ContextConfiguration -> boolean inheritLocations() default true_;1496955179;Whether or not {@link #locations resource locations} or <em>annotated_classes</em> from test superclasses should be <em>inherited</em>._<p>The default value is {@code true}. This means that an annotated_class will <em>inherit</em> the resource locations or annotated classes_defined by test superclasses. Specifically, the resource locations or_annotated classes for a given test class will be appended to the list of_resource locations or annotated classes defined by test superclasses._Thus, subclasses have the option of <em>extending</em> the list of resource_locations or annotated classes._<p>If {@code inheritLocations} is set to {@code false}, the_resource locations or annotated classes for the annotated class_will <em>shadow</em> and effectively replace any resource locations_or annotated classes defined by superclasses._<p>In the following example that uses path-based resource locations, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from_{@code "base-context.xml"} <strong>and</strong>_{@code "extended-context.xml"}, in that order. Beans defined in_{@code "extended-context.xml"} may therefore override those defined_in {@code "base-context.xml"}._<pre class="code">_&#064_ContextConfiguration("base-context.xml")_public class BaseTest {_// ...___&#064_ContextConfiguration("extended-context.xml")_public class ExtendedTest extends BaseTest {_// ...__</pre>_<p>Similarly, in the following example that uses annotated_classes, the_{@link org.springframework.context.ApplicationContext ApplicationContext}_for {@code ExtendedTest} will be loaded from the_{@code BaseConfig} <strong>and</strong> {@code ExtendedConfig}_configuration classes, in that order. Beans defined in_{@code ExtendedConfig} may therefore override those defined in_{@code BaseConfig}._<pre class="code">_&#064_ContextConfiguration(classes=BaseConfig.class)_public class BaseTest {_// ...___&#064_ContextConfiguration(classes=ExtendedConfig.class)_public class ExtendedTest extends BaseTest {_// ...__</pre>_@since 2.5;boolean inheritLocations() default true_;whether,or,not,link,locations,resource,locations,or,em,annotated,classes,em,from,test,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,this,means,that,an,annotated,class,will,em,inherit,em,the,resource,locations,or,annotated,classes,defined,by,test,superclasses,specifically,the,resource,locations,or,annotated,classes,for,a,given,test,class,will,be,appended,to,the,list,of,resource,locations,or,annotated,classes,defined,by,test,superclasses,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,resource,locations,or,annotated,classes,p,if,code,inherit,locations,is,set,to,code,false,the,resource,locations,or,annotated,classes,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,resource,locations,or,annotated,classes,defined,by,superclasses,p,in,the,following,example,that,uses,path,based,resource,locations,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,code,base,context,xml,strong,and,strong,code,extended,context,xml,in,that,order,beans,defined,in,code,extended,context,xml,may,therefore,override,those,defined,in,code,base,context,xml,pre,class,code,064,context,configuration,base,context,xml,public,class,base,test,064,context,configuration,extended,context,xml,public,class,extended,test,extends,base,test,pre,p,similarly,in,the,following,example,that,uses,annotated,classes,the,link,org,springframework,context,application,context,application,context,for,code,extended,test,will,be,loaded,from,the,code,base,config,strong,and,strong,code,extended,config,configuration,classes,in,that,order,beans,defined,in,code,extended,config,may,therefore,override,those,defined,in,code,base,config,pre,class,code,064,context,configuration,classes,base,config,class,public,class,base,test,064,context,configuration,classes,extended,config,class,public,class,extended,test,extends,base,test,pre,since,2,5;boolean,inherit,locations,default,true
ContextConfiguration -> String[] locations() default {}_;1328020251;The resource locations to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader#modifyLocations_AbstractContextLoader.modifyLocations()} for details on how a location_String will be interpreted at runtime, in particular in case of a relative_path. Also, check out the documentation on_{@link org.springframework.test.context.support.AbstractContextLoader#generateDefaultLocations_AbstractContextLoader.generateDefaultLocations()} for details on the default_locations that are going to be used if none are specified.__<p>Note that the above-mentioned default rules only apply for a standard_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader} subclass such as_{@link org.springframework.test.context.support.GenericXmlContextLoader_GenericXmlContextLoader} which is the effective default implementation_used at runtime if <code>locations</code> are configured. See the_documentation for {@link #loader} for further details regarding default_loaders.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value} or {@link #classes}, but it may be used instead of_{@link #value}._@since 2.5;String[] locations() default {}_;the,resource,locations,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,modify,locations,abstract,context,loader,modify,locations,for,details,on,how,a,location,string,will,be,interpreted,at,runtime,in,particular,in,case,of,a,relative,path,also,check,out,the,documentation,on,link,org,springframework,test,context,support,abstract,context,loader,generate,default,locations,abstract,context,loader,generate,default,locations,for,details,on,the,default,locations,that,are,going,to,be,used,if,none,are,specified,p,note,that,the,above,mentioned,default,rules,only,apply,for,a,standard,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,subclass,such,as,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,which,is,the,effective,default,implementation,used,at,runtime,if,code,locations,code,are,configured,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,or,link,classes,but,it,may,be,used,instead,of,link,value,since,2,5;string,locations,default
ContextConfiguration -> String[] locations() default {}_;1337278668;The resource locations to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader#modifyLocations_AbstractContextLoader.modifyLocations()} for details on how a location_String will be interpreted at runtime, in particular in case of a relative_path. Also, check out the documentation on_{@link org.springframework.test.context.support.AbstractContextLoader#generateDefaultLocations_AbstractContextLoader.generateDefaultLocations()} for details on the default_locations that are going to be used if none are specified.__<p>Note that the above-mentioned default rules only apply for a standard_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader} subclass such as_{@link org.springframework.test.context.support.GenericXmlContextLoader_GenericXmlContextLoader} which is the effective default implementation_used at runtime if <code>locations</code> are configured. See the_documentation for {@link #loader} for further details regarding default_loaders.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value} or {@link #classes}, but it may be used instead of_{@link #value}._@since 2.5;String[] locations() default {}_;the,resource,locations,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,modify,locations,abstract,context,loader,modify,locations,for,details,on,how,a,location,string,will,be,interpreted,at,runtime,in,particular,in,case,of,a,relative,path,also,check,out,the,documentation,on,link,org,springframework,test,context,support,abstract,context,loader,generate,default,locations,abstract,context,loader,generate,default,locations,for,details,on,the,default,locations,that,are,going,to,be,used,if,none,are,specified,p,note,that,the,above,mentioned,default,rules,only,apply,for,a,standard,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,subclass,such,as,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,which,is,the,effective,default,implementation,used,at,runtime,if,code,locations,code,are,configured,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,or,link,classes,but,it,may,be,used,instead,of,link,value,since,2,5;string,locations,default
ContextConfiguration -> String[] locations() default {}_;1345469597;The resource locations to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader#modifyLocations_AbstractContextLoader.modifyLocations()} for details on how a location_String will be interpreted at runtime, in particular in case of a relative_path. Also, check out the documentation on_{@link org.springframework.test.context.support.AbstractContextLoader#generateDefaultLocations_AbstractContextLoader.generateDefaultLocations()} for details on the default_locations that are going to be used if none are specified.__<p>Note that the above-mentioned default rules only apply for a standard_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader} subclass such as_{@link org.springframework.test.context.support.GenericXmlContextLoader_GenericXmlContextLoader} which is the effective default implementation_used at runtime if <code>locations</code> are configured. See the_documentation for {@link #loader} for further details regarding default_loaders.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value} or {@link #classes}, but it may be used instead of_{@link #value}._@since 2.5_@see #inheritLocations;String[] locations() default {}_;the,resource,locations,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,modify,locations,abstract,context,loader,modify,locations,for,details,on,how,a,location,string,will,be,interpreted,at,runtime,in,particular,in,case,of,a,relative,path,also,check,out,the,documentation,on,link,org,springframework,test,context,support,abstract,context,loader,generate,default,locations,abstract,context,loader,generate,default,locations,for,details,on,the,default,locations,that,are,going,to,be,used,if,none,are,specified,p,note,that,the,above,mentioned,default,rules,only,apply,for,a,standard,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,subclass,such,as,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,which,is,the,effective,default,implementation,used,at,runtime,if,code,locations,code,are,configured,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,or,link,classes,but,it,may,be,used,instead,of,link,value,since,2,5,see,inherit,locations;string,locations,default
ContextConfiguration -> String[] locations() default {}_;1356735495;The resource locations to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader#modifyLocations_AbstractContextLoader.modifyLocations()} for details on how a location_String will be interpreted at runtime, in particular in case of a relative_path. Also, check out the documentation on_{@link org.springframework.test.context.support.AbstractContextLoader#generateDefaultLocations_AbstractContextLoader.generateDefaultLocations()} for details on the default_locations that are going to be used if none are specified.__<p>Note that the above-mentioned default rules only apply for a standard_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader} subclass such as_{@link org.springframework.test.context.support.GenericXmlContextLoader_GenericXmlContextLoader} which is the effective default implementation_used at runtime if {@code locations} are configured. See the_documentation for {@link #loader} for further details regarding default_loaders.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value} or {@link #classes}, but it may be used instead of_{@link #value}._@since 2.5_@see #inheritLocations;String[] locations() default {}_;the,resource,locations,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,modify,locations,abstract,context,loader,modify,locations,for,details,on,how,a,location,string,will,be,interpreted,at,runtime,in,particular,in,case,of,a,relative,path,also,check,out,the,documentation,on,link,org,springframework,test,context,support,abstract,context,loader,generate,default,locations,abstract,context,loader,generate,default,locations,for,details,on,the,default,locations,that,are,going,to,be,used,if,none,are,specified,p,note,that,the,above,mentioned,default,rules,only,apply,for,a,standard,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,subclass,such,as,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,which,is,the,effective,default,implementation,used,at,runtime,if,code,locations,are,configured,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,or,link,classes,but,it,may,be,used,instead,of,link,value,since,2,5,see,inherit,locations;string,locations,default
ContextConfiguration -> String[] locations() default {}_;1363208506;The resource locations to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader#modifyLocations_AbstractContextLoader.modifyLocations()} for details on how a location_String will be interpreted at runtime, in particular in case of a relative_path. Also, check out the documentation on_{@link org.springframework.test.context.support.AbstractContextLoader#generateDefaultLocations_AbstractContextLoader.generateDefaultLocations()} for details on the default_locations that are going to be used if none are specified.__<p>Note that the above-mentioned default rules only apply for a standard_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader} subclass such as_{@link org.springframework.test.context.support.GenericXmlContextLoader_GenericXmlContextLoader} which is the effective default implementation_used at runtime if {@code locations} are configured. See the_documentation for {@link #loader} for further details regarding default_loaders.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value} or {@link #classes}, but it may be used instead of_{@link #value}._@since 2.5_@see #inheritLocations;String[] locations() default {}_;the,resource,locations,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,modify,locations,abstract,context,loader,modify,locations,for,details,on,how,a,location,string,will,be,interpreted,at,runtime,in,particular,in,case,of,a,relative,path,also,check,out,the,documentation,on,link,org,springframework,test,context,support,abstract,context,loader,generate,default,locations,abstract,context,loader,generate,default,locations,for,details,on,the,default,locations,that,are,going,to,be,used,if,none,are,specified,p,note,that,the,above,mentioned,default,rules,only,apply,for,a,standard,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,subclass,such,as,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,which,is,the,effective,default,implementation,used,at,runtime,if,code,locations,are,configured,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,or,link,classes,but,it,may,be,used,instead,of,link,value,since,2,5,see,inherit,locations;string,locations,default
ContextConfiguration -> String[] locations() default {}_;1386769390;The resource locations to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader#modifyLocations_AbstractContextLoader.modifyLocations()} for details on how a location_String will be interpreted at runtime, in particular in case of a relative_path. Also, check out the documentation on_{@link org.springframework.test.context.support.AbstractContextLoader#generateDefaultLocations_AbstractContextLoader.generateDefaultLocations()} for details on the default_locations that are going to be used if none are specified.__<p>Note that the above-mentioned default rules only apply for a standard_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader} subclass such as_{@link org.springframework.test.context.support.GenericXmlContextLoader_GenericXmlContextLoader} which is the effective default implementation_used at runtime if {@code locations} are configured. See the_documentation for {@link #loader} for further details regarding default_loaders.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value} or {@link #classes}, but it may be used instead of_{@link #value}._@since 2.5_@see #inheritLocations;String[] locations() default {}_;the,resource,locations,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,modify,locations,abstract,context,loader,modify,locations,for,details,on,how,a,location,string,will,be,interpreted,at,runtime,in,particular,in,case,of,a,relative,path,also,check,out,the,documentation,on,link,org,springframework,test,context,support,abstract,context,loader,generate,default,locations,abstract,context,loader,generate,default,locations,for,details,on,the,default,locations,that,are,going,to,be,used,if,none,are,specified,p,note,that,the,above,mentioned,default,rules,only,apply,for,a,standard,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,subclass,such,as,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,which,is,the,effective,default,implementation,used,at,runtime,if,code,locations,are,configured,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,or,link,classes,but,it,may,be,used,instead,of,link,value,since,2,5,see,inherit,locations;string,locations,default
ContextConfiguration -> String[] locations() default {}_;1396374528;The resource locations to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader#modifyLocations_AbstractContextLoader.modifyLocations()} for details on how a location_String will be interpreted at runtime, in particular in case of a relative_path. Also, check out the documentation on_{@link org.springframework.test.context.support.AbstractContextLoader#generateDefaultLocations_AbstractContextLoader.generateDefaultLocations()} for details on the default_locations that are going to be used if none are specified.__<p>Note that the above-mentioned default rules only apply for a standard_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader} subclass such as_{@link org.springframework.test.context.support.GenericXmlContextLoader_GenericXmlContextLoader} which is the effective default implementation_used at runtime if {@code locations} are configured. See the_documentation for {@link #loader} for further details regarding default_loaders.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value}, but it may be used instead of {@link #value}._@since 2.5_@see #inheritLocations;String[] locations() default {}_;the,resource,locations,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,modify,locations,abstract,context,loader,modify,locations,for,details,on,how,a,location,string,will,be,interpreted,at,runtime,in,particular,in,case,of,a,relative,path,also,check,out,the,documentation,on,link,org,springframework,test,context,support,abstract,context,loader,generate,default,locations,abstract,context,loader,generate,default,locations,for,details,on,the,default,locations,that,are,going,to,be,used,if,none,are,specified,p,note,that,the,above,mentioned,default,rules,only,apply,for,a,standard,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,subclass,such,as,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,which,is,the,effective,default,implementation,used,at,runtime,if,code,locations,are,configured,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,but,it,may,be,used,instead,of,link,value,since,2,5,see,inherit,locations;string,locations,default
ContextConfiguration -> String[] locations() default {}_;1397082962;The resource locations to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader#modifyLocations_AbstractContextLoader.modifyLocations()} for details on how a location_String will be interpreted at runtime, in particular in case of a relative_path. Also, check out the documentation on_{@link org.springframework.test.context.support.AbstractContextLoader#generateDefaultLocations_AbstractContextLoader.generateDefaultLocations()} for details on the default_locations that are going to be used if none are specified.__<p>Note that the above-mentioned default rules only apply for a standard_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader} subclass such as_{@link org.springframework.test.context.support.GenericXmlContextLoader_GenericXmlContextLoader} which is the effective default implementation_used at runtime if {@code locations} are configured. See the_documentation for {@link #loader} for further details regarding default_loaders.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value}, but it may be used instead of {@link #value}.__@since 2.5_@see #inheritLocations;String[] locations() default {}_;the,resource,locations,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,modify,locations,abstract,context,loader,modify,locations,for,details,on,how,a,location,string,will,be,interpreted,at,runtime,in,particular,in,case,of,a,relative,path,also,check,out,the,documentation,on,link,org,springframework,test,context,support,abstract,context,loader,generate,default,locations,abstract,context,loader,generate,default,locations,for,details,on,the,default,locations,that,are,going,to,be,used,if,none,are,specified,p,note,that,the,above,mentioned,default,rules,only,apply,for,a,standard,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,subclass,such,as,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,which,is,the,effective,default,implementation,used,at,runtime,if,code,locations,are,configured,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,but,it,may,be,used,instead,of,link,value,since,2,5,see,inherit,locations;string,locations,default
ContextConfiguration -> String[] locations() default {}_;1406214559;The resource locations to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader#modifyLocations_AbstractContextLoader.modifyLocations()} for details on how a location_will be interpreted at runtime, in particular in case of a relative_path. Also, check out the documentation on_{@link org.springframework.test.context.support.AbstractContextLoader#generateDefaultLocations_AbstractContextLoader.generateDefaultLocations()} for details on the_default locations that are going to be used if none are specified.__<p>Note that the aforementioned default rules only apply for a standard_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader} subclass such as_{@link org.springframework.test.context.support.GenericXmlContextLoader GenericXmlContextLoader} or_{@link org.springframework.test.context.support.GenericGroovyXmlContextLoader GenericGroovyXmlContextLoader}_which are the effective default implementations used at runtime if_{@code locations} are configured. See the documentation for {@link #loader}_for further details regarding default loaders.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value}, but it may be used instead of {@link #value}.__@since 2.5_@see #inheritLocations;String[] locations() default {}_;the,resource,locations,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,modify,locations,abstract,context,loader,modify,locations,for,details,on,how,a,location,will,be,interpreted,at,runtime,in,particular,in,case,of,a,relative,path,also,check,out,the,documentation,on,link,org,springframework,test,context,support,abstract,context,loader,generate,default,locations,abstract,context,loader,generate,default,locations,for,details,on,the,default,locations,that,are,going,to,be,used,if,none,are,specified,p,note,that,the,aforementioned,default,rules,only,apply,for,a,standard,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,subclass,such,as,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,or,link,org,springframework,test,context,support,generic,groovy,xml,context,loader,generic,groovy,xml,context,loader,which,are,the,effective,default,implementations,used,at,runtime,if,code,locations,are,configured,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,but,it,may,be,used,instead,of,link,value,since,2,5,see,inherit,locations;string,locations,default
ContextConfiguration -> String[] locations() default {}_;1407419079;The resource locations to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader#modifyLocations_AbstractContextLoader.modifyLocations()} for details on how a location_will be interpreted at runtime, in particular in case of a relative_path. Also, check out the documentation on_{@link org.springframework.test.context.support.AbstractContextLoader#generateDefaultLocations_AbstractContextLoader.generateDefaultLocations()} for details on the_default locations that are going to be used if none are specified.__<p>Note that the aforementioned default rules only apply for a standard_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader} subclass such as_{@link org.springframework.test.context.support.GenericXmlContextLoader GenericXmlContextLoader} or_{@link org.springframework.test.context.support.GenericGroovyXmlContextLoader GenericGroovyXmlContextLoader}_which are the effective default implementations used at runtime if_{@code locations} are configured. See the documentation for {@link #loader}_for further details regarding default loaders.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value}, but it may be used instead of {@link #value}.__@since 2.5_@see #inheritLocations;String[] locations() default {}_;the,resource,locations,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,modify,locations,abstract,context,loader,modify,locations,for,details,on,how,a,location,will,be,interpreted,at,runtime,in,particular,in,case,of,a,relative,path,also,check,out,the,documentation,on,link,org,springframework,test,context,support,abstract,context,loader,generate,default,locations,abstract,context,loader,generate,default,locations,for,details,on,the,default,locations,that,are,going,to,be,used,if,none,are,specified,p,note,that,the,aforementioned,default,rules,only,apply,for,a,standard,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,subclass,such,as,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,or,link,org,springframework,test,context,support,generic,groovy,xml,context,loader,generic,groovy,xml,context,loader,which,are,the,effective,default,implementations,used,at,runtime,if,code,locations,are,configured,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,but,it,may,be,used,instead,of,link,value,since,2,5,see,inherit,locations;string,locations,default
ContextConfiguration -> String[] locations() default {}_;1407967503;The resource locations to use for loading an_{@link org.springframework.context.ApplicationContext ApplicationContext}.__<p>Check out the Javadoc for_{@link org.springframework.test.context.support.AbstractContextLoader#modifyLocations_AbstractContextLoader.modifyLocations()} for details on how a location_will be interpreted at runtime, in particular in case of a relative_path. Also, check out the documentation on_{@link org.springframework.test.context.support.AbstractContextLoader#generateDefaultLocations_AbstractContextLoader.generateDefaultLocations()} for details on the_default locations that are going to be used if none are specified.__<p>Note that the aforementioned default rules only apply for a standard_{@link org.springframework.test.context.support.AbstractContextLoader_AbstractContextLoader} subclass such as_{@link org.springframework.test.context.support.GenericXmlContextLoader GenericXmlContextLoader} or_{@link org.springframework.test.context.support.GenericGroovyXmlContextLoader GenericGroovyXmlContextLoader}_which are the effective default implementations used at runtime if_{@code locations} are configured. See the documentation for {@link #loader}_for further details regarding default loaders.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value}, but it may be used instead of {@link #value}.__@since 2.5_@see #inheritLocations;String[] locations() default {}_;the,resource,locations,to,use,for,loading,an,link,org,springframework,context,application,context,application,context,p,check,out,the,javadoc,for,link,org,springframework,test,context,support,abstract,context,loader,modify,locations,abstract,context,loader,modify,locations,for,details,on,how,a,location,will,be,interpreted,at,runtime,in,particular,in,case,of,a,relative,path,also,check,out,the,documentation,on,link,org,springframework,test,context,support,abstract,context,loader,generate,default,locations,abstract,context,loader,generate,default,locations,for,details,on,the,default,locations,that,are,going,to,be,used,if,none,are,specified,p,note,that,the,aforementioned,default,rules,only,apply,for,a,standard,link,org,springframework,test,context,support,abstract,context,loader,abstract,context,loader,subclass,such,as,link,org,springframework,test,context,support,generic,xml,context,loader,generic,xml,context,loader,or,link,org,springframework,test,context,support,generic,groovy,xml,context,loader,generic,groovy,xml,context,loader,which,are,the,effective,default,implementations,used,at,runtime,if,code,locations,are,configured,see,the,documentation,for,link,loader,for,further,details,regarding,default,loaders,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,but,it,may,be,used,instead,of,link,value,since,2,5,see,inherit,locations;string,locations,default
