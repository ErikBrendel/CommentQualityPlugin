# id;timestamp;commentText;codeText;commentWords;codeWords
JsonPathResultMatchers -> public <T> ResultMatcher value(Matcher<T> matcher, Class<T> targetType);1520952939;An overloaded variant of {@link #value(Matcher)} that also accepts a_target type for the resulting value that the matcher can work reliably_against._<p>This can be useful for matching numbers reliably &mdash_ for example,_to coerce an integer into a double._@since 4.3.15_@see #value(Matcher)_@see #value(Object);public <T> ResultMatcher value(Matcher<T> matcher, Class<T> targetType) {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValue(content, matcher, targetType)__		}__	};an,overloaded,variant,of,link,value,matcher,that,also,accepts,a,target,type,for,the,resulting,value,that,the,matcher,can,work,reliably,against,p,this,can,be,useful,for,matching,numbers,reliably,mdash,for,example,to,coerce,an,integer,into,a,double,since,4,3,15,see,value,matcher,see,value,object;public,t,result,matcher,value,matcher,t,matcher,class,t,target,type,return,result,string,content,get,content,result,json,path,helper,assert,value,content,matcher,target,type
JsonPathResultMatchers -> public <T> ResultMatcher value(Matcher<T> matcher, Class<T> targetType);1520956132;An overloaded variant of {@link #value(Matcher)} that also accepts a_target type for the resulting value that the matcher can work reliably_against._<p>This can be useful for matching numbers reliably &mdash_ for example,_to coerce an integer into a double._@since 4.3.15_@see #value(Matcher)_@see #value(Object);public <T> ResultMatcher value(Matcher<T> matcher, Class<T> targetType) {_		return result -> jsonPathHelper.assertValue(getContent(result), matcher, targetType)__	};an,overloaded,variant,of,link,value,matcher,that,also,accepts,a,target,type,for,the,resulting,value,that,the,matcher,can,work,reliably,against,p,this,can,be,useful,for,matching,numbers,reliably,mdash,for,example,to,coerce,an,integer,into,a,double,since,4,3,15,see,value,matcher,see,value,object;public,t,result,matcher,value,matcher,t,matcher,class,t,target,type,return,result,json,path,helper,assert,value,get,content,result,matcher,target,type
JsonPathResultMatchers -> public <T> ResultMatcher value(Matcher<T> matcher, Class<T> targetType);1530174524;An overloaded variant of {@link #value(Matcher)} that also accepts a_target type for the resulting value that the matcher can work reliably_against._<p>This can be useful for matching numbers reliably &mdash_ for example,_to coerce an integer into a double._@since 4.3.15_@see #value(Matcher)_@see #value(Object);public <T> ResultMatcher value(Matcher<T> matcher, Class<T> targetType) {_		return result -> this.jsonPathHelper.assertValue(getContent(result), matcher, targetType)__	};an,overloaded,variant,of,link,value,matcher,that,also,accepts,a,target,type,for,the,resulting,value,that,the,matcher,can,work,reliably,against,p,this,can,be,useful,for,matching,numbers,reliably,mdash,for,example,to,coerce,an,integer,into,a,double,since,4,3,15,see,value,matcher,see,value,object;public,t,result,matcher,value,matcher,t,matcher,class,t,target,type,return,result,this,json,path,helper,assert,value,get,content,result,matcher,target,type
JsonPathResultMatchers -> public ResultMatcher isEmpty();1439659689;Evaluate the JSON path expression against the response content and_assert that an empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isNotEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isEmpty() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsEmpty(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,an,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,not,empty,see,exists,see,does,not,exist;public,result,matcher,is,empty,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,empty,content
JsonPathResultMatchers -> public ResultMatcher isEmpty();1448489364;Evaluate the JSON path expression against the response content and_assert that an empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isNotEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isEmpty() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.assertValueIsEmpty(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,an,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,not,empty,see,exists,see,does,not,exist;public,result,matcher,is,empty,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,assert,value,is,empty,content
JsonPathResultMatchers -> public ResultMatcher isEmpty();1458321222;Evaluate the JSON path expression against the response content and_assert that an empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isNotEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isEmpty() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsEmpty(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,an,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,not,empty,see,exists,see,does,not,exist;public,result,matcher,is,empty,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,empty,content
JsonPathResultMatchers -> public ResultMatcher isEmpty();1458944925;Evaluate the JSON path expression against the response content and_assert that an empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isNotEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isEmpty() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsEmpty(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,an,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,not,empty,see,exists,see,does,not,exist;public,result,matcher,is,empty,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,empty,content
JsonPathResultMatchers -> public ResultMatcher isEmpty();1472464380;Evaluate the JSON path expression against the response content and_assert that an empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isNotEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isEmpty() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsEmpty(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,an,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,not,empty,see,exists,see,does,not,exist;public,result,matcher,is,empty,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,empty,content
JsonPathResultMatchers -> public ResultMatcher isEmpty();1493235170;Evaluate the JSON path expression against the response content and_assert that an empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isNotEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isEmpty() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsEmpty(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,an,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,not,empty,see,exists,see,does,not,exist;public,result,matcher,is,empty,return,result,string,content,get,content,result,json,path,helper,assert,value,is,empty,content
JsonPathResultMatchers -> public ResultMatcher isEmpty();1500495740;Evaluate the JSON path expression against the response content and_assert that an empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isNotEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isEmpty() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsEmpty(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,an,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,not,empty,see,exists,see,does,not,exist;public,result,matcher,is,empty,return,result,string,content,get,content,result,json,path,helper,assert,value,is,empty,content
JsonPathResultMatchers -> public ResultMatcher isEmpty();1515029229;Evaluate the JSON path expression against the response content and_assert that an empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isNotEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isEmpty() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsEmpty(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,an,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,not,empty,see,exists,see,does,not,exist;public,result,matcher,is,empty,return,result,string,content,get,content,result,json,path,helper,assert,value,is,empty,content
JsonPathResultMatchers -> public ResultMatcher isEmpty();1520952939;Evaluate the JSON path expression against the response content and_assert that an empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isNotEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isEmpty() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsEmpty(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,an,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,not,empty,see,exists,see,does,not,exist;public,result,matcher,is,empty,return,result,string,content,get,content,result,json,path,helper,assert,value,is,empty,content
JsonPathResultMatchers -> public ResultMatcher isEmpty();1520956132;Evaluate the JSON path expression against the response content and_assert that an empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isNotEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isEmpty() {_		return result -> jsonPathHelper.assertValueIsEmpty(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,an,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,not,empty,see,exists,see,does,not,exist;public,result,matcher,is,empty,return,result,json,path,helper,assert,value,is,empty,get,content,result
JsonPathResultMatchers -> public ResultMatcher isEmpty();1530174524;Evaluate the JSON path expression against the response content and_assert that an empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isNotEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isEmpty() {_		return result -> this.jsonPathHelper.assertValueIsEmpty(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,an,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,not,empty,see,exists,see,does,not,exist;public,result,matcher,is,empty,return,result,this,json,path,helper,assert,value,is,empty,get,content,result
JsonPathResultMatchers -> public <T> ResultMatcher value(final Matcher<T> matcher);1383669853;Evaluate the JSONPath and assert the value of the content found with the_given Hamcrest {@code Matcher}.;public <T> ResultMatcher value(final Matcher<T> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.assertValue(content, matcher)__			}_		}__	};evaluate,the,jsonpath,and,assert,the,value,of,the,content,found,with,the,given,hamcrest,code,matcher;public,t,result,matcher,value,final,matcher,t,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,assert,value,content,matcher
JsonPathResultMatchers -> public <T> ResultMatcher value(final Matcher<T> matcher);1413848647;Evaluate the JSONPath and assert the value of the content found with the_given Hamcrest {@code Matcher}.;public <T> ResultMatcher value(final Matcher<T> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.assertValue(content, matcher)__			}_		}__	};evaluate,the,jsonpath,and,assert,the,value,of,the,content,found,with,the,given,hamcrest,code,matcher;public,t,result,matcher,value,final,matcher,t,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,assert,value,content,matcher
JsonPathResultMatchers -> public <T> ResultMatcher value(final Matcher<T> matcher);1427238287;Evaluate the JSONPath and assert the value of the content found with the_given Hamcrest {@code Matcher}.;public <T> ResultMatcher value(final Matcher<T> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.assertValue(content, matcher)__			}_		}__	};evaluate,the,jsonpath,and,assert,the,value,of,the,content,found,with,the,given,hamcrest,code,matcher;public,t,result,matcher,value,final,matcher,t,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,assert,value,content,matcher
JsonPathResultMatchers -> public <T> ResultMatcher value(final Matcher<T> matcher);1437424890;Evaluate the JSONPath and assert the value of the content found with the_given Hamcrest {@code Matcher}.;public <T> ResultMatcher value(final Matcher<T> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.assertValue(content, matcher)__			}_		}__	};evaluate,the,jsonpath,and,assert,the,value,of,the,content,found,with,the,given,hamcrest,code,matcher;public,t,result,matcher,value,final,matcher,t,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,assert,value,content,matcher
JsonPathResultMatchers -> public <T> ResultMatcher value(final Matcher<T> matcher);1438899933;Evaluate the JSON path expression against the response content and_assert the resulting value with the given Hamcrest {@link Matcher}.;public <T> ResultMatcher value(final Matcher<T> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValue(content, matcher)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,the,resulting,value,with,the,given,hamcrest,link,matcher;public,t,result,matcher,value,final,matcher,t,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,content,matcher
JsonPathResultMatchers -> public <T> ResultMatcher value(final Matcher<T> matcher);1439582823;Evaluate the JSON path expression against the response content and_assert the resulting value with the given Hamcrest {@link Matcher}.;public <T> ResultMatcher value(final Matcher<T> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValue(content, matcher)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,the,resulting,value,with,the,given,hamcrest,link,matcher;public,t,result,matcher,value,final,matcher,t,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,content,matcher
JsonPathResultMatchers -> public <T> ResultMatcher value(final Matcher<T> matcher);1439639730;Evaluate the JSON path expression against the response content and_assert the resulting value with the given Hamcrest {@link Matcher}.;public <T> ResultMatcher value(final Matcher<T> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValue(content, matcher)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,the,resulting,value,with,the,given,hamcrest,link,matcher;public,t,result,matcher,value,final,matcher,t,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,content,matcher
JsonPathResultMatchers -> public <T> ResultMatcher value(final Matcher<T> matcher);1439659689;Evaluate the JSON path expression against the response content and_assert the resulting value with the given Hamcrest {@link Matcher}.;public <T> ResultMatcher value(final Matcher<T> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValue(content, matcher)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,the,resulting,value,with,the,given,hamcrest,link,matcher;public,t,result,matcher,value,final,matcher,t,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,content,matcher
JsonPathResultMatchers -> public <T> ResultMatcher value(final Matcher<T> matcher);1448489364;Evaluate the JSON path expression against the response content and_assert the resulting value with the given Hamcrest {@link Matcher}.;public <T> ResultMatcher value(final Matcher<T> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.assertValue(content, matcher)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,the,resulting,value,with,the,given,hamcrest,link,matcher;public,t,result,matcher,value,final,matcher,t,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,assert,value,content,matcher
JsonPathResultMatchers -> public <T> ResultMatcher value(final Matcher<T> matcher);1458321222;Evaluate the JSON path expression against the response content and_assert the resulting value with the given Hamcrest {@link Matcher}.;public <T> ResultMatcher value(final Matcher<T> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValue(content, matcher)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,the,resulting,value,with,the,given,hamcrest,link,matcher;public,t,result,matcher,value,final,matcher,t,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,content,matcher
JsonPathResultMatchers -> public <T> ResultMatcher value(final Matcher<T> matcher);1458944925;Evaluate the JSON path expression against the response content and_assert the resulting value with the given Hamcrest {@link Matcher}.;public <T> ResultMatcher value(final Matcher<T> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValue(content, matcher)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,the,resulting,value,with,the,given,hamcrest,link,matcher;public,t,result,matcher,value,final,matcher,t,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,content,matcher
JsonPathResultMatchers -> public <T> ResultMatcher value(final Matcher<T> matcher);1472464380;Evaluate the JSON path expression against the response content and_assert the resulting value with the given Hamcrest {@link Matcher}.;public <T> ResultMatcher value(final Matcher<T> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValue(content, matcher)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,the,resulting,value,with,the,given,hamcrest,link,matcher;public,t,result,matcher,value,final,matcher,t,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,content,matcher
JsonPathResultMatchers -> public <T> ResultMatcher value(final Matcher<T> matcher);1493235170;Evaluate the JSON path expression against the response content and_assert the resulting value with the given Hamcrest {@link Matcher}.;public <T> ResultMatcher value(final Matcher<T> matcher) {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValue(content, matcher)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,the,resulting,value,with,the,given,hamcrest,link,matcher;public,t,result,matcher,value,final,matcher,t,matcher,return,result,string,content,get,content,result,json,path,helper,assert,value,content,matcher
JsonPathResultMatchers -> public <T> ResultMatcher value(final Matcher<T> matcher);1500495740;Evaluate the JSON path expression against the response content and_assert the resulting value with the given Hamcrest {@link Matcher}.;public <T> ResultMatcher value(final Matcher<T> matcher) {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValue(content, matcher)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,the,resulting,value,with,the,given,hamcrest,link,matcher;public,t,result,matcher,value,final,matcher,t,matcher,return,result,string,content,get,content,result,json,path,helper,assert,value,content,matcher
JsonPathResultMatchers -> public <T> ResultMatcher value(final Matcher<T> matcher);1515029229;Evaluate the JSON path expression against the response content and_assert the resulting value with the given Hamcrest {@link Matcher}.;public <T> ResultMatcher value(final Matcher<T> matcher) {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValue(content, matcher)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,the,resulting,value,with,the,given,hamcrest,link,matcher;public,t,result,matcher,value,final,matcher,t,matcher,return,result,string,content,get,content,result,json,path,helper,assert,value,content,matcher
JsonPathResultMatchers -> public ResultMatcher isMap();1438899933;Evaluate the JSON path expression against the response content and_assert that the result is a {@link java.util.Map}._@since 4.2.1;public ResultMatcher isMap() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsMap(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,java,util,map,since,4,2,1;public,result,matcher,is,map,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,map,content
JsonPathResultMatchers -> public ResultMatcher isMap();1439582823;Evaluate the JSON path expression against the response content and_assert that the result is a {@link java.util.Map}._@since 4.2.1;public ResultMatcher isMap() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsMap(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,java,util,map,since,4,2,1;public,result,matcher,is,map,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,map,content
JsonPathResultMatchers -> public ResultMatcher isMap();1439639730;Evaluate the JSON path expression against the response content and_assert that the result is a {@link java.util.Map}._@since 4.2.1;public ResultMatcher isMap() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsMap(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,java,util,map,since,4,2,1;public,result,matcher,is,map,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,map,content
JsonPathResultMatchers -> public ResultMatcher isMap();1439659689;Evaluate the JSON path expression against the response content and_assert that the result is a {@link java.util.Map}._@since 4.2.1;public ResultMatcher isMap() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsMap(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,java,util,map,since,4,2,1;public,result,matcher,is,map,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,map,content
JsonPathResultMatchers -> public ResultMatcher isMap();1448489364;Evaluate the JSON path expression against the response content and_assert that the result is a {@link java.util.Map}._@since 4.2.1;public ResultMatcher isMap() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.assertValueIsMap(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,java,util,map,since,4,2,1;public,result,matcher,is,map,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,assert,value,is,map,content
JsonPathResultMatchers -> public ResultMatcher isMap();1458321222;Evaluate the JSON path expression against the response content and_assert that the result is a {@link java.util.Map}._@since 4.2.1;public ResultMatcher isMap() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsMap(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,java,util,map,since,4,2,1;public,result,matcher,is,map,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,map,content
JsonPathResultMatchers -> public ResultMatcher isMap();1458944925;Evaluate the JSON path expression against the response content and_assert that the result is a {@link java.util.Map}._@since 4.2.1;public ResultMatcher isMap() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsMap(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,java,util,map,since,4,2,1;public,result,matcher,is,map,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,map,content
JsonPathResultMatchers -> public ResultMatcher isMap();1472464380;Evaluate the JSON path expression against the response content and_assert that the result is a {@link java.util.Map}._@since 4.2.1;public ResultMatcher isMap() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsMap(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,java,util,map,since,4,2,1;public,result,matcher,is,map,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,map,content
JsonPathResultMatchers -> public ResultMatcher isMap();1493235170;Evaluate the JSON path expression against the response content and_assert that the result is a {@link java.util.Map}._@since 4.2.1;public ResultMatcher isMap() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsMap(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,java,util,map,since,4,2,1;public,result,matcher,is,map,return,result,string,content,get,content,result,json,path,helper,assert,value,is,map,content
JsonPathResultMatchers -> public ResultMatcher isMap();1500495740;Evaluate the JSON path expression against the response content and_assert that the result is a {@link java.util.Map}._@since 4.2.1;public ResultMatcher isMap() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsMap(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,java,util,map,since,4,2,1;public,result,matcher,is,map,return,result,string,content,get,content,result,json,path,helper,assert,value,is,map,content
JsonPathResultMatchers -> public ResultMatcher isMap();1515029229;Evaluate the JSON path expression against the response content and_assert that the result is a {@link java.util.Map}._@since 4.2.1;public ResultMatcher isMap() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsMap(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,java,util,map,since,4,2,1;public,result,matcher,is,map,return,result,string,content,get,content,result,json,path,helper,assert,value,is,map,content
JsonPathResultMatchers -> public ResultMatcher isMap();1520952939;Evaluate the JSON path expression against the response content and_assert that the result is a {@link java.util.Map}._@since 4.2.1;public ResultMatcher isMap() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsMap(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,java,util,map,since,4,2,1;public,result,matcher,is,map,return,result,string,content,get,content,result,json,path,helper,assert,value,is,map,content
JsonPathResultMatchers -> public ResultMatcher isMap();1520956132;Evaluate the JSON path expression against the response content and_assert that the result is a {@link java.util.Map}._@since 4.2.1;public ResultMatcher isMap() {_		return result -> jsonPathHelper.assertValueIsMap(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,java,util,map,since,4,2,1;public,result,matcher,is,map,return,result,json,path,helper,assert,value,is,map,get,content,result
JsonPathResultMatchers -> public ResultMatcher isMap();1530174524;Evaluate the JSON path expression against the response content and_assert that the result is a {@link java.util.Map}._@since 4.2.1;public ResultMatcher isMap() {_		return result -> this.jsonPathHelper.assertValueIsMap(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,java,util,map,since,4,2,1;public,result,matcher,is,map,return,result,this,json,path,helper,assert,value,is,map,get,content,result
JsonPathResultMatchers -> public JsonPathResultMatchers prefix(String prefix);1458321222;Configures the current {@code JsonPathResultMatchers} instance_to verify that the JSON payload is prepended with the given prefix._<p>Use this method if the JSON payloads are prefixed to avoid_Cross Site Script Inclusion (XSSI) attacks._@param prefix the string prefix prepended to the actual JSON payload_@since 4.3.0;public JsonPathResultMatchers prefix(String prefix) {_		this.prefix = prefix__		return this__	};configures,the,current,code,json,path,result,matchers,instance,to,verify,that,the,json,payload,is,prepended,with,the,given,prefix,p,use,this,method,if,the,json,payloads,are,prefixed,to,avoid,cross,site,script,inclusion,xssi,attacks,param,prefix,the,string,prefix,prepended,to,the,actual,json,payload,since,4,3,0;public,json,path,result,matchers,prefix,string,prefix,this,prefix,prefix,return,this
JsonPathResultMatchers -> public JsonPathResultMatchers prefix(String prefix);1458944925;Configures the current {@code JsonPathResultMatchers} instance_to verify that the JSON payload is prepended with the given prefix._<p>Use this method if the JSON payloads are prefixed to avoid_Cross Site Script Inclusion (XSSI) attacks._@param prefix the string prefix prepended to the actual JSON payload_@since 4.3;public JsonPathResultMatchers prefix(String prefix) {_		this.prefix = prefix__		return this__	};configures,the,current,code,json,path,result,matchers,instance,to,verify,that,the,json,payload,is,prepended,with,the,given,prefix,p,use,this,method,if,the,json,payloads,are,prefixed,to,avoid,cross,site,script,inclusion,xssi,attacks,param,prefix,the,string,prefix,prepended,to,the,actual,json,payload,since,4,3;public,json,path,result,matchers,prefix,string,prefix,this,prefix,prefix,return,this
JsonPathResultMatchers -> public JsonPathResultMatchers prefix(String prefix);1472464380;Configures the current {@code JsonPathResultMatchers} instance_to verify that the JSON payload is prepended with the given prefix._<p>Use this method if the JSON payloads are prefixed to avoid_Cross Site Script Inclusion (XSSI) attacks._@param prefix the string prefix prepended to the actual JSON payload_@since 4.3;public JsonPathResultMatchers prefix(String prefix) {_		this.prefix = prefix__		return this__	};configures,the,current,code,json,path,result,matchers,instance,to,verify,that,the,json,payload,is,prepended,with,the,given,prefix,p,use,this,method,if,the,json,payloads,are,prefixed,to,avoid,cross,site,script,inclusion,xssi,attacks,param,prefix,the,string,prefix,prepended,to,the,actual,json,payload,since,4,3;public,json,path,result,matchers,prefix,string,prefix,this,prefix,prefix,return,this
JsonPathResultMatchers -> public JsonPathResultMatchers prefix(String prefix);1493235170;Configures the current {@code JsonPathResultMatchers} instance_to verify that the JSON payload is prepended with the given prefix._<p>Use this method if the JSON payloads are prefixed to avoid_Cross Site Script Inclusion (XSSI) attacks._@param prefix the string prefix prepended to the actual JSON payload_@since 4.3;public JsonPathResultMatchers prefix(String prefix) {_		this.prefix = prefix__		return this__	};configures,the,current,code,json,path,result,matchers,instance,to,verify,that,the,json,payload,is,prepended,with,the,given,prefix,p,use,this,method,if,the,json,payloads,are,prefixed,to,avoid,cross,site,script,inclusion,xssi,attacks,param,prefix,the,string,prefix,prepended,to,the,actual,json,payload,since,4,3;public,json,path,result,matchers,prefix,string,prefix,this,prefix,prefix,return,this
JsonPathResultMatchers -> public JsonPathResultMatchers prefix(String prefix);1500495740;Configures the current {@code JsonPathResultMatchers} instance_to verify that the JSON payload is prepended with the given prefix._<p>Use this method if the JSON payloads are prefixed to avoid_Cross Site Script Inclusion (XSSI) attacks._@param prefix the string prefix prepended to the actual JSON payload_@since 4.3;public JsonPathResultMatchers prefix(String prefix) {_		this.prefix = prefix__		return this__	};configures,the,current,code,json,path,result,matchers,instance,to,verify,that,the,json,payload,is,prepended,with,the,given,prefix,p,use,this,method,if,the,json,payloads,are,prefixed,to,avoid,cross,site,script,inclusion,xssi,attacks,param,prefix,the,string,prefix,prepended,to,the,actual,json,payload,since,4,3;public,json,path,result,matchers,prefix,string,prefix,this,prefix,prefix,return,this
JsonPathResultMatchers -> public JsonPathResultMatchers prefix(String prefix);1515029229;Configures the current {@code JsonPathResultMatchers} instance_to verify that the JSON payload is prepended with the given prefix._<p>Use this method if the JSON payloads are prefixed to avoid_Cross Site Script Inclusion (XSSI) attacks._@param prefix the string prefix prepended to the actual JSON payload_@since 4.3;public JsonPathResultMatchers prefix(String prefix) {_		this.prefix = prefix__		return this__	};configures,the,current,code,json,path,result,matchers,instance,to,verify,that,the,json,payload,is,prepended,with,the,given,prefix,p,use,this,method,if,the,json,payloads,are,prefixed,to,avoid,cross,site,script,inclusion,xssi,attacks,param,prefix,the,string,prefix,prepended,to,the,actual,json,payload,since,4,3;public,json,path,result,matchers,prefix,string,prefix,this,prefix,prefix,return,this
JsonPathResultMatchers -> public JsonPathResultMatchers prefix(String prefix);1520952939;Configures the current {@code JsonPathResultMatchers} instance_to verify that the JSON payload is prepended with the given prefix._<p>Use this method if the JSON payloads are prefixed to avoid_Cross Site Script Inclusion (XSSI) attacks._@param prefix the string prefix prepended to the actual JSON payload_@since 4.3;public JsonPathResultMatchers prefix(String prefix) {_		this.prefix = prefix__		return this__	};configures,the,current,code,json,path,result,matchers,instance,to,verify,that,the,json,payload,is,prepended,with,the,given,prefix,p,use,this,method,if,the,json,payloads,are,prefixed,to,avoid,cross,site,script,inclusion,xssi,attacks,param,prefix,the,string,prefix,prepended,to,the,actual,json,payload,since,4,3;public,json,path,result,matchers,prefix,string,prefix,this,prefix,prefix,return,this
JsonPathResultMatchers -> public JsonPathResultMatchers prefix(String prefix);1520956132;Configures the current {@code JsonPathResultMatchers} instance_to verify that the JSON payload is prepended with the given prefix._<p>Use this method if the JSON payloads are prefixed to avoid_Cross Site Script Inclusion (XSSI) attacks._@param prefix the string prefix prepended to the actual JSON payload_@since 4.3;public JsonPathResultMatchers prefix(String prefix) {_		this.prefix = prefix__		return this__	};configures,the,current,code,json,path,result,matchers,instance,to,verify,that,the,json,payload,is,prepended,with,the,given,prefix,p,use,this,method,if,the,json,payloads,are,prefixed,to,avoid,cross,site,script,inclusion,xssi,attacks,param,prefix,the,string,prefix,prepended,to,the,actual,json,payload,since,4,3;public,json,path,result,matchers,prefix,string,prefix,this,prefix,prefix,return,this
JsonPathResultMatchers -> public JsonPathResultMatchers prefix(String prefix);1530174524;Configures the current {@code JsonPathResultMatchers} instance_to verify that the JSON payload is prepended with the given prefix._<p>Use this method if the JSON payloads are prefixed to avoid_Cross Site Script Inclusion (XSSI) attacks._@param prefix the string prefix prepended to the actual JSON payload_@since 4.3;public JsonPathResultMatchers prefix(String prefix) {_		this.prefix = prefix__		return this__	};configures,the,current,code,json,path,result,matchers,instance,to,verify,that,the,json,payload,is,prepended,with,the,given,prefix,p,use,this,method,if,the,json,payloads,are,prefixed,to,avoid,cross,site,script,inclusion,xssi,attacks,param,prefix,the,string,prefix,prepended,to,the,actual,json,payload,since,4,3;public,json,path,result,matchers,prefix,string,prefix,this,prefix,prefix,return,this
JsonPathResultMatchers -> public ResultMatcher doesNotHaveJsonPath();1515029229;Evaluate the JSON path expression against the supplied {@code content}_and assert that a value, including {@code null} values, does not exist_at the given path._<p>If the JSON path expression is not_{@linkplain JsonPath#isDefinite() definite}, this method asserts_that the list of values at the given path is <em>empty</em>._@since 5.0.3_@see #doesNotExist()_@see #isEmpty();public ResultMatcher doesNotHaveJsonPath() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.doesNotHaveJsonPath(content)__		}__	};evaluate,the,json,path,expression,against,the,supplied,code,content,and,assert,that,a,value,including,code,null,values,does,not,exist,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,list,of,values,at,the,given,path,is,em,empty,em,since,5,0,3,see,does,not,exist,see,is,empty;public,result,matcher,does,not,have,json,path,return,result,string,content,get,content,result,json,path,helper,does,not,have,json,path,content
JsonPathResultMatchers -> public ResultMatcher doesNotHaveJsonPath();1520952939;Evaluate the JSON path expression against the supplied {@code content}_and assert that a value, including {@code null} values, does not exist_at the given path._<p>If the JSON path expression is not_{@linkplain JsonPath#isDefinite() definite}, this method asserts_that the list of values at the given path is <em>empty</em>._@since 5.0.3_@see #doesNotExist()_@see #isEmpty();public ResultMatcher doesNotHaveJsonPath() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.doesNotHaveJsonPath(content)__		}__	};evaluate,the,json,path,expression,against,the,supplied,code,content,and,assert,that,a,value,including,code,null,values,does,not,exist,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,list,of,values,at,the,given,path,is,em,empty,em,since,5,0,3,see,does,not,exist,see,is,empty;public,result,matcher,does,not,have,json,path,return,result,string,content,get,content,result,json,path,helper,does,not,have,json,path,content
JsonPathResultMatchers -> public ResultMatcher doesNotHaveJsonPath();1520956132;Evaluate the JSON path expression against the supplied {@code content}_and assert that a value, including {@code null} values, does not exist_at the given path._<p>If the JSON path expression is not_{@linkplain JsonPath#isDefinite() definite}, this method asserts_that the list of values at the given path is <em>empty</em>._@since 5.0.3_@see #doesNotExist()_@see #isEmpty();public ResultMatcher doesNotHaveJsonPath() {_		return result -> jsonPathHelper.doesNotHaveJsonPath(getContent(result))__	};evaluate,the,json,path,expression,against,the,supplied,code,content,and,assert,that,a,value,including,code,null,values,does,not,exist,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,list,of,values,at,the,given,path,is,em,empty,em,since,5,0,3,see,does,not,exist,see,is,empty;public,result,matcher,does,not,have,json,path,return,result,json,path,helper,does,not,have,json,path,get,content,result
JsonPathResultMatchers -> public ResultMatcher doesNotHaveJsonPath();1530174524;Evaluate the JSON path expression against the supplied {@code content}_and assert that a value, including {@code null} values, does not exist_at the given path._<p>If the JSON path expression is not_{@linkplain JsonPath#isDefinite() definite}, this method asserts_that the list of values at the given path is <em>empty</em>._@since 5.0.3_@see #doesNotExist()_@see #isEmpty();public ResultMatcher doesNotHaveJsonPath() {_		return result -> this.jsonPathHelper.doesNotHaveJsonPath(getContent(result))__	};evaluate,the,json,path,expression,against,the,supplied,code,content,and,assert,that,a,value,including,code,null,values,does,not,exist,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,list,of,values,at,the,given,path,is,em,empty,em,since,5,0,3,see,does,not,exist,see,is,empty;public,result,matcher,does,not,have,json,path,return,result,this,json,path,helper,does,not,have,json,path,get,content,result
JsonPathResultMatchers -> public ResultMatcher isArray();1383669853;Evluate the JSON path and assert the content found is an array.;public ResultMatcher isArray() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.assertValueIsArray(content)__			}_		}__	};evluate,the,json,path,and,assert,the,content,found,is,an,array;public,result,matcher,is,array,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,assert,value,is,array,content
JsonPathResultMatchers -> public ResultMatcher isArray();1413848647;Evluate the JSON path and assert the content found is an array.;public ResultMatcher isArray() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.assertValueIsArray(content)__			}_		}__	};evluate,the,json,path,and,assert,the,content,found,is,an,array;public,result,matcher,is,array,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,assert,value,is,array,content
JsonPathResultMatchers -> public ResultMatcher isArray();1427238287;Evluate the JSON path and assert the content found is an array.;public ResultMatcher isArray() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.assertValueIsArray(content)__			}_		}__	};evluate,the,json,path,and,assert,the,content,found,is,an,array;public,result,matcher,is,array,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,assert,value,is,array,content
JsonPathResultMatchers -> public ResultMatcher isArray();1437424890;Evluate the JSON path and assert the content found is an array.;public ResultMatcher isArray() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.assertValueIsArray(content)__			}_		}__	};evluate,the,json,path,and,assert,the,content,found,is,an,array;public,result,matcher,is,array,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,assert,value,is,array,content
JsonPathResultMatchers -> public ResultMatcher isArray();1438899933;Evaluate the JSON path expression against the response content and_assert that the result is an array.;public ResultMatcher isArray() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsArray(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,an,array;public,result,matcher,is,array,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,array,content
JsonPathResultMatchers -> public ResultMatcher isArray();1439582823;Evaluate the JSON path expression against the response content and_assert that the result is an array.;public ResultMatcher isArray() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsArray(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,an,array;public,result,matcher,is,array,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,array,content
JsonPathResultMatchers -> public ResultMatcher isArray();1439639730;Evaluate the JSON path expression against the response content and_assert that the result is an array.;public ResultMatcher isArray() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsArray(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,an,array;public,result,matcher,is,array,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,array,content
JsonPathResultMatchers -> public ResultMatcher isArray();1439659689;Evaluate the JSON path expression against the response content and_assert that the result is an array.;public ResultMatcher isArray() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsArray(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,an,array;public,result,matcher,is,array,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,array,content
JsonPathResultMatchers -> public ResultMatcher isArray();1448489364;Evaluate the JSON path expression against the response content and_assert that the result is an array.;public ResultMatcher isArray() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.assertValueIsArray(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,an,array;public,result,matcher,is,array,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,assert,value,is,array,content
JsonPathResultMatchers -> public ResultMatcher isArray();1458321222;Evaluate the JSON path expression against the response content and_assert that the result is an array.;public ResultMatcher isArray() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsArray(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,an,array;public,result,matcher,is,array,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,array,content
JsonPathResultMatchers -> public ResultMatcher isArray();1458944925;Evaluate the JSON path expression against the response content and_assert that the result is an array.;public ResultMatcher isArray() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsArray(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,an,array;public,result,matcher,is,array,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,array,content
JsonPathResultMatchers -> public ResultMatcher isArray();1472464380;Evaluate the JSON path expression against the response content and_assert that the result is an array.;public ResultMatcher isArray() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsArray(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,an,array;public,result,matcher,is,array,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,array,content
JsonPathResultMatchers -> public ResultMatcher isArray();1493235170;Evaluate the JSON path expression against the response content and_assert that the result is an array.;public ResultMatcher isArray() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsArray(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,an,array;public,result,matcher,is,array,return,result,string,content,get,content,result,json,path,helper,assert,value,is,array,content
JsonPathResultMatchers -> public ResultMatcher isArray();1500495740;Evaluate the JSON path expression against the response content and_assert that the result is an array.;public ResultMatcher isArray() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsArray(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,an,array;public,result,matcher,is,array,return,result,string,content,get,content,result,json,path,helper,assert,value,is,array,content
JsonPathResultMatchers -> public ResultMatcher isArray();1515029229;Evaluate the JSON path expression against the response content and_assert that the result is an array.;public ResultMatcher isArray() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsArray(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,an,array;public,result,matcher,is,array,return,result,string,content,get,content,result,json,path,helper,assert,value,is,array,content
JsonPathResultMatchers -> public ResultMatcher isArray();1520952939;Evaluate the JSON path expression against the response content and_assert that the result is an array.;public ResultMatcher isArray() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsArray(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,an,array;public,result,matcher,is,array,return,result,string,content,get,content,result,json,path,helper,assert,value,is,array,content
JsonPathResultMatchers -> public ResultMatcher isArray();1520956132;Evaluate the JSON path expression against the response content and_assert that the result is an array.;public ResultMatcher isArray() {_		return result -> jsonPathHelper.assertValueIsArray(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,an,array;public,result,matcher,is,array,return,result,json,path,helper,assert,value,is,array,get,content,result
JsonPathResultMatchers -> public ResultMatcher isArray();1530174524;Evaluate the JSON path expression against the response content and_assert that the result is an array.;public ResultMatcher isArray() {_		return result -> this.jsonPathHelper.assertValueIsArray(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,an,array;public,result,matcher,is,array,return,result,this,json,path,helper,assert,value,is,array,get,content,result
JsonPathResultMatchers -> public ResultMatcher isNotEmpty();1439659689;Evaluate the JSON path expression against the response content and_assert that a non-empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isNotEmpty() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsNotEmpty(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,empty,see,exists,see,does,not,exist;public,result,matcher,is,not,empty,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,not,empty,content
JsonPathResultMatchers -> public ResultMatcher isNotEmpty();1448489364;Evaluate the JSON path expression against the response content and_assert that a non-empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isNotEmpty() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.assertValueIsNotEmpty(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,empty,see,exists,see,does,not,exist;public,result,matcher,is,not,empty,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,assert,value,is,not,empty,content
JsonPathResultMatchers -> public ResultMatcher isNotEmpty();1458321222;Evaluate the JSON path expression against the response content and_assert that a non-empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isNotEmpty() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsNotEmpty(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,empty,see,exists,see,does,not,exist;public,result,matcher,is,not,empty,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,not,empty,content
JsonPathResultMatchers -> public ResultMatcher isNotEmpty();1458944925;Evaluate the JSON path expression against the response content and_assert that a non-empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isNotEmpty() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsNotEmpty(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,empty,see,exists,see,does,not,exist;public,result,matcher,is,not,empty,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,not,empty,content
JsonPathResultMatchers -> public ResultMatcher isNotEmpty();1472464380;Evaluate the JSON path expression against the response content and_assert that a non-empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isNotEmpty() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsNotEmpty(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,empty,see,exists,see,does,not,exist;public,result,matcher,is,not,empty,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,not,empty,content
JsonPathResultMatchers -> public ResultMatcher isNotEmpty();1493235170;Evaluate the JSON path expression against the response content and_assert that a non-empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isNotEmpty() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsNotEmpty(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,empty,see,exists,see,does,not,exist;public,result,matcher,is,not,empty,return,result,string,content,get,content,result,json,path,helper,assert,value,is,not,empty,content
JsonPathResultMatchers -> public ResultMatcher isNotEmpty();1500495740;Evaluate the JSON path expression against the response content and_assert that a non-empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isNotEmpty() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsNotEmpty(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,empty,see,exists,see,does,not,exist;public,result,matcher,is,not,empty,return,result,string,content,get,content,result,json,path,helper,assert,value,is,not,empty,content
JsonPathResultMatchers -> public ResultMatcher isNotEmpty();1515029229;Evaluate the JSON path expression against the response content and_assert that a non-empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isNotEmpty() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsNotEmpty(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,empty,see,exists,see,does,not,exist;public,result,matcher,is,not,empty,return,result,string,content,get,content,result,json,path,helper,assert,value,is,not,empty,content
JsonPathResultMatchers -> public ResultMatcher isNotEmpty();1520952939;Evaluate the JSON path expression against the response content and_assert that a non-empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isNotEmpty() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsNotEmpty(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,empty,see,exists,see,does,not,exist;public,result,matcher,is,not,empty,return,result,string,content,get,content,result,json,path,helper,assert,value,is,not,empty,content
JsonPathResultMatchers -> public ResultMatcher isNotEmpty();1520956132;Evaluate the JSON path expression against the response content and_assert that a non-empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isNotEmpty() {_		return result -> jsonPathHelper.assertValueIsNotEmpty(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,empty,see,exists,see,does,not,exist;public,result,matcher,is,not,empty,return,result,json,path,helper,assert,value,is,not,empty,get,content,result
JsonPathResultMatchers -> public ResultMatcher isNotEmpty();1530174524;Evaluate the JSON path expression against the response content and_assert that a non-empty value exists at the given path._<p>For the semantics of <em>empty</em>, consult the Javadoc for_{@link org.springframework.util.ObjectUtils#isEmpty(Object)}._@since 4.2.1_@see #isEmpty()_@see #exists()_@see #doesNotExist();public ResultMatcher isNotEmpty() {_		return result -> this.jsonPathHelper.assertValueIsNotEmpty(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,empty,value,exists,at,the,given,path,p,for,the,semantics,of,em,empty,em,consult,the,javadoc,for,link,org,springframework,util,object,utils,is,empty,object,since,4,2,1,see,is,empty,see,exists,see,does,not,exist;public,result,matcher,is,not,empty,return,result,this,json,path,helper,assert,value,is,not,empty,get,content,result
JsonPathResultMatchers -> protected JsonPathResultMatchers(String expression, Object... args);1458321222;Protected constructor._<p>Use {@link MockMvcResultMatchers#jsonPath(String, Object...)} or_{@link MockMvcResultMatchers#jsonPath(String, Matcher)}._@param expression the {@link JsonPath} expression_ never {@code null} or empty_@param args arguments to parameterize the {@code JsonPath} expression with,_using formatting specifiers defined in {@link String#format(String, Object...)};protected JsonPathResultMatchers(String expression, Object... args) {_		this.jsonPathHelper = new JsonPathExpectationsHelper(expression, args)__	};protected,constructor,p,use,link,mock,mvc,result,matchers,json,path,string,object,or,link,mock,mvc,result,matchers,json,path,string,matcher,param,expression,the,link,json,path,expression,never,code,null,or,empty,param,args,arguments,to,parameterize,the,code,json,path,expression,with,using,formatting,specifiers,defined,in,link,string,format,string,object;protected,json,path,result,matchers,string,expression,object,args,this,json,path,helper,new,json,path,expectations,helper,expression,args
JsonPathResultMatchers -> protected JsonPathResultMatchers(String expression, Object... args);1458944925;Protected constructor._<p>Use {@link MockMvcResultMatchers#jsonPath(String, Object...)} or_{@link MockMvcResultMatchers#jsonPath(String, Matcher)}._@param expression the {@link JsonPath} expression_ never {@code null} or empty_@param args arguments to parameterize the {@code JsonPath} expression with,_using formatting specifiers defined in {@link String#format(String, Object...)};protected JsonPathResultMatchers(String expression, Object... args) {_		this.jsonPathHelper = new JsonPathExpectationsHelper(expression, args)__	};protected,constructor,p,use,link,mock,mvc,result,matchers,json,path,string,object,or,link,mock,mvc,result,matchers,json,path,string,matcher,param,expression,the,link,json,path,expression,never,code,null,or,empty,param,args,arguments,to,parameterize,the,code,json,path,expression,with,using,formatting,specifiers,defined,in,link,string,format,string,object;protected,json,path,result,matchers,string,expression,object,args,this,json,path,helper,new,json,path,expectations,helper,expression,args
JsonPathResultMatchers -> protected JsonPathResultMatchers(String expression, Object... args);1472464380;Protected constructor._<p>Use {@link MockMvcResultMatchers#jsonPath(String, Object...)} or_{@link MockMvcResultMatchers#jsonPath(String, Matcher)}._@param expression the {@link JsonPath} expression_ never {@code null} or empty_@param args arguments to parameterize the {@code JsonPath} expression with,_using formatting specifiers defined in {@link String#format(String, Object...)};protected JsonPathResultMatchers(String expression, Object... args) {_		this.jsonPathHelper = new JsonPathExpectationsHelper(expression, args)__	};protected,constructor,p,use,link,mock,mvc,result,matchers,json,path,string,object,or,link,mock,mvc,result,matchers,json,path,string,matcher,param,expression,the,link,json,path,expression,never,code,null,or,empty,param,args,arguments,to,parameterize,the,code,json,path,expression,with,using,formatting,specifiers,defined,in,link,string,format,string,object;protected,json,path,result,matchers,string,expression,object,args,this,json,path,helper,new,json,path,expectations,helper,expression,args
JsonPathResultMatchers -> protected JsonPathResultMatchers(String expression, Object... args);1493235170;Protected constructor._<p>Use {@link MockMvcResultMatchers#jsonPath(String, Object...)} or_{@link MockMvcResultMatchers#jsonPath(String, Matcher)}._@param expression the {@link JsonPath} expression_ never {@code null} or empty_@param args arguments to parameterize the {@code JsonPath} expression with,_using formatting specifiers defined in {@link String#format(String, Object...)};protected JsonPathResultMatchers(String expression, Object... args) {_		this.jsonPathHelper = new JsonPathExpectationsHelper(expression, args)__	};protected,constructor,p,use,link,mock,mvc,result,matchers,json,path,string,object,or,link,mock,mvc,result,matchers,json,path,string,matcher,param,expression,the,link,json,path,expression,never,code,null,or,empty,param,args,arguments,to,parameterize,the,code,json,path,expression,with,using,formatting,specifiers,defined,in,link,string,format,string,object;protected,json,path,result,matchers,string,expression,object,args,this,json,path,helper,new,json,path,expectations,helper,expression,args
JsonPathResultMatchers -> protected JsonPathResultMatchers(String expression, Object... args);1500495740;Protected constructor._<p>Use {@link MockMvcResultMatchers#jsonPath(String, Object...)} or_{@link MockMvcResultMatchers#jsonPath(String, Matcher)}._@param expression the {@link JsonPath} expression_ never {@code null} or empty_@param args arguments to parameterize the {@code JsonPath} expression with,_using formatting specifiers defined in {@link String#format(String, Object...)};protected JsonPathResultMatchers(String expression, Object... args) {_		this.jsonPathHelper = new JsonPathExpectationsHelper(expression, args)__	};protected,constructor,p,use,link,mock,mvc,result,matchers,json,path,string,object,or,link,mock,mvc,result,matchers,json,path,string,matcher,param,expression,the,link,json,path,expression,never,code,null,or,empty,param,args,arguments,to,parameterize,the,code,json,path,expression,with,using,formatting,specifiers,defined,in,link,string,format,string,object;protected,json,path,result,matchers,string,expression,object,args,this,json,path,helper,new,json,path,expectations,helper,expression,args
JsonPathResultMatchers -> protected JsonPathResultMatchers(String expression, Object... args);1515029229;Protected constructor._<p>Use {@link MockMvcResultMatchers#jsonPath(String, Object...)} or_{@link MockMvcResultMatchers#jsonPath(String, Matcher)}._@param expression the {@link JsonPath} expression_ never {@code null} or empty_@param args arguments to parameterize the {@code JsonPath} expression with,_using formatting specifiers defined in {@link String#format(String, Object...)};protected JsonPathResultMatchers(String expression, Object... args) {_		this.jsonPathHelper = new JsonPathExpectationsHelper(expression, args)__	};protected,constructor,p,use,link,mock,mvc,result,matchers,json,path,string,object,or,link,mock,mvc,result,matchers,json,path,string,matcher,param,expression,the,link,json,path,expression,never,code,null,or,empty,param,args,arguments,to,parameterize,the,code,json,path,expression,with,using,formatting,specifiers,defined,in,link,string,format,string,object;protected,json,path,result,matchers,string,expression,object,args,this,json,path,helper,new,json,path,expectations,helper,expression,args
JsonPathResultMatchers -> protected JsonPathResultMatchers(String expression, Object... args);1520952939;Protected constructor._<p>Use {@link MockMvcResultMatchers#jsonPath(String, Object...)} or_{@link MockMvcResultMatchers#jsonPath(String, Matcher)}._@param expression the {@link JsonPath} expression_ never {@code null} or empty_@param args arguments to parameterize the {@code JsonPath} expression with,_using formatting specifiers defined in {@link String#format(String, Object...)};protected JsonPathResultMatchers(String expression, Object... args) {_		this.jsonPathHelper = new JsonPathExpectationsHelper(expression, args)__	};protected,constructor,p,use,link,mock,mvc,result,matchers,json,path,string,object,or,link,mock,mvc,result,matchers,json,path,string,matcher,param,expression,the,link,json,path,expression,never,code,null,or,empty,param,args,arguments,to,parameterize,the,code,json,path,expression,with,using,formatting,specifiers,defined,in,link,string,format,string,object;protected,json,path,result,matchers,string,expression,object,args,this,json,path,helper,new,json,path,expectations,helper,expression,args
JsonPathResultMatchers -> protected JsonPathResultMatchers(String expression, Object... args);1520956132;Protected constructor._<p>Use {@link MockMvcResultMatchers#jsonPath(String, Object...)} or_{@link MockMvcResultMatchers#jsonPath(String, Matcher)}._@param expression the {@link JsonPath} expression_ never {@code null} or empty_@param args arguments to parameterize the {@code JsonPath} expression with,_using formatting specifiers defined in {@link String#format(String, Object...)};protected JsonPathResultMatchers(String expression, Object... args) {_		this.jsonPathHelper = new JsonPathExpectationsHelper(expression, args)__	};protected,constructor,p,use,link,mock,mvc,result,matchers,json,path,string,object,or,link,mock,mvc,result,matchers,json,path,string,matcher,param,expression,the,link,json,path,expression,never,code,null,or,empty,param,args,arguments,to,parameterize,the,code,json,path,expression,with,using,formatting,specifiers,defined,in,link,string,format,string,object;protected,json,path,result,matchers,string,expression,object,args,this,json,path,helper,new,json,path,expectations,helper,expression,args
JsonPathResultMatchers -> protected JsonPathResultMatchers(String expression, Object... args);1530174524;Protected constructor._<p>Use {@link MockMvcResultMatchers#jsonPath(String, Object...)} or_{@link MockMvcResultMatchers#jsonPath(String, Matcher)}._@param expression the {@link JsonPath} expression_ never {@code null} or empty_@param args arguments to parameterize the {@code JsonPath} expression with,_using formatting specifiers defined in {@link String#format(String, Object...)};protected JsonPathResultMatchers(String expression, Object... args) {_		this.jsonPathHelper = new JsonPathExpectationsHelper(expression, args)__	};protected,constructor,p,use,link,mock,mvc,result,matchers,json,path,string,object,or,link,mock,mvc,result,matchers,json,path,string,matcher,param,expression,the,link,json,path,expression,never,code,null,or,empty,param,args,arguments,to,parameterize,the,code,json,path,expression,with,using,formatting,specifiers,defined,in,link,string,format,string,object;protected,json,path,result,matchers,string,expression,object,args,this,json,path,helper,new,json,path,expectations,helper,expression,args
JsonPathResultMatchers -> public ResultMatcher hasJsonPath();1515029229;Evaluate the JSON path expression against the response content_and assert that a value, possibly {@code null}, exists._<p>If the JSON path expression is not_{@linkplain JsonPath#isDefinite() definite}, this method asserts_that the list of values at the given path is not <em>empty</em>._@since 5.0.3_@see #exists()_@see #isNotEmpty();public ResultMatcher hasJsonPath() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.hasJsonPath(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,value,possibly,code,null,exists,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,list,of,values,at,the,given,path,is,not,em,empty,em,since,5,0,3,see,exists,see,is,not,empty;public,result,matcher,has,json,path,return,result,string,content,get,content,result,json,path,helper,has,json,path,content
JsonPathResultMatchers -> public ResultMatcher hasJsonPath();1520952939;Evaluate the JSON path expression against the response content_and assert that a value, possibly {@code null}, exists._<p>If the JSON path expression is not_{@linkplain JsonPath#isDefinite() definite}, this method asserts_that the list of values at the given path is not <em>empty</em>._@since 5.0.3_@see #exists()_@see #isNotEmpty();public ResultMatcher hasJsonPath() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.hasJsonPath(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,value,possibly,code,null,exists,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,list,of,values,at,the,given,path,is,not,em,empty,em,since,5,0,3,see,exists,see,is,not,empty;public,result,matcher,has,json,path,return,result,string,content,get,content,result,json,path,helper,has,json,path,content
JsonPathResultMatchers -> public ResultMatcher hasJsonPath();1520956132;Evaluate the JSON path expression against the response content_and assert that a value, possibly {@code null}, exists._<p>If the JSON path expression is not_{@linkplain JsonPath#isDefinite() definite}, this method asserts_that the list of values at the given path is not <em>empty</em>._@since 5.0.3_@see #exists()_@see #isNotEmpty();public ResultMatcher hasJsonPath() {_		return result -> jsonPathHelper.hasJsonPath(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,value,possibly,code,null,exists,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,list,of,values,at,the,given,path,is,not,em,empty,em,since,5,0,3,see,exists,see,is,not,empty;public,result,matcher,has,json,path,return,result,json,path,helper,has,json,path,get,content,result
JsonPathResultMatchers -> public ResultMatcher hasJsonPath();1530174524;Evaluate the JSON path expression against the response content_and assert that a value, possibly {@code null}, exists._<p>If the JSON path expression is not_{@linkplain JsonPath#isDefinite() definite}, this method asserts_that the list of values at the given path is not <em>empty</em>._@since 5.0.3_@see #exists()_@see #isNotEmpty();public ResultMatcher hasJsonPath() {_		return result -> this.jsonPathHelper.hasJsonPath(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,value,possibly,code,null,exists,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,list,of,values,at,the,given,path,is,not,em,empty,em,since,5,0,3,see,exists,see,is,not,empty;public,result,matcher,has,json,path,return,result,this,json,path,helper,has,json,path,get,content,result
JsonPathResultMatchers -> public ResultMatcher value(final Object expectedValue);1383669853;Evaluate the JSONPath and assert the value of the content found.;public ResultMatcher value(final Object expectedValue) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				jsonPathHelper.assertValue(result.getResponse().getContentAsString(), expectedValue)__			}_		}__	};evaluate,the,jsonpath,and,assert,the,value,of,the,content,found;public,result,matcher,value,final,object,expected,value,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,json,path,helper,assert,value,result,get,response,get,content,as,string,expected,value
JsonPathResultMatchers -> public ResultMatcher value(final Object expectedValue);1413848647;Evaluate the JSONPath and assert the value of the content found.;public ResultMatcher value(final Object expectedValue) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				jsonPathHelper.assertValue(result.getResponse().getContentAsString(), expectedValue)__			}_		}__	};evaluate,the,jsonpath,and,assert,the,value,of,the,content,found;public,result,matcher,value,final,object,expected,value,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,json,path,helper,assert,value,result,get,response,get,content,as,string,expected,value
JsonPathResultMatchers -> public ResultMatcher value(final Object expectedValue);1427238287;Evaluate the JSONPath and assert the value of the content found.;public ResultMatcher value(final Object expectedValue) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				jsonPathHelper.assertValue(result.getResponse().getContentAsString(), expectedValue)__			}_		}__	};evaluate,the,jsonpath,and,assert,the,value,of,the,content,found;public,result,matcher,value,final,object,expected,value,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,json,path,helper,assert,value,result,get,response,get,content,as,string,expected,value
JsonPathResultMatchers -> public ResultMatcher value(final Object expectedValue);1437424890;Evaluate the JSONPath and assert the value of the content found.;public ResultMatcher value(final Object expectedValue) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				jsonPathHelper.assertValue(result.getResponse().getContentAsString(), expectedValue)__			}_		}__	};evaluate,the,jsonpath,and,assert,the,value,of,the,content,found;public,result,matcher,value,final,object,expected,value,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,json,path,helper,assert,value,result,get,response,get,content,as,string,expected,value
JsonPathResultMatchers -> public ResultMatcher value(final Object expectedValue);1438899933;Evaluate the JSON path expression against the response content and_assert that the result is equal to the supplied value.;public ResultMatcher value(final Object expectedValue) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				JsonPathResultMatchers.this.jsonPathHelper.assertValue(result.getResponse().getContentAsString(),_					expectedValue)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,equal,to,the,supplied,value;public,result,matcher,value,final,object,expected,value,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,json,path,result,matchers,this,json,path,helper,assert,value,result,get,response,get,content,as,string,expected,value
JsonPathResultMatchers -> public ResultMatcher value(final Object expectedValue);1439582823;Evaluate the JSON path expression against the response content and_assert that the result is equal to the supplied value.;public ResultMatcher value(final Object expectedValue) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				JsonPathResultMatchers.this.jsonPathHelper.assertValue(result.getResponse().getContentAsString(),_					expectedValue)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,equal,to,the,supplied,value;public,result,matcher,value,final,object,expected,value,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,json,path,result,matchers,this,json,path,helper,assert,value,result,get,response,get,content,as,string,expected,value
JsonPathResultMatchers -> public ResultMatcher value(final Object expectedValue);1439639730;Evaluate the JSON path expression against the response content and_assert that the result is equal to the supplied value.;public ResultMatcher value(final Object expectedValue) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				JsonPathResultMatchers.this.jsonPathHelper.assertValue(result.getResponse().getContentAsString(),_					expectedValue)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,equal,to,the,supplied,value;public,result,matcher,value,final,object,expected,value,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,json,path,result,matchers,this,json,path,helper,assert,value,result,get,response,get,content,as,string,expected,value
JsonPathResultMatchers -> public ResultMatcher value(final Object expectedValue);1439659689;Evaluate the JSON path expression against the response content and_assert that the result is equal to the supplied value.;public ResultMatcher value(final Object expectedValue) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				JsonPathResultMatchers.this.jsonPathHelper.assertValue(result.getResponse().getContentAsString(),_					expectedValue)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,equal,to,the,supplied,value;public,result,matcher,value,final,object,expected,value,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,json,path,result,matchers,this,json,path,helper,assert,value,result,get,response,get,content,as,string,expected,value
JsonPathResultMatchers -> public ResultMatcher value(final Object expectedValue);1448489364;Evaluate the JSON path expression against the response content and_assert that the result is equal to the supplied value.;public ResultMatcher value(final Object expectedValue) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				jsonPathHelper.assertValue(result.getResponse().getContentAsString(), expectedValue)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,equal,to,the,supplied,value;public,result,matcher,value,final,object,expected,value,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,json,path,helper,assert,value,result,get,response,get,content,as,string,expected,value
JsonPathResultMatchers -> public ResultMatcher value(final Object expectedValue);1458321222;Evaluate the JSON path expression against the response content and_assert that the result is equal to the supplied value.;public ResultMatcher value(final Object expectedValue) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				jsonPathHelper.assertValue(getContent(result), expectedValue)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,equal,to,the,supplied,value;public,result,matcher,value,final,object,expected,value,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,json,path,helper,assert,value,get,content,result,expected,value
JsonPathResultMatchers -> public ResultMatcher value(final Object expectedValue);1458944925;Evaluate the JSON path expression against the response content and_assert that the result is equal to the supplied value.;public ResultMatcher value(final Object expectedValue) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				jsonPathHelper.assertValue(getContent(result), expectedValue)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,equal,to,the,supplied,value;public,result,matcher,value,final,object,expected,value,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,json,path,helper,assert,value,get,content,result,expected,value
JsonPathResultMatchers -> public ResultMatcher value(final Object expectedValue);1472464380;Evaluate the JSON path expression against the response content and_assert that the result is equal to the supplied value.;public ResultMatcher value(final Object expectedValue) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				jsonPathHelper.assertValue(getContent(result), expectedValue)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,equal,to,the,supplied,value;public,result,matcher,value,final,object,expected,value,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,json,path,helper,assert,value,get,content,result,expected,value
JsonPathResultMatchers -> public ResultMatcher value(final Object expectedValue);1493235170;Evaluate the JSON path expression against the response content and_assert that the result is equal to the supplied value.;public ResultMatcher value(final Object expectedValue) {_		return result -> jsonPathHelper.assertValue(getContent(result), expectedValue)__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,equal,to,the,supplied,value;public,result,matcher,value,final,object,expected,value,return,result,json,path,helper,assert,value,get,content,result,expected,value
JsonPathResultMatchers -> public ResultMatcher value(final Object expectedValue);1500495740;Evaluate the JSON path expression against the response content and_assert that the result is equal to the supplied value.;public ResultMatcher value(final Object expectedValue) {_		return result -> jsonPathHelper.assertValue(getContent(result), expectedValue)__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,equal,to,the,supplied,value;public,result,matcher,value,final,object,expected,value,return,result,json,path,helper,assert,value,get,content,result,expected,value
JsonPathResultMatchers -> public ResultMatcher value(final Object expectedValue);1515029229;Evaluate the JSON path expression against the response content and_assert that the result is equal to the supplied value.;public ResultMatcher value(final Object expectedValue) {_		return result -> jsonPathHelper.assertValue(getContent(result), expectedValue)__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,equal,to,the,supplied,value;public,result,matcher,value,final,object,expected,value,return,result,json,path,helper,assert,value,get,content,result,expected,value
JsonPathResultMatchers -> public ResultMatcher isBoolean();1438899933;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Boolean}._@since 4.2.1;public ResultMatcher isBoolean() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsBoolean(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,boolean,since,4,2,1;public,result,matcher,is,boolean,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,boolean,content
JsonPathResultMatchers -> public ResultMatcher isBoolean();1439582823;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Boolean}._@since 4.2.1;public ResultMatcher isBoolean() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsBoolean(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,boolean,since,4,2,1;public,result,matcher,is,boolean,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,boolean,content
JsonPathResultMatchers -> public ResultMatcher isBoolean();1439639730;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Boolean}._@since 4.2.1;public ResultMatcher isBoolean() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsBoolean(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,boolean,since,4,2,1;public,result,matcher,is,boolean,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,boolean,content
JsonPathResultMatchers -> public ResultMatcher isBoolean();1439659689;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Boolean}._@since 4.2.1;public ResultMatcher isBoolean() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsBoolean(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,boolean,since,4,2,1;public,result,matcher,is,boolean,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,boolean,content
JsonPathResultMatchers -> public ResultMatcher isBoolean();1448489364;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Boolean}._@since 4.2.1;public ResultMatcher isBoolean() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.assertValueIsBoolean(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,boolean,since,4,2,1;public,result,matcher,is,boolean,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,assert,value,is,boolean,content
JsonPathResultMatchers -> public ResultMatcher isBoolean();1458321222;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Boolean}._@since 4.2.1;public ResultMatcher isBoolean() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsBoolean(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,boolean,since,4,2,1;public,result,matcher,is,boolean,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,boolean,content
JsonPathResultMatchers -> public ResultMatcher isBoolean();1458944925;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Boolean}._@since 4.2.1;public ResultMatcher isBoolean() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsBoolean(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,boolean,since,4,2,1;public,result,matcher,is,boolean,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,boolean,content
JsonPathResultMatchers -> public ResultMatcher isBoolean();1472464380;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Boolean}._@since 4.2.1;public ResultMatcher isBoolean() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsBoolean(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,boolean,since,4,2,1;public,result,matcher,is,boolean,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,boolean,content
JsonPathResultMatchers -> public ResultMatcher isBoolean();1493235170;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Boolean}._@since 4.2.1;public ResultMatcher isBoolean() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsBoolean(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,boolean,since,4,2,1;public,result,matcher,is,boolean,return,result,string,content,get,content,result,json,path,helper,assert,value,is,boolean,content
JsonPathResultMatchers -> public ResultMatcher isBoolean();1500495740;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Boolean}._@since 4.2.1;public ResultMatcher isBoolean() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsBoolean(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,boolean,since,4,2,1;public,result,matcher,is,boolean,return,result,string,content,get,content,result,json,path,helper,assert,value,is,boolean,content
JsonPathResultMatchers -> public ResultMatcher isBoolean();1515029229;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Boolean}._@since 4.2.1;public ResultMatcher isBoolean() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsBoolean(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,boolean,since,4,2,1;public,result,matcher,is,boolean,return,result,string,content,get,content,result,json,path,helper,assert,value,is,boolean,content
JsonPathResultMatchers -> public ResultMatcher isBoolean();1520952939;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Boolean}._@since 4.2.1;public ResultMatcher isBoolean() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsBoolean(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,boolean,since,4,2,1;public,result,matcher,is,boolean,return,result,string,content,get,content,result,json,path,helper,assert,value,is,boolean,content
JsonPathResultMatchers -> public ResultMatcher isBoolean();1520956132;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Boolean}._@since 4.2.1;public ResultMatcher isBoolean() {_		return result -> jsonPathHelper.assertValueIsBoolean(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,boolean,since,4,2,1;public,result,matcher,is,boolean,return,result,json,path,helper,assert,value,is,boolean,get,content,result
JsonPathResultMatchers -> public ResultMatcher isBoolean();1530174524;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Boolean}._@since 4.2.1;public ResultMatcher isBoolean() {_		return result -> this.jsonPathHelper.assertValueIsBoolean(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,boolean,since,4,2,1;public,result,matcher,is,boolean,return,result,this,json,path,helper,assert,value,is,boolean,get,content,result
JsonPathResultMatchers -> public ResultMatcher isString();1438899933;Evaluate the JSON path expression against the response content and_assert that the result is a {@link String}._@since 4.2.1;public ResultMatcher isString() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsString(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,string,since,4,2,1;public,result,matcher,is,string,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,string,content
JsonPathResultMatchers -> public ResultMatcher isString();1439582823;Evaluate the JSON path expression against the response content and_assert that the result is a {@link String}._@since 4.2.1;public ResultMatcher isString() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsString(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,string,since,4,2,1;public,result,matcher,is,string,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,string,content
JsonPathResultMatchers -> public ResultMatcher isString();1439639730;Evaluate the JSON path expression against the response content and_assert that the result is a {@link String}._@since 4.2.1;public ResultMatcher isString() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsString(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,string,since,4,2,1;public,result,matcher,is,string,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,string,content
JsonPathResultMatchers -> public ResultMatcher isString();1439659689;Evaluate the JSON path expression against the response content and_assert that the result is a {@link String}._@since 4.2.1;public ResultMatcher isString() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsString(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,string,since,4,2,1;public,result,matcher,is,string,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,string,content
JsonPathResultMatchers -> public ResultMatcher isString();1448489364;Evaluate the JSON path expression against the response content and_assert that the result is a {@link String}._@since 4.2.1;public ResultMatcher isString() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.assertValueIsString(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,string,since,4,2,1;public,result,matcher,is,string,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,assert,value,is,string,content
JsonPathResultMatchers -> public ResultMatcher isString();1458321222;Evaluate the JSON path expression against the response content and_assert that the result is a {@link String}._@since 4.2.1;public ResultMatcher isString() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsString(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,string,since,4,2,1;public,result,matcher,is,string,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,string,content
JsonPathResultMatchers -> public ResultMatcher isString();1458944925;Evaluate the JSON path expression against the response content and_assert that the result is a {@link String}._@since 4.2.1;public ResultMatcher isString() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsString(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,string,since,4,2,1;public,result,matcher,is,string,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,string,content
JsonPathResultMatchers -> public ResultMatcher isString();1472464380;Evaluate the JSON path expression against the response content and_assert that the result is a {@link String}._@since 4.2.1;public ResultMatcher isString() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsString(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,string,since,4,2,1;public,result,matcher,is,string,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,string,content
JsonPathResultMatchers -> public ResultMatcher isString();1493235170;Evaluate the JSON path expression against the response content and_assert that the result is a {@link String}._@since 4.2.1;public ResultMatcher isString() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsString(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,string,since,4,2,1;public,result,matcher,is,string,return,result,string,content,get,content,result,json,path,helper,assert,value,is,string,content
JsonPathResultMatchers -> public ResultMatcher isString();1500495740;Evaluate the JSON path expression against the response content and_assert that the result is a {@link String}._@since 4.2.1;public ResultMatcher isString() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsString(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,string,since,4,2,1;public,result,matcher,is,string,return,result,string,content,get,content,result,json,path,helper,assert,value,is,string,content
JsonPathResultMatchers -> public ResultMatcher isString();1515029229;Evaluate the JSON path expression against the response content and_assert that the result is a {@link String}._@since 4.2.1;public ResultMatcher isString() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsString(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,string,since,4,2,1;public,result,matcher,is,string,return,result,string,content,get,content,result,json,path,helper,assert,value,is,string,content
JsonPathResultMatchers -> public ResultMatcher isString();1520952939;Evaluate the JSON path expression against the response content and_assert that the result is a {@link String}._@since 4.2.1;public ResultMatcher isString() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsString(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,string,since,4,2,1;public,result,matcher,is,string,return,result,string,content,get,content,result,json,path,helper,assert,value,is,string,content
JsonPathResultMatchers -> public ResultMatcher isString();1520956132;Evaluate the JSON path expression against the response content and_assert that the result is a {@link String}._@since 4.2.1;public ResultMatcher isString() {_		return result -> jsonPathHelper.assertValueIsString(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,string,since,4,2,1;public,result,matcher,is,string,return,result,json,path,helper,assert,value,is,string,get,content,result
JsonPathResultMatchers -> public ResultMatcher isString();1530174524;Evaluate the JSON path expression against the response content and_assert that the result is a {@link String}._@since 4.2.1;public ResultMatcher isString() {_		return result -> this.jsonPathHelper.assertValueIsString(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,string,since,4,2,1;public,result,matcher,is,string,return,result,this,json,path,helper,assert,value,is,string,get,content,result
JsonPathResultMatchers -> public <T> ResultMatcher value(Matcher<T> matcher);1520952939;Evaluate the JSON path expression against the response content and_assert the resulting value with the given Hamcrest {@link Matcher}._@see #value(Matcher, Class)_@see #value(Object);public <T> ResultMatcher value(Matcher<T> matcher) {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValue(content, matcher)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,the,resulting,value,with,the,given,hamcrest,link,matcher,see,value,matcher,class,see,value,object;public,t,result,matcher,value,matcher,t,matcher,return,result,string,content,get,content,result,json,path,helper,assert,value,content,matcher
JsonPathResultMatchers -> public <T> ResultMatcher value(Matcher<T> matcher);1520956132;Evaluate the JSON path expression against the response content and_assert the resulting value with the given Hamcrest {@link Matcher}._@see #value(Matcher, Class)_@see #value(Object);public <T> ResultMatcher value(Matcher<T> matcher) {_		return result -> jsonPathHelper.assertValue(getContent(result), matcher)__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,the,resulting,value,with,the,given,hamcrest,link,matcher,see,value,matcher,class,see,value,object;public,t,result,matcher,value,matcher,t,matcher,return,result,json,path,helper,assert,value,get,content,result,matcher
JsonPathResultMatchers -> public <T> ResultMatcher value(Matcher<T> matcher);1530174524;Evaluate the JSON path expression against the response content and_assert the resulting value with the given Hamcrest {@link Matcher}._@see #value(Matcher, Class)_@see #value(Object);public <T> ResultMatcher value(Matcher<T> matcher) {_		return result -> this.jsonPathHelper.assertValue(getContent(result), matcher)__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,the,resulting,value,with,the,given,hamcrest,link,matcher,see,value,matcher,class,see,value,object;public,t,result,matcher,value,matcher,t,matcher,return,result,this,json,path,helper,assert,value,get,content,result,matcher
JsonPathResultMatchers -> protected JsonPathResultMatchers(String expression, Object ... args);1383669853;Protected constructor. Use_{@link MockMvcResultMatchers#jsonPath(String, Object...)} or_{@link MockMvcResultMatchers#jsonPath(String, Matcher)}.;protected JsonPathResultMatchers(String expression, Object ... args) {_		this.jsonPathHelper = new JsonPathExpectationsHelper(expression, args)__	};protected,constructor,use,link,mock,mvc,result,matchers,json,path,string,object,or,link,mock,mvc,result,matchers,json,path,string,matcher;protected,json,path,result,matchers,string,expression,object,args,this,json,path,helper,new,json,path,expectations,helper,expression,args
JsonPathResultMatchers -> protected JsonPathResultMatchers(String expression, Object ... args);1413848647;Protected constructor. Use_{@link MockMvcResultMatchers#jsonPath(String, Object...)} or_{@link MockMvcResultMatchers#jsonPath(String, Matcher)}.;protected JsonPathResultMatchers(String expression, Object ... args) {_		this.jsonPathHelper = new JsonPathExpectationsHelper(expression, args)__	};protected,constructor,use,link,mock,mvc,result,matchers,json,path,string,object,or,link,mock,mvc,result,matchers,json,path,string,matcher;protected,json,path,result,matchers,string,expression,object,args,this,json,path,helper,new,json,path,expectations,helper,expression,args
JsonPathResultMatchers -> protected JsonPathResultMatchers(String expression, Object ... args);1427238287;Protected constructor. Use_{@link MockMvcResultMatchers#jsonPath(String, Object...)} or_{@link MockMvcResultMatchers#jsonPath(String, Matcher)}.;protected JsonPathResultMatchers(String expression, Object ... args) {_		this.jsonPathHelper = new JsonPathExpectationsHelper(expression, args)__	};protected,constructor,use,link,mock,mvc,result,matchers,json,path,string,object,or,link,mock,mvc,result,matchers,json,path,string,matcher;protected,json,path,result,matchers,string,expression,object,args,this,json,path,helper,new,json,path,expectations,helper,expression,args
JsonPathResultMatchers -> protected JsonPathResultMatchers(String expression, Object ... args);1437424890;Protected constructor. Use_{@link MockMvcResultMatchers#jsonPath(String, Object...)} or_{@link MockMvcResultMatchers#jsonPath(String, Matcher)}.;protected JsonPathResultMatchers(String expression, Object ... args) {_		this.jsonPathHelper = new JsonPathExpectationsHelper(expression, args)__	};protected,constructor,use,link,mock,mvc,result,matchers,json,path,string,object,or,link,mock,mvc,result,matchers,json,path,string,matcher;protected,json,path,result,matchers,string,expression,object,args,this,json,path,helper,new,json,path,expectations,helper,expression,args
JsonPathResultMatchers -> protected JsonPathResultMatchers(String expression, Object ... args);1438899933;Protected constructor._<p>Use {@link MockMvcResultMatchers#jsonPath(String, Object...)} or_{@link MockMvcResultMatchers#jsonPath(String, Matcher)}.;protected JsonPathResultMatchers(String expression, Object ... args) {_		this.jsonPathHelper = new JsonPathExpectationsHelper(expression, args)__	};protected,constructor,p,use,link,mock,mvc,result,matchers,json,path,string,object,or,link,mock,mvc,result,matchers,json,path,string,matcher;protected,json,path,result,matchers,string,expression,object,args,this,json,path,helper,new,json,path,expectations,helper,expression,args
JsonPathResultMatchers -> protected JsonPathResultMatchers(String expression, Object ... args);1439582823;Protected constructor._<p>Use {@link MockMvcResultMatchers#jsonPath(String, Object...)} or_{@link MockMvcResultMatchers#jsonPath(String, Matcher)}.;protected JsonPathResultMatchers(String expression, Object ... args) {_		this.jsonPathHelper = new JsonPathExpectationsHelper(expression, args)__	};protected,constructor,p,use,link,mock,mvc,result,matchers,json,path,string,object,or,link,mock,mvc,result,matchers,json,path,string,matcher;protected,json,path,result,matchers,string,expression,object,args,this,json,path,helper,new,json,path,expectations,helper,expression,args
JsonPathResultMatchers -> protected JsonPathResultMatchers(String expression, Object ... args);1439639730;Protected constructor._<p>Use {@link MockMvcResultMatchers#jsonPath(String, Object...)} or_{@link MockMvcResultMatchers#jsonPath(String, Matcher)}._@param expression the {@link JsonPath} expression_ never {@code null} or empty_@param args arguments to parameterize the {@code JsonPath} expression with,_using formatting specifiers defined in {@link String#format(String, Object...)};protected JsonPathResultMatchers(String expression, Object ... args) {_		this.jsonPathHelper = new JsonPathExpectationsHelper(expression, args)__	};protected,constructor,p,use,link,mock,mvc,result,matchers,json,path,string,object,or,link,mock,mvc,result,matchers,json,path,string,matcher,param,expression,the,link,json,path,expression,never,code,null,or,empty,param,args,arguments,to,parameterize,the,code,json,path,expression,with,using,formatting,specifiers,defined,in,link,string,format,string,object;protected,json,path,result,matchers,string,expression,object,args,this,json,path,helper,new,json,path,expectations,helper,expression,args
JsonPathResultMatchers -> protected JsonPathResultMatchers(String expression, Object ... args);1439659689;Protected constructor._<p>Use {@link MockMvcResultMatchers#jsonPath(String, Object...)} or_{@link MockMvcResultMatchers#jsonPath(String, Matcher)}._@param expression the {@link JsonPath} expression_ never {@code null} or empty_@param args arguments to parameterize the {@code JsonPath} expression with,_using formatting specifiers defined in {@link String#format(String, Object...)};protected JsonPathResultMatchers(String expression, Object ... args) {_		this.jsonPathHelper = new JsonPathExpectationsHelper(expression, args)__	};protected,constructor,p,use,link,mock,mvc,result,matchers,json,path,string,object,or,link,mock,mvc,result,matchers,json,path,string,matcher,param,expression,the,link,json,path,expression,never,code,null,or,empty,param,args,arguments,to,parameterize,the,code,json,path,expression,with,using,formatting,specifiers,defined,in,link,string,format,string,object;protected,json,path,result,matchers,string,expression,object,args,this,json,path,helper,new,json,path,expectations,helper,expression,args
JsonPathResultMatchers -> protected JsonPathResultMatchers(String expression, Object ... args);1448489364;Protected constructor._<p>Use {@link MockMvcResultMatchers#jsonPath(String, Object...)} or_{@link MockMvcResultMatchers#jsonPath(String, Matcher)}._@param expression the {@link JsonPath} expression_ never {@code null} or empty_@param args arguments to parameterize the {@code JsonPath} expression with,_using formatting specifiers defined in {@link String#format(String, Object...)};protected JsonPathResultMatchers(String expression, Object ... args) {_		this.jsonPathHelper = new JsonPathExpectationsHelper(expression, args)__	};protected,constructor,p,use,link,mock,mvc,result,matchers,json,path,string,object,or,link,mock,mvc,result,matchers,json,path,string,matcher,param,expression,the,link,json,path,expression,never,code,null,or,empty,param,args,arguments,to,parameterize,the,code,json,path,expression,with,using,formatting,specifiers,defined,in,link,string,format,string,object;protected,json,path,result,matchers,string,expression,object,args,this,json,path,helper,new,json,path,expectations,helper,expression,args
JsonPathResultMatchers -> public ResultMatcher exists();1383669853;Evaluate the JSONPath and assert that content exists.;public ResultMatcher exists() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.exists(content)__			}_		}__	};evaluate,the,jsonpath,and,assert,that,content,exists;public,result,matcher,exists,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,exists,content
JsonPathResultMatchers -> public ResultMatcher exists();1413848647;Evaluate the JSONPath and assert that content exists.;public ResultMatcher exists() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.exists(content)__			}_		}__	};evaluate,the,jsonpath,and,assert,that,content,exists;public,result,matcher,exists,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,exists,content
JsonPathResultMatchers -> public ResultMatcher exists();1427238287;Evaluate the JSONPath and assert that content exists.;public ResultMatcher exists() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.exists(content)__			}_		}__	};evaluate,the,jsonpath,and,assert,that,content,exists;public,result,matcher,exists,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,exists,content
JsonPathResultMatchers -> public ResultMatcher exists();1437424890;Evaluate the JSONPath and assert that content exists.;public ResultMatcher exists() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.exists(content)__			}_		}__	};evaluate,the,jsonpath,and,assert,that,content,exists;public,result,matcher,exists,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,exists,content
JsonPathResultMatchers -> public ResultMatcher exists();1438899933;Evaluate the JSON path expression against the response content and_assert that the result is not empty (i.e., that a match for the JSON_path expression exists in the response content).;public ResultMatcher exists() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.exists(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,not,empty,i,e,that,a,match,for,the,json,path,expression,exists,in,the,response,content;public,result,matcher,exists,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,exists,content
JsonPathResultMatchers -> public ResultMatcher exists();1439582823;Evaluate the JSON path expression against the response content and_assert that a non-null value exists at the given path._<p>If the JSON path expression is not_{@linkplain com.jayway.jsonpath.JsonPath#isDefinite definite},_this method asserts that the value at the given path is not <em>empty</em>.;public ResultMatcher exists() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.exists(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,null,value,exists,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,com,jayway,jsonpath,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,not,em,empty,em;public,result,matcher,exists,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,exists,content
JsonPathResultMatchers -> public ResultMatcher exists();1439639730;Evaluate the JSON path expression against the response content and_assert that a non-null value exists at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is not_<em>empty</em>.;public ResultMatcher exists() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.exists(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,null,value,exists,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,not,em,empty,em;public,result,matcher,exists,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,exists,content
JsonPathResultMatchers -> public ResultMatcher exists();1439659689;Evaluate the JSON path expression against the response content and_assert that a non-null value exists at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is not_<em>empty</em>.;public ResultMatcher exists() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.exists(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,null,value,exists,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,not,em,empty,em;public,result,matcher,exists,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,exists,content
JsonPathResultMatchers -> public ResultMatcher exists();1448489364;Evaluate the JSON path expression against the response content and_assert that a non-null value exists at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is not_<em>empty</em>.;public ResultMatcher exists() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.exists(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,null,value,exists,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,not,em,empty,em;public,result,matcher,exists,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,exists,content
JsonPathResultMatchers -> public ResultMatcher exists();1458321222;Evaluate the JSON path expression against the response content and_assert that a non-null value exists at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is not_<em>empty</em>.;public ResultMatcher exists() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.exists(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,null,value,exists,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,not,em,empty,em;public,result,matcher,exists,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,exists,content
JsonPathResultMatchers -> public ResultMatcher exists();1458944925;Evaluate the JSON path expression against the response content and_assert that a non-null value exists at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is not_<em>empty</em>.;public ResultMatcher exists() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.exists(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,null,value,exists,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,not,em,empty,em;public,result,matcher,exists,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,exists,content
JsonPathResultMatchers -> public ResultMatcher exists();1472464380;Evaluate the JSON path expression against the response content and_assert that a non-null value exists at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is not_<em>empty</em>.;public ResultMatcher exists() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.exists(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,null,value,exists,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,not,em,empty,em;public,result,matcher,exists,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,exists,content
JsonPathResultMatchers -> public ResultMatcher exists();1493235170;Evaluate the JSON path expression against the response content and_assert that a non-null value exists at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is not_<em>empty</em>.;public ResultMatcher exists() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.exists(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,null,value,exists,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,not,em,empty,em;public,result,matcher,exists,return,result,string,content,get,content,result,json,path,helper,exists,content
JsonPathResultMatchers -> public ResultMatcher exists();1500495740;Evaluate the JSON path expression against the response content and_assert that a non-null value exists at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is not_<em>empty</em>.;public ResultMatcher exists() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.exists(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,null,value,exists,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,not,em,empty,em;public,result,matcher,exists,return,result,string,content,get,content,result,json,path,helper,exists,content
JsonPathResultMatchers -> public ResultMatcher exists();1515029229;Evaluate the JSON path expression against the response content and_assert that a non-null value, possibly an empty array or map, exists at_the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is not_<em>empty</em>.;public ResultMatcher exists() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.exists(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,null,value,possibly,an,empty,array,or,map,exists,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,not,em,empty,em;public,result,matcher,exists,return,result,string,content,get,content,result,json,path,helper,exists,content
JsonPathResultMatchers -> public ResultMatcher exists();1520952939;Evaluate the JSON path expression against the response content and_assert that a non-null value, possibly an empty array or map, exists at_the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is not_<em>empty</em>.;public ResultMatcher exists() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.exists(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,null,value,possibly,an,empty,array,or,map,exists,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,not,em,empty,em;public,result,matcher,exists,return,result,string,content,get,content,result,json,path,helper,exists,content
JsonPathResultMatchers -> public ResultMatcher exists();1520956132;Evaluate the JSON path expression against the response content and_assert that a non-null value, possibly an empty array or map, exists at_the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is not_<em>empty</em>.;public ResultMatcher exists() {_		return result -> jsonPathHelper.exists(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,null,value,possibly,an,empty,array,or,map,exists,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,not,em,empty,em;public,result,matcher,exists,return,result,json,path,helper,exists,get,content,result
JsonPathResultMatchers -> public ResultMatcher exists();1530174524;Evaluate the JSON path expression against the response content and_assert that a non-null value, possibly an empty array or map, exists at_the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is not_<em>empty</em>.;public ResultMatcher exists() {_		return result -> this.jsonPathHelper.exists(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,null,value,possibly,an,empty,array,or,map,exists,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,not,em,empty,em;public,result,matcher,exists,return,result,this,json,path,helper,exists,get,content,result
JsonPathResultMatchers -> public ResultMatcher isNumber();1438899933;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Number}._@since 4.2.1;public ResultMatcher isNumber() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsNumber(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,number,since,4,2,1;public,result,matcher,is,number,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,number,content
JsonPathResultMatchers -> public ResultMatcher isNumber();1439582823;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Number}._@since 4.2.1;public ResultMatcher isNumber() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsNumber(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,number,since,4,2,1;public,result,matcher,is,number,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,number,content
JsonPathResultMatchers -> public ResultMatcher isNumber();1439639730;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Number}._@since 4.2.1;public ResultMatcher isNumber() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsNumber(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,number,since,4,2,1;public,result,matcher,is,number,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,number,content
JsonPathResultMatchers -> public ResultMatcher isNumber();1439659689;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Number}._@since 4.2.1;public ResultMatcher isNumber() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.assertValueIsNumber(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,number,since,4,2,1;public,result,matcher,is,number,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,assert,value,is,number,content
JsonPathResultMatchers -> public ResultMatcher isNumber();1448489364;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Number}._@since 4.2.1;public ResultMatcher isNumber() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.assertValueIsNumber(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,number,since,4,2,1;public,result,matcher,is,number,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,assert,value,is,number,content
JsonPathResultMatchers -> public ResultMatcher isNumber();1458321222;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Number}._@since 4.2.1;public ResultMatcher isNumber() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsNumber(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,number,since,4,2,1;public,result,matcher,is,number,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,number,content
JsonPathResultMatchers -> public ResultMatcher isNumber();1458944925;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Number}._@since 4.2.1;public ResultMatcher isNumber() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsNumber(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,number,since,4,2,1;public,result,matcher,is,number,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,number,content
JsonPathResultMatchers -> public ResultMatcher isNumber();1472464380;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Number}._@since 4.2.1;public ResultMatcher isNumber() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.assertValueIsNumber(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,number,since,4,2,1;public,result,matcher,is,number,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,assert,value,is,number,content
JsonPathResultMatchers -> public ResultMatcher isNumber();1493235170;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Number}._@since 4.2.1;public ResultMatcher isNumber() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsNumber(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,number,since,4,2,1;public,result,matcher,is,number,return,result,string,content,get,content,result,json,path,helper,assert,value,is,number,content
JsonPathResultMatchers -> public ResultMatcher isNumber();1500495740;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Number}._@since 4.2.1;public ResultMatcher isNumber() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsNumber(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,number,since,4,2,1;public,result,matcher,is,number,return,result,string,content,get,content,result,json,path,helper,assert,value,is,number,content
JsonPathResultMatchers -> public ResultMatcher isNumber();1515029229;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Number}._@since 4.2.1;public ResultMatcher isNumber() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsNumber(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,number,since,4,2,1;public,result,matcher,is,number,return,result,string,content,get,content,result,json,path,helper,assert,value,is,number,content
JsonPathResultMatchers -> public ResultMatcher isNumber();1520952939;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Number}._@since 4.2.1;public ResultMatcher isNumber() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.assertValueIsNumber(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,number,since,4,2,1;public,result,matcher,is,number,return,result,string,content,get,content,result,json,path,helper,assert,value,is,number,content
JsonPathResultMatchers -> public ResultMatcher isNumber();1520956132;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Number}._@since 4.2.1;public ResultMatcher isNumber() {_		return result -> jsonPathHelper.assertValueIsNumber(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,number,since,4,2,1;public,result,matcher,is,number,return,result,json,path,helper,assert,value,is,number,get,content,result
JsonPathResultMatchers -> public ResultMatcher isNumber();1530174524;Evaluate the JSON path expression against the response content and_assert that the result is a {@link Number}._@since 4.2.1;public ResultMatcher isNumber() {_		return result -> this.jsonPathHelper.assertValueIsNumber(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,a,link,number,since,4,2,1;public,result,matcher,is,number,return,result,this,json,path,helper,assert,value,is,number,get,content,result
JsonPathResultMatchers -> public ResultMatcher doesNotExist();1383669853;Evaluate the JSON path and assert not content was found.;public ResultMatcher doesNotExist() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.doesNotExist(content)__			}_		}__	};evaluate,the,json,path,and,assert,not,content,was,found;public,result,matcher,does,not,exist,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,does,not,exist,content
JsonPathResultMatchers -> public ResultMatcher doesNotExist();1413848647;Evaluate the JSON path and assert not content was found.;public ResultMatcher doesNotExist() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.doesNotExist(content)__			}_		}__	};evaluate,the,json,path,and,assert,not,content,was,found;public,result,matcher,does,not,exist,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,does,not,exist,content
JsonPathResultMatchers -> public ResultMatcher doesNotExist();1427238287;Evaluate the JSON path and assert not content was found.;public ResultMatcher doesNotExist() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.doesNotExist(content)__			}_		}__	};evaluate,the,json,path,and,assert,not,content,was,found;public,result,matcher,does,not,exist,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,does,not,exist,content
JsonPathResultMatchers -> public ResultMatcher doesNotExist();1437424890;Evaluate the JSON path and assert not content was found.;public ResultMatcher doesNotExist() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.doesNotExist(content)__			}_		}__	};evaluate,the,json,path,and,assert,not,content,was,found;public,result,matcher,does,not,exist,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,does,not,exist,content
JsonPathResultMatchers -> public ResultMatcher doesNotExist();1438899933;Evaluate the JSON path expression against the response content and_assert that the result is empty (i.e., that a match for the JSON_path expression does not exist in the response content).;public ResultMatcher doesNotExist() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.doesNotExist(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,empty,i,e,that,a,match,for,the,json,path,expression,does,not,exist,in,the,response,content;public,result,matcher,does,not,exist,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,does,not,exist,content
JsonPathResultMatchers -> public ResultMatcher doesNotExist();1439582823;Evaluate the JSON path expression against the response content and_assert that a value does not exist at the given path._<p>If the JSON path expression is not_{@linkplain com.jayway.jsonpath.JsonPath#isDefinite definite}, this_method asserts that the value at the given path is <em>empty</em>.;public ResultMatcher doesNotExist() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.doesNotExist(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,value,does,not,exist,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,com,jayway,jsonpath,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,em,empty,em;public,result,matcher,does,not,exist,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,does,not,exist,content
JsonPathResultMatchers -> public ResultMatcher doesNotExist();1439639730;Evaluate the JSON path expression against the response content and_assert that a value does not exist at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is_<em>empty</em>.;public ResultMatcher doesNotExist() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.doesNotExist(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,value,does,not,exist,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,em,empty,em;public,result,matcher,does,not,exist,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,does,not,exist,content
JsonPathResultMatchers -> public ResultMatcher doesNotExist();1439659689;Evaluate the JSON path expression against the response content and_assert that a value does not exist at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is_<em>empty</em>.;public ResultMatcher doesNotExist() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				JsonPathResultMatchers.this.jsonPathHelper.doesNotExist(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,value,does,not,exist,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,em,empty,em;public,result,matcher,does,not,exist,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,result,matchers,this,json,path,helper,does,not,exist,content
JsonPathResultMatchers -> public ResultMatcher doesNotExist();1448489364;Evaluate the JSON path expression against the response content and_assert that a value does not exist at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is_<em>empty</em>.;public ResultMatcher doesNotExist() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = result.getResponse().getContentAsString()__				jsonPathHelper.doesNotExist(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,value,does,not,exist,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,em,empty,em;public,result,matcher,does,not,exist,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,result,get,response,get,content,as,string,json,path,helper,does,not,exist,content
JsonPathResultMatchers -> public ResultMatcher doesNotExist();1458321222;Evaluate the JSON path expression against the response content and_assert that a value does not exist at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is_<em>empty</em>.;public ResultMatcher doesNotExist() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.doesNotExist(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,value,does,not,exist,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,em,empty,em;public,result,matcher,does,not,exist,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,does,not,exist,content
JsonPathResultMatchers -> public ResultMatcher doesNotExist();1458944925;Evaluate the JSON path expression against the response content and_assert that a value does not exist at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is_<em>empty</em>.;public ResultMatcher doesNotExist() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.doesNotExist(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,value,does,not,exist,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,em,empty,em;public,result,matcher,does,not,exist,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,does,not,exist,content
JsonPathResultMatchers -> public ResultMatcher doesNotExist();1472464380;Evaluate the JSON path expression against the response content and_assert that a value does not exist at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is_<em>empty</em>.;public ResultMatcher doesNotExist() {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				String content = getContent(result)__				jsonPathHelper.doesNotExist(content)__			}_		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,value,does,not,exist,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,em,empty,em;public,result,matcher,does,not,exist,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,string,content,get,content,result,json,path,helper,does,not,exist,content
JsonPathResultMatchers -> public ResultMatcher doesNotExist();1493235170;Evaluate the JSON path expression against the response content and_assert that a value does not exist at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is_<em>empty</em>.;public ResultMatcher doesNotExist() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.doesNotExist(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,value,does,not,exist,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,em,empty,em;public,result,matcher,does,not,exist,return,result,string,content,get,content,result,json,path,helper,does,not,exist,content
JsonPathResultMatchers -> public ResultMatcher doesNotExist();1500495740;Evaluate the JSON path expression against the response content and_assert that a value does not exist at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is_<em>empty</em>.;public ResultMatcher doesNotExist() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.doesNotExist(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,value,does,not,exist,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,em,empty,em;public,result,matcher,does,not,exist,return,result,string,content,get,content,result,json,path,helper,does,not,exist,content
JsonPathResultMatchers -> public ResultMatcher doesNotExist();1515029229;Evaluate the JSON path expression against the response content and_assert that a non-null value does not exist at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is_<em>empty</em>.;public ResultMatcher doesNotExist() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.doesNotExist(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,null,value,does,not,exist,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,em,empty,em;public,result,matcher,does,not,exist,return,result,string,content,get,content,result,json,path,helper,does,not,exist,content
JsonPathResultMatchers -> public ResultMatcher doesNotExist();1520952939;Evaluate the JSON path expression against the response content and_assert that a non-null value does not exist at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is_<em>empty</em>.;public ResultMatcher doesNotExist() {_		return result -> {_			String content = getContent(result)__			jsonPathHelper.doesNotExist(content)__		}__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,null,value,does,not,exist,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,em,empty,em;public,result,matcher,does,not,exist,return,result,string,content,get,content,result,json,path,helper,does,not,exist,content
JsonPathResultMatchers -> public ResultMatcher doesNotExist();1520956132;Evaluate the JSON path expression against the response content and_assert that a non-null value does not exist at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is_<em>empty</em>.;public ResultMatcher doesNotExist() {_		return result -> jsonPathHelper.doesNotExist(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,null,value,does,not,exist,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,em,empty,em;public,result,matcher,does,not,exist,return,result,json,path,helper,does,not,exist,get,content,result
JsonPathResultMatchers -> public ResultMatcher doesNotExist();1530174524;Evaluate the JSON path expression against the response content and_assert that a non-null value does not exist at the given path._<p>If the JSON path expression is not {@linkplain JsonPath#isDefinite_definite}, this method asserts that the value at the given path is_<em>empty</em>.;public ResultMatcher doesNotExist() {_		return result -> this.jsonPathHelper.doesNotExist(getContent(result))__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,a,non,null,value,does,not,exist,at,the,given,path,p,if,the,json,path,expression,is,not,linkplain,json,path,is,definite,definite,this,method,asserts,that,the,value,at,the,given,path,is,em,empty,em;public,result,matcher,does,not,exist,return,result,this,json,path,helper,does,not,exist,get,content,result
JsonPathResultMatchers -> public ResultMatcher value(Object expectedValue);1520952939;Evaluate the JSON path expression against the response content and_assert that the result is equal to the supplied value._@see #value(Matcher)_@see #value(Matcher, Class);public ResultMatcher value(Object expectedValue) {_		return result -> jsonPathHelper.assertValue(getContent(result), expectedValue)__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,equal,to,the,supplied,value,see,value,matcher,see,value,matcher,class;public,result,matcher,value,object,expected,value,return,result,json,path,helper,assert,value,get,content,result,expected,value
JsonPathResultMatchers -> public ResultMatcher value(Object expectedValue);1520956132;Evaluate the JSON path expression against the response content and_assert that the result is equal to the supplied value._@see #value(Matcher)_@see #value(Matcher, Class);public ResultMatcher value(Object expectedValue) {_		return result -> jsonPathHelper.assertValue(getContent(result), expectedValue)__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,equal,to,the,supplied,value,see,value,matcher,see,value,matcher,class;public,result,matcher,value,object,expected,value,return,result,json,path,helper,assert,value,get,content,result,expected,value
JsonPathResultMatchers -> public ResultMatcher value(Object expectedValue);1530174524;Evaluate the JSON path expression against the response content and_assert that the result is equal to the supplied value._@see #value(Matcher)_@see #value(Matcher, Class);public ResultMatcher value(Object expectedValue) {_		return result -> this.jsonPathHelper.assertValue(getContent(result), expectedValue)__	};evaluate,the,json,path,expression,against,the,response,content,and,assert,that,the,result,is,equal,to,the,supplied,value,see,value,matcher,see,value,matcher,class;public,result,matcher,value,object,expected,value,return,result,this,json,path,helper,assert,value,get,content,result,expected,value
