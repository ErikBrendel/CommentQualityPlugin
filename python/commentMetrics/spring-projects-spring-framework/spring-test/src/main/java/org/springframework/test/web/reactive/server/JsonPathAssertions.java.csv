commented;modifiers;parameterAmount;loc;comment;code
true;public;1;4;/**  * Applies {@link JsonPathExpectationsHelper#assertValue(String, Object)}.  */ ;/**  * Applies {@link JsonPathExpectationsHelper#assertValue(String, Object)}.  */ public WebTestClient.BodyContentSpec isEqualTo(Object expectedValue) {     this.pathHelper.assertValue(this.content, expectedValue).     return this.bodySpec. }
true;public;0;4;/**  * Applies {@link JsonPathExpectationsHelper#exists(String)}.  */ ;/**  * Applies {@link JsonPathExpectationsHelper#exists(String)}.  */ public WebTestClient.BodyContentSpec exists() {     this.pathHelper.exists(this.content).     return this.bodySpec. }
true;public;0;4;/**  * Applies {@link JsonPathExpectationsHelper#doesNotExist(String)}.  */ ;/**  * Applies {@link JsonPathExpectationsHelper#doesNotExist(String)}.  */ public WebTestClient.BodyContentSpec doesNotExist() {     this.pathHelper.doesNotExist(this.content).     return this.bodySpec. }
true;public;0;4;/**  * Applies {@link JsonPathExpectationsHelper#assertValueIsEmpty(String)}.  */ ;/**  * Applies {@link JsonPathExpectationsHelper#assertValueIsEmpty(String)}.  */ public WebTestClient.BodyContentSpec isEmpty() {     this.pathHelper.assertValueIsEmpty(this.content).     return this.bodySpec. }
true;public;0;4;/**  * Applies {@link JsonPathExpectationsHelper#assertValueIsNotEmpty(String)}.  */ ;/**  * Applies {@link JsonPathExpectationsHelper#assertValueIsNotEmpty(String)}.  */ public WebTestClient.BodyContentSpec isNotEmpty() {     this.pathHelper.assertValueIsNotEmpty(this.content).     return this.bodySpec. }
true;public;0;4;/**  * Applies {@link JsonPathExpectationsHelper#hasJsonPath}.  * @since 5.0.3  */ ;/**  * Applies {@link JsonPathExpectationsHelper#hasJsonPath}.  * @since 5.0.3  */ public WebTestClient.BodyContentSpec hasJsonPath() {     this.pathHelper.hasJsonPath(this.content).     return this.bodySpec. }
true;public;0;4;/**  * Applies {@link JsonPathExpectationsHelper#doesNotHaveJsonPath}.  * @since 5.0.3  */ ;/**  * Applies {@link JsonPathExpectationsHelper#doesNotHaveJsonPath}.  * @since 5.0.3  */ public WebTestClient.BodyContentSpec doesNotHaveJsonPath() {     this.pathHelper.doesNotHaveJsonPath(this.content).     return this.bodySpec. }
true;public;0;4;/**  * Applies {@link JsonPathExpectationsHelper#assertValueIsBoolean(String)}.  */ ;/**  * Applies {@link JsonPathExpectationsHelper#assertValueIsBoolean(String)}.  */ public WebTestClient.BodyContentSpec isBoolean() {     this.pathHelper.assertValueIsBoolean(this.content).     return this.bodySpec. }
true;public;0;4;/**  * Applies {@link JsonPathExpectationsHelper#assertValueIsNumber(String)}.  */ ;/**  * Applies {@link JsonPathExpectationsHelper#assertValueIsNumber(String)}.  */ public WebTestClient.BodyContentSpec isNumber() {     this.pathHelper.assertValueIsNumber(this.content).     return this.bodySpec. }
true;public;0;4;/**  * Applies {@link JsonPathExpectationsHelper#assertValueIsArray(String)}.  */ ;/**  * Applies {@link JsonPathExpectationsHelper#assertValueIsArray(String)}.  */ public WebTestClient.BodyContentSpec isArray() {     this.pathHelper.assertValueIsArray(this.content).     return this.bodySpec. }
true;public;0;4;/**  * Applies {@link JsonPathExpectationsHelper#assertValueIsMap(String)}.  */ ;/**  * Applies {@link JsonPathExpectationsHelper#assertValueIsMap(String)}.  */ public WebTestClient.BodyContentSpec isMap() {     this.pathHelper.assertValueIsMap(this.content).     return this.bodySpec. }
true;public;1;4;/**  * Delegates to {@link JsonPathExpectationsHelper#assertValue(String, Matcher)}.  * @since 5.1  */ ;/**  * Delegates to {@link JsonPathExpectationsHelper#assertValue(String, Matcher)}.  * @since 5.1  */ public <T> WebTestClient.BodyContentSpec value(Matcher<T> matcher) {     this.pathHelper.assertValue(this.content, matcher).     return this.bodySpec. }
true;public;2;4;/**  * Delegates to {@link JsonPathExpectationsHelper#assertValue(String, Matcher, Class)}.  * @since 5.1  */ ;/**  * Delegates to {@link JsonPathExpectationsHelper#assertValue(String, Matcher, Class)}.  * @since 5.1  */ public <T> WebTestClient.BodyContentSpec value(Matcher<T> matcher, Class<T> targetType) {     this.pathHelper.assertValue(this.content, matcher, targetType).     return this.bodySpec. }
true;public;1;6;/**  * Consume the result of the JSONPath evaluation.  * @since 5.1  */ ;/**  * Consume the result of the JSONPath evaluation.  * @since 5.1  */ @SuppressWarnings("unchecked") public <T> WebTestClient.BodyContentSpec value(Consumer<T> consumer) {     Object value = this.pathHelper.evaluateJsonPath(this.content).     consumer.accept((T) value).     return this.bodySpec. }
true;public;2;6;/**  * Consume the result of the JSONPath evaluation and provide a target class.  * @since 5.1  */ ;/**  * Consume the result of the JSONPath evaluation and provide a target class.  * @since 5.1  */ @SuppressWarnings("unchecked") public <T> WebTestClient.BodyContentSpec value(Consumer<T> consumer, Class<T> targetType) {     Object value = this.pathHelper.evaluateJsonPath(this.content, targetType).     consumer.accept((T) value).     return this.bodySpec. }
false;public;1;5;;@Override public boolean equals(Object obj) {     throw new AssertionError("Object#equals is disabled " + "to avoid being used in error instead of JsonPathAssertions#isEqualTo(String)."). }
false;public;0;4;;@Override public int hashCode() {     return super.hashCode(). }
