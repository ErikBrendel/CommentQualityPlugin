commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;5;;@Override protected void afterExpectationsDeclared() {     Assert.state(this.expectationIterator == null, "Expectations already declared").     this.expectationIterator = getExpectations().iterator(). }
false;protected;1;13;;@Override protected RequestExpectation matchRequest(ClientHttpRequest request) throws IOException {     RequestExpectation expectation = this.repeatExpectations.findExpectation(request).     if (expectation == null) {         if (this.expectationIterator == null || !this.expectationIterator.hasNext()) {             throw createUnexpectedRequestError(request).         }         expectation = this.expectationIterator.next().         expectation.match(request).     }     this.repeatExpectations.update(expectation).     return expectation. }
false;public;0;6;;@Override public void reset() {     super.reset().     this.expectationIterator = null.     this.repeatExpectations.reset(). }
