# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractGenericContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory);1328020251;Customize the internal bean factory of the ApplicationContext created by_this <code>ContextLoader</code>._<p>The default implementation is empty but can be overridden in subclasses_to customize <code>DefaultListableBeanFactory</code>'s standard settings._@param beanFactory the bean factory created by this <code>ContextLoader</code>_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping_@since 2.5;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory) {_	};customize,the,internal,bean,factory,of,the,application,context,created,by,this,code,context,loader,code,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,code,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,code,context,loader,code,see,load,context,merged,context,configuration,see,load,context,string,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping,since,2,5;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory
AbstractGenericContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory);1335774711;Customize the internal bean factory of the ApplicationContext created by_this <code>ContextLoader</code>._<p>The default implementation is empty but can be overridden in subclasses_to customize <code>DefaultListableBeanFactory</code>'s standard settings._@param beanFactory the bean factory created by this <code>ContextLoader</code>_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping_@since 2.5;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory) {_	};customize,the,internal,bean,factory,of,the,application,context,created,by,this,code,context,loader,code,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,code,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,code,context,loader,code,see,load,context,merged,context,configuration,see,load,context,string,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping,since,2,5;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory
AbstractGenericContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory);1337278668;Customize the internal bean factory of the ApplicationContext created by_this <code>ContextLoader</code>.__<p>The default implementation is empty but can be overridden in subclasses_to customize <code>DefaultListableBeanFactory</code>'s standard settings.__@param beanFactory the bean factory created by this <code>ContextLoader</code>_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping_@since 2.5;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory) {_	};customize,the,internal,bean,factory,of,the,application,context,created,by,this,code,context,loader,code,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,code,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,code,context,loader,code,see,load,context,merged,context,configuration,see,load,context,string,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping,since,2,5;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory
AbstractGenericContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory);1345469597;Customize the internal bean factory of the ApplicationContext created by_this <code>ContextLoader</code>.__<p>The default implementation is empty but can be overridden in subclasses_to customize <code>DefaultListableBeanFactory</code>'s standard settings.__@param beanFactory the bean factory created by this <code>ContextLoader</code>_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping_@since 2.5;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory) {_	};customize,the,internal,bean,factory,of,the,application,context,created,by,this,code,context,loader,code,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,code,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,code,context,loader,code,see,load,context,merged,context,configuration,see,load,context,string,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping,since,2,5;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory
AbstractGenericContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory);1349648958;Customize the internal bean factory of the ApplicationContext created by_this <code>ContextLoader</code>.__<p>The default implementation is empty but can be overridden in subclasses_to customize <code>DefaultListableBeanFactory</code>'s standard settings.__@param beanFactory the bean factory created by this <code>ContextLoader</code>_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping_@since 2.5;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory) {_	};customize,the,internal,bean,factory,of,the,application,context,created,by,this,code,context,loader,code,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,code,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,code,context,loader,code,see,load,context,merged,context,configuration,see,load,context,string,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping,since,2,5;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory
AbstractGenericContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory);1355313310;Customize the internal bean factory of the ApplicationContext created by_this <code>ContextLoader</code>.__<p>The default implementation is empty but can be overridden in subclasses_to customize <code>DefaultListableBeanFactory</code>'s standard settings.__@param beanFactory the bean factory created by this <code>ContextLoader</code>_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping_@since 2.5;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory) {_	};customize,the,internal,bean,factory,of,the,application,context,created,by,this,code,context,loader,code,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,code,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,code,context,loader,code,see,load,context,merged,context,configuration,see,load,context,string,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping,since,2,5;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory
AbstractGenericContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory);1356735495;Customize the internal bean factory of the ApplicationContext created by_this {@code ContextLoader}.__<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings.__@param beanFactory the bean factory created by this {@code ContextLoader}_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping_@since 2.5;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory) {_	};customize,the,internal,bean,factory,of,the,application,context,created,by,this,code,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,code,context,loader,see,load,context,merged,context,configuration,see,load,context,string,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping,since,2,5;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory
AbstractGenericContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory);1357119239;Customize the internal bean factory of the ApplicationContext created by_this {@code ContextLoader}.__<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings.__@param beanFactory the bean factory created by this {@code ContextLoader}_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping_@since 2.5;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory) {_	};customize,the,internal,bean,factory,of,the,application,context,created,by,this,code,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,code,context,loader,see,load,context,merged,context,configuration,see,load,context,string,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping,since,2,5;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory
AbstractGenericContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory);1363208506;Customize the internal bean factory of the ApplicationContext created by_this {@code ContextLoader}.__<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings.__@param beanFactory the bean factory created by this {@code ContextLoader}_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping_@since 2.5;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory) {_	};customize,the,internal,bean,factory,of,the,application,context,created,by,this,code,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,code,context,loader,see,load,context,merged,context,configuration,see,load,context,string,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping,since,2,5;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory
AbstractGenericContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory);1368482696;Customize the internal bean factory of the ApplicationContext created by_this {@code ContextLoader}.__<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings.__@param beanFactory the bean factory created by this {@code ContextLoader}_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping_@since 2.5;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory) {_	};customize,the,internal,bean,factory,of,the,application,context,created,by,this,code,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,code,context,loader,see,load,context,merged,context,configuration,see,load,context,string,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping,since,2,5;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory
AbstractGenericContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory);1396374528;Customize the internal bean factory of the ApplicationContext created by_this {@code ContextLoader}.__<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings.__@param beanFactory the bean factory created by this {@code ContextLoader}_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping_@since 2.5;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory) {_	};customize,the,internal,bean,factory,of,the,application,context,created,by,this,code,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,code,context,loader,see,load,context,merged,context,configuration,see,load,context,string,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping,since,2,5;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory
AbstractGenericContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory);1457727806;Customize the internal bean factory of the ApplicationContext created by_this {@code ContextLoader}.__<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings.__@param beanFactory the bean factory created by this {@code ContextLoader}_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping_@since 2.5;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory) {_	};customize,the,internal,bean,factory,of,the,application,context,created,by,this,code,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,code,context,loader,see,load,context,merged,context,configuration,see,load,context,string,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping,since,2,5;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory
AbstractGenericContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory);1530174524;Customize the internal bean factory of the ApplicationContext created by_this {@code ContextLoader}.__<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings.__@param beanFactory the bean factory created by this {@code ContextLoader}_@since 2.5_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory) {_	};customize,the,internal,bean,factory,of,the,application,context,created,by,this,code,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,code,context,loader,since,2,5,see,load,context,merged,context,configuration,see,load,context,string,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory
AbstractGenericContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory);1549646187;Customize the internal bean factory of the ApplicationContext created by_this {@code ContextLoader}.__<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings.__@param beanFactory the bean factory created by this {@code ContextLoader}_@since 2.5_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory) {_	};customize,the,internal,bean,factory,of,the,application,context,created,by,this,code,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,code,context,loader,since,2,5,see,load,context,merged,context,configuration,see,load,context,string,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory
AbstractGenericContextLoader -> public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1328020251;Load a Spring ApplicationContext from the supplied {@link MergedContextConfiguration}._<p>Implementation details:_<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Sets the <em>active bean definition profiles</em> from the supplied_<code>MergedContextConfiguration</code> in the_{@link org.springframework.core.env.Environment Environment} of the context.</li>_<li>Calls {@link #prepareContext()} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory()} to allow for customizing the_context's <code>DefaultListableBeanFactory</code>.</li>_<li>Delegates to {@link #loadBeanDefinitions()} to populate the context_from the configuration locations or classes in the supplied_<code>MergedContextConfiguration</code>.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext()} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>_@return a new application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericApplicationContext_@since 3.1;public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for merged context configuration [%s].",_				mergedConfig))__		}_		GenericApplicationContext context = new GenericApplicationContext()__		context.getEnvironment().setActiveProfiles(mergedConfig.getActiveProfiles())__		prepareContext(context)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		loadBeanDefinitions(context, mergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,sets,the,em,active,bean,definition,profiles,em,from,the,supplied,code,merged,context,configuration,code,in,the,link,org,springframework,core,env,environment,environment,of,the,context,li,li,calls,link,prepare,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,code,li,li,delegates,to,link,load,bean,definitions,to,populate,the,context,from,the,configuration,locations,or,classes,in,the,supplied,code,merged,context,configuration,code,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,application,context,since,3,1;public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,merged,context,configuration,s,merged,config,generic,application,context,context,new,generic,application,context,context,get,environment,set,active,profiles,merged,config,get,active,profiles,prepare,context,context,customize,bean,factory,context,get,default,listable,bean,factory,load,bean,definitions,context,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1335774711;Load a Spring ApplicationContext from the supplied {@link MergedContextConfiguration}._<p>Implementation details:_<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Sets the <em>active bean definition profiles</em> from the supplied_<code>MergedContextConfiguration</code> in the_{@link org.springframework.core.env.Environment Environment} of the context.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's <code>DefaultListableBeanFactory</code>.</li>_<li>Delegates to {@link #loadBeanDefinitions(GenericApplicationContext, MergedContextConfiguration)}_to populate the context from the configuration locations or classes in the supplied_<code>MergedContextConfiguration</code>.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>_@return a new application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericApplicationContext_@since 3.1;public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for merged context configuration [%s].",_				mergedConfig))__		}_		GenericApplicationContext context = new GenericApplicationContext()__		context.getEnvironment().setActiveProfiles(mergedConfig.getActiveProfiles())__		prepareContext(context)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		loadBeanDefinitions(context, mergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,sets,the,em,active,bean,definition,profiles,em,from,the,supplied,code,merged,context,configuration,code,in,the,link,org,springframework,core,env,environment,environment,of,the,context,li,li,calls,link,prepare,context,generic,application,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,code,li,li,delegates,to,link,load,bean,definitions,generic,application,context,merged,context,configuration,to,populate,the,context,from,the,configuration,locations,or,classes,in,the,supplied,code,merged,context,configuration,code,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,application,context,since,3,1;public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,merged,context,configuration,s,merged,config,generic,application,context,context,new,generic,application,context,context,get,environment,set,active,profiles,merged,config,get,active,profiles,prepare,context,context,customize,bean,factory,context,get,default,listable,bean,factory,load,bean,definitions,context,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1337278668;Load a Spring ApplicationContext from the supplied {@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Sets the <em>active bean definition profiles</em> from the supplied_<code>MergedContextConfiguration</code> in the_{@link org.springframework.core.env.Environment Environment} of the context.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's <code>DefaultListableBeanFactory</code>.</li>_<li>Delegates to {@link #loadBeanDefinitions(GenericApplicationContext, MergedContextConfiguration)}_to populate the context from the locations or classes in the supplied_<code>MergedContextConfiguration</code>.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericApplicationContext_@since 3.1;public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for merged context configuration [%s].",_				mergedConfig))__		}_		GenericApplicationContext context = new GenericApplicationContext()__		context.getEnvironment().setActiveProfiles(mergedConfig.getActiveProfiles())__		prepareContext(context)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		loadBeanDefinitions(context, mergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,sets,the,em,active,bean,definition,profiles,em,from,the,supplied,code,merged,context,configuration,code,in,the,link,org,springframework,core,env,environment,environment,of,the,context,li,li,calls,link,prepare,context,generic,application,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,code,li,li,delegates,to,link,load,bean,definitions,generic,application,context,merged,context,configuration,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,code,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,application,context,since,3,1;public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,merged,context,configuration,s,merged,config,generic,application,context,context,new,generic,application,context,context,get,environment,set,active,profiles,merged,config,get,active,profiles,prepare,context,context,customize,bean,factory,context,get,default,listable,bean,factory,load,bean,definitions,context,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1345469597;Load a Spring ApplicationContext from the supplied {@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext, MergedContextConfiguration)}_to allow for customizing the context before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's <code>DefaultListableBeanFactory</code>.</li>_<li>Delegates to {@link #loadBeanDefinitions(GenericApplicationContext, MergedContextConfiguration)}_to populate the context from the locations or classes in the supplied_<code>MergedContextConfiguration</code>.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericApplicationContext_@since 3.1;public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for merged context configuration [%s].",_				mergedConfig))__		}__		GenericApplicationContext context = new GenericApplicationContext()__		prepareContext(context, mergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		loadBeanDefinitions(context, mergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,calls,link,prepare,context,generic,application,context,merged,context,configuration,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,code,li,li,delegates,to,link,load,bean,definitions,generic,application,context,merged,context,configuration,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,code,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,application,context,since,3,1;public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,merged,context,configuration,s,merged,config,generic,application,context,context,new,generic,application,context,prepare,context,context,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,load,bean,definitions,context,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1349648958;Load a Spring ApplicationContext from the supplied {@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} for backwards_compatibility with the {@link org.springframework.test.context.ContextLoader_ContextLoader} SPI.</li>_<li>Calls {@link #prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)}_to allow for customizing the context before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's <code>DefaultListableBeanFactory</code>.</li>_<li>Delegates to {@link #loadBeanDefinitions(GenericApplicationContext, MergedContextConfiguration)}_to populate the context from the locations or classes in the supplied_<code>MergedContextConfiguration</code>.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericApplicationContext_@since 3.1;public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for merged context configuration [%s].",_				mergedConfig))__		}__		GenericApplicationContext context = new GenericApplicationContext()__		prepareContext(context)__		prepareContext(context, mergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		loadBeanDefinitions(context, mergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,calls,link,prepare,context,generic,application,context,for,backwards,compatibility,with,the,link,org,springframework,test,context,context,loader,context,loader,spi,li,li,calls,link,prepare,context,configurable,application,context,merged,context,configuration,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,code,li,li,delegates,to,link,load,bean,definitions,generic,application,context,merged,context,configuration,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,code,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,application,context,since,3,1;public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,merged,context,configuration,s,merged,config,generic,application,context,context,new,generic,application,context,prepare,context,context,prepare,context,context,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,load,bean,definitions,context,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1355313310;Load a Spring ApplicationContext from the supplied {@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} for backwards_compatibility with the {@link org.springframework.test.context.ContextLoader_ContextLoader} SPI.</li>_<li>Calls {@link #prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)}_to allow for customizing the context before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's <code>DefaultListableBeanFactory</code>.</li>_<li>Delegates to {@link #loadBeanDefinitions(GenericApplicationContext, MergedContextConfiguration)}_to populate the context from the locations or classes in the supplied_<code>MergedContextConfiguration</code>.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericApplicationContext_@since 3.1;public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for merged context configuration [%s].",_				mergedConfig))__		}__		GenericApplicationContext context = new GenericApplicationContext()__		prepareContext(context)__		prepareContext(context, mergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		loadBeanDefinitions(context, mergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,calls,link,prepare,context,generic,application,context,for,backwards,compatibility,with,the,link,org,springframework,test,context,context,loader,context,loader,spi,li,li,calls,link,prepare,context,configurable,application,context,merged,context,configuration,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,code,li,li,delegates,to,link,load,bean,definitions,generic,application,context,merged,context,configuration,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,code,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,application,context,since,3,1;public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,merged,context,configuration,s,merged,config,generic,application,context,context,new,generic,application,context,prepare,context,context,prepare,context,context,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,load,bean,definitions,context,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1357119239;Load a Spring ApplicationContext from the supplied {@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} for backwards_compatibility with the {@link org.springframework.test.context.ContextLoader_ContextLoader} SPI.</li>_<li>Calls {@link #prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)}_to allow for customizing the context before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions(GenericApplicationContext, MergedContextConfiguration)}_to populate the context from the locations or classes in the supplied_{@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericApplicationContext_@since 3.1;public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for merged context configuration [%s].",_				mergedConfig))__		}__		GenericApplicationContext context = new GenericApplicationContext()__		prepareContext(context)__		prepareContext(context, mergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		loadBeanDefinitions(context, mergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,calls,link,prepare,context,generic,application,context,for,backwards,compatibility,with,the,link,org,springframework,test,context,context,loader,context,loader,spi,li,li,calls,link,prepare,context,configurable,application,context,merged,context,configuration,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,generic,application,context,merged,context,configuration,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,application,context,since,3,1;public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,merged,context,configuration,s,merged,config,generic,application,context,context,new,generic,application,context,prepare,context,context,prepare,context,context,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,load,bean,definitions,context,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1363208506;Load a Spring ApplicationContext from the supplied {@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>If the supplied {@code MergedContextConfiguration} references a_{@linkplain MergedContextConfiguration#getParent() parent configuration},_the corresponding {@link MergedContextConfiguration#getParentApplicationContext()_ApplicationContext} will be retrieved and_{@linkplain GenericApplicationContext#setParent(ApplicationContext) set as the parent}_for the context created by this method.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} for backwards_compatibility with the {@link org.springframework.test.context.ContextLoader_ContextLoader} SPI.</li>_<li>Calls {@link #prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)}_to allow for customizing the context before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions(GenericApplicationContext, MergedContextConfiguration)}_to populate the context from the locations or classes in the supplied_{@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericApplicationContext_@since 3.1;public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for merged context configuration [%s].",_				mergedConfig))__		}__		GenericApplicationContext context = new GenericApplicationContext()___		ApplicationContext parent = mergedConfig.getParentApplicationContext()__		if (parent != null) {_			context.setParent(parent)__		}_		prepareContext(context)__		prepareContext(context, mergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		loadBeanDefinitions(context, mergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,if,the,supplied,code,merged,context,configuration,references,a,linkplain,merged,context,configuration,get,parent,parent,configuration,the,corresponding,link,merged,context,configuration,get,parent,application,context,application,context,will,be,retrieved,and,linkplain,generic,application,context,set,parent,application,context,set,as,the,parent,for,the,context,created,by,this,method,li,li,calls,link,prepare,context,generic,application,context,for,backwards,compatibility,with,the,link,org,springframework,test,context,context,loader,context,loader,spi,li,li,calls,link,prepare,context,configurable,application,context,merged,context,configuration,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,generic,application,context,merged,context,configuration,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,application,context,since,3,1;public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,merged,context,configuration,s,merged,config,generic,application,context,context,new,generic,application,context,application,context,parent,merged,config,get,parent,application,context,if,parent,null,context,set,parent,parent,prepare,context,context,prepare,context,context,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,load,bean,definitions,context,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1356735495;Load a Spring ApplicationContext from the supplied {@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} for backwards_compatibility with the {@link org.springframework.test.context.ContextLoader_ContextLoader} SPI.</li>_<li>Calls {@link #prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)}_to allow for customizing the context before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions(GenericApplicationContext, MergedContextConfiguration)}_to populate the context from the locations or classes in the supplied_{@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericApplicationContext_@since 3.1;@Override_	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for merged context configuration [%s].",_				mergedConfig))__		}__		GenericApplicationContext context = new GenericApplicationContext()__		prepareContext(context)__		prepareContext(context, mergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		loadBeanDefinitions(context, mergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,calls,link,prepare,context,generic,application,context,for,backwards,compatibility,with,the,link,org,springframework,test,context,context,loader,context,loader,spi,li,li,calls,link,prepare,context,configurable,application,context,merged,context,configuration,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,generic,application,context,merged,context,configuration,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,application,context,since,3,1;override,public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,merged,context,configuration,s,merged,config,generic,application,context,context,new,generic,application,context,prepare,context,context,prepare,context,context,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,load,bean,definitions,context,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1368482696;Load a Spring ApplicationContext from the supplied {@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>If the supplied {@code MergedContextConfiguration} references a_{@linkplain MergedContextConfiguration#getParent() parent configuration},_the corresponding {@link MergedContextConfiguration#getParentApplicationContext()_ApplicationContext} will be retrieved and_{@linkplain GenericApplicationContext#setParent(ApplicationContext) set as the parent}_for the context created by this method.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} for backwards_compatibility with the {@link org.springframework.test.context.ContextLoader_ContextLoader} SPI.</li>_<li>Calls {@link #prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)}_to allow for customizing the context before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions(GenericApplicationContext, MergedContextConfiguration)}_to populate the context from the locations or classes in the supplied_{@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericApplicationContext_@since 3.1;@Override_	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for merged context configuration [%s].",_				mergedConfig))__		}__		GenericApplicationContext context = new GenericApplicationContext()___		ApplicationContext parent = mergedConfig.getParentApplicationContext()__		if (parent != null) {_			context.setParent(parent)__		}_		prepareContext(context)__		prepareContext(context, mergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		loadBeanDefinitions(context, mergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,if,the,supplied,code,merged,context,configuration,references,a,linkplain,merged,context,configuration,get,parent,parent,configuration,the,corresponding,link,merged,context,configuration,get,parent,application,context,application,context,will,be,retrieved,and,linkplain,generic,application,context,set,parent,application,context,set,as,the,parent,for,the,context,created,by,this,method,li,li,calls,link,prepare,context,generic,application,context,for,backwards,compatibility,with,the,link,org,springframework,test,context,context,loader,context,loader,spi,li,li,calls,link,prepare,context,configurable,application,context,merged,context,configuration,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,generic,application,context,merged,context,configuration,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,application,context,since,3,1;override,public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,merged,context,configuration,s,merged,config,generic,application,context,context,new,generic,application,context,application,context,parent,merged,config,get,parent,application,context,if,parent,null,context,set,parent,parent,prepare,context,context,prepare,context,context,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,load,bean,definitions,context,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1396374528;Load a Spring ApplicationContext from the supplied {@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Calls {@link #validateMergedContextConfiguration(MergedContextConfiguration)}_to allow subclasses to validate the supplied configuration before proceeding.</li>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>If the supplied {@code MergedContextConfiguration} references a_{@linkplain MergedContextConfiguration#getParent() parent configuration},_the corresponding {@link MergedContextConfiguration#getParentApplicationContext()_ApplicationContext} will be retrieved and_{@linkplain GenericApplicationContext#setParent(ApplicationContext) set as the parent}_for the context created by this method.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} for backwards_compatibility with the {@link org.springframework.test.context.ContextLoader_ContextLoader} SPI.</li>_<li>Calls {@link #prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)}_to allow for customizing the context before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions(GenericApplicationContext, MergedContextConfiguration)}_to populate the context from the locations or classes in the supplied_{@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericApplicationContext_@since 3.1;@Override_	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for merged context configuration [%s].",_				mergedConfig))__		}__		validateMergedContextConfiguration(mergedConfig)___		GenericApplicationContext context = new GenericApplicationContext()___		ApplicationContext parent = mergedConfig.getParentApplicationContext()__		if (parent != null) {_			context.setParent(parent)__		}_		prepareContext(context)__		prepareContext(context, mergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		loadBeanDefinitions(context, mergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,calls,link,validate,merged,context,configuration,merged,context,configuration,to,allow,subclasses,to,validate,the,supplied,configuration,before,proceeding,li,li,creates,a,link,generic,application,context,instance,li,li,if,the,supplied,code,merged,context,configuration,references,a,linkplain,merged,context,configuration,get,parent,parent,configuration,the,corresponding,link,merged,context,configuration,get,parent,application,context,application,context,will,be,retrieved,and,linkplain,generic,application,context,set,parent,application,context,set,as,the,parent,for,the,context,created,by,this,method,li,li,calls,link,prepare,context,generic,application,context,for,backwards,compatibility,with,the,link,org,springframework,test,context,context,loader,context,loader,spi,li,li,calls,link,prepare,context,configurable,application,context,merged,context,configuration,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,generic,application,context,merged,context,configuration,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,application,context,since,3,1;override,public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,merged,context,configuration,s,merged,config,validate,merged,context,configuration,merged,config,generic,application,context,context,new,generic,application,context,application,context,parent,merged,config,get,parent,application,context,if,parent,null,context,set,parent,parent,prepare,context,context,prepare,context,context,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,load,bean,definitions,context,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1457727806;Load a Spring ApplicationContext from the supplied {@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Calls {@link #validateMergedContextConfiguration(MergedContextConfiguration)}_to allow subclasses to validate the supplied configuration before proceeding.</li>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>If the supplied {@code MergedContextConfiguration} references a_{@linkplain MergedContextConfiguration#getParent() parent configuration},_the corresponding {@link MergedContextConfiguration#getParentApplicationContext()_ApplicationContext} will be retrieved and_{@linkplain GenericApplicationContext#setParent(ApplicationContext) set as the parent}_for the context created by this method.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} for backwards_compatibility with the {@link org.springframework.test.context.ContextLoader_ContextLoader} SPI.</li>_<li>Calls {@link #prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)}_to allow for customizing the context before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions(GenericApplicationContext, MergedContextConfiguration)}_to populate the context from the locations or classes in the supplied_{@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>Calls {@link #customizeContext(ConfigurableApplicationContext, MergedContextConfiguration)} to_allow for customizing the context before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericApplicationContext_@since 3.1;@Override_	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for merged context configuration [%s].",_				mergedConfig))__		}__		validateMergedContextConfiguration(mergedConfig)___		GenericApplicationContext context = new GenericApplicationContext()___		ApplicationContext parent = mergedConfig.getParentApplicationContext()__		if (parent != null) {_			context.setParent(parent)__		}_		prepareContext(context)__		prepareContext(context, mergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		loadBeanDefinitions(context, mergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		customizeContext(context, mergedConfig)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,calls,link,validate,merged,context,configuration,merged,context,configuration,to,allow,subclasses,to,validate,the,supplied,configuration,before,proceeding,li,li,creates,a,link,generic,application,context,instance,li,li,if,the,supplied,code,merged,context,configuration,references,a,linkplain,merged,context,configuration,get,parent,parent,configuration,the,corresponding,link,merged,context,configuration,get,parent,application,context,application,context,will,be,retrieved,and,linkplain,generic,application,context,set,parent,application,context,set,as,the,parent,for,the,context,created,by,this,method,li,li,calls,link,prepare,context,generic,application,context,for,backwards,compatibility,with,the,link,org,springframework,test,context,context,loader,context,loader,spi,li,li,calls,link,prepare,context,configurable,application,context,merged,context,configuration,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,generic,application,context,merged,context,configuration,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,calls,link,customize,context,configurable,application,context,merged,context,configuration,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,application,context,since,3,1;override,public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,merged,context,configuration,s,merged,config,validate,merged,context,configuration,merged,config,generic,application,context,context,new,generic,application,context,application,context,parent,merged,config,get,parent,application,context,if,parent,null,context,set,parent,parent,prepare,context,context,prepare,context,context,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,load,bean,definitions,context,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,customize,context,context,merged,config,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1530174524;Load a Spring ApplicationContext from the supplied {@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Calls {@link #validateMergedContextConfiguration(MergedContextConfiguration)}_to allow subclasses to validate the supplied configuration before proceeding.</li>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>If the supplied {@code MergedContextConfiguration} references a_{@linkplain MergedContextConfiguration#getParent() parent configuration},_the corresponding {@link MergedContextConfiguration#getParentApplicationContext()_ApplicationContext} will be retrieved and_{@linkplain GenericApplicationContext#setParent(ApplicationContext) set as the parent}_for the context created by this method.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} for backwards_compatibility with the {@link org.springframework.test.context.ContextLoader_ContextLoader} SPI.</li>_<li>Calls {@link #prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)}_to allow for customizing the context before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions(GenericApplicationContext, MergedContextConfiguration)}_to populate the context from the locations or classes in the supplied_{@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>Calls {@link #customizeContext(ConfigurableApplicationContext, MergedContextConfiguration)} to_allow for customizing the context before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericApplicationContext_@since 3.1;@Override_	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for merged context configuration [%s].",_				mergedConfig))__		}__		validateMergedContextConfiguration(mergedConfig)___		GenericApplicationContext context = new GenericApplicationContext()___		ApplicationContext parent = mergedConfig.getParentApplicationContext()__		if (parent != null) {_			context.setParent(parent)__		}_		prepareContext(context)__		prepareContext(context, mergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		loadBeanDefinitions(context, mergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		customizeContext(context, mergedConfig)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,calls,link,validate,merged,context,configuration,merged,context,configuration,to,allow,subclasses,to,validate,the,supplied,configuration,before,proceeding,li,li,creates,a,link,generic,application,context,instance,li,li,if,the,supplied,code,merged,context,configuration,references,a,linkplain,merged,context,configuration,get,parent,parent,configuration,the,corresponding,link,merged,context,configuration,get,parent,application,context,application,context,will,be,retrieved,and,linkplain,generic,application,context,set,parent,application,context,set,as,the,parent,for,the,context,created,by,this,method,li,li,calls,link,prepare,context,generic,application,context,for,backwards,compatibility,with,the,link,org,springframework,test,context,context,loader,context,loader,spi,li,li,calls,link,prepare,context,configurable,application,context,merged,context,configuration,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,generic,application,context,merged,context,configuration,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,calls,link,customize,context,configurable,application,context,merged,context,configuration,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,application,context,since,3,1;override,public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,merged,context,configuration,s,merged,config,validate,merged,context,configuration,merged,config,generic,application,context,context,new,generic,application,context,application,context,parent,merged,config,get,parent,application,context,if,parent,null,context,set,parent,parent,prepare,context,context,prepare,context,context,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,load,bean,definitions,context,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,customize,context,context,merged,config,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1549646187;Load a Spring ApplicationContext from the supplied {@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Calls {@link #validateMergedContextConfiguration(MergedContextConfiguration)}_to allow subclasses to validate the supplied configuration before proceeding.</li>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>If the supplied {@code MergedContextConfiguration} references a_{@linkplain MergedContextConfiguration#getParent() parent configuration},_the corresponding {@link MergedContextConfiguration#getParentApplicationContext()_ApplicationContext} will be retrieved and_{@linkplain GenericApplicationContext#setParent(ApplicationContext) set as the parent}_for the context created by this method.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} for backwards_compatibility with the {@link org.springframework.test.context.ContextLoader_ContextLoader} SPI.</li>_<li>Calls {@link #prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)}_to allow for customizing the context before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions(GenericApplicationContext, MergedContextConfiguration)}_to populate the context from the locations or classes in the supplied_{@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>Calls {@link #customizeContext(ConfigurableApplicationContext, MergedContextConfiguration)} to_allow for customizing the context before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericApplicationContext_@since 3.1;@Override_	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for merged context configuration [%s].",_				mergedConfig))__		}__		validateMergedContextConfiguration(mergedConfig)___		GenericApplicationContext context = new GenericApplicationContext()___		ApplicationContext parent = mergedConfig.getParentApplicationContext()__		if (parent != null) {_			context.setParent(parent)__		}_		prepareContext(context)__		prepareContext(context, mergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		loadBeanDefinitions(context, mergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		customizeContext(context, mergedConfig)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,calls,link,validate,merged,context,configuration,merged,context,configuration,to,allow,subclasses,to,validate,the,supplied,configuration,before,proceeding,li,li,creates,a,link,generic,application,context,instance,li,li,if,the,supplied,code,merged,context,configuration,references,a,linkplain,merged,context,configuration,get,parent,parent,configuration,the,corresponding,link,merged,context,configuration,get,parent,application,context,application,context,will,be,retrieved,and,linkplain,generic,application,context,set,parent,application,context,set,as,the,parent,for,the,context,created,by,this,method,li,li,calls,link,prepare,context,generic,application,context,for,backwards,compatibility,with,the,link,org,springframework,test,context,context,loader,context,loader,spi,li,li,calls,link,prepare,context,configurable,application,context,merged,context,configuration,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,generic,application,context,merged,context,configuration,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,calls,link,customize,context,configurable,application,context,merged,context,configuration,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,application,context,since,3,1;override,public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,merged,context,configuration,s,merged,config,validate,merged,context,configuration,merged,config,generic,application,context,context,new,generic,application,context,application,context,parent,merged,config,get,parent,application,context,if,parent,null,context,set,parent,parent,prepare,context,context,prepare,context,context,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,load,bean,definitions,context,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,customize,context,context,merged,config,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> protected void validateMergedContextConfiguration(MergedContextConfiguration mergedConfig);1396374528;Validate the supplied {@link MergedContextConfiguration} with respect to_what this context loader supports._<p>The default implementation is a <em>no-op</em> but can be overridden by_subclasses as appropriate._@param mergedConfig the merged configuration to validate_@throws IllegalStateException if the supplied configuration is not valid_for this context loader_@since 4.0.4;protected void validateMergedContextConfiguration(MergedContextConfiguration mergedConfig) {_		_	};validate,the,supplied,link,merged,context,configuration,with,respect,to,what,this,context,loader,supports,p,the,default,implementation,is,a,em,no,op,em,but,can,be,overridden,by,subclasses,as,appropriate,param,merged,config,the,merged,configuration,to,validate,throws,illegal,state,exception,if,the,supplied,configuration,is,not,valid,for,this,context,loader,since,4,0,4;protected,void,validate,merged,context,configuration,merged,context,configuration,merged,config
AbstractGenericContextLoader -> protected void validateMergedContextConfiguration(MergedContextConfiguration mergedConfig);1457727806;Validate the supplied {@link MergedContextConfiguration} with respect to_what this context loader supports._<p>The default implementation is a <em>no-op</em> but can be overridden by_subclasses as appropriate._@param mergedConfig the merged configuration to validate_@throws IllegalStateException if the supplied configuration is not valid_for this context loader_@since 4.0.4;protected void validateMergedContextConfiguration(MergedContextConfiguration mergedConfig) {_		_	};validate,the,supplied,link,merged,context,configuration,with,respect,to,what,this,context,loader,supports,p,the,default,implementation,is,a,em,no,op,em,but,can,be,overridden,by,subclasses,as,appropriate,param,merged,config,the,merged,configuration,to,validate,throws,illegal,state,exception,if,the,supplied,configuration,is,not,valid,for,this,context,loader,since,4,0,4;protected,void,validate,merged,context,configuration,merged,context,configuration,merged,config
AbstractGenericContextLoader -> protected void validateMergedContextConfiguration(MergedContextConfiguration mergedConfig);1530174524;Validate the supplied {@link MergedContextConfiguration} with respect to_what this context loader supports._<p>The default implementation is a <em>no-op</em> but can be overridden by_subclasses as appropriate._@param mergedConfig the merged configuration to validate_@throws IllegalStateException if the supplied configuration is not valid_for this context loader_@since 4.0.4;protected void validateMergedContextConfiguration(MergedContextConfiguration mergedConfig) {_		_	};validate,the,supplied,link,merged,context,configuration,with,respect,to,what,this,context,loader,supports,p,the,default,implementation,is,a,em,no,op,em,but,can,be,overridden,by,subclasses,as,appropriate,param,merged,config,the,merged,configuration,to,validate,throws,illegal,state,exception,if,the,supplied,configuration,is,not,valid,for,this,context,loader,since,4,0,4;protected,void,validate,merged,context,configuration,merged,context,configuration,merged,config
AbstractGenericContextLoader -> protected void validateMergedContextConfiguration(MergedContextConfiguration mergedConfig);1549646187;Validate the supplied {@link MergedContextConfiguration} with respect to_what this context loader supports._<p>The default implementation is a <em>no-op</em> but can be overridden by_subclasses as appropriate._@param mergedConfig the merged configuration to validate_@throws IllegalStateException if the supplied configuration is not valid_for this context loader_@since 4.0.4;protected void validateMergedContextConfiguration(MergedContextConfiguration mergedConfig) {_		_	};validate,the,supplied,link,merged,context,configuration,with,respect,to,what,this,context,loader,supports,p,the,default,implementation,is,a,em,no,op,em,but,can,be,overridden,by,subclasses,as,appropriate,param,merged,config,the,merged,configuration,to,validate,throws,illegal,state,exception,if,the,supplied,configuration,is,not,valid,for,this,context,loader,since,4,0,4;protected,void,validate,merged,context,configuration,merged,context,configuration,merged,config
AbstractGenericContextLoader -> protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;1328020251;Factory method for creating a new {@link BeanDefinitionReader} for loading_bean definitions into the supplied {@link GenericApplicationContext context}._@param context the context for which the <code>BeanDefinitionReader</code>_should be created_@return a <code>BeanDefinitionReader</code> for the supplied context_@see #loadContext(String...)_@see #loadBeanDefinitions_@see BeanDefinitionReader_@since 2.5;protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;factory,method,for,creating,a,new,link,bean,definition,reader,for,loading,bean,definitions,into,the,supplied,link,generic,application,context,context,param,context,the,context,for,which,the,code,bean,definition,reader,code,should,be,created,return,a,code,bean,definition,reader,code,for,the,supplied,context,see,load,context,string,see,load,bean,definitions,see,bean,definition,reader,since,2,5;protected,abstract,bean,definition,reader,create,bean,definition,reader,generic,application,context,context
AbstractGenericContextLoader -> protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;1335774711;Factory method for creating a new {@link BeanDefinitionReader} for loading_bean definitions into the supplied {@link GenericApplicationContext context}._@param context the context for which the <code>BeanDefinitionReader</code>_should be created_@return a <code>BeanDefinitionReader</code> for the supplied context_@see #loadContext(String...)_@see #loadBeanDefinitions_@see BeanDefinitionReader_@since 2.5;protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;factory,method,for,creating,a,new,link,bean,definition,reader,for,loading,bean,definitions,into,the,supplied,link,generic,application,context,context,param,context,the,context,for,which,the,code,bean,definition,reader,code,should,be,created,return,a,code,bean,definition,reader,code,for,the,supplied,context,see,load,context,string,see,load,bean,definitions,see,bean,definition,reader,since,2,5;protected,abstract,bean,definition,reader,create,bean,definition,reader,generic,application,context,context
AbstractGenericContextLoader -> protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;1337278668;Factory method for creating a new {@link BeanDefinitionReader} for loading_bean definitions into the supplied {@link GenericApplicationContext context}.__@param context the context for which the <code>BeanDefinitionReader</code>_should be created_@return a <code>BeanDefinitionReader</code> for the supplied context_@see #loadContext(String...)_@see #loadBeanDefinitions_@see BeanDefinitionReader_@since 2.5;protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;factory,method,for,creating,a,new,link,bean,definition,reader,for,loading,bean,definitions,into,the,supplied,link,generic,application,context,context,param,context,the,context,for,which,the,code,bean,definition,reader,code,should,be,created,return,a,code,bean,definition,reader,code,for,the,supplied,context,see,load,context,string,see,load,bean,definitions,see,bean,definition,reader,since,2,5;protected,abstract,bean,definition,reader,create,bean,definition,reader,generic,application,context,context
AbstractGenericContextLoader -> protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;1345469597;Factory method for creating a new {@link BeanDefinitionReader} for loading_bean definitions into the supplied {@link GenericApplicationContext context}.__@param context the context for which the <code>BeanDefinitionReader</code>_should be created_@return a <code>BeanDefinitionReader</code> for the supplied context_@see #loadContext(String...)_@see #loadBeanDefinitions_@see BeanDefinitionReader_@since 2.5;protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;factory,method,for,creating,a,new,link,bean,definition,reader,for,loading,bean,definitions,into,the,supplied,link,generic,application,context,context,param,context,the,context,for,which,the,code,bean,definition,reader,code,should,be,created,return,a,code,bean,definition,reader,code,for,the,supplied,context,see,load,context,string,see,load,bean,definitions,see,bean,definition,reader,since,2,5;protected,abstract,bean,definition,reader,create,bean,definition,reader,generic,application,context,context
AbstractGenericContextLoader -> protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;1349648958;Factory method for creating a new {@link BeanDefinitionReader} for loading_bean definitions into the supplied {@link GenericApplicationContext context}.__@param context the context for which the <code>BeanDefinitionReader</code>_should be created_@return a <code>BeanDefinitionReader</code> for the supplied context_@see #loadContext(String...)_@see #loadBeanDefinitions_@see BeanDefinitionReader_@since 2.5;protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;factory,method,for,creating,a,new,link,bean,definition,reader,for,loading,bean,definitions,into,the,supplied,link,generic,application,context,context,param,context,the,context,for,which,the,code,bean,definition,reader,code,should,be,created,return,a,code,bean,definition,reader,code,for,the,supplied,context,see,load,context,string,see,load,bean,definitions,see,bean,definition,reader,since,2,5;protected,abstract,bean,definition,reader,create,bean,definition,reader,generic,application,context,context
AbstractGenericContextLoader -> protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;1355313310;Factory method for creating a new {@link BeanDefinitionReader} for loading_bean definitions into the supplied {@link GenericApplicationContext context}.__@param context the context for which the <code>BeanDefinitionReader</code>_should be created_@return a <code>BeanDefinitionReader</code> for the supplied context_@see #loadContext(String...)_@see #loadBeanDefinitions_@see BeanDefinitionReader_@since 2.5;protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;factory,method,for,creating,a,new,link,bean,definition,reader,for,loading,bean,definitions,into,the,supplied,link,generic,application,context,context,param,context,the,context,for,which,the,code,bean,definition,reader,code,should,be,created,return,a,code,bean,definition,reader,code,for,the,supplied,context,see,load,context,string,see,load,bean,definitions,see,bean,definition,reader,since,2,5;protected,abstract,bean,definition,reader,create,bean,definition,reader,generic,application,context,context
AbstractGenericContextLoader -> protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;1356735495;Factory method for creating a new {@link BeanDefinitionReader} for loading_bean definitions into the supplied {@link GenericApplicationContext context}.__@param context the context for which the {@code BeanDefinitionReader}_should be created_@return a {@code BeanDefinitionReader} for the supplied context_@see #loadContext(String...)_@see #loadBeanDefinitions_@see BeanDefinitionReader_@since 2.5;protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;factory,method,for,creating,a,new,link,bean,definition,reader,for,loading,bean,definitions,into,the,supplied,link,generic,application,context,context,param,context,the,context,for,which,the,code,bean,definition,reader,should,be,created,return,a,code,bean,definition,reader,for,the,supplied,context,see,load,context,string,see,load,bean,definitions,see,bean,definition,reader,since,2,5;protected,abstract,bean,definition,reader,create,bean,definition,reader,generic,application,context,context
AbstractGenericContextLoader -> protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;1357119239;Factory method for creating a new {@link BeanDefinitionReader} for loading_bean definitions into the supplied {@link GenericApplicationContext context}.__@param context the context for which the {@code BeanDefinitionReader}_should be created_@return a {@code BeanDefinitionReader} for the supplied context_@see #loadContext(String...)_@see #loadBeanDefinitions_@see BeanDefinitionReader_@since 2.5;protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;factory,method,for,creating,a,new,link,bean,definition,reader,for,loading,bean,definitions,into,the,supplied,link,generic,application,context,context,param,context,the,context,for,which,the,code,bean,definition,reader,should,be,created,return,a,code,bean,definition,reader,for,the,supplied,context,see,load,context,string,see,load,bean,definitions,see,bean,definition,reader,since,2,5;protected,abstract,bean,definition,reader,create,bean,definition,reader,generic,application,context,context
AbstractGenericContextLoader -> protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;1363208506;Factory method for creating a new {@link BeanDefinitionReader} for loading_bean definitions into the supplied {@link GenericApplicationContext context}.__@param context the context for which the {@code BeanDefinitionReader}_should be created_@return a {@code BeanDefinitionReader} for the supplied context_@see #loadContext(String...)_@see #loadBeanDefinitions_@see BeanDefinitionReader_@since 2.5;protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;factory,method,for,creating,a,new,link,bean,definition,reader,for,loading,bean,definitions,into,the,supplied,link,generic,application,context,context,param,context,the,context,for,which,the,code,bean,definition,reader,should,be,created,return,a,code,bean,definition,reader,for,the,supplied,context,see,load,context,string,see,load,bean,definitions,see,bean,definition,reader,since,2,5;protected,abstract,bean,definition,reader,create,bean,definition,reader,generic,application,context,context
AbstractGenericContextLoader -> protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;1368482696;Factory method for creating a new {@link BeanDefinitionReader} for loading_bean definitions into the supplied {@link GenericApplicationContext context}.__@param context the context for which the {@code BeanDefinitionReader}_should be created_@return a {@code BeanDefinitionReader} for the supplied context_@see #loadContext(String...)_@see #loadBeanDefinitions_@see BeanDefinitionReader_@since 2.5;protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;factory,method,for,creating,a,new,link,bean,definition,reader,for,loading,bean,definitions,into,the,supplied,link,generic,application,context,context,param,context,the,context,for,which,the,code,bean,definition,reader,should,be,created,return,a,code,bean,definition,reader,for,the,supplied,context,see,load,context,string,see,load,bean,definitions,see,bean,definition,reader,since,2,5;protected,abstract,bean,definition,reader,create,bean,definition,reader,generic,application,context,context
AbstractGenericContextLoader -> protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;1396374528;Factory method for creating a new {@link BeanDefinitionReader} for loading_bean definitions into the supplied {@link GenericApplicationContext context}.__@param context the context for which the {@code BeanDefinitionReader}_should be created_@return a {@code BeanDefinitionReader} for the supplied context_@see #loadContext(String...)_@see #loadBeanDefinitions_@see BeanDefinitionReader_@since 2.5;protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;factory,method,for,creating,a,new,link,bean,definition,reader,for,loading,bean,definitions,into,the,supplied,link,generic,application,context,context,param,context,the,context,for,which,the,code,bean,definition,reader,should,be,created,return,a,code,bean,definition,reader,for,the,supplied,context,see,load,context,string,see,load,bean,definitions,see,bean,definition,reader,since,2,5;protected,abstract,bean,definition,reader,create,bean,definition,reader,generic,application,context,context
AbstractGenericContextLoader -> protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;1457727806;Factory method for creating a new {@link BeanDefinitionReader} for loading_bean definitions into the supplied {@link GenericApplicationContext context}.__@param context the context for which the {@code BeanDefinitionReader}_should be created_@return a {@code BeanDefinitionReader} for the supplied context_@see #loadContext(String...)_@see #loadBeanDefinitions_@see BeanDefinitionReader_@since 2.5;protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;factory,method,for,creating,a,new,link,bean,definition,reader,for,loading,bean,definitions,into,the,supplied,link,generic,application,context,context,param,context,the,context,for,which,the,code,bean,definition,reader,should,be,created,return,a,code,bean,definition,reader,for,the,supplied,context,see,load,context,string,see,load,bean,definitions,see,bean,definition,reader,since,2,5;protected,abstract,bean,definition,reader,create,bean,definition,reader,generic,application,context,context
AbstractGenericContextLoader -> protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;1530174524;Factory method for creating a new {@link BeanDefinitionReader} for loading_bean definitions into the supplied {@link GenericApplicationContext context}.__@param context the context for which the {@code BeanDefinitionReader}_should be created_@return a {@code BeanDefinitionReader} for the supplied context_@since 2.5_@see #loadContext(String...)_@see #loadBeanDefinitions_@see BeanDefinitionReader;protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;factory,method,for,creating,a,new,link,bean,definition,reader,for,loading,bean,definitions,into,the,supplied,link,generic,application,context,context,param,context,the,context,for,which,the,code,bean,definition,reader,should,be,created,return,a,code,bean,definition,reader,for,the,supplied,context,since,2,5,see,load,context,string,see,load,bean,definitions,see,bean,definition,reader;protected,abstract,bean,definition,reader,create,bean,definition,reader,generic,application,context,context
AbstractGenericContextLoader -> protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;1549646187;Factory method for creating a new {@link BeanDefinitionReader} for loading_bean definitions into the supplied {@link GenericApplicationContext context}.__@param context the context for which the {@code BeanDefinitionReader}_should be created_@return a {@code BeanDefinitionReader} for the supplied context_@since 2.5_@see #loadContext(String...)_@see #loadBeanDefinitions_@see BeanDefinitionReader;protected abstract BeanDefinitionReader createBeanDefinitionReader(GenericApplicationContext context)_;factory,method,for,creating,a,new,link,bean,definition,reader,for,loading,bean,definitions,into,the,supplied,link,generic,application,context,context,param,context,the,context,for,which,the,code,bean,definition,reader,should,be,created,return,a,code,bean,definition,reader,for,the,supplied,context,since,2,5,see,load,context,string,see,load,bean,definitions,see,bean,definition,reader;protected,abstract,bean,definition,reader,create,bean,definition,reader,generic,application,context,context
AbstractGenericContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(String... locations) throws Exception;1356735495;Load a Spring ApplicationContext from the supplied {@code locations}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #createBeanDefinitionReader(GenericApplicationContext)} to create a_{@link BeanDefinitionReader} which is then used to populate the context_from the specified locations.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__<p><b>Note</b>: this method does not provide a means to set active bean definition_profiles for the loaded context. See {@link #loadContext(MergedContextConfiguration)}_and {@link AbstractContextLoader#prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)}_for an alternative.__@return a new application context_@see org.springframework.test.context.ContextLoader#loadContext_@see GenericApplicationContext_@see #loadContext(MergedContextConfiguration)_@since 2.5;@Override_	public final ConfigurableApplicationContext loadContext(String... locations) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for locations [%s].",_				StringUtils.arrayToCommaDelimitedString(locations)))__		}_		GenericApplicationContext context = new GenericApplicationContext()__		prepareContext(context)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		createBeanDefinitionReader(context).loadBeanDefinitions(locations)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,code,locations,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,calls,link,prepare,context,generic,application,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,create,bean,definition,reader,generic,application,context,to,create,a,link,bean,definition,reader,which,is,then,used,to,populate,the,context,from,the,specified,locations,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,p,b,note,b,this,method,does,not,provide,a,means,to,set,active,bean,definition,profiles,for,the,loaded,context,see,link,load,context,merged,context,configuration,and,link,abstract,context,loader,prepare,context,configurable,application,context,merged,context,configuration,for,an,alternative,return,a,new,application,context,see,org,springframework,test,context,context,loader,load,context,see,generic,application,context,see,load,context,merged,context,configuration,since,2,5;override,public,final,configurable,application,context,load,context,string,locations,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,locations,s,string,utils,array,to,comma,delimited,string,locations,generic,application,context,context,new,generic,application,context,prepare,context,context,customize,bean,factory,context,get,default,listable,bean,factory,create,bean,definition,reader,context,load,bean,definitions,locations,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(String... locations) throws Exception;1368482696;Load a Spring ApplicationContext from the supplied {@code locations}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #createBeanDefinitionReader(GenericApplicationContext)} to create a_{@link BeanDefinitionReader} which is then used to populate the context_from the specified locations.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__<p><b>Note</b>: this method does not provide a means to set active bean definition_profiles for the loaded context. See {@link #loadContext(MergedContextConfiguration)}_and {@link AbstractContextLoader#prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)}_for an alternative.__@return a new application context_@see org.springframework.test.context.ContextLoader#loadContext_@see GenericApplicationContext_@see #loadContext(MergedContextConfiguration)_@since 2.5;@Override_	public final ConfigurableApplicationContext loadContext(String... locations) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for locations [%s].",_				StringUtils.arrayToCommaDelimitedString(locations)))__		}_		GenericApplicationContext context = new GenericApplicationContext()__		prepareContext(context)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		createBeanDefinitionReader(context).loadBeanDefinitions(locations)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,code,locations,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,calls,link,prepare,context,generic,application,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,create,bean,definition,reader,generic,application,context,to,create,a,link,bean,definition,reader,which,is,then,used,to,populate,the,context,from,the,specified,locations,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,p,b,note,b,this,method,does,not,provide,a,means,to,set,active,bean,definition,profiles,for,the,loaded,context,see,link,load,context,merged,context,configuration,and,link,abstract,context,loader,prepare,context,configurable,application,context,merged,context,configuration,for,an,alternative,return,a,new,application,context,see,org,springframework,test,context,context,loader,load,context,see,generic,application,context,see,load,context,merged,context,configuration,since,2,5;override,public,final,configurable,application,context,load,context,string,locations,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,locations,s,string,utils,array,to,comma,delimited,string,locations,generic,application,context,context,new,generic,application,context,prepare,context,context,customize,bean,factory,context,get,default,listable,bean,factory,create,bean,definition,reader,context,load,bean,definitions,locations,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(String... locations) throws Exception;1396374528;Load a Spring ApplicationContext from the supplied {@code locations}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #createBeanDefinitionReader(GenericApplicationContext)} to create a_{@link BeanDefinitionReader} which is then used to populate the context_from the specified locations.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__<p><b>Note</b>: this method does not provide a means to set active bean definition_profiles for the loaded context. See {@link #loadContext(MergedContextConfiguration)}_and {@link AbstractContextLoader#prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)}_for an alternative.__@return a new application context_@see org.springframework.test.context.ContextLoader#loadContext_@see GenericApplicationContext_@see #loadContext(MergedContextConfiguration)_@since 2.5;@Override_	public final ConfigurableApplicationContext loadContext(String... locations) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for locations [%s].",_				StringUtils.arrayToCommaDelimitedString(locations)))__		}_		GenericApplicationContext context = new GenericApplicationContext()__		prepareContext(context)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		createBeanDefinitionReader(context).loadBeanDefinitions(locations)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,code,locations,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,calls,link,prepare,context,generic,application,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,create,bean,definition,reader,generic,application,context,to,create,a,link,bean,definition,reader,which,is,then,used,to,populate,the,context,from,the,specified,locations,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,p,b,note,b,this,method,does,not,provide,a,means,to,set,active,bean,definition,profiles,for,the,loaded,context,see,link,load,context,merged,context,configuration,and,link,abstract,context,loader,prepare,context,configurable,application,context,merged,context,configuration,for,an,alternative,return,a,new,application,context,see,org,springframework,test,context,context,loader,load,context,see,generic,application,context,see,load,context,merged,context,configuration,since,2,5;override,public,final,configurable,application,context,load,context,string,locations,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,locations,s,string,utils,array,to,comma,delimited,string,locations,generic,application,context,context,new,generic,application,context,prepare,context,context,customize,bean,factory,context,get,default,listable,bean,factory,create,bean,definition,reader,context,load,bean,definitions,locations,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(String... locations) throws Exception;1457727806;Load a Spring ApplicationContext from the supplied {@code locations}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #createBeanDefinitionReader(GenericApplicationContext)} to create a_{@link BeanDefinitionReader} which is then used to populate the context_from the specified locations.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__<p><b>Note</b>: this method does not provide a means to set active bean definition_profiles for the loaded context. See {@link #loadContext(MergedContextConfiguration)}_and {@link AbstractContextLoader#prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)}_for an alternative.__@return a new application context_@see org.springframework.test.context.ContextLoader#loadContext_@see GenericApplicationContext_@see #loadContext(MergedContextConfiguration)_@since 2.5;@Override_	public final ConfigurableApplicationContext loadContext(String... locations) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for locations [%s].",_				StringUtils.arrayToCommaDelimitedString(locations)))__		}_		GenericApplicationContext context = new GenericApplicationContext()__		prepareContext(context)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		createBeanDefinitionReader(context).loadBeanDefinitions(locations)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,code,locations,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,calls,link,prepare,context,generic,application,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,create,bean,definition,reader,generic,application,context,to,create,a,link,bean,definition,reader,which,is,then,used,to,populate,the,context,from,the,specified,locations,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,p,b,note,b,this,method,does,not,provide,a,means,to,set,active,bean,definition,profiles,for,the,loaded,context,see,link,load,context,merged,context,configuration,and,link,abstract,context,loader,prepare,context,configurable,application,context,merged,context,configuration,for,an,alternative,return,a,new,application,context,see,org,springframework,test,context,context,loader,load,context,see,generic,application,context,see,load,context,merged,context,configuration,since,2,5;override,public,final,configurable,application,context,load,context,string,locations,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,locations,s,string,utils,array,to,comma,delimited,string,locations,generic,application,context,context,new,generic,application,context,prepare,context,context,customize,bean,factory,context,get,default,listable,bean,factory,create,bean,definition,reader,context,load,bean,definitions,locations,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(String... locations) throws Exception;1530174524;Load a Spring ApplicationContext from the supplied {@code locations}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #createBeanDefinitionReader(GenericApplicationContext)} to create a_{@link BeanDefinitionReader} which is then used to populate the context_from the specified locations.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__<p><b>Note</b>: this method does not provide a means to set active bean definition_profiles for the loaded context. See {@link #loadContext(MergedContextConfiguration)}_and {@link AbstractContextLoader#prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)}_for an alternative.__@return a new application context_@see org.springframework.test.context.ContextLoader#loadContext_@see GenericApplicationContext_@see #loadContext(MergedContextConfiguration)_@since 2.5;@Override_	public final ConfigurableApplicationContext loadContext(String... locations) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for locations [%s].",_				StringUtils.arrayToCommaDelimitedString(locations)))__		}_		GenericApplicationContext context = new GenericApplicationContext()__		prepareContext(context)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		createBeanDefinitionReader(context).loadBeanDefinitions(locations)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,code,locations,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,calls,link,prepare,context,generic,application,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,create,bean,definition,reader,generic,application,context,to,create,a,link,bean,definition,reader,which,is,then,used,to,populate,the,context,from,the,specified,locations,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,p,b,note,b,this,method,does,not,provide,a,means,to,set,active,bean,definition,profiles,for,the,loaded,context,see,link,load,context,merged,context,configuration,and,link,abstract,context,loader,prepare,context,configurable,application,context,merged,context,configuration,for,an,alternative,return,a,new,application,context,see,org,springframework,test,context,context,loader,load,context,see,generic,application,context,see,load,context,merged,context,configuration,since,2,5;override,public,final,configurable,application,context,load,context,string,locations,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,locations,s,string,utils,array,to,comma,delimited,string,locations,generic,application,context,context,new,generic,application,context,prepare,context,context,customize,bean,factory,context,get,default,listable,bean,factory,create,bean,definition,reader,context,load,bean,definitions,locations,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(String... locations) throws Exception;1549646187;Load a Spring ApplicationContext from the supplied {@code locations}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #createBeanDefinitionReader(GenericApplicationContext)} to create a_{@link BeanDefinitionReader} which is then used to populate the context_from the specified locations.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__<p><b>Note</b>: this method does not provide a means to set active bean definition_profiles for the loaded context. See {@link #loadContext(MergedContextConfiguration)}_and {@link AbstractContextLoader#prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)}_for an alternative.__@return a new application context_@see org.springframework.test.context.ContextLoader#loadContext_@see GenericApplicationContext_@see #loadContext(MergedContextConfiguration)_@since 2.5;@Override_	public final ConfigurableApplicationContext loadContext(String... locations) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for locations [%s].",_				StringUtils.arrayToCommaDelimitedString(locations)))__		}_		GenericApplicationContext context = new GenericApplicationContext()__		prepareContext(context)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		createBeanDefinitionReader(context).loadBeanDefinitions(locations)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,code,locations,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,calls,link,prepare,context,generic,application,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,create,bean,definition,reader,generic,application,context,to,create,a,link,bean,definition,reader,which,is,then,used,to,populate,the,context,from,the,specified,locations,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,p,b,note,b,this,method,does,not,provide,a,means,to,set,active,bean,definition,profiles,for,the,loaded,context,see,link,load,context,merged,context,configuration,and,link,abstract,context,loader,prepare,context,configurable,application,context,merged,context,configuration,for,an,alternative,return,a,new,application,context,see,org,springframework,test,context,context,loader,load,context,see,generic,application,context,see,load,context,merged,context,configuration,since,2,5;override,public,final,configurable,application,context,load,context,string,locations,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,locations,s,string,utils,array,to,comma,delimited,string,locations,generic,application,context,context,new,generic,application,context,prepare,context,context,customize,bean,factory,context,get,default,listable,bean,factory,create,bean,definition,reader,context,load,bean,definitions,locations,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> protected void customizeContext(GenericApplicationContext context);1328020251;Customize the {@link GenericApplicationContext} created by this_<code>ContextLoader</code> <i>after</i> bean definitions have been_loaded into the context but <i>before</i> the context is refreshed._<p>The default implementation is empty but can be overridden in subclasses_to customize the application context._@param context the newly created application context_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@since 2.5;protected void customizeContext(GenericApplicationContext context) {_	};customize,the,link,generic,application,context,created,by,this,code,context,loader,code,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,application,context,param,context,the,newly,created,application,context,see,load,context,merged,context,configuration,see,load,context,string,since,2,5;protected,void,customize,context,generic,application,context,context
AbstractGenericContextLoader -> protected void customizeContext(GenericApplicationContext context);1335774711;Customize the {@link GenericApplicationContext} created by this_<code>ContextLoader</code> <i>after</i> bean definitions have been_loaded into the context but <i>before</i> the context is refreshed._<p>The default implementation is empty but can be overridden in subclasses_to customize the application context._@param context the newly created application context_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@since 2.5;protected void customizeContext(GenericApplicationContext context) {_	};customize,the,link,generic,application,context,created,by,this,code,context,loader,code,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,application,context,param,context,the,newly,created,application,context,see,load,context,merged,context,configuration,see,load,context,string,since,2,5;protected,void,customize,context,generic,application,context,context
AbstractGenericContextLoader -> protected void customizeContext(GenericApplicationContext context);1337278668;Customize the {@link GenericApplicationContext} created by this_<code>ContextLoader</code> <i>after</i> bean definitions have been_loaded into the context but <i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the application context.__@param context the newly created application context_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@since 2.5;protected void customizeContext(GenericApplicationContext context) {_	};customize,the,link,generic,application,context,created,by,this,code,context,loader,code,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,application,context,param,context,the,newly,created,application,context,see,load,context,merged,context,configuration,see,load,context,string,since,2,5;protected,void,customize,context,generic,application,context,context
AbstractGenericContextLoader -> protected void customizeContext(GenericApplicationContext context);1345469597;Customize the {@link GenericApplicationContext} created by this_<code>ContextLoader</code> <i>after</i> bean definitions have been_loaded into the context but <i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the application context.__@param context the newly created application context_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@since 2.5;protected void customizeContext(GenericApplicationContext context) {_	};customize,the,link,generic,application,context,created,by,this,code,context,loader,code,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,application,context,param,context,the,newly,created,application,context,see,load,context,merged,context,configuration,see,load,context,string,since,2,5;protected,void,customize,context,generic,application,context,context
AbstractGenericContextLoader -> protected void customizeContext(GenericApplicationContext context);1349648958;Customize the {@link GenericApplicationContext} created by this_<code>ContextLoader</code> <i>after</i> bean definitions have been_loaded into the context but <i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the application context.__@param context the newly created application context_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@since 2.5;protected void customizeContext(GenericApplicationContext context) {_	};customize,the,link,generic,application,context,created,by,this,code,context,loader,code,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,application,context,param,context,the,newly,created,application,context,see,load,context,merged,context,configuration,see,load,context,string,since,2,5;protected,void,customize,context,generic,application,context,context
AbstractGenericContextLoader -> protected void customizeContext(GenericApplicationContext context);1355313310;Customize the {@link GenericApplicationContext} created by this_<code>ContextLoader</code> <i>after</i> bean definitions have been_loaded into the context but <i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the application context.__@param context the newly created application context_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@since 2.5;protected void customizeContext(GenericApplicationContext context) {_	};customize,the,link,generic,application,context,created,by,this,code,context,loader,code,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,application,context,param,context,the,newly,created,application,context,see,load,context,merged,context,configuration,see,load,context,string,since,2,5;protected,void,customize,context,generic,application,context,context
AbstractGenericContextLoader -> protected void customizeContext(GenericApplicationContext context);1356735495;Customize the {@link GenericApplicationContext} created by this_{@code ContextLoader} <i>after</i> bean definitions have been_loaded into the context but <i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the application context.__@param context the newly created application context_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@since 2.5;protected void customizeContext(GenericApplicationContext context) {_	};customize,the,link,generic,application,context,created,by,this,code,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,application,context,param,context,the,newly,created,application,context,see,load,context,merged,context,configuration,see,load,context,string,since,2,5;protected,void,customize,context,generic,application,context,context
AbstractGenericContextLoader -> protected void customizeContext(GenericApplicationContext context);1357119239;Customize the {@link GenericApplicationContext} created by this_{@code ContextLoader} <i>after</i> bean definitions have been_loaded into the context but <i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the application context.__@param context the newly created application context_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@since 2.5;protected void customizeContext(GenericApplicationContext context) {_	};customize,the,link,generic,application,context,created,by,this,code,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,application,context,param,context,the,newly,created,application,context,see,load,context,merged,context,configuration,see,load,context,string,since,2,5;protected,void,customize,context,generic,application,context,context
AbstractGenericContextLoader -> protected void customizeContext(GenericApplicationContext context);1363208506;Customize the {@link GenericApplicationContext} created by this_{@code ContextLoader} <i>after</i> bean definitions have been_loaded into the context but <i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the application context.__@param context the newly created application context_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@since 2.5;protected void customizeContext(GenericApplicationContext context) {_	};customize,the,link,generic,application,context,created,by,this,code,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,application,context,param,context,the,newly,created,application,context,see,load,context,merged,context,configuration,see,load,context,string,since,2,5;protected,void,customize,context,generic,application,context,context
AbstractGenericContextLoader -> protected void customizeContext(GenericApplicationContext context);1368482696;Customize the {@link GenericApplicationContext} created by this_{@code ContextLoader} <i>after</i> bean definitions have been_loaded into the context but <i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the application context.__@param context the newly created application context_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@since 2.5;protected void customizeContext(GenericApplicationContext context) {_	};customize,the,link,generic,application,context,created,by,this,code,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,application,context,param,context,the,newly,created,application,context,see,load,context,merged,context,configuration,see,load,context,string,since,2,5;protected,void,customize,context,generic,application,context,context
AbstractGenericContextLoader -> protected void customizeContext(GenericApplicationContext context);1396374528;Customize the {@link GenericApplicationContext} created by this_{@code ContextLoader} <i>after</i> bean definitions have been_loaded into the context but <i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the application context.__@param context the newly created application context_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@since 2.5;protected void customizeContext(GenericApplicationContext context) {_	};customize,the,link,generic,application,context,created,by,this,code,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,application,context,param,context,the,newly,created,application,context,see,load,context,merged,context,configuration,see,load,context,string,since,2,5;protected,void,customize,context,generic,application,context,context
AbstractGenericContextLoader -> protected void customizeContext(GenericApplicationContext context);1457727806;Customize the {@link GenericApplicationContext} created by this_{@code ContextLoader} <i>after</i> bean definitions have been_loaded into the context but <i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the application context.__@param context the newly created application context_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see #customizeContext(ConfigurableApplicationContext, MergedContextConfiguration)_@since 2.5;protected void customizeContext(GenericApplicationContext context) {_	};customize,the,link,generic,application,context,created,by,this,code,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,application,context,param,context,the,newly,created,application,context,see,load,context,merged,context,configuration,see,load,context,string,see,customize,context,configurable,application,context,merged,context,configuration,since,2,5;protected,void,customize,context,generic,application,context,context
AbstractGenericContextLoader -> protected void customizeContext(GenericApplicationContext context);1530174524;Customize the {@link GenericApplicationContext} created by this_{@code ContextLoader} <i>after</i> bean definitions have been_loaded into the context but <i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the application context.__@param context the newly created application context_@since 2.5_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see #customizeContext(ConfigurableApplicationContext, MergedContextConfiguration);protected void customizeContext(GenericApplicationContext context) {_	};customize,the,link,generic,application,context,created,by,this,code,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,application,context,param,context,the,newly,created,application,context,since,2,5,see,load,context,merged,context,configuration,see,load,context,string,see,customize,context,configurable,application,context,merged,context,configuration;protected,void,customize,context,generic,application,context,context
AbstractGenericContextLoader -> protected void customizeContext(GenericApplicationContext context);1549646187;Customize the {@link GenericApplicationContext} created by this_{@code ContextLoader} <i>after</i> bean definitions have been_loaded into the context but <i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the application context.__@param context the newly created application context_@since 2.5_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see #customizeContext(ConfigurableApplicationContext, MergedContextConfiguration);protected void customizeContext(GenericApplicationContext context) {_	};customize,the,link,generic,application,context,created,by,this,code,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,application,context,param,context,the,newly,created,application,context,since,2,5,see,load,context,merged,context,configuration,see,load,context,string,see,customize,context,configurable,application,context,merged,context,configuration;protected,void,customize,context,generic,application,context,context
AbstractGenericContextLoader -> public final ConfigurableApplicationContext loadContext(String... locations) throws Exception;1328020251;Load a Spring ApplicationContext from the supplied <code>locations</code>._<p>Implementation details:_<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Calls {@link #prepareContext()} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory()} to allow for customizing the_context's <code>DefaultListableBeanFactory</code>.</li>_<li>Delegates to {@link #createBeanDefinitionReader()} to create a_{@link BeanDefinitionReader} which is then used to populate the context_from the specified config locations.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext()} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>_<p><b>Note</b>: this method does not provide a means to set active bean definition_profiles for the loaded context. See {@link #loadContext(MergedContextConfiguration)}_for an alternative._@return a new application context_@see org.springframework.test.context.ContextLoader#loadContext_@see GenericApplicationContext_@see #loadContext(MergedContextConfiguration)_@since 2.5;public final ConfigurableApplicationContext loadContext(String... locations) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for locations [%s].",_				StringUtils.arrayToCommaDelimitedString(locations)))__		}_		GenericApplicationContext context = new GenericApplicationContext()__		prepareContext(context)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		createBeanDefinitionReader(context).loadBeanDefinitions(locations)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,code,locations,code,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,calls,link,prepare,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,code,li,li,delegates,to,link,create,bean,definition,reader,to,create,a,link,bean,definition,reader,which,is,then,used,to,populate,the,context,from,the,specified,config,locations,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,p,b,note,b,this,method,does,not,provide,a,means,to,set,active,bean,definition,profiles,for,the,loaded,context,see,link,load,context,merged,context,configuration,for,an,alternative,return,a,new,application,context,see,org,springframework,test,context,context,loader,load,context,see,generic,application,context,see,load,context,merged,context,configuration,since,2,5;public,final,configurable,application,context,load,context,string,locations,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,locations,s,string,utils,array,to,comma,delimited,string,locations,generic,application,context,context,new,generic,application,context,prepare,context,context,customize,bean,factory,context,get,default,listable,bean,factory,create,bean,definition,reader,context,load,bean,definitions,locations,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> public final ConfigurableApplicationContext loadContext(String... locations) throws Exception;1335774711;Load a Spring ApplicationContext from the supplied <code>locations</code>._<p>Implementation details:_<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's <code>DefaultListableBeanFactory</code>.</li>_<li>Delegates to {@link #createBeanDefinitionReader(GenericApplicationContext)} to create a_{@link BeanDefinitionReader} which is then used to populate the context_from the specified config locations.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>_<p><b>Note</b>: this method does not provide a means to set active bean definition_profiles for the loaded context. See {@link #loadContext(MergedContextConfiguration)}_for an alternative._@return a new application context_@see org.springframework.test.context.ContextLoader#loadContext_@see GenericApplicationContext_@see #loadContext(MergedContextConfiguration)_@since 2.5;public final ConfigurableApplicationContext loadContext(String... locations) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for locations [%s].",_				StringUtils.arrayToCommaDelimitedString(locations)))__		}_		GenericApplicationContext context = new GenericApplicationContext()__		prepareContext(context)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		createBeanDefinitionReader(context).loadBeanDefinitions(locations)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,code,locations,code,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,calls,link,prepare,context,generic,application,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,code,li,li,delegates,to,link,create,bean,definition,reader,generic,application,context,to,create,a,link,bean,definition,reader,which,is,then,used,to,populate,the,context,from,the,specified,config,locations,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,p,b,note,b,this,method,does,not,provide,a,means,to,set,active,bean,definition,profiles,for,the,loaded,context,see,link,load,context,merged,context,configuration,for,an,alternative,return,a,new,application,context,see,org,springframework,test,context,context,loader,load,context,see,generic,application,context,see,load,context,merged,context,configuration,since,2,5;public,final,configurable,application,context,load,context,string,locations,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,locations,s,string,utils,array,to,comma,delimited,string,locations,generic,application,context,context,new,generic,application,context,prepare,context,context,customize,bean,factory,context,get,default,listable,bean,factory,create,bean,definition,reader,context,load,bean,definitions,locations,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> public final ConfigurableApplicationContext loadContext(String... locations) throws Exception;1337278668;Load a Spring ApplicationContext from the supplied <code>locations</code>.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's <code>DefaultListableBeanFactory</code>.</li>_<li>Delegates to {@link #createBeanDefinitionReader(GenericApplicationContext)} to create a_{@link BeanDefinitionReader} which is then used to populate the context_from the specified locations.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__<p><b>Note</b>: this method does not provide a means to set active bean definition_profiles for the loaded context. See {@link #loadContext(MergedContextConfiguration)}_for an alternative.__@return a new application context_@see org.springframework.test.context.ContextLoader#loadContext_@see GenericApplicationContext_@see #loadContext(MergedContextConfiguration)_@since 2.5;public final ConfigurableApplicationContext loadContext(String... locations) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for locations [%s].",_				StringUtils.arrayToCommaDelimitedString(locations)))__		}_		GenericApplicationContext context = new GenericApplicationContext()__		prepareContext(context)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		createBeanDefinitionReader(context).loadBeanDefinitions(locations)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,code,locations,code,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,calls,link,prepare,context,generic,application,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,code,li,li,delegates,to,link,create,bean,definition,reader,generic,application,context,to,create,a,link,bean,definition,reader,which,is,then,used,to,populate,the,context,from,the,specified,locations,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,p,b,note,b,this,method,does,not,provide,a,means,to,set,active,bean,definition,profiles,for,the,loaded,context,see,link,load,context,merged,context,configuration,for,an,alternative,return,a,new,application,context,see,org,springframework,test,context,context,loader,load,context,see,generic,application,context,see,load,context,merged,context,configuration,since,2,5;public,final,configurable,application,context,load,context,string,locations,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,locations,s,string,utils,array,to,comma,delimited,string,locations,generic,application,context,context,new,generic,application,context,prepare,context,context,customize,bean,factory,context,get,default,listable,bean,factory,create,bean,definition,reader,context,load,bean,definitions,locations,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> public final ConfigurableApplicationContext loadContext(String... locations) throws Exception;1345469597;Load a Spring ApplicationContext from the supplied <code>locations</code>.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's <code>DefaultListableBeanFactory</code>.</li>_<li>Delegates to {@link #createBeanDefinitionReader(GenericApplicationContext)} to create a_{@link BeanDefinitionReader} which is then used to populate the context_from the specified locations.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__<p><b>Note</b>: this method does not provide a means to set active bean definition_profiles for the loaded context. See {@link #loadContext(MergedContextConfiguration)}_and {@link #prepareContext(GenericApplicationContext, MergedContextConfiguration)}_for an alternative.__@return a new application context_@see org.springframework.test.context.ContextLoader#loadContext_@see GenericApplicationContext_@see #loadContext(MergedContextConfiguration)_@since 2.5;public final ConfigurableApplicationContext loadContext(String... locations) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for locations [%s].",_				StringUtils.arrayToCommaDelimitedString(locations)))__		}_		GenericApplicationContext context = new GenericApplicationContext()__		prepareContext(context)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		createBeanDefinitionReader(context).loadBeanDefinitions(locations)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,code,locations,code,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,calls,link,prepare,context,generic,application,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,code,li,li,delegates,to,link,create,bean,definition,reader,generic,application,context,to,create,a,link,bean,definition,reader,which,is,then,used,to,populate,the,context,from,the,specified,locations,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,p,b,note,b,this,method,does,not,provide,a,means,to,set,active,bean,definition,profiles,for,the,loaded,context,see,link,load,context,merged,context,configuration,and,link,prepare,context,generic,application,context,merged,context,configuration,for,an,alternative,return,a,new,application,context,see,org,springframework,test,context,context,loader,load,context,see,generic,application,context,see,load,context,merged,context,configuration,since,2,5;public,final,configurable,application,context,load,context,string,locations,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,locations,s,string,utils,array,to,comma,delimited,string,locations,generic,application,context,context,new,generic,application,context,prepare,context,context,customize,bean,factory,context,get,default,listable,bean,factory,create,bean,definition,reader,context,load,bean,definitions,locations,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> public final ConfigurableApplicationContext loadContext(String... locations) throws Exception;1349648958;Load a Spring ApplicationContext from the supplied <code>locations</code>.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's <code>DefaultListableBeanFactory</code>.</li>_<li>Delegates to {@link #createBeanDefinitionReader(GenericApplicationContext)} to create a_{@link BeanDefinitionReader} which is then used to populate the context_from the specified locations.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__<p><b>Note</b>: this method does not provide a means to set active bean definition_profiles for the loaded context. See {@link #loadContext(MergedContextConfiguration)}_and {@link #prepareContext(GenericApplicationContext, MergedContextConfiguration)}_for an alternative.__@return a new application context_@see org.springframework.test.context.ContextLoader#loadContext_@see GenericApplicationContext_@see #loadContext(MergedContextConfiguration)_@since 2.5;public final ConfigurableApplicationContext loadContext(String... locations) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for locations [%s].",_				StringUtils.arrayToCommaDelimitedString(locations)))__		}_		GenericApplicationContext context = new GenericApplicationContext()__		prepareContext(context)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		createBeanDefinitionReader(context).loadBeanDefinitions(locations)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,code,locations,code,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,calls,link,prepare,context,generic,application,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,code,li,li,delegates,to,link,create,bean,definition,reader,generic,application,context,to,create,a,link,bean,definition,reader,which,is,then,used,to,populate,the,context,from,the,specified,locations,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,p,b,note,b,this,method,does,not,provide,a,means,to,set,active,bean,definition,profiles,for,the,loaded,context,see,link,load,context,merged,context,configuration,and,link,prepare,context,generic,application,context,merged,context,configuration,for,an,alternative,return,a,new,application,context,see,org,springframework,test,context,context,loader,load,context,see,generic,application,context,see,load,context,merged,context,configuration,since,2,5;public,final,configurable,application,context,load,context,string,locations,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,locations,s,string,utils,array,to,comma,delimited,string,locations,generic,application,context,context,new,generic,application,context,prepare,context,context,customize,bean,factory,context,get,default,listable,bean,factory,create,bean,definition,reader,context,load,bean,definitions,locations,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> public final ConfigurableApplicationContext loadContext(String... locations) throws Exception;1355313310;Load a Spring ApplicationContext from the supplied <code>locations</code>.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's <code>DefaultListableBeanFactory</code>.</li>_<li>Delegates to {@link #createBeanDefinitionReader(GenericApplicationContext)} to create a_{@link BeanDefinitionReader} which is then used to populate the context_from the specified locations.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__<p><b>Note</b>: this method does not provide a means to set active bean definition_profiles for the loaded context. See {@link #loadContext(MergedContextConfiguration)}_and {@link AbstractContextLoader#prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)}_for an alternative.__@return a new application context_@see org.springframework.test.context.ContextLoader#loadContext_@see GenericApplicationContext_@see #loadContext(MergedContextConfiguration)_@since 2.5;public final ConfigurableApplicationContext loadContext(String... locations) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for locations [%s].",_				StringUtils.arrayToCommaDelimitedString(locations)))__		}_		GenericApplicationContext context = new GenericApplicationContext()__		prepareContext(context)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		createBeanDefinitionReader(context).loadBeanDefinitions(locations)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,code,locations,code,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,calls,link,prepare,context,generic,application,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,code,li,li,delegates,to,link,create,bean,definition,reader,generic,application,context,to,create,a,link,bean,definition,reader,which,is,then,used,to,populate,the,context,from,the,specified,locations,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,p,b,note,b,this,method,does,not,provide,a,means,to,set,active,bean,definition,profiles,for,the,loaded,context,see,link,load,context,merged,context,configuration,and,link,abstract,context,loader,prepare,context,configurable,application,context,merged,context,configuration,for,an,alternative,return,a,new,application,context,see,org,springframework,test,context,context,loader,load,context,see,generic,application,context,see,load,context,merged,context,configuration,since,2,5;public,final,configurable,application,context,load,context,string,locations,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,locations,s,string,utils,array,to,comma,delimited,string,locations,generic,application,context,context,new,generic,application,context,prepare,context,context,customize,bean,factory,context,get,default,listable,bean,factory,create,bean,definition,reader,context,load,bean,definitions,locations,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> public final ConfigurableApplicationContext loadContext(String... locations) throws Exception;1357119239;Load a Spring ApplicationContext from the supplied {@code locations}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #createBeanDefinitionReader(GenericApplicationContext)} to create a_{@link BeanDefinitionReader} which is then used to populate the context_from the specified locations.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__<p><b>Note</b>: this method does not provide a means to set active bean definition_profiles for the loaded context. See {@link #loadContext(MergedContextConfiguration)}_and {@link AbstractContextLoader#prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)}_for an alternative.__@return a new application context_@see org.springframework.test.context.ContextLoader#loadContext_@see GenericApplicationContext_@see #loadContext(MergedContextConfiguration)_@since 2.5;public final ConfigurableApplicationContext loadContext(String... locations) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for locations [%s].",_				StringUtils.arrayToCommaDelimitedString(locations)))__		}_		GenericApplicationContext context = new GenericApplicationContext()__		prepareContext(context)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		createBeanDefinitionReader(context).loadBeanDefinitions(locations)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,code,locations,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,calls,link,prepare,context,generic,application,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,create,bean,definition,reader,generic,application,context,to,create,a,link,bean,definition,reader,which,is,then,used,to,populate,the,context,from,the,specified,locations,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,p,b,note,b,this,method,does,not,provide,a,means,to,set,active,bean,definition,profiles,for,the,loaded,context,see,link,load,context,merged,context,configuration,and,link,abstract,context,loader,prepare,context,configurable,application,context,merged,context,configuration,for,an,alternative,return,a,new,application,context,see,org,springframework,test,context,context,loader,load,context,see,generic,application,context,see,load,context,merged,context,configuration,since,2,5;public,final,configurable,application,context,load,context,string,locations,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,locations,s,string,utils,array,to,comma,delimited,string,locations,generic,application,context,context,new,generic,application,context,prepare,context,context,customize,bean,factory,context,get,default,listable,bean,factory,create,bean,definition,reader,context,load,bean,definitions,locations,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> public final ConfigurableApplicationContext loadContext(String... locations) throws Exception;1363208506;Load a Spring ApplicationContext from the supplied {@code locations}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericApplicationContext} instance.</li>_<li>Calls {@link #prepareContext(GenericApplicationContext)} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory(DefaultListableBeanFactory)} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #createBeanDefinitionReader(GenericApplicationContext)} to create a_{@link BeanDefinitionReader} which is then used to populate the context_from the specified locations.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@link AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext(GenericApplicationContext)} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__<p><b>Note</b>: this method does not provide a means to set active bean definition_profiles for the loaded context. See {@link #loadContext(MergedContextConfiguration)}_and {@link AbstractContextLoader#prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)}_for an alternative.__@return a new application context_@see org.springframework.test.context.ContextLoader#loadContext_@see GenericApplicationContext_@see #loadContext(MergedContextConfiguration)_@since 2.5;public final ConfigurableApplicationContext loadContext(String... locations) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading ApplicationContext for locations [%s].",_				StringUtils.arrayToCommaDelimitedString(locations)))__		}_		GenericApplicationContext context = new GenericApplicationContext()__		prepareContext(context)__		customizeBeanFactory(context.getDefaultListableBeanFactory())__		createBeanDefinitionReader(context).loadBeanDefinitions(locations)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,application,context,from,the,supplied,code,locations,p,implementation,details,ul,li,creates,a,link,generic,application,context,instance,li,li,calls,link,prepare,context,generic,application,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,default,listable,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,create,bean,definition,reader,generic,application,context,to,create,a,link,bean,definition,reader,which,is,then,used,to,populate,the,context,from,the,specified,locations,li,li,delegates,to,link,annotation,config,utils,for,link,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,generic,application,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,p,b,note,b,this,method,does,not,provide,a,means,to,set,active,bean,definition,profiles,for,the,loaded,context,see,link,load,context,merged,context,configuration,and,link,abstract,context,loader,prepare,context,configurable,application,context,merged,context,configuration,for,an,alternative,return,a,new,application,context,see,org,springframework,test,context,context,loader,load,context,see,generic,application,context,see,load,context,merged,context,configuration,since,2,5;public,final,configurable,application,context,load,context,string,locations,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,loading,application,context,for,locations,s,string,utils,array,to,comma,delimited,string,locations,generic,application,context,context,new,generic,application,context,prepare,context,context,customize,bean,factory,context,get,default,listable,bean,factory,create,bean,definition,reader,context,load,bean,definitions,locations,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericContextLoader -> protected void prepareContext(GenericApplicationContext context);1328020251;Prepare the {@link GenericApplicationContext} created by this <code>ContextLoader</code>._Called <i>before</i> bean definitions are read._<p>The default implementation is empty. Can be overridden in subclasses to_customize <code>GenericApplicationContext</code>'s standard settings._@param context the context that should be prepared_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see GenericApplicationContext#setAllowBeanDefinitionOverriding_@see GenericApplicationContext#setResourceLoader_@see GenericApplicationContext#setId_@since 2.5;protected void prepareContext(GenericApplicationContext context) {_	};prepare,the,link,generic,application,context,created,by,this,code,context,loader,code,called,i,before,i,bean,definitions,are,read,p,the,default,implementation,is,empty,can,be,overridden,in,subclasses,to,customize,code,generic,application,context,code,s,standard,settings,param,context,the,context,that,should,be,prepared,see,load,context,merged,context,configuration,see,load,context,string,see,generic,application,context,set,allow,bean,definition,overriding,see,generic,application,context,set,resource,loader,see,generic,application,context,set,id,since,2,5;protected,void,prepare,context,generic,application,context,context
AbstractGenericContextLoader -> protected void prepareContext(GenericApplicationContext context);1335774711;Prepare the {@link GenericApplicationContext} created by this <code>ContextLoader</code>._Called <i>before</i> bean definitions are read._<p>The default implementation is empty. Can be overridden in subclasses to_customize <code>GenericApplicationContext</code>'s standard settings._@param context the context that should be prepared_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see GenericApplicationContext#setAllowBeanDefinitionOverriding_@see GenericApplicationContext#setResourceLoader_@see GenericApplicationContext#setId_@since 2.5;protected void prepareContext(GenericApplicationContext context) {_	};prepare,the,link,generic,application,context,created,by,this,code,context,loader,code,called,i,before,i,bean,definitions,are,read,p,the,default,implementation,is,empty,can,be,overridden,in,subclasses,to,customize,code,generic,application,context,code,s,standard,settings,param,context,the,context,that,should,be,prepared,see,load,context,merged,context,configuration,see,load,context,string,see,generic,application,context,set,allow,bean,definition,overriding,see,generic,application,context,set,resource,loader,see,generic,application,context,set,id,since,2,5;protected,void,prepare,context,generic,application,context,context
AbstractGenericContextLoader -> protected void prepareContext(GenericApplicationContext context);1337278668;Prepare the {@link GenericApplicationContext} created by this <code>ContextLoader</code>._Called <i>before</i> bean definitions are read.__<p>The default implementation is empty. Can be overridden in subclasses to_customize <code>GenericApplicationContext</code>'s standard settings.__@param context the context that should be prepared_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see GenericApplicationContext#setAllowBeanDefinitionOverriding_@see GenericApplicationContext#setResourceLoader_@see GenericApplicationContext#setId_@since 2.5;protected void prepareContext(GenericApplicationContext context) {_	};prepare,the,link,generic,application,context,created,by,this,code,context,loader,code,called,i,before,i,bean,definitions,are,read,p,the,default,implementation,is,empty,can,be,overridden,in,subclasses,to,customize,code,generic,application,context,code,s,standard,settings,param,context,the,context,that,should,be,prepared,see,load,context,merged,context,configuration,see,load,context,string,see,generic,application,context,set,allow,bean,definition,overriding,see,generic,application,context,set,resource,loader,see,generic,application,context,set,id,since,2,5;protected,void,prepare,context,generic,application,context,context
AbstractGenericContextLoader -> protected void prepareContext(GenericApplicationContext context);1345469597;Prepare the {@link GenericApplicationContext} created by this <code>ContextLoader</code>._Called <i>before</i> bean definitions are read.__<p>The default implementation is empty. Can be overridden in subclasses to_customize <code>GenericApplicationContext</code>'s standard settings.__@param context the context that should be prepared_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see GenericApplicationContext#setAllowBeanDefinitionOverriding_@see GenericApplicationContext#setResourceLoader_@see GenericApplicationContext#setId_@since 2.5;protected void prepareContext(GenericApplicationContext context) {_	};prepare,the,link,generic,application,context,created,by,this,code,context,loader,code,called,i,before,i,bean,definitions,are,read,p,the,default,implementation,is,empty,can,be,overridden,in,subclasses,to,customize,code,generic,application,context,code,s,standard,settings,param,context,the,context,that,should,be,prepared,see,load,context,merged,context,configuration,see,load,context,string,see,generic,application,context,set,allow,bean,definition,overriding,see,generic,application,context,set,resource,loader,see,generic,application,context,set,id,since,2,5;protected,void,prepare,context,generic,application,context,context
AbstractGenericContextLoader -> protected void prepareContext(GenericApplicationContext context);1349648958;Prepare the {@link GenericApplicationContext} created by this <code>ContextLoader</code>._Called <i>before</i> bean definitions are read.__<p>The default implementation is empty. Can be overridden in subclasses to_customize <code>GenericApplicationContext</code>'s standard settings.__@param context the context that should be prepared_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see GenericApplicationContext#setAllowBeanDefinitionOverriding_@see GenericApplicationContext#setResourceLoader_@see GenericApplicationContext#setId_@since 2.5;protected void prepareContext(GenericApplicationContext context) {_	};prepare,the,link,generic,application,context,created,by,this,code,context,loader,code,called,i,before,i,bean,definitions,are,read,p,the,default,implementation,is,empty,can,be,overridden,in,subclasses,to,customize,code,generic,application,context,code,s,standard,settings,param,context,the,context,that,should,be,prepared,see,load,context,merged,context,configuration,see,load,context,string,see,generic,application,context,set,allow,bean,definition,overriding,see,generic,application,context,set,resource,loader,see,generic,application,context,set,id,since,2,5;protected,void,prepare,context,generic,application,context,context
AbstractGenericContextLoader -> protected void prepareContext(GenericApplicationContext context);1355313310;Prepare the {@link GenericApplicationContext} created by this <code>ContextLoader</code>._Called <i>before</i> bean definitions are read.__<p>The default implementation is empty. Can be overridden in subclasses to_customize <code>GenericApplicationContext</code>'s standard settings.__@param context the context that should be prepared_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see GenericApplicationContext#setAllowBeanDefinitionOverriding_@see GenericApplicationContext#setResourceLoader_@see GenericApplicationContext#setId_@since 2.5;protected void prepareContext(GenericApplicationContext context) {_	};prepare,the,link,generic,application,context,created,by,this,code,context,loader,code,called,i,before,i,bean,definitions,are,read,p,the,default,implementation,is,empty,can,be,overridden,in,subclasses,to,customize,code,generic,application,context,code,s,standard,settings,param,context,the,context,that,should,be,prepared,see,load,context,merged,context,configuration,see,load,context,string,see,generic,application,context,set,allow,bean,definition,overriding,see,generic,application,context,set,resource,loader,see,generic,application,context,set,id,since,2,5;protected,void,prepare,context,generic,application,context,context
AbstractGenericContextLoader -> protected void prepareContext(GenericApplicationContext context);1356735495;Prepare the {@link GenericApplicationContext} created by this {@code ContextLoader}._Called <i>before</i> bean definitions are read.__<p>The default implementation is empty. Can be overridden in subclasses to_customize {@code GenericApplicationContext}'s standard settings.__@param context the context that should be prepared_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see GenericApplicationContext#setAllowBeanDefinitionOverriding_@see GenericApplicationContext#setResourceLoader_@see GenericApplicationContext#setId_@since 2.5;protected void prepareContext(GenericApplicationContext context) {_	};prepare,the,link,generic,application,context,created,by,this,code,context,loader,called,i,before,i,bean,definitions,are,read,p,the,default,implementation,is,empty,can,be,overridden,in,subclasses,to,customize,code,generic,application,context,s,standard,settings,param,context,the,context,that,should,be,prepared,see,load,context,merged,context,configuration,see,load,context,string,see,generic,application,context,set,allow,bean,definition,overriding,see,generic,application,context,set,resource,loader,see,generic,application,context,set,id,since,2,5;protected,void,prepare,context,generic,application,context,context
AbstractGenericContextLoader -> protected void prepareContext(GenericApplicationContext context);1357119239;Prepare the {@link GenericApplicationContext} created by this {@code ContextLoader}._Called <i>before</i> bean definitions are read.__<p>The default implementation is empty. Can be overridden in subclasses to_customize {@code GenericApplicationContext}'s standard settings.__@param context the context that should be prepared_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see GenericApplicationContext#setAllowBeanDefinitionOverriding_@see GenericApplicationContext#setResourceLoader_@see GenericApplicationContext#setId_@since 2.5;protected void prepareContext(GenericApplicationContext context) {_	};prepare,the,link,generic,application,context,created,by,this,code,context,loader,called,i,before,i,bean,definitions,are,read,p,the,default,implementation,is,empty,can,be,overridden,in,subclasses,to,customize,code,generic,application,context,s,standard,settings,param,context,the,context,that,should,be,prepared,see,load,context,merged,context,configuration,see,load,context,string,see,generic,application,context,set,allow,bean,definition,overriding,see,generic,application,context,set,resource,loader,see,generic,application,context,set,id,since,2,5;protected,void,prepare,context,generic,application,context,context
AbstractGenericContextLoader -> protected void prepareContext(GenericApplicationContext context);1363208506;Prepare the {@link GenericApplicationContext} created by this {@code ContextLoader}._Called <i>before</i> bean definitions are read.__<p>The default implementation is empty. Can be overridden in subclasses to_customize {@code GenericApplicationContext}'s standard settings.__@param context the context that should be prepared_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see GenericApplicationContext#setAllowBeanDefinitionOverriding_@see GenericApplicationContext#setResourceLoader_@see GenericApplicationContext#setId_@since 2.5;protected void prepareContext(GenericApplicationContext context) {_	};prepare,the,link,generic,application,context,created,by,this,code,context,loader,called,i,before,i,bean,definitions,are,read,p,the,default,implementation,is,empty,can,be,overridden,in,subclasses,to,customize,code,generic,application,context,s,standard,settings,param,context,the,context,that,should,be,prepared,see,load,context,merged,context,configuration,see,load,context,string,see,generic,application,context,set,allow,bean,definition,overriding,see,generic,application,context,set,resource,loader,see,generic,application,context,set,id,since,2,5;protected,void,prepare,context,generic,application,context,context
AbstractGenericContextLoader -> protected void prepareContext(GenericApplicationContext context);1368482696;Prepare the {@link GenericApplicationContext} created by this {@code ContextLoader}._Called <i>before</i> bean definitions are read.__<p>The default implementation is empty. Can be overridden in subclasses to_customize {@code GenericApplicationContext}'s standard settings.__@param context the context that should be prepared_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see GenericApplicationContext#setAllowBeanDefinitionOverriding_@see GenericApplicationContext#setResourceLoader_@see GenericApplicationContext#setId_@since 2.5;protected void prepareContext(GenericApplicationContext context) {_	};prepare,the,link,generic,application,context,created,by,this,code,context,loader,called,i,before,i,bean,definitions,are,read,p,the,default,implementation,is,empty,can,be,overridden,in,subclasses,to,customize,code,generic,application,context,s,standard,settings,param,context,the,context,that,should,be,prepared,see,load,context,merged,context,configuration,see,load,context,string,see,generic,application,context,set,allow,bean,definition,overriding,see,generic,application,context,set,resource,loader,see,generic,application,context,set,id,since,2,5;protected,void,prepare,context,generic,application,context,context
AbstractGenericContextLoader -> protected void prepareContext(GenericApplicationContext context);1396374528;Prepare the {@link GenericApplicationContext} created by this {@code ContextLoader}._Called <i>before</i> bean definitions are read.__<p>The default implementation is empty. Can be overridden in subclasses to_customize {@code GenericApplicationContext}'s standard settings.__@param context the context that should be prepared_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see GenericApplicationContext#setAllowBeanDefinitionOverriding_@see GenericApplicationContext#setResourceLoader_@see GenericApplicationContext#setId_@since 2.5;protected void prepareContext(GenericApplicationContext context) {_	};prepare,the,link,generic,application,context,created,by,this,code,context,loader,called,i,before,i,bean,definitions,are,read,p,the,default,implementation,is,empty,can,be,overridden,in,subclasses,to,customize,code,generic,application,context,s,standard,settings,param,context,the,context,that,should,be,prepared,see,load,context,merged,context,configuration,see,load,context,string,see,generic,application,context,set,allow,bean,definition,overriding,see,generic,application,context,set,resource,loader,see,generic,application,context,set,id,since,2,5;protected,void,prepare,context,generic,application,context,context
AbstractGenericContextLoader -> protected void prepareContext(GenericApplicationContext context);1457727806;Prepare the {@link GenericApplicationContext} created by this {@code ContextLoader}._Called <i>before</i> bean definitions are read.__<p>The default implementation is empty. Can be overridden in subclasses to_customize {@code GenericApplicationContext}'s standard settings.__@param context the context that should be prepared_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see GenericApplicationContext#setAllowBeanDefinitionOverriding_@see GenericApplicationContext#setResourceLoader_@see GenericApplicationContext#setId_@see #prepareContext(ConfigurableApplicationContext, MergedContextConfiguration)_@since 2.5;protected void prepareContext(GenericApplicationContext context) {_	};prepare,the,link,generic,application,context,created,by,this,code,context,loader,called,i,before,i,bean,definitions,are,read,p,the,default,implementation,is,empty,can,be,overridden,in,subclasses,to,customize,code,generic,application,context,s,standard,settings,param,context,the,context,that,should,be,prepared,see,load,context,merged,context,configuration,see,load,context,string,see,generic,application,context,set,allow,bean,definition,overriding,see,generic,application,context,set,resource,loader,see,generic,application,context,set,id,see,prepare,context,configurable,application,context,merged,context,configuration,since,2,5;protected,void,prepare,context,generic,application,context,context
AbstractGenericContextLoader -> protected void prepareContext(GenericApplicationContext context);1530174524;Prepare the {@link GenericApplicationContext} created by this {@code ContextLoader}._Called <i>before</i> bean definitions are read.__<p>The default implementation is empty. Can be overridden in subclasses to_customize {@code GenericApplicationContext}'s standard settings.__@param context the context that should be prepared_@since 2.5_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see GenericApplicationContext#setAllowBeanDefinitionOverriding_@see GenericApplicationContext#setResourceLoader_@see GenericApplicationContext#setId_@see #prepareContext(ConfigurableApplicationContext, MergedContextConfiguration);protected void prepareContext(GenericApplicationContext context) {_	};prepare,the,link,generic,application,context,created,by,this,code,context,loader,called,i,before,i,bean,definitions,are,read,p,the,default,implementation,is,empty,can,be,overridden,in,subclasses,to,customize,code,generic,application,context,s,standard,settings,param,context,the,context,that,should,be,prepared,since,2,5,see,load,context,merged,context,configuration,see,load,context,string,see,generic,application,context,set,allow,bean,definition,overriding,see,generic,application,context,set,resource,loader,see,generic,application,context,set,id,see,prepare,context,configurable,application,context,merged,context,configuration;protected,void,prepare,context,generic,application,context,context
AbstractGenericContextLoader -> protected void prepareContext(GenericApplicationContext context);1549646187;Prepare the {@link GenericApplicationContext} created by this {@code ContextLoader}._Called <i>before</i> bean definitions are read.__<p>The default implementation is empty. Can be overridden in subclasses to_customize {@code GenericApplicationContext}'s standard settings.__@param context the context that should be prepared_@since 2.5_@see #loadContext(MergedContextConfiguration)_@see #loadContext(String...)_@see GenericApplicationContext#setAllowBeanDefinitionOverriding_@see GenericApplicationContext#setResourceLoader_@see GenericApplicationContext#setId_@see #prepareContext(ConfigurableApplicationContext, MergedContextConfiguration);protected void prepareContext(GenericApplicationContext context) {_	};prepare,the,link,generic,application,context,created,by,this,code,context,loader,called,i,before,i,bean,definitions,are,read,p,the,default,implementation,is,empty,can,be,overridden,in,subclasses,to,customize,code,generic,application,context,s,standard,settings,param,context,the,context,that,should,be,prepared,since,2,5,see,load,context,merged,context,configuration,see,load,context,string,see,generic,application,context,set,allow,bean,definition,overriding,see,generic,application,context,set,resource,loader,see,generic,application,context,set,id,see,prepare,context,configurable,application,context,merged,context,configuration;protected,void,prepare,context,generic,application,context,context
AbstractGenericContextLoader -> protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig);1328020251;Load bean definitions into the supplied {@link GenericApplicationContext context}_from the configuration locations or classes in the supplied_<code>MergedContextConfiguration</code>.</li>_<p>The default implementation delegates to the {@link BeanDefinitionReader}_returned by {@link #createBeanDefinitionReader()} to_{@link BeanDefinitionReader#loadBeanDefinitions(String) load} the_bean definitions._<p>Subclasses must provide an appropriate implementation of_{@link #createBeanDefinitionReader()}. Alternatively subclasses may_provide a <em>no-op</em> implementation of {@code createBeanDefinitionReader()}_and override this method to provide a custom strategy for loading or_registering bean definitions._@param context the context into which the bean definitions should be loaded_@param mergedConfig the merged context configuration_@see #loadContext(MergedContextConfiguration)_@since 3.1;protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig) {_		createBeanDefinitionReader(context).loadBeanDefinitions(mergedConfig.getLocations())__	};load,bean,definitions,into,the,supplied,link,generic,application,context,context,from,the,configuration,locations,or,classes,in,the,supplied,code,merged,context,configuration,code,li,p,the,default,implementation,delegates,to,the,link,bean,definition,reader,returned,by,link,create,bean,definition,reader,to,link,bean,definition,reader,load,bean,definitions,string,load,the,bean,definitions,p,subclasses,must,provide,an,appropriate,implementation,of,link,create,bean,definition,reader,alternatively,subclasses,may,provide,a,em,no,op,em,implementation,of,code,create,bean,definition,reader,and,override,this,method,to,provide,a,custom,strategy,for,loading,or,registering,bean,definitions,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,merged,config,the,merged,context,configuration,see,load,context,merged,context,configuration,since,3,1;protected,void,load,bean,definitions,generic,application,context,context,merged,context,configuration,merged,config,create,bean,definition,reader,context,load,bean,definitions,merged,config,get,locations
AbstractGenericContextLoader -> protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig);1335774711;Load bean definitions into the supplied {@link GenericApplicationContext context}_from the configuration locations or classes in the supplied_<code>MergedContextConfiguration</code>.</li>_<p>The default implementation delegates to the {@link BeanDefinitionReader}_returned by {@link #createBeanDefinitionReader(GenericApplicationContext)} to_{@link BeanDefinitionReader#loadBeanDefinitions(String) load} the_bean definitions._<p>Subclasses must provide an appropriate implementation of_{@link #createBeanDefinitionReader(GenericApplicationContext)}. Alternatively subclasses may_provide a <em>no-op</em> implementation of {@code createBeanDefinitionReader()}_and override this method to provide a custom strategy for loading or_registering bean definitions._@param context the context into which the bean definitions should be loaded_@param mergedConfig the merged context configuration_@see #loadContext(MergedContextConfiguration)_@since 3.1;protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig) {_		createBeanDefinitionReader(context).loadBeanDefinitions(mergedConfig.getLocations())__	};load,bean,definitions,into,the,supplied,link,generic,application,context,context,from,the,configuration,locations,or,classes,in,the,supplied,code,merged,context,configuration,code,li,p,the,default,implementation,delegates,to,the,link,bean,definition,reader,returned,by,link,create,bean,definition,reader,generic,application,context,to,link,bean,definition,reader,load,bean,definitions,string,load,the,bean,definitions,p,subclasses,must,provide,an,appropriate,implementation,of,link,create,bean,definition,reader,generic,application,context,alternatively,subclasses,may,provide,a,em,no,op,em,implementation,of,code,create,bean,definition,reader,and,override,this,method,to,provide,a,custom,strategy,for,loading,or,registering,bean,definitions,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,merged,config,the,merged,context,configuration,see,load,context,merged,context,configuration,since,3,1;protected,void,load,bean,definitions,generic,application,context,context,merged,context,configuration,merged,config,create,bean,definition,reader,context,load,bean,definitions,merged,config,get,locations
AbstractGenericContextLoader -> protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig);1337278668;Load bean definitions into the supplied {@link GenericApplicationContext context}_from the locations or classes in the supplied <code>MergedContextConfiguration</code>.__<p>The default implementation delegates to the {@link BeanDefinitionReader}_returned by {@link #createBeanDefinitionReader(GenericApplicationContext)} to_{@link BeanDefinitionReader#loadBeanDefinitions(String) load} the_bean definitions.__<p>Subclasses must provide an appropriate implementation of_{@link #createBeanDefinitionReader(GenericApplicationContext)}. Alternatively subclasses_may provide a <em>no-op</em> implementation of {@code createBeanDefinitionReader()}_and override this method to provide a custom strategy for loading or_registering bean definitions.__@param context the context into which the bean definitions should be loaded_@param mergedConfig the merged context configuration_@see #loadContext(MergedContextConfiguration)_@since 3.1;protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig) {_		createBeanDefinitionReader(context).loadBeanDefinitions(mergedConfig.getLocations())__	};load,bean,definitions,into,the,supplied,link,generic,application,context,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,code,p,the,default,implementation,delegates,to,the,link,bean,definition,reader,returned,by,link,create,bean,definition,reader,generic,application,context,to,link,bean,definition,reader,load,bean,definitions,string,load,the,bean,definitions,p,subclasses,must,provide,an,appropriate,implementation,of,link,create,bean,definition,reader,generic,application,context,alternatively,subclasses,may,provide,a,em,no,op,em,implementation,of,code,create,bean,definition,reader,and,override,this,method,to,provide,a,custom,strategy,for,loading,or,registering,bean,definitions,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,merged,config,the,merged,context,configuration,see,load,context,merged,context,configuration,since,3,1;protected,void,load,bean,definitions,generic,application,context,context,merged,context,configuration,merged,config,create,bean,definition,reader,context,load,bean,definitions,merged,config,get,locations
AbstractGenericContextLoader -> protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig);1345469597;Load bean definitions into the supplied {@link GenericApplicationContext context}_from the locations or classes in the supplied <code>MergedContextConfiguration</code>.__<p>The default implementation delegates to the {@link BeanDefinitionReader}_returned by {@link #createBeanDefinitionReader(GenericApplicationContext)} to_{@link BeanDefinitionReader#loadBeanDefinitions(String) load} the_bean definitions.__<p>Subclasses must provide an appropriate implementation of_{@link #createBeanDefinitionReader(GenericApplicationContext)}. Alternatively subclasses_may provide a <em>no-op</em> implementation of {@code createBeanDefinitionReader()}_and override this method to provide a custom strategy for loading or_registering bean definitions.__@param context the context into which the bean definitions should be loaded_@param mergedConfig the merged context configuration_@see #loadContext(MergedContextConfiguration)_@since 3.1;protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig) {_		createBeanDefinitionReader(context).loadBeanDefinitions(mergedConfig.getLocations())__	};load,bean,definitions,into,the,supplied,link,generic,application,context,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,code,p,the,default,implementation,delegates,to,the,link,bean,definition,reader,returned,by,link,create,bean,definition,reader,generic,application,context,to,link,bean,definition,reader,load,bean,definitions,string,load,the,bean,definitions,p,subclasses,must,provide,an,appropriate,implementation,of,link,create,bean,definition,reader,generic,application,context,alternatively,subclasses,may,provide,a,em,no,op,em,implementation,of,code,create,bean,definition,reader,and,override,this,method,to,provide,a,custom,strategy,for,loading,or,registering,bean,definitions,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,merged,config,the,merged,context,configuration,see,load,context,merged,context,configuration,since,3,1;protected,void,load,bean,definitions,generic,application,context,context,merged,context,configuration,merged,config,create,bean,definition,reader,context,load,bean,definitions,merged,config,get,locations
AbstractGenericContextLoader -> protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig);1349648958;Load bean definitions into the supplied {@link GenericApplicationContext context}_from the locations or classes in the supplied <code>MergedContextConfiguration</code>.__<p>The default implementation delegates to the {@link BeanDefinitionReader}_returned by {@link #createBeanDefinitionReader(GenericApplicationContext)} to_{@link BeanDefinitionReader#loadBeanDefinitions(String) load} the_bean definitions.__<p>Subclasses must provide an appropriate implementation of_{@link #createBeanDefinitionReader(GenericApplicationContext)}. Alternatively subclasses_may provide a <em>no-op</em> implementation of {@code createBeanDefinitionReader()}_and override this method to provide a custom strategy for loading or_registering bean definitions.__@param context the context into which the bean definitions should be loaded_@param mergedConfig the merged context configuration_@see #loadContext(MergedContextConfiguration)_@since 3.1;protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig) {_		createBeanDefinitionReader(context).loadBeanDefinitions(mergedConfig.getLocations())__	};load,bean,definitions,into,the,supplied,link,generic,application,context,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,code,p,the,default,implementation,delegates,to,the,link,bean,definition,reader,returned,by,link,create,bean,definition,reader,generic,application,context,to,link,bean,definition,reader,load,bean,definitions,string,load,the,bean,definitions,p,subclasses,must,provide,an,appropriate,implementation,of,link,create,bean,definition,reader,generic,application,context,alternatively,subclasses,may,provide,a,em,no,op,em,implementation,of,code,create,bean,definition,reader,and,override,this,method,to,provide,a,custom,strategy,for,loading,or,registering,bean,definitions,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,merged,config,the,merged,context,configuration,see,load,context,merged,context,configuration,since,3,1;protected,void,load,bean,definitions,generic,application,context,context,merged,context,configuration,merged,config,create,bean,definition,reader,context,load,bean,definitions,merged,config,get,locations
AbstractGenericContextLoader -> protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig);1355313310;Load bean definitions into the supplied {@link GenericApplicationContext context}_from the locations or classes in the supplied <code>MergedContextConfiguration</code>.__<p>The default implementation delegates to the {@link BeanDefinitionReader}_returned by {@link #createBeanDefinitionReader(GenericApplicationContext)} to_{@link BeanDefinitionReader#loadBeanDefinitions(String) load} the_bean definitions.__<p>Subclasses must provide an appropriate implementation of_{@link #createBeanDefinitionReader(GenericApplicationContext)}. Alternatively subclasses_may provide a <em>no-op</em> implementation of {@code createBeanDefinitionReader()}_and override this method to provide a custom strategy for loading or_registering bean definitions.__@param context the context into which the bean definitions should be loaded_@param mergedConfig the merged context configuration_@see #loadContext(MergedContextConfiguration)_@since 3.1;protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig) {_		createBeanDefinitionReader(context).loadBeanDefinitions(mergedConfig.getLocations())__	};load,bean,definitions,into,the,supplied,link,generic,application,context,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,code,p,the,default,implementation,delegates,to,the,link,bean,definition,reader,returned,by,link,create,bean,definition,reader,generic,application,context,to,link,bean,definition,reader,load,bean,definitions,string,load,the,bean,definitions,p,subclasses,must,provide,an,appropriate,implementation,of,link,create,bean,definition,reader,generic,application,context,alternatively,subclasses,may,provide,a,em,no,op,em,implementation,of,code,create,bean,definition,reader,and,override,this,method,to,provide,a,custom,strategy,for,loading,or,registering,bean,definitions,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,merged,config,the,merged,context,configuration,see,load,context,merged,context,configuration,since,3,1;protected,void,load,bean,definitions,generic,application,context,context,merged,context,configuration,merged,config,create,bean,definition,reader,context,load,bean,definitions,merged,config,get,locations
AbstractGenericContextLoader -> protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig);1356735495;Load bean definitions into the supplied {@link GenericApplicationContext context}_from the locations or classes in the supplied {@code MergedContextConfiguration}.__<p>The default implementation delegates to the {@link BeanDefinitionReader}_returned by {@link #createBeanDefinitionReader(GenericApplicationContext)} to_{@link BeanDefinitionReader#loadBeanDefinitions(String) load} the_bean definitions.__<p>Subclasses must provide an appropriate implementation of_{@link #createBeanDefinitionReader(GenericApplicationContext)}. Alternatively subclasses_may provide a <em>no-op</em> implementation of {@code createBeanDefinitionReader()}_and override this method to provide a custom strategy for loading or_registering bean definitions.__@param context the context into which the bean definitions should be loaded_@param mergedConfig the merged context configuration_@see #loadContext(MergedContextConfiguration)_@since 3.1;protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig) {_		createBeanDefinitionReader(context).loadBeanDefinitions(mergedConfig.getLocations())__	};load,bean,definitions,into,the,supplied,link,generic,application,context,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,p,the,default,implementation,delegates,to,the,link,bean,definition,reader,returned,by,link,create,bean,definition,reader,generic,application,context,to,link,bean,definition,reader,load,bean,definitions,string,load,the,bean,definitions,p,subclasses,must,provide,an,appropriate,implementation,of,link,create,bean,definition,reader,generic,application,context,alternatively,subclasses,may,provide,a,em,no,op,em,implementation,of,code,create,bean,definition,reader,and,override,this,method,to,provide,a,custom,strategy,for,loading,or,registering,bean,definitions,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,merged,config,the,merged,context,configuration,see,load,context,merged,context,configuration,since,3,1;protected,void,load,bean,definitions,generic,application,context,context,merged,context,configuration,merged,config,create,bean,definition,reader,context,load,bean,definitions,merged,config,get,locations
AbstractGenericContextLoader -> protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig);1357119239;Load bean definitions into the supplied {@link GenericApplicationContext context}_from the locations or classes in the supplied {@code MergedContextConfiguration}.__<p>The default implementation delegates to the {@link BeanDefinitionReader}_returned by {@link #createBeanDefinitionReader(GenericApplicationContext)} to_{@link BeanDefinitionReader#loadBeanDefinitions(String) load} the_bean definitions.__<p>Subclasses must provide an appropriate implementation of_{@link #createBeanDefinitionReader(GenericApplicationContext)}. Alternatively subclasses_may provide a <em>no-op</em> implementation of {@code createBeanDefinitionReader()}_and override this method to provide a custom strategy for loading or_registering bean definitions.__@param context the context into which the bean definitions should be loaded_@param mergedConfig the merged context configuration_@see #loadContext(MergedContextConfiguration)_@since 3.1;protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig) {_		createBeanDefinitionReader(context).loadBeanDefinitions(mergedConfig.getLocations())__	};load,bean,definitions,into,the,supplied,link,generic,application,context,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,p,the,default,implementation,delegates,to,the,link,bean,definition,reader,returned,by,link,create,bean,definition,reader,generic,application,context,to,link,bean,definition,reader,load,bean,definitions,string,load,the,bean,definitions,p,subclasses,must,provide,an,appropriate,implementation,of,link,create,bean,definition,reader,generic,application,context,alternatively,subclasses,may,provide,a,em,no,op,em,implementation,of,code,create,bean,definition,reader,and,override,this,method,to,provide,a,custom,strategy,for,loading,or,registering,bean,definitions,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,merged,config,the,merged,context,configuration,see,load,context,merged,context,configuration,since,3,1;protected,void,load,bean,definitions,generic,application,context,context,merged,context,configuration,merged,config,create,bean,definition,reader,context,load,bean,definitions,merged,config,get,locations
AbstractGenericContextLoader -> protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig);1363208506;Load bean definitions into the supplied {@link GenericApplicationContext context}_from the locations or classes in the supplied {@code MergedContextConfiguration}.__<p>The default implementation delegates to the {@link BeanDefinitionReader}_returned by {@link #createBeanDefinitionReader(GenericApplicationContext)} to_{@link BeanDefinitionReader#loadBeanDefinitions(String) load} the_bean definitions.__<p>Subclasses must provide an appropriate implementation of_{@link #createBeanDefinitionReader(GenericApplicationContext)}. Alternatively subclasses_may provide a <em>no-op</em> implementation of {@code createBeanDefinitionReader()}_and override this method to provide a custom strategy for loading or_registering bean definitions.__@param context the context into which the bean definitions should be loaded_@param mergedConfig the merged context configuration_@see #loadContext(MergedContextConfiguration)_@since 3.1;protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig) {_		createBeanDefinitionReader(context).loadBeanDefinitions(mergedConfig.getLocations())__	};load,bean,definitions,into,the,supplied,link,generic,application,context,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,p,the,default,implementation,delegates,to,the,link,bean,definition,reader,returned,by,link,create,bean,definition,reader,generic,application,context,to,link,bean,definition,reader,load,bean,definitions,string,load,the,bean,definitions,p,subclasses,must,provide,an,appropriate,implementation,of,link,create,bean,definition,reader,generic,application,context,alternatively,subclasses,may,provide,a,em,no,op,em,implementation,of,code,create,bean,definition,reader,and,override,this,method,to,provide,a,custom,strategy,for,loading,or,registering,bean,definitions,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,merged,config,the,merged,context,configuration,see,load,context,merged,context,configuration,since,3,1;protected,void,load,bean,definitions,generic,application,context,context,merged,context,configuration,merged,config,create,bean,definition,reader,context,load,bean,definitions,merged,config,get,locations
AbstractGenericContextLoader -> protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig);1368482696;Load bean definitions into the supplied {@link GenericApplicationContext context}_from the locations or classes in the supplied {@code MergedContextConfiguration}.__<p>The default implementation delegates to the {@link BeanDefinitionReader}_returned by {@link #createBeanDefinitionReader(GenericApplicationContext)} to_{@link BeanDefinitionReader#loadBeanDefinitions(String) load} the_bean definitions.__<p>Subclasses must provide an appropriate implementation of_{@link #createBeanDefinitionReader(GenericApplicationContext)}. Alternatively subclasses_may provide a <em>no-op</em> implementation of {@code createBeanDefinitionReader()}_and override this method to provide a custom strategy for loading or_registering bean definitions.__@param context the context into which the bean definitions should be loaded_@param mergedConfig the merged context configuration_@see #loadContext(MergedContextConfiguration)_@since 3.1;protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig) {_		createBeanDefinitionReader(context).loadBeanDefinitions(mergedConfig.getLocations())__	};load,bean,definitions,into,the,supplied,link,generic,application,context,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,p,the,default,implementation,delegates,to,the,link,bean,definition,reader,returned,by,link,create,bean,definition,reader,generic,application,context,to,link,bean,definition,reader,load,bean,definitions,string,load,the,bean,definitions,p,subclasses,must,provide,an,appropriate,implementation,of,link,create,bean,definition,reader,generic,application,context,alternatively,subclasses,may,provide,a,em,no,op,em,implementation,of,code,create,bean,definition,reader,and,override,this,method,to,provide,a,custom,strategy,for,loading,or,registering,bean,definitions,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,merged,config,the,merged,context,configuration,see,load,context,merged,context,configuration,since,3,1;protected,void,load,bean,definitions,generic,application,context,context,merged,context,configuration,merged,config,create,bean,definition,reader,context,load,bean,definitions,merged,config,get,locations
AbstractGenericContextLoader -> protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig);1396374528;Load bean definitions into the supplied {@link GenericApplicationContext context}_from the locations or classes in the supplied {@code MergedContextConfiguration}.__<p>The default implementation delegates to the {@link BeanDefinitionReader}_returned by {@link #createBeanDefinitionReader(GenericApplicationContext)} to_{@link BeanDefinitionReader#loadBeanDefinitions(String) load} the_bean definitions.__<p>Subclasses must provide an appropriate implementation of_{@link #createBeanDefinitionReader(GenericApplicationContext)}. Alternatively subclasses_may provide a <em>no-op</em> implementation of {@code createBeanDefinitionReader()}_and override this method to provide a custom strategy for loading or_registering bean definitions.__@param context the context into which the bean definitions should be loaded_@param mergedConfig the merged context configuration_@see #loadContext(MergedContextConfiguration)_@since 3.1;protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig) {_		createBeanDefinitionReader(context).loadBeanDefinitions(mergedConfig.getLocations())__	};load,bean,definitions,into,the,supplied,link,generic,application,context,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,p,the,default,implementation,delegates,to,the,link,bean,definition,reader,returned,by,link,create,bean,definition,reader,generic,application,context,to,link,bean,definition,reader,load,bean,definitions,string,load,the,bean,definitions,p,subclasses,must,provide,an,appropriate,implementation,of,link,create,bean,definition,reader,generic,application,context,alternatively,subclasses,may,provide,a,em,no,op,em,implementation,of,code,create,bean,definition,reader,and,override,this,method,to,provide,a,custom,strategy,for,loading,or,registering,bean,definitions,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,merged,config,the,merged,context,configuration,see,load,context,merged,context,configuration,since,3,1;protected,void,load,bean,definitions,generic,application,context,context,merged,context,configuration,merged,config,create,bean,definition,reader,context,load,bean,definitions,merged,config,get,locations
AbstractGenericContextLoader -> protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig);1457727806;Load bean definitions into the supplied {@link GenericApplicationContext context}_from the locations or classes in the supplied {@code MergedContextConfiguration}.__<p>The default implementation delegates to the {@link BeanDefinitionReader}_returned by {@link #createBeanDefinitionReader(GenericApplicationContext)} to_{@link BeanDefinitionReader#loadBeanDefinitions(String) load} the_bean definitions.__<p>Subclasses must provide an appropriate implementation of_{@link #createBeanDefinitionReader(GenericApplicationContext)}. Alternatively subclasses_may provide a <em>no-op</em> implementation of {@code createBeanDefinitionReader()}_and override this method to provide a custom strategy for loading or_registering bean definitions.__@param context the context into which the bean definitions should be loaded_@param mergedConfig the merged context configuration_@see #loadContext(MergedContextConfiguration)_@since 3.1;protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig) {_		createBeanDefinitionReader(context).loadBeanDefinitions(mergedConfig.getLocations())__	};load,bean,definitions,into,the,supplied,link,generic,application,context,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,p,the,default,implementation,delegates,to,the,link,bean,definition,reader,returned,by,link,create,bean,definition,reader,generic,application,context,to,link,bean,definition,reader,load,bean,definitions,string,load,the,bean,definitions,p,subclasses,must,provide,an,appropriate,implementation,of,link,create,bean,definition,reader,generic,application,context,alternatively,subclasses,may,provide,a,em,no,op,em,implementation,of,code,create,bean,definition,reader,and,override,this,method,to,provide,a,custom,strategy,for,loading,or,registering,bean,definitions,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,merged,config,the,merged,context,configuration,see,load,context,merged,context,configuration,since,3,1;protected,void,load,bean,definitions,generic,application,context,context,merged,context,configuration,merged,config,create,bean,definition,reader,context,load,bean,definitions,merged,config,get,locations
AbstractGenericContextLoader -> protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig);1530174524;Load bean definitions into the supplied {@link GenericApplicationContext context}_from the locations or classes in the supplied {@code MergedContextConfiguration}.__<p>The default implementation delegates to the {@link BeanDefinitionReader}_returned by {@link #createBeanDefinitionReader(GenericApplicationContext)} to_{@link BeanDefinitionReader#loadBeanDefinitions(String) load} the_bean definitions.__<p>Subclasses must provide an appropriate implementation of_{@link #createBeanDefinitionReader(GenericApplicationContext)}. Alternatively subclasses_may provide a <em>no-op</em> implementation of {@code createBeanDefinitionReader()}_and override this method to provide a custom strategy for loading or_registering bean definitions.__@param context the context into which the bean definitions should be loaded_@param mergedConfig the merged context configuration_@since 3.1_@see #loadContext(MergedContextConfiguration);protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig) {_		createBeanDefinitionReader(context).loadBeanDefinitions(mergedConfig.getLocations())__	};load,bean,definitions,into,the,supplied,link,generic,application,context,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,p,the,default,implementation,delegates,to,the,link,bean,definition,reader,returned,by,link,create,bean,definition,reader,generic,application,context,to,link,bean,definition,reader,load,bean,definitions,string,load,the,bean,definitions,p,subclasses,must,provide,an,appropriate,implementation,of,link,create,bean,definition,reader,generic,application,context,alternatively,subclasses,may,provide,a,em,no,op,em,implementation,of,code,create,bean,definition,reader,and,override,this,method,to,provide,a,custom,strategy,for,loading,or,registering,bean,definitions,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,merged,config,the,merged,context,configuration,since,3,1,see,load,context,merged,context,configuration;protected,void,load,bean,definitions,generic,application,context,context,merged,context,configuration,merged,config,create,bean,definition,reader,context,load,bean,definitions,merged,config,get,locations
AbstractGenericContextLoader -> protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig);1549646187;Load bean definitions into the supplied {@link GenericApplicationContext context}_from the locations or classes in the supplied {@code MergedContextConfiguration}.__<p>The default implementation delegates to the {@link BeanDefinitionReader}_returned by {@link #createBeanDefinitionReader(GenericApplicationContext)} to_{@link BeanDefinitionReader#loadBeanDefinitions(String) load} the_bean definitions.__<p>Subclasses must provide an appropriate implementation of_{@link #createBeanDefinitionReader(GenericApplicationContext)}. Alternatively subclasses_may provide a <em>no-op</em> implementation of {@code createBeanDefinitionReader()}_and override this method to provide a custom strategy for loading or_registering bean definitions.__@param context the context into which the bean definitions should be loaded_@param mergedConfig the merged context configuration_@since 3.1_@see #loadContext(MergedContextConfiguration);protected void loadBeanDefinitions(GenericApplicationContext context, MergedContextConfiguration mergedConfig) {_		createBeanDefinitionReader(context).loadBeanDefinitions(mergedConfig.getLocations())__	};load,bean,definitions,into,the,supplied,link,generic,application,context,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,p,the,default,implementation,delegates,to,the,link,bean,definition,reader,returned,by,link,create,bean,definition,reader,generic,application,context,to,link,bean,definition,reader,load,bean,definitions,string,load,the,bean,definitions,p,subclasses,must,provide,an,appropriate,implementation,of,link,create,bean,definition,reader,generic,application,context,alternatively,subclasses,may,provide,a,em,no,op,em,implementation,of,code,create,bean,definition,reader,and,override,this,method,to,provide,a,custom,strategy,for,loading,or,registering,bean,definitions,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,merged,config,the,merged,context,configuration,since,3,1,see,load,context,merged,context,configuration;protected,void,load,bean,definitions,generic,application,context,context,merged,context,configuration,merged,config,create,bean,definition,reader,context,load,bean,definitions,merged,config,get,locations
