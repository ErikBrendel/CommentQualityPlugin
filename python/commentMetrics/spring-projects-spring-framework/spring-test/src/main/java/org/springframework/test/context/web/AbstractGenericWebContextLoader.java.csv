# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractGenericWebContextLoader -> protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig);1354573750;TODO [SPR-9864] Document customizeContext().;protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig) {_	};todo,spr,9864,document,customize,context;protected,void,customize,context,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig);1355187490;Customize the {@link GenericWebApplicationContext} created by this context_loader <i>after</i> bean definitions have been loaded into the context but_<i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the web application context.__@param context the newly created web application context_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig) {_	};customize,the,link,generic,web,application,context,created,by,this,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,web,application,context,param,context,the,newly,created,web,application,context,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,void,customize,context,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig);1355313310;Customize the {@link GenericWebApplicationContext} created by this context_loader <i>after</i> bean definitions have been loaded into the context but_<i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the web application context.__@param context the newly created web application context_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig) {_	};customize,the,link,generic,web,application,context,created,by,this,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,web,application,context,param,context,the,newly,created,web,application,context,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,void,customize,context,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig);1356735495;Customize the {@link GenericWebApplicationContext} created by this context_loader <i>after</i> bean definitions have been loaded into the context but_<i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the web application context.__@param context the newly created web application context_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig) {_	};customize,the,link,generic,web,application,context,created,by,this,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,web,application,context,param,context,the,newly,created,web,application,context,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,void,customize,context,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig);1357119239;Customize the {@link GenericWebApplicationContext} created by this context_loader <i>after</i> bean definitions have been loaded into the context but_<i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the web application context.__@param context the newly created web application context_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig) {_	};customize,the,link,generic,web,application,context,created,by,this,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,web,application,context,param,context,the,newly,created,web,application,context,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,void,customize,context,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig);1363208506;Customize the {@link GenericWebApplicationContext} created by this context_loader <i>after</i> bean definitions have been loaded into the context but_<i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the web application context.__@param context the newly created web application context_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig) {_	};customize,the,link,generic,web,application,context,created,by,this,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,web,application,context,param,context,the,newly,created,web,application,context,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,void,customize,context,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig);1368482696;Customize the {@link GenericWebApplicationContext} created by this context_loader <i>after</i> bean definitions have been loaded into the context but_<i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the web application context.__@param context the newly created web application context_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig) {_	};customize,the,link,generic,web,application,context,created,by,this,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,web,application,context,param,context,the,newly,created,web,application,context,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,void,customize,context,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig);1396374528;Customize the {@link GenericWebApplicationContext} created by this context_loader <i>after</i> bean definitions have been loaded into the context but_<i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the web application context.__@param context the newly created web application context_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig) {_	};customize,the,link,generic,web,application,context,created,by,this,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,web,application,context,param,context,the,newly,created,web,application,context,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,void,customize,context,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig);1413848647;Customize the {@link GenericWebApplicationContext} created by this context_loader <i>after</i> bean definitions have been loaded into the context but_<i>before</i> the context is refreshed.__<p>The default implementation is empty but can be overridden in subclasses_to customize the web application context.__@param context the newly created web application context_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig) {_	};customize,the,link,generic,web,application,context,created,by,this,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,the,web,application,context,param,context,the,newly,created,web,application,context,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,void,customize,context,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig);1457727806;Customize the {@link GenericWebApplicationContext} created by this context_loader <i>after</i> bean definitions have been loaded into the context but_<i>before</i> the context is refreshed.__<p>The default implementation simply delegates to_{@link AbstractContextLoader#customizeContext(ConfigurableApplicationContext, MergedContextConfiguration)}.__@param context the newly created web application context_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see #customizeContext(ConfigurableApplicationContext, MergedContextConfiguration);protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig) {_		super.customizeContext(context, webMergedConfig)__	};customize,the,link,generic,web,application,context,created,by,this,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,simply,delegates,to,link,abstract,context,loader,customize,context,configurable,application,context,merged,context,configuration,param,context,the,newly,created,web,application,context,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,customize,context,configurable,application,context,merged,context,configuration;protected,void,customize,context,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,super,customize,context,context,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig);1468334463;Customize the {@link GenericWebApplicationContext} created by this context_loader <i>after</i> bean definitions have been loaded into the context but_<i>before</i> the context is refreshed.__<p>The default implementation simply delegates to_{@link AbstractContextLoader#customizeContext(ConfigurableApplicationContext, MergedContextConfiguration)}.__@param context the newly created web application context_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see #customizeContext(ConfigurableApplicationContext, MergedContextConfiguration);protected void customizeContext(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig) {_		super.customizeContext(context, webMergedConfig)__	};customize,the,link,generic,web,application,context,created,by,this,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,simply,delegates,to,link,abstract,context,loader,customize,context,configurable,application,context,merged,context,configuration,param,context,the,newly,created,web,application,context,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,customize,context,configurable,application,context,merged,context,configuration;protected,void,customize,context,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,super,customize,context,context,web,merged,config
AbstractGenericWebContextLoader -> public final ApplicationContext loadContext(String... locations) throws Exception;1354573750;TODO [SPR-9864] Document overridden loadContext(String...).__@see org.springframework.test.context.ContextLoader#loadContext(java.lang.String[]);public final ApplicationContext loadContext(String... locations) throws Exception {_		throw new UnsupportedOperationException(_			"AbstractGenericWebContextLoader does not support the loadContext(String... locations) method")__	};todo,spr,9864,document,overridden,load,context,string,see,org,springframework,test,context,context,loader,load,context,java,lang,string;public,final,application,context,load,context,string,locations,throws,exception,throw,new,unsupported,operation,exception,abstract,generic,web,context,loader,does,not,support,the,load,context,string,locations,method
AbstractGenericWebContextLoader -> public final ApplicationContext loadContext(String... locations) throws Exception;1355187490;{@code AbstractGenericWebContextLoader} should be used as a_{@link org.springframework.test.context.SmartContextLoader SmartContextLoader},_not as a legacy {@link org.springframework.test.context.ContextLoader ContextLoader}._Consequently, this method is not supported.__@see org.springframework.test.context.ContextLoader#loadContext(java.lang.String[])_@throws UnsupportedOperationException;public final ApplicationContext loadContext(String... locations) throws Exception {_		throw new UnsupportedOperationException(_			"AbstractGenericWebContextLoader does not support the loadContext(String... locations) method")__	};code,abstract,generic,web,context,loader,should,be,used,as,a,link,org,springframework,test,context,smart,context,loader,smart,context,loader,not,as,a,legacy,link,org,springframework,test,context,context,loader,context,loader,consequently,this,method,is,not,supported,see,org,springframework,test,context,context,loader,load,context,java,lang,string,throws,unsupported,operation,exception;public,final,application,context,load,context,string,locations,throws,exception,throw,new,unsupported,operation,exception,abstract,generic,web,context,loader,does,not,support,the,load,context,string,locations,method
AbstractGenericWebContextLoader -> public final ApplicationContext loadContext(String... locations) throws Exception;1355313310;{@code AbstractGenericWebContextLoader} should be used as a_{@link org.springframework.test.context.SmartContextLoader SmartContextLoader},_not as a legacy {@link org.springframework.test.context.ContextLoader ContextLoader}._Consequently, this method is not supported.__@see org.springframework.test.context.ContextLoader#loadContext(java.lang.String[])_@throws UnsupportedOperationException;public final ApplicationContext loadContext(String... locations) throws Exception {_		throw new UnsupportedOperationException(_			"AbstractGenericWebContextLoader does not support the loadContext(String... locations) method")__	};code,abstract,generic,web,context,loader,should,be,used,as,a,link,org,springframework,test,context,smart,context,loader,smart,context,loader,not,as,a,legacy,link,org,springframework,test,context,context,loader,context,loader,consequently,this,method,is,not,supported,see,org,springframework,test,context,context,loader,load,context,java,lang,string,throws,unsupported,operation,exception;public,final,application,context,load,context,string,locations,throws,exception,throw,new,unsupported,operation,exception,abstract,generic,web,context,loader,does,not,support,the,load,context,string,locations,method
AbstractGenericWebContextLoader -> public final ApplicationContext loadContext(String... locations) throws Exception;1357119239;{@code AbstractGenericWebContextLoader} should be used as a_{@link org.springframework.test.context.SmartContextLoader SmartContextLoader},_not as a legacy {@link org.springframework.test.context.ContextLoader ContextLoader}._Consequently, this method is not supported.__@see org.springframework.test.context.ContextLoader#loadContext(java.lang.String[])_@throws UnsupportedOperationException;public final ApplicationContext loadContext(String... locations) throws Exception {_		throw new UnsupportedOperationException(_			"AbstractGenericWebContextLoader does not support the loadContext(String... locations) method")__	};code,abstract,generic,web,context,loader,should,be,used,as,a,link,org,springframework,test,context,smart,context,loader,smart,context,loader,not,as,a,legacy,link,org,springframework,test,context,context,loader,context,loader,consequently,this,method,is,not,supported,see,org,springframework,test,context,context,loader,load,context,java,lang,string,throws,unsupported,operation,exception;public,final,application,context,load,context,string,locations,throws,exception,throw,new,unsupported,operation,exception,abstract,generic,web,context,loader,does,not,support,the,load,context,string,locations,method
AbstractGenericWebContextLoader -> public final ApplicationContext loadContext(String... locations) throws Exception;1363208506;{@code AbstractGenericWebContextLoader} should be used as a_{@link org.springframework.test.context.SmartContextLoader SmartContextLoader},_not as a legacy {@link org.springframework.test.context.ContextLoader ContextLoader}._Consequently, this method is not supported.__@see org.springframework.test.context.ContextLoader#loadContext(java.lang.String[])_@throws UnsupportedOperationException;public final ApplicationContext loadContext(String... locations) throws Exception {_		throw new UnsupportedOperationException(_			"AbstractGenericWebContextLoader does not support the loadContext(String... locations) method")__	};code,abstract,generic,web,context,loader,should,be,used,as,a,link,org,springframework,test,context,smart,context,loader,smart,context,loader,not,as,a,legacy,link,org,springframework,test,context,context,loader,context,loader,consequently,this,method,is,not,supported,see,org,springframework,test,context,context,loader,load,context,java,lang,string,throws,unsupported,operation,exception;public,final,application,context,load,context,string,locations,throws,exception,throw,new,unsupported,operation,exception,abstract,generic,web,context,loader,does,not,support,the,load,context,string,locations,method
AbstractGenericWebContextLoader -> protected void configureWebResources(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig);1354573750;TODO [SPR-9864] Document configureWebResources().;protected void configureWebResources(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig) {__		String resourceBasePath = webMergedConfig.getResourceBasePath()__		ResourceLoader resourceLoader = resourceBasePath.startsWith(ResourceLoader.CLASSPATH_URL_PREFIX) ? new DefaultResourceLoader()_				: new FileSystemResourceLoader()___		ServletContext servletContext = new MockServletContext(resourceBasePath, resourceLoader)__		servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, context)__		context.setServletContext(servletContext)__	};todo,spr,9864,document,configure,web,resources;protected,void,configure,web,resources,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,string,resource,base,path,web,merged,config,get,resource,base,path,resource,loader,resource,loader,resource,base,path,starts,with,resource,loader,new,default,resource,loader,new,file,system,resource,loader,servlet,context,servlet,context,new,mock,servlet,context,resource,base,path,resource,loader,servlet,context,set,attribute,web,application,context,context,context,set,servlet,context,servlet,context
AbstractGenericWebContextLoader -> protected void configureWebResources(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig);1355187490;Configures web resources for the supplied web application context.__<p>Implementation details:__<ul>_<li>The resource base path is retrieved from the supplied_{@code WebMergedContextConfiguration}.</li>_<li>A {@link ResourceLoader} is instantiated for the {@link MockServletContext}:_if the resource base path is prefixed with "{@code classpath:}", a_{@link DefaultResourceLoader} will be used_ otherwise, a_{@link FileSystemResourceLoader} will be used.</li>_<li>A {@code MockServletContext} will be created using the resource base_path and resource loader.</li>_<li>The supplied {@link GenericWebApplicationContext} is then stored in_the {@code MockServletContext} under the_{@link WebApplicationContext#ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE} key.</li>_<li>Finally, the {@code MockServletContext} is set in the_{@code WebApplicationContext}.</li>__@param context the web application context for which to configure the web_resources_@param webMergedConfig the merged context configuration to use to load the_web application context;protected void configureWebResources(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig) {__		String resourceBasePath = webMergedConfig.getResourceBasePath()__		ResourceLoader resourceLoader = resourceBasePath.startsWith(ResourceLoader.CLASSPATH_URL_PREFIX) ? new DefaultResourceLoader()_				: new FileSystemResourceLoader()___		ServletContext servletContext = new MockServletContext(resourceBasePath, resourceLoader)__		servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, context)__		context.setServletContext(servletContext)__	};configures,web,resources,for,the,supplied,web,application,context,p,implementation,details,ul,li,the,resource,base,path,is,retrieved,from,the,supplied,code,web,merged,context,configuration,li,li,a,link,resource,loader,is,instantiated,for,the,link,mock,servlet,context,if,the,resource,base,path,is,prefixed,with,code,classpath,a,link,default,resource,loader,will,be,used,otherwise,a,link,file,system,resource,loader,will,be,used,li,li,a,code,mock,servlet,context,will,be,created,using,the,resource,base,path,and,resource,loader,li,li,the,supplied,link,generic,web,application,context,is,then,stored,in,the,code,mock,servlet,context,under,the,link,web,application,context,key,li,li,finally,the,code,mock,servlet,context,is,set,in,the,code,web,application,context,li,param,context,the,web,application,context,for,which,to,configure,the,web,resources,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context;protected,void,configure,web,resources,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,string,resource,base,path,web,merged,config,get,resource,base,path,resource,loader,resource,loader,resource,base,path,starts,with,resource,loader,new,default,resource,loader,new,file,system,resource,loader,servlet,context,servlet,context,new,mock,servlet,context,resource,base,path,resource,loader,servlet,context,set,attribute,web,application,context,context,context,set,servlet,context,servlet,context
AbstractGenericWebContextLoader -> protected void configureWebResources(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig);1355313310;Configures web resources for the supplied web application context.__<p>Implementation details:__<ul>_<li>The resource base path is retrieved from the supplied_{@code WebMergedContextConfiguration}.</li>_<li>A {@link ResourceLoader} is instantiated for the {@link MockServletContext}:_if the resource base path is prefixed with "{@code classpath:}", a_{@link DefaultResourceLoader} will be used_ otherwise, a_{@link FileSystemResourceLoader} will be used.</li>_<li>A {@code MockServletContext} will be created using the resource base_path and resource loader.</li>_<li>The supplied {@link GenericWebApplicationContext} is then stored in_the {@code MockServletContext} under the_{@link WebApplicationContext#ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE} key.</li>_<li>Finally, the {@code MockServletContext} is set in the_{@code WebApplicationContext}.</li>__@param context the web application context for which to configure the web_resources_@param webMergedConfig the merged context configuration to use to load the_web application context;protected void configureWebResources(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig) {__		String resourceBasePath = webMergedConfig.getResourceBasePath()__		ResourceLoader resourceLoader = resourceBasePath.startsWith(ResourceLoader.CLASSPATH_URL_PREFIX) ? new DefaultResourceLoader()_				: new FileSystemResourceLoader()___		ServletContext servletContext = new MockServletContext(resourceBasePath, resourceLoader)__		servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, context)__		context.setServletContext(servletContext)__	};configures,web,resources,for,the,supplied,web,application,context,p,implementation,details,ul,li,the,resource,base,path,is,retrieved,from,the,supplied,code,web,merged,context,configuration,li,li,a,link,resource,loader,is,instantiated,for,the,link,mock,servlet,context,if,the,resource,base,path,is,prefixed,with,code,classpath,a,link,default,resource,loader,will,be,used,otherwise,a,link,file,system,resource,loader,will,be,used,li,li,a,code,mock,servlet,context,will,be,created,using,the,resource,base,path,and,resource,loader,li,li,the,supplied,link,generic,web,application,context,is,then,stored,in,the,code,mock,servlet,context,under,the,link,web,application,context,key,li,li,finally,the,code,mock,servlet,context,is,set,in,the,code,web,application,context,li,param,context,the,web,application,context,for,which,to,configure,the,web,resources,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context;protected,void,configure,web,resources,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,string,resource,base,path,web,merged,config,get,resource,base,path,resource,loader,resource,loader,resource,base,path,starts,with,resource,loader,new,default,resource,loader,new,file,system,resource,loader,servlet,context,servlet,context,new,mock,servlet,context,resource,base,path,resource,loader,servlet,context,set,attribute,web,application,context,context,context,set,servlet,context,servlet,context
AbstractGenericWebContextLoader -> protected void configureWebResources(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig);1356735495;Configures web resources for the supplied web application context.__<p>Implementation details:__<ul>_<li>The resource base path is retrieved from the supplied_{@code WebMergedContextConfiguration}.</li>_<li>A {@link ResourceLoader} is instantiated for the {@link MockServletContext}:_if the resource base path is prefixed with "{@code classpath:}", a_{@link DefaultResourceLoader} will be used_ otherwise, a_{@link FileSystemResourceLoader} will be used.</li>_<li>A {@code MockServletContext} will be created using the resource base_path and resource loader.</li>_<li>The supplied {@link GenericWebApplicationContext} is then stored in_the {@code MockServletContext} under the_{@link WebApplicationContext#ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE} key.</li>_<li>Finally, the {@code MockServletContext} is set in the_{@code WebApplicationContext}.</li>__@param context the web application context for which to configure the web_resources_@param webMergedConfig the merged context configuration to use to load the_web application context;protected void configureWebResources(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig) {__		String resourceBasePath = webMergedConfig.getResourceBasePath()__		ResourceLoader resourceLoader = resourceBasePath.startsWith(ResourceLoader.CLASSPATH_URL_PREFIX) ? new DefaultResourceLoader()_				: new FileSystemResourceLoader()___		ServletContext servletContext = new MockServletContext(resourceBasePath, resourceLoader)__		servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, context)__		context.setServletContext(servletContext)__	};configures,web,resources,for,the,supplied,web,application,context,p,implementation,details,ul,li,the,resource,base,path,is,retrieved,from,the,supplied,code,web,merged,context,configuration,li,li,a,link,resource,loader,is,instantiated,for,the,link,mock,servlet,context,if,the,resource,base,path,is,prefixed,with,code,classpath,a,link,default,resource,loader,will,be,used,otherwise,a,link,file,system,resource,loader,will,be,used,li,li,a,code,mock,servlet,context,will,be,created,using,the,resource,base,path,and,resource,loader,li,li,the,supplied,link,generic,web,application,context,is,then,stored,in,the,code,mock,servlet,context,under,the,link,web,application,context,key,li,li,finally,the,code,mock,servlet,context,is,set,in,the,code,web,application,context,li,param,context,the,web,application,context,for,which,to,configure,the,web,resources,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context;protected,void,configure,web,resources,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,string,resource,base,path,web,merged,config,get,resource,base,path,resource,loader,resource,loader,resource,base,path,starts,with,resource,loader,new,default,resource,loader,new,file,system,resource,loader,servlet,context,servlet,context,new,mock,servlet,context,resource,base,path,resource,loader,servlet,context,set,attribute,web,application,context,context,context,set,servlet,context,servlet,context
AbstractGenericWebContextLoader -> protected void configureWebResources(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig);1357119239;Configures web resources for the supplied web application context.__<p>Implementation details:__<ul>_<li>The resource base path is retrieved from the supplied_{@code WebMergedContextConfiguration}.</li>_<li>A {@link ResourceLoader} is instantiated for the {@link MockServletContext}:_if the resource base path is prefixed with "{@code classpath:}", a_{@link DefaultResourceLoader} will be used_ otherwise, a_{@link FileSystemResourceLoader} will be used.</li>_<li>A {@code MockServletContext} will be created using the resource base_path and resource loader.</li>_<li>The supplied {@link GenericWebApplicationContext} is then stored in_the {@code MockServletContext} under the_{@link WebApplicationContext#ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE} key.</li>_<li>Finally, the {@code MockServletContext} is set in the_{@code WebApplicationContext}.</li>__@param context the web application context for which to configure the web_resources_@param webMergedConfig the merged context configuration to use to load the_web application context;protected void configureWebResources(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig) {__		String resourceBasePath = webMergedConfig.getResourceBasePath()__		ResourceLoader resourceLoader = resourceBasePath.startsWith(ResourceLoader.CLASSPATH_URL_PREFIX) ? new DefaultResourceLoader()_				: new FileSystemResourceLoader()___		ServletContext servletContext = new MockServletContext(resourceBasePath, resourceLoader)__		servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, context)__		context.setServletContext(servletContext)__	};configures,web,resources,for,the,supplied,web,application,context,p,implementation,details,ul,li,the,resource,base,path,is,retrieved,from,the,supplied,code,web,merged,context,configuration,li,li,a,link,resource,loader,is,instantiated,for,the,link,mock,servlet,context,if,the,resource,base,path,is,prefixed,with,code,classpath,a,link,default,resource,loader,will,be,used,otherwise,a,link,file,system,resource,loader,will,be,used,li,li,a,code,mock,servlet,context,will,be,created,using,the,resource,base,path,and,resource,loader,li,li,the,supplied,link,generic,web,application,context,is,then,stored,in,the,code,mock,servlet,context,under,the,link,web,application,context,key,li,li,finally,the,code,mock,servlet,context,is,set,in,the,code,web,application,context,li,param,context,the,web,application,context,for,which,to,configure,the,web,resources,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context;protected,void,configure,web,resources,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,string,resource,base,path,web,merged,config,get,resource,base,path,resource,loader,resource,loader,resource,base,path,starts,with,resource,loader,new,default,resource,loader,new,file,system,resource,loader,servlet,context,servlet,context,new,mock,servlet,context,resource,base,path,resource,loader,servlet,context,set,attribute,web,application,context,context,context,set,servlet,context,servlet,context
AbstractGenericWebContextLoader -> protected void configureWebResources(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig);1363208506;Configures web resources for the supplied web application context (WAC).__<h4>Implementation Details</h4>__<p>If the supplied WAC has no parent or its parent is not a WAC, the_supplied WAC will be configured as the Root WAC (see "<em>Root WAC_Configuration</em>" below).__<p>Otherwise the context hierarchy of the supplied WAC will be traversed_to find the top-most WAC (i.e., the root)_ and the {@link ServletContext}_of the Root WAC will be set as the {@code ServletContext} for the supplied_WAC.__<h4>Root WAC Configuration</h4>__<ul>_<li>The resource base path is retrieved from the supplied_{@code WebMergedContextConfiguration}.</li>_<li>A {@link ResourceLoader} is instantiated for the {@link MockServletContext}:_if the resource base path is prefixed with "{@code classpath:}", a_{@link DefaultResourceLoader} will be used_ otherwise, a_{@link FileSystemResourceLoader} will be used.</li>_<li>A {@code MockServletContext} will be created using the resource base_path and resource loader.</li>_<li>The supplied {@link GenericWebApplicationContext} is then stored in_the {@code MockServletContext} under the_{@link WebApplicationContext#ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE} key.</li>_<li>Finally, the {@code MockServletContext} is set in the_{@code WebApplicationContext}.</li>__@param context the web application context for which to configure the web_resources_@param webMergedConfig the merged context configuration to use to load the_web application context;protected void configureWebResources(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig) {__		ApplicationContext parent = context.getParent()___		_		_		if (parent == null || (!(parent instanceof WebApplicationContext))) {_			String resourceBasePath = webMergedConfig.getResourceBasePath()__			ResourceLoader resourceLoader = resourceBasePath.startsWith(ResourceLoader.CLASSPATH_URL_PREFIX) ? new DefaultResourceLoader()_					: new FileSystemResourceLoader()___			ServletContext servletContext = new MockServletContext(resourceBasePath, resourceLoader)__			servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, context)__			context.setServletContext(servletContext)__		}_		else {_			ServletContext servletContext = null___			_			while (parent != null) {_				if (parent instanceof WebApplicationContext && !(parent.getParent() instanceof WebApplicationContext)) {_					servletContext = ((WebApplicationContext) parent).getServletContext()__					break__				}_				parent = parent.getParent()__			}_			Assert.state(servletContext != null, "Failed to find Root WebApplicationContext in the context hierarchy")__			context.setServletContext(servletContext)__		}_	};configures,web,resources,for,the,supplied,web,application,context,wac,h4,implementation,details,h4,p,if,the,supplied,wac,has,no,parent,or,its,parent,is,not,a,wac,the,supplied,wac,will,be,configured,as,the,root,wac,see,em,root,wac,configuration,em,below,p,otherwise,the,context,hierarchy,of,the,supplied,wac,will,be,traversed,to,find,the,top,most,wac,i,e,the,root,and,the,link,servlet,context,of,the,root,wac,will,be,set,as,the,code,servlet,context,for,the,supplied,wac,h4,root,wac,configuration,h4,ul,li,the,resource,base,path,is,retrieved,from,the,supplied,code,web,merged,context,configuration,li,li,a,link,resource,loader,is,instantiated,for,the,link,mock,servlet,context,if,the,resource,base,path,is,prefixed,with,code,classpath,a,link,default,resource,loader,will,be,used,otherwise,a,link,file,system,resource,loader,will,be,used,li,li,a,code,mock,servlet,context,will,be,created,using,the,resource,base,path,and,resource,loader,li,li,the,supplied,link,generic,web,application,context,is,then,stored,in,the,code,mock,servlet,context,under,the,link,web,application,context,key,li,li,finally,the,code,mock,servlet,context,is,set,in,the,code,web,application,context,li,param,context,the,web,application,context,for,which,to,configure,the,web,resources,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context;protected,void,configure,web,resources,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,application,context,parent,context,get,parent,if,parent,null,parent,instanceof,web,application,context,string,resource,base,path,web,merged,config,get,resource,base,path,resource,loader,resource,loader,resource,base,path,starts,with,resource,loader,new,default,resource,loader,new,file,system,resource,loader,servlet,context,servlet,context,new,mock,servlet,context,resource,base,path,resource,loader,servlet,context,set,attribute,web,application,context,context,context,set,servlet,context,servlet,context,else,servlet,context,servlet,context,null,while,parent,null,if,parent,instanceof,web,application,context,parent,get,parent,instanceof,web,application,context,servlet,context,web,application,context,parent,get,servlet,context,break,parent,parent,get,parent,assert,state,servlet,context,null,failed,to,find,root,web,application,context,in,the,context,hierarchy,context,set,servlet,context,servlet,context
AbstractGenericWebContextLoader -> protected void configureWebResources(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig);1368482696;Configures web resources for the supplied web application context (WAC).__<h4>Implementation Details</h4>__<p>If the supplied WAC has no parent or its parent is not a WAC, the_supplied WAC will be configured as the Root WAC (see "<em>Root WAC_Configuration</em>" below).__<p>Otherwise the context hierarchy of the supplied WAC will be traversed_to find the top-most WAC (i.e., the root)_ and the {@link ServletContext}_of the Root WAC will be set as the {@code ServletContext} for the supplied_WAC.__<h4>Root WAC Configuration</h4>__<ul>_<li>The resource base path is retrieved from the supplied_{@code WebMergedContextConfiguration}.</li>_<li>A {@link ResourceLoader} is instantiated for the {@link MockServletContext}:_if the resource base path is prefixed with "{@code classpath:}", a_{@link DefaultResourceLoader} will be used_ otherwise, a_{@link FileSystemResourceLoader} will be used.</li>_<li>A {@code MockServletContext} will be created using the resource base_path and resource loader.</li>_<li>The supplied {@link GenericWebApplicationContext} is then stored in_the {@code MockServletContext} under the_{@link WebApplicationContext#ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE} key.</li>_<li>Finally, the {@code MockServletContext} is set in the_{@code WebApplicationContext}.</li>__@param context the web application context for which to configure the web_resources_@param webMergedConfig the merged context configuration to use to load the_web application context;protected void configureWebResources(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig) {__		ApplicationContext parent = context.getParent()___		_		_		if (parent == null || (!(parent instanceof WebApplicationContext))) {_			String resourceBasePath = webMergedConfig.getResourceBasePath()__			ResourceLoader resourceLoader = resourceBasePath.startsWith(ResourceLoader.CLASSPATH_URL_PREFIX) ? new DefaultResourceLoader()_					: new FileSystemResourceLoader()___			ServletContext servletContext = new MockServletContext(resourceBasePath, resourceLoader)__			servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, context)__			context.setServletContext(servletContext)__		}_		else {_			ServletContext servletContext = null___			_			while (parent != null) {_				if (parent instanceof WebApplicationContext && !(parent.getParent() instanceof WebApplicationContext)) {_					servletContext = ((WebApplicationContext) parent).getServletContext()__					break__				}_				parent = parent.getParent()__			}_			Assert.state(servletContext != null, "Failed to find Root WebApplicationContext in the context hierarchy")__			context.setServletContext(servletContext)__		}_	};configures,web,resources,for,the,supplied,web,application,context,wac,h4,implementation,details,h4,p,if,the,supplied,wac,has,no,parent,or,its,parent,is,not,a,wac,the,supplied,wac,will,be,configured,as,the,root,wac,see,em,root,wac,configuration,em,below,p,otherwise,the,context,hierarchy,of,the,supplied,wac,will,be,traversed,to,find,the,top,most,wac,i,e,the,root,and,the,link,servlet,context,of,the,root,wac,will,be,set,as,the,code,servlet,context,for,the,supplied,wac,h4,root,wac,configuration,h4,ul,li,the,resource,base,path,is,retrieved,from,the,supplied,code,web,merged,context,configuration,li,li,a,link,resource,loader,is,instantiated,for,the,link,mock,servlet,context,if,the,resource,base,path,is,prefixed,with,code,classpath,a,link,default,resource,loader,will,be,used,otherwise,a,link,file,system,resource,loader,will,be,used,li,li,a,code,mock,servlet,context,will,be,created,using,the,resource,base,path,and,resource,loader,li,li,the,supplied,link,generic,web,application,context,is,then,stored,in,the,code,mock,servlet,context,under,the,link,web,application,context,key,li,li,finally,the,code,mock,servlet,context,is,set,in,the,code,web,application,context,li,param,context,the,web,application,context,for,which,to,configure,the,web,resources,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context;protected,void,configure,web,resources,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,application,context,parent,context,get,parent,if,parent,null,parent,instanceof,web,application,context,string,resource,base,path,web,merged,config,get,resource,base,path,resource,loader,resource,loader,resource,base,path,starts,with,resource,loader,new,default,resource,loader,new,file,system,resource,loader,servlet,context,servlet,context,new,mock,servlet,context,resource,base,path,resource,loader,servlet,context,set,attribute,web,application,context,context,context,set,servlet,context,servlet,context,else,servlet,context,servlet,context,null,while,parent,null,if,parent,instanceof,web,application,context,parent,get,parent,instanceof,web,application,context,servlet,context,web,application,context,parent,get,servlet,context,break,parent,parent,get,parent,assert,state,servlet,context,null,failed,to,find,root,web,application,context,in,the,context,hierarchy,context,set,servlet,context,servlet,context
AbstractGenericWebContextLoader -> protected void configureWebResources(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig);1396374528;Configures web resources for the supplied web application context (WAC).__<h4>Implementation Details</h4>__<p>If the supplied WAC has no parent or its parent is not a WAC, the_supplied WAC will be configured as the Root WAC (see "<em>Root WAC_Configuration</em>" below).__<p>Otherwise the context hierarchy of the supplied WAC will be traversed_to find the top-most WAC (i.e., the root)_ and the {@link ServletContext}_of the Root WAC will be set as the {@code ServletContext} for the supplied_WAC.__<h4>Root WAC Configuration</h4>__<ul>_<li>The resource base path is retrieved from the supplied_{@code WebMergedContextConfiguration}.</li>_<li>A {@link ResourceLoader} is instantiated for the {@link MockServletContext}:_if the resource base path is prefixed with "{@code classpath:}", a_{@link DefaultResourceLoader} will be used_ otherwise, a_{@link FileSystemResourceLoader} will be used.</li>_<li>A {@code MockServletContext} will be created using the resource base_path and resource loader.</li>_<li>The supplied {@link GenericWebApplicationContext} is then stored in_the {@code MockServletContext} under the_{@link WebApplicationContext#ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE} key.</li>_<li>Finally, the {@code MockServletContext} is set in the_{@code WebApplicationContext}.</li>__@param context the web application context for which to configure the web_resources_@param webMergedConfig the merged context configuration to use to load the_web application context;protected void configureWebResources(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig) {__		ApplicationContext parent = context.getParent()___		_		_		if (parent == null || (!(parent instanceof WebApplicationContext))) {_			String resourceBasePath = webMergedConfig.getResourceBasePath()__			ResourceLoader resourceLoader = resourceBasePath.startsWith(ResourceLoader.CLASSPATH_URL_PREFIX) ? new DefaultResourceLoader()_					: new FileSystemResourceLoader()___			ServletContext servletContext = new MockServletContext(resourceBasePath, resourceLoader)__			servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, context)__			context.setServletContext(servletContext)__		}_		else {_			ServletContext servletContext = null___			_			while (parent != null) {_				if (parent instanceof WebApplicationContext && !(parent.getParent() instanceof WebApplicationContext)) {_					servletContext = ((WebApplicationContext) parent).getServletContext()__					break__				}_				parent = parent.getParent()__			}_			Assert.state(servletContext != null, "Failed to find Root WebApplicationContext in the context hierarchy")__			context.setServletContext(servletContext)__		}_	};configures,web,resources,for,the,supplied,web,application,context,wac,h4,implementation,details,h4,p,if,the,supplied,wac,has,no,parent,or,its,parent,is,not,a,wac,the,supplied,wac,will,be,configured,as,the,root,wac,see,em,root,wac,configuration,em,below,p,otherwise,the,context,hierarchy,of,the,supplied,wac,will,be,traversed,to,find,the,top,most,wac,i,e,the,root,and,the,link,servlet,context,of,the,root,wac,will,be,set,as,the,code,servlet,context,for,the,supplied,wac,h4,root,wac,configuration,h4,ul,li,the,resource,base,path,is,retrieved,from,the,supplied,code,web,merged,context,configuration,li,li,a,link,resource,loader,is,instantiated,for,the,link,mock,servlet,context,if,the,resource,base,path,is,prefixed,with,code,classpath,a,link,default,resource,loader,will,be,used,otherwise,a,link,file,system,resource,loader,will,be,used,li,li,a,code,mock,servlet,context,will,be,created,using,the,resource,base,path,and,resource,loader,li,li,the,supplied,link,generic,web,application,context,is,then,stored,in,the,code,mock,servlet,context,under,the,link,web,application,context,key,li,li,finally,the,code,mock,servlet,context,is,set,in,the,code,web,application,context,li,param,context,the,web,application,context,for,which,to,configure,the,web,resources,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context;protected,void,configure,web,resources,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,application,context,parent,context,get,parent,if,parent,null,parent,instanceof,web,application,context,string,resource,base,path,web,merged,config,get,resource,base,path,resource,loader,resource,loader,resource,base,path,starts,with,resource,loader,new,default,resource,loader,new,file,system,resource,loader,servlet,context,servlet,context,new,mock,servlet,context,resource,base,path,resource,loader,servlet,context,set,attribute,web,application,context,context,context,set,servlet,context,servlet,context,else,servlet,context,servlet,context,null,while,parent,null,if,parent,instanceof,web,application,context,parent,get,parent,instanceof,web,application,context,servlet,context,web,application,context,parent,get,servlet,context,break,parent,parent,get,parent,assert,state,servlet,context,null,failed,to,find,root,web,application,context,in,the,context,hierarchy,context,set,servlet,context,servlet,context
AbstractGenericWebContextLoader -> protected void configureWebResources(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig);1413848647;Configures web resources for the supplied web application context (WAC).__<h4>Implementation Details</h4>__<p>If the supplied WAC has no parent or its parent is not a WAC, the_supplied WAC will be configured as the Root WAC (see "<em>Root WAC_Configuration</em>" below).__<p>Otherwise the context hierarchy of the supplied WAC will be traversed_to find the top-most WAC (i.e., the root)_ and the {@link ServletContext}_of the Root WAC will be set as the {@code ServletContext} for the supplied_WAC.__<h4>Root WAC Configuration</h4>__<ul>_<li>The resource base path is retrieved from the supplied_{@code WebMergedContextConfiguration}.</li>_<li>A {@link ResourceLoader} is instantiated for the {@link MockServletContext}:_if the resource base path is prefixed with "{@code classpath:}", a_{@link DefaultResourceLoader} will be used_ otherwise, a_{@link FileSystemResourceLoader} will be used.</li>_<li>A {@code MockServletContext} will be created using the resource base_path and resource loader.</li>_<li>The supplied {@link GenericWebApplicationContext} is then stored in_the {@code MockServletContext} under the_{@link WebApplicationContext#ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE} key.</li>_<li>Finally, the {@code MockServletContext} is set in the_{@code WebApplicationContext}.</li>__@param context the web application context for which to configure the web_resources_@param webMergedConfig the merged context configuration to use to load the_web application context;protected void configureWebResources(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig) {__		ApplicationContext parent = context.getParent()___		_		_		if (parent == null || (!(parent instanceof WebApplicationContext))) {_			String resourceBasePath = webMergedConfig.getResourceBasePath()__			ResourceLoader resourceLoader = resourceBasePath.startsWith(ResourceLoader.CLASSPATH_URL_PREFIX) ? new DefaultResourceLoader()_					: new FileSystemResourceLoader()___			ServletContext servletContext = new MockServletContext(resourceBasePath, resourceLoader)__			servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, context)__			context.setServletContext(servletContext)__		}_		else {_			ServletContext servletContext = null___			_			while (parent != null) {_				if (parent instanceof WebApplicationContext && !(parent.getParent() instanceof WebApplicationContext)) {_					servletContext = ((WebApplicationContext) parent).getServletContext()__					break__				}_				parent = parent.getParent()__			}_			Assert.state(servletContext != null, "Failed to find Root WebApplicationContext in the context hierarchy")__			context.setServletContext(servletContext)__		}_	};configures,web,resources,for,the,supplied,web,application,context,wac,h4,implementation,details,h4,p,if,the,supplied,wac,has,no,parent,or,its,parent,is,not,a,wac,the,supplied,wac,will,be,configured,as,the,root,wac,see,em,root,wac,configuration,em,below,p,otherwise,the,context,hierarchy,of,the,supplied,wac,will,be,traversed,to,find,the,top,most,wac,i,e,the,root,and,the,link,servlet,context,of,the,root,wac,will,be,set,as,the,code,servlet,context,for,the,supplied,wac,h4,root,wac,configuration,h4,ul,li,the,resource,base,path,is,retrieved,from,the,supplied,code,web,merged,context,configuration,li,li,a,link,resource,loader,is,instantiated,for,the,link,mock,servlet,context,if,the,resource,base,path,is,prefixed,with,code,classpath,a,link,default,resource,loader,will,be,used,otherwise,a,link,file,system,resource,loader,will,be,used,li,li,a,code,mock,servlet,context,will,be,created,using,the,resource,base,path,and,resource,loader,li,li,the,supplied,link,generic,web,application,context,is,then,stored,in,the,code,mock,servlet,context,under,the,link,web,application,context,key,li,li,finally,the,code,mock,servlet,context,is,set,in,the,code,web,application,context,li,param,context,the,web,application,context,for,which,to,configure,the,web,resources,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context;protected,void,configure,web,resources,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,application,context,parent,context,get,parent,if,parent,null,parent,instanceof,web,application,context,string,resource,base,path,web,merged,config,get,resource,base,path,resource,loader,resource,loader,resource,base,path,starts,with,resource,loader,new,default,resource,loader,new,file,system,resource,loader,servlet,context,servlet,context,new,mock,servlet,context,resource,base,path,resource,loader,servlet,context,set,attribute,web,application,context,context,context,set,servlet,context,servlet,context,else,servlet,context,servlet,context,null,while,parent,null,if,parent,instanceof,web,application,context,parent,get,parent,instanceof,web,application,context,servlet,context,web,application,context,parent,get,servlet,context,break,parent,parent,get,parent,assert,state,servlet,context,null,failed,to,find,root,web,application,context,in,the,context,hierarchy,context,set,servlet,context,servlet,context
AbstractGenericWebContextLoader -> protected void configureWebResources(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig);1457727806;Configures web resources for the supplied web application context (WAC).__<h4>Implementation Details</h4>__<p>If the supplied WAC has no parent or its parent is not a WAC, the_supplied WAC will be configured as the Root WAC (see "<em>Root WAC_Configuration</em>" below).__<p>Otherwise the context hierarchy of the supplied WAC will be traversed_to find the top-most WAC (i.e., the root)_ and the {@link ServletContext}_of the Root WAC will be set as the {@code ServletContext} for the supplied_WAC.__<h4>Root WAC Configuration</h4>__<ul>_<li>The resource base path is retrieved from the supplied_{@code WebMergedContextConfiguration}.</li>_<li>A {@link ResourceLoader} is instantiated for the {@link MockServletContext}:_if the resource base path is prefixed with "{@code classpath:}", a_{@link DefaultResourceLoader} will be used_ otherwise, a_{@link FileSystemResourceLoader} will be used.</li>_<li>A {@code MockServletContext} will be created using the resource base_path and resource loader.</li>_<li>The supplied {@link GenericWebApplicationContext} is then stored in_the {@code MockServletContext} under the_{@link WebApplicationContext#ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE} key.</li>_<li>Finally, the {@code MockServletContext} is set in the_{@code WebApplicationContext}.</li>__@param context the web application context for which to configure the web_resources_@param webMergedConfig the merged context configuration to use to load the_web application context;protected void configureWebResources(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig) {__		ApplicationContext parent = context.getParent()___		_		_		if (parent == null || (!(parent instanceof WebApplicationContext))) {_			String resourceBasePath = webMergedConfig.getResourceBasePath()__			ResourceLoader resourceLoader = resourceBasePath.startsWith(ResourceLoader.CLASSPATH_URL_PREFIX) ? new DefaultResourceLoader()_					: new FileSystemResourceLoader()___			ServletContext servletContext = new MockServletContext(resourceBasePath, resourceLoader)__			servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, context)__			context.setServletContext(servletContext)__		}_		else {_			ServletContext servletContext = null___			_			while (parent != null) {_				if (parent instanceof WebApplicationContext && !(parent.getParent() instanceof WebApplicationContext)) {_					servletContext = ((WebApplicationContext) parent).getServletContext()__					break__				}_				parent = parent.getParent()__			}_			Assert.state(servletContext != null, "Failed to find Root WebApplicationContext in the context hierarchy")__			context.setServletContext(servletContext)__		}_	};configures,web,resources,for,the,supplied,web,application,context,wac,h4,implementation,details,h4,p,if,the,supplied,wac,has,no,parent,or,its,parent,is,not,a,wac,the,supplied,wac,will,be,configured,as,the,root,wac,see,em,root,wac,configuration,em,below,p,otherwise,the,context,hierarchy,of,the,supplied,wac,will,be,traversed,to,find,the,top,most,wac,i,e,the,root,and,the,link,servlet,context,of,the,root,wac,will,be,set,as,the,code,servlet,context,for,the,supplied,wac,h4,root,wac,configuration,h4,ul,li,the,resource,base,path,is,retrieved,from,the,supplied,code,web,merged,context,configuration,li,li,a,link,resource,loader,is,instantiated,for,the,link,mock,servlet,context,if,the,resource,base,path,is,prefixed,with,code,classpath,a,link,default,resource,loader,will,be,used,otherwise,a,link,file,system,resource,loader,will,be,used,li,li,a,code,mock,servlet,context,will,be,created,using,the,resource,base,path,and,resource,loader,li,li,the,supplied,link,generic,web,application,context,is,then,stored,in,the,code,mock,servlet,context,under,the,link,web,application,context,key,li,li,finally,the,code,mock,servlet,context,is,set,in,the,code,web,application,context,li,param,context,the,web,application,context,for,which,to,configure,the,web,resources,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context;protected,void,configure,web,resources,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,application,context,parent,context,get,parent,if,parent,null,parent,instanceof,web,application,context,string,resource,base,path,web,merged,config,get,resource,base,path,resource,loader,resource,loader,resource,base,path,starts,with,resource,loader,new,default,resource,loader,new,file,system,resource,loader,servlet,context,servlet,context,new,mock,servlet,context,resource,base,path,resource,loader,servlet,context,set,attribute,web,application,context,context,context,set,servlet,context,servlet,context,else,servlet,context,servlet,context,null,while,parent,null,if,parent,instanceof,web,application,context,parent,get,parent,instanceof,web,application,context,servlet,context,web,application,context,parent,get,servlet,context,break,parent,parent,get,parent,assert,state,servlet,context,null,failed,to,find,root,web,application,context,in,the,context,hierarchy,context,set,servlet,context,servlet,context
AbstractGenericWebContextLoader -> protected void configureWebResources(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig);1468334463;Configures web resources for the supplied web application context (WAC).__<h4>Implementation Details</h4>__<p>If the supplied WAC has no parent or its parent is not a WAC, the_supplied WAC will be configured as the Root WAC (see "<em>Root WAC_Configuration</em>" below).__<p>Otherwise the context hierarchy of the supplied WAC will be traversed_to find the top-most WAC (i.e., the root)_ and the {@link ServletContext}_of the Root WAC will be set as the {@code ServletContext} for the supplied_WAC.__<h4>Root WAC Configuration</h4>__<ul>_<li>The resource base path is retrieved from the supplied_{@code WebMergedContextConfiguration}.</li>_<li>A {@link ResourceLoader} is instantiated for the {@link MockServletContext}:_if the resource base path is prefixed with "{@code classpath:}", a_{@link DefaultResourceLoader} will be used_ otherwise, a_{@link FileSystemResourceLoader} will be used.</li>_<li>A {@code MockServletContext} will be created using the resource base_path and resource loader.</li>_<li>The supplied {@link GenericWebApplicationContext} is then stored in_the {@code MockServletContext} under the_{@link WebApplicationContext#ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE} key.</li>_<li>Finally, the {@code MockServletContext} is set in the_{@code WebApplicationContext}.</li>__@param context the web application context for which to configure the web_resources_@param webMergedConfig the merged context configuration to use to load the_web application context;protected void configureWebResources(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig) {__		ApplicationContext parent = context.getParent()___		_		_		if (parent == null || (!(parent instanceof WebApplicationContext))) {_			String resourceBasePath = webMergedConfig.getResourceBasePath()__			ResourceLoader resourceLoader = resourceBasePath.startsWith(ResourceLoader.CLASSPATH_URL_PREFIX) ? new DefaultResourceLoader()_					: new FileSystemResourceLoader()___			ServletContext servletContext = new MockServletContext(resourceBasePath, resourceLoader)__			servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, context)__			context.setServletContext(servletContext)__		}_		else {_			ServletContext servletContext = null___			_			while (parent != null) {_				if (parent instanceof WebApplicationContext && !(parent.getParent() instanceof WebApplicationContext)) {_					servletContext = ((WebApplicationContext) parent).getServletContext()__					break__				}_				parent = parent.getParent()__			}_			Assert.state(servletContext != null, "Failed to find Root WebApplicationContext in the context hierarchy")__			context.setServletContext(servletContext)__		}_	};configures,web,resources,for,the,supplied,web,application,context,wac,h4,implementation,details,h4,p,if,the,supplied,wac,has,no,parent,or,its,parent,is,not,a,wac,the,supplied,wac,will,be,configured,as,the,root,wac,see,em,root,wac,configuration,em,below,p,otherwise,the,context,hierarchy,of,the,supplied,wac,will,be,traversed,to,find,the,top,most,wac,i,e,the,root,and,the,link,servlet,context,of,the,root,wac,will,be,set,as,the,code,servlet,context,for,the,supplied,wac,h4,root,wac,configuration,h4,ul,li,the,resource,base,path,is,retrieved,from,the,supplied,code,web,merged,context,configuration,li,li,a,link,resource,loader,is,instantiated,for,the,link,mock,servlet,context,if,the,resource,base,path,is,prefixed,with,code,classpath,a,link,default,resource,loader,will,be,used,otherwise,a,link,file,system,resource,loader,will,be,used,li,li,a,code,mock,servlet,context,will,be,created,using,the,resource,base,path,and,resource,loader,li,li,the,supplied,link,generic,web,application,context,is,then,stored,in,the,code,mock,servlet,context,under,the,link,web,application,context,key,li,li,finally,the,code,mock,servlet,context,is,set,in,the,code,web,application,context,li,param,context,the,web,application,context,for,which,to,configure,the,web,resources,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context;protected,void,configure,web,resources,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,application,context,parent,context,get,parent,if,parent,null,parent,instanceof,web,application,context,string,resource,base,path,web,merged,config,get,resource,base,path,resource,loader,resource,loader,resource,base,path,starts,with,resource,loader,new,default,resource,loader,new,file,system,resource,loader,servlet,context,servlet,context,new,mock,servlet,context,resource,base,path,resource,loader,servlet,context,set,attribute,web,application,context,context,context,set,servlet,context,servlet,context,else,servlet,context,servlet,context,null,while,parent,null,if,parent,instanceof,web,application,context,parent,get,parent,instanceof,web,application,context,servlet,context,web,application,context,parent,get,servlet,context,break,parent,parent,get,parent,assert,state,servlet,context,null,failed,to,find,root,web,application,context,in,the,context,hierarchy,context,set,servlet,context,servlet,context
AbstractGenericWebContextLoader -> protected void configureWebResources(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig);1516617801;Configures web resources for the supplied web application context (WAC)._<h4>Implementation Details</h4>_<p>If the supplied WAC has no parent or its parent is not a WAC, the_supplied WAC will be configured as the Root WAC (see "<em>Root WAC_Configuration</em>" below)._<p>Otherwise the context hierarchy of the supplied WAC will be traversed_to find the top-most WAC (i.e., the root)_ and the {@link ServletContext}_of the Root WAC will be set as the {@code ServletContext} for the supplied_WAC._<h4>Root WAC Configuration</h4>_<ul>_<li>The resource base path is retrieved from the supplied_{@code WebMergedContextConfiguration}.</li>_<li>A {@link ResourceLoader} is instantiated for the {@link MockServletContext}:_if the resource base path is prefixed with "{@code classpath:}", a_{@link DefaultResourceLoader} will be used_ otherwise, a_{@link FileSystemResourceLoader} will be used.</li>_<li>A {@code MockServletContext} will be created using the resource base_path and resource loader.</li>_<li>The supplied {@link GenericWebApplicationContext} is then stored in_the {@code MockServletContext} under the_{@link WebApplicationContext#ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE} key.</li>_<li>Finally, the {@code MockServletContext} is set in the_{@code WebApplicationContext}.</li>_@param context the web application context for which to configure the web resources_@param webMergedConfig the merged context configuration to use to load the web application context;protected void configureWebResources(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig) {__		ApplicationContext parent = context.getParent()___		_		_		if (parent == null || (!(parent instanceof WebApplicationContext))) {_			String resourceBasePath = webMergedConfig.getResourceBasePath()__			ResourceLoader resourceLoader = (resourceBasePath.startsWith(ResourceLoader.CLASSPATH_URL_PREFIX) ?_					new DefaultResourceLoader() : new FileSystemResourceLoader())__			ServletContext servletContext = new MockServletContext(resourceBasePath, resourceLoader)__			servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, context)__			context.setServletContext(servletContext)__		}_		else {_			ServletContext servletContext = null___			_			while (parent != null) {_				if (parent instanceof WebApplicationContext && !(parent.getParent() instanceof WebApplicationContext)) {_					servletContext = ((WebApplicationContext) parent).getServletContext()__					break__				}_				parent = parent.getParent()__			}_			Assert.state(servletContext != null, "Failed to find Root WebApplicationContext in the context hierarchy")__			context.setServletContext(servletContext)__		}_	};configures,web,resources,for,the,supplied,web,application,context,wac,h4,implementation,details,h4,p,if,the,supplied,wac,has,no,parent,or,its,parent,is,not,a,wac,the,supplied,wac,will,be,configured,as,the,root,wac,see,em,root,wac,configuration,em,below,p,otherwise,the,context,hierarchy,of,the,supplied,wac,will,be,traversed,to,find,the,top,most,wac,i,e,the,root,and,the,link,servlet,context,of,the,root,wac,will,be,set,as,the,code,servlet,context,for,the,supplied,wac,h4,root,wac,configuration,h4,ul,li,the,resource,base,path,is,retrieved,from,the,supplied,code,web,merged,context,configuration,li,li,a,link,resource,loader,is,instantiated,for,the,link,mock,servlet,context,if,the,resource,base,path,is,prefixed,with,code,classpath,a,link,default,resource,loader,will,be,used,otherwise,a,link,file,system,resource,loader,will,be,used,li,li,a,code,mock,servlet,context,will,be,created,using,the,resource,base,path,and,resource,loader,li,li,the,supplied,link,generic,web,application,context,is,then,stored,in,the,code,mock,servlet,context,under,the,link,web,application,context,key,li,li,finally,the,code,mock,servlet,context,is,set,in,the,code,web,application,context,li,param,context,the,web,application,context,for,which,to,configure,the,web,resources,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context;protected,void,configure,web,resources,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,application,context,parent,context,get,parent,if,parent,null,parent,instanceof,web,application,context,string,resource,base,path,web,merged,config,get,resource,base,path,resource,loader,resource,loader,resource,base,path,starts,with,resource,loader,new,default,resource,loader,new,file,system,resource,loader,servlet,context,servlet,context,new,mock,servlet,context,resource,base,path,resource,loader,servlet,context,set,attribute,web,application,context,context,context,set,servlet,context,servlet,context,else,servlet,context,servlet,context,null,while,parent,null,if,parent,instanceof,web,application,context,parent,get,parent,instanceof,web,application,context,servlet,context,web,application,context,parent,get,servlet,context,break,parent,parent,get,parent,assert,state,servlet,context,null,failed,to,find,root,web,application,context,in,the,context,hierarchy,context,set,servlet,context,servlet,context
AbstractGenericWebContextLoader -> protected void configureWebResources(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig);1516653284;Configures web resources for the supplied web application context (WAC)._<h4>Implementation Details</h4>_<p>If the supplied WAC has no parent or its parent is not a WAC, the_supplied WAC will be configured as the Root WAC (see "<em>Root WAC_Configuration</em>" below)._<p>Otherwise the context hierarchy of the supplied WAC will be traversed_to find the top-most WAC (i.e., the root)_ and the {@link ServletContext}_of the Root WAC will be set as the {@code ServletContext} for the supplied_WAC._<h4>Root WAC Configuration</h4>_<ul>_<li>The resource base path is retrieved from the supplied_{@code WebMergedContextConfiguration}.</li>_<li>A {@link ResourceLoader} is instantiated for the {@link MockServletContext}:_if the resource base path is prefixed with "{@code classpath:}", a_{@link DefaultResourceLoader} will be used_ otherwise, a_{@link FileSystemResourceLoader} will be used.</li>_<li>A {@code MockServletContext} will be created using the resource base_path and resource loader.</li>_<li>The supplied {@link GenericWebApplicationContext} is then stored in_the {@code MockServletContext} under the_{@link WebApplicationContext#ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE} key.</li>_<li>Finally, the {@code MockServletContext} is set in the_{@code WebApplicationContext}.</li>_@param context the web application context for which to configure the web resources_@param webMergedConfig the merged context configuration to use to load the web application context;protected void configureWebResources(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig) {__		ApplicationContext parent = context.getParent()___		_		_		if (parent == null || (!(parent instanceof WebApplicationContext))) {_			String resourceBasePath = webMergedConfig.getResourceBasePath()__			ResourceLoader resourceLoader = (resourceBasePath.startsWith(ResourceLoader.CLASSPATH_URL_PREFIX) ?_					new DefaultResourceLoader() : new FileSystemResourceLoader())__			ServletContext servletContext = new MockServletContext(resourceBasePath, resourceLoader)__			servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, context)__			context.setServletContext(servletContext)__		}_		else {_			ServletContext servletContext = null__			_			while (parent != null) {_				if (parent instanceof WebApplicationContext && !(parent.getParent() instanceof WebApplicationContext)) {_					servletContext = ((WebApplicationContext) parent).getServletContext()__					break__				}_				parent = parent.getParent()__			}_			Assert.state(servletContext != null, "Failed to find root WebApplicationContext in the context hierarchy")__			context.setServletContext(servletContext)__		}_	};configures,web,resources,for,the,supplied,web,application,context,wac,h4,implementation,details,h4,p,if,the,supplied,wac,has,no,parent,or,its,parent,is,not,a,wac,the,supplied,wac,will,be,configured,as,the,root,wac,see,em,root,wac,configuration,em,below,p,otherwise,the,context,hierarchy,of,the,supplied,wac,will,be,traversed,to,find,the,top,most,wac,i,e,the,root,and,the,link,servlet,context,of,the,root,wac,will,be,set,as,the,code,servlet,context,for,the,supplied,wac,h4,root,wac,configuration,h4,ul,li,the,resource,base,path,is,retrieved,from,the,supplied,code,web,merged,context,configuration,li,li,a,link,resource,loader,is,instantiated,for,the,link,mock,servlet,context,if,the,resource,base,path,is,prefixed,with,code,classpath,a,link,default,resource,loader,will,be,used,otherwise,a,link,file,system,resource,loader,will,be,used,li,li,a,code,mock,servlet,context,will,be,created,using,the,resource,base,path,and,resource,loader,li,li,the,supplied,link,generic,web,application,context,is,then,stored,in,the,code,mock,servlet,context,under,the,link,web,application,context,key,li,li,finally,the,code,mock,servlet,context,is,set,in,the,code,web,application,context,li,param,context,the,web,application,context,for,which,to,configure,the,web,resources,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context;protected,void,configure,web,resources,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,application,context,parent,context,get,parent,if,parent,null,parent,instanceof,web,application,context,string,resource,base,path,web,merged,config,get,resource,base,path,resource,loader,resource,loader,resource,base,path,starts,with,resource,loader,new,default,resource,loader,new,file,system,resource,loader,servlet,context,servlet,context,new,mock,servlet,context,resource,base,path,resource,loader,servlet,context,set,attribute,web,application,context,context,context,set,servlet,context,servlet,context,else,servlet,context,servlet,context,null,while,parent,null,if,parent,instanceof,web,application,context,parent,get,parent,instanceof,web,application,context,servlet,context,web,application,context,parent,get,servlet,context,break,parent,parent,get,parent,assert,state,servlet,context,null,failed,to,find,root,web,application,context,in,the,context,hierarchy,context,set,servlet,context,servlet,context
AbstractGenericWebContextLoader -> protected void configureWebResources(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig);1530174524;Configures web resources for the supplied web application context (WAC)._<h4>Implementation Details</h4>_<p>If the supplied WAC has no parent or its parent is not a WAC, the_supplied WAC will be configured as the Root WAC (see "<em>Root WAC_Configuration</em>" below)._<p>Otherwise the context hierarchy of the supplied WAC will be traversed_to find the top-most WAC (i.e., the root)_ and the {@link ServletContext}_of the Root WAC will be set as the {@code ServletContext} for the supplied_WAC._<h4>Root WAC Configuration</h4>_<ul>_<li>The resource base path is retrieved from the supplied_{@code WebMergedContextConfiguration}.</li>_<li>A {@link ResourceLoader} is instantiated for the {@link MockServletContext}:_if the resource base path is prefixed with "{@code classpath:}", a_{@link DefaultResourceLoader} will be used_ otherwise, a_{@link FileSystemResourceLoader} will be used.</li>_<li>A {@code MockServletContext} will be created using the resource base_path and resource loader.</li>_<li>The supplied {@link GenericWebApplicationContext} is then stored in_the {@code MockServletContext} under the_{@link WebApplicationContext#ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE} key.</li>_<li>Finally, the {@code MockServletContext} is set in the_{@code WebApplicationContext}.</li>_</ul>_@param context the web application context for which to configure the web resources_@param webMergedConfig the merged context configuration to use to load the web application context;protected void configureWebResources(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig) {__		ApplicationContext parent = context.getParent()___		_		_		if (parent == null || (!(parent instanceof WebApplicationContext))) {_			String resourceBasePath = webMergedConfig.getResourceBasePath()__			ResourceLoader resourceLoader = (resourceBasePath.startsWith(ResourceLoader.CLASSPATH_URL_PREFIX) ?_					new DefaultResourceLoader() : new FileSystemResourceLoader())__			ServletContext servletContext = new MockServletContext(resourceBasePath, resourceLoader)__			servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, context)__			context.setServletContext(servletContext)__		}_		else {_			ServletContext servletContext = null__			_			while (parent != null) {_				if (parent instanceof WebApplicationContext && !(parent.getParent() instanceof WebApplicationContext)) {_					servletContext = ((WebApplicationContext) parent).getServletContext()__					break__				}_				parent = parent.getParent()__			}_			Assert.state(servletContext != null, "Failed to find root WebApplicationContext in the context hierarchy")__			context.setServletContext(servletContext)__		}_	};configures,web,resources,for,the,supplied,web,application,context,wac,h4,implementation,details,h4,p,if,the,supplied,wac,has,no,parent,or,its,parent,is,not,a,wac,the,supplied,wac,will,be,configured,as,the,root,wac,see,em,root,wac,configuration,em,below,p,otherwise,the,context,hierarchy,of,the,supplied,wac,will,be,traversed,to,find,the,top,most,wac,i,e,the,root,and,the,link,servlet,context,of,the,root,wac,will,be,set,as,the,code,servlet,context,for,the,supplied,wac,h4,root,wac,configuration,h4,ul,li,the,resource,base,path,is,retrieved,from,the,supplied,code,web,merged,context,configuration,li,li,a,link,resource,loader,is,instantiated,for,the,link,mock,servlet,context,if,the,resource,base,path,is,prefixed,with,code,classpath,a,link,default,resource,loader,will,be,used,otherwise,a,link,file,system,resource,loader,will,be,used,li,li,a,code,mock,servlet,context,will,be,created,using,the,resource,base,path,and,resource,loader,li,li,the,supplied,link,generic,web,application,context,is,then,stored,in,the,code,mock,servlet,context,under,the,link,web,application,context,key,li,li,finally,the,code,mock,servlet,context,is,set,in,the,code,web,application,context,li,ul,param,context,the,web,application,context,for,which,to,configure,the,web,resources,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context;protected,void,configure,web,resources,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,application,context,parent,context,get,parent,if,parent,null,parent,instanceof,web,application,context,string,resource,base,path,web,merged,config,get,resource,base,path,resource,loader,resource,loader,resource,base,path,starts,with,resource,loader,new,default,resource,loader,new,file,system,resource,loader,servlet,context,servlet,context,new,mock,servlet,context,resource,base,path,resource,loader,servlet,context,set,attribute,web,application,context,context,context,set,servlet,context,servlet,context,else,servlet,context,servlet,context,null,while,parent,null,if,parent,instanceof,web,application,context,parent,get,parent,instanceof,web,application,context,servlet,context,web,application,context,parent,get,servlet,context,break,parent,parent,get,parent,assert,state,servlet,context,null,failed,to,find,root,web,application,context,in,the,context,hierarchy,context,set,servlet,context,servlet,context
AbstractGenericWebContextLoader -> protected void configureWebResources(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig);1549646187;Configures web resources for the supplied web application context (WAC)._<h4>Implementation Details</h4>_<p>If the supplied WAC has no parent or its parent is not a WAC, the_supplied WAC will be configured as the Root WAC (see "<em>Root WAC_Configuration</em>" below)._<p>Otherwise the context hierarchy of the supplied WAC will be traversed_to find the top-most WAC (i.e., the root)_ and the {@link ServletContext}_of the Root WAC will be set as the {@code ServletContext} for the supplied_WAC._<h4>Root WAC Configuration</h4>_<ul>_<li>The resource base path is retrieved from the supplied_{@code WebMergedContextConfiguration}.</li>_<li>A {@link ResourceLoader} is instantiated for the {@link MockServletContext}:_if the resource base path is prefixed with "{@code classpath:}", a_{@link DefaultResourceLoader} will be used_ otherwise, a_{@link FileSystemResourceLoader} will be used.</li>_<li>A {@code MockServletContext} will be created using the resource base_path and resource loader.</li>_<li>The supplied {@link GenericWebApplicationContext} is then stored in_the {@code MockServletContext} under the_{@link WebApplicationContext#ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE} key.</li>_<li>Finally, the {@code MockServletContext} is set in the_{@code WebApplicationContext}.</li>_</ul>_@param context the web application context for which to configure the web resources_@param webMergedConfig the merged context configuration to use to load the web application context;protected void configureWebResources(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig) {__		ApplicationContext parent = context.getParent()___		_		_		if (parent == null || (!(parent instanceof WebApplicationContext))) {_			String resourceBasePath = webMergedConfig.getResourceBasePath()__			ResourceLoader resourceLoader = (resourceBasePath.startsWith(ResourceLoader.CLASSPATH_URL_PREFIX) ?_					new DefaultResourceLoader() : new FileSystemResourceLoader())__			ServletContext servletContext = new MockServletContext(resourceBasePath, resourceLoader)__			servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, context)__			context.setServletContext(servletContext)__		}_		else {_			ServletContext servletContext = null__			_			while (parent != null) {_				if (parent instanceof WebApplicationContext && !(parent.getParent() instanceof WebApplicationContext)) {_					servletContext = ((WebApplicationContext) parent).getServletContext()__					break__				}_				parent = parent.getParent()__			}_			Assert.state(servletContext != null, "Failed to find root WebApplicationContext in the context hierarchy")__			context.setServletContext(servletContext)__		}_	};configures,web,resources,for,the,supplied,web,application,context,wac,h4,implementation,details,h4,p,if,the,supplied,wac,has,no,parent,or,its,parent,is,not,a,wac,the,supplied,wac,will,be,configured,as,the,root,wac,see,em,root,wac,configuration,em,below,p,otherwise,the,context,hierarchy,of,the,supplied,wac,will,be,traversed,to,find,the,top,most,wac,i,e,the,root,and,the,link,servlet,context,of,the,root,wac,will,be,set,as,the,code,servlet,context,for,the,supplied,wac,h4,root,wac,configuration,h4,ul,li,the,resource,base,path,is,retrieved,from,the,supplied,code,web,merged,context,configuration,li,li,a,link,resource,loader,is,instantiated,for,the,link,mock,servlet,context,if,the,resource,base,path,is,prefixed,with,code,classpath,a,link,default,resource,loader,will,be,used,otherwise,a,link,file,system,resource,loader,will,be,used,li,li,a,code,mock,servlet,context,will,be,created,using,the,resource,base,path,and,resource,loader,li,li,the,supplied,link,generic,web,application,context,is,then,stored,in,the,code,mock,servlet,context,under,the,link,web,application,context,key,li,li,finally,the,code,mock,servlet,context,is,set,in,the,code,web,application,context,li,ul,param,context,the,web,application,context,for,which,to,configure,the,web,resources,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context;protected,void,configure,web,resources,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,application,context,parent,context,get,parent,if,parent,null,parent,instanceof,web,application,context,string,resource,base,path,web,merged,config,get,resource,base,path,resource,loader,resource,loader,resource,base,path,starts,with,resource,loader,new,default,resource,loader,new,file,system,resource,loader,servlet,context,servlet,context,new,mock,servlet,context,resource,base,path,resource,loader,servlet,context,set,attribute,web,application,context,context,context,set,servlet,context,servlet,context,else,servlet,context,servlet,context,null,while,parent,null,if,parent,instanceof,web,application,context,parent,get,parent,instanceof,web,application,context,servlet,context,web,application,context,parent,get,servlet,context,break,parent,parent,get,parent,assert,state,servlet,context,null,failed,to,find,root,web,application,context,in,the,context,hierarchy,context,set,servlet,context,servlet,context
AbstractGenericWebContextLoader -> protected void validateMergedContextConfiguration(WebMergedContextConfiguration mergedConfig);1396374528;Validate the supplied {@link WebMergedContextConfiguration} with respect to_what this context loader supports._<p>The default implementation is a <em>no-op</em> but can be overridden by_subclasses as appropriate._@param mergedConfig the merged configuration to validate_@throws IllegalStateException if the supplied configuration is not valid_for this context loader_@since 4.0.4;protected void validateMergedContextConfiguration(WebMergedContextConfiguration mergedConfig) {_		_	};validate,the,supplied,link,web,merged,context,configuration,with,respect,to,what,this,context,loader,supports,p,the,default,implementation,is,a,em,no,op,em,but,can,be,overridden,by,subclasses,as,appropriate,param,merged,config,the,merged,configuration,to,validate,throws,illegal,state,exception,if,the,supplied,configuration,is,not,valid,for,this,context,loader,since,4,0,4;protected,void,validate,merged,context,configuration,web,merged,context,configuration,merged,config
AbstractGenericWebContextLoader -> protected void validateMergedContextConfiguration(WebMergedContextConfiguration mergedConfig);1413848647;Validate the supplied {@link WebMergedContextConfiguration} with respect to_what this context loader supports._<p>The default implementation is a <em>no-op</em> but can be overridden by_subclasses as appropriate._@param mergedConfig the merged configuration to validate_@throws IllegalStateException if the supplied configuration is not valid_for this context loader_@since 4.0.4;protected void validateMergedContextConfiguration(WebMergedContextConfiguration mergedConfig) {_		_	};validate,the,supplied,link,web,merged,context,configuration,with,respect,to,what,this,context,loader,supports,p,the,default,implementation,is,a,em,no,op,em,but,can,be,overridden,by,subclasses,as,appropriate,param,merged,config,the,merged,configuration,to,validate,throws,illegal,state,exception,if,the,supplied,configuration,is,not,valid,for,this,context,loader,since,4,0,4;protected,void,validate,merged,context,configuration,web,merged,context,configuration,merged,config
AbstractGenericWebContextLoader -> protected void validateMergedContextConfiguration(WebMergedContextConfiguration mergedConfig);1457727806;Validate the supplied {@link WebMergedContextConfiguration} with respect to_what this context loader supports._<p>The default implementation is a <em>no-op</em> but can be overridden by_subclasses as appropriate._@param mergedConfig the merged configuration to validate_@throws IllegalStateException if the supplied configuration is not valid_for this context loader_@since 4.0.4;protected void validateMergedContextConfiguration(WebMergedContextConfiguration mergedConfig) {_		_	};validate,the,supplied,link,web,merged,context,configuration,with,respect,to,what,this,context,loader,supports,p,the,default,implementation,is,a,em,no,op,em,but,can,be,overridden,by,subclasses,as,appropriate,param,merged,config,the,merged,configuration,to,validate,throws,illegal,state,exception,if,the,supplied,configuration,is,not,valid,for,this,context,loader,since,4,0,4;protected,void,validate,merged,context,configuration,web,merged,context,configuration,merged,config
AbstractGenericWebContextLoader -> protected void validateMergedContextConfiguration(WebMergedContextConfiguration mergedConfig);1468334463;Validate the supplied {@link WebMergedContextConfiguration} with respect to_what this context loader supports._<p>The default implementation is a <em>no-op</em> but can be overridden by_subclasses as appropriate._@param mergedConfig the merged configuration to validate_@throws IllegalStateException if the supplied configuration is not valid_for this context loader_@since 4.0.4;protected void validateMergedContextConfiguration(WebMergedContextConfiguration mergedConfig) {_		_	};validate,the,supplied,link,web,merged,context,configuration,with,respect,to,what,this,context,loader,supports,p,the,default,implementation,is,a,em,no,op,em,but,can,be,overridden,by,subclasses,as,appropriate,param,merged,config,the,merged,configuration,to,validate,throws,illegal,state,exception,if,the,supplied,configuration,is,not,valid,for,this,context,loader,since,4,0,4;protected,void,validate,merged,context,configuration,web,merged,context,configuration,merged,config
AbstractGenericWebContextLoader -> protected void validateMergedContextConfiguration(WebMergedContextConfiguration mergedConfig);1516617801;Validate the supplied {@link WebMergedContextConfiguration} with respect to_what this context loader supports._<p>The default implementation is a <em>no-op</em> but can be overridden by_subclasses as appropriate._@param mergedConfig the merged configuration to validate_@throws IllegalStateException if the supplied configuration is not valid_for this context loader_@since 4.0.4;protected void validateMergedContextConfiguration(WebMergedContextConfiguration mergedConfig) {_		_	};validate,the,supplied,link,web,merged,context,configuration,with,respect,to,what,this,context,loader,supports,p,the,default,implementation,is,a,em,no,op,em,but,can,be,overridden,by,subclasses,as,appropriate,param,merged,config,the,merged,configuration,to,validate,throws,illegal,state,exception,if,the,supplied,configuration,is,not,valid,for,this,context,loader,since,4,0,4;protected,void,validate,merged,context,configuration,web,merged,context,configuration,merged,config
AbstractGenericWebContextLoader -> protected void validateMergedContextConfiguration(WebMergedContextConfiguration mergedConfig);1516653284;Validate the supplied {@link WebMergedContextConfiguration} with respect to_what this context loader supports._<p>The default implementation is a <em>no-op</em> but can be overridden by_subclasses as appropriate._@param mergedConfig the merged configuration to validate_@throws IllegalStateException if the supplied configuration is not valid_for this context loader_@since 4.0.4;protected void validateMergedContextConfiguration(WebMergedContextConfiguration mergedConfig) {_		_	};validate,the,supplied,link,web,merged,context,configuration,with,respect,to,what,this,context,loader,supports,p,the,default,implementation,is,a,em,no,op,em,but,can,be,overridden,by,subclasses,as,appropriate,param,merged,config,the,merged,configuration,to,validate,throws,illegal,state,exception,if,the,supplied,configuration,is,not,valid,for,this,context,loader,since,4,0,4;protected,void,validate,merged,context,configuration,web,merged,context,configuration,merged,config
AbstractGenericWebContextLoader -> protected void validateMergedContextConfiguration(WebMergedContextConfiguration mergedConfig);1530174524;Validate the supplied {@link WebMergedContextConfiguration} with respect to_what this context loader supports._<p>The default implementation is a <em>no-op</em> but can be overridden by_subclasses as appropriate._@param mergedConfig the merged configuration to validate_@throws IllegalStateException if the supplied configuration is not valid_for this context loader_@since 4.0.4;protected void validateMergedContextConfiguration(WebMergedContextConfiguration mergedConfig) {_		_	};validate,the,supplied,link,web,merged,context,configuration,with,respect,to,what,this,context,loader,supports,p,the,default,implementation,is,a,em,no,op,em,but,can,be,overridden,by,subclasses,as,appropriate,param,merged,config,the,merged,configuration,to,validate,throws,illegal,state,exception,if,the,supplied,configuration,is,not,valid,for,this,context,loader,since,4,0,4;protected,void,validate,merged,context,configuration,web,merged,context,configuration,merged,config
AbstractGenericWebContextLoader -> protected void validateMergedContextConfiguration(WebMergedContextConfiguration mergedConfig);1549646187;Validate the supplied {@link WebMergedContextConfiguration} with respect to_what this context loader supports._<p>The default implementation is a <em>no-op</em> but can be overridden by_subclasses as appropriate._@param mergedConfig the merged configuration to validate_@throws IllegalStateException if the supplied configuration is not valid_for this context loader_@since 4.0.4;protected void validateMergedContextConfiguration(WebMergedContextConfiguration mergedConfig) {_		_	};validate,the,supplied,link,web,merged,context,configuration,with,respect,to,what,this,context,loader,supports,p,the,default,implementation,is,a,em,no,op,em,but,can,be,overridden,by,subclasses,as,appropriate,param,merged,config,the,merged,configuration,to,validate,throws,illegal,state,exception,if,the,supplied,configuration,is,not,valid,for,this,context,loader,since,4,0,4;protected,void,validate,merged,context,configuration,web,merged,context,configuration,merged,config
AbstractGenericWebContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory, 			WebMergedContextConfiguration webMergedConfig);1354573750;TODO [SPR-9864] Document customizeBeanFactory().;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory,_			WebMergedContextConfiguration webMergedConfig) {_	};todo,spr,9864,document,customize,bean,factory;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory, 			WebMergedContextConfiguration webMergedConfig);1355187490;Customize the internal bean factory of the {@code WebApplicationContext}_created by this context loader.__<p>The default implementation is empty but can be overridden in subclasses_to customize <code>DefaultListableBeanFactory</code>'s standard settings.__@param beanFactory the bean factory created by this context loader_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory,_			WebMergedContextConfiguration webMergedConfig) {_	};customize,the,internal,bean,factory,of,the,code,web,application,context,created,by,this,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,code,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,context,loader,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory, 			WebMergedContextConfiguration webMergedConfig);1355313310;Customize the internal bean factory of the {@code WebApplicationContext}_created by this context loader.__<p>The default implementation is empty but can be overridden in subclasses_to customize <code>DefaultListableBeanFactory</code>'s standard settings.__@param beanFactory the bean factory created by this context loader_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory,_			WebMergedContextConfiguration webMergedConfig) {_	};customize,the,internal,bean,factory,of,the,code,web,application,context,created,by,this,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,code,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,context,loader,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory, 			WebMergedContextConfiguration webMergedConfig);1356735495;Customize the internal bean factory of the {@code WebApplicationContext}_created by this context loader.__<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings.__@param beanFactory the bean factory created by this context loader_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory,_			WebMergedContextConfiguration webMergedConfig) {_	};customize,the,internal,bean,factory,of,the,code,web,application,context,created,by,this,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,context,loader,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory, 			WebMergedContextConfiguration webMergedConfig);1357119239;Customize the internal bean factory of the {@code WebApplicationContext}_created by this context loader.__<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings.__@param beanFactory the bean factory created by this context loader_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory,_			WebMergedContextConfiguration webMergedConfig) {_	};customize,the,internal,bean,factory,of,the,code,web,application,context,created,by,this,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,context,loader,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory, 			WebMergedContextConfiguration webMergedConfig);1363208506;Customize the internal bean factory of the {@code WebApplicationContext}_created by this context loader.__<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings.__@param beanFactory the bean factory created by this context loader_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory,_			WebMergedContextConfiguration webMergedConfig) {_	};customize,the,internal,bean,factory,of,the,code,web,application,context,created,by,this,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,context,loader,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory, 			WebMergedContextConfiguration webMergedConfig);1368482696;Customize the internal bean factory of the {@code WebApplicationContext}_created by this context loader.__<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings.__@param beanFactory the bean factory created by this context loader_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory,_			WebMergedContextConfiguration webMergedConfig) {_	};customize,the,internal,bean,factory,of,the,code,web,application,context,created,by,this,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,context,loader,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory, 			WebMergedContextConfiguration webMergedConfig);1396374528;Customize the internal bean factory of the {@code WebApplicationContext}_created by this context loader.__<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings.__@param beanFactory the bean factory created by this context loader_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory,_			WebMergedContextConfiguration webMergedConfig) {_	};customize,the,internal,bean,factory,of,the,code,web,application,context,created,by,this,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,context,loader,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory, 			WebMergedContextConfiguration webMergedConfig);1413848647;Customize the internal bean factory of the {@code WebApplicationContext}_created by this context loader.__<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings.__@param beanFactory the bean factory created by this context loader_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory,_			WebMergedContextConfiguration webMergedConfig) {_	};customize,the,internal,bean,factory,of,the,code,web,application,context,created,by,this,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,context,loader,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory, 			WebMergedContextConfiguration webMergedConfig);1457727806;Customize the internal bean factory of the {@code WebApplicationContext}_created by this context loader.__<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings.__@param beanFactory the bean factory created by this context loader_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory,_			WebMergedContextConfiguration webMergedConfig) {_	};customize,the,internal,bean,factory,of,the,code,web,application,context,created,by,this,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,context,loader,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory, 			WebMergedContextConfiguration webMergedConfig);1468334463;Customize the internal bean factory of the {@code WebApplicationContext}_created by this context loader.__<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings.__@param beanFactory the bean factory created by this context loader_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping;protected void customizeBeanFactory(DefaultListableBeanFactory beanFactory,_			WebMergedContextConfiguration webMergedConfig) {_	};customize,the,internal,bean,factory,of,the,code,web,application,context,created,by,this,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,context,loader,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> @Override 	public final ApplicationContext loadContext(String... locations) throws Exception;1356735495;{@code AbstractGenericWebContextLoader} should be used as a_{@link org.springframework.test.context.SmartContextLoader SmartContextLoader},_not as a legacy {@link org.springframework.test.context.ContextLoader ContextLoader}._Consequently, this method is not supported.__@see org.springframework.test.context.ContextLoader#loadContext(java.lang.String[])_@throws UnsupportedOperationException;@Override_	public final ApplicationContext loadContext(String... locations) throws Exception {_		throw new UnsupportedOperationException(_			"AbstractGenericWebContextLoader does not support the loadContext(String... locations) method")__	};code,abstract,generic,web,context,loader,should,be,used,as,a,link,org,springframework,test,context,smart,context,loader,smart,context,loader,not,as,a,legacy,link,org,springframework,test,context,context,loader,context,loader,consequently,this,method,is,not,supported,see,org,springframework,test,context,context,loader,load,context,java,lang,string,throws,unsupported,operation,exception;override,public,final,application,context,load,context,string,locations,throws,exception,throw,new,unsupported,operation,exception,abstract,generic,web,context,loader,does,not,support,the,load,context,string,locations,method
AbstractGenericWebContextLoader -> @Override 	public final ApplicationContext loadContext(String... locations) throws Exception;1368482696;{@code AbstractGenericWebContextLoader} should be used as a_{@link org.springframework.test.context.SmartContextLoader SmartContextLoader},_not as a legacy {@link org.springframework.test.context.ContextLoader ContextLoader}._Consequently, this method is not supported.__@see org.springframework.test.context.ContextLoader#loadContext(java.lang.String[])_@throws UnsupportedOperationException;@Override_	public final ApplicationContext loadContext(String... locations) throws Exception {_		throw new UnsupportedOperationException(_			"AbstractGenericWebContextLoader does not support the loadContext(String... locations) method")__	};code,abstract,generic,web,context,loader,should,be,used,as,a,link,org,springframework,test,context,smart,context,loader,smart,context,loader,not,as,a,legacy,link,org,springframework,test,context,context,loader,context,loader,consequently,this,method,is,not,supported,see,org,springframework,test,context,context,loader,load,context,java,lang,string,throws,unsupported,operation,exception;override,public,final,application,context,load,context,string,locations,throws,exception,throw,new,unsupported,operation,exception,abstract,generic,web,context,loader,does,not,support,the,load,context,string,locations,method
AbstractGenericWebContextLoader -> @Override 	public final ApplicationContext loadContext(String... locations) throws Exception;1396374528;{@code AbstractGenericWebContextLoader} should be used as a_{@link org.springframework.test.context.SmartContextLoader SmartContextLoader},_not as a legacy {@link org.springframework.test.context.ContextLoader ContextLoader}._Consequently, this method is not supported.__@see org.springframework.test.context.ContextLoader#loadContext(java.lang.String[])_@throws UnsupportedOperationException;@Override_	public final ApplicationContext loadContext(String... locations) throws Exception {_		throw new UnsupportedOperationException(_			"AbstractGenericWebContextLoader does not support the loadContext(String... locations) method")__	};code,abstract,generic,web,context,loader,should,be,used,as,a,link,org,springframework,test,context,smart,context,loader,smart,context,loader,not,as,a,legacy,link,org,springframework,test,context,context,loader,context,loader,consequently,this,method,is,not,supported,see,org,springframework,test,context,context,loader,load,context,java,lang,string,throws,unsupported,operation,exception;override,public,final,application,context,load,context,string,locations,throws,exception,throw,new,unsupported,operation,exception,abstract,generic,web,context,loader,does,not,support,the,load,context,string,locations,method
AbstractGenericWebContextLoader -> @Override 	public final ApplicationContext loadContext(String... locations) throws Exception;1413848647;{@code AbstractGenericWebContextLoader} should be used as a_{@link org.springframework.test.context.SmartContextLoader SmartContextLoader},_not as a legacy {@link org.springframework.test.context.ContextLoader ContextLoader}._Consequently, this method is not supported.__@see org.springframework.test.context.ContextLoader#loadContext(java.lang.String[])_@throws UnsupportedOperationException;@Override_	public final ApplicationContext loadContext(String... locations) throws Exception {_		throw new UnsupportedOperationException(_			"AbstractGenericWebContextLoader does not support the loadContext(String... locations) method")__	};code,abstract,generic,web,context,loader,should,be,used,as,a,link,org,springframework,test,context,smart,context,loader,smart,context,loader,not,as,a,legacy,link,org,springframework,test,context,context,loader,context,loader,consequently,this,method,is,not,supported,see,org,springframework,test,context,context,loader,load,context,java,lang,string,throws,unsupported,operation,exception;override,public,final,application,context,load,context,string,locations,throws,exception,throw,new,unsupported,operation,exception,abstract,generic,web,context,loader,does,not,support,the,load,context,string,locations,method
AbstractGenericWebContextLoader -> @Override 	public final ApplicationContext loadContext(String... locations) throws Exception;1457727806;{@code AbstractGenericWebContextLoader} should be used as a_{@link org.springframework.test.context.SmartContextLoader SmartContextLoader},_not as a legacy {@link org.springframework.test.context.ContextLoader ContextLoader}._Consequently, this method is not supported.__@see org.springframework.test.context.ContextLoader#loadContext(java.lang.String[])_@throws UnsupportedOperationException;@Override_	public final ApplicationContext loadContext(String... locations) throws Exception {_		throw new UnsupportedOperationException(_			"AbstractGenericWebContextLoader does not support the loadContext(String... locations) method")__	};code,abstract,generic,web,context,loader,should,be,used,as,a,link,org,springframework,test,context,smart,context,loader,smart,context,loader,not,as,a,legacy,link,org,springframework,test,context,context,loader,context,loader,consequently,this,method,is,not,supported,see,org,springframework,test,context,context,loader,load,context,java,lang,string,throws,unsupported,operation,exception;override,public,final,application,context,load,context,string,locations,throws,exception,throw,new,unsupported,operation,exception,abstract,generic,web,context,loader,does,not,support,the,load,context,string,locations,method
AbstractGenericWebContextLoader -> @Override 	public final ApplicationContext loadContext(String... locations) throws Exception;1468334463;{@code AbstractGenericWebContextLoader} should be used as a_{@link org.springframework.test.context.SmartContextLoader SmartContextLoader},_not as a legacy {@link org.springframework.test.context.ContextLoader ContextLoader}._Consequently, this method is not supported.__@see org.springframework.test.context.ContextLoader#loadContext(java.lang.String[])_@throws UnsupportedOperationException;@Override_	public final ApplicationContext loadContext(String... locations) throws Exception {_		throw new UnsupportedOperationException(_			"AbstractGenericWebContextLoader does not support the loadContext(String... locations) method")__	};code,abstract,generic,web,context,loader,should,be,used,as,a,link,org,springframework,test,context,smart,context,loader,smart,context,loader,not,as,a,legacy,link,org,springframework,test,context,context,loader,context,loader,consequently,this,method,is,not,supported,see,org,springframework,test,context,context,loader,load,context,java,lang,string,throws,unsupported,operation,exception;override,public,final,application,context,load,context,string,locations,throws,exception,throw,new,unsupported,operation,exception,abstract,generic,web,context,loader,does,not,support,the,load,context,string,locations,method
AbstractGenericWebContextLoader -> @Override 	public final ApplicationContext loadContext(String... locations) throws Exception;1516617801;{@code AbstractGenericWebContextLoader} should be used as a_{@link org.springframework.test.context.SmartContextLoader SmartContextLoader},_not as a legacy {@link org.springframework.test.context.ContextLoader ContextLoader}._Consequently, this method is not supported._@see org.springframework.test.context.ContextLoader#loadContext(java.lang.String[])_@throws UnsupportedOperationException in this implementation;@Override_	public final ApplicationContext loadContext(String... locations) throws Exception {_		throw new UnsupportedOperationException(_				"AbstractGenericWebContextLoader does not support the loadContext(String... locations) method")__	};code,abstract,generic,web,context,loader,should,be,used,as,a,link,org,springframework,test,context,smart,context,loader,smart,context,loader,not,as,a,legacy,link,org,springframework,test,context,context,loader,context,loader,consequently,this,method,is,not,supported,see,org,springframework,test,context,context,loader,load,context,java,lang,string,throws,unsupported,operation,exception,in,this,implementation;override,public,final,application,context,load,context,string,locations,throws,exception,throw,new,unsupported,operation,exception,abstract,generic,web,context,loader,does,not,support,the,load,context,string,locations,method
AbstractGenericWebContextLoader -> @Override 	public final ApplicationContext loadContext(String... locations) throws Exception;1516653284;{@code AbstractGenericWebContextLoader} should be used as a_{@link org.springframework.test.context.SmartContextLoader SmartContextLoader},_not as a legacy {@link org.springframework.test.context.ContextLoader ContextLoader}._Consequently, this method is not supported._@see org.springframework.test.context.ContextLoader#loadContext(java.lang.String[])_@throws UnsupportedOperationException in this implementation;@Override_	public final ApplicationContext loadContext(String... locations) throws Exception {_		throw new UnsupportedOperationException(_				"AbstractGenericWebContextLoader does not support the loadContext(String... locations) method")__	};code,abstract,generic,web,context,loader,should,be,used,as,a,link,org,springframework,test,context,smart,context,loader,smart,context,loader,not,as,a,legacy,link,org,springframework,test,context,context,loader,context,loader,consequently,this,method,is,not,supported,see,org,springframework,test,context,context,loader,load,context,java,lang,string,throws,unsupported,operation,exception,in,this,implementation;override,public,final,application,context,load,context,string,locations,throws,exception,throw,new,unsupported,operation,exception,abstract,generic,web,context,loader,does,not,support,the,load,context,string,locations,method
AbstractGenericWebContextLoader -> @Override 	public final ApplicationContext loadContext(String... locations) throws Exception;1530174524;{@code AbstractGenericWebContextLoader} should be used as a_{@link org.springframework.test.context.SmartContextLoader SmartContextLoader},_not as a legacy {@link org.springframework.test.context.ContextLoader ContextLoader}._Consequently, this method is not supported._@see org.springframework.test.context.ContextLoader#loadContext(java.lang.String[])_@throws UnsupportedOperationException in this implementation;@Override_	public final ApplicationContext loadContext(String... locations) throws Exception {_		throw new UnsupportedOperationException(_				"AbstractGenericWebContextLoader does not support the loadContext(String... locations) method")__	};code,abstract,generic,web,context,loader,should,be,used,as,a,link,org,springframework,test,context,smart,context,loader,smart,context,loader,not,as,a,legacy,link,org,springframework,test,context,context,loader,context,loader,consequently,this,method,is,not,supported,see,org,springframework,test,context,context,loader,load,context,java,lang,string,throws,unsupported,operation,exception,in,this,implementation;override,public,final,application,context,load,context,string,locations,throws,exception,throw,new,unsupported,operation,exception,abstract,generic,web,context,loader,does,not,support,the,load,context,string,locations,method
AbstractGenericWebContextLoader -> @Override 	public final ApplicationContext loadContext(String... locations) throws Exception;1549646187;{@code AbstractGenericWebContextLoader} should be used as a_{@link org.springframework.test.context.SmartContextLoader SmartContextLoader},_not as a legacy {@link org.springframework.test.context.ContextLoader ContextLoader}._Consequently, this method is not supported._@see org.springframework.test.context.ContextLoader#loadContext(java.lang.String[])_@throws UnsupportedOperationException in this implementation;@Override_	public final ApplicationContext loadContext(String... locations) throws Exception {_		throw new UnsupportedOperationException(_				"AbstractGenericWebContextLoader does not support the loadContext(String... locations) method")__	};code,abstract,generic,web,context,loader,should,be,used,as,a,link,org,springframework,test,context,smart,context,loader,smart,context,loader,not,as,a,legacy,link,org,springframework,test,context,context,loader,context,loader,consequently,this,method,is,not,supported,see,org,springframework,test,context,context,loader,load,context,java,lang,string,throws,unsupported,operation,exception,in,this,implementation;override,public,final,application,context,load,context,string,locations,throws,exception,throw,new,unsupported,operation,exception,abstract,generic,web,context,loader,does,not,support,the,load,context,string,locations,method
AbstractGenericWebContextLoader -> protected void customizeBeanFactory( 			DefaultListableBeanFactory beanFactory, WebMergedContextConfiguration webMergedConfig);1516617801;Customize the internal bean factory of the {@code WebApplicationContext}_created by this context loader._<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings._@param beanFactory the bean factory created by this context loader_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping;protected void customizeBeanFactory(_			DefaultListableBeanFactory beanFactory, WebMergedContextConfiguration webMergedConfig) {_	};customize,the,internal,bean,factory,of,the,code,web,application,context,created,by,this,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,context,loader,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeBeanFactory( 			DefaultListableBeanFactory beanFactory, WebMergedContextConfiguration webMergedConfig);1516653284;Customize the internal bean factory of the {@code WebApplicationContext}_created by this context loader._<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings._@param beanFactory the bean factory created by this context loader_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping;protected void customizeBeanFactory(_			DefaultListableBeanFactory beanFactory, WebMergedContextConfiguration webMergedConfig) {_	};customize,the,internal,bean,factory,of,the,code,web,application,context,created,by,this,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,context,loader,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeBeanFactory( 			DefaultListableBeanFactory beanFactory, WebMergedContextConfiguration webMergedConfig);1530174524;Customize the internal bean factory of the {@code WebApplicationContext}_created by this context loader._<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings._@param beanFactory the bean factory created by this context loader_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping;protected void customizeBeanFactory(_			DefaultListableBeanFactory beanFactory, WebMergedContextConfiguration webMergedConfig) {_	};customize,the,internal,bean,factory,of,the,code,web,application,context,created,by,this,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,context,loader,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeBeanFactory( 			DefaultListableBeanFactory beanFactory, WebMergedContextConfiguration webMergedConfig);1549646187;Customize the internal bean factory of the {@code WebApplicationContext}_created by this context loader._<p>The default implementation is empty but can be overridden in subclasses_to customize {@code DefaultListableBeanFactory}'s standard settings._@param beanFactory the bean factory created by this context loader_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see DefaultListableBeanFactory#setAllowBeanDefinitionOverriding_@see DefaultListableBeanFactory#setAllowEagerClassLoading_@see DefaultListableBeanFactory#setAllowCircularReferences_@see DefaultListableBeanFactory#setAllowRawInjectionDespiteWrapping;protected void customizeBeanFactory(_			DefaultListableBeanFactory beanFactory, WebMergedContextConfiguration webMergedConfig) {_	};customize,the,internal,bean,factory,of,the,code,web,application,context,created,by,this,context,loader,p,the,default,implementation,is,empty,but,can,be,overridden,in,subclasses,to,customize,code,default,listable,bean,factory,s,standard,settings,param,bean,factory,the,bean,factory,created,by,this,context,loader,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,default,listable,bean,factory,set,allow,bean,definition,overriding,see,default,listable,bean,factory,set,allow,eager,class,loading,see,default,listable,bean,factory,set,allow,circular,references,see,default,listable,bean,factory,set,allow,raw,injection,despite,wrapping;protected,void,customize,bean,factory,default,listable,bean,factory,bean,factory,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeContext( 			GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig);1516617801;Customize the {@link GenericWebApplicationContext} created by this context_loader <i>after</i> bean definitions have been loaded into the context but_<i>before</i> the context is refreshed._<p>The default implementation simply delegates to_{@link AbstractContextLoader#customizeContext(ConfigurableApplicationContext, MergedContextConfiguration)}._@param context the newly created web application context_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see #customizeContext(ConfigurableApplicationContext, MergedContextConfiguration);protected void customizeContext(_			GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig) {__		super.customizeContext(context, webMergedConfig)__	};customize,the,link,generic,web,application,context,created,by,this,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,simply,delegates,to,link,abstract,context,loader,customize,context,configurable,application,context,merged,context,configuration,param,context,the,newly,created,web,application,context,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,customize,context,configurable,application,context,merged,context,configuration;protected,void,customize,context,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,super,customize,context,context,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeContext( 			GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig);1516653284;Customize the {@link GenericWebApplicationContext} created by this context_loader <i>after</i> bean definitions have been loaded into the context but_<i>before</i> the context is refreshed._<p>The default implementation simply delegates to_{@link AbstractContextLoader#customizeContext(ConfigurableApplicationContext, MergedContextConfiguration)}._@param context the newly created web application context_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see #customizeContext(ConfigurableApplicationContext, MergedContextConfiguration);protected void customizeContext(_			GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig) {__		super.customizeContext(context, webMergedConfig)__	};customize,the,link,generic,web,application,context,created,by,this,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,simply,delegates,to,link,abstract,context,loader,customize,context,configurable,application,context,merged,context,configuration,param,context,the,newly,created,web,application,context,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,customize,context,configurable,application,context,merged,context,configuration;protected,void,customize,context,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,super,customize,context,context,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeContext( 			GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig);1530174524;Customize the {@link GenericWebApplicationContext} created by this context_loader <i>after</i> bean definitions have been loaded into the context but_<i>before</i> the context is refreshed._<p>The default implementation simply delegates to_{@link AbstractContextLoader#customizeContext(ConfigurableApplicationContext, MergedContextConfiguration)}._@param context the newly created web application context_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see #customizeContext(ConfigurableApplicationContext, MergedContextConfiguration);protected void customizeContext(_			GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig) {__		super.customizeContext(context, webMergedConfig)__	};customize,the,link,generic,web,application,context,created,by,this,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,simply,delegates,to,link,abstract,context,loader,customize,context,configurable,application,context,merged,context,configuration,param,context,the,newly,created,web,application,context,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,customize,context,configurable,application,context,merged,context,configuration;protected,void,customize,context,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,super,customize,context,context,web,merged,config
AbstractGenericWebContextLoader -> protected void customizeContext( 			GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig);1549646187;Customize the {@link GenericWebApplicationContext} created by this context_loader <i>after</i> bean definitions have been loaded into the context but_<i>before</i> the context is refreshed._<p>The default implementation simply delegates to_{@link AbstractContextLoader#customizeContext(ConfigurableApplicationContext, MergedContextConfiguration)}._@param context the newly created web application context_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration)_@see #customizeContext(ConfigurableApplicationContext, MergedContextConfiguration);protected void customizeContext(_			GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig) {__		super.customizeContext(context, webMergedConfig)__	};customize,the,link,generic,web,application,context,created,by,this,context,loader,i,after,i,bean,definitions,have,been,loaded,into,the,context,but,i,before,i,the,context,is,refreshed,p,the,default,implementation,simply,delegates,to,link,abstract,context,loader,customize,context,configurable,application,context,merged,context,configuration,param,context,the,newly,created,web,application,context,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration,see,customize,context,configurable,application,context,merged,context,configuration;protected,void,customize,context,generic,web,application,context,context,web,merged,context,configuration,web,merged,config,super,customize,context,context,web,merged,config
AbstractGenericWebContextLoader -> protected abstract void loadBeanDefinitions( 			GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig)_;1516617801;Load bean definitions into the supplied {@link GenericWebApplicationContext context}_from the locations or classes in the supplied {@code WebMergedContextConfiguration}._<p>Concrete subclasses must provide an appropriate implementation._@param context the context into which the bean definitions should be loaded_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected abstract void loadBeanDefinitions(_			GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig)_;load,bean,definitions,into,the,supplied,link,generic,web,application,context,context,from,the,locations,or,classes,in,the,supplied,code,web,merged,context,configuration,p,concrete,subclasses,must,provide,an,appropriate,implementation,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,abstract,void,load,bean,definitions,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected abstract void loadBeanDefinitions( 			GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig)_;1516653284;Load bean definitions into the supplied {@link GenericWebApplicationContext context}_from the locations or classes in the supplied {@code WebMergedContextConfiguration}._<p>Concrete subclasses must provide an appropriate implementation._@param context the context into which the bean definitions should be loaded_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected abstract void loadBeanDefinitions(_			GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig)_;load,bean,definitions,into,the,supplied,link,generic,web,application,context,context,from,the,locations,or,classes,in,the,supplied,code,web,merged,context,configuration,p,concrete,subclasses,must,provide,an,appropriate,implementation,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,abstract,void,load,bean,definitions,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected abstract void loadBeanDefinitions( 			GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig)_;1530174524;Load bean definitions into the supplied {@link GenericWebApplicationContext context}_from the locations or classes in the supplied {@code WebMergedContextConfiguration}._<p>Concrete subclasses must provide an appropriate implementation._@param context the context into which the bean definitions should be loaded_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected abstract void loadBeanDefinitions(_			GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig)_;load,bean,definitions,into,the,supplied,link,generic,web,application,context,context,from,the,locations,or,classes,in,the,supplied,code,web,merged,context,configuration,p,concrete,subclasses,must,provide,an,appropriate,implementation,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,abstract,void,load,bean,definitions,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected abstract void loadBeanDefinitions( 			GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig)_;1549646187;Load bean definitions into the supplied {@link GenericWebApplicationContext context}_from the locations or classes in the supplied {@code WebMergedContextConfiguration}._<p>Concrete subclasses must provide an appropriate implementation._@param context the context into which the bean definitions should be loaded_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected abstract void loadBeanDefinitions(_			GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig)_;load,bean,definitions,into,the,supplied,link,generic,web,application,context,context,from,the,locations,or,classes,in,the,supplied,code,web,merged,context,configuration,p,concrete,subclasses,must,provide,an,appropriate,implementation,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,abstract,void,load,bean,definitions,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1354573750;TODO [SPR-9864] Document overridden loadContext(MergedContextConfiguration).__@see org.springframework.test.context.SmartContextLoader#loadContext(org.springframework.test.context.MergedContextConfiguration);public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {__		if (!(mergedConfig instanceof WebMergedContextConfiguration)) {_			throw new IllegalArgumentException(String.format(_				"Cannot load WebApplicationContext from non-web merged context configuration %s. "_						+ "Consider annotating your test class with @WebAppConfiguration.", mergedConfig))__		}_		WebMergedContextConfiguration webMergedConfig = (WebMergedContextConfiguration) mergedConfig___		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading WebApplicationContext for merged context configuration %s.",_				webMergedConfig))__		}__		GenericWebApplicationContext context = new GenericWebApplicationContext()__		configureWebResources(context, webMergedConfig)__		prepareContext(context, webMergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory(), webMergedConfig)__		loadBeanDefinitions(context, webMergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context, webMergedConfig)__		context.refresh()__		context.registerShutdownHook()__		return context__	};todo,spr,9864,document,overridden,load,context,merged,context,configuration,see,org,springframework,test,context,smart,context,loader,load,context,org,springframework,test,context,merged,context,configuration;public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,merged,config,instanceof,web,merged,context,configuration,throw,new,illegal,argument,exception,string,format,cannot,load,web,application,context,from,non,web,merged,context,configuration,s,consider,annotating,your,test,class,with,web,app,configuration,merged,config,web,merged,context,configuration,web,merged,config,web,merged,context,configuration,merged,config,if,logger,is,debug,enabled,logger,debug,string,format,loading,web,application,context,for,merged,context,configuration,s,web,merged,config,generic,web,application,context,context,new,generic,web,application,context,configure,web,resources,context,web,merged,config,prepare,context,context,web,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,web,merged,config,load,bean,definitions,context,web,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,web,merged,config,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericWebContextLoader -> public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1355187490;Load a Spring {@link WebApplicationContext} from the supplied_{@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericWebApplicationContext} instance.</li>_<li>Delegates to {@link #configureWebResources()} to create the_{@link MockServletContext} and set it in the {@code WebApplicationContext}.</li>_<li>Calls {@link #prepareContext()} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory()} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions()} to populate the context_from the locations or classes in the supplied {@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@linkplain AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext()} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new web application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericWebApplicationContext;public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {__		if (!(mergedConfig instanceof WebMergedContextConfiguration)) {_			throw new IllegalArgumentException(String.format(_				"Cannot load WebApplicationContext from non-web merged context configuration %s. "_						+ "Consider annotating your test class with @WebAppConfiguration.", mergedConfig))__		}_		WebMergedContextConfiguration webMergedConfig = (WebMergedContextConfiguration) mergedConfig___		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading WebApplicationContext for merged context configuration %s.",_				webMergedConfig))__		}__		GenericWebApplicationContext context = new GenericWebApplicationContext()__		configureWebResources(context, webMergedConfig)__		prepareContext(context, webMergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory(), webMergedConfig)__		loadBeanDefinitions(context, webMergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context, webMergedConfig)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,link,web,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,creates,a,link,generic,web,application,context,instance,li,li,delegates,to,link,configure,web,resources,to,create,the,link,mock,servlet,context,and,set,it,in,the,code,web,application,context,li,li,calls,link,prepare,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,linkplain,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,web,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,web,application,context;public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,merged,config,instanceof,web,merged,context,configuration,throw,new,illegal,argument,exception,string,format,cannot,load,web,application,context,from,non,web,merged,context,configuration,s,consider,annotating,your,test,class,with,web,app,configuration,merged,config,web,merged,context,configuration,web,merged,config,web,merged,context,configuration,merged,config,if,logger,is,debug,enabled,logger,debug,string,format,loading,web,application,context,for,merged,context,configuration,s,web,merged,config,generic,web,application,context,context,new,generic,web,application,context,configure,web,resources,context,web,merged,config,prepare,context,context,web,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,web,merged,config,load,bean,definitions,context,web,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,web,merged,config,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericWebContextLoader -> public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1355313310;Load a Spring {@link WebApplicationContext} from the supplied_{@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericWebApplicationContext} instance.</li>_<li>Delegates to {@link #configureWebResources} to create the_{@link MockServletContext} and set it in the {@code WebApplicationContext}.</li>_<li>Calls {@link #prepareContext} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions} to populate the context_from the locations or classes in the supplied {@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@linkplain AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new web application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericWebApplicationContext;public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {__		if (!(mergedConfig instanceof WebMergedContextConfiguration)) {_			throw new IllegalArgumentException(String.format(_				"Cannot load WebApplicationContext from non-web merged context configuration %s. "_						+ "Consider annotating your test class with @WebAppConfiguration.", mergedConfig))__		}_		WebMergedContextConfiguration webMergedConfig = (WebMergedContextConfiguration) mergedConfig___		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading WebApplicationContext for merged context configuration %s.",_				webMergedConfig))__		}__		GenericWebApplicationContext context = new GenericWebApplicationContext()__		configureWebResources(context, webMergedConfig)__		prepareContext(context, webMergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory(), webMergedConfig)__		loadBeanDefinitions(context, webMergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context, webMergedConfig)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,link,web,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,creates,a,link,generic,web,application,context,instance,li,li,delegates,to,link,configure,web,resources,to,create,the,link,mock,servlet,context,and,set,it,in,the,code,web,application,context,li,li,calls,link,prepare,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,linkplain,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,web,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,web,application,context;public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,merged,config,instanceof,web,merged,context,configuration,throw,new,illegal,argument,exception,string,format,cannot,load,web,application,context,from,non,web,merged,context,configuration,s,consider,annotating,your,test,class,with,web,app,configuration,merged,config,web,merged,context,configuration,web,merged,config,web,merged,context,configuration,merged,config,if,logger,is,debug,enabled,logger,debug,string,format,loading,web,application,context,for,merged,context,configuration,s,web,merged,config,generic,web,application,context,context,new,generic,web,application,context,configure,web,resources,context,web,merged,config,prepare,context,context,web,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,web,merged,config,load,bean,definitions,context,web,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,web,merged,config,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericWebContextLoader -> public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1357119239;Load a Spring {@link WebApplicationContext} from the supplied_{@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericWebApplicationContext} instance.</li>_<li>Delegates to {@link #configureWebResources} to create the_{@link MockServletContext} and set it in the {@code WebApplicationContext}.</li>_<li>Calls {@link #prepareContext} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions} to populate the context_from the locations or classes in the supplied {@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@linkplain AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new web application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericWebApplicationContext;public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {__		if (!(mergedConfig instanceof WebMergedContextConfiguration)) {_			throw new IllegalArgumentException(String.format(_				"Cannot load WebApplicationContext from non-web merged context configuration %s. "_						+ "Consider annotating your test class with @WebAppConfiguration.", mergedConfig))__		}_		WebMergedContextConfiguration webMergedConfig = (WebMergedContextConfiguration) mergedConfig___		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading WebApplicationContext for merged context configuration %s.",_				webMergedConfig))__		}__		GenericWebApplicationContext context = new GenericWebApplicationContext()__		configureWebResources(context, webMergedConfig)__		prepareContext(context, webMergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory(), webMergedConfig)__		loadBeanDefinitions(context, webMergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context, webMergedConfig)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,link,web,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,creates,a,link,generic,web,application,context,instance,li,li,delegates,to,link,configure,web,resources,to,create,the,link,mock,servlet,context,and,set,it,in,the,code,web,application,context,li,li,calls,link,prepare,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,linkplain,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,web,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,web,application,context;public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,merged,config,instanceof,web,merged,context,configuration,throw,new,illegal,argument,exception,string,format,cannot,load,web,application,context,from,non,web,merged,context,configuration,s,consider,annotating,your,test,class,with,web,app,configuration,merged,config,web,merged,context,configuration,web,merged,config,web,merged,context,configuration,merged,config,if,logger,is,debug,enabled,logger,debug,string,format,loading,web,application,context,for,merged,context,configuration,s,web,merged,config,generic,web,application,context,context,new,generic,web,application,context,configure,web,resources,context,web,merged,config,prepare,context,context,web,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,web,merged,config,load,bean,definitions,context,web,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,web,merged,config,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericWebContextLoader -> public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1363208506;Load a Spring {@link WebApplicationContext} from the supplied_{@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericWebApplicationContext} instance.</li>_<li>If the supplied {@code MergedContextConfiguration} references a_{@linkplain MergedContextConfiguration#getParent() parent configuration},_the corresponding {@link MergedContextConfiguration#getParentApplicationContext()_ApplicationContext} will be retrieved and_{@linkplain GenericWebApplicationContext#setParent(ApplicationContext) set as the parent}_for the context created by this method.</li>_<li>Delegates to {@link #configureWebResources} to create the_{@link MockServletContext} and set it in the {@code WebApplicationContext}.</li>_<li>Calls {@link #prepareContext} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions} to populate the context_from the locations or classes in the supplied {@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@linkplain AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new web application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericWebApplicationContext;public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {__		if (!(mergedConfig instanceof WebMergedContextConfiguration)) {_			throw new IllegalArgumentException(String.format(_				"Cannot load WebApplicationContext from non-web merged context configuration %s. "_						+ "Consider annotating your test class with @WebAppConfiguration.", mergedConfig))__		}_		WebMergedContextConfiguration webMergedConfig = (WebMergedContextConfiguration) mergedConfig___		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading WebApplicationContext for merged context configuration %s.",_				webMergedConfig))__		}__		GenericWebApplicationContext context = new GenericWebApplicationContext()___		ApplicationContext parent = mergedConfig.getParentApplicationContext()__		if (parent != null) {_			context.setParent(parent)__		}_		configureWebResources(context, webMergedConfig)__		prepareContext(context, webMergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory(), webMergedConfig)__		loadBeanDefinitions(context, webMergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context, webMergedConfig)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,link,web,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,creates,a,link,generic,web,application,context,instance,li,li,if,the,supplied,code,merged,context,configuration,references,a,linkplain,merged,context,configuration,get,parent,parent,configuration,the,corresponding,link,merged,context,configuration,get,parent,application,context,application,context,will,be,retrieved,and,linkplain,generic,web,application,context,set,parent,application,context,set,as,the,parent,for,the,context,created,by,this,method,li,li,delegates,to,link,configure,web,resources,to,create,the,link,mock,servlet,context,and,set,it,in,the,code,web,application,context,li,li,calls,link,prepare,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,linkplain,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,web,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,web,application,context;public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,merged,config,instanceof,web,merged,context,configuration,throw,new,illegal,argument,exception,string,format,cannot,load,web,application,context,from,non,web,merged,context,configuration,s,consider,annotating,your,test,class,with,web,app,configuration,merged,config,web,merged,context,configuration,web,merged,config,web,merged,context,configuration,merged,config,if,logger,is,debug,enabled,logger,debug,string,format,loading,web,application,context,for,merged,context,configuration,s,web,merged,config,generic,web,application,context,context,new,generic,web,application,context,application,context,parent,merged,config,get,parent,application,context,if,parent,null,context,set,parent,parent,configure,web,resources,context,web,merged,config,prepare,context,context,web,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,web,merged,config,load,bean,definitions,context,web,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,web,merged,config,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericWebContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1356735495;Load a Spring {@link WebApplicationContext} from the supplied_{@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericWebApplicationContext} instance.</li>_<li>Delegates to {@link #configureWebResources} to create the_{@link MockServletContext} and set it in the {@code WebApplicationContext}.</li>_<li>Calls {@link #prepareContext} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions} to populate the context_from the locations or classes in the supplied {@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@linkplain AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new web application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericWebApplicationContext;@Override_	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {__		if (!(mergedConfig instanceof WebMergedContextConfiguration)) {_			throw new IllegalArgumentException(String.format(_				"Cannot load WebApplicationContext from non-web merged context configuration %s. "_						+ "Consider annotating your test class with @WebAppConfiguration.", mergedConfig))__		}_		WebMergedContextConfiguration webMergedConfig = (WebMergedContextConfiguration) mergedConfig___		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading WebApplicationContext for merged context configuration %s.",_				webMergedConfig))__		}__		GenericWebApplicationContext context = new GenericWebApplicationContext()__		configureWebResources(context, webMergedConfig)__		prepareContext(context, webMergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory(), webMergedConfig)__		loadBeanDefinitions(context, webMergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context, webMergedConfig)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,link,web,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,creates,a,link,generic,web,application,context,instance,li,li,delegates,to,link,configure,web,resources,to,create,the,link,mock,servlet,context,and,set,it,in,the,code,web,application,context,li,li,calls,link,prepare,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,linkplain,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,web,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,web,application,context;override,public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,merged,config,instanceof,web,merged,context,configuration,throw,new,illegal,argument,exception,string,format,cannot,load,web,application,context,from,non,web,merged,context,configuration,s,consider,annotating,your,test,class,with,web,app,configuration,merged,config,web,merged,context,configuration,web,merged,config,web,merged,context,configuration,merged,config,if,logger,is,debug,enabled,logger,debug,string,format,loading,web,application,context,for,merged,context,configuration,s,web,merged,config,generic,web,application,context,context,new,generic,web,application,context,configure,web,resources,context,web,merged,config,prepare,context,context,web,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,web,merged,config,load,bean,definitions,context,web,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,web,merged,config,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericWebContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1368482696;Load a Spring {@link WebApplicationContext} from the supplied_{@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Creates a {@link GenericWebApplicationContext} instance.</li>_<li>If the supplied {@code MergedContextConfiguration} references a_{@linkplain MergedContextConfiguration#getParent() parent configuration},_the corresponding {@link MergedContextConfiguration#getParentApplicationContext()_ApplicationContext} will be retrieved and_{@linkplain GenericWebApplicationContext#setParent(ApplicationContext) set as the parent}_for the context created by this method.</li>_<li>Delegates to {@link #configureWebResources} to create the_{@link MockServletContext} and set it in the {@code WebApplicationContext}.</li>_<li>Calls {@link #prepareContext} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions} to populate the context_from the locations or classes in the supplied {@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@linkplain AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new web application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericWebApplicationContext;@Override_	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {__		if (!(mergedConfig instanceof WebMergedContextConfiguration)) {_			throw new IllegalArgumentException(String.format(_				"Cannot load WebApplicationContext from non-web merged context configuration %s. "_						+ "Consider annotating your test class with @WebAppConfiguration.", mergedConfig))__		}_		WebMergedContextConfiguration webMergedConfig = (WebMergedContextConfiguration) mergedConfig___		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading WebApplicationContext for merged context configuration %s.",_				webMergedConfig))__		}__		GenericWebApplicationContext context = new GenericWebApplicationContext()___		ApplicationContext parent = mergedConfig.getParentApplicationContext()__		if (parent != null) {_			context.setParent(parent)__		}_		configureWebResources(context, webMergedConfig)__		prepareContext(context, webMergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory(), webMergedConfig)__		loadBeanDefinitions(context, webMergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context, webMergedConfig)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,link,web,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,creates,a,link,generic,web,application,context,instance,li,li,if,the,supplied,code,merged,context,configuration,references,a,linkplain,merged,context,configuration,get,parent,parent,configuration,the,corresponding,link,merged,context,configuration,get,parent,application,context,application,context,will,be,retrieved,and,linkplain,generic,web,application,context,set,parent,application,context,set,as,the,parent,for,the,context,created,by,this,method,li,li,delegates,to,link,configure,web,resources,to,create,the,link,mock,servlet,context,and,set,it,in,the,code,web,application,context,li,li,calls,link,prepare,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,linkplain,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,web,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,web,application,context;override,public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,merged,config,instanceof,web,merged,context,configuration,throw,new,illegal,argument,exception,string,format,cannot,load,web,application,context,from,non,web,merged,context,configuration,s,consider,annotating,your,test,class,with,web,app,configuration,merged,config,web,merged,context,configuration,web,merged,config,web,merged,context,configuration,merged,config,if,logger,is,debug,enabled,logger,debug,string,format,loading,web,application,context,for,merged,context,configuration,s,web,merged,config,generic,web,application,context,context,new,generic,web,application,context,application,context,parent,merged,config,get,parent,application,context,if,parent,null,context,set,parent,parent,configure,web,resources,context,web,merged,config,prepare,context,context,web,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,web,merged,config,load,bean,definitions,context,web,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,web,merged,config,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericWebContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1396374528;Load a Spring {@link WebApplicationContext} from the supplied_{@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Calls {@link #validateMergedContextConfiguration(WebMergedContextConfiguration)}_to allow subclasses to validate the supplied configuration before proceeding.</li>_<li>Creates a {@link GenericWebApplicationContext} instance.</li>_<li>If the supplied {@code MergedContextConfiguration} references a_{@linkplain MergedContextConfiguration#getParent() parent configuration},_the corresponding {@link MergedContextConfiguration#getParentApplicationContext()_ApplicationContext} will be retrieved and_{@linkplain GenericWebApplicationContext#setParent(ApplicationContext) set as the parent}_for the context created by this method.</li>_<li>Delegates to {@link #configureWebResources} to create the_{@link MockServletContext} and set it in the {@code WebApplicationContext}.</li>_<li>Calls {@link #prepareContext} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions} to populate the context_from the locations or classes in the supplied {@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@linkplain AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new web application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericWebApplicationContext;@Override_	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {__		if (!(mergedConfig instanceof WebMergedContextConfiguration)) {_			throw new IllegalArgumentException(String.format(_				"Cannot load WebApplicationContext from non-web merged context configuration %s. "_						+ "Consider annotating your test class with @WebAppConfiguration.", mergedConfig))__		}_		WebMergedContextConfiguration webMergedConfig = (WebMergedContextConfiguration) mergedConfig___		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading WebApplicationContext for merged context configuration %s.",_				webMergedConfig))__		}__		validateMergedContextConfiguration(webMergedConfig)___		GenericWebApplicationContext context = new GenericWebApplicationContext()___		ApplicationContext parent = mergedConfig.getParentApplicationContext()__		if (parent != null) {_			context.setParent(parent)__		}_		configureWebResources(context, webMergedConfig)__		prepareContext(context, webMergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory(), webMergedConfig)__		loadBeanDefinitions(context, webMergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context, webMergedConfig)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,link,web,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,calls,link,validate,merged,context,configuration,web,merged,context,configuration,to,allow,subclasses,to,validate,the,supplied,configuration,before,proceeding,li,li,creates,a,link,generic,web,application,context,instance,li,li,if,the,supplied,code,merged,context,configuration,references,a,linkplain,merged,context,configuration,get,parent,parent,configuration,the,corresponding,link,merged,context,configuration,get,parent,application,context,application,context,will,be,retrieved,and,linkplain,generic,web,application,context,set,parent,application,context,set,as,the,parent,for,the,context,created,by,this,method,li,li,delegates,to,link,configure,web,resources,to,create,the,link,mock,servlet,context,and,set,it,in,the,code,web,application,context,li,li,calls,link,prepare,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,linkplain,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,web,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,web,application,context;override,public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,merged,config,instanceof,web,merged,context,configuration,throw,new,illegal,argument,exception,string,format,cannot,load,web,application,context,from,non,web,merged,context,configuration,s,consider,annotating,your,test,class,with,web,app,configuration,merged,config,web,merged,context,configuration,web,merged,config,web,merged,context,configuration,merged,config,if,logger,is,debug,enabled,logger,debug,string,format,loading,web,application,context,for,merged,context,configuration,s,web,merged,config,validate,merged,context,configuration,web,merged,config,generic,web,application,context,context,new,generic,web,application,context,application,context,parent,merged,config,get,parent,application,context,if,parent,null,context,set,parent,parent,configure,web,resources,context,web,merged,config,prepare,context,context,web,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,web,merged,config,load,bean,definitions,context,web,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,web,merged,config,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericWebContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1413848647;Load a Spring {@link WebApplicationContext} from the supplied_{@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Calls {@link #validateMergedContextConfiguration(WebMergedContextConfiguration)}_to allow subclasses to validate the supplied configuration before proceeding.</li>_<li>Creates a {@link GenericWebApplicationContext} instance.</li>_<li>If the supplied {@code MergedContextConfiguration} references a_{@linkplain MergedContextConfiguration#getParent() parent configuration},_the corresponding {@link MergedContextConfiguration#getParentApplicationContext()_ApplicationContext} will be retrieved and_{@linkplain GenericWebApplicationContext#setParent(ApplicationContext) set as the parent}_for the context created by this method.</li>_<li>Delegates to {@link #configureWebResources} to create the_{@link MockServletContext} and set it in the {@code WebApplicationContext}.</li>_<li>Calls {@link #prepareContext} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions} to populate the context_from the locations or classes in the supplied {@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@linkplain AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new web application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericWebApplicationContext;@Override_	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {__		if (!(mergedConfig instanceof WebMergedContextConfiguration)) {_			throw new IllegalArgumentException(String.format(_				"Cannot load WebApplicationContext from non-web merged context configuration %s. "_						+ "Consider annotating your test class with @WebAppConfiguration.", mergedConfig))__		}_		WebMergedContextConfiguration webMergedConfig = (WebMergedContextConfiguration) mergedConfig___		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading WebApplicationContext for merged context configuration %s.",_				webMergedConfig))__		}__		validateMergedContextConfiguration(webMergedConfig)___		GenericWebApplicationContext context = new GenericWebApplicationContext()___		ApplicationContext parent = mergedConfig.getParentApplicationContext()__		if (parent != null) {_			context.setParent(parent)__		}_		configureWebResources(context, webMergedConfig)__		prepareContext(context, webMergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory(), webMergedConfig)__		loadBeanDefinitions(context, webMergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context, webMergedConfig)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,link,web,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,calls,link,validate,merged,context,configuration,web,merged,context,configuration,to,allow,subclasses,to,validate,the,supplied,configuration,before,proceeding,li,li,creates,a,link,generic,web,application,context,instance,li,li,if,the,supplied,code,merged,context,configuration,references,a,linkplain,merged,context,configuration,get,parent,parent,configuration,the,corresponding,link,merged,context,configuration,get,parent,application,context,application,context,will,be,retrieved,and,linkplain,generic,web,application,context,set,parent,application,context,set,as,the,parent,for,the,context,created,by,this,method,li,li,delegates,to,link,configure,web,resources,to,create,the,link,mock,servlet,context,and,set,it,in,the,code,web,application,context,li,li,calls,link,prepare,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,linkplain,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,web,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,web,application,context;override,public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,merged,config,instanceof,web,merged,context,configuration,throw,new,illegal,argument,exception,string,format,cannot,load,web,application,context,from,non,web,merged,context,configuration,s,consider,annotating,your,test,class,with,web,app,configuration,merged,config,web,merged,context,configuration,web,merged,config,web,merged,context,configuration,merged,config,if,logger,is,debug,enabled,logger,debug,string,format,loading,web,application,context,for,merged,context,configuration,s,web,merged,config,validate,merged,context,configuration,web,merged,config,generic,web,application,context,context,new,generic,web,application,context,application,context,parent,merged,config,get,parent,application,context,if,parent,null,context,set,parent,parent,configure,web,resources,context,web,merged,config,prepare,context,context,web,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,web,merged,config,load,bean,definitions,context,web,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,web,merged,config,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericWebContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1457727806;Load a Spring {@link WebApplicationContext} from the supplied_{@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Calls {@link #validateMergedContextConfiguration(WebMergedContextConfiguration)}_to allow subclasses to validate the supplied configuration before proceeding.</li>_<li>Creates a {@link GenericWebApplicationContext} instance.</li>_<li>If the supplied {@code MergedContextConfiguration} references a_{@linkplain MergedContextConfiguration#getParent() parent configuration},_the corresponding {@link MergedContextConfiguration#getParentApplicationContext()_ApplicationContext} will be retrieved and_{@linkplain GenericWebApplicationContext#setParent(ApplicationContext) set as the parent}_for the context created by this method.</li>_<li>Delegates to {@link #configureWebResources} to create the_{@link MockServletContext} and set it in the {@code WebApplicationContext}.</li>_<li>Calls {@link #prepareContext} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions} to populate the context_from the locations or classes in the supplied {@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@linkplain AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new web application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericWebApplicationContext;@Override_	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {__		if (!(mergedConfig instanceof WebMergedContextConfiguration)) {_			throw new IllegalArgumentException(String.format(_				"Cannot load WebApplicationContext from non-web merged context configuration %s. "_						+ "Consider annotating your test class with @WebAppConfiguration.", mergedConfig))__		}_		WebMergedContextConfiguration webMergedConfig = (WebMergedContextConfiguration) mergedConfig___		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading WebApplicationContext for merged context configuration %s.",_				webMergedConfig))__		}__		validateMergedContextConfiguration(webMergedConfig)___		GenericWebApplicationContext context = new GenericWebApplicationContext()___		ApplicationContext parent = mergedConfig.getParentApplicationContext()__		if (parent != null) {_			context.setParent(parent)__		}_		configureWebResources(context, webMergedConfig)__		prepareContext(context, webMergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory(), webMergedConfig)__		loadBeanDefinitions(context, webMergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context, webMergedConfig)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,link,web,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,calls,link,validate,merged,context,configuration,web,merged,context,configuration,to,allow,subclasses,to,validate,the,supplied,configuration,before,proceeding,li,li,creates,a,link,generic,web,application,context,instance,li,li,if,the,supplied,code,merged,context,configuration,references,a,linkplain,merged,context,configuration,get,parent,parent,configuration,the,corresponding,link,merged,context,configuration,get,parent,application,context,application,context,will,be,retrieved,and,linkplain,generic,web,application,context,set,parent,application,context,set,as,the,parent,for,the,context,created,by,this,method,li,li,delegates,to,link,configure,web,resources,to,create,the,link,mock,servlet,context,and,set,it,in,the,code,web,application,context,li,li,calls,link,prepare,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,linkplain,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,web,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,web,application,context;override,public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,if,merged,config,instanceof,web,merged,context,configuration,throw,new,illegal,argument,exception,string,format,cannot,load,web,application,context,from,non,web,merged,context,configuration,s,consider,annotating,your,test,class,with,web,app,configuration,merged,config,web,merged,context,configuration,web,merged,config,web,merged,context,configuration,merged,config,if,logger,is,debug,enabled,logger,debug,string,format,loading,web,application,context,for,merged,context,configuration,s,web,merged,config,validate,merged,context,configuration,web,merged,config,generic,web,application,context,context,new,generic,web,application,context,application,context,parent,merged,config,get,parent,application,context,if,parent,null,context,set,parent,parent,configure,web,resources,context,web,merged,config,prepare,context,context,web,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,web,merged,config,load,bean,definitions,context,web,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,web,merged,config,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericWebContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1468334463;Load a Spring {@link WebApplicationContext} from the supplied_{@link MergedContextConfiguration}.__<p>Implementation details:__<ul>_<li>Calls {@link #validateMergedContextConfiguration(WebMergedContextConfiguration)}_to allow subclasses to validate the supplied configuration before proceeding.</li>_<li>Creates a {@link GenericWebApplicationContext} instance.</li>_<li>If the supplied {@code MergedContextConfiguration} references a_{@linkplain MergedContextConfiguration#getParent() parent configuration},_the corresponding {@link MergedContextConfiguration#getParentApplicationContext()_ApplicationContext} will be retrieved and_{@linkplain GenericWebApplicationContext#setParent(ApplicationContext) set as the parent}_for the context created by this method.</li>_<li>Delegates to {@link #configureWebResources} to create the_{@link MockServletContext} and set it in the {@code WebApplicationContext}.</li>_<li>Calls {@link #prepareContext} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions} to populate the context_from the locations or classes in the supplied {@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@linkplain AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>__@return a new web application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericWebApplicationContext;@Override_	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {_		Assert.isTrue(mergedConfig instanceof WebMergedContextConfiguration, () -> String.format(_				"Cannot load WebApplicationContext from non-web merged context configuration %s. "_						+ "Consider annotating your test class with @WebAppConfiguration.", mergedConfig))___		WebMergedContextConfiguration webMergedConfig = (WebMergedContextConfiguration) mergedConfig___		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading WebApplicationContext for merged context configuration %s.",_				webMergedConfig))__		}__		validateMergedContextConfiguration(webMergedConfig)___		GenericWebApplicationContext context = new GenericWebApplicationContext()___		ApplicationContext parent = mergedConfig.getParentApplicationContext()__		if (parent != null) {_			context.setParent(parent)__		}_		configureWebResources(context, webMergedConfig)__		prepareContext(context, webMergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory(), webMergedConfig)__		loadBeanDefinitions(context, webMergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context, webMergedConfig)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,link,web,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,calls,link,validate,merged,context,configuration,web,merged,context,configuration,to,allow,subclasses,to,validate,the,supplied,configuration,before,proceeding,li,li,creates,a,link,generic,web,application,context,instance,li,li,if,the,supplied,code,merged,context,configuration,references,a,linkplain,merged,context,configuration,get,parent,parent,configuration,the,corresponding,link,merged,context,configuration,get,parent,application,context,application,context,will,be,retrieved,and,linkplain,generic,web,application,context,set,parent,application,context,set,as,the,parent,for,the,context,created,by,this,method,li,li,delegates,to,link,configure,web,resources,to,create,the,link,mock,servlet,context,and,set,it,in,the,code,web,application,context,li,li,calls,link,prepare,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,linkplain,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,web,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,web,application,context;override,public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,assert,is,true,merged,config,instanceof,web,merged,context,configuration,string,format,cannot,load,web,application,context,from,non,web,merged,context,configuration,s,consider,annotating,your,test,class,with,web,app,configuration,merged,config,web,merged,context,configuration,web,merged,config,web,merged,context,configuration,merged,config,if,logger,is,debug,enabled,logger,debug,string,format,loading,web,application,context,for,merged,context,configuration,s,web,merged,config,validate,merged,context,configuration,web,merged,config,generic,web,application,context,context,new,generic,web,application,context,application,context,parent,merged,config,get,parent,application,context,if,parent,null,context,set,parent,parent,configure,web,resources,context,web,merged,config,prepare,context,context,web,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,web,merged,config,load,bean,definitions,context,web,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,web,merged,config,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericWebContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1516617801;Load a Spring {@link WebApplicationContext} from the supplied_{@link MergedContextConfiguration}._<p>Implementation details:_<ul>_<li>Calls {@link #validateMergedContextConfiguration(WebMergedContextConfiguration)}_to allow subclasses to validate the supplied configuration before proceeding.</li>_<li>Creates a {@link GenericWebApplicationContext} instance.</li>_<li>If the supplied {@code MergedContextConfiguration} references a_{@linkplain MergedContextConfiguration#getParent() parent configuration},_the corresponding {@link MergedContextConfiguration#getParentApplicationContext()_ApplicationContext} will be retrieved and_{@linkplain GenericWebApplicationContext#setParent(ApplicationContext) set as the parent}_for the context created by this method.</li>_<li>Delegates to {@link #configureWebResources} to create the_{@link MockServletContext} and set it in the {@code WebApplicationContext}.</li>_<li>Calls {@link #prepareContext} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions} to populate the context_from the locations or classes in the supplied {@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@linkplain AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>_@return a new web application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericWebApplicationContext;@Override_	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {_		Assert.isTrue(mergedConfig instanceof WebMergedContextConfiguration,_				() -> String.format("Cannot load WebApplicationContext from non-web merged context configuration %s. " +_						"Consider annotating your test class with @WebAppConfiguration.", mergedConfig))___		WebMergedContextConfiguration webMergedConfig = (WebMergedContextConfiguration) mergedConfig___		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading WebApplicationContext for merged context configuration %s.",_				webMergedConfig))__		}__		validateMergedContextConfiguration(webMergedConfig)___		GenericWebApplicationContext context = new GenericWebApplicationContext()___		ApplicationContext parent = mergedConfig.getParentApplicationContext()__		if (parent != null) {_			context.setParent(parent)__		}_		configureWebResources(context, webMergedConfig)__		prepareContext(context, webMergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory(), webMergedConfig)__		loadBeanDefinitions(context, webMergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context, webMergedConfig)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,link,web,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,calls,link,validate,merged,context,configuration,web,merged,context,configuration,to,allow,subclasses,to,validate,the,supplied,configuration,before,proceeding,li,li,creates,a,link,generic,web,application,context,instance,li,li,if,the,supplied,code,merged,context,configuration,references,a,linkplain,merged,context,configuration,get,parent,parent,configuration,the,corresponding,link,merged,context,configuration,get,parent,application,context,application,context,will,be,retrieved,and,linkplain,generic,web,application,context,set,parent,application,context,set,as,the,parent,for,the,context,created,by,this,method,li,li,delegates,to,link,configure,web,resources,to,create,the,link,mock,servlet,context,and,set,it,in,the,code,web,application,context,li,li,calls,link,prepare,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,linkplain,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,web,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,web,application,context;override,public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,assert,is,true,merged,config,instanceof,web,merged,context,configuration,string,format,cannot,load,web,application,context,from,non,web,merged,context,configuration,s,consider,annotating,your,test,class,with,web,app,configuration,merged,config,web,merged,context,configuration,web,merged,config,web,merged,context,configuration,merged,config,if,logger,is,debug,enabled,logger,debug,string,format,loading,web,application,context,for,merged,context,configuration,s,web,merged,config,validate,merged,context,configuration,web,merged,config,generic,web,application,context,context,new,generic,web,application,context,application,context,parent,merged,config,get,parent,application,context,if,parent,null,context,set,parent,parent,configure,web,resources,context,web,merged,config,prepare,context,context,web,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,web,merged,config,load,bean,definitions,context,web,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,web,merged,config,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericWebContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1516653284;Load a Spring {@link WebApplicationContext} from the supplied_{@link MergedContextConfiguration}._<p>Implementation details:_<ul>_<li>Calls {@link #validateMergedContextConfiguration(WebMergedContextConfiguration)}_to allow subclasses to validate the supplied configuration before proceeding.</li>_<li>Creates a {@link GenericWebApplicationContext} instance.</li>_<li>If the supplied {@code MergedContextConfiguration} references a_{@linkplain MergedContextConfiguration#getParent() parent configuration},_the corresponding {@link MergedContextConfiguration#getParentApplicationContext()_ApplicationContext} will be retrieved and_{@linkplain GenericWebApplicationContext#setParent(ApplicationContext) set as the parent}_for the context created by this method.</li>_<li>Delegates to {@link #configureWebResources} to create the_{@link MockServletContext} and set it in the {@code WebApplicationContext}.</li>_<li>Calls {@link #prepareContext} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions} to populate the context_from the locations or classes in the supplied {@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@linkplain AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>_@return a new web application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericWebApplicationContext;@Override_	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {_		Assert.isTrue(mergedConfig instanceof WebMergedContextConfiguration,_				() -> String.format("Cannot load WebApplicationContext from non-web merged context configuration %s. " +_						"Consider annotating your test class with @WebAppConfiguration.", mergedConfig))___		WebMergedContextConfiguration webMergedConfig = (WebMergedContextConfiguration) mergedConfig___		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading WebApplicationContext for merged context configuration %s.",_				webMergedConfig))__		}__		validateMergedContextConfiguration(webMergedConfig)___		GenericWebApplicationContext context = new GenericWebApplicationContext()___		ApplicationContext parent = mergedConfig.getParentApplicationContext()__		if (parent != null) {_			context.setParent(parent)__		}_		configureWebResources(context, webMergedConfig)__		prepareContext(context, webMergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory(), webMergedConfig)__		loadBeanDefinitions(context, webMergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context, webMergedConfig)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,link,web,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,calls,link,validate,merged,context,configuration,web,merged,context,configuration,to,allow,subclasses,to,validate,the,supplied,configuration,before,proceeding,li,li,creates,a,link,generic,web,application,context,instance,li,li,if,the,supplied,code,merged,context,configuration,references,a,linkplain,merged,context,configuration,get,parent,parent,configuration,the,corresponding,link,merged,context,configuration,get,parent,application,context,application,context,will,be,retrieved,and,linkplain,generic,web,application,context,set,parent,application,context,set,as,the,parent,for,the,context,created,by,this,method,li,li,delegates,to,link,configure,web,resources,to,create,the,link,mock,servlet,context,and,set,it,in,the,code,web,application,context,li,li,calls,link,prepare,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,linkplain,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,web,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,web,application,context;override,public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,assert,is,true,merged,config,instanceof,web,merged,context,configuration,string,format,cannot,load,web,application,context,from,non,web,merged,context,configuration,s,consider,annotating,your,test,class,with,web,app,configuration,merged,config,web,merged,context,configuration,web,merged,config,web,merged,context,configuration,merged,config,if,logger,is,debug,enabled,logger,debug,string,format,loading,web,application,context,for,merged,context,configuration,s,web,merged,config,validate,merged,context,configuration,web,merged,config,generic,web,application,context,context,new,generic,web,application,context,application,context,parent,merged,config,get,parent,application,context,if,parent,null,context,set,parent,parent,configure,web,resources,context,web,merged,config,prepare,context,context,web,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,web,merged,config,load,bean,definitions,context,web,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,web,merged,config,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericWebContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1530174524;Load a Spring {@link WebApplicationContext} from the supplied_{@link MergedContextConfiguration}._<p>Implementation details:_<ul>_<li>Calls {@link #validateMergedContextConfiguration(WebMergedContextConfiguration)}_to allow subclasses to validate the supplied configuration before proceeding.</li>_<li>Creates a {@link GenericWebApplicationContext} instance.</li>_<li>If the supplied {@code MergedContextConfiguration} references a_{@linkplain MergedContextConfiguration#getParent() parent configuration},_the corresponding {@link MergedContextConfiguration#getParentApplicationContext()_ApplicationContext} will be retrieved and_{@linkplain GenericWebApplicationContext#setParent(ApplicationContext) set as the parent}_for the context created by this method.</li>_<li>Delegates to {@link #configureWebResources} to create the_{@link MockServletContext} and set it in the {@code WebApplicationContext}.</li>_<li>Calls {@link #prepareContext} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions} to populate the context_from the locations or classes in the supplied {@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@linkplain AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>_@return a new web application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericWebApplicationContext;@Override_	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {_		Assert.isTrue(mergedConfig instanceof WebMergedContextConfiguration,_				() -> String.format("Cannot load WebApplicationContext from non-web merged context configuration %s. " +_						"Consider annotating your test class with @WebAppConfiguration.", mergedConfig))___		WebMergedContextConfiguration webMergedConfig = (WebMergedContextConfiguration) mergedConfig___		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading WebApplicationContext for merged context configuration %s.",_				webMergedConfig))__		}__		validateMergedContextConfiguration(webMergedConfig)___		GenericWebApplicationContext context = new GenericWebApplicationContext()___		ApplicationContext parent = mergedConfig.getParentApplicationContext()__		if (parent != null) {_			context.setParent(parent)__		}_		configureWebResources(context, webMergedConfig)__		prepareContext(context, webMergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory(), webMergedConfig)__		loadBeanDefinitions(context, webMergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context, webMergedConfig)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,link,web,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,calls,link,validate,merged,context,configuration,web,merged,context,configuration,to,allow,subclasses,to,validate,the,supplied,configuration,before,proceeding,li,li,creates,a,link,generic,web,application,context,instance,li,li,if,the,supplied,code,merged,context,configuration,references,a,linkplain,merged,context,configuration,get,parent,parent,configuration,the,corresponding,link,merged,context,configuration,get,parent,application,context,application,context,will,be,retrieved,and,linkplain,generic,web,application,context,set,parent,application,context,set,as,the,parent,for,the,context,created,by,this,method,li,li,delegates,to,link,configure,web,resources,to,create,the,link,mock,servlet,context,and,set,it,in,the,code,web,application,context,li,li,calls,link,prepare,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,linkplain,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,web,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,web,application,context;override,public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,assert,is,true,merged,config,instanceof,web,merged,context,configuration,string,format,cannot,load,web,application,context,from,non,web,merged,context,configuration,s,consider,annotating,your,test,class,with,web,app,configuration,merged,config,web,merged,context,configuration,web,merged,config,web,merged,context,configuration,merged,config,if,logger,is,debug,enabled,logger,debug,string,format,loading,web,application,context,for,merged,context,configuration,s,web,merged,config,validate,merged,context,configuration,web,merged,config,generic,web,application,context,context,new,generic,web,application,context,application,context,parent,merged,config,get,parent,application,context,if,parent,null,context,set,parent,parent,configure,web,resources,context,web,merged,config,prepare,context,context,web,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,web,merged,config,load,bean,definitions,context,web,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,web,merged,config,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericWebContextLoader -> @Override 	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception;1549646187;Load a Spring {@link WebApplicationContext} from the supplied_{@link MergedContextConfiguration}._<p>Implementation details:_<ul>_<li>Calls {@link #validateMergedContextConfiguration(WebMergedContextConfiguration)}_to allow subclasses to validate the supplied configuration before proceeding.</li>_<li>Creates a {@link GenericWebApplicationContext} instance.</li>_<li>If the supplied {@code MergedContextConfiguration} references a_{@linkplain MergedContextConfiguration#getParent() parent configuration},_the corresponding {@link MergedContextConfiguration#getParentApplicationContext()_ApplicationContext} will be retrieved and_{@linkplain GenericWebApplicationContext#setParent(ApplicationContext) set as the parent}_for the context created by this method.</li>_<li>Delegates to {@link #configureWebResources} to create the_{@link MockServletContext} and set it in the {@code WebApplicationContext}.</li>_<li>Calls {@link #prepareContext} to allow for customizing the context_before bean definitions are loaded.</li>_<li>Calls {@link #customizeBeanFactory} to allow for customizing the_context's {@code DefaultListableBeanFactory}.</li>_<li>Delegates to {@link #loadBeanDefinitions} to populate the context_from the locations or classes in the supplied {@code MergedContextConfiguration}.</li>_<li>Delegates to {@link AnnotationConfigUtils} for_{@linkplain AnnotationConfigUtils#registerAnnotationConfigProcessors registering}_annotation configuration processors.</li>_<li>Calls {@link #customizeContext} to allow for customizing the context_before it is refreshed.</li>_<li>{@link ConfigurableApplicationContext#refresh Refreshes} the_context and registers a JVM shutdown hook for it.</li>_</ul>_@return a new web application context_@see org.springframework.test.context.SmartContextLoader#loadContext(MergedContextConfiguration)_@see GenericWebApplicationContext;@Override_	public final ConfigurableApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {_		Assert.isTrue(mergedConfig instanceof WebMergedContextConfiguration,_				() -> String.format("Cannot load WebApplicationContext from non-web merged context configuration %s. " +_						"Consider annotating your test class with @WebAppConfiguration.", mergedConfig))___		WebMergedContextConfiguration webMergedConfig = (WebMergedContextConfiguration) mergedConfig___		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Loading WebApplicationContext for merged context configuration %s.",_				webMergedConfig))__		}__		validateMergedContextConfiguration(webMergedConfig)___		GenericWebApplicationContext context = new GenericWebApplicationContext()___		ApplicationContext parent = mergedConfig.getParentApplicationContext()__		if (parent != null) {_			context.setParent(parent)__		}_		configureWebResources(context, webMergedConfig)__		prepareContext(context, webMergedConfig)__		customizeBeanFactory(context.getDefaultListableBeanFactory(), webMergedConfig)__		loadBeanDefinitions(context, webMergedConfig)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(context)__		customizeContext(context, webMergedConfig)__		context.refresh()__		context.registerShutdownHook()__		return context__	};load,a,spring,link,web,application,context,from,the,supplied,link,merged,context,configuration,p,implementation,details,ul,li,calls,link,validate,merged,context,configuration,web,merged,context,configuration,to,allow,subclasses,to,validate,the,supplied,configuration,before,proceeding,li,li,creates,a,link,generic,web,application,context,instance,li,li,if,the,supplied,code,merged,context,configuration,references,a,linkplain,merged,context,configuration,get,parent,parent,configuration,the,corresponding,link,merged,context,configuration,get,parent,application,context,application,context,will,be,retrieved,and,linkplain,generic,web,application,context,set,parent,application,context,set,as,the,parent,for,the,context,created,by,this,method,li,li,delegates,to,link,configure,web,resources,to,create,the,link,mock,servlet,context,and,set,it,in,the,code,web,application,context,li,li,calls,link,prepare,context,to,allow,for,customizing,the,context,before,bean,definitions,are,loaded,li,li,calls,link,customize,bean,factory,to,allow,for,customizing,the,context,s,code,default,listable,bean,factory,li,li,delegates,to,link,load,bean,definitions,to,populate,the,context,from,the,locations,or,classes,in,the,supplied,code,merged,context,configuration,li,li,delegates,to,link,annotation,config,utils,for,linkplain,annotation,config,utils,register,annotation,config,processors,registering,annotation,configuration,processors,li,li,calls,link,customize,context,to,allow,for,customizing,the,context,before,it,is,refreshed,li,li,link,configurable,application,context,refresh,refreshes,the,context,and,registers,a,jvm,shutdown,hook,for,it,li,ul,return,a,new,web,application,context,see,org,springframework,test,context,smart,context,loader,load,context,merged,context,configuration,see,generic,web,application,context;override,public,final,configurable,application,context,load,context,merged,context,configuration,merged,config,throws,exception,assert,is,true,merged,config,instanceof,web,merged,context,configuration,string,format,cannot,load,web,application,context,from,non,web,merged,context,configuration,s,consider,annotating,your,test,class,with,web,app,configuration,merged,config,web,merged,context,configuration,web,merged,config,web,merged,context,configuration,merged,config,if,logger,is,debug,enabled,logger,debug,string,format,loading,web,application,context,for,merged,context,configuration,s,web,merged,config,validate,merged,context,configuration,web,merged,config,generic,web,application,context,context,new,generic,web,application,context,application,context,parent,merged,config,get,parent,application,context,if,parent,null,context,set,parent,parent,configure,web,resources,context,web,merged,config,prepare,context,context,web,merged,config,customize,bean,factory,context,get,default,listable,bean,factory,web,merged,config,load,bean,definitions,context,web,merged,config,annotation,config,utils,register,annotation,config,processors,context,customize,context,context,web,merged,config,context,refresh,context,register,shutdown,hook,return,context
AbstractGenericWebContextLoader -> protected abstract void loadBeanDefinitions(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig)_;1354573750;TODO [SPR-9864] Document loadBeanDefinitions().;protected abstract void loadBeanDefinitions(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig)_;todo,spr,9864,document,load,bean,definitions;protected,abstract,void,load,bean,definitions,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected abstract void loadBeanDefinitions(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig)_;1355187490;Load bean definitions into the supplied {@link GenericWebApplicationContext context}_from the locations or classes in the supplied <code>WebMergedContextConfiguration</code>.__<p>Concrete subclasses must provide an appropriate implementation.__@param context the context into which the bean definitions should be loaded_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected abstract void loadBeanDefinitions(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig)_;load,bean,definitions,into,the,supplied,link,generic,web,application,context,context,from,the,locations,or,classes,in,the,supplied,code,web,merged,context,configuration,code,p,concrete,subclasses,must,provide,an,appropriate,implementation,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,abstract,void,load,bean,definitions,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected abstract void loadBeanDefinitions(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig)_;1355313310;Load bean definitions into the supplied {@link GenericWebApplicationContext context}_from the locations or classes in the supplied <code>WebMergedContextConfiguration</code>.__<p>Concrete subclasses must provide an appropriate implementation.__@param context the context into which the bean definitions should be loaded_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected abstract void loadBeanDefinitions(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig)_;load,bean,definitions,into,the,supplied,link,generic,web,application,context,context,from,the,locations,or,classes,in,the,supplied,code,web,merged,context,configuration,code,p,concrete,subclasses,must,provide,an,appropriate,implementation,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,abstract,void,load,bean,definitions,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected abstract void loadBeanDefinitions(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig)_;1356735495;Load bean definitions into the supplied {@link GenericWebApplicationContext context}_from the locations or classes in the supplied {@code WebMergedContextConfiguration}.__<p>Concrete subclasses must provide an appropriate implementation.__@param context the context into which the bean definitions should be loaded_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected abstract void loadBeanDefinitions(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig)_;load,bean,definitions,into,the,supplied,link,generic,web,application,context,context,from,the,locations,or,classes,in,the,supplied,code,web,merged,context,configuration,p,concrete,subclasses,must,provide,an,appropriate,implementation,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,abstract,void,load,bean,definitions,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected abstract void loadBeanDefinitions(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig)_;1357119239;Load bean definitions into the supplied {@link GenericWebApplicationContext context}_from the locations or classes in the supplied {@code WebMergedContextConfiguration}.__<p>Concrete subclasses must provide an appropriate implementation.__@param context the context into which the bean definitions should be loaded_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected abstract void loadBeanDefinitions(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig)_;load,bean,definitions,into,the,supplied,link,generic,web,application,context,context,from,the,locations,or,classes,in,the,supplied,code,web,merged,context,configuration,p,concrete,subclasses,must,provide,an,appropriate,implementation,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,abstract,void,load,bean,definitions,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected abstract void loadBeanDefinitions(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig)_;1363208506;Load bean definitions into the supplied {@link GenericWebApplicationContext context}_from the locations or classes in the supplied {@code WebMergedContextConfiguration}.__<p>Concrete subclasses must provide an appropriate implementation.__@param context the context into which the bean definitions should be loaded_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected abstract void loadBeanDefinitions(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig)_;load,bean,definitions,into,the,supplied,link,generic,web,application,context,context,from,the,locations,or,classes,in,the,supplied,code,web,merged,context,configuration,p,concrete,subclasses,must,provide,an,appropriate,implementation,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,abstract,void,load,bean,definitions,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected abstract void loadBeanDefinitions(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig)_;1368482696;Load bean definitions into the supplied {@link GenericWebApplicationContext context}_from the locations or classes in the supplied {@code WebMergedContextConfiguration}.__<p>Concrete subclasses must provide an appropriate implementation.__@param context the context into which the bean definitions should be loaded_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected abstract void loadBeanDefinitions(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig)_;load,bean,definitions,into,the,supplied,link,generic,web,application,context,context,from,the,locations,or,classes,in,the,supplied,code,web,merged,context,configuration,p,concrete,subclasses,must,provide,an,appropriate,implementation,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,abstract,void,load,bean,definitions,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected abstract void loadBeanDefinitions(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig)_;1396374528;Load bean definitions into the supplied {@link GenericWebApplicationContext context}_from the locations or classes in the supplied {@code WebMergedContextConfiguration}.__<p>Concrete subclasses must provide an appropriate implementation.__@param context the context into which the bean definitions should be loaded_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected abstract void loadBeanDefinitions(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig)_;load,bean,definitions,into,the,supplied,link,generic,web,application,context,context,from,the,locations,or,classes,in,the,supplied,code,web,merged,context,configuration,p,concrete,subclasses,must,provide,an,appropriate,implementation,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,abstract,void,load,bean,definitions,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected abstract void loadBeanDefinitions(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig)_;1413848647;Load bean definitions into the supplied {@link GenericWebApplicationContext context}_from the locations or classes in the supplied {@code WebMergedContextConfiguration}.__<p>Concrete subclasses must provide an appropriate implementation.__@param context the context into which the bean definitions should be loaded_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected abstract void loadBeanDefinitions(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig)_;load,bean,definitions,into,the,supplied,link,generic,web,application,context,context,from,the,locations,or,classes,in,the,supplied,code,web,merged,context,configuration,p,concrete,subclasses,must,provide,an,appropriate,implementation,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,abstract,void,load,bean,definitions,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected abstract void loadBeanDefinitions(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig)_;1457727806;Load bean definitions into the supplied {@link GenericWebApplicationContext context}_from the locations or classes in the supplied {@code WebMergedContextConfiguration}.__<p>Concrete subclasses must provide an appropriate implementation.__@param context the context into which the bean definitions should be loaded_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected abstract void loadBeanDefinitions(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig)_;load,bean,definitions,into,the,supplied,link,generic,web,application,context,context,from,the,locations,or,classes,in,the,supplied,code,web,merged,context,configuration,p,concrete,subclasses,must,provide,an,appropriate,implementation,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,abstract,void,load,bean,definitions,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
AbstractGenericWebContextLoader -> protected abstract void loadBeanDefinitions(GenericWebApplicationContext context, 			WebMergedContextConfiguration webMergedConfig)_;1468334463;Load bean definitions into the supplied {@link GenericWebApplicationContext context}_from the locations or classes in the supplied {@code WebMergedContextConfiguration}.__<p>Concrete subclasses must provide an appropriate implementation.__@param context the context into which the bean definitions should be loaded_@param webMergedConfig the merged context configuration to use to load the_web application context_@see #loadContext(MergedContextConfiguration);protected abstract void loadBeanDefinitions(GenericWebApplicationContext context,_			WebMergedContextConfiguration webMergedConfig)_;load,bean,definitions,into,the,supplied,link,generic,web,application,context,context,from,the,locations,or,classes,in,the,supplied,code,web,merged,context,configuration,p,concrete,subclasses,must,provide,an,appropriate,implementation,param,context,the,context,into,which,the,bean,definitions,should,be,loaded,param,web,merged,config,the,merged,context,configuration,to,use,to,load,the,web,application,context,see,load,context,merged,context,configuration;protected,abstract,void,load,bean,definitions,generic,web,application,context,context,web,merged,context,configuration,web,merged,config
