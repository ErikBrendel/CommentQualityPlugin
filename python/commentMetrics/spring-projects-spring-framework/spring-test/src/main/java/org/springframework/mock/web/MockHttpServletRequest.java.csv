# id;timestamp;commentText;codeText;commentWords;codeWords
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1328020251;Adds all provided parameters <emphasis>without</emphasis> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key, "Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " + " or array of type ["_						+ String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,emphasis,without,emphasis,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1351354393;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key, "Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " + " or array of type ["_						+ String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1356735495;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key, "Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " + " or array of type ["_						+ String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1357119239;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key, "Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " + " or array of type ["_						+ String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1362408075;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1363796374;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1368482696;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1372363092;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1378933685;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1385412762;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1393608497;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1402068315;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1406563646;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1406563959;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1408399689;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1409231136;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1413289567;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1426882366;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1437330231;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1437642748;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1437651146;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1444681540;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1460644739;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1467730834;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1468334463;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1468613474;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1475510758;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void addParameters(Map params);1476370514;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void addParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;suppress,warnings,rawtypes,public,void,add,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,if,value,instanceof,string,this,add,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1328020251;Sets all provided parameters <emphasis>replacing</emphasis> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key, "Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " + " or array of type ["_						+ String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,emphasis,replacing,emphasis,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1351354393;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key, "Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " + " or array of type ["_						+ String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1356735495;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key, "Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " + " or array of type ["_						+ String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1357119239;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key, "Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " + " or array of type ["_						+ String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1362408075;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1363796374;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1368482696;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1372363092;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1378933685;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1385412762;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1393608497;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1402068315;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1406563646;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1406563959;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1408399689;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1409231136;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1413289567;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1426882366;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1437330231;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1437642748;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1437651146;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1444681540;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1460644739;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1467730834;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1468334463;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1468613474;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1475510758;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> @SuppressWarnings("rawtypes") 	public void setParameters(Map params);1476370514;Sets all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;@SuppressWarnings("rawtypes")_	public void setParameters(Map params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (Object key : params.keySet()) {_			Assert.isInstanceOf(String.class, key,_					"Parameter map key must be of type [" + String.class.getName() + "]")__			Object value = params.get(key)__			if (value instanceof String) {_				this.setParameter((String) key, (String) value)__			}_			else if (value instanceof String[]) {_				this.setParameter((String) key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};sets,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;suppress,warnings,rawtypes,public,void,set,parameters,map,params,assert,not,null,params,parameter,map,must,not,be,null,for,object,key,params,key,set,assert,is,instance,of,string,class,key,parameter,map,key,must,be,of,type,string,class,get,name,object,value,params,get,key,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,if,value,instanceof,string,this,set,parameter,string,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1328020251;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1351354393;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1356735495;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1357119239;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1362408075;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1363796374;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1368482696;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1372363092;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1378933685;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1385412762;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1393608497;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1402068315;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1406563646;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1406563959;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1408399689;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1409231136;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1413289567;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1426882366;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1437330231;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1437642748;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1437651146;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1444681540;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1460644739;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1467730834;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		if (!this.active) {_			throw new IllegalStateException("Request is not active anymore")__		}_	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,if,this,active,throw,new,illegal,state,exception,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1468334463;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1468613474;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1475510758;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1476370514;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1484252274;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1484260238;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1484533303;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1486061742;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1486720056;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1486994819;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1491860231;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1491909547;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1491909547;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1495868221;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1496259743;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1496955179;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1498780456;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1500448076;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1509894681;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1517567662;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1522192143;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1528920196;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1530174524;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1530174524;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1537706655;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1538233737;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1539352831;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> protected void checkActive() throws IllegalStateException;1543957663;Check whether this request is still active (that is, not completed yet),_throwing an IllegalStateException if not active anymore.;protected void checkActive() throws IllegalStateException {_		Assert.state(this.active, "Request is not active anymore")__	};check,whether,this,request,is,still,active,that,is,not,completed,yet,throwing,an,illegal,state,exception,if,not,active,anymore;protected,void,check,active,throws,illegal,state,exception,assert,state,this,active,request,is,not,active,anymore
MockHttpServletRequest -> @Override 	public Locale getLocale();1406563959;Returns the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};returns,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1408399689;Returns the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};returns,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1409231136;Returns the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};returns,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1413289567;Returns the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};returns,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1426882366;Returns the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};returns,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1437330231;Returns the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};returns,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1437642748;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1437651146;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1444681540;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1460644739;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1467730834;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1468334463;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1468613474;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1475510758;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1476370514;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1484252274;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1484260238;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1484533303;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1486061742;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1486720056;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1486994819;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1491860231;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1491909547;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1491909547;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1495868221;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1496259743;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1496955179;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1498780456;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1500448076;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1509894681;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1517567662;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1522192143;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1528920196;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1530174524;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1530174524;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1537706655;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1538233737;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1539352831;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Locale getLocale();1543957663;Return the first preferred {@linkplain Locale locale} configured_in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocale()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Locale getLocale() {_		return this.locales.get(0)__	};return,the,first,preferred,linkplain,locale,locale,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locale,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,locale,get,locale,return,this,locales,get,0
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1406563959;Returns an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};returns,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1408399689;Returns an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};returns,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1409231136;Returns an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};returns,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1413289567;Returns an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};returns,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1426882366;Returns an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};returns,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1437330231;Returns an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};returns,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1437642748;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1437651146;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1444681540;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1460644739;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1467730834;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1468334463;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1468613474;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1475510758;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1476370514;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1484252274;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1484260238;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1484533303;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1486061742;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1486720056;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1486994819;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1491860231;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1491909547;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1491909547;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1495868221;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1496259743;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1496955179;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1498780456;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1500448076;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1509894681;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1517567662;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1522192143;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1528920196;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1530174524;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1530174524;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1537706655;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1538233737;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1539352831;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public Enumeration<Locale> getLocales();1543957663;Return an {@linkplain Enumeration enumeration} of the preferred_{@linkplain Locale locales} configured in this mock request._<p>If no locales have been explicitly configured, the default,_preferred {@link Locale} for the <em>server</em> mocked by this_request is {@link Locale#ENGLISH}._<p>In contrast to the Servlet specification, this mock implementation_does <strong>not</strong> take into consideration any locales_specified via the {@code Accept-Language} header._@see javax.servlet.ServletRequest#getLocales()_@see #addPreferredLocale(Locale)_@see #setPreferredLocales(List);@Override_	public Enumeration<Locale> getLocales() {_		return Collections.enumeration(this.locales)__	};return,an,linkplain,enumeration,enumeration,of,the,preferred,linkplain,locale,locales,configured,in,this,mock,request,p,if,no,locales,have,been,explicitly,configured,the,default,preferred,link,locale,for,the,em,server,em,mocked,by,this,request,is,link,locale,english,p,in,contrast,to,the,servlet,specification,this,mock,implementation,does,strong,not,strong,take,into,consideration,any,locales,specified,via,the,code,accept,language,header,see,javax,servlet,servlet,request,get,locales,see,add,preferred,locale,locale,see,set,preferred,locales,list;override,public,enumeration,locale,get,locales,return,collections,enumeration,this,locales
MockHttpServletRequest -> @Override 	public boolean isSecure();1409231136;Returns {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._<p>_{@inheritDoc}_@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return this.secure || HTTPS.equalsIgnoreCase(this.getScheme())__	};returns,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,p,inherit,doc,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,get,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1413289567;Returns {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};returns,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1426882366;Returns {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};returns,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1437330231;Returns {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};returns,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1437642748;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1437651146;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1444681540;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1460644739;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1467730834;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1468334463;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1468613474;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1475510758;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1476370514;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1484252274;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1484260238;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1484533303;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1486061742;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1486720056;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1486994819;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1491860231;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1491909547;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1491909547;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1495868221;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1496259743;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1496955179;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1498780456;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1500448076;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1509894681;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1517567662;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1522192143;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1528920196;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1530174524;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1530174524;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1537706655;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1538233737;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1539352831;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> @Override 	public boolean isSecure();1543957663;Return {@code true} if the {@link #setSecure secure} flag has been set_to {@code true} or if the {@link #getScheme scheme} is {@code https}._@see javax.servlet.ServletRequest#isSecure();@Override_	public boolean isSecure() {_		return (this.secure || HTTPS.equalsIgnoreCase(this.scheme))__	};return,code,true,if,the,link,set,secure,secure,flag,has,been,set,to,code,true,or,if,the,link,get,scheme,scheme,is,code,https,see,javax,servlet,servlet,request,is,secure;override,public,boolean,is,secure,return,this,secure,https,equals,ignore,case,this,scheme
MockHttpServletRequest -> public void clearAttributes();1328020251;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1351354393;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1356735495;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1357119239;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1362408075;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1363796374;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1368482696;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1372363092;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1378933685;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1385412762;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1393608497;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1402068315;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1406563646;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1406563959;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1408399689;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1409231136;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1413289567;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1426882366;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1437330231;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1437642748;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1437651146;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1444681540;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1460644739;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1467730834;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1468334463;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1468613474;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1475510758;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1476370514;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1484252274;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1484260238;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1484533303;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1486061742;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1486720056;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1486994819;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1491860231;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1491909547;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1491909547;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1495868221;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1496259743;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1496955179;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1498780456;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1500448076;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1509894681;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1517567662;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1522192143;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1528920196;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1530174524;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1530174524;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1537706655;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1538233737;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1539352831;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void clearAttributes();1543957663;Clear all of this request's attributes.;public void clearAttributes() {_		this.attributes.clear()__	};clear,all,of,this,request,s,attributes;public,void,clear,attributes,this,attributes,clear
MockHttpServletRequest -> public void removeParameter(String name);1328020251;Remove already registered values for the specified HTTP parameter, if_any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1351354393;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1356735495;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1357119239;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1362408075;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1363796374;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1368482696;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1372363092;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1378933685;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1385412762;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1393608497;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1402068315;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1406563646;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1406563959;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1408399689;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1409231136;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1413289567;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1426882366;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1437330231;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1437642748;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1437651146;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1444681540;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1460644739;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1467730834;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1468334463;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1468613474;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1475510758;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1476370514;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1484252274;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1484260238;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1484533303;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1486061742;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1486720056;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1486994819;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1491860231;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1491909547;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1491909547;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1495868221;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1496259743;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1496955179;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1498780456;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1500448076;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1509894681;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1517567662;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1522192143;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1528920196;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1530174524;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1530174524;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1537706655;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1538233737;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1539352831;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void removeParameter(String name);1543957663;Remove already registered values for the specified HTTP parameter, if any.;public void removeParameter(String name) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.remove(name)__	};remove,already,registered,values,for,the,specified,http,parameter,if,any;public,void,remove,parameter,string,name,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,remove,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1484252274;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1484260238;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1484533303;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1486061742;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1486720056;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1486994819;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1491860231;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1491909547;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1491909547;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1495868221;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1496259743;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1496955179;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1498780456;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1500448076;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1509894681;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1517567662;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		}_	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1522192143;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		params.forEach((key, value) -> {_			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		})__	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,params,for,each,key,value,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1528920196;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		params.forEach((key, value) -> {_			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		})__	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,params,for,each,key,value,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1530174524;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		params.forEach((key, value) -> {_			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		})__	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,params,for,each,key,value,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1530174524;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		params.forEach((key, value) -> {_			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		})__	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,params,for,each,key,value,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1537706655;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		params.forEach((key, value) -> {_			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		})__	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,params,for,each,key,value,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1538233737;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		params.forEach((key, value) -> {_			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		})__	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,params,for,each,key,value,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1539352831;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		params.forEach((key, value) -> {_			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		})__	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,params,for,each,key,value,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setParameters(Map<String, ?> params);1543957663;Set all provided parameters <strong>replacing</strong> any existing_values for the provided parameter names. To add without replacing_existing values, use {@link #addParameters(java.util.Map)}.;public void setParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		params.forEach((key, value) -> {_			if (value instanceof String) {_				setParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				setParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException(_						"Parameter map value must be single value " + " or array of type [" + String.class.getName() + "]")__			}_		})__	};set,all,provided,parameters,strong,replacing,strong,any,existing,values,for,the,provided,parameter,names,to,add,without,replacing,existing,values,use,link,add,parameters,java,util,map;public,void,set,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,params,for,each,key,value,if,value,instanceof,string,set,parameter,key,string,value,else,if,value,instanceof,string,set,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameter(String name, String value);1328020251;Add a single value for the specified HTTP parameter._<p>_If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] { value })__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1351354393;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] { value })__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1356735495;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] { value })__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1357119239;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] { value })__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1362408075;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1363796374;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1368482696;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1372363092;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1378933685;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1385412762;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1393608497;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1402068315;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1406563646;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1406563959;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1408399689;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1409231136;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1413289567;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1426882366;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1437330231;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1437642748;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1437651146;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1444681540;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1460644739;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1467730834;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1468334463;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1468613474;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1475510758;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1476370514;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1484252274;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1484260238;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1484533303;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1486061742;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1486720056;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1486994819;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1491860231;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1491909547;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1491909547;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1495868221;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, String value);1496259743;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1328020251;Create a new MockHttpServletRequest with a default_{@link MockServletContext}._@param method the request method (may be <code>null</code>)_@param requestURI the request URI (may be <code>null</code>)_@see #setMethod_@see #setRequestURI_@see MockServletContext;public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,code,param,request,uri,the,request,uri,may,be,code,null,code,see,set,method,see,set,request,uri,see,mock,servlet,context;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1351354393;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be <code>null</code>)_@param requestURI the request URI (may be <code>null</code>)_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,code,param,request,uri,the,request,uri,may,be,code,null,code,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1356735495;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1357119239;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1362408075;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1363796374;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1368482696;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1372363092;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1378933685;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1385412762;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1393608497;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1402068315;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1406563646;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1406563959;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1408399689;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1409231136;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1413289567;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1426882366;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1437330231;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1437642748;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1437651146;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1444681540;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1460644739;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1467730834;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1468334463;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1468613474;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1475510758;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1476370514;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1484252274;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1484260238;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1484533303;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1486061742;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1486720056;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1486994819;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1491860231;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1491909547;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(String method, String requestURI);1491909547;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(String method, String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,string,method,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public void setSecure(boolean secure);1409231136;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@param secure a boolean indicating if the mock request was made using a_secure channel_@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,param,secure,a,boolean,indicating,if,the,mock,request,was,made,using,a,secure,channel,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1413289567;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1426882366;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1437330231;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1437642748;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1437651146;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1444681540;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1460644739;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1467730834;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1468334463;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1468613474;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1475510758;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1476370514;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1484252274;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1484260238;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1484533303;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1486061742;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1486720056;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1486994819;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1491860231;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1491909547;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1491909547;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1495868221;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1496259743;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1496955179;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1498780456;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1500448076;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1509894681;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1517567662;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1522192143;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1528920196;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1530174524;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1530174524;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1537706655;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1538233737;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1539352831;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setSecure(boolean secure);1543957663;Set the boolean {@code secure} flag indicating whether the mock request_was made using a secure channel, such as HTTPS._@see #isSecure()_@see #getScheme()_@see #setScheme(String);public void setSecure(boolean secure) {_		this.secure = secure__	};set,the,boolean,code,secure,flag,indicating,whether,the,mock,request,was,made,using,a,secure,channel,such,as,https,see,is,secure,see,get,scheme,see,set,scheme,string;public,void,set,secure,boolean,secure,this,secure,secure
MockHttpServletRequest -> public void setParameter(String name, String... values);1484252274;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1484260238;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1484533303;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1486061742;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1486720056;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1486994819;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1491860231;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1491909547;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1491909547;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1495868221;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1496259743;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1496955179;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1498780456;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1500448076;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1509894681;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1517567662;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1522192143;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1528920196;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1530174524;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1530174524;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1537706655;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1538233737;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1539352831;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String... values);1543957663;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1484252274;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1484260238;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1484533303;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1486061742;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1486720056;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1486994819;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1491860231;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1491909547;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1491909547;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1495868221;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1496259743;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1496955179;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1498780456;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1500448076;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1509894681;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1517567662;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1522192143;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1528920196;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1530174524;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1530174524;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1537706655;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1538233737;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1539352831;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String... values);1543957663;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String... values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1328020251;Create a new MockHttpServletRequest._@param servletContext the ServletContext that the request runs in (may be_<code>null</code> to use a default MockServletContext)_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,mock,http,servlet,request,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,code,to,use,a,default,mock,servlet,context,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1351354393;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in (may be_<code>null</code> to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,code,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1356735495;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1357119239;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1362408075;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1363796374;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1368482696;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1372363092;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1378933685;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1385412762;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1393608497;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1402068315;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1406563646;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1406563959;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1408399689;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1409231136;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1413289567;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1426882366;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1437330231;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1437642748;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1437651146;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1444681540;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1460644739;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1467730834;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1468334463;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1468613474;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1475510758;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1476370514;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1484252274;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1484260238;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1484533303;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1486061742;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1486720056;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1486994819;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1491860231;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1491909547;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext);1491909547;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1351354393;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "preferred locales list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,preferred,locales,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1356735495;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "preferred locales list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,preferred,locales,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1357119239;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "preferred locales list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,preferred,locales,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1362408075;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1363796374;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1368482696;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1372363092;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1378933685;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1385412762;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1393608497;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1402068315;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1406563646;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1406563959;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1408399689;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1409231136;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1413289567;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1426882366;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1437330231;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1437642748;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1437651146;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1444681540;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1460644739;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1467730834;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1468334463;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1468613474;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1475510758;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1476370514;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1484252274;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1484260238;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1484533303;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1486061742;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1486720056;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1486994819;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1491860231;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1491909547;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__		updateAcceptLanguageHeader()__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales,update,accept,language,header
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1491909547;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__		updateAcceptLanguageHeader()__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales,update,accept,language,header
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1495868221;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__		updateAcceptLanguageHeader()__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales,update,accept,language,header
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1496259743;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__		updateAcceptLanguageHeader()__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales,update,accept,language,header
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1496955179;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__		updateAcceptLanguageHeader()__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales,update,accept,language,header
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1498780456;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__		updateAcceptLanguageHeader()__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales,update,accept,language,header
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1500448076;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__		updateAcceptLanguageHeader()__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales,update,accept,language,header
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1509894681;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__		updateAcceptLanguageHeader()__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales,update,accept,language,header
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1517567662;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__		updateAcceptLanguageHeader()__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales,update,accept,language,header
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1522192143;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__		updateAcceptLanguageHeader()__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales,update,accept,language,header
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1528920196;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@see #addPreferredLocale_@since 3.2;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__		updateAcceptLanguageHeader()__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,see,add,preferred,locale,since,3,2;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales,update,accept,language,header
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1530174524;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@since 3.2_@see #addPreferredLocale;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__		updateAcceptLanguageHeader()__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,since,3,2,see,add,preferred,locale;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales,update,accept,language,header
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1530174524;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@since 3.2_@see #addPreferredLocale;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__		updateAcceptLanguageHeader()__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,since,3,2,see,add,preferred,locale;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales,update,accept,language,header
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1537706655;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@since 3.2_@see #addPreferredLocale;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__		updateAcceptLanguageHeader()__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,since,3,2,see,add,preferred,locale;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales,update,accept,language,header
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1538233737;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@since 3.2_@see #addPreferredLocale;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__		updateAcceptLanguageHeader()__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,since,3,2,see,add,preferred,locale;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales,update,accept,language,header
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1539352831;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@since 3.2_@see #addPreferredLocale;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__		updateAcceptLanguageHeader()__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,since,3,2,see,add,preferred,locale;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales,update,accept,language,header
MockHttpServletRequest -> public void setPreferredLocales(List<Locale> locales);1543957663;Set the list of preferred locales, in descending order, effectively replacing_any existing locales._@since 3.2_@see #addPreferredLocale;public void setPreferredLocales(List<Locale> locales) {_		Assert.notEmpty(locales, "Locale list must not be empty")__		this.locales.clear()__		this.locales.addAll(locales)__		updateAcceptLanguageHeader()__	};set,the,list,of,preferred,locales,in,descending,order,effectively,replacing,any,existing,locales,since,3,2,see,add,preferred,locale;public,void,set,preferred,locales,list,locale,locales,assert,not,empty,locales,locale,list,must,not,be,empty,this,locales,clear,this,locales,add,all,locales,update,accept,language,header
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1368482696;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1372363092;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1378933685;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1385412762;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1393608497;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1402068315;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1406563646;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1406563959;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1408399689;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1409231136;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1413289567;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1426882366;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1437330231;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1437642748;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1437651146;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1444681540;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1460644739;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1467730834;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1468334463;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1468613474;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1475510758;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1476370514;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1484252274;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1484260238;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1484533303;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1486061742;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1486720056;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1486994819;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1491860231;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1491909547;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1491909547;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1495868221;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1496259743;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1496955179;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1498780456;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1500448076;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1509894681;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1517567662;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1522192143;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1528920196;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1530174524;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1530174524;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1537706655;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1538233737;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1539352831;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> @Override 	public ServletContext getServletContext();1543957663;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);@Override_	public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;override,public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1476370514;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1484252274;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1484260238;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1484533303;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1486061742;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1486720056;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1486994819;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1491860231;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1491909547;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1491909547;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> public void invalidate();1328020251;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1351354393;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1356735495;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1357119239;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1362408075;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1363796374;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1368482696;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1372363092;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1378933685;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1385412762;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1393608497;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1402068315;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1406563646;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1406563959;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1408399689;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1409231136;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1413289567;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1426882366;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1437330231;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1437642748;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1437651146;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1444681540;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1460644739;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1467730834;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1468334463;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1468613474;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1475510758;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1476370514;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1484252274;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1484260238;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1484533303;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1486061742;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1486720056;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1486994819;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1491860231;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1491909547;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1491909547;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1495868221;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1496259743;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1496955179;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1498780456;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1500448076;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1509894681;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1517567662;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1522192143;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1528920196;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1530174524;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1530174524;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1537706655;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1538233737;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1539352831;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void invalidate();1543957663;Invalidate this request, clearing its state.;public void invalidate() {_		close()__		clearAttributes()__	};invalidate,this,request,clearing,its,state;public,void,invalidate,close,clear,attributes
MockHttpServletRequest -> public void removeHeader(String name);1537706655;Remove already registered values for the specified HTTP header, if any._@since 5.1.1;public void removeHeader(String name) {_		Assert.notNull(name, "Header name must not be null")__		this.headers.remove(name)__	};remove,already,registered,values,for,the,specified,http,header,if,any,since,5,1,1;public,void,remove,header,string,name,assert,not,null,name,header,name,must,not,be,null,this,headers,remove,name
MockHttpServletRequest -> public void removeHeader(String name);1538233737;Remove already registered entries for the specified HTTP header, if any._@since 4.3.20;public void removeHeader(String name) {_		Assert.notNull(name, "Header name must not be null")__		this.headers.remove(name)__	};remove,already,registered,entries,for,the,specified,http,header,if,any,since,4,3,20;public,void,remove,header,string,name,assert,not,null,name,header,name,must,not,be,null,this,headers,remove,name
MockHttpServletRequest -> public void removeHeader(String name);1539352831;Remove already registered entries for the specified HTTP header, if any._@since 4.3.20;public void removeHeader(String name) {_		Assert.notNull(name, "Header name must not be null")__		this.headers.remove(name)__	};remove,already,registered,entries,for,the,specified,http,header,if,any,since,4,3,20;public,void,remove,header,string,name,assert,not,null,name,header,name,must,not,be,null,this,headers,remove,name
MockHttpServletRequest -> public void removeHeader(String name);1543957663;Remove already registered entries for the specified HTTP header, if any._@since 4.3.20;public void removeHeader(String name) {_		Assert.notNull(name, "Header name must not be null")__		this.headers.remove(name)__	};remove,already,registered,entries,for,the,specified,http,header,if,any,since,4,3,20;public,void,remove,header,string,name,assert,not,null,name,header,name,must,not,be,null,this,headers,remove,name
MockHttpServletRequest -> @Nullable 	public byte[] getContentAsByteArray();1495868221;Get the content of the request body as a byte array._@return the content as a byte array, potentially {@code null}_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();@Nullable_	public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;nullable,public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> @Nullable 	public byte[] getContentAsByteArray();1496259743;Get the content of the request body as a byte array._@return the content as a byte array, potentially {@code null}_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();@Nullable_	public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;nullable,public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> @Nullable 	public byte[] getContentAsByteArray();1496955179;Get the content of the request body as a byte array._@return the content as a byte array, potentially {@code null}_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();@Nullable_	public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;nullable,public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> @Nullable 	public byte[] getContentAsByteArray();1498780456;Get the content of the request body as a byte array._@return the content as a byte array (potentially {@code null})_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();@Nullable_	public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;nullable,public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> @Nullable 	public byte[] getContentAsByteArray();1500448076;Get the content of the request body as a byte array._@return the content as a byte array (potentially {@code null})_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();@Nullable_	public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;nullable,public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> @Nullable 	public byte[] getContentAsByteArray();1509894681;Get the content of the request body as a byte array._@return the content as a byte array (potentially {@code null})_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();@Nullable_	public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;nullable,public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> @Nullable 	public byte[] getContentAsByteArray();1517567662;Get the content of the request body as a byte array._@return the content as a byte array (potentially {@code null})_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();@Nullable_	public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;nullable,public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> @Nullable 	public byte[] getContentAsByteArray();1522192143;Get the content of the request body as a byte array._@return the content as a byte array (potentially {@code null})_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();@Nullable_	public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;nullable,public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> @Nullable 	public byte[] getContentAsByteArray();1528920196;Get the content of the request body as a byte array._@return the content as a byte array (potentially {@code null})_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();@Nullable_	public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;nullable,public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> @Nullable 	public byte[] getContentAsByteArray();1530174524;Get the content of the request body as a byte array._@return the content as a byte array (potentially {@code null})_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();@Nullable_	public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;nullable,public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> @Nullable 	public byte[] getContentAsByteArray();1530174524;Get the content of the request body as a byte array._@return the content as a byte array (potentially {@code null})_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();@Nullable_	public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;nullable,public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> @Nullable 	public byte[] getContentAsByteArray();1537706655;Get the content of the request body as a byte array._@return the content as a byte array (potentially {@code null})_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();@Nullable_	public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;nullable,public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> @Nullable 	public byte[] getContentAsByteArray();1538233737;Get the content of the request body as a byte array._@return the content as a byte array (potentially {@code null})_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();@Nullable_	public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;nullable,public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> @Nullable 	public byte[] getContentAsByteArray();1539352831;Get the content of the request body as a byte array._@return the content as a byte array (potentially {@code null})_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();@Nullable_	public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;nullable,public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> @Nullable 	public byte[] getContentAsByteArray();1543957663;Get the content of the request body as a byte array._@return the content as a byte array (potentially {@code null})_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();@Nullable_	public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;nullable,public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> public void addHeader(String name, Object value);1328020251;Add a header entry for the given name._<p>If there was no entry for that header name before, the value will be used_as-is. In case of an existing entry, a String array will be created,_adding the given value (more specifically, its toString representation)_as further element._<p>Multiple values can only be stored as list of Strings, following the_Servlet spec (see <code>getHeaders</code> accessor). As alternative to_repeated <code>addHeader</code> calls for individual elements, you can_use a single call with an entire array or Collection of values as_parameter._@see #getHeaderNames_@see #getHeader_@see #getHeaders_@see #getDateHeader_@see #getIntHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,if,there,was,no,entry,for,that,header,name,before,the,value,will,be,used,as,is,in,case,of,an,existing,entry,a,string,array,will,be,created,adding,the,given,value,more,specifically,its,to,string,representation,as,further,element,p,multiple,values,can,only,be,stored,as,list,of,strings,following,the,servlet,spec,see,code,get,headers,code,accessor,as,alternative,to,repeated,code,add,header,code,calls,for,individual,elements,you,can,use,a,single,call,with,an,entire,array,or,collection,of,values,as,parameter,see,get,header,names,see,get,header,see,get,headers,see,get,date,header,see,get,int,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1351354393;Add a header entry for the given name._<p>If there was no entry for that header name before, the value will be used_as-is. In case of an existing entry, a String array will be created,_adding the given value (more specifically, its toString representation)_as further element._<p>Multiple values can only be stored as list of Strings, following the_Servlet spec (see <code>getHeaders</code> accessor). As alternative to_repeated <code>addHeader</code> calls for individual elements, you can_use a single call with an entire array or Collection of values as_parameter._@see #getHeaderNames_@see #getHeader_@see #getHeaders_@see #getDateHeader_@see #getIntHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,if,there,was,no,entry,for,that,header,name,before,the,value,will,be,used,as,is,in,case,of,an,existing,entry,a,string,array,will,be,created,adding,the,given,value,more,specifically,its,to,string,representation,as,further,element,p,multiple,values,can,only,be,stored,as,list,of,strings,following,the,servlet,spec,see,code,get,headers,code,accessor,as,alternative,to,repeated,code,add,header,code,calls,for,individual,elements,you,can,use,a,single,call,with,an,entire,array,or,collection,of,values,as,parameter,see,get,header,names,see,get,header,see,get,headers,see,get,date,header,see,get,int,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1356735495;Add a header entry for the given name._<p>If there was no entry for that header name before, the value will be used_as-is. In case of an existing entry, a String array will be created,_adding the given value (more specifically, its toString representation)_as further element._<p>Multiple values can only be stored as list of Strings, following the_Servlet spec (see {@code getHeaders} accessor). As alternative to_repeated {@code addHeader} calls for individual elements, you can_use a single call with an entire array or Collection of values as_parameter._@see #getHeaderNames_@see #getHeader_@see #getHeaders_@see #getDateHeader_@see #getIntHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,if,there,was,no,entry,for,that,header,name,before,the,value,will,be,used,as,is,in,case,of,an,existing,entry,a,string,array,will,be,created,adding,the,given,value,more,specifically,its,to,string,representation,as,further,element,p,multiple,values,can,only,be,stored,as,list,of,strings,following,the,servlet,spec,see,code,get,headers,accessor,as,alternative,to,repeated,code,add,header,calls,for,individual,elements,you,can,use,a,single,call,with,an,entire,array,or,collection,of,values,as,parameter,see,get,header,names,see,get,header,see,get,headers,see,get,date,header,see,get,int,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1357119239;Add a header entry for the given name._<p>If there was no entry for that header name before, the value will be used_as-is. In case of an existing entry, a String array will be created,_adding the given value (more specifically, its toString representation)_as further element._<p>Multiple values can only be stored as list of Strings, following the_Servlet spec (see {@code getHeaders} accessor). As alternative to_repeated {@code addHeader} calls for individual elements, you can_use a single call with an entire array or Collection of values as_parameter._@see #getHeaderNames_@see #getHeader_@see #getHeaders_@see #getDateHeader_@see #getIntHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,if,there,was,no,entry,for,that,header,name,before,the,value,will,be,used,as,is,in,case,of,an,existing,entry,a,string,array,will,be,created,adding,the,given,value,more,specifically,its,to,string,representation,as,further,element,p,multiple,values,can,only,be,stored,as,list,of,strings,following,the,servlet,spec,see,code,get,headers,accessor,as,alternative,to,repeated,code,add,header,calls,for,individual,elements,you,can,use,a,single,call,with,an,entire,array,or,collection,of,values,as,parameter,see,get,header,names,see,get,header,see,get,headers,see,get,date,header,see,get,int,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1362408075;Add a header entry for the given name._<p>If there was no entry for that header name before, the value will be used_as-is. In case of an existing entry, a String array will be created,_adding the given value (more specifically, its toString representation)_as further element._<p>Multiple values can only be stored as list of Strings, following the_Servlet spec (see {@code getHeaders} accessor). As alternative to_repeated {@code addHeader} calls for individual elements, you can_use a single call with an entire array or Collection of values as_parameter._@see #getHeaderNames_@see #getHeader_@see #getHeaders_@see #getDateHeader_@see #getIntHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,if,there,was,no,entry,for,that,header,name,before,the,value,will,be,used,as,is,in,case,of,an,existing,entry,a,string,array,will,be,created,adding,the,given,value,more,specifically,its,to,string,representation,as,further,element,p,multiple,values,can,only,be,stored,as,list,of,strings,following,the,servlet,spec,see,code,get,headers,accessor,as,alternative,to,repeated,code,add,header,calls,for,individual,elements,you,can,use,a,single,call,with,an,entire,array,or,collection,of,values,as,parameter,see,get,header,names,see,get,header,see,get,headers,see,get,date,header,see,get,int,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1363796374;Add a header entry for the given name._<p>If there was no entry for that header name before, the value will be used_as-is. In case of an existing entry, a String array will be created,_adding the given value (more specifically, its toString representation)_as further element._<p>Multiple values can only be stored as list of Strings, following the_Servlet spec (see {@code getHeaders} accessor). As alternative to_repeated {@code addHeader} calls for individual elements, you can_use a single call with an entire array or Collection of values as_parameter._@see #getHeaderNames_@see #getHeader_@see #getHeaders_@see #getDateHeader_@see #getIntHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,if,there,was,no,entry,for,that,header,name,before,the,value,will,be,used,as,is,in,case,of,an,existing,entry,a,string,array,will,be,created,adding,the,given,value,more,specifically,its,to,string,representation,as,further,element,p,multiple,values,can,only,be,stored,as,list,of,strings,following,the,servlet,spec,see,code,get,headers,accessor,as,alternative,to,repeated,code,add,header,calls,for,individual,elements,you,can,use,a,single,call,with,an,entire,array,or,collection,of,values,as,parameter,see,get,header,names,see,get,header,see,get,headers,see,get,date,header,see,get,int,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1368482696;Add a header entry for the given name._<p>If there was no entry for that header name before, the value will be used_as-is. In case of an existing entry, a String array will be created,_adding the given value (more specifically, its toString representation)_as further element._<p>Multiple values can only be stored as list of Strings, following the_Servlet spec (see {@code getHeaders} accessor). As alternative to_repeated {@code addHeader} calls for individual elements, you can_use a single call with an entire array or Collection of values as_parameter._@see #getHeaderNames_@see #getHeader_@see #getHeaders_@see #getDateHeader_@see #getIntHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,if,there,was,no,entry,for,that,header,name,before,the,value,will,be,used,as,is,in,case,of,an,existing,entry,a,string,array,will,be,created,adding,the,given,value,more,specifically,its,to,string,representation,as,further,element,p,multiple,values,can,only,be,stored,as,list,of,strings,following,the,servlet,spec,see,code,get,headers,accessor,as,alternative,to,repeated,code,add,header,calls,for,individual,elements,you,can,use,a,single,call,with,an,entire,array,or,collection,of,values,as,parameter,see,get,header,names,see,get,header,see,get,headers,see,get,date,header,see,get,int,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1372363092;Add a header entry for the given name._<p>If there was no entry for that header name before, the value will be used_as-is. In case of an existing entry, a String array will be created,_adding the given value (more specifically, its toString representation)_as further element._<p>Multiple values can only be stored as list of Strings, following the_Servlet spec (see {@code getHeaders} accessor). As alternative to_repeated {@code addHeader} calls for individual elements, you can_use a single call with an entire array or Collection of values as_parameter._@see #getHeaderNames_@see #getHeader_@see #getHeaders_@see #getDateHeader_@see #getIntHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,if,there,was,no,entry,for,that,header,name,before,the,value,will,be,used,as,is,in,case,of,an,existing,entry,a,string,array,will,be,created,adding,the,given,value,more,specifically,its,to,string,representation,as,further,element,p,multiple,values,can,only,be,stored,as,list,of,strings,following,the,servlet,spec,see,code,get,headers,accessor,as,alternative,to,repeated,code,add,header,calls,for,individual,elements,you,can,use,a,single,call,with,an,entire,array,or,collection,of,values,as,parameter,see,get,header,names,see,get,header,see,get,headers,see,get,date,header,see,get,int,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1378933685;Add a header entry for the given name._<p>If there was no entry for that header name before, the value will be used_as-is. In case of an existing entry, a String array will be created,_adding the given value (more specifically, its toString representation)_as further element._<p>Multiple values can only be stored as list of Strings, following the_Servlet spec (see {@code getHeaders} accessor). As alternative to_repeated {@code addHeader} calls for individual elements, you can_use a single call with an entire array or Collection of values as_parameter._@see #getHeaderNames_@see #getHeader_@see #getHeaders_@see #getDateHeader_@see #getIntHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,if,there,was,no,entry,for,that,header,name,before,the,value,will,be,used,as,is,in,case,of,an,existing,entry,a,string,array,will,be,created,adding,the,given,value,more,specifically,its,to,string,representation,as,further,element,p,multiple,values,can,only,be,stored,as,list,of,strings,following,the,servlet,spec,see,code,get,headers,accessor,as,alternative,to,repeated,code,add,header,calls,for,individual,elements,you,can,use,a,single,call,with,an,entire,array,or,collection,of,values,as,parameter,see,get,header,names,see,get,header,see,get,headers,see,get,date,header,see,get,int,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1385412762;Add a header entry for the given name._<p>If there was no entry for that header name before, the value will be used_as-is. In case of an existing entry, a String array will be created,_adding the given value (more specifically, its toString representation)_as further element._<p>Multiple values can only be stored as list of Strings, following the_Servlet spec (see {@code getHeaders} accessor). As alternative to_repeated {@code addHeader} calls for individual elements, you can_use a single call with an entire array or Collection of values as_parameter._@see #getHeaderNames_@see #getHeader_@see #getHeaders_@see #getDateHeader_@see #getIntHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,if,there,was,no,entry,for,that,header,name,before,the,value,will,be,used,as,is,in,case,of,an,existing,entry,a,string,array,will,be,created,adding,the,given,value,more,specifically,its,to,string,representation,as,further,element,p,multiple,values,can,only,be,stored,as,list,of,strings,following,the,servlet,spec,see,code,get,headers,accessor,as,alternative,to,repeated,code,add,header,calls,for,individual,elements,you,can,use,a,single,call,with,an,entire,array,or,collection,of,values,as,parameter,see,get,header,names,see,get,header,see,get,headers,see,get,date,header,see,get,int,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1393608497;Add a header entry for the given name._<p>If there was no entry for that header name before, the value will be used_as-is. In case of an existing entry, a String array will be created,_adding the given value (more specifically, its toString representation)_as further element._<p>Multiple values can only be stored as list of Strings, following the_Servlet spec (see {@code getHeaders} accessor). As alternative to_repeated {@code addHeader} calls for individual elements, you can_use a single call with an entire array or Collection of values as_parameter._@see #getHeaderNames_@see #getHeader_@see #getHeaders_@see #getDateHeader_@see #getIntHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,if,there,was,no,entry,for,that,header,name,before,the,value,will,be,used,as,is,in,case,of,an,existing,entry,a,string,array,will,be,created,adding,the,given,value,more,specifically,its,to,string,representation,as,further,element,p,multiple,values,can,only,be,stored,as,list,of,strings,following,the,servlet,spec,see,code,get,headers,accessor,as,alternative,to,repeated,code,add,header,calls,for,individual,elements,you,can,use,a,single,call,with,an,entire,array,or,collection,of,values,as,parameter,see,get,header,names,see,get,header,see,get,headers,see,get,date,header,see,get,int,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1402068315;Add a header entry for the given name._<p>If there was no entry for that header name before, the value will be used_as-is. In case of an existing entry, a String array will be created,_adding the given value (more specifically, its toString representation)_as further element._<p>Multiple values can only be stored as list of Strings, following the_Servlet spec (see {@code getHeaders} accessor). As alternative to_repeated {@code addHeader} calls for individual elements, you can_use a single call with an entire array or Collection of values as_parameter._@see #getHeaderNames_@see #getHeader_@see #getHeaders_@see #getDateHeader_@see #getIntHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,if,there,was,no,entry,for,that,header,name,before,the,value,will,be,used,as,is,in,case,of,an,existing,entry,a,string,array,will,be,created,adding,the,given,value,more,specifically,its,to,string,representation,as,further,element,p,multiple,values,can,only,be,stored,as,list,of,strings,following,the,servlet,spec,see,code,get,headers,accessor,as,alternative,to,repeated,code,add,header,calls,for,individual,elements,you,can,use,a,single,call,with,an,entire,array,or,collection,of,values,as,parameter,see,get,header,names,see,get,header,see,get,headers,see,get,date,header,see,get,int,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1406563646;Add a header entry for the given name._<p>If there was no entry for that header name before, the value will be used_as-is. In case of an existing entry, a String array will be created,_adding the given value (more specifically, its toString representation)_as further element._<p>Multiple values can only be stored as list of Strings, following the_Servlet spec (see {@code getHeaders} accessor). As alternative to_repeated {@code addHeader} calls for individual elements, you can_use a single call with an entire array or Collection of values as_parameter._@see #getHeaderNames_@see #getHeader_@see #getHeaders_@see #getDateHeader_@see #getIntHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,if,there,was,no,entry,for,that,header,name,before,the,value,will,be,used,as,is,in,case,of,an,existing,entry,a,string,array,will,be,created,adding,the,given,value,more,specifically,its,to,string,representation,as,further,element,p,multiple,values,can,only,be,stored,as,list,of,strings,following,the,servlet,spec,see,code,get,headers,accessor,as,alternative,to,repeated,code,add,header,calls,for,individual,elements,you,can,use,a,single,call,with,an,entire,array,or,collection,of,values,as,parameter,see,get,header,names,see,get,header,see,get,headers,see,get,date,header,see,get,int,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1406563959;Add a header entry for the given name._<p>If there was no entry for that header name before, the value will be used_as-is. In case of an existing entry, a String array will be created,_adding the given value (more specifically, its toString representation)_as further element._<p>Multiple values can only be stored as list of Strings, following the_Servlet spec (see {@code getHeaders} accessor). As alternative to_repeated {@code addHeader} calls for individual elements, you can_use a single call with an entire array or Collection of values as_parameter._@see #getHeaderNames_@see #getHeader_@see #getHeaders_@see #getDateHeader_@see #getIntHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,if,there,was,no,entry,for,that,header,name,before,the,value,will,be,used,as,is,in,case,of,an,existing,entry,a,string,array,will,be,created,adding,the,given,value,more,specifically,its,to,string,representation,as,further,element,p,multiple,values,can,only,be,stored,as,list,of,strings,following,the,servlet,spec,see,code,get,headers,accessor,as,alternative,to,repeated,code,add,header,calls,for,individual,elements,you,can,use,a,single,call,with,an,entire,array,or,collection,of,values,as,parameter,see,get,header,names,see,get,header,see,get,headers,see,get,date,header,see,get,int,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1408399689;Add a header entry for the given name._<p>If there was no entry for that header name before, the value will be used_as-is. In case of an existing entry, a String array will be created,_adding the given value (more specifically, its toString representation)_as further element._<p>Multiple values can only be stored as list of Strings, following the_Servlet spec (see {@code getHeaders} accessor). As alternative to_repeated {@code addHeader} calls for individual elements, you can_use a single call with an entire array or Collection of values as_parameter._@see #getHeaderNames_@see #getHeader_@see #getHeaders_@see #getDateHeader_@see #getIntHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,if,there,was,no,entry,for,that,header,name,before,the,value,will,be,used,as,is,in,case,of,an,existing,entry,a,string,array,will,be,created,adding,the,given,value,more,specifically,its,to,string,representation,as,further,element,p,multiple,values,can,only,be,stored,as,list,of,strings,following,the,servlet,spec,see,code,get,headers,accessor,as,alternative,to,repeated,code,add,header,calls,for,individual,elements,you,can,use,a,single,call,with,an,entire,array,or,collection,of,values,as,parameter,see,get,header,names,see,get,header,see,get,headers,see,get,date,header,see,get,int,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1409231136;Add a header entry for the given name._<p>If there was no entry for that header name before, the value will be used_as-is. In case of an existing entry, a String array will be created,_adding the given value (more specifically, its toString representation)_as further element._<p>Multiple values can only be stored as list of Strings, following the_Servlet spec (see {@code getHeaders} accessor). As alternative to_repeated {@code addHeader} calls for individual elements, you can_use a single call with an entire array or Collection of values as_parameter._@see #getHeaderNames_@see #getHeader_@see #getHeaders_@see #getDateHeader_@see #getIntHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,if,there,was,no,entry,for,that,header,name,before,the,value,will,be,used,as,is,in,case,of,an,existing,entry,a,string,array,will,be,created,adding,the,given,value,more,specifically,its,to,string,representation,as,further,element,p,multiple,values,can,only,be,stored,as,list,of,strings,following,the,servlet,spec,see,code,get,headers,accessor,as,alternative,to,repeated,code,add,header,calls,for,individual,elements,you,can,use,a,single,call,with,an,entire,array,or,collection,of,values,as,parameter,see,get,header,names,see,get,header,see,get,headers,see,get,date,header,see,get,int,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1413289567;Add a header entry for the given name._<p>If there was no entry for that header name before, the value will be used_as-is. In case of an existing entry, a String array will be created,_adding the given value (more specifically, its toString representation)_as further element._<p>Multiple values can only be stored as list of Strings, following the_Servlet spec (see {@code getHeaders} accessor). As alternative to_repeated {@code addHeader} calls for individual elements, you can_use a single call with an entire array or Collection of values as_parameter._@see #getHeaderNames_@see #getHeader_@see #getHeaders_@see #getDateHeader_@see #getIntHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,if,there,was,no,entry,for,that,header,name,before,the,value,will,be,used,as,is,in,case,of,an,existing,entry,a,string,array,will,be,created,adding,the,given,value,more,specifically,its,to,string,representation,as,further,element,p,multiple,values,can,only,be,stored,as,list,of,strings,following,the,servlet,spec,see,code,get,headers,accessor,as,alternative,to,repeated,code,add,header,calls,for,individual,elements,you,can,use,a,single,call,with,an,entire,array,or,collection,of,values,as,parameter,see,get,header,names,see,get,header,see,get,headers,see,get,date,header,see,get,int,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1426882366;Add a header entry for the given name._<p>If there was no entry for that header name before, the value will be used_as-is. In case of an existing entry, a String array will be created,_adding the given value (more specifically, its toString representation)_as further element._<p>Multiple values can only be stored as list of Strings, following the_Servlet spec (see {@code getHeaders} accessor). As alternative to_repeated {@code addHeader} calls for individual elements, you can_use a single call with an entire array or Collection of values as_parameter._@see #getHeaderNames_@see #getHeader_@see #getHeaders_@see #getDateHeader_@see #getIntHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,if,there,was,no,entry,for,that,header,name,before,the,value,will,be,used,as,is,in,case,of,an,existing,entry,a,string,array,will,be,created,adding,the,given,value,more,specifically,its,to,string,representation,as,further,element,p,multiple,values,can,only,be,stored,as,list,of,strings,following,the,servlet,spec,see,code,get,headers,accessor,as,alternative,to,repeated,code,add,header,calls,for,individual,elements,you,can,use,a,single,call,with,an,entire,array,or,collection,of,values,as,parameter,see,get,header,names,see,get,header,see,get,headers,see,get,date,header,see,get,int,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1437330231;Add a header entry for the given name._<p>If there was no entry for that header name before, the value will be used_as-is. In case of an existing entry, a String array will be created,_adding the given value (more specifically, its toString representation)_as further element._<p>Multiple values can only be stored as list of Strings, following the_Servlet spec (see {@code getHeaders} accessor). As alternative to_repeated {@code addHeader} calls for individual elements, you can_use a single call with an entire array or Collection of values as_parameter._@see #getHeaderNames_@see #getHeader_@see #getHeaders_@see #getDateHeader_@see #getIntHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,if,there,was,no,entry,for,that,header,name,before,the,value,will,be,used,as,is,in,case,of,an,existing,entry,a,string,array,will,be,created,adding,the,given,value,more,specifically,its,to,string,representation,as,further,element,p,multiple,values,can,only,be,stored,as,list,of,strings,following,the,servlet,spec,see,code,get,headers,accessor,as,alternative,to,repeated,code,add,header,calls,for,individual,elements,you,can,use,a,single,call,with,an,entire,array,or,collection,of,values,as,parameter,see,get,header,names,see,get,header,see,get,headers,see,get,date,header,see,get,int,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1437642748;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter,_it is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString}, see {@link #getHeader} </li>_<li>String, Number or Date for date headers, see {@link #getDateHeader}</li>_<li>String or Number for integer headers, see {@link #getIntHeader}</li>_<li>{@code String[]} and {@code Collection<String>} for multiple values, see {@link #getHeaders}</li>_</ul>_@see #getHeaderNames_@see #getHeaders;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,and,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1437651146;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1444681540;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1460644739;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1467730834;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1468334463;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1468613474;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1475510758;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1476370514;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name)) {_			setContentType((String) value)__			return__		}_		doAddHeaderValue(name, value, false)__	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,set,content,type,string,value,return,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1484252274;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name) && !this.headers.containsKey(CONTENT_TYPE_HEADER)) {_			setContentType(value.toString())__		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,this,headers,contains,key,set,content,type,value,to,string,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1484260238;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name) && !this.headers.containsKey(CONTENT_TYPE_HEADER)) {_			setContentType(value.toString())__		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,this,headers,contains,key,set,content,type,value,to,string,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1484533303;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name) && !this.headers.containsKey(CONTENT_TYPE_HEADER)) {_			setContentType(value.toString())__		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,this,headers,contains,key,set,content,type,value,to,string,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1486061742;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name) && !this.headers.containsKey(CONTENT_TYPE_HEADER)) {_			setContentType(value.toString())__		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,this,headers,contains,key,set,content,type,value,to,string,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1486720056;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name) && !this.headers.containsKey(CONTENT_TYPE_HEADER)) {_			setContentType(value.toString())__		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,this,headers,contains,key,set,content,type,value,to,string,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1486994819;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (CONTENT_TYPE_HEADER.equalsIgnoreCase(name) && !this.headers.containsKey(CONTENT_TYPE_HEADER)) {_			setContentType(value.toString())__		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,equals,ignore,case,name,this,headers,contains,key,set,content,type,value,to,string,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1491860231;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) && !this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {_			setContentType(value.toString())__		}_		else {_			this.cookieHeaderSet = HttpHeaders.COOKIE.equalsIgnoreCase(name)__			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,set,content,type,value,to,string,else,this,cookie,header,set,http,headers,cookie,equals,ignore,case,name,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1491909547;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {__			setContentType(value.toString())__		}_		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {__			HttpHeaders headers = new HttpHeaders()__			headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString())__			setPreferredLocales(headers.getAcceptLanguageAsLocales())__		}_		else {_			this.cookieHeaderSet = HttpHeaders.COOKIE.equalsIgnoreCase(name)__			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,set,content,type,value,to,string,else,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,http,headers,headers,new,http,headers,headers,add,http,headers,value,to,string,set,preferred,locales,headers,get,accept,language,as,locales,else,this,cookie,header,set,http,headers,cookie,equals,ignore,case,name,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1491909547;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {__			setContentType(value.toString())__		}_		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {__			HttpHeaders headers = new HttpHeaders()__			headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString())__			setPreferredLocales(headers.getAcceptLanguageAsLocales())__		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,set,content,type,value,to,string,else,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,http,headers,headers,new,http,headers,headers,add,http,headers,value,to,string,set,preferred,locales,headers,get,accept,language,as,locales,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1495868221;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {__			setContentType(value.toString())__		}_		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {__			HttpHeaders headers = new HttpHeaders()__			headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString())__			setPreferredLocales(headers.getAcceptLanguageAsLocales())__		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,set,content,type,value,to,string,else,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,http,headers,headers,new,http,headers,headers,add,http,headers,value,to,string,set,preferred,locales,headers,get,accept,language,as,locales,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1496259743;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {__			setContentType(value.toString())__		}_		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {__			HttpHeaders headers = new HttpHeaders()__			headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString())__			setPreferredLocales(headers.getAcceptLanguageAsLocales())__		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,set,content,type,value,to,string,else,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,http,headers,headers,new,http,headers,headers,add,http,headers,value,to,string,set,preferred,locales,headers,get,accept,language,as,locales,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1496955179;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {__			setContentType(value.toString())__		}_		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {__			HttpHeaders headers = new HttpHeaders()__			headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString())__			setPreferredLocales(headers.getAcceptLanguageAsLocales())__		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,set,content,type,value,to,string,else,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,http,headers,headers,new,http,headers,headers,add,http,headers,value,to,string,set,preferred,locales,headers,get,accept,language,as,locales,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1498780456;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {__			setContentType(value.toString())__		}_		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {__			HttpHeaders headers = new HttpHeaders()__			headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString())__			setPreferredLocales(headers.getAcceptLanguageAsLocales())__		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,set,content,type,value,to,string,else,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,http,headers,headers,new,http,headers,headers,add,http,headers,value,to,string,set,preferred,locales,headers,get,accept,language,as,locales,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1500448076;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {__			setContentType(value.toString())__		}_		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {__			HttpHeaders headers = new HttpHeaders()__			headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString())__			setPreferredLocales(headers.getAcceptLanguageAsLocales())__		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,set,content,type,value,to,string,else,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,http,headers,headers,new,http,headers,headers,add,http,headers,value,to,string,set,preferred,locales,headers,get,accept,language,as,locales,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1509894681;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {__			setContentType(value.toString())__		}_		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {__			HttpHeaders headers = new HttpHeaders()__			headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString())__			setPreferredLocales(headers.getAcceptLanguageAsLocales())__		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,set,content,type,value,to,string,else,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,http,headers,headers,new,http,headers,headers,add,http,headers,value,to,string,set,preferred,locales,headers,get,accept,language,as,locales,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1517567662;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {_			setContentType(value.toString())__		}_		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {_			try {_				HttpHeaders headers = new HttpHeaders()__				headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString())__				setPreferredLocales(headers.getAcceptLanguageAsLocales())__			}_			catch (IllegalArgumentException ex) {_				_				doAddHeaderValue(name, value, true)__			}_		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,set,content,type,value,to,string,else,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,try,http,headers,headers,new,http,headers,headers,add,http,headers,value,to,string,set,preferred,locales,headers,get,accept,language,as,locales,catch,illegal,argument,exception,ex,do,add,header,value,name,value,true,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1522192143;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {_			setContentType(value.toString())__		}_		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {_			try {_				HttpHeaders headers = new HttpHeaders()__				headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString())__				setPreferredLocales(headers.getAcceptLanguageAsLocales())__			}_			catch (IllegalArgumentException ex) {_				_				doAddHeaderValue(name, value, true)__			}_		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,set,content,type,value,to,string,else,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,try,http,headers,headers,new,http,headers,headers,add,http,headers,value,to,string,set,preferred,locales,headers,get,accept,language,as,locales,catch,illegal,argument,exception,ex,do,add,header,value,name,value,true,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1528920196;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {_			setContentType(value.toString())__		}_		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {_			try {_				HttpHeaders headers = new HttpHeaders()__				headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString())__				setPreferredLocales(headers.getAcceptLanguageAsLocales())__			}_			catch (IllegalArgumentException ex) {_				_				doAddHeaderValue(name, value, true)__			}_		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,set,content,type,value,to,string,else,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,try,http,headers,headers,new,http,headers,headers,add,http,headers,value,to,string,set,preferred,locales,headers,get,accept,language,as,locales,catch,illegal,argument,exception,ex,do,add,header,value,name,value,true,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1530174524;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {_			setContentType(value.toString())__		}_		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {_			try {_				HttpHeaders headers = new HttpHeaders()__				headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString())__				setPreferredLocales(headers.getAcceptLanguageAsLocales())__			}_			catch (IllegalArgumentException ex) {_				_				doAddHeaderValue(name, value, true)__			}_		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,set,content,type,value,to,string,else,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,try,http,headers,headers,new,http,headers,headers,add,http,headers,value,to,string,set,preferred,locales,headers,get,accept,language,as,locales,catch,illegal,argument,exception,ex,do,add,header,value,name,value,true,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1530174524;Add a header entry for the given name._<p>While this method can take any {@code Object} as a parameter, it_is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {_			setContentType(value.toString())__		}_		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {_			try {_				HttpHeaders headers = new HttpHeaders()__				headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString())__				setPreferredLocales(headers.getAcceptLanguageAsLocales())__			}_			catch (IllegalArgumentException ex) {_				_				doAddHeaderValue(name, value, true)__			}_		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,a,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,set,content,type,value,to,string,else,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,try,http,headers,headers,new,http,headers,headers,add,http,headers,value,to,string,set,preferred,locales,headers,get,accept,language,as,locales,catch,illegal,argument,exception,ex,do,add,header,value,name,value,true,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1537706655;Add an HTTP header entry for the given name._<p>While this method can take any {@code Object} as a parameter,_it is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {_			setContentType(value.toString())__		}_		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {_			try {_				HttpHeaders headers = new HttpHeaders()__				headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString())__				setPreferredLocales(headers.getAcceptLanguageAsLocales())__			}_			catch (IllegalArgumentException ex) {_				_				doAddHeaderValue(name, value, true)__			}_		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,an,http,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,set,content,type,value,to,string,else,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,try,http,headers,headers,new,http,headers,headers,add,http,headers,value,to,string,set,preferred,locales,headers,get,accept,language,as,locales,catch,illegal,argument,exception,ex,do,add,header,value,name,value,true,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1538233737;Add an HTTP header entry for the given name._<p>While this method can take any {@code Object} as a parameter,_it is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {_			setContentType(value.toString())__		}_		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {_			try {_				HttpHeaders headers = new HttpHeaders()__				headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString())__				setPreferredLocales(headers.getAcceptLanguageAsLocales())__			}_			catch (IllegalArgumentException ex) {_				_				doAddHeaderValue(name, value, true)__			}_		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,an,http,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,set,content,type,value,to,string,else,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,try,http,headers,headers,new,http,headers,headers,add,http,headers,value,to,string,set,preferred,locales,headers,get,accept,language,as,locales,catch,illegal,argument,exception,ex,do,add,header,value,name,value,true,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1539352831;Add an HTTP header entry for the given name._<p>While this method can take any {@code Object} as a parameter,_it is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {_			setContentType(value.toString())__		}_		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {_			try {_				HttpHeaders headers = new HttpHeaders()__				headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString())__				setPreferredLocales(headers.getAcceptLanguageAsLocales())__			}_			catch (IllegalArgumentException ex) {_				_				doAddHeaderValue(name, value, true)__			}_		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,an,http,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,set,content,type,value,to,string,else,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,try,http,headers,headers,new,http,headers,headers,add,http,headers,value,to,string,set,preferred,locales,headers,get,accept,language,as,locales,catch,illegal,argument,exception,ex,do,add,header,value,name,value,true,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void addHeader(String name, Object value);1543957663;Add an HTTP header entry for the given name._<p>While this method can take any {@code Object} as a parameter,_it is recommended to use the following types:_<ul>_<li>String or any Object to be converted using {@code toString()}_ see {@link #getHeader}.</li>_<li>String, Number, or Date for date headers_ see {@link #getDateHeader}.</li>_<li>String or Number for integer headers_ see {@link #getIntHeader}.</li>_<li>{@code String[]} or {@code Collection<String>} for multiple values_ see {@link #getHeaders}.</li>_</ul>_@see #getHeaderNames_@see #getHeaders_@see #getHeader_@see #getDateHeader;public void addHeader(String name, Object value) {_		if (HttpHeaders.CONTENT_TYPE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.CONTENT_TYPE)) {_			setContentType(value.toString())__		}_		else if (HttpHeaders.ACCEPT_LANGUAGE.equalsIgnoreCase(name) &&_				!this.headers.containsKey(HttpHeaders.ACCEPT_LANGUAGE)) {_			try {_				HttpHeaders headers = new HttpHeaders()__				headers.add(HttpHeaders.ACCEPT_LANGUAGE, value.toString())__				List<Locale> locales = headers.getAcceptLanguageAsLocales()__				this.locales.clear()__				this.locales.addAll(locales)__			}_			catch (IllegalArgumentException ex) {_				_			}_			doAddHeaderValue(name, value, true)__		}_		else {_			doAddHeaderValue(name, value, false)__		}_	};add,an,http,header,entry,for,the,given,name,p,while,this,method,can,take,any,code,object,as,a,parameter,it,is,recommended,to,use,the,following,types,ul,li,string,or,any,object,to,be,converted,using,code,to,string,see,link,get,header,li,li,string,number,or,date,for,date,headers,see,link,get,date,header,li,li,string,or,number,for,integer,headers,see,link,get,int,header,li,li,code,string,or,code,collection,string,for,multiple,values,see,link,get,headers,li,ul,see,get,header,names,see,get,headers,see,get,header,see,get,date,header;public,void,add,header,string,name,object,value,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,set,content,type,value,to,string,else,if,http,headers,equals,ignore,case,name,this,headers,contains,key,http,headers,try,http,headers,headers,new,http,headers,headers,add,http,headers,value,to,string,list,locale,locales,headers,get,accept,language,as,locales,this,locales,clear,this,locales,add,all,locales,catch,illegal,argument,exception,ex,do,add,header,value,name,value,true,else,do,add,header,value,name,value,false
MockHttpServletRequest -> public void close();1328020251;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1351354393;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1356735495;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1357119239;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1362408075;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1363796374;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1368482696;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1372363092;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1378933685;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1385412762;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1393608497;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1402068315;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1406563646;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1406563959;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1408399689;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1409231136;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1413289567;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1426882366;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1437330231;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1437642748;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1437651146;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1444681540;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1460644739;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1467730834;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1468334463;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1468613474;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1475510758;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1476370514;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1484252274;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1484260238;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1484533303;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1486061742;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1486720056;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1486994819;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1491860231;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1491909547;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1491909547;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1495868221;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1496259743;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1496955179;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1498780456;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1500448076;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1509894681;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1517567662;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1522192143;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1528920196;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1530174524;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1530174524;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1537706655;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1538233737;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1539352831;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public void close();1543957663;Mark this request as completed, keeping its state.;public void close() {_		this.active = false__	};mark,this,request,as,completed,keeping,its,state;public,void,close,this,active,false
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1328020251;Create a new MockHttpServletRequest._@param servletContext the ServletContext that the request runs in (may be_<code>null</code> to use a default MockServletContext)_@param method the request method (may be <code>null</code>)_@param requestURI the request URI (may be <code>null</code>)_@see #setMethod_@see #setRequestURI_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,mock,http,servlet,request,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,code,to,use,a,default,mock,servlet,context,param,method,the,request,method,may,be,code,null,code,param,request,uri,the,request,uri,may,be,code,null,code,see,set,method,see,set,request,uri,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1351354393;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_<code>null</code> to use a default {@link MockServletContext})_@param method the request method (may be <code>null</code>)_@param requestURI the request URI (may be <code>null</code>)_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,code,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,code,param,request,uri,the,request,uri,may,be,code,null,code,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1356735495;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1357119239;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1362408075;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1363796374;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1368482696;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1372363092;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = (method == null ? "" : method)__		this.requestURI = (requestURI == null ? "" : requestURI)__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,null,method,this,request,uri,request,uri,null,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1378933685;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1385412762;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1393608497;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1402068315;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1406563646;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1406563959;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1408399689;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1409231136;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1413289567;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1426882366;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1437330231;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1437642748;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1437651146;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1444681540;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1460644739;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1467730834;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1468334463;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1468613474;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1475510758;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1476370514;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1484252274;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1484260238;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1484533303;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1486061742;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1486720056;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1486994819;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1491860231;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1491909547;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI);1491909547;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(ServletContext servletContext, String method, String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,servlet,context,servlet,context,string,method,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public void addParameter(String name, String[] values);1328020251;Add an array of values for the specified HTTP parameter._<p>_If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1351354393;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1356735495;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1357119239;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1362408075;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1363796374;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1368482696;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1372363092;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1378933685;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1385412762;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1393608497;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1402068315;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1406563646;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1406563959;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1408399689;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1409231136;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1413289567;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1426882366;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1437330231;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1437642748;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1437651146;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1444681540;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1460644739;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1467730834;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1468334463;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1468613474;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1475510758;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addParameter(String name, String[] values);1476370514;Add an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given values will be added to the end of the list.;public void addParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		String[] oldArr = this.parameters.get(name)__		if (oldArr != null) {_			String[] newArr = new String[oldArr.length + values.length]__			System.arraycopy(oldArr, 0, newArr, 0, oldArr.length)__			System.arraycopy(values, 0, newArr, oldArr.length, values.length)__			this.parameters.put(name, newArr)__		}_		else {_			this.parameters.put(name, values)__		}_	};add,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,values,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,string,old,arr,this,parameters,get,name,if,old,arr,null,string,new,arr,new,string,old,arr,length,values,length,system,arraycopy,old,arr,0,new,arr,0,old,arr,length,system,arraycopy,values,0,new,arr,old,arr,length,values,length,this,parameters,put,name,new,arr,else,this,parameters,put,name,values
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1328020251;Add a new preferred locale, before any existing locales.;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1351354393;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1356735495;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1357119239;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1362408075;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1363796374;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1368482696;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1372363092;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1378933685;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1385412762;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1393608497;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1402068315;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1406563646;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1406563959;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1408399689;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1409231136;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1413289567;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1426882366;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1437330231;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1437642748;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1437651146;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1444681540;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1460644739;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1467730834;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1468334463;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1468613474;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1475510758;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1476370514;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1484252274;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1484260238;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1484533303;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1486061742;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1486720056;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1486994819;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1491860231;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1491909547;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__		updateAcceptLanguageHeader()__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale,update,accept,language,header
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1491909547;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__		updateAcceptLanguageHeader()__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale,update,accept,language,header
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1495868221;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__		updateAcceptLanguageHeader()__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale,update,accept,language,header
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1496259743;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__		updateAcceptLanguageHeader()__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale,update,accept,language,header
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1496955179;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__		updateAcceptLanguageHeader()__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale,update,accept,language,header
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1498780456;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__		updateAcceptLanguageHeader()__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale,update,accept,language,header
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1500448076;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__		updateAcceptLanguageHeader()__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale,update,accept,language,header
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1509894681;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__		updateAcceptLanguageHeader()__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale,update,accept,language,header
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1517567662;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__		updateAcceptLanguageHeader()__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale,update,accept,language,header
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1522192143;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__		updateAcceptLanguageHeader()__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale,update,accept,language,header
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1528920196;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__		updateAcceptLanguageHeader()__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale,update,accept,language,header
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1530174524;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__		updateAcceptLanguageHeader()__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale,update,accept,language,header
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1530174524;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__		updateAcceptLanguageHeader()__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale,update,accept,language,header
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1537706655;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__		updateAcceptLanguageHeader()__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale,update,accept,language,header
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1538233737;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__		updateAcceptLanguageHeader()__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale,update,accept,language,header
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1539352831;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__		updateAcceptLanguageHeader()__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale,update,accept,language,header
MockHttpServletRequest -> public void addPreferredLocale(Locale locale);1543957663;Add a new preferred locale, before any existing locales._@see #setPreferredLocales;public void addPreferredLocale(Locale locale) {_		Assert.notNull(locale, "Locale must not be null")__		this.locales.add(0, locale)__		updateAcceptLanguageHeader()__	};add,a,new,preferred,locale,before,any,existing,locales,see,set,preferred,locales;public,void,add,preferred,locale,locale,locale,assert,not,null,locale,locale,must,not,be,null,this,locales,add,0,locale,update,accept,language,header
MockHttpServletRequest -> public byte[] getContentAsByteArray();1475510758;Get the content of the request body as a byte array._@since 5.0_@see #setContent(byte[])_@see #getContentAsString();public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,since,5,0,see,set,content,byte,see,get,content,as,string;public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> public byte[] getContentAsByteArray();1476370514;Get the content of the request body as a byte array._@return the content as a byte array, potentially {@code null}_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> public byte[] getContentAsByteArray();1484252274;Get the content of the request body as a byte array._@return the content as a byte array, potentially {@code null}_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> public byte[] getContentAsByteArray();1484260238;Get the content of the request body as a byte array._@return the content as a byte array, potentially {@code null}_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> public byte[] getContentAsByteArray();1484533303;Get the content of the request body as a byte array._@return the content as a byte array, potentially {@code null}_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> public byte[] getContentAsByteArray();1486061742;Get the content of the request body as a byte array._@return the content as a byte array, potentially {@code null}_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> public byte[] getContentAsByteArray();1486720056;Get the content of the request body as a byte array._@return the content as a byte array, potentially {@code null}_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> public byte[] getContentAsByteArray();1486994819;Get the content of the request body as a byte array._@return the content as a byte array, potentially {@code null}_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> public byte[] getContentAsByteArray();1491860231;Get the content of the request body as a byte array._@return the content as a byte array, potentially {@code null}_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> public byte[] getContentAsByteArray();1491909547;Get the content of the request body as a byte array._@return the content as a byte array, potentially {@code null}_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> public byte[] getContentAsByteArray();1491909547;Get the content of the request body as a byte array._@return the content as a byte array, potentially {@code null}_@since 5.0_@see #setContent(byte[])_@see #getContentAsString();public byte[] getContentAsByteArray() {_		return this.content__	};get,the,content,of,the,request,body,as,a,byte,array,return,the,content,as,a,byte,array,potentially,code,null,since,5,0,see,set,content,byte,see,get,content,as,string;public,byte,get,content,as,byte,array,return,this,content
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI);1495868221;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,nullable,string,method,nullable,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI);1496259743;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,nullable,string,method,nullable,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI);1496955179;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,nullable,string,method,nullable,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI);1498780456;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,nullable,string,method,nullable,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI);1500448076;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,nullable,string,method,nullable,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI);1509894681;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,nullable,string,method,nullable,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI);1517567662;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,nullable,string,method,nullable,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI);1522192143;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,nullable,string,method,nullable,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI);1528920196;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,nullable,string,method,nullable,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI);1530174524;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,nullable,string,method,nullable,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI);1530174524;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,nullable,string,method,nullable,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI);1537706655;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,nullable,string,method,nullable,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI);1538233737;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,nullable,string,method,nullable,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI);1539352831;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,nullable,string,method,nullable,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI);1543957663;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext},_{@code method}, and {@code requestURI}._<p>The preferred locale will be set to {@link Locale#ENGLISH}._@param servletContext the ServletContext that the request runs in (may be_{@code null} to use a default {@link MockServletContext})_@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #setPreferredLocales_@see MockServletContext;public MockHttpServletRequest(@Nullable ServletContext servletContext, @Nullable String method, @Nullable String requestURI) {_		this.servletContext = (servletContext != null ? servletContext : new MockServletContext())__		this.method = method__		this.requestURI = requestURI__		this.locales.add(Locale.ENGLISH)__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,code,method,and,code,request,uri,p,the,preferred,locale,will,be,set,to,link,locale,english,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,set,preferred,locales,see,mock,servlet,context;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,nullable,string,method,nullable,string,request,uri,this,servlet,context,servlet,context,null,servlet,context,new,mock,servlet,context,this,method,method,this,request,uri,request,uri,this,locales,add,locale,english
MockHttpServletRequest -> public boolean isActive();1328020251;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1351354393;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1356735495;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1357119239;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1362408075;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1363796374;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1368482696;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1372363092;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1378933685;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1385412762;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1393608497;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1402068315;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1406563646;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1406563959;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1408399689;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1409231136;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1413289567;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1426882366;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1437330231;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1437642748;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1437651146;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1444681540;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1460644739;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1467730834;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1468334463;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1468613474;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1475510758;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1476370514;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1484252274;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1484260238;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1484533303;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1486061742;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1486720056;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1486994819;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1491860231;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1491909547;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1491909547;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1495868221;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1496259743;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1496955179;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1498780456;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1500448076;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1509894681;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1517567662;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1522192143;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1528920196;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1530174524;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1530174524;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1537706655;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1538233737;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1539352831;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public boolean isActive();1543957663;Return whether this request is still active (that is, not completed yet).;public boolean isActive() {_		return this.active__	};return,whether,this,request,is,still,active,that,is,not,completed,yet;public,boolean,is,active,return,this,active
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext);1495868221;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext);1496259743;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext);1496955179;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext);1498780456;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext);1500448076;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext);1509894681;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext);1517567662;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext);1522192143;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext);1528920196;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext);1530174524;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext);1530174524;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext);1537706655;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext);1538233737;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext);1539352831;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable ServletContext servletContext);1543957663;Create a new {@code MockHttpServletRequest} with the supplied {@link ServletContext}._@param servletContext the ServletContext that the request runs in_(may be {@code null} to use a default {@link MockServletContext})_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable ServletContext servletContext) {_		this(servletContext, "", "")__	};create,a,new,code,mock,http,servlet,request,with,the,supplied,link,servlet,context,param,servlet,context,the,servlet,context,that,the,request,runs,in,may,be,code,null,to,use,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,servlet,context,servlet,context,this,servlet,context
MockHttpServletRequest -> public ServletContext getServletContext();1328020251;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> public ServletContext getServletContext();1351354393;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> public ServletContext getServletContext();1356735495;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> public ServletContext getServletContext();1357119239;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> public ServletContext getServletContext();1362408075;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> public ServletContext getServletContext();1363796374;Return the ServletContext that this request is associated with. (Not_available in the standard HttpServletRequest interface for some reason.);public ServletContext getServletContext() {_		return this.servletContext__	};return,the,servlet,context,that,this,request,is,associated,with,not,available,in,the,standard,http,servlet,request,interface,for,some,reason;public,servlet,context,get,servlet,context,return,this,servlet,context
MockHttpServletRequest -> public String changeSessionId();1393608497;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1402068315;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1406563646;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1406563959;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1408399689;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1409231136;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1413289567;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1426882366;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1437330231;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1437642748;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1437651146;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1444681540;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1460644739;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1467730834;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1468334463;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1468613474;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1475510758;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1476370514;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1484252274;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1484260238;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1484533303;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1486061742;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1486720056;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1486994819;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1491860231;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1491909547;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1491909547;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1495868221;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1496259743;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1496955179;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1498780456;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1500448076;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1509894681;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1517567662;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1522192143;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1528920196;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1530174524;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1530174524;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) this.session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,this,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1537706655;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) this.session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,this,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1538233737;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) this.session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,this,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1539352831;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) this.session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,this,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public String changeSessionId();1543957663;The implementation of this (Servlet 3.1+) method calls_{@link MockHttpSession#changeSessionId()} if the session is a mock session._Otherwise it simply returns the current session id._@since 4.0.3;public String changeSessionId() {_		Assert.isTrue(this.session != null, "The request does not have a session")__		if (this.session instanceof MockHttpSession) {_			return ((MockHttpSession) this.session).changeSessionId()__		}_		return this.session.getId()__	};the,implementation,of,this,servlet,3,1,method,calls,link,mock,http,session,change,session,id,if,the,session,is,a,mock,session,otherwise,it,simply,returns,the,current,session,id,since,4,0,3;public,string,change,session,id,assert,is,true,this,session,null,the,request,does,not,have,a,session,if,this,session,instanceof,mock,http,session,return,mock,http,session,this,session,change,session,id,return,this,session,get,id
MockHttpServletRequest -> public void setParameter(String name, String[] values);1328020251;Set an array of values for the specified HTTP parameter._<p>_If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1351354393;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1356735495;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1357119239;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1362408075;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1363796374;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1368482696;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1372363092;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1378933685;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1385412762;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1393608497;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1402068315;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1406563646;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1406563959;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1408399689;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1409231136;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1413289567;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1426882366;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1437330231;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1437642748;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1437651146;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1444681540;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1460644739;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1467730834;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1468334463;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1468613474;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1475510758;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public void setParameter(String name, String[] values);1476370514;Set an array of values for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String[] values) {_		Assert.notNull(name, "Parameter name must not be null")__		this.parameters.put(name, values)__	};set,an,array,of,values,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,values,assert,not,null,name,parameter,name,must,not,be,null,this,parameters,put,name,values
MockHttpServletRequest -> public MockHttpServletRequest();1328020251;Create a new MockHttpServletRequest with a default_{@link MockServletContext}._@see MockServletContext;public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,servlet,context;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1351354393;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1356735495;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1357119239;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1362408075;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1363796374;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1368482696;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1372363092;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1378933685;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1385412762;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1393608497;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1402068315;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1406563646;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1406563959;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1408399689;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1409231136;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1413289567;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1426882366;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1437330231;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1437642748;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1437651146;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1444681540;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1460644739;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1467730834;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1468334463;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1468613474;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1475510758;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1476370514;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1484252274;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1484260238;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1484533303;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1486061742;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1486720056;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1486994819;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1491860231;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1491909547;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1491909547;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1495868221;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1496259743;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1496955179;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1498780456;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1500448076;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1509894681;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1517567662;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1522192143;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1528920196;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1530174524;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1530174524;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1537706655;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1538233737;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1539352831;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public MockHttpServletRequest();1543957663;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest() {_		this(null, "", "")__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,this,null
MockHttpServletRequest -> public void setContent(byte[] content);1475510758;Set the content of the request body as a byte array._@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(byte[] content);1476370514;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(byte[] content);1484252274;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(byte[] content);1484260238;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(byte[] content);1484533303;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(byte[] content);1486061742;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(byte[] content);1486720056;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(byte[] content);1486994819;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(byte[] content);1491860231;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(byte[] content);1491909547;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(byte[] content);1491909547;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(byte[] content);1495868221;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(byte[] content);1496259743;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(byte[] content);1496955179;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,byte,content,this,content,content
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1484252274;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				this.addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				this.addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,this,add,parameter,key,string,value,else,if,value,instanceof,string,this,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1484260238;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1484533303;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1486061742;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1486720056;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1486994819;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1491860231;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1491909547;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1491909547;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1495868221;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1496259743;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1496955179;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1498780456;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1500448076;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1509894681;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1517567662;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		for (String key : params.keySet()) {_			Object value = params.get(key)__			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		}_	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,for,string,key,params,key,set,object,value,params,get,key,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1522192143;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		params.forEach((key, value) -> {_			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		})__	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,params,for,each,key,value,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1528920196;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		params.forEach((key, value) -> {_			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		})__	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,params,for,each,key,value,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1530174524;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		params.forEach((key, value) -> {_			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		})__	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,params,for,each,key,value,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1530174524;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		params.forEach((key, value) -> {_			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		})__	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,params,for,each,key,value,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1537706655;Adds all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		params.forEach((key, value) -> {_			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		})__	};adds,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,params,for,each,key,value,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1538233737;Add all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		params.forEach((key, value) -> {_			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		})__	};add,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,params,for,each,key,value,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1539352831;Add all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		params.forEach((key, value) -> {_			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		})__	};add,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,params,for,each,key,value,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void addParameters(Map<String, ?> params);1543957663;Add all provided parameters <strong>without</strong> replacing any_existing values. To replace existing values, use_{@link #setParameters(java.util.Map)}.;public void addParameters(Map<String, ?> params) {_		Assert.notNull(params, "Parameter map must not be null")__		params.forEach((key, value) -> {_			if (value instanceof String) {_				addParameter(key, (String) value)__			}_			else if (value instanceof String[]) {_				addParameter(key, (String[]) value)__			}_			else {_				throw new IllegalArgumentException("Parameter map value must be single value " +_						" or array of type [" + String.class.getName() + "]")__			}_		})__	};add,all,provided,parameters,strong,without,strong,replacing,any,existing,values,to,replace,existing,values,use,link,set,parameters,java,util,map;public,void,add,parameters,map,string,params,assert,not,null,params,parameter,map,must,not,be,null,params,for,each,key,value,if,value,instanceof,string,add,parameter,key,string,value,else,if,value,instanceof,string,add,parameter,key,string,value,else,throw,new,illegal,argument,exception,parameter,map,value,must,be,single,value,or,array,of,type,string,class,get,name
MockHttpServletRequest -> public void setContent(@Nullable byte[] content);1498780456;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(@Nullable byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,nullable,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(@Nullable byte[] content);1500448076;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(@Nullable byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,nullable,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(@Nullable byte[] content);1509894681;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(@Nullable byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,nullable,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(@Nullable byte[] content);1517567662;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(@Nullable byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,nullable,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(@Nullable byte[] content);1522192143;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(@Nullable byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,nullable,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(@Nullable byte[] content);1528920196;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(@Nullable byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,nullable,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(@Nullable byte[] content);1530174524;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(@Nullable byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,nullable,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(@Nullable byte[] content);1530174524;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(@Nullable byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,nullable,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(@Nullable byte[] content);1537706655;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(@Nullable byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,nullable,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(@Nullable byte[] content);1538233737;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(@Nullable byte[] content) {_		this.content = content__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,nullable,byte,content,this,content,content
MockHttpServletRequest -> public void setContent(@Nullable byte[] content);1539352831;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(@Nullable byte[] content) {_		this.content = content__		this.inputStream = null__		this.reader = null__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,nullable,byte,content,this,content,content,this,input,stream,null,this,reader,null
MockHttpServletRequest -> public void setContent(@Nullable byte[] content);1543957663;Set the content of the request body as a byte array._<p>If the supplied byte array represents text such as XML or JSON, the_{@link #setCharacterEncoding character encoding} should typically be_set as well._@see #setCharacterEncoding(String)_@see #getContentAsByteArray()_@see #getContentAsString();public void setContent(@Nullable byte[] content) {_		this.content = content__		this.inputStream = null__		this.reader = null__	};set,the,content,of,the,request,body,as,a,byte,array,p,if,the,supplied,byte,array,represents,text,such,as,xml,or,json,the,link,set,character,encoding,character,encoding,should,typically,be,set,as,well,see,set,character,encoding,string,see,get,content,as,byte,array,see,get,content,as,string;public,void,set,content,nullable,byte,content,this,content,content,this,input,stream,null,this,reader,null
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1437642748;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1437651146;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1444681540;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1460644739;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1467730834;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1468334463;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1468613474;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1475510758;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1476370514;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1484252274;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1484260238;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1484533303;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1486061742;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1486720056;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1486994819;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1491860231;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1491909547;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1491909547;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1495868221;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1496259743;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1496955179;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1498780456;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1500448076;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1509894681;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1517567662;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1522192143;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1528920196;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1530174524;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1530174524;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1537706655;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1538233737;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1539352831;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Override 	public long getDateHeader(String name);1543957663;Return the long timestamp for the date header with the given {@code name}._<p>If the internal value representation is a String, this method will try_to parse it as a date using the supported date formats:_<ul>_<li>"EEE, dd MMM yyyy HH:mm:ss zzz"</li>_<li>"EEE, dd-MMM-yy HH:mm:ss zzz"</li>_<li>"EEE MMM dd HH:mm:ss yyyy"</li>_</ul>_@param name the header name_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;@Override_	public long getDateHeader(String name) {_		HeaderValueHolder header = HeaderValueHolder.getByName(this.headers, name)__		Object value = (header != null ? header.getValue() : null)__		if (value instanceof Date) {_			return ((Date) value).getTime()__		}_		else if (value instanceof Number) {_			return ((Number) value).longValue()__		}_		else if (value instanceof String) {_			return parseDateHeader(name, (String) value)__		}_		else if (value != null) {_			throw new IllegalArgumentException(_					"Value for header '" + name + "' is not a Date, Number, or String: " + value)__		}_		else {_			return -1L__		}_	};return,the,long,timestamp,for,the,date,header,with,the,given,code,name,p,if,the,internal,value,representation,is,a,string,this,method,will,try,to,parse,it,as,a,date,using,the,supported,date,formats,ul,li,eee,dd,mmm,yyyy,hh,mm,ss,zzz,li,li,eee,dd,mmm,yy,hh,mm,ss,zzz,li,li,eee,mmm,dd,hh,mm,ss,yyyy,li,ul,param,name,the,header,name,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;override,public,long,get,date,header,string,name,header,value,holder,header,header,value,holder,get,by,name,this,headers,name,object,value,header,null,header,get,value,null,if,value,instanceof,date,return,date,value,get,time,else,if,value,instanceof,number,return,number,value,long,value,else,if,value,instanceof,string,return,parse,date,header,name,string,value,else,if,value,null,throw,new,illegal,argument,exception,value,for,header,name,is,not,a,date,number,or,string,value,else,return,1l
MockHttpServletRequest -> @Nullable 	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1495868221;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();@Nullable_	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;nullable,public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> @Nullable 	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1496259743;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();@Nullable_	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;nullable,public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> @Nullable 	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1496955179;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();@Nullable_	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;nullable,public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> @Nullable 	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1498780456;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();@Nullable_	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;nullable,public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> @Nullable 	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1500448076;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();@Nullable_	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;nullable,public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> @Nullable 	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1509894681;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();@Nullable_	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;nullable,public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> @Nullable 	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1517567662;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();@Nullable_	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;nullable,public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> @Nullable 	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1522192143;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();@Nullable_	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;nullable,public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> @Nullable 	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1528920196;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();@Nullable_	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;nullable,public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> @Nullable 	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1530174524;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();@Nullable_	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;nullable,public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> @Nullable 	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1530174524;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();@Nullable_	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;nullable,public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> @Nullable 	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1537706655;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();@Nullable_	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;nullable,public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> @Nullable 	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1538233737;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();@Nullable_	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;nullable,public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> @Nullable 	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1539352831;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();@Nullable_	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;nullable,public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> @Nullable 	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException;1543957663;Get the content of the request body as a {@code String}, using the configured_{@linkplain #getCharacterEncoding character encoding}._@return the content as a {@code String}, potentially {@code null}_@throws IllegalStateException if the character encoding has not been set_@throws UnsupportedEncodingException if the character encoding is not supported_@since 5.0_@see #setContent(byte[])_@see #setCharacterEncoding(String)_@see #getContentAsByteArray();@Nullable_	public String getContentAsString() throws IllegalStateException, UnsupportedEncodingException {_		Assert.state(this.characterEncoding != null,_				"Cannot get content as a String for a null character encoding. " +_				"Consider setting the characterEncoding in the request.")___		if (this.content == null) {_			return null__		}_		return new String(this.content, this.characterEncoding)__	};get,the,content,of,the,request,body,as,a,code,string,using,the,configured,linkplain,get,character,encoding,character,encoding,return,the,content,as,a,code,string,potentially,code,null,throws,illegal,state,exception,if,the,character,encoding,has,not,been,set,throws,unsupported,encoding,exception,if,the,character,encoding,is,not,supported,since,5,0,see,set,content,byte,see,set,character,encoding,string,see,get,content,as,byte,array;nullable,public,string,get,content,as,string,throws,illegal,state,exception,unsupported,encoding,exception,assert,state,this,character,encoding,null,cannot,get,content,as,a,string,for,a,null,character,encoding,consider,setting,the,character,encoding,in,the,request,if,this,content,null,return,null,return,new,string,this,content,this,character,encoding
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI);1495868221;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,string,method,nullable,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI);1496259743;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,string,method,nullable,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI);1496955179;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,string,method,nullable,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI);1498780456;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,string,method,nullable,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI);1500448076;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,string,method,nullable,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI);1509894681;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,string,method,nullable,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI);1517567662;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,string,method,nullable,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI);1522192143;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,string,method,nullable,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI);1528920196;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,string,method,nullable,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI);1530174524;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,string,method,nullable,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI);1530174524;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,string,method,nullable,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI);1537706655;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,string,method,nullable,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI);1538233737;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,string,method,nullable,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI);1539352831;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,string,method,nullable,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI);1543957663;Create a new {@code MockHttpServletRequest} with a default_{@link MockServletContext}._@param method the request method (may be {@code null})_@param requestURI the request URI (may be {@code null})_@see #setMethod_@see #setRequestURI_@see #MockHttpServletRequest(ServletContext, String, String);public MockHttpServletRequest(@Nullable String method, @Nullable String requestURI) {_		this(null, method, requestURI)__	};create,a,new,code,mock,http,servlet,request,with,a,default,link,mock,servlet,context,param,method,the,request,method,may,be,code,null,param,request,uri,the,request,uri,may,be,code,null,see,set,method,see,set,request,uri,see,mock,http,servlet,request,servlet,context,string,string;public,mock,http,servlet,request,nullable,string,method,nullable,string,request,uri,this,null,method,request,uri
MockHttpServletRequest -> public void setParameter(String name, String value);1328020251;Set a single value for the specified HTTP parameter._<p>_If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] { value })__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1351354393;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] { value })__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1356735495;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] { value })__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1357119239;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] { value })__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1362408075;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1363796374;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1368482696;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1372363092;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1378933685;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1385412762;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1393608497;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1402068315;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1406563646;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1406563959;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1408399689;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1409231136;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1413289567;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1426882366;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1437330231;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1437642748;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1437651146;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1444681540;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1460644739;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1467730834;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1468334463;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1468613474;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1475510758;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1476370514;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1484252274;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1484260238;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1484533303;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1486061742;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1486720056;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1486994819;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1491860231;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1491909547;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1491909547;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1495868221;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1496259743;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1496955179;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1498780456;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1500448076;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1509894681;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1517567662;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1522192143;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1528920196;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1530174524;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1530174524;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1537706655;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1538233737;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1539352831;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void setParameter(String name, String value);1543957663;Set a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, they will be replaced.;public void setParameter(String name, String value) {_		setParameter(name, new String[] {value})__	};set,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,they,will,be,replaced;public,void,set,parameter,string,name,string,value,set,parameter,name,new,string,value
MockHttpServletRequest -> public void removeAllParameters();1328020251;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1351354393;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1356735495;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1357119239;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1362408075;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1363796374;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1368482696;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1372363092;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1378933685;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1385412762;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1393608497;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1402068315;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1406563646;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1406563959;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1408399689;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1409231136;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1413289567;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1426882366;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1437330231;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1437642748;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1437651146;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1444681540;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1460644739;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1467730834;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1468334463;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1468613474;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1475510758;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1476370514;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1484252274;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1484260238;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1484533303;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1486061742;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1486720056;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1486994819;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1491860231;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1491909547;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1491909547;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1495868221;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1496259743;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1496955179;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1498780456;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1500448076;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1509894681;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1517567662;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1522192143;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1528920196;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1530174524;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1530174524;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1537706655;Removes all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};removes,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1538233737;Remove all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};remove,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1539352831;Remove all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};remove,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void removeAllParameters();1543957663;Remove all existing parameters.;public void removeAllParameters() {_		this.parameters.clear()__	};remove,all,existing,parameters;public,void,remove,all,parameters,this,parameters,clear
MockHttpServletRequest -> public void addParameter(String name, @Nullable String value);1496955179;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, @Nullable String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,nullable,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, @Nullable String value);1498780456;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, @Nullable String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,nullable,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, @Nullable String value);1500448076;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, @Nullable String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,nullable,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, @Nullable String value);1509894681;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, @Nullable String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,nullable,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, @Nullable String value);1517567662;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, @Nullable String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,nullable,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, @Nullable String value);1522192143;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, @Nullable String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,nullable,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, @Nullable String value);1528920196;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, @Nullable String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,nullable,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, @Nullable String value);1530174524;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, @Nullable String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,nullable,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, @Nullable String value);1530174524;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, @Nullable String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,nullable,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, @Nullable String value);1537706655;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, @Nullable String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,nullable,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, @Nullable String value);1538233737;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, @Nullable String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,nullable,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, @Nullable String value);1539352831;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, @Nullable String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,nullable,string,value,add,parameter,name,new,string,value
MockHttpServletRequest -> public void addParameter(String name, @Nullable String value);1543957663;Add a single value for the specified HTTP parameter._<p>If there are already one or more values registered for the given_parameter name, the given value will be added to the end of the list.;public void addParameter(String name, @Nullable String value) {_		addParameter(name, new String[] {value})__	};add,a,single,value,for,the,specified,http,parameter,p,if,there,are,already,one,or,more,values,registered,for,the,given,parameter,name,the,given,value,will,be,added,to,the,end,of,the,list;public,void,add,parameter,string,name,nullable,string,value,add,parameter,name,new,string,value
