# id;timestamp;commentText;codeText;commentWords;codeWords
HtmlUnitRequestBuilder -> public void setContextPath(String contextPath);1437991650;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid {@link HttpServletRequest#getContextPath()};public void setContextPath(String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(String contextPath);1438986420;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid {@link HttpServletRequest#getContextPath()};public void setContextPath(String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(String contextPath);1443642494;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid {@link HttpServletRequest#getContextPath()};public void setContextPath(String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(String contextPath);1443978701;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid {@link HttpServletRequest#getContextPath()};public void setContextPath(String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(String contextPath);1447511562;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid {@link HttpServletRequest#getContextPath()};public void setContextPath(String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(String contextPath);1460400578;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid {@link HttpServletRequest#getContextPath()};public void setContextPath(String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(String contextPath);1460733780;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid {@link HttpServletRequest#getContextPath()};public void setContextPath(String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(String contextPath);1467457413;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid {@link HttpServletRequest#getContextPath()};public void setContextPath(String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(String contextPath);1467463695;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid {@link HttpServletRequest#getContextPath()};public void setContextPath(String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(String contextPath);1467730834;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid {@link HttpServletRequest#getContextPath()};public void setContextPath(String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(String contextPath);1468334463;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid_{@link HttpServletRequest#getContextPath()};public void setContextPath(String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(String contextPath);1471052581;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid_{@link HttpServletRequest#getContextPath()};public void setContextPath(String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(String contextPath);1472594218;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid_{@link HttpServletRequest#getContextPath()};public void setContextPath(String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(String contextPath);1472602111;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid_{@link HttpServletRequest#getContextPath()};public void setContextPath(String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(String contextPath);1480374460;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid_{@link HttpServletRequest#getContextPath()};public void setContextPath(String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(String contextPath);1488819268;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid_{@link HttpServletRequest#getContextPath()};public void setContextPath(String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(String contextPath);1488880946;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid_{@link HttpServletRequest#getContextPath()};public void setContextPath(String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(String contextPath);1491909547;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid_{@link HttpServletRequest#getContextPath()};public void setContextPath(String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(String contextPath);1491926024;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid_{@link HttpServletRequest#getContextPath()};public void setContextPath(String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(@Nullable String contextPath);1495868221;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid_{@link HttpServletRequest#getContextPath()};public void setContextPath(@Nullable String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,nullable,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(@Nullable String contextPath);1496242568;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid_{@link HttpServletRequest#getContextPath()};public void setContextPath(@Nullable String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,nullable,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(@Nullable String contextPath);1496955179;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid_{@link HttpServletRequest#getContextPath()};public void setContextPath(@Nullable String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,nullable,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(@Nullable String contextPath);1497362807;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid_{@link HttpServletRequest#getContextPath()};public void setContextPath(@Nullable String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,nullable,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(@Nullable String contextPath);1498780456;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid_{@link HttpServletRequest#getContextPath()};public void setContextPath(@Nullable String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,nullable,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(@Nullable String contextPath);1519295386;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid_{@link HttpServletRequest#getContextPath()};public void setContextPath(@Nullable String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,nullable,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(@Nullable String contextPath);1519859718;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid_{@link HttpServletRequest#getContextPath()};public void setContextPath(@Nullable String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,nullable,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(@Nullable String contextPath);1519945587;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid_{@link HttpServletRequest#getContextPath()};public void setContextPath(@Nullable String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,nullable,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public void setContextPath(@Nullable String contextPath);1530174524;Set the contextPath to be used._<p>The value may be null in which case the first path segment of the_URL is turned into the contextPath. Otherwise it must conform to_{@link HttpServletRequest#getContextPath()} which states it can be_an empty string, or it must start with a "/" and not end with a "/"._@param contextPath a valid contextPath_@throws IllegalArgumentException if the contextPath is not a valid_{@link HttpServletRequest#getContextPath()};public void setContextPath(@Nullable String contextPath) {_		MockMvcWebConnection.validateContextPath(contextPath)__		this.contextPath = contextPath__	};set,the,context,path,to,be,used,p,the,value,may,be,null,in,which,case,the,first,path,segment,of,the,url,is,turned,into,the,context,path,otherwise,it,must,conform,to,link,http,servlet,request,get,context,path,which,states,it,can,be,an,empty,string,or,it,must,start,with,a,and,not,end,with,a,param,context,path,a,valid,context,path,throws,illegal,argument,exception,if,the,context,path,is,not,a,valid,link,http,servlet,request,get,context,path;public,void,set,context,path,nullable,string,context,path,mock,mvc,web,connection,validate,context,path,context,path,this,context,path,context,path
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1437991650;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "sessions map must not be null")__		Assert.notNull(webClient, "webClient must not be null")__		Assert.notNull(webRequest, "webRequest must not be null")___		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1438986420;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "sessions map must not be null")__		Assert.notNull(webClient, "webClient must not be null")__		Assert.notNull(webRequest, "webRequest must not be null")___		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1443642494;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "sessions map must not be null")__		Assert.notNull(webClient, "webClient must not be null")__		Assert.notNull(webRequest, "webRequest must not be null")___		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1443978701;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "sessions map must not be null")__		Assert.notNull(webClient, "webClient must not be null")__		Assert.notNull(webRequest, "webRequest must not be null")___		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1447511562;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")___		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1460400578;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")___		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1460733780;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")___		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1467457413;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")___		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1467463695;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")___		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1467730834;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")___		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1468334463;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")___		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1471052581;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")___		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1472594218;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")___		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1472602111;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")___		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1480374460;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")___		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1488819268;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")__		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1488880946;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")__		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1491909547;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")__		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1491926024;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")__		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1495868221;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")__		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1496242568;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")__		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1496955179;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")__		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1497362807;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")__		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1498780456;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")__		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1519295386;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")__		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1519859718;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")__		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1519945587;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")__		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
HtmlUnitRequestBuilder -> public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest);1530174524;Construct a new {@code HtmlUnitRequestBuilder}._@param sessions a {@link Map} from session {@linkplain HttpSession#getId() IDs}_to currently managed {@link HttpSession} objects_ never {@code null}_@param webClient the WebClient for retrieving cookies_@param webRequest the {@link WebRequest} to transform into a_{@link MockHttpServletRequest}_ never {@code null};public HtmlUnitRequestBuilder(Map<String, MockHttpSession> sessions, WebClient webClient, WebRequest webRequest) {_		Assert.notNull(sessions, "Sessions Map must not be null")__		Assert.notNull(webClient, "WebClient must not be null")__		Assert.notNull(webRequest, "WebRequest must not be null")__		this.sessions = sessions__		this.webClient = webClient__		this.webRequest = webRequest__	};construct,a,new,code,html,unit,request,builder,param,sessions,a,link,map,from,session,linkplain,http,session,get,id,ids,to,currently,managed,link,http,session,objects,never,code,null,param,web,client,the,web,client,for,retrieving,cookies,param,web,request,the,link,web,request,to,transform,into,a,link,mock,http,servlet,request,never,code,null;public,html,unit,request,builder,map,string,mock,http,session,sessions,web,client,web,client,web,request,web,request,assert,not,null,sessions,sessions,map,must,not,be,null,assert,not,null,web,client,web,client,must,not,be,null,assert,not,null,web,request,web,request,must,not,be,null,this,sessions,sessions,this,web,client,web,client,this,web,request,web,request
