# id;timestamp;commentText;codeText;commentWords;codeWords
ContextLoader -> ApplicationContext loadContext(String... locations) throws Exception_;1328020251;Loads a new {@link ApplicationContext context} based on the supplied_<code>locations</code>, configures the context, and finally returns_the context in fully <em>refreshed</em> state._<p>Configuration locations are generally considered to be classpath_resources by default._<p>Concrete implementations should register annotation configuration_processors with bean factories of {@link ApplicationContext application_contexts} loaded by this ContextLoader. Beans will therefore automatically_be candidates for annotation-based dependency injection using_{@link org.springframework.beans.factory.annotation.Autowired @Autowired},_{@link javax.annotation.Resource @Resource}, and_{@link javax.inject.Inject @Inject}._<p>Any ApplicationContext loaded by a ContextLoader <strong>must</strong>_register a JVM shutdown hook for itself. Unless the context gets closed_early, all context instances will be automatically closed on JVM_shutdown. This allows for freeing external resources held by beans within_the context, e.g. temporary files._@param locations the resource locations to use to load the application context_@return a new application context_@throws Exception if context loading failed;ApplicationContext loadContext(String... locations) throws Exception_;loads,a,new,link,application,context,context,based,on,the,supplied,code,locations,code,configures,the,context,and,finally,returns,the,context,in,fully,em,refreshed,em,state,p,configuration,locations,are,generally,considered,to,be,classpath,resources,by,default,p,concrete,implementations,should,register,annotation,configuration,processors,with,bean,factories,of,link,application,context,application,contexts,loaded,by,this,context,loader,beans,will,therefore,automatically,be,candidates,for,annotation,based,dependency,injection,using,link,org,springframework,beans,factory,annotation,autowired,autowired,link,javax,annotation,resource,resource,and,link,javax,inject,inject,inject,p,any,application,context,loaded,by,a,context,loader,strong,must,strong,register,a,jvm,shutdown,hook,for,itself,unless,the,context,gets,closed,early,all,context,instances,will,be,automatically,closed,on,jvm,shutdown,this,allows,for,freeing,external,resources,held,by,beans,within,the,context,e,g,temporary,files,param,locations,the,resource,locations,to,use,to,load,the,application,context,return,a,new,application,context,throws,exception,if,context,loading,failed;application,context,load,context,string,locations,throws,exception
ContextLoader -> ApplicationContext loadContext(String... locations) throws Exception_;1337278668;Loads a new {@link ApplicationContext context} based on the supplied_<code>locations</code>, configures the context, and finally returns_the context in fully <em>refreshed</em> state.__<p>Configuration locations are generally considered to be classpath_resources by default.__<p>Concrete implementations should register annotation configuration_processors with bean factories of {@link ApplicationContext application_contexts} loaded by this ContextLoader. Beans will therefore automatically_be candidates for annotation-based dependency injection using_{@link org.springframework.beans.factory.annotation.Autowired @Autowired},_{@link javax.annotation.Resource @Resource}, and_{@link javax.inject.Inject @Inject}.__<p>Any ApplicationContext loaded by a ContextLoader <strong>must</strong>_register a JVM shutdown hook for itself. Unless the context gets closed_early, all context instances will be automatically closed on JVM_shutdown. This allows for freeing external resources held by beans within_the context, e.g. temporary files.__@param locations the resource locations to use to load the application context_@return a new application context_@throws Exception if context loading failed;ApplicationContext loadContext(String... locations) throws Exception_;loads,a,new,link,application,context,context,based,on,the,supplied,code,locations,code,configures,the,context,and,finally,returns,the,context,in,fully,em,refreshed,em,state,p,configuration,locations,are,generally,considered,to,be,classpath,resources,by,default,p,concrete,implementations,should,register,annotation,configuration,processors,with,bean,factories,of,link,application,context,application,contexts,loaded,by,this,context,loader,beans,will,therefore,automatically,be,candidates,for,annotation,based,dependency,injection,using,link,org,springframework,beans,factory,annotation,autowired,autowired,link,javax,annotation,resource,resource,and,link,javax,inject,inject,inject,p,any,application,context,loaded,by,a,context,loader,strong,must,strong,register,a,jvm,shutdown,hook,for,itself,unless,the,context,gets,closed,early,all,context,instances,will,be,automatically,closed,on,jvm,shutdown,this,allows,for,freeing,external,resources,held,by,beans,within,the,context,e,g,temporary,files,param,locations,the,resource,locations,to,use,to,load,the,application,context,return,a,new,application,context,throws,exception,if,context,loading,failed;application,context,load,context,string,locations,throws,exception
ContextLoader -> ApplicationContext loadContext(String... locations) throws Exception_;1345469597;Loads a new {@link ApplicationContext context} based on the supplied_<code>locations</code>, configures the context, and finally returns_the context in fully <em>refreshed</em> state.__<p>Configuration locations are generally considered to be classpath_resources by default.__<p>Concrete implementations should register annotation configuration_processors with bean factories of {@link ApplicationContext application_contexts} loaded by this ContextLoader. Beans will therefore automatically_be candidates for annotation-based dependency injection using_{@link org.springframework.beans.factory.annotation.Autowired @Autowired},_{@link javax.annotation.Resource @Resource}, and_{@link javax.inject.Inject @Inject}.__<p>Any ApplicationContext loaded by a ContextLoader <strong>must</strong>_register a JVM shutdown hook for itself. Unless the context gets closed_early, all context instances will be automatically closed on JVM_shutdown. This allows for freeing external resources held by beans within_the context, e.g. temporary files.__@param locations the resource locations to use to load the application context_@return a new application context_@throws Exception if context loading failed;ApplicationContext loadContext(String... locations) throws Exception_;loads,a,new,link,application,context,context,based,on,the,supplied,code,locations,code,configures,the,context,and,finally,returns,the,context,in,fully,em,refreshed,em,state,p,configuration,locations,are,generally,considered,to,be,classpath,resources,by,default,p,concrete,implementations,should,register,annotation,configuration,processors,with,bean,factories,of,link,application,context,application,contexts,loaded,by,this,context,loader,beans,will,therefore,automatically,be,candidates,for,annotation,based,dependency,injection,using,link,org,springframework,beans,factory,annotation,autowired,autowired,link,javax,annotation,resource,resource,and,link,javax,inject,inject,inject,p,any,application,context,loaded,by,a,context,loader,strong,must,strong,register,a,jvm,shutdown,hook,for,itself,unless,the,context,gets,closed,early,all,context,instances,will,be,automatically,closed,on,jvm,shutdown,this,allows,for,freeing,external,resources,held,by,beans,within,the,context,e,g,temporary,files,param,locations,the,resource,locations,to,use,to,load,the,application,context,return,a,new,application,context,throws,exception,if,context,loading,failed;application,context,load,context,string,locations,throws,exception
ContextLoader -> ApplicationContext loadContext(String... locations) throws Exception_;1356735495;Loads a new {@link ApplicationContext context} based on the supplied_{@code locations}, configures the context, and finally returns_the context in fully <em>refreshed</em> state.__<p>Configuration locations are generally considered to be classpath_resources by default.__<p>Concrete implementations should register annotation configuration_processors with bean factories of {@link ApplicationContext application_contexts} loaded by this ContextLoader. Beans will therefore automatically_be candidates for annotation-based dependency injection using_{@link org.springframework.beans.factory.annotation.Autowired @Autowired},_{@link javax.annotation.Resource @Resource}, and_{@link javax.inject.Inject @Inject}.__<p>Any ApplicationContext loaded by a ContextLoader <strong>must</strong>_register a JVM shutdown hook for itself. Unless the context gets closed_early, all context instances will be automatically closed on JVM_shutdown. This allows for freeing external resources held by beans within_the context, e.g. temporary files.__@param locations the resource locations to use to load the application context_@return a new application context_@throws Exception if context loading failed;ApplicationContext loadContext(String... locations) throws Exception_;loads,a,new,link,application,context,context,based,on,the,supplied,code,locations,configures,the,context,and,finally,returns,the,context,in,fully,em,refreshed,em,state,p,configuration,locations,are,generally,considered,to,be,classpath,resources,by,default,p,concrete,implementations,should,register,annotation,configuration,processors,with,bean,factories,of,link,application,context,application,contexts,loaded,by,this,context,loader,beans,will,therefore,automatically,be,candidates,for,annotation,based,dependency,injection,using,link,org,springframework,beans,factory,annotation,autowired,autowired,link,javax,annotation,resource,resource,and,link,javax,inject,inject,inject,p,any,application,context,loaded,by,a,context,loader,strong,must,strong,register,a,jvm,shutdown,hook,for,itself,unless,the,context,gets,closed,early,all,context,instances,will,be,automatically,closed,on,jvm,shutdown,this,allows,for,freeing,external,resources,held,by,beans,within,the,context,e,g,temporary,files,param,locations,the,resource,locations,to,use,to,load,the,application,context,return,a,new,application,context,throws,exception,if,context,loading,failed;application,context,load,context,string,locations,throws,exception
ContextLoader -> ApplicationContext loadContext(String... locations) throws Exception_;1449505825;Loads a new {@link ApplicationContext context} based on the supplied_{@code locations}, configures the context, and finally returns_the context in fully <em>refreshed</em> state._<p>Configuration locations are generally considered to be classpath_resources by default._<p>Concrete implementations should register annotation configuration_processors with bean factories of {@link ApplicationContext application_contexts} loaded by this ContextLoader. Beans will therefore automatically_be candidates for annotation-based dependency injection using_{@link org.springframework.beans.factory.annotation.Autowired @Autowired},_{@link javax.annotation.Resource @Resource}, and_{@link javax.inject.Inject @Inject}._<p>Any ApplicationContext loaded by a ContextLoader <strong>must</strong>_register a JVM shutdown hook for itself. Unless the context gets closed_early, all context instances will be automatically closed on JVM_shutdown. This allows for freeing external resources held by beans within_the context, e.g. temporary files._@param locations the resource locations to use to load the application context_@return a new application context_@throws Exception if context loading failed;ApplicationContext loadContext(String... locations) throws Exception_;loads,a,new,link,application,context,context,based,on,the,supplied,code,locations,configures,the,context,and,finally,returns,the,context,in,fully,em,refreshed,em,state,p,configuration,locations,are,generally,considered,to,be,classpath,resources,by,default,p,concrete,implementations,should,register,annotation,configuration,processors,with,bean,factories,of,link,application,context,application,contexts,loaded,by,this,context,loader,beans,will,therefore,automatically,be,candidates,for,annotation,based,dependency,injection,using,link,org,springframework,beans,factory,annotation,autowired,autowired,link,javax,annotation,resource,resource,and,link,javax,inject,inject,inject,p,any,application,context,loaded,by,a,context,loader,strong,must,strong,register,a,jvm,shutdown,hook,for,itself,unless,the,context,gets,closed,early,all,context,instances,will,be,automatically,closed,on,jvm,shutdown,this,allows,for,freeing,external,resources,held,by,beans,within,the,context,e,g,temporary,files,param,locations,the,resource,locations,to,use,to,load,the,application,context,return,a,new,application,context,throws,exception,if,context,loading,failed;application,context,load,context,string,locations,throws,exception
ContextLoader -> ApplicationContext loadContext(String... locations) throws Exception_;1495868221;Loads a new {@link ApplicationContext context} based on the supplied_{@code locations}, configures the context, and finally returns_the context in fully <em>refreshed</em> state._<p>Configuration locations are generally considered to be classpath_resources by default._<p>Concrete implementations should register annotation configuration_processors with bean factories of {@link ApplicationContext application_contexts} loaded by this ContextLoader. Beans will therefore automatically_be candidates for annotation-based dependency injection using_{@link org.springframework.beans.factory.annotation.Autowired @Autowired},_{@link javax.annotation.Resource @Resource}, and_{@link javax.inject.Inject @Inject}._<p>Any ApplicationContext loaded by a ContextLoader <strong>must</strong>_register a JVM shutdown hook for itself. Unless the context gets closed_early, all context instances will be automatically closed on JVM_shutdown. This allows for freeing external resources held by beans within_the context, e.g. temporary files._@param locations the resource locations to use to load the application context_@return a new application context_@throws Exception if context loading failed;ApplicationContext loadContext(String... locations) throws Exception_;loads,a,new,link,application,context,context,based,on,the,supplied,code,locations,configures,the,context,and,finally,returns,the,context,in,fully,em,refreshed,em,state,p,configuration,locations,are,generally,considered,to,be,classpath,resources,by,default,p,concrete,implementations,should,register,annotation,configuration,processors,with,bean,factories,of,link,application,context,application,contexts,loaded,by,this,context,loader,beans,will,therefore,automatically,be,candidates,for,annotation,based,dependency,injection,using,link,org,springframework,beans,factory,annotation,autowired,autowired,link,javax,annotation,resource,resource,and,link,javax,inject,inject,inject,p,any,application,context,loaded,by,a,context,loader,strong,must,strong,register,a,jvm,shutdown,hook,for,itself,unless,the,context,gets,closed,early,all,context,instances,will,be,automatically,closed,on,jvm,shutdown,this,allows,for,freeing,external,resources,held,by,beans,within,the,context,e,g,temporary,files,param,locations,the,resource,locations,to,use,to,load,the,application,context,return,a,new,application,context,throws,exception,if,context,loading,failed;application,context,load,context,string,locations,throws,exception
ContextLoader -> ApplicationContext loadContext(String... locations) throws Exception_;1496955179;Loads a new {@link ApplicationContext context} based on the supplied_{@code locations}, configures the context, and finally returns_the context in fully <em>refreshed</em> state._<p>Configuration locations are generally considered to be classpath_resources by default._<p>Concrete implementations should register annotation configuration_processors with bean factories of {@link ApplicationContext application_contexts} loaded by this ContextLoader. Beans will therefore automatically_be candidates for annotation-based dependency injection using_{@link org.springframework.beans.factory.annotation.Autowired @Autowired},_{@link javax.annotation.Resource @Resource}, and_{@link javax.inject.Inject @Inject}._<p>Any ApplicationContext loaded by a ContextLoader <strong>must</strong>_register a JVM shutdown hook for itself. Unless the context gets closed_early, all context instances will be automatically closed on JVM_shutdown. This allows for freeing external resources held by beans within_the context, e.g. temporary files._@param locations the resource locations to use to load the application context_@return a new application context_@throws Exception if context loading failed;ApplicationContext loadContext(String... locations) throws Exception_;loads,a,new,link,application,context,context,based,on,the,supplied,code,locations,configures,the,context,and,finally,returns,the,context,in,fully,em,refreshed,em,state,p,configuration,locations,are,generally,considered,to,be,classpath,resources,by,default,p,concrete,implementations,should,register,annotation,configuration,processors,with,bean,factories,of,link,application,context,application,contexts,loaded,by,this,context,loader,beans,will,therefore,automatically,be,candidates,for,annotation,based,dependency,injection,using,link,org,springframework,beans,factory,annotation,autowired,autowired,link,javax,annotation,resource,resource,and,link,javax,inject,inject,inject,p,any,application,context,loaded,by,a,context,loader,strong,must,strong,register,a,jvm,shutdown,hook,for,itself,unless,the,context,gets,closed,early,all,context,instances,will,be,automatically,closed,on,jvm,shutdown,this,allows,for,freeing,external,resources,held,by,beans,within,the,context,e,g,temporary,files,param,locations,the,resource,locations,to,use,to,load,the,application,context,return,a,new,application,context,throws,exception,if,context,loading,failed;application,context,load,context,string,locations,throws,exception
ContextLoader -> ApplicationContext loadContext(String... locations) throws Exception_;1497341594;Loads a new {@link ApplicationContext context} based on the supplied_{@code locations}, configures the context, and finally returns_the context in fully <em>refreshed</em> state._<p>Configuration locations are generally considered to be classpath_resources by default._<p>Concrete implementations should register annotation configuration_processors with bean factories of {@link ApplicationContext application_contexts} loaded by this ContextLoader. Beans will therefore automatically_be candidates for annotation-based dependency injection using_{@link org.springframework.beans.factory.annotation.Autowired @Autowired},_{@link javax.annotation.Resource @Resource}, and_{@link javax.inject.Inject @Inject}._<p>Any ApplicationContext loaded by a ContextLoader <strong>must</strong>_register a JVM shutdown hook for itself. Unless the context gets closed_early, all context instances will be automatically closed on JVM_shutdown. This allows for freeing external resources held by beans within_the context, e.g. temporary files._@param locations the resource locations to use to load the application context_@return a new application context_@throws Exception if context loading failed;ApplicationContext loadContext(String... locations) throws Exception_;loads,a,new,link,application,context,context,based,on,the,supplied,code,locations,configures,the,context,and,finally,returns,the,context,in,fully,em,refreshed,em,state,p,configuration,locations,are,generally,considered,to,be,classpath,resources,by,default,p,concrete,implementations,should,register,annotation,configuration,processors,with,bean,factories,of,link,application,context,application,contexts,loaded,by,this,context,loader,beans,will,therefore,automatically,be,candidates,for,annotation,based,dependency,injection,using,link,org,springframework,beans,factory,annotation,autowired,autowired,link,javax,annotation,resource,resource,and,link,javax,inject,inject,inject,p,any,application,context,loaded,by,a,context,loader,strong,must,strong,register,a,jvm,shutdown,hook,for,itself,unless,the,context,gets,closed,early,all,context,instances,will,be,automatically,closed,on,jvm,shutdown,this,allows,for,freeing,external,resources,held,by,beans,within,the,context,e,g,temporary,files,param,locations,the,resource,locations,to,use,to,load,the,application,context,return,a,new,application,context,throws,exception,if,context,loading,failed;application,context,load,context,string,locations,throws,exception
ContextLoader -> String[] processLocations(Class<?> clazz, String... locations)_;1328020251;Processes application context resource locations for a specified class._<p>Concrete implementations may choose to modify the supplied locations,_generate new locations, or simply return the supplied locations unchanged._@param clazz the class with which the locations are associated: used to_determine how to process the supplied locations_@param locations the unmodified locations to use for loading the_application context (can be <code>null</code> or empty)_@return an array of application context resource locations;String[] processLocations(Class<?> clazz, String... locations)_;processes,application,context,resource,locations,for,a,specified,class,p,concrete,implementations,may,choose,to,modify,the,supplied,locations,generate,new,locations,or,simply,return,the,supplied,locations,unchanged,param,clazz,the,class,with,which,the,locations,are,associated,used,to,determine,how,to,process,the,supplied,locations,param,locations,the,unmodified,locations,to,use,for,loading,the,application,context,can,be,code,null,code,or,empty,return,an,array,of,application,context,resource,locations;string,process,locations,class,clazz,string,locations
ContextLoader -> String[] processLocations(Class<?> clazz, String... locations)_;1337278668;Processes application context resource locations for a specified class.__<p>Concrete implementations may choose to modify the supplied locations,_generate new locations, or simply return the supplied locations unchanged.__@param clazz the class with which the locations are associated: used to_determine how to process the supplied locations_@param locations the unmodified locations to use for loading the_application context (can be <code>null</code> or empty)_@return an array of application context resource locations;String[] processLocations(Class<?> clazz, String... locations)_;processes,application,context,resource,locations,for,a,specified,class,p,concrete,implementations,may,choose,to,modify,the,supplied,locations,generate,new,locations,or,simply,return,the,supplied,locations,unchanged,param,clazz,the,class,with,which,the,locations,are,associated,used,to,determine,how,to,process,the,supplied,locations,param,locations,the,unmodified,locations,to,use,for,loading,the,application,context,can,be,code,null,code,or,empty,return,an,array,of,application,context,resource,locations;string,process,locations,class,clazz,string,locations
ContextLoader -> String[] processLocations(Class<?> clazz, String... locations)_;1345469597;Processes application context resource locations for a specified class.__<p>Concrete implementations may choose to modify the supplied locations,_generate new locations, or simply return the supplied locations unchanged.__@param clazz the class with which the locations are associated: used to_determine how to process the supplied locations_@param locations the unmodified locations to use for loading the_application context (can be <code>null</code> or empty)_@return an array of application context resource locations;String[] processLocations(Class<?> clazz, String... locations)_;processes,application,context,resource,locations,for,a,specified,class,p,concrete,implementations,may,choose,to,modify,the,supplied,locations,generate,new,locations,or,simply,return,the,supplied,locations,unchanged,param,clazz,the,class,with,which,the,locations,are,associated,used,to,determine,how,to,process,the,supplied,locations,param,locations,the,unmodified,locations,to,use,for,loading,the,application,context,can,be,code,null,code,or,empty,return,an,array,of,application,context,resource,locations;string,process,locations,class,clazz,string,locations
ContextLoader -> String[] processLocations(Class<?> clazz, String... locations)_;1356735495;Processes application context resource locations for a specified class.__<p>Concrete implementations may choose to modify the supplied locations,_generate new locations, or simply return the supplied locations unchanged.__@param clazz the class with which the locations are associated: used to_determine how to process the supplied locations_@param locations the unmodified locations to use for loading the_application context (can be {@code null} or empty)_@return an array of application context resource locations;String[] processLocations(Class<?> clazz, String... locations)_;processes,application,context,resource,locations,for,a,specified,class,p,concrete,implementations,may,choose,to,modify,the,supplied,locations,generate,new,locations,or,simply,return,the,supplied,locations,unchanged,param,clazz,the,class,with,which,the,locations,are,associated,used,to,determine,how,to,process,the,supplied,locations,param,locations,the,unmodified,locations,to,use,for,loading,the,application,context,can,be,code,null,or,empty,return,an,array,of,application,context,resource,locations;string,process,locations,class,clazz,string,locations
ContextLoader -> String[] processLocations(Class<?> clazz, String... locations)_;1449505825;Processes application context resource locations for a specified class._<p>Concrete implementations may choose to modify the supplied locations,_generate new locations, or simply return the supplied locations unchanged._@param clazz the class with which the locations are associated: used to_determine how to process the supplied locations_@param locations the unmodified locations to use for loading the_application context (can be {@code null} or empty)_@return an array of application context resource locations;String[] processLocations(Class<?> clazz, String... locations)_;processes,application,context,resource,locations,for,a,specified,class,p,concrete,implementations,may,choose,to,modify,the,supplied,locations,generate,new,locations,or,simply,return,the,supplied,locations,unchanged,param,clazz,the,class,with,which,the,locations,are,associated,used,to,determine,how,to,process,the,supplied,locations,param,locations,the,unmodified,locations,to,use,for,loading,the,application,context,can,be,code,null,or,empty,return,an,array,of,application,context,resource,locations;string,process,locations,class,clazz,string,locations
ContextLoader -> String[] processLocations(Class<?> clazz, String... locations)_;1496955179;Processes application context resource locations for a specified class._<p>Concrete implementations may choose to modify the supplied locations,_generate new locations, or simply return the supplied locations unchanged._@param clazz the class with which the locations are associated: used to_determine how to process the supplied locations_@param locations the unmodified locations to use for loading the_application context (can be {@code null} or empty)_@return an array of application context resource locations;String[] processLocations(Class<?> clazz, String... locations)_;processes,application,context,resource,locations,for,a,specified,class,p,concrete,implementations,may,choose,to,modify,the,supplied,locations,generate,new,locations,or,simply,return,the,supplied,locations,unchanged,param,clazz,the,class,with,which,the,locations,are,associated,used,to,determine,how,to,process,the,supplied,locations,param,locations,the,unmodified,locations,to,use,for,loading,the,application,context,can,be,code,null,or,empty,return,an,array,of,application,context,resource,locations;string,process,locations,class,clazz,string,locations
ContextLoader -> String[] processLocations(Class<?> clazz, String... locations)_;1497341594;Processes application context resource locations for a specified class._<p>Concrete implementations may choose to modify the supplied locations,_generate new locations, or simply return the supplied locations unchanged._@param clazz the class with which the locations are associated: used to_determine how to process the supplied locations_@param locations the unmodified locations to use for loading the_application context (can be {@code null} or empty)_@return an array of application context resource locations;String[] processLocations(Class<?> clazz, String... locations)_;processes,application,context,resource,locations,for,a,specified,class,p,concrete,implementations,may,choose,to,modify,the,supplied,locations,generate,new,locations,or,simply,return,the,supplied,locations,unchanged,param,clazz,the,class,with,which,the,locations,are,associated,used,to,determine,how,to,process,the,supplied,locations,param,locations,the,unmodified,locations,to,use,for,loading,the,application,context,can,be,code,null,or,empty,return,an,array,of,application,context,resource,locations;string,process,locations,class,clazz,string,locations
