# id;timestamp;commentText;codeText;commentWords;codeWords
TestContext -> void markApplicationContextDirty(HierarchyMode hierarchyMode)_;1382815212;Call this method to signal that the {@linkplain ApplicationContext application_context} associated with this test context is <em>dirty</em> and should be_discarded. Do this if a test has modified the context &mdash_ for example,_by replacing a bean definition or modifying the state of a singleton bean._@param hierarchyMode the context cache clearing mode to be applied if the_context is part of a hierarchy (may be {@code null});void markApplicationContextDirty(HierarchyMode hierarchyMode)_;call,this,method,to,signal,that,the,linkplain,application,context,application,context,associated,with,this,test,context,is,em,dirty,em,and,should,be,discarded,do,this,if,a,test,has,modified,the,context,mdash,for,example,by,replacing,a,bean,definition,or,modifying,the,state,of,a,singleton,bean,param,hierarchy,mode,the,context,cache,clearing,mode,to,be,applied,if,the,context,is,part,of,a,hierarchy,may,be,code,null;void,mark,application,context,dirty,hierarchy,mode,hierarchy,mode
TestContext -> void markApplicationContextDirty(HierarchyMode hierarchyMode)_;1427056386;Call this method to signal that the {@linkplain ApplicationContext application_context} associated with this test context is <em>dirty</em> and should be_removed from the context cache._<p>Do this if a test has modified the context &mdash_ for example, by_modifying the state of a singleton bean, modifying the state of an embedded_database, etc._@param hierarchyMode the context cache clearing mode to be applied if the_context is part of a hierarchy (may be {@code null});void markApplicationContextDirty(HierarchyMode hierarchyMode)_;call,this,method,to,signal,that,the,linkplain,application,context,application,context,associated,with,this,test,context,is,em,dirty,em,and,should,be,removed,from,the,context,cache,p,do,this,if,a,test,has,modified,the,context,mdash,for,example,by,modifying,the,state,of,a,singleton,bean,modifying,the,state,of,an,embedded,database,etc,param,hierarchy,mode,the,context,cache,clearing,mode,to,be,applied,if,the,context,is,part,of,a,hierarchy,may,be,code,null;void,mark,application,context,dirty,hierarchy,mode,hierarchy,mode
TestContext -> void markApplicationContextDirty(HierarchyMode hierarchyMode)_;1472840882;Call this method to signal that the {@linkplain ApplicationContext application_context} associated with this test context is <em>dirty</em> and should be_removed from the context cache._<p>Do this if a test has modified the context &mdash_ for example, by_modifying the state of a singleton bean, modifying the state of an embedded_database, etc._@param hierarchyMode the context cache clearing mode to be applied if the_context is part of a hierarchy (may be {@code null});void markApplicationContextDirty(HierarchyMode hierarchyMode)_;call,this,method,to,signal,that,the,linkplain,application,context,application,context,associated,with,this,test,context,is,em,dirty,em,and,should,be,removed,from,the,context,cache,p,do,this,if,a,test,has,modified,the,context,mdash,for,example,by,modifying,the,state,of,a,singleton,bean,modifying,the,state,of,an,embedded,database,etc,param,hierarchy,mode,the,context,cache,clearing,mode,to,be,applied,if,the,context,is,part,of,a,hierarchy,may,be,code,null;void,mark,application,context,dirty,hierarchy,mode,hierarchy,mode
TestContext -> private ApplicationContext loadApplicationContext() throws Exception;1328020251;Load an <code>ApplicationContext</code> for this test context using the_configured {@code ContextLoader} and merged context configuration. Supports_both the {@link SmartContextLoader} and {@link ContextLoader} SPIs._@throws Exception if an error occurs while loading the application context;private ApplicationContext loadApplicationContext() throws Exception {_		ContextLoader contextLoader = mergedContextConfiguration.getContextLoader()__		Assert.notNull(contextLoader, "Can not load an ApplicationContext with a NULL 'contextLoader'. "_				+ "Consider annotating your test class with @ContextConfiguration.")___		ApplicationContext applicationContext___		if (contextLoader instanceof SmartContextLoader) {_			SmartContextLoader smartContextLoader = (SmartContextLoader) contextLoader__			applicationContext = smartContextLoader.loadContext(mergedContextConfiguration)__		}_		else {_			String[] locations = mergedContextConfiguration.getLocations()__			Assert.notNull(locations, "Can not load an ApplicationContext with a NULL 'locations' array. "_					+ "Consider annotating your test class with @ContextConfiguration.")__			applicationContext = contextLoader.loadContext(locations)__		}__		return applicationContext__	};load,an,code,application,context,code,for,this,test,context,using,the,configured,code,context,loader,and,merged,context,configuration,supports,both,the,link,smart,context,loader,and,link,context,loader,spis,throws,exception,if,an,error,occurs,while,loading,the,application,context;private,application,context,load,application,context,throws,exception,context,loader,context,loader,merged,context,configuration,get,context,loader,assert,not,null,context,loader,can,not,load,an,application,context,with,a,null,context,loader,consider,annotating,your,test,class,with,context,configuration,application,context,application,context,if,context,loader,instanceof,smart,context,loader,smart,context,loader,smart,context,loader,smart,context,loader,context,loader,application,context,smart,context,loader,load,context,merged,context,configuration,else,string,locations,merged,context,configuration,get,locations,assert,not,null,locations,can,not,load,an,application,context,with,a,null,locations,array,consider,annotating,your,test,class,with,context,configuration,application,context,context,loader,load,context,locations,return,application,context
TestContext -> private ApplicationContext loadApplicationContext() throws Exception;1349648958;Load an <code>ApplicationContext</code> for this test context using the_configured {@code ContextLoader} and merged context configuration. Supports_both the {@link SmartContextLoader} and {@link ContextLoader} SPIs._@throws Exception if an error occurs while loading the application context;private ApplicationContext loadApplicationContext() throws Exception {_		ContextLoader contextLoader = mergedContextConfiguration.getContextLoader()__		Assert.notNull(contextLoader, "Cannot load an ApplicationContext with a NULL 'contextLoader'. "_				+ "Consider annotating your test class with @ContextConfiguration.")___		ApplicationContext applicationContext___		if (contextLoader instanceof SmartContextLoader) {_			SmartContextLoader smartContextLoader = (SmartContextLoader) contextLoader__			applicationContext = smartContextLoader.loadContext(mergedContextConfiguration)__		}_		else {_			String[] locations = mergedContextConfiguration.getLocations()__			Assert.notNull(locations, "Cannot load an ApplicationContext with a NULL 'locations' array. "_					+ "Consider annotating your test class with @ContextConfiguration.")__			applicationContext = contextLoader.loadContext(locations)__		}__		return applicationContext__	};load,an,code,application,context,code,for,this,test,context,using,the,configured,code,context,loader,and,merged,context,configuration,supports,both,the,link,smart,context,loader,and,link,context,loader,spis,throws,exception,if,an,error,occurs,while,loading,the,application,context;private,application,context,load,application,context,throws,exception,context,loader,context,loader,merged,context,configuration,get,context,loader,assert,not,null,context,loader,cannot,load,an,application,context,with,a,null,context,loader,consider,annotating,your,test,class,with,context,configuration,application,context,application,context,if,context,loader,instanceof,smart,context,loader,smart,context,loader,smart,context,loader,smart,context,loader,context,loader,application,context,smart,context,loader,load,context,merged,context,configuration,else,string,locations,merged,context,configuration,get,locations,assert,not,null,locations,cannot,load,an,application,context,with,a,null,locations,array,consider,annotating,your,test,class,with,context,configuration,application,context,context,loader,load,context,locations,return,application,context
TestContext -> private ApplicationContext loadApplicationContext() throws Exception;1356735495;Load an {@code ApplicationContext} for this test context using the_configured {@code ContextLoader} and merged context configuration. Supports_both the {@link SmartContextLoader} and {@link ContextLoader} SPIs._@throws Exception if an error occurs while loading the application context;private ApplicationContext loadApplicationContext() throws Exception {_		ContextLoader contextLoader = mergedContextConfiguration.getContextLoader()__		Assert.notNull(contextLoader, "Cannot load an ApplicationContext with a NULL 'contextLoader'. "_				+ "Consider annotating your test class with @ContextConfiguration.")___		ApplicationContext applicationContext___		if (contextLoader instanceof SmartContextLoader) {_			SmartContextLoader smartContextLoader = (SmartContextLoader) contextLoader__			applicationContext = smartContextLoader.loadContext(mergedContextConfiguration)__		}_		else {_			String[] locations = mergedContextConfiguration.getLocations()__			Assert.notNull(locations, "Cannot load an ApplicationContext with a NULL 'locations' array. "_					+ "Consider annotating your test class with @ContextConfiguration.")__			applicationContext = contextLoader.loadContext(locations)__		}__		return applicationContext__	};load,an,code,application,context,for,this,test,context,using,the,configured,code,context,loader,and,merged,context,configuration,supports,both,the,link,smart,context,loader,and,link,context,loader,spis,throws,exception,if,an,error,occurs,while,loading,the,application,context;private,application,context,load,application,context,throws,exception,context,loader,context,loader,merged,context,configuration,get,context,loader,assert,not,null,context,loader,cannot,load,an,application,context,with,a,null,context,loader,consider,annotating,your,test,class,with,context,configuration,application,context,application,context,if,context,loader,instanceof,smart,context,loader,smart,context,loader,smart,context,loader,smart,context,loader,context,loader,application,context,smart,context,loader,load,context,merged,context,configuration,else,string,locations,merged,context,configuration,get,locations,assert,not,null,locations,cannot,load,an,application,context,with,a,null,locations,array,consider,annotating,your,test,class,with,context,configuration,application,context,context,loader,load,context,locations,return,application,context
TestContext -> Object getTestInstance()_;1382815212;Get the current {@link Object test instance} for this test context._<p>Note: this is a mutable property._@return the current test instance (may be {@code null})_@see #updateState(Object, Method, Throwable);Object getTestInstance()_;get,the,current,link,object,test,instance,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,instance,may,be,code,null,see,update,state,object,method,throwable;object,get,test,instance
TestContext -> Object getTestInstance()_;1427056386;Get the current {@linkplain Object test instance} for this test context._<p>Note: this is a mutable property._@return the current test instance (may be {@code null})_@see #updateState(Object, Method, Throwable);Object getTestInstance()_;get,the,current,linkplain,object,test,instance,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,instance,may,be,code,null,see,update,state,object,method,throwable;object,get,test,instance
TestContext -> Object getTestInstance()_;1472840882;Get the current {@linkplain Object test instance} for this test context._<p>Note: this is a mutable property._@return the current test instance (may be {@code null})_@see #updateState(Object, Method, Throwable);Object getTestInstance()_;get,the,current,linkplain,object,test,instance,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,instance,may,be,code,null,see,update,state,object,method,throwable;object,get,test,instance
TestContext -> Object getTestInstance()_;1496955179;Get the current {@linkplain Object test instance} for this test context._<p>Note: this is a mutable property._@return the current test instance (may be {@code null})_@see #updateState(Object, Method, Throwable);Object getTestInstance()_;get,the,current,linkplain,object,test,instance,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,instance,may,be,code,null,see,update,state,object,method,throwable;object,get,test,instance
TestContext -> TestContext(Class<?> testClass, ContextCache contextCache);1328020251;Delegates to {@link #TestContext(Class, ContextCache, String)} with a_value of <code>null</code> for the default {@code ContextLoader} class name.;TestContext(Class<?> testClass, ContextCache contextCache) {_		this(testClass, contextCache, null)__	};delegates,to,link,test,context,class,context,cache,string,with,a,value,of,code,null,code,for,the,default,code,context,loader,class,name;test,context,class,test,class,context,cache,context,cache,this,test,class,context,cache,null
TestContext -> TestContext(Class<?> testClass, ContextCache contextCache);1349648958;Delegates to {@link #TestContext(Class, ContextCache, String)} with a_value of <code>null</code> for the default {@code ContextLoader} class name.;TestContext(Class<?> testClass, ContextCache contextCache) {_		this(testClass, contextCache, null)__	};delegates,to,link,test,context,class,context,cache,string,with,a,value,of,code,null,code,for,the,default,code,context,loader,class,name;test,context,class,test,class,context,cache,context,cache,this,test,class,context,cache,null
TestContext -> TestContext(Class<?> testClass, ContextCache contextCache);1356735495;Delegates to {@link #TestContext(Class, ContextCache, String)} with a_value of {@code null} for the default {@code ContextLoader} class name.;TestContext(Class<?> testClass, ContextCache contextCache) {_		this(testClass, contextCache, null)__	};delegates,to,link,test,context,class,context,cache,string,with,a,value,of,code,null,for,the,default,code,context,loader,class,name;test,context,class,test,class,context,cache,context,cache,this,test,class,context,cache,null
TestContext -> TestContext(Class<?> testClass, ContextCache contextCache);1363208506;Delegates to {@link #TestContext(Class, ContextCache, String)} with a_value of {@code null} for the default {@code ContextLoader} class name.;TestContext(Class<?> testClass, ContextCache contextCache) {_		this(testClass, contextCache, null)__	};delegates,to,link,test,context,class,context,cache,string,with,a,value,of,code,null,for,the,default,code,context,loader,class,name;test,context,class,test,class,context,cache,context,cache,this,test,class,context,cache,null
TestContext -> TestContext(Class<?> testClass, ContextCache contextCache);1367954761;Delegates to {@link #TestContext(Class, ContextCache, String)} with a_value of {@code null} for the default {@code ContextLoader} class name.;TestContext(Class<?> testClass, ContextCache contextCache) {_		this(testClass, contextCache, null)__	};delegates,to,link,test,context,class,context,cache,string,with,a,value,of,code,null,for,the,default,code,context,loader,class,name;test,context,class,test,class,context,cache,context,cache,this,test,class,context,cache,null
TestContext -> TestContext(Class<?> testClass, ContextCache contextCache);1367955086;Delegates to {@link #TestContext(Class, ContextCache, String)} with a_value of {@code null} for the default {@code ContextLoader} class name.;TestContext(Class<?> testClass, ContextCache contextCache) {_		this(testClass, contextCache, null)__	};delegates,to,link,test,context,class,context,cache,string,with,a,value,of,code,null,for,the,default,code,context,loader,class,name;test,context,class,test,class,context,cache,context,cache,this,test,class,context,cache,null
TestContext -> TestContext(Class<?> testClass, ContextCache contextCache);1368216803;Delegates to {@link #TestContext(Class, ContextCache, String)} with a_value of {@code null} for the default {@code ContextLoader} class name.;TestContext(Class<?> testClass, ContextCache contextCache) {_		this(testClass, contextCache, null)__	};delegates,to,link,test,context,class,context,cache,string,with,a,value,of,code,null,for,the,default,code,context,loader,class,name;test,context,class,test,class,context,cache,context,cache,this,test,class,context,cache,null
TestContext -> public void markApplicationContextDirty();1328020251;Call this method to signal that the {@link ApplicationContext application_context} associated with this test context is <em>dirty</em> and should_be reloaded. Do this if a test has modified the context (for example, by_replacing a bean definition).;public void markApplicationContextDirty() {_		synchronized (contextCache) {_			contextCache.setDirty(mergedContextConfiguration)__		}_	};call,this,method,to,signal,that,the,link,application,context,application,context,associated,with,this,test,context,is,em,dirty,em,and,should,be,reloaded,do,this,if,a,test,has,modified,the,context,for,example,by,replacing,a,bean,definition;public,void,mark,application,context,dirty,synchronized,context,cache,context,cache,set,dirty,merged,context,configuration
TestContext -> public void markApplicationContextDirty();1349648958;Call this method to signal that the {@link ApplicationContext application_context} associated with this test context is <em>dirty</em> and should_be reloaded. Do this if a test has modified the context (for example, by_replacing a bean definition).;public void markApplicationContextDirty() {_		synchronized (contextCache) {_			contextCache.setDirty(mergedContextConfiguration)__		}_	};call,this,method,to,signal,that,the,link,application,context,application,context,associated,with,this,test,context,is,em,dirty,em,and,should,be,reloaded,do,this,if,a,test,has,modified,the,context,for,example,by,replacing,a,bean,definition;public,void,mark,application,context,dirty,synchronized,context,cache,context,cache,set,dirty,merged,context,configuration
TestContext -> public void markApplicationContextDirty();1356735495;Call this method to signal that the {@link ApplicationContext application_context} associated with this test context is <em>dirty</em> and should_be reloaded. Do this if a test has modified the context (for example, by_replacing a bean definition).;public void markApplicationContextDirty() {_		synchronized (contextCache) {_			contextCache.setDirty(mergedContextConfiguration)__		}_	};call,this,method,to,signal,that,the,link,application,context,application,context,associated,with,this,test,context,is,em,dirty,em,and,should,be,reloaded,do,this,if,a,test,has,modified,the,context,for,example,by,replacing,a,bean,definition;public,void,mark,application,context,dirty,synchronized,context,cache,context,cache,set,dirty,merged,context,configuration
TestContext -> Class<?> getTestClass()_;1382815212;Get the {@link Class test class} for this test context._@return the test class (never {@code null});Class<?> getTestClass()_;get,the,link,class,test,class,for,this,test,context,return,the,test,class,never,code,null;class,get,test,class
TestContext -> Class<?> getTestClass()_;1427056386;Get the {@linkplain Class test class} for this test context._@return the test class (never {@code null});Class<?> getTestClass()_;get,the,linkplain,class,test,class,for,this,test,context,return,the,test,class,never,code,null;class,get,test,class
TestContext -> Class<?> getTestClass()_;1472840882;Get the {@linkplain Class test class} for this test context._@return the test class (never {@code null});Class<?> getTestClass()_;get,the,linkplain,class,test,class,for,this,test,context,return,the,test,class,never,code,null;class,get,test,class
TestContext -> Class<?> getTestClass()_;1495868221;Get the {@linkplain Class test class} for this test context._@return the test class (never {@code null});Class<?> getTestClass()_;get,the,linkplain,class,test,class,for,this,test,context,return,the,test,class,never,code,null;class,get,test,class
TestContext -> Class<?> getTestClass()_;1496955179;Get the {@linkplain Class test class} for this test context._@return the test class (never {@code null});Class<?> getTestClass()_;get,the,linkplain,class,test,class,for,this,test,context,return,the,test,class,never,code,null;class,get,test,class
TestContext -> TestContext(Class<?> testClass, ContextCache contextCache, String defaultContextLoaderClassName);1328020251;Construct a new test context for the supplied {@link Class test class}_and {@link ContextCache context cache} and parse the corresponding_{@link ContextConfiguration &#064_ContextConfiguration} annotation, if_present._<p>If the supplied class name for the default {@code ContextLoader}_is <code>null</code> or <em>empty</em> and no concrete {@code ContextLoader}_class is explicitly supplied via the {@code @ContextConfiguration}_annotation, a_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader} will be used instead._@param testClass the test class for which the test context should be_constructed (must not be <code>null</code>)_@param contextCache the context cache from which the constructed test_context should retrieve application contexts (must not be_<code>null</code>)_@param defaultContextLoaderClassName the name of the default_{@code ContextLoader} class to use (may be <code>null</code>);TestContext(Class<?> testClass, ContextCache contextCache, String defaultContextLoaderClassName) {_		Assert.notNull(testClass, "Test class must not be null")__		Assert.notNull(contextCache, "ContextCache must not be null")___		MergedContextConfiguration mergedContextConfiguration__		ContextConfiguration contextConfiguration = testClass.getAnnotation(ContextConfiguration.class)___		if (contextConfiguration == null) {_			if (logger.isInfoEnabled()) {_				logger.info(String.format("@ContextConfiguration not found for class [%s]", testClass))__			}_			mergedContextConfiguration = new MergedContextConfiguration(testClass, null, null, null, null)__		}_		else {_			if (logger.isTraceEnabled()) {_				logger.trace(String.format("Retrieved @ContextConfiguration [%s] for class [%s]", contextConfiguration,_					testClass))__			}_			mergedContextConfiguration = ContextLoaderUtils.buildMergedContextConfiguration(testClass,_				defaultContextLoaderClassName)__		}__		this.contextCache = contextCache__		this.mergedContextConfiguration = mergedContextConfiguration__		this.testClass = testClass__	};construct,a,new,test,context,for,the,supplied,link,class,test,class,and,link,context,cache,context,cache,and,parse,the,corresponding,link,context,configuration,064,context,configuration,annotation,if,present,p,if,the,supplied,class,name,for,the,default,code,context,loader,is,code,null,code,or,em,empty,em,and,no,concrete,code,context,loader,class,is,explicitly,supplied,via,the,code,context,configuration,annotation,a,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,will,be,used,instead,param,test,class,the,test,class,for,which,the,test,context,should,be,constructed,must,not,be,code,null,code,param,context,cache,the,context,cache,from,which,the,constructed,test,context,should,retrieve,application,contexts,must,not,be,code,null,code,param,default,context,loader,class,name,the,name,of,the,default,code,context,loader,class,to,use,may,be,code,null,code;test,context,class,test,class,context,cache,context,cache,string,default,context,loader,class,name,assert,not,null,test,class,test,class,must,not,be,null,assert,not,null,context,cache,context,cache,must,not,be,null,merged,context,configuration,merged,context,configuration,context,configuration,context,configuration,test,class,get,annotation,context,configuration,class,if,context,configuration,null,if,logger,is,info,enabled,logger,info,string,format,context,configuration,not,found,for,class,s,test,class,merged,context,configuration,new,merged,context,configuration,test,class,null,null,null,null,else,if,logger,is,trace,enabled,logger,trace,string,format,retrieved,context,configuration,s,for,class,s,context,configuration,test,class,merged,context,configuration,context,loader,utils,build,merged,context,configuration,test,class,default,context,loader,class,name,this,context,cache,context,cache,this,merged,context,configuration,merged,context,configuration,this,test,class,test,class
TestContext -> TestContext(Class<?> testClass, ContextCache contextCache, String defaultContextLoaderClassName);1349648958;Construct a new test context for the supplied {@link Class test class}_and {@link ContextCache context cache} and parse the corresponding_{@link ContextConfiguration &#064_ContextConfiguration} annotation, if_present._<p>If the supplied class name for the default {@code ContextLoader}_is <code>null</code> or <em>empty</em> and no concrete {@code ContextLoader}_class is explicitly supplied via the {@code @ContextConfiguration}_annotation, a_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader} will be used instead._@param testClass the test class for which the test context should be_constructed (must not be <code>null</code>)_@param contextCache the context cache from which the constructed test_context should retrieve application contexts (must not be_<code>null</code>)_@param defaultContextLoaderClassName the name of the default_{@code ContextLoader} class to use (may be <code>null</code>);TestContext(Class<?> testClass, ContextCache contextCache, String defaultContextLoaderClassName) {_		Assert.notNull(testClass, "Test class must not be null")__		Assert.notNull(contextCache, "ContextCache must not be null")___		MergedContextConfiguration mergedContextConfiguration__		ContextConfiguration contextConfiguration = testClass.getAnnotation(ContextConfiguration.class)___		if (contextConfiguration == null) {_			if (logger.isInfoEnabled()) {_				logger.info(String.format("@ContextConfiguration not found for class [%s]", testClass))__			}_			mergedContextConfiguration = new MergedContextConfiguration(testClass, null, null, null, null)__		}_		else {_			if (logger.isTraceEnabled()) {_				logger.trace(String.format("Retrieved @ContextConfiguration [%s] for class [%s]", contextConfiguration,_					testClass))__			}_			mergedContextConfiguration = ContextLoaderUtils.buildMergedContextConfiguration(testClass,_				defaultContextLoaderClassName)__		}__		this.contextCache = contextCache__		this.mergedContextConfiguration = mergedContextConfiguration__		this.testClass = testClass__	};construct,a,new,test,context,for,the,supplied,link,class,test,class,and,link,context,cache,context,cache,and,parse,the,corresponding,link,context,configuration,064,context,configuration,annotation,if,present,p,if,the,supplied,class,name,for,the,default,code,context,loader,is,code,null,code,or,em,empty,em,and,no,concrete,code,context,loader,class,is,explicitly,supplied,via,the,code,context,configuration,annotation,a,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,will,be,used,instead,param,test,class,the,test,class,for,which,the,test,context,should,be,constructed,must,not,be,code,null,code,param,context,cache,the,context,cache,from,which,the,constructed,test,context,should,retrieve,application,contexts,must,not,be,code,null,code,param,default,context,loader,class,name,the,name,of,the,default,code,context,loader,class,to,use,may,be,code,null,code;test,context,class,test,class,context,cache,context,cache,string,default,context,loader,class,name,assert,not,null,test,class,test,class,must,not,be,null,assert,not,null,context,cache,context,cache,must,not,be,null,merged,context,configuration,merged,context,configuration,context,configuration,context,configuration,test,class,get,annotation,context,configuration,class,if,context,configuration,null,if,logger,is,info,enabled,logger,info,string,format,context,configuration,not,found,for,class,s,test,class,merged,context,configuration,new,merged,context,configuration,test,class,null,null,null,null,else,if,logger,is,trace,enabled,logger,trace,string,format,retrieved,context,configuration,s,for,class,s,context,configuration,test,class,merged,context,configuration,context,loader,utils,build,merged,context,configuration,test,class,default,context,loader,class,name,this,context,cache,context,cache,this,merged,context,configuration,merged,context,configuration,this,test,class,test,class
TestContext -> TestContext(Class<?> testClass, ContextCache contextCache, String defaultContextLoaderClassName);1356735495;Construct a new test context for the supplied {@link Class test class}_and {@link ContextCache context cache} and parse the corresponding_{@link ContextConfiguration &#064_ContextConfiguration} annotation, if_present._<p>If the supplied class name for the default {@code ContextLoader}_is {@code null} or <em>empty</em> and no concrete {@code ContextLoader}_class is explicitly supplied via the {@code @ContextConfiguration}_annotation, a_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader} will be used instead._@param testClass the test class for which the test context should be_constructed (must not be {@code null})_@param contextCache the context cache from which the constructed test_context should retrieve application contexts (must not be_{@code null})_@param defaultContextLoaderClassName the name of the default_{@code ContextLoader} class to use (may be {@code null});TestContext(Class<?> testClass, ContextCache contextCache, String defaultContextLoaderClassName) {_		Assert.notNull(testClass, "Test class must not be null")__		Assert.notNull(contextCache, "ContextCache must not be null")___		MergedContextConfiguration mergedContextConfiguration__		ContextConfiguration contextConfiguration = testClass.getAnnotation(ContextConfiguration.class)___		if (contextConfiguration == null) {_			if (logger.isInfoEnabled()) {_				logger.info(String.format("@ContextConfiguration not found for class [%s]", testClass))__			}_			mergedContextConfiguration = new MergedContextConfiguration(testClass, null, null, null, null)__		}_		else {_			if (logger.isTraceEnabled()) {_				logger.trace(String.format("Retrieved @ContextConfiguration [%s] for class [%s]", contextConfiguration,_					testClass))__			}_			mergedContextConfiguration = ContextLoaderUtils.buildMergedContextConfiguration(testClass,_				defaultContextLoaderClassName)__		}__		this.contextCache = contextCache__		this.mergedContextConfiguration = mergedContextConfiguration__		this.testClass = testClass__	};construct,a,new,test,context,for,the,supplied,link,class,test,class,and,link,context,cache,context,cache,and,parse,the,corresponding,link,context,configuration,064,context,configuration,annotation,if,present,p,if,the,supplied,class,name,for,the,default,code,context,loader,is,code,null,or,em,empty,em,and,no,concrete,code,context,loader,class,is,explicitly,supplied,via,the,code,context,configuration,annotation,a,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,will,be,used,instead,param,test,class,the,test,class,for,which,the,test,context,should,be,constructed,must,not,be,code,null,param,context,cache,the,context,cache,from,which,the,constructed,test,context,should,retrieve,application,contexts,must,not,be,code,null,param,default,context,loader,class,name,the,name,of,the,default,code,context,loader,class,to,use,may,be,code,null;test,context,class,test,class,context,cache,context,cache,string,default,context,loader,class,name,assert,not,null,test,class,test,class,must,not,be,null,assert,not,null,context,cache,context,cache,must,not,be,null,merged,context,configuration,merged,context,configuration,context,configuration,context,configuration,test,class,get,annotation,context,configuration,class,if,context,configuration,null,if,logger,is,info,enabled,logger,info,string,format,context,configuration,not,found,for,class,s,test,class,merged,context,configuration,new,merged,context,configuration,test,class,null,null,null,null,else,if,logger,is,trace,enabled,logger,trace,string,format,retrieved,context,configuration,s,for,class,s,context,configuration,test,class,merged,context,configuration,context,loader,utils,build,merged,context,configuration,test,class,default,context,loader,class,name,this,context,cache,context,cache,this,merged,context,configuration,merged,context,configuration,this,test,class,test,class
TestContext -> TestContext(Class<?> testClass, ContextCache contextCache, String defaultContextLoaderClassName);1363208506;Construct a new test context for the supplied {@linkplain Class test class}_and {@linkplain ContextCache context cache} and parse the corresponding_{@link ContextConfiguration &#064_ContextConfiguration} or_{@link ContextHierarchy &#064_ContextHierarchy} annotation, if present._<p>If the supplied class name for the default {@code ContextLoader}_is {@code null} or <em>empty</em> and no concrete {@code ContextLoader}_class is explicitly supplied via {@code @ContextConfiguration}, a_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader} or_{@link org.springframework.test.context.web.WebDelegatingSmartContextLoader_WebDelegatingSmartContextLoader} will be used instead._@param testClass the test class for which the test context should be_constructed (must not be {@code null})_@param contextCache the context cache from which the constructed test_context should retrieve application contexts (must not be_{@code null})_@param defaultContextLoaderClassName the name of the default_{@code ContextLoader} class to use (may be {@code null});TestContext(Class<?> testClass, ContextCache contextCache, String defaultContextLoaderClassName) {_		Assert.notNull(testClass, "Test class must not be null")__		Assert.notNull(contextCache, "ContextCache must not be null")___		this.testClass = testClass__		this.contextCache = contextCache__		this.cacheAwareContextLoaderDelegate = new CacheAwareContextLoaderDelegate(contextCache)___		MergedContextConfiguration mergedContextConfiguration___		if (testClass.isAnnotationPresent(ContextConfiguration.class)_				|| testClass.isAnnotationPresent(ContextHierarchy.class)) {_			mergedContextConfiguration = ContextLoaderUtils.buildMergedContextConfiguration(testClass,_				defaultContextLoaderClassName, cacheAwareContextLoaderDelegate)__		}_		else {_			if (logger.isInfoEnabled()) {_				logger.info(String.format(_					"Neither @ContextConfiguration nor @ContextHierarchy found for test class [%s]",_					testClass.getName()))__			}_			mergedContextConfiguration = new MergedContextConfiguration(testClass, null, null, null, null)__		}__		this.mergedContextConfiguration = mergedContextConfiguration__	};construct,a,new,test,context,for,the,supplied,linkplain,class,test,class,and,linkplain,context,cache,context,cache,and,parse,the,corresponding,link,context,configuration,064,context,configuration,or,link,context,hierarchy,064,context,hierarchy,annotation,if,present,p,if,the,supplied,class,name,for,the,default,code,context,loader,is,code,null,or,em,empty,em,and,no,concrete,code,context,loader,class,is,explicitly,supplied,via,code,context,configuration,a,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,or,link,org,springframework,test,context,web,web,delegating,smart,context,loader,web,delegating,smart,context,loader,will,be,used,instead,param,test,class,the,test,class,for,which,the,test,context,should,be,constructed,must,not,be,code,null,param,context,cache,the,context,cache,from,which,the,constructed,test,context,should,retrieve,application,contexts,must,not,be,code,null,param,default,context,loader,class,name,the,name,of,the,default,code,context,loader,class,to,use,may,be,code,null;test,context,class,test,class,context,cache,context,cache,string,default,context,loader,class,name,assert,not,null,test,class,test,class,must,not,be,null,assert,not,null,context,cache,context,cache,must,not,be,null,this,test,class,test,class,this,context,cache,context,cache,this,cache,aware,context,loader,delegate,new,cache,aware,context,loader,delegate,context,cache,merged,context,configuration,merged,context,configuration,if,test,class,is,annotation,present,context,configuration,class,test,class,is,annotation,present,context,hierarchy,class,merged,context,configuration,context,loader,utils,build,merged,context,configuration,test,class,default,context,loader,class,name,cache,aware,context,loader,delegate,else,if,logger,is,info,enabled,logger,info,string,format,neither,context,configuration,nor,context,hierarchy,found,for,test,class,s,test,class,get,name,merged,context,configuration,new,merged,context,configuration,test,class,null,null,null,null,this,merged,context,configuration,merged,context,configuration
TestContext -> TestContext(Class<?> testClass, ContextCache contextCache, String defaultContextLoaderClassName);1367954761;Construct a new test context for the supplied {@linkplain Class test class}_and {@linkplain ContextCache context cache} and parse the corresponding_{@link ContextConfiguration &#064_ContextConfiguration} or_{@link ContextHierarchy &#064_ContextHierarchy} annotation, if present._<p>If the supplied class name for the default {@code ContextLoader}_is {@code null} or <em>empty</em> and no concrete {@code ContextLoader}_class is explicitly supplied via {@code @ContextConfiguration}, a_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader} or_{@link org.springframework.test.context.web.WebDelegatingSmartContextLoader_WebDelegatingSmartContextLoader} will be used instead._@param testClass the test class for which the test context should be_constructed (must not be {@code null})_@param contextCache the context cache from which the constructed test_context should retrieve application contexts (must not be_{@code null})_@param defaultContextLoaderClassName the name of the default_{@code ContextLoader} class to use (may be {@code null});TestContext(Class<?> testClass, ContextCache contextCache, String defaultContextLoaderClassName) {_		Assert.notNull(testClass, "Test class must not be null")__		Assert.notNull(contextCache, "ContextCache must not be null")___		this.testClass = testClass__		this.contextCache = contextCache__		this.cacheAwareContextLoaderDelegate = new CacheAwareContextLoaderDelegate(contextCache)___		MergedContextConfiguration mergedContextConfiguration___		if (testClass.isAnnotationPresent(ContextConfiguration.class)_				|| testClass.isAnnotationPresent(ContextHierarchy.class)) {_			mergedContextConfiguration = ContextLoaderUtils.buildMergedContextConfiguration(testClass,_				defaultContextLoaderClassName, cacheAwareContextLoaderDelegate)__		}_		else {_			if (logger.isInfoEnabled()) {_				logger.info(String.format(_					"Neither @ContextConfiguration nor @ContextHierarchy found for test class [%s]",_					testClass.getName()))__			}_			mergedContextConfiguration = new MergedContextConfiguration(testClass, null, null, null, null)__		}__		this.mergedContextConfiguration = mergedContextConfiguration__	};construct,a,new,test,context,for,the,supplied,linkplain,class,test,class,and,linkplain,context,cache,context,cache,and,parse,the,corresponding,link,context,configuration,064,context,configuration,or,link,context,hierarchy,064,context,hierarchy,annotation,if,present,p,if,the,supplied,class,name,for,the,default,code,context,loader,is,code,null,or,em,empty,em,and,no,concrete,code,context,loader,class,is,explicitly,supplied,via,code,context,configuration,a,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,or,link,org,springframework,test,context,web,web,delegating,smart,context,loader,web,delegating,smart,context,loader,will,be,used,instead,param,test,class,the,test,class,for,which,the,test,context,should,be,constructed,must,not,be,code,null,param,context,cache,the,context,cache,from,which,the,constructed,test,context,should,retrieve,application,contexts,must,not,be,code,null,param,default,context,loader,class,name,the,name,of,the,default,code,context,loader,class,to,use,may,be,code,null;test,context,class,test,class,context,cache,context,cache,string,default,context,loader,class,name,assert,not,null,test,class,test,class,must,not,be,null,assert,not,null,context,cache,context,cache,must,not,be,null,this,test,class,test,class,this,context,cache,context,cache,this,cache,aware,context,loader,delegate,new,cache,aware,context,loader,delegate,context,cache,merged,context,configuration,merged,context,configuration,if,test,class,is,annotation,present,context,configuration,class,test,class,is,annotation,present,context,hierarchy,class,merged,context,configuration,context,loader,utils,build,merged,context,configuration,test,class,default,context,loader,class,name,cache,aware,context,loader,delegate,else,if,logger,is,info,enabled,logger,info,string,format,neither,context,configuration,nor,context,hierarchy,found,for,test,class,s,test,class,get,name,merged,context,configuration,new,merged,context,configuration,test,class,null,null,null,null,this,merged,context,configuration,merged,context,configuration
TestContext -> TestContext(Class<?> testClass, ContextCache contextCache, String defaultContextLoaderClassName);1367955086;Construct a new test context for the supplied {@linkplain Class test class}_and {@linkplain ContextCache context cache} and parse the corresponding_{@link ContextConfiguration &#064_ContextConfiguration} or_{@link ContextHierarchy &#064_ContextHierarchy} annotation, if present._<p>If the supplied class name for the default {@code ContextLoader}_is {@code null} or <em>empty</em> and no concrete {@code ContextLoader}_class is explicitly supplied via {@code @ContextConfiguration}, a_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader} or_{@link org.springframework.test.context.web.WebDelegatingSmartContextLoader_WebDelegatingSmartContextLoader} will be used instead._@param testClass the test class for which the test context should be_constructed (must not be {@code null})_@param contextCache the context cache from which the constructed test_context should retrieve application contexts (must not be_{@code null})_@param defaultContextLoaderClassName the name of the default_{@code ContextLoader} class to use (may be {@code null});TestContext(Class<?> testClass, ContextCache contextCache, String defaultContextLoaderClassName) {_		Assert.notNull(testClass, "Test class must not be null")__		Assert.notNull(contextCache, "ContextCache must not be null")___		this.testClass = testClass__		this.contextCache = contextCache__		this.cacheAwareContextLoaderDelegate = new CacheAwareContextLoaderDelegate(contextCache)___		MergedContextConfiguration mergedContextConfiguration___		if (testClass.isAnnotationPresent(ContextConfiguration.class)_				|| testClass.isAnnotationPresent(ContextHierarchy.class)) {_			mergedContextConfiguration = ContextLoaderUtils.buildMergedContextConfiguration(testClass,_				defaultContextLoaderClassName, cacheAwareContextLoaderDelegate)__		}_		else {_			if (logger.isInfoEnabled()) {_				logger.info(String.format(_					"Neither @ContextConfiguration nor @ContextHierarchy found for test class [%s]",_					testClass.getName()))__			}_			mergedContextConfiguration = new MergedContextConfiguration(testClass, null, null, null, null)__		}__		this.mergedContextConfiguration = mergedContextConfiguration__	};construct,a,new,test,context,for,the,supplied,linkplain,class,test,class,and,linkplain,context,cache,context,cache,and,parse,the,corresponding,link,context,configuration,064,context,configuration,or,link,context,hierarchy,064,context,hierarchy,annotation,if,present,p,if,the,supplied,class,name,for,the,default,code,context,loader,is,code,null,or,em,empty,em,and,no,concrete,code,context,loader,class,is,explicitly,supplied,via,code,context,configuration,a,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,or,link,org,springframework,test,context,web,web,delegating,smart,context,loader,web,delegating,smart,context,loader,will,be,used,instead,param,test,class,the,test,class,for,which,the,test,context,should,be,constructed,must,not,be,code,null,param,context,cache,the,context,cache,from,which,the,constructed,test,context,should,retrieve,application,contexts,must,not,be,code,null,param,default,context,loader,class,name,the,name,of,the,default,code,context,loader,class,to,use,may,be,code,null;test,context,class,test,class,context,cache,context,cache,string,default,context,loader,class,name,assert,not,null,test,class,test,class,must,not,be,null,assert,not,null,context,cache,context,cache,must,not,be,null,this,test,class,test,class,this,context,cache,context,cache,this,cache,aware,context,loader,delegate,new,cache,aware,context,loader,delegate,context,cache,merged,context,configuration,merged,context,configuration,if,test,class,is,annotation,present,context,configuration,class,test,class,is,annotation,present,context,hierarchy,class,merged,context,configuration,context,loader,utils,build,merged,context,configuration,test,class,default,context,loader,class,name,cache,aware,context,loader,delegate,else,if,logger,is,info,enabled,logger,info,string,format,neither,context,configuration,nor,context,hierarchy,found,for,test,class,s,test,class,get,name,merged,context,configuration,new,merged,context,configuration,test,class,null,null,null,null,this,merged,context,configuration,merged,context,configuration
TestContext -> TestContext(Class<?> testClass, ContextCache contextCache, String defaultContextLoaderClassName);1368216803;Construct a new test context for the supplied {@linkplain Class test class}_and {@linkplain ContextCache context cache} and parse the corresponding_{@link ContextConfiguration &#064_ContextConfiguration} or_{@link ContextHierarchy &#064_ContextHierarchy} annotation, if present._<p>If the supplied class name for the default {@code ContextLoader}_is {@code null} or <em>empty</em> and no concrete {@code ContextLoader}_class is explicitly supplied via {@code @ContextConfiguration}, a_{@link org.springframework.test.context.support.DelegatingSmartContextLoader_DelegatingSmartContextLoader} or_{@link org.springframework.test.context.web.WebDelegatingSmartContextLoader_WebDelegatingSmartContextLoader} will be used instead._@param testClass the test class for which the test context should be_constructed (must not be {@code null})_@param contextCache the context cache from which the constructed test_context should retrieve application contexts (must not be_{@code null})_@param defaultContextLoaderClassName the name of the default_{@code ContextLoader} class to use (may be {@code null});TestContext(Class<?> testClass, ContextCache contextCache, String defaultContextLoaderClassName) {_		Assert.notNull(testClass, "Test class must not be null")__		Assert.notNull(contextCache, "ContextCache must not be null")___		this.testClass = testClass__		this.contextCache = contextCache__		this.cacheAwareContextLoaderDelegate = new CacheAwareContextLoaderDelegate(contextCache)___		MergedContextConfiguration mergedContextConfiguration___		if (testClass.isAnnotationPresent(ContextConfiguration.class)_				|| testClass.isAnnotationPresent(ContextHierarchy.class)) {_			mergedContextConfiguration = ContextLoaderUtils.buildMergedContextConfiguration(testClass,_				defaultContextLoaderClassName, cacheAwareContextLoaderDelegate)__		}_		else {_			if (logger.isInfoEnabled()) {_				logger.info(String.format(_					"Neither @ContextConfiguration nor @ContextHierarchy found for test class [%s]",_					testClass.getName()))__			}_			mergedContextConfiguration = new MergedContextConfiguration(testClass, null, null, null, null)__		}__		this.mergedContextConfiguration = mergedContextConfiguration__	};construct,a,new,test,context,for,the,supplied,linkplain,class,test,class,and,linkplain,context,cache,context,cache,and,parse,the,corresponding,link,context,configuration,064,context,configuration,or,link,context,hierarchy,064,context,hierarchy,annotation,if,present,p,if,the,supplied,class,name,for,the,default,code,context,loader,is,code,null,or,em,empty,em,and,no,concrete,code,context,loader,class,is,explicitly,supplied,via,code,context,configuration,a,link,org,springframework,test,context,support,delegating,smart,context,loader,delegating,smart,context,loader,or,link,org,springframework,test,context,web,web,delegating,smart,context,loader,web,delegating,smart,context,loader,will,be,used,instead,param,test,class,the,test,class,for,which,the,test,context,should,be,constructed,must,not,be,code,null,param,context,cache,the,context,cache,from,which,the,constructed,test,context,should,retrieve,application,contexts,must,not,be,code,null,param,default,context,loader,class,name,the,name,of,the,default,code,context,loader,class,to,use,may,be,code,null;test,context,class,test,class,context,cache,context,cache,string,default,context,loader,class,name,assert,not,null,test,class,test,class,must,not,be,null,assert,not,null,context,cache,context,cache,must,not,be,null,this,test,class,test,class,this,context,cache,context,cache,this,cache,aware,context,loader,delegate,new,cache,aware,context,loader,delegate,context,cache,merged,context,configuration,merged,context,configuration,if,test,class,is,annotation,present,context,configuration,class,test,class,is,annotation,present,context,hierarchy,class,merged,context,configuration,context,loader,utils,build,merged,context,configuration,test,class,default,context,loader,class,name,cache,aware,context,loader,delegate,else,if,logger,is,info,enabled,logger,info,string,format,neither,context,configuration,nor,context,hierarchy,found,for,test,class,s,test,class,get,name,merged,context,configuration,new,merged,context,configuration,test,class,null,null,null,null,this,merged,context,configuration,merged,context,configuration
TestContext -> public final Class<?> getTestClass();1328020251;Get the {@link Class test class} for this test context._@return the test class (never <code>null</code>);public final Class<?> getTestClass() {_		return testClass__	};get,the,link,class,test,class,for,this,test,context,return,the,test,class,never,code,null,code;public,final,class,get,test,class,return,test,class
TestContext -> public final Class<?> getTestClass();1349648958;Get the {@link Class test class} for this test context._@return the test class (never <code>null</code>);public final Class<?> getTestClass() {_		return testClass__	};get,the,link,class,test,class,for,this,test,context,return,the,test,class,never,code,null,code;public,final,class,get,test,class,return,test,class
TestContext -> public final Class<?> getTestClass();1356735495;Get the {@link Class test class} for this test context._@return the test class (never {@code null});public final Class<?> getTestClass() {_		return testClass__	};get,the,link,class,test,class,for,this,test,context,return,the,test,class,never,code,null;public,final,class,get,test,class,return,test,class
TestContext -> public final Class<?> getTestClass();1363208506;Get the {@link Class test class} for this test context._@return the test class (never {@code null});public final Class<?> getTestClass() {_		return testClass__	};get,the,link,class,test,class,for,this,test,context,return,the,test,class,never,code,null;public,final,class,get,test,class,return,test,class
TestContext -> public final Class<?> getTestClass();1367954761;Get the {@link Class test class} for this test context._@return the test class (never {@code null});public final Class<?> getTestClass() {_		return testClass__	};get,the,link,class,test,class,for,this,test,context,return,the,test,class,never,code,null;public,final,class,get,test,class,return,test,class
TestContext -> public final Class<?> getTestClass();1367955086;Get the {@link Class test class} for this test context._@return the test class (never {@code null});public final Class<?> getTestClass() {_		return testClass__	};get,the,link,class,test,class,for,this,test,context,return,the,test,class,never,code,null;public,final,class,get,test,class,return,test,class
TestContext -> public final Class<?> getTestClass();1368216803;Get the {@link Class test class} for this test context._@return the test class (never {@code null});public final Class<?> getTestClass() {_		return testClass__	};get,the,link,class,test,class,for,this,test,context,return,the,test,class,never,code,null;public,final,class,get,test,class,return,test,class
TestContext -> void updateState(Object testInstance, Method testMethod, Throwable testException)_;1382815212;Update this test context to reflect the state of the currently executing_test._<p>Caution: concurrent invocations of this method might not be thread-safe,_depending on the underlying implementation._@param testInstance the current test instance (may be {@code null})_@param testMethod the current test method (may be {@code null})_@param testException the exception that was thrown in the test method, or_{@code null} if no exception was thrown;void updateState(Object testInstance, Method testMethod, Throwable testException)_;update,this,test,context,to,reflect,the,state,of,the,currently,executing,test,p,caution,concurrent,invocations,of,this,method,might,not,be,thread,safe,depending,on,the,underlying,implementation,param,test,instance,the,current,test,instance,may,be,code,null,param,test,method,the,current,test,method,may,be,code,null,param,test,exception,the,exception,that,was,thrown,in,the,test,method,or,code,null,if,no,exception,was,thrown;void,update,state,object,test,instance,method,test,method,throwable,test,exception
TestContext -> void updateState(Object testInstance, Method testMethod, Throwable testException)_;1427056386;Update this test context to reflect the state of the currently executing_test._<p>Caution: concurrent invocations of this method might not be thread-safe,_depending on the underlying implementation._@param testInstance the current test instance (may be {@code null})_@param testMethod the current test method (may be {@code null})_@param testException the exception that was thrown in the test method, or_{@code null} if no exception was thrown;void updateState(Object testInstance, Method testMethod, Throwable testException)_;update,this,test,context,to,reflect,the,state,of,the,currently,executing,test,p,caution,concurrent,invocations,of,this,method,might,not,be,thread,safe,depending,on,the,underlying,implementation,param,test,instance,the,current,test,instance,may,be,code,null,param,test,method,the,current,test,method,may,be,code,null,param,test,exception,the,exception,that,was,thrown,in,the,test,method,or,code,null,if,no,exception,was,thrown;void,update,state,object,test,instance,method,test,method,throwable,test,exception
TestContext -> void updateState(Object testInstance, Method testMethod, Throwable testException)_;1472840882;Update this test context to reflect the state of the currently executing_test._<p>Caution: concurrent invocations of this method might not be thread-safe,_depending on the underlying implementation._@param testInstance the current test instance (may be {@code null})_@param testMethod the current test method (may be {@code null})_@param testException the exception that was thrown in the test method, or_{@code null} if no exception was thrown;void updateState(Object testInstance, Method testMethod, Throwable testException)_;update,this,test,context,to,reflect,the,state,of,the,currently,executing,test,p,caution,concurrent,invocations,of,this,method,might,not,be,thread,safe,depending,on,the,underlying,implementation,param,test,instance,the,current,test,instance,may,be,code,null,param,test,method,the,current,test,method,may,be,code,null,param,test,exception,the,exception,that,was,thrown,in,the,test,method,or,code,null,if,no,exception,was,thrown;void,update,state,object,test,instance,method,test,method,throwable,test,exception
TestContext -> Method getTestMethod()_;1382815212;Get the current {@link Method test method} for this test context._<p>Note: this is a mutable property._@return the current test method (may be {@code null})_@see #updateState(Object, Method, Throwable);Method getTestMethod()_;get,the,current,link,method,test,method,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,method,may,be,code,null,see,update,state,object,method,throwable;method,get,test,method
TestContext -> Method getTestMethod()_;1427056386;Get the current {@linkplain Method test method} for this test context._<p>Note: this is a mutable property._@return the current test method (may be {@code null})_@see #updateState(Object, Method, Throwable);Method getTestMethod()_;get,the,current,linkplain,method,test,method,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,method,may,be,code,null,see,update,state,object,method,throwable;method,get,test,method
TestContext -> Method getTestMethod()_;1472840882;Get the current {@linkplain Method test method} for this test context._<p>Note: this is a mutable property._@return the current test method (may be {@code null})_@see #updateState(Object, Method, Throwable);Method getTestMethod()_;get,the,current,linkplain,method,test,method,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,method,may,be,code,null,see,update,state,object,method,throwable;method,get,test,method
TestContext -> Method getTestMethod()_;1496955179;Get the current {@linkplain Method test method} for this test context._<p>Note: this is a mutable property._@return the current test method_@see #updateState(Object, Method, Throwable);Method getTestMethod()_;get,the,current,linkplain,method,test,method,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,method,see,update,state,object,method,throwable;method,get,test,method
TestContext -> public final Object getTestInstance();1328020251;Get the current {@link Object test instance} for this test context._<p>Note: this is a mutable property._@return the current test instance (may be <code>null</code>)_@see #updateState(Object,Method,Throwable);public final Object getTestInstance() {_		return testInstance__	};get,the,current,link,object,test,instance,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,instance,may,be,code,null,code,see,update,state,object,method,throwable;public,final,object,get,test,instance,return,test,instance
TestContext -> public final Object getTestInstance();1349648958;Get the current {@link Object test instance} for this test context._<p>Note: this is a mutable property._@return the current test instance (may be <code>null</code>)_@see #updateState(Object,Method,Throwable);public final Object getTestInstance() {_		return testInstance__	};get,the,current,link,object,test,instance,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,instance,may,be,code,null,code,see,update,state,object,method,throwable;public,final,object,get,test,instance,return,test,instance
TestContext -> public final Object getTestInstance();1356735495;Get the current {@link Object test instance} for this test context._<p>Note: this is a mutable property._@return the current test instance (may be {@code null})_@see #updateState(Object, Method, Throwable);public final Object getTestInstance() {_		return testInstance__	};get,the,current,link,object,test,instance,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,instance,may,be,code,null,see,update,state,object,method,throwable;public,final,object,get,test,instance,return,test,instance
TestContext -> public final Object getTestInstance();1363208506;Get the current {@link Object test instance} for this test context._<p>Note: this is a mutable property._@return the current test instance (may be {@code null})_@see #updateState(Object, Method, Throwable);public final Object getTestInstance() {_		return testInstance__	};get,the,current,link,object,test,instance,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,instance,may,be,code,null,see,update,state,object,method,throwable;public,final,object,get,test,instance,return,test,instance
TestContext -> public final Object getTestInstance();1367954761;Get the current {@link Object test instance} for this test context._<p>Note: this is a mutable property._@return the current test instance (may be {@code null})_@see #updateState(Object, Method, Throwable);public final Object getTestInstance() {_		return testInstance__	};get,the,current,link,object,test,instance,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,instance,may,be,code,null,see,update,state,object,method,throwable;public,final,object,get,test,instance,return,test,instance
TestContext -> public final Object getTestInstance();1367955086;Get the current {@link Object test instance} for this test context._<p>Note: this is a mutable property._@return the current test instance (may be {@code null})_@see #updateState(Object, Method, Throwable);public final Object getTestInstance() {_		return testInstance__	};get,the,current,link,object,test,instance,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,instance,may,be,code,null,see,update,state,object,method,throwable;public,final,object,get,test,instance,return,test,instance
TestContext -> public final Object getTestInstance();1368216803;Get the current {@link Object test instance} for this test context._<p>Note: this is a mutable property._@return the current test instance (may be {@code null})_@see #updateState(Object, Method, Throwable);public final Object getTestInstance() {_		return testInstance__	};get,the,current,link,object,test,instance,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,instance,may,be,code,null,see,update,state,object,method,throwable;public,final,object,get,test,instance,return,test,instance
TestContext -> Throwable getTestException()_;1382815212;Get the {@link Throwable exception} that was thrown during execution of_the {@link #getTestMethod() test method}._<p>Note: this is a mutable property._@return the exception that was thrown, or {@code null} if no_exception was thrown_@see #updateState(Object, Method, Throwable);Throwable getTestException()_;get,the,link,throwable,exception,that,was,thrown,during,execution,of,the,link,get,test,method,test,method,p,note,this,is,a,mutable,property,return,the,exception,that,was,thrown,or,code,null,if,no,exception,was,thrown,see,update,state,object,method,throwable;throwable,get,test,exception
TestContext -> Throwable getTestException()_;1427056386;Get the {@linkplain Throwable exception} that was thrown during execution_of the {@linkplain #getTestMethod() test method}._<p>Note: this is a mutable property._@return the exception that was thrown, or {@code null} if no_exception was thrown_@see #updateState(Object, Method, Throwable);Throwable getTestException()_;get,the,linkplain,throwable,exception,that,was,thrown,during,execution,of,the,linkplain,get,test,method,test,method,p,note,this,is,a,mutable,property,return,the,exception,that,was,thrown,or,code,null,if,no,exception,was,thrown,see,update,state,object,method,throwable;throwable,get,test,exception
TestContext -> Throwable getTestException()_;1472840882;Get the {@linkplain Throwable exception} that was thrown during execution_of the {@linkplain #getTestMethod() test method}._<p>Note: this is a mutable property._@return the exception that was thrown, or {@code null} if no_exception was thrown_@see #updateState(Object, Method, Throwable);Throwable getTestException()_;get,the,linkplain,throwable,exception,that,was,thrown,during,execution,of,the,linkplain,get,test,method,test,method,p,note,this,is,a,mutable,property,return,the,exception,that,was,thrown,or,code,null,if,no,exception,was,thrown,see,update,state,object,method,throwable;throwable,get,test,exception
TestContext -> public final Method getTestMethod();1328020251;Get the current {@link Method test method} for this test context._<p>Note: this is a mutable property._@return the current test method (may be <code>null</code>)_@see #updateState(Object, Method, Throwable);public final Method getTestMethod() {_		return testMethod__	};get,the,current,link,method,test,method,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,method,may,be,code,null,code,see,update,state,object,method,throwable;public,final,method,get,test,method,return,test,method
TestContext -> public final Method getTestMethod();1349648958;Get the current {@link Method test method} for this test context._<p>Note: this is a mutable property._@return the current test method (may be <code>null</code>)_@see #updateState(Object, Method, Throwable);public final Method getTestMethod() {_		return testMethod__	};get,the,current,link,method,test,method,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,method,may,be,code,null,code,see,update,state,object,method,throwable;public,final,method,get,test,method,return,test,method
TestContext -> public final Method getTestMethod();1356735495;Get the current {@link Method test method} for this test context._<p>Note: this is a mutable property._@return the current test method (may be {@code null})_@see #updateState(Object, Method, Throwable);public final Method getTestMethod() {_		return testMethod__	};get,the,current,link,method,test,method,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,method,may,be,code,null,see,update,state,object,method,throwable;public,final,method,get,test,method,return,test,method
TestContext -> public final Method getTestMethod();1363208506;Get the current {@link Method test method} for this test context._<p>Note: this is a mutable property._@return the current test method (may be {@code null})_@see #updateState(Object, Method, Throwable);public final Method getTestMethod() {_		return testMethod__	};get,the,current,link,method,test,method,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,method,may,be,code,null,see,update,state,object,method,throwable;public,final,method,get,test,method,return,test,method
TestContext -> public final Method getTestMethod();1367954761;Get the current {@link Method test method} for this test context._<p>Note: this is a mutable property._@return the current test method (may be {@code null})_@see #updateState(Object, Method, Throwable);public final Method getTestMethod() {_		return testMethod__	};get,the,current,link,method,test,method,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,method,may,be,code,null,see,update,state,object,method,throwable;public,final,method,get,test,method,return,test,method
TestContext -> public final Method getTestMethod();1367955086;Get the current {@link Method test method} for this test context._<p>Note: this is a mutable property._@return the current test method (may be {@code null})_@see #updateState(Object, Method, Throwable);public final Method getTestMethod() {_		return testMethod__	};get,the,current,link,method,test,method,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,method,may,be,code,null,see,update,state,object,method,throwable;public,final,method,get,test,method,return,test,method
TestContext -> public final Method getTestMethod();1368216803;Get the current {@link Method test method} for this test context._<p>Note: this is a mutable property._@return the current test method (may be {@code null})_@see #updateState(Object, Method, Throwable);public final Method getTestMethod() {_		return testMethod__	};get,the,current,link,method,test,method,for,this,test,context,p,note,this,is,a,mutable,property,return,the,current,test,method,may,be,code,null,see,update,state,object,method,throwable;public,final,method,get,test,method,return,test,method
TestContext -> @Nullable 	Throwable getTestException()_;1495868221;Get the {@linkplain Throwable exception} that was thrown during execution_of the {@linkplain #getTestMethod() test method}._<p>Note: this is a mutable property._@return the exception that was thrown, or {@code null} if no_exception was thrown_@see #updateState(Object, Method, Throwable);@Nullable_	Throwable getTestException()_;get,the,linkplain,throwable,exception,that,was,thrown,during,execution,of,the,linkplain,get,test,method,test,method,p,note,this,is,a,mutable,property,return,the,exception,that,was,thrown,or,code,null,if,no,exception,was,thrown,see,update,state,object,method,throwable;nullable,throwable,get,test,exception
TestContext -> @Nullable 	Throwable getTestException()_;1496955179;Get the {@linkplain Throwable exception} that was thrown during execution_of the {@linkplain #getTestMethod() test method}._<p>Note: this is a mutable property._@return the exception that was thrown, or {@code null} if no exception was thrown_@see #updateState(Object, Method, Throwable);@Nullable_	Throwable getTestException()_;get,the,linkplain,throwable,exception,that,was,thrown,during,execution,of,the,linkplain,get,test,method,test,method,p,note,this,is,a,mutable,property,return,the,exception,that,was,thrown,or,code,null,if,no,exception,was,thrown,see,update,state,object,method,throwable;nullable,throwable,get,test,exception
TestContext -> @Override 	public String toString();1328020251;Provide a String representation of this test context's state.;@Override_	public String toString() {_		return new ToStringCreator(this)_		.append("testClass", testClass)_		.append("testInstance", testInstance)_		.append("testMethod", testMethod)_		.append("testException", testException)_		.append("mergedContextConfiguration", mergedContextConfiguration)_		.toString()__	};provide,a,string,representation,of,this,test,context,s,state;override,public,string,to,string,return,new,to,string,creator,this,append,test,class,test,class,append,test,instance,test,instance,append,test,method,test,method,append,test,exception,test,exception,append,merged,context,configuration,merged,context,configuration,to,string
TestContext -> @Override 	public String toString();1349648958;Provide a String representation of this test context's state.;@Override_	public String toString() {_		return new ToStringCreator(this)_		.append("testClass", testClass)_		.append("testInstance", testInstance)_		.append("testMethod", testMethod)_		.append("testException", testException)_		.append("mergedContextConfiguration", mergedContextConfiguration)_		.toString()__	};provide,a,string,representation,of,this,test,context,s,state;override,public,string,to,string,return,new,to,string,creator,this,append,test,class,test,class,append,test,instance,test,instance,append,test,method,test,method,append,test,exception,test,exception,append,merged,context,configuration,merged,context,configuration,to,string
TestContext -> @Override 	public String toString();1356735495;Provide a String representation of this test context's state.;@Override_	public String toString() {_		return new ToStringCreator(this)_		.append("testClass", testClass)_		.append("testInstance", testInstance)_		.append("testMethod", testMethod)_		.append("testException", testException)_		.append("mergedContextConfiguration", mergedContextConfiguration)_		.toString()__	};provide,a,string,representation,of,this,test,context,s,state;override,public,string,to,string,return,new,to,string,creator,this,append,test,class,test,class,append,test,instance,test,instance,append,test,method,test,method,append,test,exception,test,exception,append,merged,context,configuration,merged,context,configuration,to,string
TestContext -> @Override 	public String toString();1363208506;Provide a String representation of this test context's state.;@Override_	public String toString() {_		return new ToStringCreator(this)_		.append("testClass", testClass)_		.append("testInstance", testInstance)_		.append("testMethod", testMethod)_		.append("testException", testException)_		.append("mergedContextConfiguration", mergedContextConfiguration)_		.toString()__	};provide,a,string,representation,of,this,test,context,s,state;override,public,string,to,string,return,new,to,string,creator,this,append,test,class,test,class,append,test,instance,test,instance,append,test,method,test,method,append,test,exception,test,exception,append,merged,context,configuration,merged,context,configuration,to,string
TestContext -> @Override 	public String toString();1367954761;Provide a String representation of this test context's state.;@Override_	public String toString() {_		return new ToStringCreator(this)_		.append("testClass", testClass)_		.append("testInstance", testInstance)_		.append("testMethod", testMethod)_		.append("testException", testException)_		.append("mergedContextConfiguration", mergedContextConfiguration)_		.toString()__	};provide,a,string,representation,of,this,test,context,s,state;override,public,string,to,string,return,new,to,string,creator,this,append,test,class,test,class,append,test,instance,test,instance,append,test,method,test,method,append,test,exception,test,exception,append,merged,context,configuration,merged,context,configuration,to,string
TestContext -> @Override 	public String toString();1367955086;Provide a String representation of this test context's state.;@Override_	public String toString() {_		return new ToStringCreator(this)_		.append("testClass", testClass)_		.append("testInstance", testInstance)_		.append("testMethod", testMethod)_		.append("testException", testException)_		.append("mergedContextConfiguration", mergedContextConfiguration)_		.toString()__	};provide,a,string,representation,of,this,test,context,s,state;override,public,string,to,string,return,new,to,string,creator,this,append,test,class,test,class,append,test,instance,test,instance,append,test,method,test,method,append,test,exception,test,exception,append,merged,context,configuration,merged,context,configuration,to,string
TestContext -> @Override 	public String toString();1368216803;Provide a String representation of this test context's state.;@Override_	public String toString() {_		return new ToStringCreator(this)_		.append("testClass", testClass)_		.append("testInstance", testInstance)_		.append("testMethod", testMethod)_		.append("testException", testException)_		.append("mergedContextConfiguration", mergedContextConfiguration)_		.toString()__	};provide,a,string,representation,of,this,test,context,s,state;override,public,string,to,string,return,new,to,string,creator,this,append,test,class,test,class,append,test,instance,test,instance,append,test,method,test,method,append,test,exception,test,exception,append,merged,context,configuration,merged,context,configuration,to,string
TestContext -> ApplicationContext getApplicationContext()_;1382815212;Get the {@link ApplicationContext application context} for this test_context, possibly cached.__<p>Implementations of this method are responsible for loading the_application context if the corresponding context has not already been_loaded, potentially caching the context as well._@return the application context_@throws IllegalStateException if an error occurs while retrieving the_application context;ApplicationContext getApplicationContext()_;get,the,link,application,context,application,context,for,this,test,context,possibly,cached,p,implementations,of,this,method,are,responsible,for,loading,the,application,context,if,the,corresponding,context,has,not,already,been,loaded,potentially,caching,the,context,as,well,return,the,application,context,throws,illegal,state,exception,if,an,error,occurs,while,retrieving,the,application,context;application,context,get,application,context
TestContext -> ApplicationContext getApplicationContext()_;1427056386;Get the {@linkplain ApplicationContext application context} for this_test context, possibly cached._<p>Implementations of this method are responsible for loading the_application context if the corresponding context has not already been_loaded, potentially caching the context as well._@return the application context_@throws IllegalStateException if an error occurs while retrieving the_application context;ApplicationContext getApplicationContext()_;get,the,linkplain,application,context,application,context,for,this,test,context,possibly,cached,p,implementations,of,this,method,are,responsible,for,loading,the,application,context,if,the,corresponding,context,has,not,already,been,loaded,potentially,caching,the,context,as,well,return,the,application,context,throws,illegal,state,exception,if,an,error,occurs,while,retrieving,the,application,context;application,context,get,application,context
TestContext -> ApplicationContext getApplicationContext()_;1472840882;Get the {@linkplain ApplicationContext application context} for this_test context, possibly cached._<p>Implementations of this method are responsible for loading the_application context if the corresponding context has not already been_loaded, potentially caching the context as well._@return the application context_@throws IllegalStateException if an error occurs while retrieving the_application context;ApplicationContext getApplicationContext()_;get,the,linkplain,application,context,application,context,for,this,test,context,possibly,cached,p,implementations,of,this,method,are,responsible,for,loading,the,application,context,if,the,corresponding,context,has,not,already,been,loaded,potentially,caching,the,context,as,well,return,the,application,context,throws,illegal,state,exception,if,an,error,occurs,while,retrieving,the,application,context;application,context,get,application,context
TestContext -> ApplicationContext getApplicationContext()_;1495868221;Get the {@linkplain ApplicationContext application context} for this_test context, possibly cached._<p>Implementations of this method are responsible for loading the_application context if the corresponding context has not already been_loaded, potentially caching the context as well._@return the application context_@throws IllegalStateException if an error occurs while retrieving the_application context;ApplicationContext getApplicationContext()_;get,the,linkplain,application,context,application,context,for,this,test,context,possibly,cached,p,implementations,of,this,method,are,responsible,for,loading,the,application,context,if,the,corresponding,context,has,not,already,been,loaded,potentially,caching,the,context,as,well,return,the,application,context,throws,illegal,state,exception,if,an,error,occurs,while,retrieving,the,application,context;application,context,get,application,context
TestContext -> ApplicationContext getApplicationContext()_;1496955179;Get the {@linkplain ApplicationContext application context} for this_test context, possibly cached._<p>Implementations of this method are responsible for loading the_application context if the corresponding context has not already been_loaded, potentially caching the context as well._@return the application context_@throws IllegalStateException if an error occurs while retrieving the_application context;ApplicationContext getApplicationContext()_;get,the,linkplain,application,context,application,context,for,this,test,context,possibly,cached,p,implementations,of,this,method,are,responsible,for,loading,the,application,context,if,the,corresponding,context,has,not,already,been,loaded,potentially,caching,the,context,as,well,return,the,application,context,throws,illegal,state,exception,if,an,error,occurs,while,retrieving,the,application,context;application,context,get,application,context
TestContext -> void updateState(Object testInstance, Method testMethod, Throwable testException);1328020251;Update this test context to reflect the state of the currently executing_test._@param testInstance the current test instance (may be <code>null</code>)_@param testMethod the current test method (may be <code>null</code>)_@param testException the exception that was thrown in the test method, or_<code>null</code> if no exception was thrown;void updateState(Object testInstance, Method testMethod, Throwable testException) {_		this.testInstance = testInstance__		this.testMethod = testMethod__		this.testException = testException__	};update,this,test,context,to,reflect,the,state,of,the,currently,executing,test,param,test,instance,the,current,test,instance,may,be,code,null,code,param,test,method,the,current,test,method,may,be,code,null,code,param,test,exception,the,exception,that,was,thrown,in,the,test,method,or,code,null,code,if,no,exception,was,thrown;void,update,state,object,test,instance,method,test,method,throwable,test,exception,this,test,instance,test,instance,this,test,method,test,method,this,test,exception,test,exception
TestContext -> void updateState(Object testInstance, Method testMethod, Throwable testException);1349648958;Update this test context to reflect the state of the currently executing_test._@param testInstance the current test instance (may be <code>null</code>)_@param testMethod the current test method (may be <code>null</code>)_@param testException the exception that was thrown in the test method, or_<code>null</code> if no exception was thrown;void updateState(Object testInstance, Method testMethod, Throwable testException) {_		this.testInstance = testInstance__		this.testMethod = testMethod__		this.testException = testException__	};update,this,test,context,to,reflect,the,state,of,the,currently,executing,test,param,test,instance,the,current,test,instance,may,be,code,null,code,param,test,method,the,current,test,method,may,be,code,null,code,param,test,exception,the,exception,that,was,thrown,in,the,test,method,or,code,null,code,if,no,exception,was,thrown;void,update,state,object,test,instance,method,test,method,throwable,test,exception,this,test,instance,test,instance,this,test,method,test,method,this,test,exception,test,exception
TestContext -> void updateState(Object testInstance, Method testMethod, Throwable testException);1356735495;Update this test context to reflect the state of the currently executing_test._@param testInstance the current test instance (may be {@code null})_@param testMethod the current test method (may be {@code null})_@param testException the exception that was thrown in the test method, or_{@code null} if no exception was thrown;void updateState(Object testInstance, Method testMethod, Throwable testException) {_		this.testInstance = testInstance__		this.testMethod = testMethod__		this.testException = testException__	};update,this,test,context,to,reflect,the,state,of,the,currently,executing,test,param,test,instance,the,current,test,instance,may,be,code,null,param,test,method,the,current,test,method,may,be,code,null,param,test,exception,the,exception,that,was,thrown,in,the,test,method,or,code,null,if,no,exception,was,thrown;void,update,state,object,test,instance,method,test,method,throwable,test,exception,this,test,instance,test,instance,this,test,method,test,method,this,test,exception,test,exception
TestContext -> void updateState(Object testInstance, Method testMethod, Throwable testException);1363208506;Update this test context to reflect the state of the currently executing_test._@param testInstance the current test instance (may be {@code null})_@param testMethod the current test method (may be {@code null})_@param testException the exception that was thrown in the test method, or_{@code null} if no exception was thrown;void updateState(Object testInstance, Method testMethod, Throwable testException) {_		this.testInstance = testInstance__		this.testMethod = testMethod__		this.testException = testException__	};update,this,test,context,to,reflect,the,state,of,the,currently,executing,test,param,test,instance,the,current,test,instance,may,be,code,null,param,test,method,the,current,test,method,may,be,code,null,param,test,exception,the,exception,that,was,thrown,in,the,test,method,or,code,null,if,no,exception,was,thrown;void,update,state,object,test,instance,method,test,method,throwable,test,exception,this,test,instance,test,instance,this,test,method,test,method,this,test,exception,test,exception
TestContext -> void updateState(Object testInstance, Method testMethod, Throwable testException);1367954761;Update this test context to reflect the state of the currently executing_test._@param testInstance the current test instance (may be {@code null})_@param testMethod the current test method (may be {@code null})_@param testException the exception that was thrown in the test method, or_{@code null} if no exception was thrown;void updateState(Object testInstance, Method testMethod, Throwable testException) {_		this.testInstance = testInstance__		this.testMethod = testMethod__		this.testException = testException__	};update,this,test,context,to,reflect,the,state,of,the,currently,executing,test,param,test,instance,the,current,test,instance,may,be,code,null,param,test,method,the,current,test,method,may,be,code,null,param,test,exception,the,exception,that,was,thrown,in,the,test,method,or,code,null,if,no,exception,was,thrown;void,update,state,object,test,instance,method,test,method,throwable,test,exception,this,test,instance,test,instance,this,test,method,test,method,this,test,exception,test,exception
TestContext -> void updateState(Object testInstance, Method testMethod, Throwable testException);1367955086;Update this test context to reflect the state of the currently executing_test._@param testInstance the current test instance (may be {@code null})_@param testMethod the current test method (may be {@code null})_@param testException the exception that was thrown in the test method, or_{@code null} if no exception was thrown;void updateState(Object testInstance, Method testMethod, Throwable testException) {_		this.testInstance = testInstance__		this.testMethod = testMethod__		this.testException = testException__	};update,this,test,context,to,reflect,the,state,of,the,currently,executing,test,param,test,instance,the,current,test,instance,may,be,code,null,param,test,method,the,current,test,method,may,be,code,null,param,test,exception,the,exception,that,was,thrown,in,the,test,method,or,code,null,if,no,exception,was,thrown;void,update,state,object,test,instance,method,test,method,throwable,test,exception,this,test,instance,test,instance,this,test,method,test,method,this,test,exception,test,exception
TestContext -> void updateState(Object testInstance, Method testMethod, Throwable testException);1368216803;Update this test context to reflect the state of the currently executing_test._@param testInstance the current test instance (may be {@code null})_@param testMethod the current test method (may be {@code null})_@param testException the exception that was thrown in the test method, or_{@code null} if no exception was thrown;void updateState(Object testInstance, Method testMethod, Throwable testException) {_		this.testInstance = testInstance__		this.testMethod = testMethod__		this.testException = testException__	};update,this,test,context,to,reflect,the,state,of,the,currently,executing,test,param,test,instance,the,current,test,instance,may,be,code,null,param,test,method,the,current,test,method,may,be,code,null,param,test,exception,the,exception,that,was,thrown,in,the,test,method,or,code,null,if,no,exception,was,thrown;void,update,state,object,test,instance,method,test,method,throwable,test,exception,this,test,instance,test,instance,this,test,method,test,method,this,test,exception,test,exception
TestContext -> public ApplicationContext getApplicationContext();1328020251;Get the {@link ApplicationContext application context} for this test_context, possibly cached._@return the application context_@throws IllegalStateException if an error occurs while retrieving the_application context;public ApplicationContext getApplicationContext() {_		synchronized (contextCache) {_			ApplicationContext context = contextCache.get(mergedContextConfiguration)__			if (context == null) {_				try {_					context = loadApplicationContext()__					if (logger.isDebugEnabled()) {_						logger.debug(String.format(_							"Storing ApplicationContext for test class [%s] in cache under key [%s].", testClass,_							mergedContextConfiguration))__					}_					contextCache.put(mergedContextConfiguration, context)__				}_				catch (Exception ex) {_					throw new IllegalStateException("Failed to load ApplicationContext", ex)__				}_			}_			else {_				if (logger.isDebugEnabled()) {_					logger.debug(String.format(_						"Retrieved ApplicationContext for test class [%s] from cache with key [%s].", testClass,_						mergedContextConfiguration))__				}_			}_			return context__		}_	};get,the,link,application,context,application,context,for,this,test,context,possibly,cached,return,the,application,context,throws,illegal,state,exception,if,an,error,occurs,while,retrieving,the,application,context;public,application,context,get,application,context,synchronized,context,cache,application,context,context,context,cache,get,merged,context,configuration,if,context,null,try,context,load,application,context,if,logger,is,debug,enabled,logger,debug,string,format,storing,application,context,for,test,class,s,in,cache,under,key,s,test,class,merged,context,configuration,context,cache,put,merged,context,configuration,context,catch,exception,ex,throw,new,illegal,state,exception,failed,to,load,application,context,ex,else,if,logger,is,debug,enabled,logger,debug,string,format,retrieved,application,context,for,test,class,s,from,cache,with,key,s,test,class,merged,context,configuration,return,context
TestContext -> public ApplicationContext getApplicationContext();1349648958;Get the {@link ApplicationContext application context} for this test_context, possibly cached._@return the application context_@throws IllegalStateException if an error occurs while retrieving the_application context;public ApplicationContext getApplicationContext() {_		synchronized (contextCache) {_			ApplicationContext context = contextCache.get(mergedContextConfiguration)__			if (context == null) {_				try {_					context = loadApplicationContext()__					if (logger.isDebugEnabled()) {_						logger.debug(String.format(_							"Storing ApplicationContext for test class [%s] in cache under key [%s].", testClass,_							mergedContextConfiguration))__					}_					contextCache.put(mergedContextConfiguration, context)__				}_				catch (Exception ex) {_					throw new IllegalStateException("Failed to load ApplicationContext", ex)__				}_			}_			else {_				if (logger.isDebugEnabled()) {_					logger.debug(String.format(_						"Retrieved ApplicationContext for test class [%s] from cache with key [%s].", testClass,_						mergedContextConfiguration))__				}_			}_			return context__		}_	};get,the,link,application,context,application,context,for,this,test,context,possibly,cached,return,the,application,context,throws,illegal,state,exception,if,an,error,occurs,while,retrieving,the,application,context;public,application,context,get,application,context,synchronized,context,cache,application,context,context,context,cache,get,merged,context,configuration,if,context,null,try,context,load,application,context,if,logger,is,debug,enabled,logger,debug,string,format,storing,application,context,for,test,class,s,in,cache,under,key,s,test,class,merged,context,configuration,context,cache,put,merged,context,configuration,context,catch,exception,ex,throw,new,illegal,state,exception,failed,to,load,application,context,ex,else,if,logger,is,debug,enabled,logger,debug,string,format,retrieved,application,context,for,test,class,s,from,cache,with,key,s,test,class,merged,context,configuration,return,context
TestContext -> public ApplicationContext getApplicationContext();1356735495;Get the {@link ApplicationContext application context} for this test_context, possibly cached._@return the application context_@throws IllegalStateException if an error occurs while retrieving the_application context;public ApplicationContext getApplicationContext() {_		synchronized (contextCache) {_			ApplicationContext context = contextCache.get(mergedContextConfiguration)__			if (context == null) {_				try {_					context = loadApplicationContext()__					if (logger.isDebugEnabled()) {_						logger.debug(String.format(_							"Storing ApplicationContext for test class [%s] in cache under key [%s].", testClass,_							mergedContextConfiguration))__					}_					contextCache.put(mergedContextConfiguration, context)__				}_				catch (Exception ex) {_					throw new IllegalStateException("Failed to load ApplicationContext", ex)__				}_			}_			else {_				if (logger.isDebugEnabled()) {_					logger.debug(String.format(_						"Retrieved ApplicationContext for test class [%s] from cache with key [%s].", testClass,_						mergedContextConfiguration))__				}_			}_			return context__		}_	};get,the,link,application,context,application,context,for,this,test,context,possibly,cached,return,the,application,context,throws,illegal,state,exception,if,an,error,occurs,while,retrieving,the,application,context;public,application,context,get,application,context,synchronized,context,cache,application,context,context,context,cache,get,merged,context,configuration,if,context,null,try,context,load,application,context,if,logger,is,debug,enabled,logger,debug,string,format,storing,application,context,for,test,class,s,in,cache,under,key,s,test,class,merged,context,configuration,context,cache,put,merged,context,configuration,context,catch,exception,ex,throw,new,illegal,state,exception,failed,to,load,application,context,ex,else,if,logger,is,debug,enabled,logger,debug,string,format,retrieved,application,context,for,test,class,s,from,cache,with,key,s,test,class,merged,context,configuration,return,context
TestContext -> public ApplicationContext getApplicationContext();1363208506;Get the {@link ApplicationContext application context} for this test_context, possibly cached._@return the application context_@throws IllegalStateException if an error occurs while retrieving the_application context;public ApplicationContext getApplicationContext() {_		return cacheAwareContextLoaderDelegate.loadContext(mergedContextConfiguration)__	};get,the,link,application,context,application,context,for,this,test,context,possibly,cached,return,the,application,context,throws,illegal,state,exception,if,an,error,occurs,while,retrieving,the,application,context;public,application,context,get,application,context,return,cache,aware,context,loader,delegate,load,context,merged,context,configuration
TestContext -> public ApplicationContext getApplicationContext();1367954761;Get the {@link ApplicationContext application context} for this test_context, possibly cached._@return the application context_@throws IllegalStateException if an error occurs while retrieving the_application context;public ApplicationContext getApplicationContext() {_		return cacheAwareContextLoaderDelegate.loadContext(mergedContextConfiguration)__	};get,the,link,application,context,application,context,for,this,test,context,possibly,cached,return,the,application,context,throws,illegal,state,exception,if,an,error,occurs,while,retrieving,the,application,context;public,application,context,get,application,context,return,cache,aware,context,loader,delegate,load,context,merged,context,configuration
TestContext -> public ApplicationContext getApplicationContext();1367955086;Get the {@link ApplicationContext application context} for this test_context, possibly cached._@return the application context_@throws IllegalStateException if an error occurs while retrieving the_application context;public ApplicationContext getApplicationContext() {_		return cacheAwareContextLoaderDelegate.loadContext(mergedContextConfiguration)__	};get,the,link,application,context,application,context,for,this,test,context,possibly,cached,return,the,application,context,throws,illegal,state,exception,if,an,error,occurs,while,retrieving,the,application,context;public,application,context,get,application,context,return,cache,aware,context,loader,delegate,load,context,merged,context,configuration
TestContext -> public ApplicationContext getApplicationContext();1368216803;Get the {@link ApplicationContext application context} for this test_context, possibly cached._@return the application context_@throws IllegalStateException if an error occurs while retrieving the_application context;public ApplicationContext getApplicationContext() {_		return cacheAwareContextLoaderDelegate.loadContext(mergedContextConfiguration)__	};get,the,link,application,context,application,context,for,this,test,context,possibly,cached,return,the,application,context,throws,illegal,state,exception,if,an,error,occurs,while,retrieving,the,application,context;public,application,context,get,application,context,return,cache,aware,context,loader,delegate,load,context,merged,context,configuration
TestContext -> public void markApplicationContextDirty(HierarchyMode hierarchyMode);1363208506;Call this method to signal that the {@linkplain ApplicationContext application_context} associated with this test context is <em>dirty</em> and should be_discarded. Do this if a test has modified the context &mdash_ for example,_by replacing a bean definition or modifying the state of a singleton bean._@param hierarchyMode the context cache clearing mode to be applied if the_context is part of a hierarchy (may be {@code null});public void markApplicationContextDirty(HierarchyMode hierarchyMode) {_		contextCache.remove(mergedContextConfiguration, hierarchyMode)__	};call,this,method,to,signal,that,the,linkplain,application,context,application,context,associated,with,this,test,context,is,em,dirty,em,and,should,be,discarded,do,this,if,a,test,has,modified,the,context,mdash,for,example,by,replacing,a,bean,definition,or,modifying,the,state,of,a,singleton,bean,param,hierarchy,mode,the,context,cache,clearing,mode,to,be,applied,if,the,context,is,part,of,a,hierarchy,may,be,code,null;public,void,mark,application,context,dirty,hierarchy,mode,hierarchy,mode,context,cache,remove,merged,context,configuration,hierarchy,mode
TestContext -> public void markApplicationContextDirty(HierarchyMode hierarchyMode);1367954761;Call this method to signal that the {@linkplain ApplicationContext application_context} associated with this test context is <em>dirty</em> and should be_discarded. Do this if a test has modified the context &mdash_ for example,_by replacing a bean definition or modifying the state of a singleton bean._@param hierarchyMode the context cache clearing mode to be applied if the_context is part of a hierarchy (may be {@code null});public void markApplicationContextDirty(HierarchyMode hierarchyMode) {_		contextCache.remove(mergedContextConfiguration, hierarchyMode)__	};call,this,method,to,signal,that,the,linkplain,application,context,application,context,associated,with,this,test,context,is,em,dirty,em,and,should,be,discarded,do,this,if,a,test,has,modified,the,context,mdash,for,example,by,replacing,a,bean,definition,or,modifying,the,state,of,a,singleton,bean,param,hierarchy,mode,the,context,cache,clearing,mode,to,be,applied,if,the,context,is,part,of,a,hierarchy,may,be,code,null;public,void,mark,application,context,dirty,hierarchy,mode,hierarchy,mode,context,cache,remove,merged,context,configuration,hierarchy,mode
TestContext -> public void markApplicationContextDirty(HierarchyMode hierarchyMode);1367955086;Call this method to signal that the {@linkplain ApplicationContext application_context} associated with this test context is <em>dirty</em> and should be_discarded. Do this if a test has modified the context &mdash_ for example,_by replacing a bean definition or modifying the state of a singleton bean._@param hierarchyMode the context cache clearing mode to be applied if the_context is part of a hierarchy (may be {@code null});public void markApplicationContextDirty(HierarchyMode hierarchyMode) {_		contextCache.remove(mergedContextConfiguration, hierarchyMode)__	};call,this,method,to,signal,that,the,linkplain,application,context,application,context,associated,with,this,test,context,is,em,dirty,em,and,should,be,discarded,do,this,if,a,test,has,modified,the,context,mdash,for,example,by,replacing,a,bean,definition,or,modifying,the,state,of,a,singleton,bean,param,hierarchy,mode,the,context,cache,clearing,mode,to,be,applied,if,the,context,is,part,of,a,hierarchy,may,be,code,null;public,void,mark,application,context,dirty,hierarchy,mode,hierarchy,mode,context,cache,remove,merged,context,configuration,hierarchy,mode
TestContext -> public void markApplicationContextDirty(HierarchyMode hierarchyMode);1368216803;Call this method to signal that the {@linkplain ApplicationContext application_context} associated with this test context is <em>dirty</em> and should be_discarded. Do this if a test has modified the context &mdash_ for example,_by replacing a bean definition or modifying the state of a singleton bean._@param hierarchyMode the context cache clearing mode to be applied if the_context is part of a hierarchy (may be {@code null});public void markApplicationContextDirty(HierarchyMode hierarchyMode) {_		contextCache.remove(mergedContextConfiguration, hierarchyMode)__	};call,this,method,to,signal,that,the,linkplain,application,context,application,context,associated,with,this,test,context,is,em,dirty,em,and,should,be,discarded,do,this,if,a,test,has,modified,the,context,mdash,for,example,by,replacing,a,bean,definition,or,modifying,the,state,of,a,singleton,bean,param,hierarchy,mode,the,context,cache,clearing,mode,to,be,applied,if,the,context,is,part,of,a,hierarchy,may,be,code,null;public,void,mark,application,context,dirty,hierarchy,mode,hierarchy,mode,context,cache,remove,merged,context,configuration,hierarchy,mode
TestContext -> @Deprecated 	public void markApplicationContextDirty();1363208506;Call this method to signal that the {@linkplain ApplicationContext application_context} associated with this test context is <em>dirty</em> and should be_discarded. Do this if a test has modified the context &mdash_ for example,_by replacing a bean definition or modifying the state of a singleton bean._@deprecated As of Spring 3.2.2, use {@link #markApplicationContextDirty(HierarchyMode)} instead.;@Deprecated_	public void markApplicationContextDirty() {_		markApplicationContextDirty((HierarchyMode) null)__	};call,this,method,to,signal,that,the,linkplain,application,context,application,context,associated,with,this,test,context,is,em,dirty,em,and,should,be,discarded,do,this,if,a,test,has,modified,the,context,mdash,for,example,by,replacing,a,bean,definition,or,modifying,the,state,of,a,singleton,bean,deprecated,as,of,spring,3,2,2,use,link,mark,application,context,dirty,hierarchy,mode,instead;deprecated,public,void,mark,application,context,dirty,mark,application,context,dirty,hierarchy,mode,null
TestContext -> @Deprecated 	public void markApplicationContextDirty();1367954761;Call this method to signal that the {@linkplain ApplicationContext application_context} associated with this test context is <em>dirty</em> and should be_discarded. Do this if a test has modified the context &mdash_ for example,_by replacing a bean definition or modifying the state of a singleton bean._@deprecated as of Spring 3.2.2_ use_{@link #markApplicationContextDirty(DirtiesContext.HierarchyMode)} instead.;@Deprecated_	public void markApplicationContextDirty() {_		markApplicationContextDirty((HierarchyMode) null)__	};call,this,method,to,signal,that,the,linkplain,application,context,application,context,associated,with,this,test,context,is,em,dirty,em,and,should,be,discarded,do,this,if,a,test,has,modified,the,context,mdash,for,example,by,replacing,a,bean,definition,or,modifying,the,state,of,a,singleton,bean,deprecated,as,of,spring,3,2,2,use,link,mark,application,context,dirty,dirties,context,hierarchy,mode,instead;deprecated,public,void,mark,application,context,dirty,mark,application,context,dirty,hierarchy,mode,null
TestContext -> @Deprecated 	public void markApplicationContextDirty();1367955086;Call this method to signal that the {@linkplain ApplicationContext application_context} associated with this test context is <em>dirty</em> and should be_discarded. Do this if a test has modified the context &mdash_ for example,_by replacing a bean definition or modifying the state of a singleton bean._@deprecated as of Spring 3.2.2_ use_{@link #markApplicationContextDirty(DirtiesContext.HierarchyMode)} instead.;@Deprecated_	public void markApplicationContextDirty() {_		markApplicationContextDirty((HierarchyMode) null)__	};call,this,method,to,signal,that,the,linkplain,application,context,application,context,associated,with,this,test,context,is,em,dirty,em,and,should,be,discarded,do,this,if,a,test,has,modified,the,context,mdash,for,example,by,replacing,a,bean,definition,or,modifying,the,state,of,a,singleton,bean,deprecated,as,of,spring,3,2,2,use,link,mark,application,context,dirty,dirties,context,hierarchy,mode,instead;deprecated,public,void,mark,application,context,dirty,mark,application,context,dirty,hierarchy,mode,null
TestContext -> @Deprecated 	public void markApplicationContextDirty();1368216803;Call this method to signal that the {@linkplain ApplicationContext application_context} associated with this test context is <em>dirty</em> and should be_discarded. Do this if a test has modified the context &mdash_ for example,_by replacing a bean definition or modifying the state of a singleton bean._@deprecated as of Spring 3.2.2_ use_{@link #markApplicationContextDirty(DirtiesContext.HierarchyMode)} instead.;@Deprecated_	public void markApplicationContextDirty() {_		markApplicationContextDirty((HierarchyMode) null)__	};call,this,method,to,signal,that,the,linkplain,application,context,application,context,associated,with,this,test,context,is,em,dirty,em,and,should,be,discarded,do,this,if,a,test,has,modified,the,context,mdash,for,example,by,replacing,a,bean,definition,or,modifying,the,state,of,a,singleton,bean,deprecated,as,of,spring,3,2,2,use,link,mark,application,context,dirty,dirties,context,hierarchy,mode,instead;deprecated,public,void,mark,application,context,dirty,mark,application,context,dirty,hierarchy,mode,null
TestContext -> void updateState(@Nullable Object testInstance, @Nullable Method testMethod, @Nullable Throwable testException)_;1495868221;Update this test context to reflect the state of the currently executing_test._<p>Caution: concurrent invocations of this method might not be thread-safe,_depending on the underlying implementation._@param testInstance the current test instance (may be {@code null})_@param testMethod the current test method (may be {@code null})_@param testException the exception that was thrown in the test method, or_{@code null} if no exception was thrown;void updateState(@Nullable Object testInstance, @Nullable Method testMethod, @Nullable Throwable testException)_;update,this,test,context,to,reflect,the,state,of,the,currently,executing,test,p,caution,concurrent,invocations,of,this,method,might,not,be,thread,safe,depending,on,the,underlying,implementation,param,test,instance,the,current,test,instance,may,be,code,null,param,test,method,the,current,test,method,may,be,code,null,param,test,exception,the,exception,that,was,thrown,in,the,test,method,or,code,null,if,no,exception,was,thrown;void,update,state,nullable,object,test,instance,nullable,method,test,method,nullable,throwable,test,exception
TestContext -> void updateState(@Nullable Object testInstance, @Nullable Method testMethod, @Nullable Throwable testException)_;1496955179;Update this test context to reflect the state of the currently executing test._<p>Caution: concurrent invocations of this method might not be thread-safe,_depending on the underlying implementation._@param testInstance the current test instance (may be {@code null})_@param testMethod the current test method (may be {@code null})_@param testException the exception that was thrown in the test method,_or {@code null} if no exception was thrown;void updateState(@Nullable Object testInstance, @Nullable Method testMethod, @Nullable Throwable testException)_;update,this,test,context,to,reflect,the,state,of,the,currently,executing,test,p,caution,concurrent,invocations,of,this,method,might,not,be,thread,safe,depending,on,the,underlying,implementation,param,test,instance,the,current,test,instance,may,be,code,null,param,test,method,the,current,test,method,may,be,code,null,param,test,exception,the,exception,that,was,thrown,in,the,test,method,or,code,null,if,no,exception,was,thrown;void,update,state,nullable,object,test,instance,nullable,method,test,method,nullable,throwable,test,exception
TestContext -> public final Throwable getTestException();1328020251;Get the {@link Throwable exception} that was thrown during execution of_the {@link #getTestMethod() test method}._<p>Note: this is a mutable property._@return the exception that was thrown, or <code>null</code> if no_exception was thrown_@see #updateState(Object, Method, Throwable);public final Throwable getTestException() {_		return testException__	};get,the,link,throwable,exception,that,was,thrown,during,execution,of,the,link,get,test,method,test,method,p,note,this,is,a,mutable,property,return,the,exception,that,was,thrown,or,code,null,code,if,no,exception,was,thrown,see,update,state,object,method,throwable;public,final,throwable,get,test,exception,return,test,exception
TestContext -> public final Throwable getTestException();1349648958;Get the {@link Throwable exception} that was thrown during execution of_the {@link #getTestMethod() test method}._<p>Note: this is a mutable property._@return the exception that was thrown, or <code>null</code> if no_exception was thrown_@see #updateState(Object, Method, Throwable);public final Throwable getTestException() {_		return testException__	};get,the,link,throwable,exception,that,was,thrown,during,execution,of,the,link,get,test,method,test,method,p,note,this,is,a,mutable,property,return,the,exception,that,was,thrown,or,code,null,code,if,no,exception,was,thrown,see,update,state,object,method,throwable;public,final,throwable,get,test,exception,return,test,exception
TestContext -> public final Throwable getTestException();1356735495;Get the {@link Throwable exception} that was thrown during execution of_the {@link #getTestMethod() test method}._<p>Note: this is a mutable property._@return the exception that was thrown, or {@code null} if no_exception was thrown_@see #updateState(Object, Method, Throwable);public final Throwable getTestException() {_		return testException__	};get,the,link,throwable,exception,that,was,thrown,during,execution,of,the,link,get,test,method,test,method,p,note,this,is,a,mutable,property,return,the,exception,that,was,thrown,or,code,null,if,no,exception,was,thrown,see,update,state,object,method,throwable;public,final,throwable,get,test,exception,return,test,exception
TestContext -> public final Throwable getTestException();1363208506;Get the {@link Throwable exception} that was thrown during execution of_the {@link #getTestMethod() test method}._<p>Note: this is a mutable property._@return the exception that was thrown, or {@code null} if no_exception was thrown_@see #updateState(Object, Method, Throwable);public final Throwable getTestException() {_		return testException__	};get,the,link,throwable,exception,that,was,thrown,during,execution,of,the,link,get,test,method,test,method,p,note,this,is,a,mutable,property,return,the,exception,that,was,thrown,or,code,null,if,no,exception,was,thrown,see,update,state,object,method,throwable;public,final,throwable,get,test,exception,return,test,exception
TestContext -> public final Throwable getTestException();1367954761;Get the {@link Throwable exception} that was thrown during execution of_the {@link #getTestMethod() test method}._<p>Note: this is a mutable property._@return the exception that was thrown, or {@code null} if no_exception was thrown_@see #updateState(Object, Method, Throwable);public final Throwable getTestException() {_		return testException__	};get,the,link,throwable,exception,that,was,thrown,during,execution,of,the,link,get,test,method,test,method,p,note,this,is,a,mutable,property,return,the,exception,that,was,thrown,or,code,null,if,no,exception,was,thrown,see,update,state,object,method,throwable;public,final,throwable,get,test,exception,return,test,exception
TestContext -> public final Throwable getTestException();1367955086;Get the {@link Throwable exception} that was thrown during execution of_the {@link #getTestMethod() test method}._<p>Note: this is a mutable property._@return the exception that was thrown, or {@code null} if no_exception was thrown_@see #updateState(Object, Method, Throwable);public final Throwable getTestException() {_		return testException__	};get,the,link,throwable,exception,that,was,thrown,during,execution,of,the,link,get,test,method,test,method,p,note,this,is,a,mutable,property,return,the,exception,that,was,thrown,or,code,null,if,no,exception,was,thrown,see,update,state,object,method,throwable;public,final,throwable,get,test,exception,return,test,exception
TestContext -> public final Throwable getTestException();1368216803;Get the {@link Throwable exception} that was thrown during execution of_the {@link #getTestMethod() test method}._<p>Note: this is a mutable property._@return the exception that was thrown, or {@code null} if no_exception was thrown_@see #updateState(Object, Method, Throwable);public final Throwable getTestException() {_		return testException__	};get,the,link,throwable,exception,that,was,thrown,during,execution,of,the,link,get,test,method,test,method,p,note,this,is,a,mutable,property,return,the,exception,that,was,thrown,or,code,null,if,no,exception,was,thrown,see,update,state,object,method,throwable;public,final,throwable,get,test,exception,return,test,exception
TestContext -> void markApplicationContextDirty(@Nullable HierarchyMode hierarchyMode)_;1495868221;Call this method to signal that the {@linkplain ApplicationContext application_context} associated with this test context is <em>dirty</em> and should be_removed from the context cache._<p>Do this if a test has modified the context &mdash_ for example, by_modifying the state of a singleton bean, modifying the state of an embedded_database, etc._@param hierarchyMode the context cache clearing mode to be applied if the_context is part of a hierarchy (may be {@code null});void markApplicationContextDirty(@Nullable HierarchyMode hierarchyMode)_;call,this,method,to,signal,that,the,linkplain,application,context,application,context,associated,with,this,test,context,is,em,dirty,em,and,should,be,removed,from,the,context,cache,p,do,this,if,a,test,has,modified,the,context,mdash,for,example,by,modifying,the,state,of,a,singleton,bean,modifying,the,state,of,an,embedded,database,etc,param,hierarchy,mode,the,context,cache,clearing,mode,to,be,applied,if,the,context,is,part,of,a,hierarchy,may,be,code,null;void,mark,application,context,dirty,nullable,hierarchy,mode,hierarchy,mode
TestContext -> void markApplicationContextDirty(@Nullable HierarchyMode hierarchyMode)_;1496955179;Call this method to signal that the {@linkplain ApplicationContext application_context} associated with this test context is <em>dirty</em> and should be_removed from the context cache._<p>Do this if a test has modified the context &mdash_ for example, by_modifying the state of a singleton bean, modifying the state of an embedded_database, etc._@param hierarchyMode the context cache clearing mode to be applied if the_context is part of a hierarchy (may be {@code null});void markApplicationContextDirty(@Nullable HierarchyMode hierarchyMode)_;call,this,method,to,signal,that,the,linkplain,application,context,application,context,associated,with,this,test,context,is,em,dirty,em,and,should,be,removed,from,the,context,cache,p,do,this,if,a,test,has,modified,the,context,mdash,for,example,by,modifying,the,state,of,a,singleton,bean,modifying,the,state,of,an,embedded,database,etc,param,hierarchy,mode,the,context,cache,clearing,mode,to,be,applied,if,the,context,is,part,of,a,hierarchy,may,be,code,null;void,mark,application,context,dirty,nullable,hierarchy,mode,hierarchy,mode
