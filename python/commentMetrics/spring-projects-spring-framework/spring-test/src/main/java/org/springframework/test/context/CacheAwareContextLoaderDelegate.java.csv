# id;timestamp;commentText;codeText;commentWords;codeWords
CacheAwareContextLoaderDelegate -> void closeContext(MergedContextConfiguration mergedContextConfiguration, HierarchyMode hierarchyMode)_;1397082962;Remove the {@linkplain ApplicationContext application context} for the_supplied {@link MergedContextConfiguration} from the <em>context cache</em>_and {@linkplain ConfigurableApplicationContext#close() close} it if it is_an instance of {@link ConfigurableApplicationContext}.__<p>The semantics of the supplied {@code HierarchyMode} must be honored when_removing the context from the cache. See the Javadoc for {@link HierarchyMode}_for details.__<p>Generally speaking, this method should only be called if the state of_a singleton bean has been changed (potentially affecting future interaction_with the context) or if the context needs to be prematurely removed from_the cache.__@param mergedContextConfiguration the merged context configuration for the_application context to close_ never {@code null}_@param hierarchyMode the hierarchy mode_ may be {@code null} if the context_is not part of a hierarchy_@since 4.1;void closeContext(MergedContextConfiguration mergedContextConfiguration, HierarchyMode hierarchyMode)_;remove,the,linkplain,application,context,application,context,for,the,supplied,link,merged,context,configuration,from,the,em,context,cache,em,and,linkplain,configurable,application,context,close,close,it,if,it,is,an,instance,of,link,configurable,application,context,p,the,semantics,of,the,supplied,code,hierarchy,mode,must,be,honored,when,removing,the,context,from,the,cache,see,the,javadoc,for,link,hierarchy,mode,for,details,p,generally,speaking,this,method,should,only,be,called,if,the,state,of,a,singleton,bean,has,been,changed,potentially,affecting,future,interaction,with,the,context,or,if,the,context,needs,to,be,prematurely,removed,from,the,cache,param,merged,context,configuration,the,merged,context,configuration,for,the,application,context,to,close,never,code,null,param,hierarchy,mode,the,hierarchy,mode,may,be,code,null,if,the,context,is,not,part,of,a,hierarchy,since,4,1;void,close,context,merged,context,configuration,merged,context,configuration,hierarchy,mode,hierarchy,mode
CacheAwareContextLoaderDelegate -> void closeContext(MergedContextConfiguration mergedContextConfiguration, HierarchyMode hierarchyMode)_;1415290530;Remove the {@linkplain ApplicationContext application context} for the_supplied {@link MergedContextConfiguration} from the <em>context cache</em>_and {@linkplain ConfigurableApplicationContext#close() close} it if it is_an instance of {@link ConfigurableApplicationContext}._<p>The semantics of the supplied {@code HierarchyMode} must be honored when_removing the context from the cache. See the Javadoc for {@link HierarchyMode}_for details._<p>Generally speaking, this method should only be called if the state of_a singleton bean has been changed (potentially affecting future interaction_with the context) or if the context needs to be prematurely removed from_the cache._@param mergedContextConfiguration the merged context configuration for the_application context to close_ never {@code null}_@param hierarchyMode the hierarchy mode_ may be {@code null} if the context_is not part of a hierarchy_@since 4.1;void closeContext(MergedContextConfiguration mergedContextConfiguration, HierarchyMode hierarchyMode)_;remove,the,linkplain,application,context,application,context,for,the,supplied,link,merged,context,configuration,from,the,em,context,cache,em,and,linkplain,configurable,application,context,close,close,it,if,it,is,an,instance,of,link,configurable,application,context,p,the,semantics,of,the,supplied,code,hierarchy,mode,must,be,honored,when,removing,the,context,from,the,cache,see,the,javadoc,for,link,hierarchy,mode,for,details,p,generally,speaking,this,method,should,only,be,called,if,the,state,of,a,singleton,bean,has,been,changed,potentially,affecting,future,interaction,with,the,context,or,if,the,context,needs,to,be,prematurely,removed,from,the,cache,param,merged,context,configuration,the,merged,context,configuration,for,the,application,context,to,close,never,code,null,param,hierarchy,mode,the,hierarchy,mode,may,be,code,null,if,the,context,is,not,part,of,a,hierarchy,since,4,1;void,close,context,merged,context,configuration,merged,context,configuration,hierarchy,mode,hierarchy,mode
CacheAwareContextLoaderDelegate -> void closeContext(MergedContextConfiguration mergedContextConfiguration, HierarchyMode hierarchyMode)_;1429465455;Remove the {@linkplain ApplicationContext application context} for the_supplied {@link MergedContextConfiguration} from the {@code ContextCache}_and {@linkplain ConfigurableApplicationContext#close() close} it if it is_an instance of {@link ConfigurableApplicationContext}._<p>The semantics of the supplied {@code HierarchyMode} must be honored when_removing the context from the cache. See the Javadoc for {@link HierarchyMode}_for details._<p>Generally speaking, this method should only be called if the state of_a singleton bean has been changed (potentially affecting future interaction_with the context) or if the context needs to be prematurely removed from_the cache._@param mergedContextConfiguration the merged context configuration for the_application context to close_ never {@code null}_@param hierarchyMode the hierarchy mode_ may be {@code null} if the context_is not part of a hierarchy_@since 4.1;void closeContext(MergedContextConfiguration mergedContextConfiguration, HierarchyMode hierarchyMode)_;remove,the,linkplain,application,context,application,context,for,the,supplied,link,merged,context,configuration,from,the,code,context,cache,and,linkplain,configurable,application,context,close,close,it,if,it,is,an,instance,of,link,configurable,application,context,p,the,semantics,of,the,supplied,code,hierarchy,mode,must,be,honored,when,removing,the,context,from,the,cache,see,the,javadoc,for,link,hierarchy,mode,for,details,p,generally,speaking,this,method,should,only,be,called,if,the,state,of,a,singleton,bean,has,been,changed,potentially,affecting,future,interaction,with,the,context,or,if,the,context,needs,to,be,prematurely,removed,from,the,cache,param,merged,context,configuration,the,merged,context,configuration,for,the,application,context,to,close,never,code,null,param,hierarchy,mode,the,hierarchy,mode,may,be,code,null,if,the,context,is,not,part,of,a,hierarchy,since,4,1;void,close,context,merged,context,configuration,merged,context,configuration,hierarchy,mode,hierarchy,mode
CacheAwareContextLoaderDelegate -> void closeContext(MergedContextConfiguration mergedContextConfiguration, HierarchyMode hierarchyMode)_;1429559310;Remove the {@linkplain ApplicationContext application context} for the_supplied {@link MergedContextConfiguration} from the {@code ContextCache}_and {@linkplain ConfigurableApplicationContext#close() close} it if it is_an instance of {@link ConfigurableApplicationContext}._<p>The semantics of the supplied {@code HierarchyMode} must be honored when_removing the context from the cache. See the Javadoc for {@link HierarchyMode}_for details._<p>Generally speaking, this method should only be called if the state of_a singleton bean has been changed (potentially affecting future interaction_with the context) or if the context needs to be prematurely removed from_the cache._@param mergedContextConfiguration the merged context configuration for the_application context to close_ never {@code null}_@param hierarchyMode the hierarchy mode_ may be {@code null} if the context_is not part of a hierarchy_@since 4.1;void closeContext(MergedContextConfiguration mergedContextConfiguration, HierarchyMode hierarchyMode)_;remove,the,linkplain,application,context,application,context,for,the,supplied,link,merged,context,configuration,from,the,code,context,cache,and,linkplain,configurable,application,context,close,close,it,if,it,is,an,instance,of,link,configurable,application,context,p,the,semantics,of,the,supplied,code,hierarchy,mode,must,be,honored,when,removing,the,context,from,the,cache,see,the,javadoc,for,link,hierarchy,mode,for,details,p,generally,speaking,this,method,should,only,be,called,if,the,state,of,a,singleton,bean,has,been,changed,potentially,affecting,future,interaction,with,the,context,or,if,the,context,needs,to,be,prematurely,removed,from,the,cache,param,merged,context,configuration,the,merged,context,configuration,for,the,application,context,to,close,never,code,null,param,hierarchy,mode,the,hierarchy,mode,may,be,code,null,if,the,context,is,not,part,of,a,hierarchy,since,4,1;void,close,context,merged,context,configuration,merged,context,configuration,hierarchy,mode,hierarchy,mode
CacheAwareContextLoaderDelegate -> ApplicationContext loadContext(MergedContextConfiguration mergedContextConfiguration)_;1397082962;Load the {@linkplain ApplicationContext application context} for the supplied_{@link MergedContextConfiguration} by delegating to the {@link ContextLoader}_configured in the given {@code MergedContextConfiguration}.__<p>If the context is present in the <em>context cache</em> it will simply_be returned_ otherwise, it will be loaded, stored in the cache, and returned.__@param mergedContextConfiguration the merged context configuration to use_to load the application context_ never {@code null}_@return the application context_@throws IllegalStateException if an error occurs while retrieving or_loading the application context;ApplicationContext loadContext(MergedContextConfiguration mergedContextConfiguration)_;load,the,linkplain,application,context,application,context,for,the,supplied,link,merged,context,configuration,by,delegating,to,the,link,context,loader,configured,in,the,given,code,merged,context,configuration,p,if,the,context,is,present,in,the,em,context,cache,em,it,will,simply,be,returned,otherwise,it,will,be,loaded,stored,in,the,cache,and,returned,param,merged,context,configuration,the,merged,context,configuration,to,use,to,load,the,application,context,never,code,null,return,the,application,context,throws,illegal,state,exception,if,an,error,occurs,while,retrieving,or,loading,the,application,context;application,context,load,context,merged,context,configuration,merged,context,configuration
CacheAwareContextLoaderDelegate -> ApplicationContext loadContext(MergedContextConfiguration mergedContextConfiguration)_;1415290530;Load the {@linkplain ApplicationContext application context} for the supplied_{@link MergedContextConfiguration} by delegating to the {@link ContextLoader}_configured in the given {@code MergedContextConfiguration}._<p>If the context is present in the <em>context cache</em> it will simply_be returned_ otherwise, it will be loaded, stored in the cache, and returned._@param mergedContextConfiguration the merged context configuration to use_to load the application context_ never {@code null}_@return the application context_@throws IllegalStateException if an error occurs while retrieving or loading_the application context;ApplicationContext loadContext(MergedContextConfiguration mergedContextConfiguration)_;load,the,linkplain,application,context,application,context,for,the,supplied,link,merged,context,configuration,by,delegating,to,the,link,context,loader,configured,in,the,given,code,merged,context,configuration,p,if,the,context,is,present,in,the,em,context,cache,em,it,will,simply,be,returned,otherwise,it,will,be,loaded,stored,in,the,cache,and,returned,param,merged,context,configuration,the,merged,context,configuration,to,use,to,load,the,application,context,never,code,null,return,the,application,context,throws,illegal,state,exception,if,an,error,occurs,while,retrieving,or,loading,the,application,context;application,context,load,context,merged,context,configuration,merged,context,configuration
CacheAwareContextLoaderDelegate -> ApplicationContext loadContext(MergedContextConfiguration mergedContextConfiguration)_;1429465455;Load the {@linkplain ApplicationContext application context} for the supplied_{@link MergedContextConfiguration} by delegating to the {@link ContextLoader}_configured in the given {@code MergedContextConfiguration}._<p>If the context is present in the {@code ContextCache} it will simply_be returned_ otherwise, it will be loaded, stored in the cache, and returned._<p>The cache statistics should be logged by invoking_{@link ContextCache#logStatistics()}._@param mergedContextConfiguration the merged context configuration to use_to load the application context_ never {@code null}_@return the application context_@throws IllegalStateException if an error occurs while retrieving or loading_the application context;ApplicationContext loadContext(MergedContextConfiguration mergedContextConfiguration)_;load,the,linkplain,application,context,application,context,for,the,supplied,link,merged,context,configuration,by,delegating,to,the,link,context,loader,configured,in,the,given,code,merged,context,configuration,p,if,the,context,is,present,in,the,code,context,cache,it,will,simply,be,returned,otherwise,it,will,be,loaded,stored,in,the,cache,and,returned,p,the,cache,statistics,should,be,logged,by,invoking,link,context,cache,log,statistics,param,merged,context,configuration,the,merged,context,configuration,to,use,to,load,the,application,context,never,code,null,return,the,application,context,throws,illegal,state,exception,if,an,error,occurs,while,retrieving,or,loading,the,application,context;application,context,load,context,merged,context,configuration,merged,context,configuration
CacheAwareContextLoaderDelegate -> ApplicationContext loadContext(MergedContextConfiguration mergedContextConfiguration)_;1429559310;Load the {@linkplain ApplicationContext application context} for the supplied_{@link MergedContextConfiguration} by delegating to the {@link ContextLoader}_configured in the given {@code MergedContextConfiguration}._<p>If the context is present in the {@code ContextCache} it will simply_be returned_ otherwise, it will be loaded, stored in the cache, and returned._<p>The cache statistics should be logged by invoking_{@link org.springframework.test.context.cache.ContextCache#logStatistics()}._@param mergedContextConfiguration the merged context configuration to use_to load the application context_ never {@code null}_@return the application context_@throws IllegalStateException if an error occurs while retrieving or loading_the application context;ApplicationContext loadContext(MergedContextConfiguration mergedContextConfiguration)_;load,the,linkplain,application,context,application,context,for,the,supplied,link,merged,context,configuration,by,delegating,to,the,link,context,loader,configured,in,the,given,code,merged,context,configuration,p,if,the,context,is,present,in,the,code,context,cache,it,will,simply,be,returned,otherwise,it,will,be,loaded,stored,in,the,cache,and,returned,p,the,cache,statistics,should,be,logged,by,invoking,link,org,springframework,test,context,cache,context,cache,log,statistics,param,merged,context,configuration,the,merged,context,configuration,to,use,to,load,the,application,context,never,code,null,return,the,application,context,throws,illegal,state,exception,if,an,error,occurs,while,retrieving,or,loading,the,application,context;application,context,load,context,merged,context,configuration,merged,context,configuration
CacheAwareContextLoaderDelegate -> ApplicationContext loadContext(MergedContextConfiguration mergedContextConfiguration)_;1495868221;Load the {@linkplain ApplicationContext application context} for the supplied_{@link MergedContextConfiguration} by delegating to the {@link ContextLoader}_configured in the given {@code MergedContextConfiguration}._<p>If the context is present in the {@code ContextCache} it will simply_be returned_ otherwise, it will be loaded, stored in the cache, and returned._<p>The cache statistics should be logged by invoking_{@link org.springframework.test.context.cache.ContextCache#logStatistics()}._@param mergedContextConfiguration the merged context configuration to use_to load the application context_ never {@code null}_@return the application context_@throws IllegalStateException if an error occurs while retrieving or loading_the application context;ApplicationContext loadContext(MergedContextConfiguration mergedContextConfiguration)_;load,the,linkplain,application,context,application,context,for,the,supplied,link,merged,context,configuration,by,delegating,to,the,link,context,loader,configured,in,the,given,code,merged,context,configuration,p,if,the,context,is,present,in,the,code,context,cache,it,will,simply,be,returned,otherwise,it,will,be,loaded,stored,in,the,cache,and,returned,p,the,cache,statistics,should,be,logged,by,invoking,link,org,springframework,test,context,cache,context,cache,log,statistics,param,merged,context,configuration,the,merged,context,configuration,to,use,to,load,the,application,context,never,code,null,return,the,application,context,throws,illegal,state,exception,if,an,error,occurs,while,retrieving,or,loading,the,application,context;application,context,load,context,merged,context,configuration,merged,context,configuration
