commented;modifiers;parameterAmount;loc;comment;code
true;public;2;3;/**  * Add the given object to the list of JNDI objects that this template will expose.  * @param name the name the client is expected to look up  * @param object the object that will be returned  */ ;/**  * Add the given object to the list of JNDI objects that this template will expose.  * @param name the name the client is expected to look up  * @param object the object that will be returned  */ public void addObject(String name, Object object) {     this.jndiObjects.put(name, object). }
true;public;1;8;/**  * If the name is the expected name specified in the constructor, return the  * object provided in the constructor. If the name is unexpected, a  * respective NamingException gets thrown.  */ ;/**  * If the name is the expected name specified in the constructor, return the  * object provided in the constructor. If the name is unexpected, a  * respective NamingException gets thrown.  */ @Override public Object lookup(String name) throws NamingException {     Object object = this.jndiObjects.get(name).     if (object == null) {         throw new NamingException("Unexpected JNDI name '" + name + "': expecting " + this.jndiObjects.keySet()).     }     return object. }
