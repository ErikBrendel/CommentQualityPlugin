# id;timestamp;commentText;codeText;commentWords;codeWords
SimpleNamingContext -> public SimpleNamingContext();1328020251;Create a new naming context.;public SimpleNamingContext() {_		this("")__	};create,a,new,naming,context;public,simple,naming,context,this
SimpleNamingContext -> public SimpleNamingContext();1356735495;Create a new naming context.;public SimpleNamingContext() {_		this("")__	};create,a,new,naming,context;public,simple,naming,context,this
SimpleNamingContext -> public SimpleNamingContext();1357119239;Create a new naming context.;public SimpleNamingContext() {_		this("")__	};create,a,new,naming,context;public,simple,naming,context,this
SimpleNamingContext -> public SimpleNamingContext();1368482696;Create a new naming context.;public SimpleNamingContext() {_		this("")__	};create,a,new,naming,context;public,simple,naming,context,this
SimpleNamingContext -> public SimpleNamingContext();1467730834;Create a new naming context.;public SimpleNamingContext() {_		this("")__	};create,a,new,naming,context;public,simple,naming,context,this
SimpleNamingContext -> public SimpleNamingContext();1496955179;Create a new naming context.;public SimpleNamingContext() {_		this("")__	};create,a,new,naming,context;public,simple,naming,context,this
SimpleNamingContext -> public SimpleNamingContext();1520528267;Create a new naming context.;public SimpleNamingContext() {_		this("")__	};create,a,new,naming,context;public,simple,naming,context,this
SimpleNamingContext -> public SimpleNamingContext();1522360217;Create a new naming context.;public SimpleNamingContext() {_		this("")__	};create,a,new,naming,context;public,simple,naming,context,this
SimpleNamingContext -> public SimpleNamingContext();1530174524;Create a new naming context.;public SimpleNamingContext() {_		this("")__	};create,a,new,naming,context;public,simple,naming,context,this
SimpleNamingContext -> public SimpleNamingContext(String root);1328020251;Create a new naming context with the given naming root.;public SimpleNamingContext(String root) {_		this.root = root__		this.boundObjects = new Hashtable<String, Object>()__	};create,a,new,naming,context,with,the,given,naming,root;public,simple,naming,context,string,root,this,root,root,this,bound,objects,new,hashtable,string,object
SimpleNamingContext -> public SimpleNamingContext(String root);1356735495;Create a new naming context with the given naming root.;public SimpleNamingContext(String root) {_		this.root = root__		this.boundObjects = new Hashtable<String, Object>()__	};create,a,new,naming,context,with,the,given,naming,root;public,simple,naming,context,string,root,this,root,root,this,bound,objects,new,hashtable,string,object
SimpleNamingContext -> public SimpleNamingContext(String root);1357119239;Create a new naming context with the given naming root.;public SimpleNamingContext(String root) {_		this.root = root__		this.boundObjects = new Hashtable<String, Object>()__	};create,a,new,naming,context,with,the,given,naming,root;public,simple,naming,context,string,root,this,root,root,this,bound,objects,new,hashtable,string,object
SimpleNamingContext -> public SimpleNamingContext(String root);1368482696;Create a new naming context with the given naming root.;public SimpleNamingContext(String root) {_		this.root = root__		this.boundObjects = new Hashtable<String, Object>()__	};create,a,new,naming,context,with,the,given,naming,root;public,simple,naming,context,string,root,this,root,root,this,bound,objects,new,hashtable,string,object
SimpleNamingContext -> public SimpleNamingContext(String root);1467730834;Create a new naming context with the given naming root.;public SimpleNamingContext(String root) {_		this.root = root__		this.boundObjects = new Hashtable<>()__	};create,a,new,naming,context,with,the,given,naming,root;public,simple,naming,context,string,root,this,root,root,this,bound,objects,new,hashtable
SimpleNamingContext -> public SimpleNamingContext(String root);1496955179;Create a new naming context with the given naming root.;public SimpleNamingContext(String root) {_		this.root = root__		this.boundObjects = new Hashtable<>()__	};create,a,new,naming,context,with,the,given,naming,root;public,simple,naming,context,string,root,this,root,root,this,bound,objects,new,hashtable
SimpleNamingContext -> public SimpleNamingContext(String root);1520528267;Create a new naming context with the given naming root.;public SimpleNamingContext(String root) {_		this.root = root__		this.boundObjects = new Hashtable<>()__	};create,a,new,naming,context,with,the,given,naming,root;public,simple,naming,context,string,root,this,root,root,this,bound,objects,new,hashtable
SimpleNamingContext -> public SimpleNamingContext(String root);1522360217;Create a new naming context with the given naming root.;public SimpleNamingContext(String root) {_		this.root = root__		this.boundObjects = new Hashtable<>()__	};create,a,new,naming,context,with,the,given,naming,root;public,simple,naming,context,string,root,this,root,root,this,bound,objects,new,hashtable
SimpleNamingContext -> public SimpleNamingContext(String root);1530174524;Create a new naming context with the given naming root.;public SimpleNamingContext(String root) {_		this.root = root__		this.boundObjects = new Hashtable<>()__	};create,a,new,naming,context,with,the,given,naming,root;public,simple,naming,context,string,root,this,root,root,this,bound,objects,new,hashtable
SimpleNamingContext -> public void bind(String name, Object obj);1328020251;Bind the given object to the given name._Note: Not intended for direct use by applications_if setting up a JVM-level JNDI environment._Use SimpleNamingContextBuilder to set up JNDI bindings then._@see org.springframework.mock.jndi.SimpleNamingContextBuilder#bind;public void bind(String name, Object obj) {_		if (logger.isInfoEnabled()) {_			logger.info("Static JNDI binding: [" + this.root + name + "] = [" + obj + "]")__		}_		this.boundObjects.put(this.root + name, obj)__	};bind,the,given,object,to,the,given,name,note,not,intended,for,direct,use,by,applications,if,setting,up,a,jvm,level,jndi,environment,use,simple,naming,context,builder,to,set,up,jndi,bindings,then,see,org,springframework,mock,jndi,simple,naming,context,builder,bind;public,void,bind,string,name,object,obj,if,logger,is,info,enabled,logger,info,static,jndi,binding,this,root,name,obj,this,bound,objects,put,this,root,name,obj
SimpleNamingContext -> public void bind(String name, Object obj);1357119239;Bind the given object to the given name._Note: Not intended for direct use by applications_if setting up a JVM-level JNDI environment._Use SimpleNamingContextBuilder to set up JNDI bindings then._@see org.springframework.mock.jndi.SimpleNamingContextBuilder#bind;public void bind(String name, Object obj) {_		if (logger.isInfoEnabled()) {_			logger.info("Static JNDI binding: [" + this.root + name + "] = [" + obj + "]")__		}_		this.boundObjects.put(this.root + name, obj)__	};bind,the,given,object,to,the,given,name,note,not,intended,for,direct,use,by,applications,if,setting,up,a,jvm,level,jndi,environment,use,simple,naming,context,builder,to,set,up,jndi,bindings,then,see,org,springframework,mock,jndi,simple,naming,context,builder,bind;public,void,bind,string,name,object,obj,if,logger,is,info,enabled,logger,info,static,jndi,binding,this,root,name,obj,this,bound,objects,put,this,root,name,obj
SimpleNamingContext -> public SimpleNamingContext(String root, Hashtable<String, Object> boundObjects, Hashtable<String, Object> env);1328020251;Create a new naming context with the given naming root,_the given name/object map, and the JNDI environment entries.;public SimpleNamingContext(String root, Hashtable<String, Object> boundObjects, Hashtable<String, Object> env) {_		this.root = root__		this.boundObjects = boundObjects__		if (env != null) {_			this.environment.putAll(env)__		}_	};create,a,new,naming,context,with,the,given,naming,root,the,given,name,object,map,and,the,jndi,environment,entries;public,simple,naming,context,string,root,hashtable,string,object,bound,objects,hashtable,string,object,env,this,root,root,this,bound,objects,bound,objects,if,env,null,this,environment,put,all,env
SimpleNamingContext -> public SimpleNamingContext(String root, Hashtable<String, Object> boundObjects, Hashtable<String, Object> env);1356735495;Create a new naming context with the given naming root,_the given name/object map, and the JNDI environment entries.;public SimpleNamingContext(String root, Hashtable<String, Object> boundObjects, Hashtable<String, Object> env) {_		this.root = root__		this.boundObjects = boundObjects__		if (env != null) {_			this.environment.putAll(env)__		}_	};create,a,new,naming,context,with,the,given,naming,root,the,given,name,object,map,and,the,jndi,environment,entries;public,simple,naming,context,string,root,hashtable,string,object,bound,objects,hashtable,string,object,env,this,root,root,this,bound,objects,bound,objects,if,env,null,this,environment,put,all,env
SimpleNamingContext -> public SimpleNamingContext(String root, Hashtable<String, Object> boundObjects, Hashtable<String, Object> env);1357119239;Create a new naming context with the given naming root,_the given name/object map, and the JNDI environment entries.;public SimpleNamingContext(String root, Hashtable<String, Object> boundObjects, Hashtable<String, Object> env) {_		this.root = root__		this.boundObjects = boundObjects__		if (env != null) {_			this.environment.putAll(env)__		}_	};create,a,new,naming,context,with,the,given,naming,root,the,given,name,object,map,and,the,jndi,environment,entries;public,simple,naming,context,string,root,hashtable,string,object,bound,objects,hashtable,string,object,env,this,root,root,this,bound,objects,bound,objects,if,env,null,this,environment,put,all,env
SimpleNamingContext -> public SimpleNamingContext(String root, Hashtable<String, Object> boundObjects, Hashtable<String, Object> env);1368482696;Create a new naming context with the given naming root,_the given name/object map, and the JNDI environment entries.;public SimpleNamingContext(String root, Hashtable<String, Object> boundObjects, Hashtable<String, Object> env) {_		this.root = root__		this.boundObjects = boundObjects__		if (env != null) {_			this.environment.putAll(env)__		}_	};create,a,new,naming,context,with,the,given,naming,root,the,given,name,object,map,and,the,jndi,environment,entries;public,simple,naming,context,string,root,hashtable,string,object,bound,objects,hashtable,string,object,env,this,root,root,this,bound,objects,bound,objects,if,env,null,this,environment,put,all,env
SimpleNamingContext -> public SimpleNamingContext(String root, Hashtable<String, Object> boundObjects, Hashtable<String, Object> env);1467730834;Create a new naming context with the given naming root,_the given name/object map, and the JNDI environment entries.;public SimpleNamingContext(String root, Hashtable<String, Object> boundObjects, Hashtable<String, Object> env) {_		this.root = root__		this.boundObjects = boundObjects__		if (env != null) {_			this.environment.putAll(env)__		}_	};create,a,new,naming,context,with,the,given,naming,root,the,given,name,object,map,and,the,jndi,environment,entries;public,simple,naming,context,string,root,hashtable,string,object,bound,objects,hashtable,string,object,env,this,root,root,this,bound,objects,bound,objects,if,env,null,this,environment,put,all,env
SimpleNamingContext -> @Override 	public Object lookup(String lookupName) throws NameNotFoundException;1356735495;Look up the object with the given name._<p>Note: Not intended for direct use by applications._Will be used by any standard InitialContext JNDI lookups._@throws javax.naming.NameNotFoundException if the object could not be found;@Override_	public Object lookup(String lookupName) throws NameNotFoundException {_		String name = this.root + lookupName__		if (logger.isDebugEnabled()) {_			logger.debug("Static JNDI lookup: [" + name + "]")__		}_		if ("".equals(name)) {_			return new SimpleNamingContext(this.root, this.boundObjects, this.environment)__		}_		Object found = this.boundObjects.get(name)__		if (found == null) {_			if (!name.endsWith("/")) {_				name = name + "/"__			}_			for (String boundName : this.boundObjects.keySet()) {_				if (boundName.startsWith(name)) {_					return new SimpleNamingContext(name, this.boundObjects, this.environment)__				}_			}_			throw new NameNotFoundException(_					"Name [" + this.root + lookupName + "] not bound_ " + this.boundObjects.size() + " bindings: [" +_					StringUtils.collectionToDelimitedString(this.boundObjects.keySet(), ",") + "]")__		}_		return found__	};look,up,the,object,with,the,given,name,p,note,not,intended,for,direct,use,by,applications,will,be,used,by,any,standard,initial,context,jndi,lookups,throws,javax,naming,name,not,found,exception,if,the,object,could,not,be,found;override,public,object,lookup,string,lookup,name,throws,name,not,found,exception,string,name,this,root,lookup,name,if,logger,is,debug,enabled,logger,debug,static,jndi,lookup,name,if,equals,name,return,new,simple,naming,context,this,root,this,bound,objects,this,environment,object,found,this,bound,objects,get,name,if,found,null,if,name,ends,with,name,name,for,string,bound,name,this,bound,objects,key,set,if,bound,name,starts,with,name,return,new,simple,naming,context,name,this,bound,objects,this,environment,throw,new,name,not,found,exception,name,this,root,lookup,name,not,bound,this,bound,objects,size,bindings,string,utils,collection,to,delimited,string,this,bound,objects,key,set,return,found
SimpleNamingContext -> @Override 	public Object lookup(String lookupName) throws NameNotFoundException;1368482696;Look up the object with the given name._<p>Note: Not intended for direct use by applications._Will be used by any standard InitialContext JNDI lookups._@throws javax.naming.NameNotFoundException if the object could not be found;@Override_	public Object lookup(String lookupName) throws NameNotFoundException {_		String name = this.root + lookupName__		if (logger.isDebugEnabled()) {_			logger.debug("Static JNDI lookup: [" + name + "]")__		}_		if ("".equals(name)) {_			return new SimpleNamingContext(this.root, this.boundObjects, this.environment)__		}_		Object found = this.boundObjects.get(name)__		if (found == null) {_			if (!name.endsWith("/")) {_				name = name + "/"__			}_			for (String boundName : this.boundObjects.keySet()) {_				if (boundName.startsWith(name)) {_					return new SimpleNamingContext(name, this.boundObjects, this.environment)__				}_			}_			throw new NameNotFoundException(_					"Name [" + this.root + lookupName + "] not bound_ " + this.boundObjects.size() + " bindings: [" +_					StringUtils.collectionToDelimitedString(this.boundObjects.keySet(), ",") + "]")__		}_		return found__	};look,up,the,object,with,the,given,name,p,note,not,intended,for,direct,use,by,applications,will,be,used,by,any,standard,initial,context,jndi,lookups,throws,javax,naming,name,not,found,exception,if,the,object,could,not,be,found;override,public,object,lookup,string,lookup,name,throws,name,not,found,exception,string,name,this,root,lookup,name,if,logger,is,debug,enabled,logger,debug,static,jndi,lookup,name,if,equals,name,return,new,simple,naming,context,this,root,this,bound,objects,this,environment,object,found,this,bound,objects,get,name,if,found,null,if,name,ends,with,name,name,for,string,bound,name,this,bound,objects,key,set,if,bound,name,starts,with,name,return,new,simple,naming,context,name,this,bound,objects,this,environment,throw,new,name,not,found,exception,name,this,root,lookup,name,not,bound,this,bound,objects,size,bindings,string,utils,collection,to,delimited,string,this,bound,objects,key,set,return,found
SimpleNamingContext -> @Override 	public Object lookup(String lookupName) throws NameNotFoundException;1467730834;Look up the object with the given name._<p>Note: Not intended for direct use by applications._Will be used by any standard InitialContext JNDI lookups._@throws javax.naming.NameNotFoundException if the object could not be found;@Override_	public Object lookup(String lookupName) throws NameNotFoundException {_		String name = this.root + lookupName__		if (logger.isDebugEnabled()) {_			logger.debug("Static JNDI lookup: [" + name + "]")__		}_		if ("".equals(name)) {_			return new SimpleNamingContext(this.root, this.boundObjects, this.environment)__		}_		Object found = this.boundObjects.get(name)__		if (found == null) {_			if (!name.endsWith("/")) {_				name = name + "/"__			}_			for (String boundName : this.boundObjects.keySet()) {_				if (boundName.startsWith(name)) {_					return new SimpleNamingContext(name, this.boundObjects, this.environment)__				}_			}_			throw new NameNotFoundException(_					"Name [" + this.root + lookupName + "] not bound_ " + this.boundObjects.size() + " bindings: [" +_					StringUtils.collectionToDelimitedString(this.boundObjects.keySet(), ",") + "]")__		}_		return found__	};look,up,the,object,with,the,given,name,p,note,not,intended,for,direct,use,by,applications,will,be,used,by,any,standard,initial,context,jndi,lookups,throws,javax,naming,name,not,found,exception,if,the,object,could,not,be,found;override,public,object,lookup,string,lookup,name,throws,name,not,found,exception,string,name,this,root,lookup,name,if,logger,is,debug,enabled,logger,debug,static,jndi,lookup,name,if,equals,name,return,new,simple,naming,context,this,root,this,bound,objects,this,environment,object,found,this,bound,objects,get,name,if,found,null,if,name,ends,with,name,name,for,string,bound,name,this,bound,objects,key,set,if,bound,name,starts,with,name,return,new,simple,naming,context,name,this,bound,objects,this,environment,throw,new,name,not,found,exception,name,this,root,lookup,name,not,bound,this,bound,objects,size,bindings,string,utils,collection,to,delimited,string,this,bound,objects,key,set,return,found
SimpleNamingContext -> @Override 	public Object lookup(String lookupName) throws NameNotFoundException;1496955179;Look up the object with the given name._<p>Note: Not intended for direct use by applications._Will be used by any standard InitialContext JNDI lookups._@throws javax.naming.NameNotFoundException if the object could not be found;@Override_	public Object lookup(String lookupName) throws NameNotFoundException {_		String name = this.root + lookupName__		if (logger.isDebugEnabled()) {_			logger.debug("Static JNDI lookup: [" + name + "]")__		}_		if ("".equals(name)) {_			return new SimpleNamingContext(this.root, this.boundObjects, this.environment)__		}_		Object found = this.boundObjects.get(name)__		if (found == null) {_			if (!name.endsWith("/")) {_				name = name + "/"__			}_			for (String boundName : this.boundObjects.keySet()) {_				if (boundName.startsWith(name)) {_					return new SimpleNamingContext(name, this.boundObjects, this.environment)__				}_			}_			throw new NameNotFoundException(_					"Name [" + this.root + lookupName + "] not bound_ " + this.boundObjects.size() + " bindings: [" +_					StringUtils.collectionToDelimitedString(this.boundObjects.keySet(), ",") + "]")__		}_		return found__	};look,up,the,object,with,the,given,name,p,note,not,intended,for,direct,use,by,applications,will,be,used,by,any,standard,initial,context,jndi,lookups,throws,javax,naming,name,not,found,exception,if,the,object,could,not,be,found;override,public,object,lookup,string,lookup,name,throws,name,not,found,exception,string,name,this,root,lookup,name,if,logger,is,debug,enabled,logger,debug,static,jndi,lookup,name,if,equals,name,return,new,simple,naming,context,this,root,this,bound,objects,this,environment,object,found,this,bound,objects,get,name,if,found,null,if,name,ends,with,name,name,for,string,bound,name,this,bound,objects,key,set,if,bound,name,starts,with,name,return,new,simple,naming,context,name,this,bound,objects,this,environment,throw,new,name,not,found,exception,name,this,root,lookup,name,not,bound,this,bound,objects,size,bindings,string,utils,collection,to,delimited,string,this,bound,objects,key,set,return,found
SimpleNamingContext -> @Override 	public Object lookup(String lookupName) throws NameNotFoundException;1520528267;Look up the object with the given name._<p>Note: Not intended for direct use by applications._Will be used by any standard InitialContext JNDI lookups._@throws javax.naming.NameNotFoundException if the object could not be found;@Override_	public Object lookup(String lookupName) throws NameNotFoundException {_		String name = this.root + lookupName__		if (logger.isDebugEnabled()) {_			logger.debug("Static JNDI lookup: [" + name + "]")__		}_		if ("".equals(name)) {_			return new SimpleNamingContext(this.root, this.boundObjects, this.environment)__		}_		Object found = this.boundObjects.get(name)__		if (found == null) {_			if (!name.endsWith("/")) {_				name = name + "/"__			}_			for (String boundName : this.boundObjects.keySet()) {_				if (boundName.startsWith(name)) {_					return new SimpleNamingContext(name, this.boundObjects, this.environment)__				}_			}_			throw new NameNotFoundException(_					"Name [" + this.root + lookupName + "] not bound_ " + this.boundObjects.size() + " bindings: [" +_					StringUtils.collectionToDelimitedString(this.boundObjects.keySet(), ",") + "]")__		}_		return found__	};look,up,the,object,with,the,given,name,p,note,not,intended,for,direct,use,by,applications,will,be,used,by,any,standard,initial,context,jndi,lookups,throws,javax,naming,name,not,found,exception,if,the,object,could,not,be,found;override,public,object,lookup,string,lookup,name,throws,name,not,found,exception,string,name,this,root,lookup,name,if,logger,is,debug,enabled,logger,debug,static,jndi,lookup,name,if,equals,name,return,new,simple,naming,context,this,root,this,bound,objects,this,environment,object,found,this,bound,objects,get,name,if,found,null,if,name,ends,with,name,name,for,string,bound,name,this,bound,objects,key,set,if,bound,name,starts,with,name,return,new,simple,naming,context,name,this,bound,objects,this,environment,throw,new,name,not,found,exception,name,this,root,lookup,name,not,bound,this,bound,objects,size,bindings,string,utils,collection,to,delimited,string,this,bound,objects,key,set,return,found
SimpleNamingContext -> @Override 	public Object lookup(String lookupName) throws NameNotFoundException;1522360217;Look up the object with the given name._<p>Note: Not intended for direct use by applications._Will be used by any standard InitialContext JNDI lookups._@throws javax.naming.NameNotFoundException if the object could not be found;@Override_	public Object lookup(String lookupName) throws NameNotFoundException {_		String name = this.root + lookupName__		if (logger.isDebugEnabled()) {_			logger.debug("Static JNDI lookup: [" + name + "]")__		}_		if ("".equals(name)) {_			return new SimpleNamingContext(this.root, this.boundObjects, this.environment)__		}_		Object found = this.boundObjects.get(name)__		if (found == null) {_			if (!name.endsWith("/")) {_				name = name + "/"__			}_			for (String boundName : this.boundObjects.keySet()) {_				if (boundName.startsWith(name)) {_					return new SimpleNamingContext(name, this.boundObjects, this.environment)__				}_			}_			throw new NameNotFoundException(_					"Name [" + this.root + lookupName + "] not bound_ " + this.boundObjects.size() + " bindings: [" +_					StringUtils.collectionToDelimitedString(this.boundObjects.keySet(), ",") + "]")__		}_		return found__	};look,up,the,object,with,the,given,name,p,note,not,intended,for,direct,use,by,applications,will,be,used,by,any,standard,initial,context,jndi,lookups,throws,javax,naming,name,not,found,exception,if,the,object,could,not,be,found;override,public,object,lookup,string,lookup,name,throws,name,not,found,exception,string,name,this,root,lookup,name,if,logger,is,debug,enabled,logger,debug,static,jndi,lookup,name,if,equals,name,return,new,simple,naming,context,this,root,this,bound,objects,this,environment,object,found,this,bound,objects,get,name,if,found,null,if,name,ends,with,name,name,for,string,bound,name,this,bound,objects,key,set,if,bound,name,starts,with,name,return,new,simple,naming,context,name,this,bound,objects,this,environment,throw,new,name,not,found,exception,name,this,root,lookup,name,not,bound,this,bound,objects,size,bindings,string,utils,collection,to,delimited,string,this,bound,objects,key,set,return,found
SimpleNamingContext -> @Override 	public Object lookup(String lookupName) throws NameNotFoundException;1530174524;Look up the object with the given name._<p>Note: Not intended for direct use by applications._Will be used by any standard InitialContext JNDI lookups._@throws javax.naming.NameNotFoundException if the object could not be found;@Override_	public Object lookup(String lookupName) throws NameNotFoundException {_		String name = this.root + lookupName__		if (logger.isDebugEnabled()) {_			logger.debug("Static JNDI lookup: [" + name + "]")__		}_		if ("".equals(name)) {_			return new SimpleNamingContext(this.root, this.boundObjects, this.environment)__		}_		Object found = this.boundObjects.get(name)__		if (found == null) {_			if (!name.endsWith("/")) {_				name = name + "/"__			}_			for (String boundName : this.boundObjects.keySet()) {_				if (boundName.startsWith(name)) {_					return new SimpleNamingContext(name, this.boundObjects, this.environment)__				}_			}_			throw new NameNotFoundException(_					"Name [" + this.root + lookupName + "] not bound_ " + this.boundObjects.size() + " bindings: [" +_					StringUtils.collectionToDelimitedString(this.boundObjects.keySet(), ",") + "]")__		}_		return found__	};look,up,the,object,with,the,given,name,p,note,not,intended,for,direct,use,by,applications,will,be,used,by,any,standard,initial,context,jndi,lookups,throws,javax,naming,name,not,found,exception,if,the,object,could,not,be,found;override,public,object,lookup,string,lookup,name,throws,name,not,found,exception,string,name,this,root,lookup,name,if,logger,is,debug,enabled,logger,debug,static,jndi,lookup,name,if,equals,name,return,new,simple,naming,context,this,root,this,bound,objects,this,environment,object,found,this,bound,objects,get,name,if,found,null,if,name,ends,with,name,name,for,string,bound,name,this,bound,objects,key,set,if,bound,name,starts,with,name,return,new,simple,naming,context,name,this,bound,objects,this,environment,throw,new,name,not,found,exception,name,this,root,lookup,name,not,bound,this,bound,objects,size,bindings,string,utils,collection,to,delimited,string,this,bound,objects,key,set,return,found
SimpleNamingContext -> public Object lookup(String lookupName) throws NameNotFoundException;1328020251;Look up the object with the given name._<p>Note: Not intended for direct use by applications._Will be used by any standard InitialContext JNDI lookups._@throws javax.naming.NameNotFoundException if the object could not be found;public Object lookup(String lookupName) throws NameNotFoundException {_		String name = this.root + lookupName__		if (logger.isDebugEnabled()) {_			logger.debug("Static JNDI lookup: [" + name + "]")__		}_		if ("".equals(name)) {_			return new SimpleNamingContext(this.root, this.boundObjects, this.environment)__		}_		Object found = this.boundObjects.get(name)__		if (found == null) {_			if (!name.endsWith("/")) {_				name = name + "/"__			}_			for (String boundName : this.boundObjects.keySet()) {_				if (boundName.startsWith(name)) {_					return new SimpleNamingContext(name, this.boundObjects, this.environment)__				}_			}_			throw new NameNotFoundException(_					"Name [" + this.root + lookupName + "] not bound_ " + this.boundObjects.size() + " bindings: [" +_					StringUtils.collectionToDelimitedString(this.boundObjects.keySet(), ",") + "]")__		}_		return found__	};look,up,the,object,with,the,given,name,p,note,not,intended,for,direct,use,by,applications,will,be,used,by,any,standard,initial,context,jndi,lookups,throws,javax,naming,name,not,found,exception,if,the,object,could,not,be,found;public,object,lookup,string,lookup,name,throws,name,not,found,exception,string,name,this,root,lookup,name,if,logger,is,debug,enabled,logger,debug,static,jndi,lookup,name,if,equals,name,return,new,simple,naming,context,this,root,this,bound,objects,this,environment,object,found,this,bound,objects,get,name,if,found,null,if,name,ends,with,name,name,for,string,bound,name,this,bound,objects,key,set,if,bound,name,starts,with,name,return,new,simple,naming,context,name,this,bound,objects,this,environment,throw,new,name,not,found,exception,name,this,root,lookup,name,not,bound,this,bound,objects,size,bindings,string,utils,collection,to,delimited,string,this,bound,objects,key,set,return,found
SimpleNamingContext -> public Object lookup(String lookupName) throws NameNotFoundException;1357119239;Look up the object with the given name._<p>Note: Not intended for direct use by applications._Will be used by any standard InitialContext JNDI lookups._@throws javax.naming.NameNotFoundException if the object could not be found;public Object lookup(String lookupName) throws NameNotFoundException {_		String name = this.root + lookupName__		if (logger.isDebugEnabled()) {_			logger.debug("Static JNDI lookup: [" + name + "]")__		}_		if ("".equals(name)) {_			return new SimpleNamingContext(this.root, this.boundObjects, this.environment)__		}_		Object found = this.boundObjects.get(name)__		if (found == null) {_			if (!name.endsWith("/")) {_				name = name + "/"__			}_			for (String boundName : this.boundObjects.keySet()) {_				if (boundName.startsWith(name)) {_					return new SimpleNamingContext(name, this.boundObjects, this.environment)__				}_			}_			throw new NameNotFoundException(_					"Name [" + this.root + lookupName + "] not bound_ " + this.boundObjects.size() + " bindings: [" +_					StringUtils.collectionToDelimitedString(this.boundObjects.keySet(), ",") + "]")__		}_		return found__	};look,up,the,object,with,the,given,name,p,note,not,intended,for,direct,use,by,applications,will,be,used,by,any,standard,initial,context,jndi,lookups,throws,javax,naming,name,not,found,exception,if,the,object,could,not,be,found;public,object,lookup,string,lookup,name,throws,name,not,found,exception,string,name,this,root,lookup,name,if,logger,is,debug,enabled,logger,debug,static,jndi,lookup,name,if,equals,name,return,new,simple,naming,context,this,root,this,bound,objects,this,environment,object,found,this,bound,objects,get,name,if,found,null,if,name,ends,with,name,name,for,string,bound,name,this,bound,objects,key,set,if,bound,name,starts,with,name,return,new,simple,naming,context,name,this,bound,objects,this,environment,throw,new,name,not,found,exception,name,this,root,lookup,name,not,bound,this,bound,objects,size,bindings,string,utils,collection,to,delimited,string,this,bound,objects,key,set,return,found
SimpleNamingContext -> @Override 	public void bind(String name, Object obj);1356735495;Bind the given object to the given name._Note: Not intended for direct use by applications_if setting up a JVM-level JNDI environment._Use SimpleNamingContextBuilder to set up JNDI bindings then._@see org.springframework.mock.jndi.SimpleNamingContextBuilder#bind;@Override_	public void bind(String name, Object obj) {_		if (logger.isInfoEnabled()) {_			logger.info("Static JNDI binding: [" + this.root + name + "] = [" + obj + "]")__		}_		this.boundObjects.put(this.root + name, obj)__	};bind,the,given,object,to,the,given,name,note,not,intended,for,direct,use,by,applications,if,setting,up,a,jvm,level,jndi,environment,use,simple,naming,context,builder,to,set,up,jndi,bindings,then,see,org,springframework,mock,jndi,simple,naming,context,builder,bind;override,public,void,bind,string,name,object,obj,if,logger,is,info,enabled,logger,info,static,jndi,binding,this,root,name,obj,this,bound,objects,put,this,root,name,obj
SimpleNamingContext -> @Override 	public void bind(String name, Object obj);1368482696;Bind the given object to the given name._Note: Not intended for direct use by applications_if setting up a JVM-level JNDI environment._Use SimpleNamingContextBuilder to set up JNDI bindings then._@see org.springframework.mock.jndi.SimpleNamingContextBuilder#bind;@Override_	public void bind(String name, Object obj) {_		if (logger.isInfoEnabled()) {_			logger.info("Static JNDI binding: [" + this.root + name + "] = [" + obj + "]")__		}_		this.boundObjects.put(this.root + name, obj)__	};bind,the,given,object,to,the,given,name,note,not,intended,for,direct,use,by,applications,if,setting,up,a,jvm,level,jndi,environment,use,simple,naming,context,builder,to,set,up,jndi,bindings,then,see,org,springframework,mock,jndi,simple,naming,context,builder,bind;override,public,void,bind,string,name,object,obj,if,logger,is,info,enabled,logger,info,static,jndi,binding,this,root,name,obj,this,bound,objects,put,this,root,name,obj
SimpleNamingContext -> @Override 	public void bind(String name, Object obj);1467730834;Bind the given object to the given name._Note: Not intended for direct use by applications_if setting up a JVM-level JNDI environment._Use SimpleNamingContextBuilder to set up JNDI bindings then._@see org.springframework.mock.jndi.SimpleNamingContextBuilder#bind;@Override_	public void bind(String name, Object obj) {_		if (logger.isInfoEnabled()) {_			logger.info("Static JNDI binding: [" + this.root + name + "] = [" + obj + "]")__		}_		this.boundObjects.put(this.root + name, obj)__	};bind,the,given,object,to,the,given,name,note,not,intended,for,direct,use,by,applications,if,setting,up,a,jvm,level,jndi,environment,use,simple,naming,context,builder,to,set,up,jndi,bindings,then,see,org,springframework,mock,jndi,simple,naming,context,builder,bind;override,public,void,bind,string,name,object,obj,if,logger,is,info,enabled,logger,info,static,jndi,binding,this,root,name,obj,this,bound,objects,put,this,root,name,obj
SimpleNamingContext -> @Override 	public void bind(String name, Object obj);1496955179;Bind the given object to the given name._Note: Not intended for direct use by applications_if setting up a JVM-level JNDI environment._Use SimpleNamingContextBuilder to set up JNDI bindings then._@see org.springframework.mock.jndi.SimpleNamingContextBuilder#bind;@Override_	public void bind(String name, Object obj) {_		if (logger.isInfoEnabled()) {_			logger.info("Static JNDI binding: [" + this.root + name + "] = [" + obj + "]")__		}_		this.boundObjects.put(this.root + name, obj)__	};bind,the,given,object,to,the,given,name,note,not,intended,for,direct,use,by,applications,if,setting,up,a,jvm,level,jndi,environment,use,simple,naming,context,builder,to,set,up,jndi,bindings,then,see,org,springframework,mock,jndi,simple,naming,context,builder,bind;override,public,void,bind,string,name,object,obj,if,logger,is,info,enabled,logger,info,static,jndi,binding,this,root,name,obj,this,bound,objects,put,this,root,name,obj
SimpleNamingContext -> @Override 	public void bind(String name, Object obj);1520528267;Bind the given object to the given name._Note: Not intended for direct use by applications_if setting up a JVM-level JNDI environment._Use SimpleNamingContextBuilder to set up JNDI bindings then._@see org.springframework.mock.jndi.SimpleNamingContextBuilder#bind;@Override_	public void bind(String name, Object obj) {_		if (logger.isInfoEnabled()) {_			logger.info("Static JNDI binding: [" + this.root + name + "] = [" + obj + "]")__		}_		this.boundObjects.put(this.root + name, obj)__	};bind,the,given,object,to,the,given,name,note,not,intended,for,direct,use,by,applications,if,setting,up,a,jvm,level,jndi,environment,use,simple,naming,context,builder,to,set,up,jndi,bindings,then,see,org,springframework,mock,jndi,simple,naming,context,builder,bind;override,public,void,bind,string,name,object,obj,if,logger,is,info,enabled,logger,info,static,jndi,binding,this,root,name,obj,this,bound,objects,put,this,root,name,obj
SimpleNamingContext -> @Override 	public void bind(String name, Object obj);1522360217;Bind the given object to the given name._Note: Not intended for direct use by applications_if setting up a JVM-level JNDI environment._Use SimpleNamingContextBuilder to set up JNDI bindings then._@see org.springframework.mock.jndi.SimpleNamingContextBuilder#bind;@Override_	public void bind(String name, Object obj) {_		if (logger.isInfoEnabled()) {_			logger.info("Static JNDI binding: [" + this.root + name + "] = [" + obj + "]")__		}_		this.boundObjects.put(this.root + name, obj)__	};bind,the,given,object,to,the,given,name,note,not,intended,for,direct,use,by,applications,if,setting,up,a,jvm,level,jndi,environment,use,simple,naming,context,builder,to,set,up,jndi,bindings,then,see,org,springframework,mock,jndi,simple,naming,context,builder,bind;override,public,void,bind,string,name,object,obj,if,logger,is,info,enabled,logger,info,static,jndi,binding,this,root,name,obj,this,bound,objects,put,this,root,name,obj
SimpleNamingContext -> @Override 	public void bind(String name, Object obj);1530174524;Bind the given object to the given name._Note: Not intended for direct use by applications_if setting up a JVM-level JNDI environment._Use SimpleNamingContextBuilder to set up JNDI bindings then._@see org.springframework.mock.jndi.SimpleNamingContextBuilder#bind;@Override_	public void bind(String name, Object obj) {_		if (logger.isInfoEnabled()) {_			logger.info("Static JNDI binding: [" + this.root + name + "] = [" + obj + "]")__		}_		this.boundObjects.put(this.root + name, obj)__	};bind,the,given,object,to,the,given,name,note,not,intended,for,direct,use,by,applications,if,setting,up,a,jvm,level,jndi,environment,use,simple,naming,context,builder,to,set,up,jndi,bindings,then,see,org,springframework,mock,jndi,simple,naming,context,builder,bind;override,public,void,bind,string,name,object,obj,if,logger,is,info,enabled,logger,info,static,jndi,binding,this,root,name,obj,this,bound,objects,put,this,root,name,obj
SimpleNamingContext -> public SimpleNamingContext( 			String root, Hashtable<String, Object> boundObjects, @Nullable Hashtable<String, Object> env);1496955179;Create a new naming context with the given naming root,_the given name/object map, and the JNDI environment entries.;public SimpleNamingContext(_			String root, Hashtable<String, Object> boundObjects, @Nullable Hashtable<String, Object> env) {__		this.root = root__		this.boundObjects = boundObjects__		if (env != null) {_			this.environment.putAll(env)__		}_	};create,a,new,naming,context,with,the,given,naming,root,the,given,name,object,map,and,the,jndi,environment,entries;public,simple,naming,context,string,root,hashtable,string,object,bound,objects,nullable,hashtable,string,object,env,this,root,root,this,bound,objects,bound,objects,if,env,null,this,environment,put,all,env
SimpleNamingContext -> public SimpleNamingContext( 			String root, Hashtable<String, Object> boundObjects, @Nullable Hashtable<String, Object> env);1520528267;Create a new naming context with the given naming root,_the given name/object map, and the JNDI environment entries.;public SimpleNamingContext(_			String root, Hashtable<String, Object> boundObjects, @Nullable Hashtable<String, Object> env) {__		this.root = root__		this.boundObjects = boundObjects__		if (env != null) {_			this.environment.putAll(env)__		}_	};create,a,new,naming,context,with,the,given,naming,root,the,given,name,object,map,and,the,jndi,environment,entries;public,simple,naming,context,string,root,hashtable,string,object,bound,objects,nullable,hashtable,string,object,env,this,root,root,this,bound,objects,bound,objects,if,env,null,this,environment,put,all,env
SimpleNamingContext -> public SimpleNamingContext( 			String root, Hashtable<String, Object> boundObjects, @Nullable Hashtable<String, Object> env);1522360217;Create a new naming context with the given naming root,_the given name/object map, and the JNDI environment entries.;public SimpleNamingContext(_			String root, Hashtable<String, Object> boundObjects, @Nullable Hashtable<String, Object> env) {__		this.root = root__		this.boundObjects = boundObjects__		if (env != null) {_			this.environment.putAll(env)__		}_	};create,a,new,naming,context,with,the,given,naming,root,the,given,name,object,map,and,the,jndi,environment,entries;public,simple,naming,context,string,root,hashtable,string,object,bound,objects,nullable,hashtable,string,object,env,this,root,root,this,bound,objects,bound,objects,if,env,null,this,environment,put,all,env
SimpleNamingContext -> public SimpleNamingContext( 			String root, Hashtable<String, Object> boundObjects, @Nullable Hashtable<String, Object> env);1530174524;Create a new naming context with the given naming root,_the given name/object map, and the JNDI environment entries.;public SimpleNamingContext(_			String root, Hashtable<String, Object> boundObjects, @Nullable Hashtable<String, Object> env) {__		this.root = root__		this.boundObjects = boundObjects__		if (env != null) {_			this.environment.putAll(env)__		}_	};create,a,new,naming,context,with,the,given,naming,root,the,given,name,object,map,and,the,jndi,environment,entries;public,simple,naming,context,string,root,hashtable,string,object,bound,objects,nullable,hashtable,string,object,env,this,root,root,this,bound,objects,bound,objects,if,env,null,this,environment,put,all,env
