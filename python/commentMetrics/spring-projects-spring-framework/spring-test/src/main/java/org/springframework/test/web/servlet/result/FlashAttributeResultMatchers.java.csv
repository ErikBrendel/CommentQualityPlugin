# id;timestamp;commentText;codeText;commentWords;codeWords
FlashAttributeResultMatchers -> public <T> ResultMatcher attribute(final String name, final Object value);1383669853;Assert a flash attribute's value.;public <T> ResultMatcher attribute(final String name, final Object value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				assertEquals("Flash attribute", value, result.getFlashMap().get(name))__			}_		}__	};assert,a,flash,attribute,s,value;public,t,result,matcher,attribute,final,string,name,final,object,value,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,assert,equals,flash,attribute,value,result,get,flash,map,get,name
FlashAttributeResultMatchers -> public <T> ResultMatcher attribute(final String name, final Object value);1413848647;Assert a flash attribute's value.;public <T> ResultMatcher attribute(final String name, final Object value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				assertEquals("Flash attribute", value, result.getFlashMap().get(name))__			}_		}__	};assert,a,flash,attribute,s,value;public,t,result,matcher,attribute,final,string,name,final,object,value,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,assert,equals,flash,attribute,value,result,get,flash,map,get,name
FlashAttributeResultMatchers -> public <T> ResultMatcher attribute(final String name, final Object value);1427238287;Assert a flash attribute's value.;public <T> ResultMatcher attribute(final String name, final Object value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				assertEquals("Flash attribute", value, result.getFlashMap().get(name))__			}_		}__	};assert,a,flash,attribute,s,value;public,t,result,matcher,attribute,final,string,name,final,object,value,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,assert,equals,flash,attribute,value,result,get,flash,map,get,name
FlashAttributeResultMatchers -> public <T> ResultMatcher attribute(final String name, final Object value);1437424890;Assert a flash attribute's value.;public <T> ResultMatcher attribute(final String name, final Object value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				assertEquals("Flash attribute", value, result.getFlashMap().get(name))__			}_		}__	};assert,a,flash,attribute,s,value;public,t,result,matcher,attribute,final,string,name,final,object,value,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,assert,equals,flash,attribute,value,result,get,flash,map,get,name
FlashAttributeResultMatchers -> public <T> ResultMatcher attribute(final String name, final Object value);1493235170;Assert a flash attribute's value.;public <T> ResultMatcher attribute(final String name, final Object value) {_		return result -> assertEquals("Flash attribute '" + name + "'", value, result.getFlashMap().get(name))__	};assert,a,flash,attribute,s,value;public,t,result,matcher,attribute,final,string,name,final,object,value,return,result,assert,equals,flash,attribute,name,value,result,get,flash,map,get,name
FlashAttributeResultMatchers -> public <T> ResultMatcher attribute(final String name, final Object value);1530174524;Assert a flash attribute's value.;public <T> ResultMatcher attribute(final String name, final Object value) {_		return result -> assertEquals("Flash attribute '" + name + "'", value, result.getFlashMap().get(name))__	};assert,a,flash,attribute,s,value;public,t,result,matcher,attribute,final,string,name,final,object,value,return,result,assert,equals,flash,attribute,name,value,result,get,flash,map,get,name
FlashAttributeResultMatchers -> public <T> ResultMatcher attribute(final String name, final Matcher<T> matcher);1383669853;Assert a flash attribute's value with the given Hamcrest {@link Matcher}.;public <T> ResultMatcher attribute(final String name, final Matcher<T> matcher) {_		return new ResultMatcher() {_			@Override_			@SuppressWarnings("unchecked")_			public void match(MvcResult result) throws Exception {_				assertThat("Flash attribute", (T) result.getFlashMap().get(name), matcher)__			}_		}__	};assert,a,flash,attribute,s,value,with,the,given,hamcrest,link,matcher;public,t,result,matcher,attribute,final,string,name,final,matcher,t,matcher,return,new,result,matcher,override,suppress,warnings,unchecked,public,void,match,mvc,result,result,throws,exception,assert,that,flash,attribute,t,result,get,flash,map,get,name,matcher
FlashAttributeResultMatchers -> public <T> ResultMatcher attribute(final String name, final Matcher<T> matcher);1413848647;Assert a flash attribute's value with the given Hamcrest {@link Matcher}.;public <T> ResultMatcher attribute(final String name, final Matcher<T> matcher) {_		return new ResultMatcher() {_			@Override_			@SuppressWarnings("unchecked")_			public void match(MvcResult result) throws Exception {_				assertThat("Flash attribute", (T) result.getFlashMap().get(name), matcher)__			}_		}__	};assert,a,flash,attribute,s,value,with,the,given,hamcrest,link,matcher;public,t,result,matcher,attribute,final,string,name,final,matcher,t,matcher,return,new,result,matcher,override,suppress,warnings,unchecked,public,void,match,mvc,result,result,throws,exception,assert,that,flash,attribute,t,result,get,flash,map,get,name,matcher
FlashAttributeResultMatchers -> public <T> ResultMatcher attribute(final String name, final Matcher<T> matcher);1427238287;Assert a flash attribute's value with the given Hamcrest {@link Matcher}.;public <T> ResultMatcher attribute(final String name, final Matcher<T> matcher) {_		return new ResultMatcher() {_			@Override_			@SuppressWarnings("unchecked")_			public void match(MvcResult result) throws Exception {_				assertThat("Flash attribute", (T) result.getFlashMap().get(name), matcher)__			}_		}__	};assert,a,flash,attribute,s,value,with,the,given,hamcrest,link,matcher;public,t,result,matcher,attribute,final,string,name,final,matcher,t,matcher,return,new,result,matcher,override,suppress,warnings,unchecked,public,void,match,mvc,result,result,throws,exception,assert,that,flash,attribute,t,result,get,flash,map,get,name,matcher
FlashAttributeResultMatchers -> public <T> ResultMatcher attribute(final String name, final Matcher<T> matcher);1437424890;Assert a flash attribute's value with the given Hamcrest {@link Matcher}.;public <T> ResultMatcher attribute(final String name, final Matcher<T> matcher) {_		return new ResultMatcher() {_			@Override_			@SuppressWarnings("unchecked")_			public void match(MvcResult result) throws Exception {_				assertThat("Flash attribute", (T) result.getFlashMap().get(name), matcher)__			}_		}__	};assert,a,flash,attribute,s,value,with,the,given,hamcrest,link,matcher;public,t,result,matcher,attribute,final,string,name,final,matcher,t,matcher,return,new,result,matcher,override,suppress,warnings,unchecked,public,void,match,mvc,result,result,throws,exception,assert,that,flash,attribute,t,result,get,flash,map,get,name,matcher
FlashAttributeResultMatchers -> public <T> ResultMatcher attributeCount(final int count);1383669853;Assert the number of flash attributes.;public <T> ResultMatcher attributeCount(final int count) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				assertEquals("FlashMap size", count, result.getFlashMap().size())__			}_		}__	};assert,the,number,of,flash,attributes;public,t,result,matcher,attribute,count,final,int,count,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,assert,equals,flash,map,size,count,result,get,flash,map,size
FlashAttributeResultMatchers -> public <T> ResultMatcher attributeCount(final int count);1413848647;Assert the number of flash attributes.;public <T> ResultMatcher attributeCount(final int count) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				assertEquals("FlashMap size", count, result.getFlashMap().size())__			}_		}__	};assert,the,number,of,flash,attributes;public,t,result,matcher,attribute,count,final,int,count,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,assert,equals,flash,map,size,count,result,get,flash,map,size
FlashAttributeResultMatchers -> public <T> ResultMatcher attributeCount(final int count);1427238287;Assert the number of flash attributes.;public <T> ResultMatcher attributeCount(final int count) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				assertEquals("FlashMap size", count, result.getFlashMap().size())__			}_		}__	};assert,the,number,of,flash,attributes;public,t,result,matcher,attribute,count,final,int,count,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,assert,equals,flash,map,size,count,result,get,flash,map,size
FlashAttributeResultMatchers -> public <T> ResultMatcher attributeCount(final int count);1437424890;Assert the number of flash attributes.;public <T> ResultMatcher attributeCount(final int count) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				assertEquals("FlashMap size", count, result.getFlashMap().size())__			}_		}__	};assert,the,number,of,flash,attributes;public,t,result,matcher,attribute,count,final,int,count,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,assert,equals,flash,map,size,count,result,get,flash,map,size
FlashAttributeResultMatchers -> public <T> ResultMatcher attributeCount(final int count);1493235170;Assert the number of flash attributes.;public <T> ResultMatcher attributeCount(final int count) {_		return result -> assertEquals("FlashMap size must be " + count, count, result.getFlashMap().size())__	};assert,the,number,of,flash,attributes;public,t,result,matcher,attribute,count,final,int,count,return,result,assert,equals,flash,map,size,must,be,count,count,result,get,flash,map,size
FlashAttributeResultMatchers -> public <T> ResultMatcher attributeCount(final int count);1530174524;Assert the number of flash attributes.;public <T> ResultMatcher attributeCount(final int count) {_		return result -> assertEquals("FlashMap size must be " + count, count, result.getFlashMap().size())__	};assert,the,number,of,flash,attributes;public,t,result,matcher,attribute,count,final,int,count,return,result,assert,equals,flash,map,size,must,be,count,count,result,get,flash,map,size
FlashAttributeResultMatchers -> public <T> ResultMatcher attributeExists(final String... names);1383669853;Assert the existence of the given flash attributes.;public <T> ResultMatcher attributeExists(final String... names) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				for (String name : names) {_					assertTrue("Flash attribute [" + name + "] does not exist", result.getFlashMap().get(name) != null)__				}_			}_		}__	};assert,the,existence,of,the,given,flash,attributes;public,t,result,matcher,attribute,exists,final,string,names,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,for,string,name,names,assert,true,flash,attribute,name,does,not,exist,result,get,flash,map,get,name,null
FlashAttributeResultMatchers -> public <T> ResultMatcher attributeExists(final String... names);1413848647;Assert the existence of the given flash attributes.;public <T> ResultMatcher attributeExists(final String... names) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				for (String name : names) {_					assertTrue("Flash attribute [" + name + "] does not exist", result.getFlashMap().get(name) != null)__				}_			}_		}__	};assert,the,existence,of,the,given,flash,attributes;public,t,result,matcher,attribute,exists,final,string,names,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,for,string,name,names,assert,true,flash,attribute,name,does,not,exist,result,get,flash,map,get,name,null
FlashAttributeResultMatchers -> public <T> ResultMatcher attributeExists(final String... names);1427238287;Assert the existence of the given flash attributes.;public <T> ResultMatcher attributeExists(final String... names) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				for (String name : names) {_					assertTrue("Flash attribute [" + name + "] does not exist", result.getFlashMap().get(name) != null)__				}_			}_		}__	};assert,the,existence,of,the,given,flash,attributes;public,t,result,matcher,attribute,exists,final,string,names,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,for,string,name,names,assert,true,flash,attribute,name,does,not,exist,result,get,flash,map,get,name,null
FlashAttributeResultMatchers -> public <T> ResultMatcher attributeExists(final String... names);1437424890;Assert the existence of the given flash attributes.;public <T> ResultMatcher attributeExists(final String... names) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				for (String name : names) {_					assertTrue("Flash attribute [" + name + "] does not exist", result.getFlashMap().get(name) != null)__				}_			}_		}__	};assert,the,existence,of,the,given,flash,attributes;public,t,result,matcher,attribute,exists,final,string,names,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,for,string,name,names,assert,true,flash,attribute,name,does,not,exist,result,get,flash,map,get,name,null
FlashAttributeResultMatchers -> public <T> ResultMatcher attributeExists(final String... names);1493235170;Assert the existence of the given flash attributes.;public <T> ResultMatcher attributeExists(final String... names) {_		return result -> {_			for (String name : names) {_				assertTrue("Flash attribute '" + name + "' does not exist", result.getFlashMap().get(name) != null)__			}_		}__	};assert,the,existence,of,the,given,flash,attributes;public,t,result,matcher,attribute,exists,final,string,names,return,result,for,string,name,names,assert,true,flash,attribute,name,does,not,exist,result,get,flash,map,get,name,null
FlashAttributeResultMatchers -> public <T> ResultMatcher attributeExists(final String... names);1530174524;Assert the existence of the given flash attributes.;public <T> ResultMatcher attributeExists(final String... names) {_		return result -> {_			for (String name : names) {_				assertTrue("Flash attribute '" + name + "' does not exist", result.getFlashMap().get(name) != null)__			}_		}__	};assert,the,existence,of,the,given,flash,attributes;public,t,result,matcher,attribute,exists,final,string,names,return,result,for,string,name,names,assert,true,flash,attribute,name,does,not,exist,result,get,flash,map,get,name,null
FlashAttributeResultMatchers -> @SuppressWarnings("unchecked") 	public <T> ResultMatcher attribute(final String name, final Matcher<T> matcher);1493235170;Assert a flash attribute's value with the given Hamcrest {@link Matcher}.;@SuppressWarnings("unchecked")_	public <T> ResultMatcher attribute(final String name, final Matcher<T> matcher) {_		return result -> assertThat("Flash attribute '" + name + "'", (T) result.getFlashMap().get(name), matcher)__	};assert,a,flash,attribute,s,value,with,the,given,hamcrest,link,matcher;suppress,warnings,unchecked,public,t,result,matcher,attribute,final,string,name,final,matcher,t,matcher,return,result,assert,that,flash,attribute,name,t,result,get,flash,map,get,name,matcher
FlashAttributeResultMatchers -> @SuppressWarnings("unchecked") 	public <T> ResultMatcher attribute(final String name, final Matcher<T> matcher);1530174524;Assert a flash attribute's value with the given Hamcrest {@link Matcher}.;@SuppressWarnings("unchecked")_	public <T> ResultMatcher attribute(final String name, final Matcher<T> matcher) {_		return result -> assertThat("Flash attribute '" + name + "'", (T) result.getFlashMap().get(name), matcher)__	};assert,a,flash,attribute,s,value,with,the,given,hamcrest,link,matcher;suppress,warnings,unchecked,public,t,result,matcher,attribute,final,string,name,final,matcher,t,matcher,return,result,assert,that,flash,attribute,name,t,result,get,flash,map,get,name,matcher
FlashAttributeResultMatchers -> protected FlashAttributeResultMatchers();1383669853;Protected constructor._Use {@link MockMvcResultMatchers#flash()}.;protected FlashAttributeResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,flash;protected,flash,attribute,result,matchers
FlashAttributeResultMatchers -> protected FlashAttributeResultMatchers();1413848647;Protected constructor._Use {@link MockMvcResultMatchers#flash()}.;protected FlashAttributeResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,flash;protected,flash,attribute,result,matchers
FlashAttributeResultMatchers -> protected FlashAttributeResultMatchers();1427238287;Protected constructor._Use {@link MockMvcResultMatchers#flash()}.;protected FlashAttributeResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,flash;protected,flash,attribute,result,matchers
FlashAttributeResultMatchers -> protected FlashAttributeResultMatchers();1437424890;Protected constructor._Use {@link MockMvcResultMatchers#flash()}.;protected FlashAttributeResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,flash;protected,flash,attribute,result,matchers
FlashAttributeResultMatchers -> protected FlashAttributeResultMatchers();1493235170;Protected constructor._Use {@link MockMvcResultMatchers#flash()}.;protected FlashAttributeResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,flash;protected,flash,attribute,result,matchers
FlashAttributeResultMatchers -> protected FlashAttributeResultMatchers();1530174524;Protected constructor._Use {@link MockMvcResultMatchers#flash()}.;protected FlashAttributeResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,flash;protected,flash,attribute,result,matchers
