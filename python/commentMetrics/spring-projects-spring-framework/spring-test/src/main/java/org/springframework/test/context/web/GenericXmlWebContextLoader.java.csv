commented;modifiers;parameterAmount;loc;comment;code
true;protected;2;5;/**  * Load bean definitions into the supplied {@link GenericWebApplicationContext context}  * from the locations in the supplied {@code WebMergedContextConfiguration}, using an  * {@link XmlBeanDefinitionReader}.  * @see AbstractGenericWebContextLoader#loadBeanDefinitions  */ ;/**  * Load bean definitions into the supplied {@link GenericWebApplicationContext context}  * from the locations in the supplied {@code WebMergedContextConfiguration}, using an  * {@link XmlBeanDefinitionReader}.  * @see AbstractGenericWebContextLoader#loadBeanDefinitions  */ @Override protected void loadBeanDefinitions(GenericWebApplicationContext context, WebMergedContextConfiguration webMergedConfig) {     new XmlBeanDefinitionReader(context).loadBeanDefinitions(webMergedConfig.getLocations()). }
true;protected;0;4;/**  * Returns {@code "-context.xml"} in order to support detection of a  * default XML config file.  */ ;/**  * Returns {@code "-context.xml"} in order to support detection of a  * default XML config file.  */ @Override protected String getResourceSuffix() {     return "-context.xml". }
true;protected;1;11;/**  * Ensure that the supplied {@link WebMergedContextConfiguration} does not  * contain {@link MergedContextConfiguration#getClasses() classes}.  * @since 4.0.4  * @see AbstractGenericWebContextLoader#validateMergedContextConfiguration  */ ;/**  * Ensure that the supplied {@link WebMergedContextConfiguration} does not  * contain {@link MergedContextConfiguration#getClasses() classes}.  * @since 4.0.4  * @see AbstractGenericWebContextLoader#validateMergedContextConfiguration  */ @Override protected void validateMergedContextConfiguration(WebMergedContextConfiguration webMergedConfig) {     if (webMergedConfig.hasClasses()) {         String msg = String.format("Test class [%s] has been configured with @ContextConfiguration's 'classes' attribute %s, " + "but %s does not support annotated classes.", webMergedConfig.getTestClass().getName(), ObjectUtils.nullSafeToString(webMergedConfig.getClasses()), getClass().getSimpleName()).         logger.error(msg).         throw new IllegalStateException(msg).     } }
