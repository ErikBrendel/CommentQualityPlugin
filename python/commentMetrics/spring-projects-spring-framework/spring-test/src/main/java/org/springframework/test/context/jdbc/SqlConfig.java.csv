# id;timestamp;commentText;codeText;commentWords;codeWords
SqlConfig -> String dataSource() default ""_;1405524203;The bean name of the {@link javax.sql.DataSource} against which the scripts_should be executed._<p>The name is only used if there is more than one bean of type_{@code DataSource} in the test's {@code ApplicationContext}. If there is_only one such bean, it is not necessary to specify a bean name._<p>Defaults to an empty string, requiring that one of the following is_true:_<ol>_<li>There is only one bean of type {@code DataSource} in the test's_{@code ApplicationContext}.</li>_<li>The {@code DataSource} to use is named {@code "dataSource"}.</li>_</ol>;String dataSource() default ""_;the,bean,name,of,the,link,javax,sql,data,source,against,which,the,scripts,should,be,executed,p,the,name,is,only,used,if,there,is,more,than,one,bean,of,type,code,data,source,in,the,test,s,code,application,context,if,there,is,only,one,such,bean,it,is,not,necessary,to,specify,a,bean,name,p,defaults,to,an,empty,string,requiring,that,one,of,the,following,is,true,ol,li,there,is,only,one,bean,of,type,code,data,source,in,the,test,s,code,application,context,li,li,the,code,data,source,to,use,is,named,code,data,source,li,ol;string,data,source,default
SqlConfig -> String dataSource() default ""_;1405645143;The bean name of the {@link javax.sql.DataSource} against which the_scripts should be executed._<p>The name is only required if there is more than one bean of type_{@code DataSource} in the test's {@code ApplicationContext}. If there_is only one such bean, it is not necessary to specify a bean name._<p>Defaults to an empty string, requiring that one of the following is_true:_<ol>_<li>An explicit bean name is defined in a global declaration of_{@code @SqlConfig}._<li>The data source can be retrieved from the transaction manager_by using reflection to invoke a public method named_{@code getDataSource()} on the transaction manager._<li>There is only one bean of type {@code DataSource} in the test's_{@code ApplicationContext}.</li>_<li>The {@code DataSource} to use is named {@code "dataSource"}.</li>_</ol>_@see org.springframework.test.context.transaction.TestContextTransactionUtils#retrieveDataSource;String dataSource() default ""_;the,bean,name,of,the,link,javax,sql,data,source,against,which,the,scripts,should,be,executed,p,the,name,is,only,required,if,there,is,more,than,one,bean,of,type,code,data,source,in,the,test,s,code,application,context,if,there,is,only,one,such,bean,it,is,not,necessary,to,specify,a,bean,name,p,defaults,to,an,empty,string,requiring,that,one,of,the,following,is,true,ol,li,an,explicit,bean,name,is,defined,in,a,global,declaration,of,code,sql,config,li,the,data,source,can,be,retrieved,from,the,transaction,manager,by,using,reflection,to,invoke,a,public,method,named,code,get,data,source,on,the,transaction,manager,li,there,is,only,one,bean,of,type,code,data,source,in,the,test,s,code,application,context,li,li,the,code,data,source,to,use,is,named,code,data,source,li,ol,see,org,springframework,test,context,transaction,test,context,transaction,utils,retrieve,data,source;string,data,source,default
SqlConfig -> String dataSource() default ""_;1413848647;The bean name of the {@link javax.sql.DataSource} against which the_scripts should be executed._<p>The name is only required if there is more than one bean of type_{@code DataSource} in the test's {@code ApplicationContext}. If there_is only one such bean, it is not necessary to specify a bean name._<p>Defaults to an empty string, requiring that one of the following is_true:_<ol>_<li>An explicit bean name is defined in a global declaration of_{@code @SqlConfig}._<li>The data source can be retrieved from the transaction manager_by using reflection to invoke a public method named_{@code getDataSource()} on the transaction manager._<li>There is only one bean of type {@code DataSource} in the test's_{@code ApplicationContext}.</li>_<li>The {@code DataSource} to use is named {@code "dataSource"}.</li>_</ol>_@see org.springframework.test.context.transaction.TestContextTransactionUtils#retrieveDataSource;String dataSource() default ""_;the,bean,name,of,the,link,javax,sql,data,source,against,which,the,scripts,should,be,executed,p,the,name,is,only,required,if,there,is,more,than,one,bean,of,type,code,data,source,in,the,test,s,code,application,context,if,there,is,only,one,such,bean,it,is,not,necessary,to,specify,a,bean,name,p,defaults,to,an,empty,string,requiring,that,one,of,the,following,is,true,ol,li,an,explicit,bean,name,is,defined,in,a,global,declaration,of,code,sql,config,li,the,data,source,can,be,retrieved,from,the,transaction,manager,by,using,reflection,to,invoke,a,public,method,named,code,get,data,source,on,the,transaction,manager,li,there,is,only,one,bean,of,type,code,data,source,in,the,test,s,code,application,context,li,li,the,code,data,source,to,use,is,named,code,data,source,li,ol,see,org,springframework,test,context,transaction,test,context,transaction,utils,retrieve,data,source;string,data,source,default
SqlConfig -> String dataSource() default ""_;1456234269;The bean name of the {@link javax.sql.DataSource} against which the_scripts should be executed._<p>The name is only required if there is more than one bean of type_{@code DataSource} in the test's {@code ApplicationContext}. If there_is only one such bean, it is not necessary to specify a bean name._<p>Defaults to an empty string, requiring that one of the following is_true:_<ol>_<li>An explicit bean name is defined in a global declaration of_{@code @SqlConfig}._<li>The data source can be retrieved from the transaction manager_by using reflection to invoke a public method named_{@code getDataSource()} on the transaction manager._<li>There is only one bean of type {@code DataSource} in the test's_{@code ApplicationContext}.</li>_<li>The {@code DataSource} to use is named {@code "dataSource"}.</li>_</ol>_@see org.springframework.test.context.transaction.TestContextTransactionUtils#retrieveDataSource;String dataSource() default ""_;the,bean,name,of,the,link,javax,sql,data,source,against,which,the,scripts,should,be,executed,p,the,name,is,only,required,if,there,is,more,than,one,bean,of,type,code,data,source,in,the,test,s,code,application,context,if,there,is,only,one,such,bean,it,is,not,necessary,to,specify,a,bean,name,p,defaults,to,an,empty,string,requiring,that,one,of,the,following,is,true,ol,li,an,explicit,bean,name,is,defined,in,a,global,declaration,of,code,sql,config,li,the,data,source,can,be,retrieved,from,the,transaction,manager,by,using,reflection,to,invoke,a,public,method,named,code,get,data,source,on,the,transaction,manager,li,there,is,only,one,bean,of,type,code,data,source,in,the,test,s,code,application,context,li,li,the,code,data,source,to,use,is,named,code,data,source,li,ol,see,org,springframework,test,context,transaction,test,context,transaction,utils,retrieve,data,source;string,data,source,default
SqlConfig -> String dataSource() default ""_;1458754769;The bean name of the {@link javax.sql.DataSource} against which the_scripts should be executed._<p>The name is only required if there is more than one bean of type_{@code DataSource} in the test's {@code ApplicationContext}. If there_is only one such bean, it is not necessary to specify a bean name._<p>Defaults to an empty string, requiring that one of the following is_true:_<ol>_<li>An explicit bean name is defined in a global declaration of_{@code @SqlConfig}._<li>The data source can be retrieved from the transaction manager_by using reflection to invoke a public method named_{@code getDataSource()} on the transaction manager._<li>There is only one bean of type {@code DataSource} in the test's_{@code ApplicationContext}.</li>_<li>The {@code DataSource} to use is named {@code "dataSource"}.</li>_</ol>_@see org.springframework.test.context.transaction.TestContextTransactionUtils#retrieveDataSource;String dataSource() default ""_;the,bean,name,of,the,link,javax,sql,data,source,against,which,the,scripts,should,be,executed,p,the,name,is,only,required,if,there,is,more,than,one,bean,of,type,code,data,source,in,the,test,s,code,application,context,if,there,is,only,one,such,bean,it,is,not,necessary,to,specify,a,bean,name,p,defaults,to,an,empty,string,requiring,that,one,of,the,following,is,true,ol,li,an,explicit,bean,name,is,defined,in,a,global,declaration,of,code,sql,config,li,the,data,source,can,be,retrieved,from,the,transaction,manager,by,using,reflection,to,invoke,a,public,method,named,code,get,data,source,on,the,transaction,manager,li,there,is,only,one,bean,of,type,code,data,source,in,the,test,s,code,application,context,li,li,the,code,data,source,to,use,is,named,code,data,source,li,ol,see,org,springframework,test,context,transaction,test,context,transaction,utils,retrieve,data,source;string,data,source,default
SqlConfig -> String blockCommentEndDelimiter() default ""_;1405524203;The end delimiter that identifies block comments within the SQL scripts._<p>Implicitly defaults to <code>"*&#47_"</code>._@see #blockCommentStartDelimiter_@see ScriptUtils#DEFAULT_BLOCK_COMMENT_END_DELIMITER;String blockCommentEndDelimiter() default ""_;the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,implicitly,defaults,to,code,47,code,see,block,comment,start,delimiter,see,script,utils;string,block,comment,end,delimiter,default
SqlConfig -> String blockCommentEndDelimiter() default ""_;1405645143;The end delimiter that identifies block comments within the SQL scripts._<p>Implicitly defaults to <code>"*&#47_"</code>._@see #blockCommentStartDelimiter_@see org.springframework.jdbc.datasource.init.ScriptUtils#DEFAULT_BLOCK_COMMENT_END_DELIMITER;String blockCommentEndDelimiter() default ""_;the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,implicitly,defaults,to,code,47,code,see,block,comment,start,delimiter,see,org,springframework,jdbc,datasource,init,script,utils;string,block,comment,end,delimiter,default
SqlConfig -> String blockCommentEndDelimiter() default ""_;1413848647;The end delimiter that identifies block comments within the SQL scripts._<p>Implicitly defaults to <code>"*&#47_"</code>._@see #blockCommentStartDelimiter_@see org.springframework.jdbc.datasource.init.ScriptUtils#DEFAULT_BLOCK_COMMENT_END_DELIMITER;String blockCommentEndDelimiter() default ""_;the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,implicitly,defaults,to,code,47,code,see,block,comment,start,delimiter,see,org,springframework,jdbc,datasource,init,script,utils;string,block,comment,end,delimiter,default
SqlConfig -> String blockCommentEndDelimiter() default ""_;1456234269;The end delimiter that identifies block comments within the SQL scripts._<p>Implicitly defaults to <code>"*&#47_"</code>._@see #blockCommentStartDelimiter_@see org.springframework.jdbc.datasource.init.ScriptUtils#DEFAULT_BLOCK_COMMENT_END_DELIMITER;String blockCommentEndDelimiter() default ""_;the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,implicitly,defaults,to,code,47,code,see,block,comment,start,delimiter,see,org,springframework,jdbc,datasource,init,script,utils;string,block,comment,end,delimiter,default
SqlConfig -> String blockCommentEndDelimiter() default ""_;1458754769;The end delimiter that identifies block comments within the SQL scripts._<p>Implicitly defaults to <code>"*&#47_"</code>._@see #blockCommentStartDelimiter_@see org.springframework.jdbc.datasource.init.ScriptUtils#DEFAULT_BLOCK_COMMENT_END_DELIMITER;String blockCommentEndDelimiter() default ""_;the,end,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,implicitly,defaults,to,code,47,code,see,block,comment,start,delimiter,see,org,springframework,jdbc,datasource,init,script,utils;string,block,comment,end,delimiter,default
SqlConfig -> ErrorMode errorMode() default ErrorMode.DEFAULT_;1405524203;The <em>mode</em> to use when an error is encountered while executing an_SQL statement._<p>Defaults to {@link ErrorMode#DEFAULT DEFAULT}._@see ErrorMode;ErrorMode errorMode() default ErrorMode.DEFAULT_;the,em,mode,em,to,use,when,an,error,is,encountered,while,executing,an,sql,statement,p,defaults,to,link,error,mode,default,default,see,error,mode;error,mode,error,mode,default,error,mode,default
SqlConfig -> ErrorMode errorMode() default ErrorMode.DEFAULT_;1405645143;The <em>mode</em> to use when an error is encountered while executing an_SQL statement._<p>Defaults to {@link ErrorMode#DEFAULT DEFAULT}._@see ErrorMode;ErrorMode errorMode() default ErrorMode.DEFAULT_;the,em,mode,em,to,use,when,an,error,is,encountered,while,executing,an,sql,statement,p,defaults,to,link,error,mode,default,default,see,error,mode;error,mode,error,mode,default,error,mode,default
SqlConfig -> ErrorMode errorMode() default ErrorMode.DEFAULT_;1413848647;The <em>mode</em> to use when an error is encountered while executing an_SQL statement._<p>Defaults to {@link ErrorMode#DEFAULT DEFAULT}._@see ErrorMode;ErrorMode errorMode() default ErrorMode.DEFAULT_;the,em,mode,em,to,use,when,an,error,is,encountered,while,executing,an,sql,statement,p,defaults,to,link,error,mode,default,default,see,error,mode;error,mode,error,mode,default,error,mode,default
SqlConfig -> ErrorMode errorMode() default ErrorMode.DEFAULT_;1456234269;The <em>mode</em> to use when an error is encountered while executing an_SQL statement._<p>Defaults to {@link ErrorMode#DEFAULT DEFAULT}._@see ErrorMode;ErrorMode errorMode() default ErrorMode.DEFAULT_;the,em,mode,em,to,use,when,an,error,is,encountered,while,executing,an,sql,statement,p,defaults,to,link,error,mode,default,default,see,error,mode;error,mode,error,mode,default,error,mode,default
SqlConfig -> ErrorMode errorMode() default ErrorMode.DEFAULT_;1458754769;The <em>mode</em> to use when an error is encountered while executing an_SQL statement._<p>Defaults to {@link ErrorMode#DEFAULT DEFAULT}._@see ErrorMode;ErrorMode errorMode() default ErrorMode.DEFAULT_;the,em,mode,em,to,use,when,an,error,is,encountered,while,executing,an,sql,statement,p,defaults,to,link,error,mode,default,default,see,error,mode;error,mode,error,mode,default,error,mode,default
SqlConfig -> String transactionManager() default ""_;1405524203;The bean name of the {@link org.springframework.transaction.PlatformTransactionManager_PlatformTransactionManager} that should be used to drive transactions._<p>The name is only used if there is more than one bean of type_{@code PlatformTransactionManager} in the test's {@code ApplicationContext}._If there is only one such bean, it is not necessary to specify a bean name._<p>Defaults to an empty string, requiring that one of the following is_true:_<ol>_<li>There is only one bean of type {@code PlatformTransactionManager} in_the test's {@code ApplicationContext}.</li>_<li>{@link org.springframework.transaction.annotation.TransactionManagementConfigurer_TransactionManagementConfigurer} has been implemented to specify which_{@code PlatformTransactionManager} bean should be used for annotation-driven_transaction management.</li>_<li>The {@code PlatformTransactionManager} to use is named_{@code "transactionManager"}.</li>_</ol>;String transactionManager() default ""_;the,bean,name,of,the,link,org,springframework,transaction,platform,transaction,manager,platform,transaction,manager,that,should,be,used,to,drive,transactions,p,the,name,is,only,used,if,there,is,more,than,one,bean,of,type,code,platform,transaction,manager,in,the,test,s,code,application,context,if,there,is,only,one,such,bean,it,is,not,necessary,to,specify,a,bean,name,p,defaults,to,an,empty,string,requiring,that,one,of,the,following,is,true,ol,li,there,is,only,one,bean,of,type,code,platform,transaction,manager,in,the,test,s,code,application,context,li,li,link,org,springframework,transaction,annotation,transaction,management,configurer,transaction,management,configurer,has,been,implemented,to,specify,which,code,platform,transaction,manager,bean,should,be,used,for,annotation,driven,transaction,management,li,li,the,code,platform,transaction,manager,to,use,is,named,code,transaction,manager,li,ol;string,transaction,manager,default
SqlConfig -> String transactionManager() default ""_;1405645143;The bean name of the {@link org.springframework.transaction.PlatformTransactionManager_PlatformTransactionManager} that should be used to drive transactions._<p>The name is only used if there is more than one bean of type_{@code PlatformTransactionManager} in the test's {@code ApplicationContext}._If there is only one such bean, it is not necessary to specify a bean name._<p>Defaults to an empty string, requiring that one of the following is_true:_<ol>_<li>An explicit bean name is defined in a global declaration of_{@code @SqlConfig}._<li>There is only one bean of type {@code PlatformTransactionManager} in_the test's {@code ApplicationContext}.</li>_<li>{@link org.springframework.transaction.annotation.TransactionManagementConfigurer_TransactionManagementConfigurer} has been implemented to specify which_{@code PlatformTransactionManager} bean should be used for annotation-driven_transaction management.</li>_<li>The {@code PlatformTransactionManager} to use is named_{@code "transactionManager"}.</li>_</ol>_@see org.springframework.test.context.transaction.TestContextTransactionUtils#retrieveTransactionManager;String transactionManager() default ""_;the,bean,name,of,the,link,org,springframework,transaction,platform,transaction,manager,platform,transaction,manager,that,should,be,used,to,drive,transactions,p,the,name,is,only,used,if,there,is,more,than,one,bean,of,type,code,platform,transaction,manager,in,the,test,s,code,application,context,if,there,is,only,one,such,bean,it,is,not,necessary,to,specify,a,bean,name,p,defaults,to,an,empty,string,requiring,that,one,of,the,following,is,true,ol,li,an,explicit,bean,name,is,defined,in,a,global,declaration,of,code,sql,config,li,there,is,only,one,bean,of,type,code,platform,transaction,manager,in,the,test,s,code,application,context,li,li,link,org,springframework,transaction,annotation,transaction,management,configurer,transaction,management,configurer,has,been,implemented,to,specify,which,code,platform,transaction,manager,bean,should,be,used,for,annotation,driven,transaction,management,li,li,the,code,platform,transaction,manager,to,use,is,named,code,transaction,manager,li,ol,see,org,springframework,test,context,transaction,test,context,transaction,utils,retrieve,transaction,manager;string,transaction,manager,default
SqlConfig -> String transactionManager() default ""_;1413848647;The bean name of the {@link org.springframework.transaction.PlatformTransactionManager_PlatformTransactionManager} that should be used to drive transactions._<p>The name is only used if there is more than one bean of type_{@code PlatformTransactionManager} in the test's {@code ApplicationContext}._If there is only one such bean, it is not necessary to specify a bean name._<p>Defaults to an empty string, requiring that one of the following is_true:_<ol>_<li>An explicit bean name is defined in a global declaration of_{@code @SqlConfig}._<li>There is only one bean of type {@code PlatformTransactionManager} in_the test's {@code ApplicationContext}.</li>_<li>{@link org.springframework.transaction.annotation.TransactionManagementConfigurer_TransactionManagementConfigurer} has been implemented to specify which_{@code PlatformTransactionManager} bean should be used for annotation-driven_transaction management.</li>_<li>The {@code PlatformTransactionManager} to use is named_{@code "transactionManager"}.</li>_</ol>_@see org.springframework.test.context.transaction.TestContextTransactionUtils#retrieveTransactionManager;String transactionManager() default ""_;the,bean,name,of,the,link,org,springframework,transaction,platform,transaction,manager,platform,transaction,manager,that,should,be,used,to,drive,transactions,p,the,name,is,only,used,if,there,is,more,than,one,bean,of,type,code,platform,transaction,manager,in,the,test,s,code,application,context,if,there,is,only,one,such,bean,it,is,not,necessary,to,specify,a,bean,name,p,defaults,to,an,empty,string,requiring,that,one,of,the,following,is,true,ol,li,an,explicit,bean,name,is,defined,in,a,global,declaration,of,code,sql,config,li,there,is,only,one,bean,of,type,code,platform,transaction,manager,in,the,test,s,code,application,context,li,li,link,org,springframework,transaction,annotation,transaction,management,configurer,transaction,management,configurer,has,been,implemented,to,specify,which,code,platform,transaction,manager,bean,should,be,used,for,annotation,driven,transaction,management,li,li,the,code,platform,transaction,manager,to,use,is,named,code,transaction,manager,li,ol,see,org,springframework,test,context,transaction,test,context,transaction,utils,retrieve,transaction,manager;string,transaction,manager,default
SqlConfig -> String transactionManager() default ""_;1456234269;The bean name of the {@link org.springframework.transaction.PlatformTransactionManager_PlatformTransactionManager} that should be used to drive transactions._<p>The name is only used if there is more than one bean of type_{@code PlatformTransactionManager} in the test's {@code ApplicationContext}._If there is only one such bean, it is not necessary to specify a bean name._<p>Defaults to an empty string, requiring that one of the following is_true:_<ol>_<li>An explicit bean name is defined in a global declaration of_{@code @SqlConfig}._<li>There is only one bean of type {@code PlatformTransactionManager} in_the test's {@code ApplicationContext}.</li>_<li>{@link org.springframework.transaction.annotation.TransactionManagementConfigurer_TransactionManagementConfigurer} has been implemented to specify which_{@code PlatformTransactionManager} bean should be used for annotation-driven_transaction management.</li>_<li>The {@code PlatformTransactionManager} to use is named_{@code "transactionManager"}.</li>_</ol>_@see org.springframework.test.context.transaction.TestContextTransactionUtils#retrieveTransactionManager;String transactionManager() default ""_;the,bean,name,of,the,link,org,springframework,transaction,platform,transaction,manager,platform,transaction,manager,that,should,be,used,to,drive,transactions,p,the,name,is,only,used,if,there,is,more,than,one,bean,of,type,code,platform,transaction,manager,in,the,test,s,code,application,context,if,there,is,only,one,such,bean,it,is,not,necessary,to,specify,a,bean,name,p,defaults,to,an,empty,string,requiring,that,one,of,the,following,is,true,ol,li,an,explicit,bean,name,is,defined,in,a,global,declaration,of,code,sql,config,li,there,is,only,one,bean,of,type,code,platform,transaction,manager,in,the,test,s,code,application,context,li,li,link,org,springframework,transaction,annotation,transaction,management,configurer,transaction,management,configurer,has,been,implemented,to,specify,which,code,platform,transaction,manager,bean,should,be,used,for,annotation,driven,transaction,management,li,li,the,code,platform,transaction,manager,to,use,is,named,code,transaction,manager,li,ol,see,org,springframework,test,context,transaction,test,context,transaction,utils,retrieve,transaction,manager;string,transaction,manager,default
SqlConfig -> String transactionManager() default ""_;1458754769;The bean name of the {@link org.springframework.transaction.PlatformTransactionManager_PlatformTransactionManager} that should be used to drive transactions._<p>The name is only used if there is more than one bean of type_{@code PlatformTransactionManager} in the test's {@code ApplicationContext}._If there is only one such bean, it is not necessary to specify a bean name._<p>Defaults to an empty string, requiring that one of the following is_true:_<ol>_<li>An explicit bean name is defined in a global declaration of_{@code @SqlConfig}._<li>There is only one bean of type {@code PlatformTransactionManager} in_the test's {@code ApplicationContext}.</li>_<li>{@link org.springframework.transaction.annotation.TransactionManagementConfigurer_TransactionManagementConfigurer} has been implemented to specify which_{@code PlatformTransactionManager} bean should be used for annotation-driven_transaction management.</li>_<li>The {@code PlatformTransactionManager} to use is named_{@code "transactionManager"}.</li>_</ol>_@see org.springframework.test.context.transaction.TestContextTransactionUtils#retrieveTransactionManager;String transactionManager() default ""_;the,bean,name,of,the,link,org,springframework,transaction,platform,transaction,manager,platform,transaction,manager,that,should,be,used,to,drive,transactions,p,the,name,is,only,used,if,there,is,more,than,one,bean,of,type,code,platform,transaction,manager,in,the,test,s,code,application,context,if,there,is,only,one,such,bean,it,is,not,necessary,to,specify,a,bean,name,p,defaults,to,an,empty,string,requiring,that,one,of,the,following,is,true,ol,li,an,explicit,bean,name,is,defined,in,a,global,declaration,of,code,sql,config,li,there,is,only,one,bean,of,type,code,platform,transaction,manager,in,the,test,s,code,application,context,li,li,link,org,springframework,transaction,annotation,transaction,management,configurer,transaction,management,configurer,has,been,implemented,to,specify,which,code,platform,transaction,manager,bean,should,be,used,for,annotation,driven,transaction,management,li,li,the,code,platform,transaction,manager,to,use,is,named,code,transaction,manager,li,ol,see,org,springframework,test,context,transaction,test,context,transaction,utils,retrieve,transaction,manager;string,transaction,manager,default
SqlConfig -> String commentPrefix() default ""_;1405524203;The prefix that identifies single-line comments within the SQL scripts._<p>Implicitly defaults to {@code "--"}._@see ScriptUtils#DEFAULT_COMMENT_PREFIX;String commentPrefix() default ""_;the,prefix,that,identifies,single,line,comments,within,the,sql,scripts,p,implicitly,defaults,to,code,see,script,utils;string,comment,prefix,default
SqlConfig -> String commentPrefix() default ""_;1405645143;The prefix that identifies single-line comments within the SQL scripts._<p>Implicitly defaults to {@code "--"}._@see org.springframework.jdbc.datasource.init.ScriptUtils#DEFAULT_COMMENT_PREFIX;String commentPrefix() default ""_;the,prefix,that,identifies,single,line,comments,within,the,sql,scripts,p,implicitly,defaults,to,code,see,org,springframework,jdbc,datasource,init,script,utils;string,comment,prefix,default
SqlConfig -> String commentPrefix() default ""_;1413848647;The prefix that identifies single-line comments within the SQL scripts._<p>Implicitly defaults to {@code "--"}._@see org.springframework.jdbc.datasource.init.ScriptUtils#DEFAULT_COMMENT_PREFIX;String commentPrefix() default ""_;the,prefix,that,identifies,single,line,comments,within,the,sql,scripts,p,implicitly,defaults,to,code,see,org,springframework,jdbc,datasource,init,script,utils;string,comment,prefix,default
SqlConfig -> String commentPrefix() default ""_;1456234269;The prefix that identifies single-line comments within the SQL scripts._<p>Implicitly defaults to {@code "--"}._@see org.springframework.jdbc.datasource.init.ScriptUtils#DEFAULT_COMMENT_PREFIX;String commentPrefix() default ""_;the,prefix,that,identifies,single,line,comments,within,the,sql,scripts,p,implicitly,defaults,to,code,see,org,springframework,jdbc,datasource,init,script,utils;string,comment,prefix,default
SqlConfig -> String commentPrefix() default ""_;1458754769;The prefix that identifies single-line comments within the SQL scripts._<p>Implicitly defaults to {@code "--"}._@see org.springframework.jdbc.datasource.init.ScriptUtils#DEFAULT_COMMENT_PREFIX;String commentPrefix() default ""_;the,prefix,that,identifies,single,line,comments,within,the,sql,scripts,p,implicitly,defaults,to,code,see,org,springframework,jdbc,datasource,init,script,utils;string,comment,prefix,default
SqlConfig -> String blockCommentStartDelimiter() default ""_;1405524203;The start delimiter that identifies block comments within the SQL scripts._<p>Implicitly defaults to {@code "/*"}._@see #blockCommentEndDelimiter_@see ScriptUtils#DEFAULT_BLOCK_COMMENT_START_DELIMITER;String blockCommentStartDelimiter() default ""_;the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,implicitly,defaults,to,code,see,block,comment,end,delimiter,see,script,utils;string,block,comment,start,delimiter,default
SqlConfig -> String blockCommentStartDelimiter() default ""_;1405645143;The start delimiter that identifies block comments within the SQL scripts._<p>Implicitly defaults to {@code "/*"}._@see #blockCommentEndDelimiter_@see org.springframework.jdbc.datasource.init.ScriptUtils#DEFAULT_BLOCK_COMMENT_START_DELIMITER;String blockCommentStartDelimiter() default ""_;the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,implicitly,defaults,to,code,see,block,comment,end,delimiter,see,org,springframework,jdbc,datasource,init,script,utils;string,block,comment,start,delimiter,default
SqlConfig -> String blockCommentStartDelimiter() default ""_;1413848647;The start delimiter that identifies block comments within the SQL scripts._<p>Implicitly defaults to {@code "/*"}._@see #blockCommentEndDelimiter_@see org.springframework.jdbc.datasource.init.ScriptUtils#DEFAULT_BLOCK_COMMENT_START_DELIMITER;String blockCommentStartDelimiter() default ""_;the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,implicitly,defaults,to,code,see,block,comment,end,delimiter,see,org,springframework,jdbc,datasource,init,script,utils;string,block,comment,start,delimiter,default
SqlConfig -> String blockCommentStartDelimiter() default ""_;1456234269;The start delimiter that identifies block comments within the SQL scripts._<p>Implicitly defaults to {@code "/*"}._@see #blockCommentEndDelimiter_@see org.springframework.jdbc.datasource.init.ScriptUtils#DEFAULT_BLOCK_COMMENT_START_DELIMITER;String blockCommentStartDelimiter() default ""_;the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,implicitly,defaults,to,code,see,block,comment,end,delimiter,see,org,springframework,jdbc,datasource,init,script,utils;string,block,comment,start,delimiter,default
SqlConfig -> String blockCommentStartDelimiter() default ""_;1458754769;The start delimiter that identifies block comments within the SQL scripts._<p>Implicitly defaults to {@code "/*"}._@see #blockCommentEndDelimiter_@see org.springframework.jdbc.datasource.init.ScriptUtils#DEFAULT_BLOCK_COMMENT_START_DELIMITER;String blockCommentStartDelimiter() default ""_;the,start,delimiter,that,identifies,block,comments,within,the,sql,scripts,p,implicitly,defaults,to,code,see,block,comment,end,delimiter,see,org,springframework,jdbc,datasource,init,script,utils;string,block,comment,start,delimiter,default
SqlConfig -> TransactionMode transactionMode() default TransactionMode.DEFAULT_;1405524203;The <em>mode</em> to use when determining whether SQL scripts should be_executed within a transaction._<p>Defaults to {@link TransactionMode#DEFAULT DEFAULT}._<p>Can be set to {@link TransactionMode#ISOLATED} to ensure that the SQL_scripts are executed in a new, isolated transaction that will be immediately_committed._@see TransactionMode;TransactionMode transactionMode() default TransactionMode.DEFAULT_;the,em,mode,em,to,use,when,determining,whether,sql,scripts,should,be,executed,within,a,transaction,p,defaults,to,link,transaction,mode,default,default,p,can,be,set,to,link,transaction,mode,isolated,to,ensure,that,the,sql,scripts,are,executed,in,a,new,isolated,transaction,that,will,be,immediately,committed,see,transaction,mode;transaction,mode,transaction,mode,default,transaction,mode,default
SqlConfig -> TransactionMode transactionMode() default TransactionMode.DEFAULT_;1405645143;The <em>mode</em> to use when determining whether SQL scripts should be_executed within a transaction._<p>Defaults to {@link TransactionMode#DEFAULT DEFAULT}._<p>Can be set to {@link TransactionMode#ISOLATED} to ensure that the SQL_scripts are executed in a new, isolated transaction that will be immediately_committed._@see TransactionMode;TransactionMode transactionMode() default TransactionMode.DEFAULT_;the,em,mode,em,to,use,when,determining,whether,sql,scripts,should,be,executed,within,a,transaction,p,defaults,to,link,transaction,mode,default,default,p,can,be,set,to,link,transaction,mode,isolated,to,ensure,that,the,sql,scripts,are,executed,in,a,new,isolated,transaction,that,will,be,immediately,committed,see,transaction,mode;transaction,mode,transaction,mode,default,transaction,mode,default
SqlConfig -> TransactionMode transactionMode() default TransactionMode.DEFAULT_;1413848647;The <em>mode</em> to use when determining whether SQL scripts should be_executed within a transaction._<p>Defaults to {@link TransactionMode#DEFAULT DEFAULT}._<p>Can be set to {@link TransactionMode#ISOLATED} to ensure that the SQL_scripts are executed in a new, isolated transaction that will be immediately_committed._@see TransactionMode;TransactionMode transactionMode() default TransactionMode.DEFAULT_;the,em,mode,em,to,use,when,determining,whether,sql,scripts,should,be,executed,within,a,transaction,p,defaults,to,link,transaction,mode,default,default,p,can,be,set,to,link,transaction,mode,isolated,to,ensure,that,the,sql,scripts,are,executed,in,a,new,isolated,transaction,that,will,be,immediately,committed,see,transaction,mode;transaction,mode,transaction,mode,default,transaction,mode,default
SqlConfig -> TransactionMode transactionMode() default TransactionMode.DEFAULT_;1456234269;The <em>mode</em> to use when determining whether SQL scripts should be_executed within a transaction._<p>Defaults to {@link TransactionMode#DEFAULT DEFAULT}._<p>Can be set to {@link TransactionMode#ISOLATED} to ensure that the SQL_scripts are executed in a new, isolated transaction that will be immediately_committed._@see TransactionMode;TransactionMode transactionMode() default TransactionMode.DEFAULT_;the,em,mode,em,to,use,when,determining,whether,sql,scripts,should,be,executed,within,a,transaction,p,defaults,to,link,transaction,mode,default,default,p,can,be,set,to,link,transaction,mode,isolated,to,ensure,that,the,sql,scripts,are,executed,in,a,new,isolated,transaction,that,will,be,immediately,committed,see,transaction,mode;transaction,mode,transaction,mode,default,transaction,mode,default
SqlConfig -> TransactionMode transactionMode() default TransactionMode.DEFAULT_;1458754769;The <em>mode</em> to use when determining whether SQL scripts should be_executed within a transaction._<p>Defaults to {@link TransactionMode#DEFAULT DEFAULT}._<p>Can be set to {@link TransactionMode#ISOLATED} to ensure that the SQL_scripts are executed in a new, isolated transaction that will be immediately_committed._@see TransactionMode;TransactionMode transactionMode() default TransactionMode.DEFAULT_;the,em,mode,em,to,use,when,determining,whether,sql,scripts,should,be,executed,within,a,transaction,p,defaults,to,link,transaction,mode,default,default,p,can,be,set,to,link,transaction,mode,isolated,to,ensure,that,the,sql,scripts,are,executed,in,a,new,isolated,transaction,that,will,be,immediately,committed,see,transaction,mode;transaction,mode,transaction,mode,default,transaction,mode,default
SqlConfig -> String separator() default ""_;1405524203;The character string used to separate individual statements within the_SQL scripts._<p>Implicitly defaults to {@code "_"} if not specified and falls back to_{@code "\n"} as a last resort._<p>May be set to {@link ScriptUtils#EOF_STATEMENT_SEPARATOR} to signal_that each script contains a single statement without a separator._@see ScriptUtils#DEFAULT_STATEMENT_SEPARATOR;String separator() default ""_;the,character,string,used,to,separate,individual,statements,within,the,sql,scripts,p,implicitly,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,p,may,be,set,to,link,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,see,script,utils;string,separator,default
SqlConfig -> String separator() default ""_;1405645143;The character string used to separate individual statements within the_SQL scripts._<p>Implicitly defaults to {@code "_"} if not specified and falls back to_{@code "\n"} as a last resort._<p>May be set to_{@link org.springframework.jdbc.datasource.init.ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a_separator._@see org.springframework.jdbc.datasource.init.ScriptUtils#DEFAULT_STATEMENT_SEPARATOR_@see org.springframework.jdbc.datasource.init.ScriptUtils#EOF_STATEMENT_SEPARATOR;String separator() default ""_;the,character,string,used,to,separate,individual,statements,within,the,sql,scripts,p,implicitly,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,p,may,be,set,to,link,org,springframework,jdbc,datasource,init,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,see,org,springframework,jdbc,datasource,init,script,utils,see,org,springframework,jdbc,datasource,init,script,utils;string,separator,default
SqlConfig -> String separator() default ""_;1413848647;The character string used to separate individual statements within the_SQL scripts._<p>Implicitly defaults to {@code "_"} if not specified and falls back to_{@code "\n"} as a last resort._<p>May be set to_{@link org.springframework.jdbc.datasource.init.ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a_separator._@see org.springframework.jdbc.datasource.init.ScriptUtils#DEFAULT_STATEMENT_SEPARATOR_@see org.springframework.jdbc.datasource.init.ScriptUtils#EOF_STATEMENT_SEPARATOR;String separator() default ""_;the,character,string,used,to,separate,individual,statements,within,the,sql,scripts,p,implicitly,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,p,may,be,set,to,link,org,springframework,jdbc,datasource,init,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,see,org,springframework,jdbc,datasource,init,script,utils,see,org,springframework,jdbc,datasource,init,script,utils;string,separator,default
SqlConfig -> String separator() default ""_;1456234269;The character string used to separate individual statements within the_SQL scripts._<p>Implicitly defaults to {@code "_"} if not specified and falls back to_{@code "\n"} as a last resort._<p>May be set to_{@link org.springframework.jdbc.datasource.init.ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a_separator._@see org.springframework.jdbc.datasource.init.ScriptUtils#DEFAULT_STATEMENT_SEPARATOR_@see org.springframework.jdbc.datasource.init.ScriptUtils#EOF_STATEMENT_SEPARATOR;String separator() default ""_;the,character,string,used,to,separate,individual,statements,within,the,sql,scripts,p,implicitly,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,p,may,be,set,to,link,org,springframework,jdbc,datasource,init,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,see,org,springframework,jdbc,datasource,init,script,utils,see,org,springframework,jdbc,datasource,init,script,utils;string,separator,default
SqlConfig -> String separator() default ""_;1458754769;The character string used to separate individual statements within the_SQL scripts._<p>Implicitly defaults to {@code "_"} if not specified and falls back to_{@code "\n"} as a last resort._<p>May be set to_{@link org.springframework.jdbc.datasource.init.ScriptUtils#EOF_STATEMENT_SEPARATOR}_to signal that each script contains a single statement without a_separator._@see org.springframework.jdbc.datasource.init.ScriptUtils#DEFAULT_STATEMENT_SEPARATOR_@see org.springframework.jdbc.datasource.init.ScriptUtils#EOF_STATEMENT_SEPARATOR;String separator() default ""_;the,character,string,used,to,separate,individual,statements,within,the,sql,scripts,p,implicitly,defaults,to,code,if,not,specified,and,falls,back,to,code,n,as,a,last,resort,p,may,be,set,to,link,org,springframework,jdbc,datasource,init,script,utils,to,signal,that,each,script,contains,a,single,statement,without,a,separator,see,org,springframework,jdbc,datasource,init,script,utils,see,org,springframework,jdbc,datasource,init,script,utils;string,separator,default
SqlConfig -> String encoding() default ""_;1405524203;The encoding for the supplied SQL scripts, if different from the platform_encoding._<p>An empty string denotes that the platform encoding should be used.;String encoding() default ""_;the,encoding,for,the,supplied,sql,scripts,if,different,from,the,platform,encoding,p,an,empty,string,denotes,that,the,platform,encoding,should,be,used;string,encoding,default
SqlConfig -> String encoding() default ""_;1405645143;The encoding for the supplied SQL scripts, if different from the platform_encoding._<p>An empty string denotes that the platform encoding should be used.;String encoding() default ""_;the,encoding,for,the,supplied,sql,scripts,if,different,from,the,platform,encoding,p,an,empty,string,denotes,that,the,platform,encoding,should,be,used;string,encoding,default
SqlConfig -> String encoding() default ""_;1413848647;The encoding for the supplied SQL scripts, if different from the platform_encoding._<p>An empty string denotes that the platform encoding should be used.;String encoding() default ""_;the,encoding,for,the,supplied,sql,scripts,if,different,from,the,platform,encoding,p,an,empty,string,denotes,that,the,platform,encoding,should,be,used;string,encoding,default
SqlConfig -> String encoding() default ""_;1456234269;The encoding for the supplied SQL scripts, if different from the platform_encoding._<p>An empty string denotes that the platform encoding should be used.;String encoding() default ""_;the,encoding,for,the,supplied,sql,scripts,if,different,from,the,platform,encoding,p,an,empty,string,denotes,that,the,platform,encoding,should,be,used;string,encoding,default
SqlConfig -> String encoding() default ""_;1458754769;The encoding for the supplied SQL scripts, if different from the platform_encoding._<p>An empty string denotes that the platform encoding should be used.;String encoding() default ""_;the,encoding,for,the,supplied,sql,scripts,if,different,from,the,platform,encoding,p,an,empty,string,denotes,that,the,platform,encoding,should,be,used;string,encoding,default
