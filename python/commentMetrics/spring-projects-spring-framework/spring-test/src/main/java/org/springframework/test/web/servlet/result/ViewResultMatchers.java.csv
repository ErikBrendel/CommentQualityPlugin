# id;timestamp;commentText;codeText;commentWords;codeWords
ViewResultMatchers -> protected ViewResultMatchers();1383669853;Protected constructor._Use {@link MockMvcResultMatchers#view()}.;protected ViewResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,view;protected,view,result,matchers
ViewResultMatchers -> protected ViewResultMatchers();1413848647;Protected constructor._Use {@link MockMvcResultMatchers#view()}.;protected ViewResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,view;protected,view,result,matchers
ViewResultMatchers -> protected ViewResultMatchers();1427238287;Protected constructor._Use {@link MockMvcResultMatchers#view()}.;protected ViewResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,view;protected,view,result,matchers
ViewResultMatchers -> protected ViewResultMatchers();1437424890;Protected constructor._Use {@link MockMvcResultMatchers#view()}.;protected ViewResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,view;protected,view,result,matchers
ViewResultMatchers -> protected ViewResultMatchers();1493235170;Protected constructor._Use {@link MockMvcResultMatchers#view()}.;protected ViewResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,view;protected,view,result,matchers
ViewResultMatchers -> protected ViewResultMatchers();1496955179;Protected constructor._Use {@link MockMvcResultMatchers#view()}.;protected ViewResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,view;protected,view,result,matchers
ViewResultMatchers -> protected ViewResultMatchers();1530174524;Protected constructor._Use {@link MockMvcResultMatchers#view()}.;protected ViewResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,view;protected,view,result,matchers
ViewResultMatchers -> public ResultMatcher name(final String expectedViewName);1383669853;Assert the selected view name.;public ResultMatcher name(final String expectedViewName) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				ModelAndView mav = result.getModelAndView()__				assertTrue("No ModelAndView found", mav != null)__				assertEquals("View name", expectedViewName, mav.getViewName())__			}_		}__	};assert,the,selected,view,name;public,result,matcher,name,final,string,expected,view,name,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,model,and,view,mav,result,get,model,and,view,assert,true,no,model,and,view,found,mav,null,assert,equals,view,name,expected,view,name,mav,get,view,name
ViewResultMatchers -> public ResultMatcher name(final String expectedViewName);1413848647;Assert the selected view name.;public ResultMatcher name(final String expectedViewName) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				ModelAndView mav = result.getModelAndView()__				assertTrue("No ModelAndView found", mav != null)__				assertEquals("View name", expectedViewName, mav.getViewName())__			}_		}__	};assert,the,selected,view,name;public,result,matcher,name,final,string,expected,view,name,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,model,and,view,mav,result,get,model,and,view,assert,true,no,model,and,view,found,mav,null,assert,equals,view,name,expected,view,name,mav,get,view,name
ViewResultMatchers -> public ResultMatcher name(final String expectedViewName);1427238287;Assert the selected view name.;public ResultMatcher name(final String expectedViewName) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				ModelAndView mav = result.getModelAndView()__				assertTrue("No ModelAndView found", mav != null)__				assertEquals("View name", expectedViewName, mav.getViewName())__			}_		}__	};assert,the,selected,view,name;public,result,matcher,name,final,string,expected,view,name,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,model,and,view,mav,result,get,model,and,view,assert,true,no,model,and,view,found,mav,null,assert,equals,view,name,expected,view,name,mav,get,view,name
ViewResultMatchers -> public ResultMatcher name(final String expectedViewName);1437424890;Assert the selected view name.;public ResultMatcher name(final String expectedViewName) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				ModelAndView mav = result.getModelAndView()__				assertTrue("No ModelAndView found", mav != null)__				assertEquals("View name", expectedViewName, mav.getViewName())__			}_		}__	};assert,the,selected,view,name;public,result,matcher,name,final,string,expected,view,name,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,model,and,view,mav,result,get,model,and,view,assert,true,no,model,and,view,found,mav,null,assert,equals,view,name,expected,view,name,mav,get,view,name
ViewResultMatchers -> public ResultMatcher name(final String expectedViewName);1493235170;Assert the selected view name.;public ResultMatcher name(final String expectedViewName) {_		return result -> {_			ModelAndView mav = result.getModelAndView()__			assertTrue("No ModelAndView found", mav != null)__			assertEquals("View name", expectedViewName, mav.getViewName())__		}__	};assert,the,selected,view,name;public,result,matcher,name,final,string,expected,view,name,return,result,model,and,view,mav,result,get,model,and,view,assert,true,no,model,and,view,found,mav,null,assert,equals,view,name,expected,view,name,mav,get,view,name
ViewResultMatchers -> public ResultMatcher name(final String expectedViewName);1496955179;Assert the selected view name.;public ResultMatcher name(final String expectedViewName) {_		return result -> {_			ModelAndView mav = result.getModelAndView()__			if (mav == null) {_				fail("No ModelAndView found")__			}_			assertEquals("View name", expectedViewName, mav.getViewName())__		}__	};assert,the,selected,view,name;public,result,matcher,name,final,string,expected,view,name,return,result,model,and,view,mav,result,get,model,and,view,if,mav,null,fail,no,model,and,view,found,assert,equals,view,name,expected,view,name,mav,get,view,name
ViewResultMatchers -> public ResultMatcher name(final String expectedViewName);1530174524;Assert the selected view name.;public ResultMatcher name(final String expectedViewName) {_		return result -> {_			ModelAndView mav = result.getModelAndView()__			if (mav == null) {_				fail("No ModelAndView found")__			}_			assertEquals("View name", expectedViewName, mav.getViewName())__		}__	};assert,the,selected,view,name;public,result,matcher,name,final,string,expected,view,name,return,result,model,and,view,mav,result,get,model,and,view,if,mav,null,fail,no,model,and,view,found,assert,equals,view,name,expected,view,name,mav,get,view,name
ViewResultMatchers -> public ResultMatcher name(final Matcher<? super String> matcher);1383669853;Assert the selected view name with the given Hamcrest {@link Matcher}.;public ResultMatcher name(final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				ModelAndView mav = result.getModelAndView()__				assertTrue("No ModelAndView found", mav != null)__				assertThat("View name", mav.getViewName(), matcher)__			}_		}__	};assert,the,selected,view,name,with,the,given,hamcrest,link,matcher;public,result,matcher,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,model,and,view,mav,result,get,model,and,view,assert,true,no,model,and,view,found,mav,null,assert,that,view,name,mav,get,view,name,matcher
ViewResultMatchers -> public ResultMatcher name(final Matcher<? super String> matcher);1413848647;Assert the selected view name with the given Hamcrest {@link Matcher}.;public ResultMatcher name(final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				ModelAndView mav = result.getModelAndView()__				assertTrue("No ModelAndView found", mav != null)__				assertThat("View name", mav.getViewName(), matcher)__			}_		}__	};assert,the,selected,view,name,with,the,given,hamcrest,link,matcher;public,result,matcher,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,model,and,view,mav,result,get,model,and,view,assert,true,no,model,and,view,found,mav,null,assert,that,view,name,mav,get,view,name,matcher
ViewResultMatchers -> public ResultMatcher name(final Matcher<? super String> matcher);1427238287;Assert the selected view name with the given Hamcrest {@link Matcher}.;public ResultMatcher name(final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				ModelAndView mav = result.getModelAndView()__				assertTrue("No ModelAndView found", mav != null)__				assertThat("View name", mav.getViewName(), matcher)__			}_		}__	};assert,the,selected,view,name,with,the,given,hamcrest,link,matcher;public,result,matcher,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,model,and,view,mav,result,get,model,and,view,assert,true,no,model,and,view,found,mav,null,assert,that,view,name,mav,get,view,name,matcher
ViewResultMatchers -> public ResultMatcher name(final Matcher<? super String> matcher);1437424890;Assert the selected view name with the given Hamcrest {@link Matcher}.;public ResultMatcher name(final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) throws Exception {_				ModelAndView mav = result.getModelAndView()__				assertTrue("No ModelAndView found", mav != null)__				assertThat("View name", mav.getViewName(), matcher)__			}_		}__	};assert,the,selected,view,name,with,the,given,hamcrest,link,matcher;public,result,matcher,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,throws,exception,model,and,view,mav,result,get,model,and,view,assert,true,no,model,and,view,found,mav,null,assert,that,view,name,mav,get,view,name,matcher
ViewResultMatchers -> public ResultMatcher name(final Matcher<? super String> matcher);1493235170;Assert the selected view name with the given Hamcrest {@link Matcher}.;public ResultMatcher name(final Matcher<? super String> matcher) {_		return result -> {_			ModelAndView mav = result.getModelAndView()__			assertTrue("No ModelAndView found", mav != null)__			assertThat("View name", mav.getViewName(), matcher)__		}__	};assert,the,selected,view,name,with,the,given,hamcrest,link,matcher;public,result,matcher,name,final,matcher,super,string,matcher,return,result,model,and,view,mav,result,get,model,and,view,assert,true,no,model,and,view,found,mav,null,assert,that,view,name,mav,get,view,name,matcher
ViewResultMatchers -> public ResultMatcher name(final Matcher<? super String> matcher);1496955179;Assert the selected view name with the given Hamcrest {@link Matcher}.;public ResultMatcher name(final Matcher<? super String> matcher) {_		return result -> {_			ModelAndView mav = result.getModelAndView()__			if (mav == null) {_				fail("No ModelAndView found")__			}_			assertThat("View name", mav.getViewName(), matcher)__		}__	};assert,the,selected,view,name,with,the,given,hamcrest,link,matcher;public,result,matcher,name,final,matcher,super,string,matcher,return,result,model,and,view,mav,result,get,model,and,view,if,mav,null,fail,no,model,and,view,found,assert,that,view,name,mav,get,view,name,matcher
ViewResultMatchers -> public ResultMatcher name(final Matcher<? super String> matcher);1530174524;Assert the selected view name with the given Hamcrest {@link Matcher}.;public ResultMatcher name(final Matcher<? super String> matcher) {_		return result -> {_			ModelAndView mav = result.getModelAndView()__			if (mav == null) {_				fail("No ModelAndView found")__			}_			assertThat("View name", mav.getViewName(), matcher)__		}__	};assert,the,selected,view,name,with,the,given,hamcrest,link,matcher;public,result,matcher,name,final,matcher,super,string,matcher,return,result,model,and,view,mav,result,get,model,and,view,if,mav,null,fail,no,model,and,view,found,assert,that,view,name,mav,get,view,name,matcher
