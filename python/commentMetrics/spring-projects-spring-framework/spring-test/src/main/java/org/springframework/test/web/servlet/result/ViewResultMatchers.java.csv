commented;modifiers;parameterAmount;loc;comment;code
true;public;1;9;/**  * Assert the selected view name with the given Hamcrest {@link Matcher}.  */ ;/**  * Assert the selected view name with the given Hamcrest {@link Matcher}.  */ public ResultMatcher name(final Matcher<? super String> matcher) {     return result -> {         ModelAndView mav = result.getModelAndView().         if (mav == null) {             fail("No ModelAndView found").         }         assertThat("View name", mav.getViewName(), matcher).     }. }
true;public;1;9;/**  * Assert the selected view name.  */ ;/**  * Assert the selected view name.  */ public ResultMatcher name(final String expectedViewName) {     return result -> {         ModelAndView mav = result.getModelAndView().         if (mav == null) {             fail("No ModelAndView found").         }         assertEquals("View name", expectedViewName, mav.getViewName()).     }. }
