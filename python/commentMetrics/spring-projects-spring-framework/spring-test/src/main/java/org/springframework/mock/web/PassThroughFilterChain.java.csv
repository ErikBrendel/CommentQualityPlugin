# id;timestamp;commentText;codeText;commentWords;codeWords
PassThroughFilterChain -> public void doFilter(ServletRequest request, ServletResponse response) throws ServletException, IOException;1328020251;Pass the call on to the Filter/Servlet.;public void doFilter(ServletRequest request, ServletResponse response) throws ServletException, IOException {_		if (this.filter != null) {_			this.filter.doFilter(request, response, this.nextFilterChain)__		}_		else {_			this.servlet.service(request, response)__		}_	};pass,the,call,on,to,the,filter,servlet;public,void,do,filter,servlet,request,request,servlet,response,response,throws,servlet,exception,ioexception,if,this,filter,null,this,filter,do,filter,request,response,this,next,filter,chain,else,this,servlet,service,request,response
PassThroughFilterChain -> public void doFilter(ServletRequest request, ServletResponse response) throws ServletException, IOException;1357119239;Pass the call on to the Filter/Servlet.;public void doFilter(ServletRequest request, ServletResponse response) throws ServletException, IOException {_		if (this.filter != null) {_			this.filter.doFilter(request, response, this.nextFilterChain)__		}_		else {_			this.servlet.service(request, response)__		}_	};pass,the,call,on,to,the,filter,servlet;public,void,do,filter,servlet,request,request,servlet,response,response,throws,servlet,exception,ioexception,if,this,filter,null,this,filter,do,filter,request,response,this,next,filter,chain,else,this,servlet,service,request,response
PassThroughFilterChain -> public PassThroughFilterChain(Filter filter, FilterChain nextFilterChain);1328020251;Create a new PassThroughFilterChain that delegates to the given Filter,_calling it with the given FilterChain._@param filter the Filter to delegate to_@param nextFilterChain the FilterChain to use for that next Filter;public PassThroughFilterChain(Filter filter, FilterChain nextFilterChain) {_		Assert.notNull(filter, "Filter must not be null")__		Assert.notNull(nextFilterChain, "'FilterChain must not be null")__		this.filter = filter__		this.nextFilterChain = nextFilterChain__	};create,a,new,pass,through,filter,chain,that,delegates,to,the,given,filter,calling,it,with,the,given,filter,chain,param,filter,the,filter,to,delegate,to,param,next,filter,chain,the,filter,chain,to,use,for,that,next,filter;public,pass,through,filter,chain,filter,filter,filter,chain,next,filter,chain,assert,not,null,filter,filter,must,not,be,null,assert,not,null,next,filter,chain,filter,chain,must,not,be,null,this,filter,filter,this,next,filter,chain,next,filter,chain
PassThroughFilterChain -> public PassThroughFilterChain(Filter filter, FilterChain nextFilterChain);1356735495;Create a new PassThroughFilterChain that delegates to the given Filter,_calling it with the given FilterChain._@param filter the Filter to delegate to_@param nextFilterChain the FilterChain to use for that next Filter;public PassThroughFilterChain(Filter filter, FilterChain nextFilterChain) {_		Assert.notNull(filter, "Filter must not be null")__		Assert.notNull(nextFilterChain, "'FilterChain must not be null")__		this.filter = filter__		this.nextFilterChain = nextFilterChain__	};create,a,new,pass,through,filter,chain,that,delegates,to,the,given,filter,calling,it,with,the,given,filter,chain,param,filter,the,filter,to,delegate,to,param,next,filter,chain,the,filter,chain,to,use,for,that,next,filter;public,pass,through,filter,chain,filter,filter,filter,chain,next,filter,chain,assert,not,null,filter,filter,must,not,be,null,assert,not,null,next,filter,chain,filter,chain,must,not,be,null,this,filter,filter,this,next,filter,chain,next,filter,chain
PassThroughFilterChain -> public PassThroughFilterChain(Filter filter, FilterChain nextFilterChain);1357119239;Create a new PassThroughFilterChain that delegates to the given Filter,_calling it with the given FilterChain._@param filter the Filter to delegate to_@param nextFilterChain the FilterChain to use for that next Filter;public PassThroughFilterChain(Filter filter, FilterChain nextFilterChain) {_		Assert.notNull(filter, "Filter must not be null")__		Assert.notNull(nextFilterChain, "'FilterChain must not be null")__		this.filter = filter__		this.nextFilterChain = nextFilterChain__	};create,a,new,pass,through,filter,chain,that,delegates,to,the,given,filter,calling,it,with,the,given,filter,chain,param,filter,the,filter,to,delegate,to,param,next,filter,chain,the,filter,chain,to,use,for,that,next,filter;public,pass,through,filter,chain,filter,filter,filter,chain,next,filter,chain,assert,not,null,filter,filter,must,not,be,null,assert,not,null,next,filter,chain,filter,chain,must,not,be,null,this,filter,filter,this,next,filter,chain,next,filter,chain
PassThroughFilterChain -> public PassThroughFilterChain(Filter filter, FilterChain nextFilterChain);1368482696;Create a new PassThroughFilterChain that delegates to the given Filter,_calling it with the given FilterChain._@param filter the Filter to delegate to_@param nextFilterChain the FilterChain to use for that next Filter;public PassThroughFilterChain(Filter filter, FilterChain nextFilterChain) {_		Assert.notNull(filter, "Filter must not be null")__		Assert.notNull(nextFilterChain, "'FilterChain must not be null")__		this.filter = filter__		this.nextFilterChain = nextFilterChain__	};create,a,new,pass,through,filter,chain,that,delegates,to,the,given,filter,calling,it,with,the,given,filter,chain,param,filter,the,filter,to,delegate,to,param,next,filter,chain,the,filter,chain,to,use,for,that,next,filter;public,pass,through,filter,chain,filter,filter,filter,chain,next,filter,chain,assert,not,null,filter,filter,must,not,be,null,assert,not,null,next,filter,chain,filter,chain,must,not,be,null,this,filter,filter,this,next,filter,chain,next,filter,chain
PassThroughFilterChain -> public PassThroughFilterChain(Filter filter, FilterChain nextFilterChain);1498780456;Create a new PassThroughFilterChain that delegates to the given Filter,_calling it with the given FilterChain._@param filter the Filter to delegate to_@param nextFilterChain the FilterChain to use for that next Filter;public PassThroughFilterChain(Filter filter, FilterChain nextFilterChain) {_		Assert.notNull(filter, "Filter must not be null")__		Assert.notNull(nextFilterChain, "'FilterChain must not be null")__		this.filter = filter__		this.nextFilterChain = nextFilterChain__	};create,a,new,pass,through,filter,chain,that,delegates,to,the,given,filter,calling,it,with,the,given,filter,chain,param,filter,the,filter,to,delegate,to,param,next,filter,chain,the,filter,chain,to,use,for,that,next,filter;public,pass,through,filter,chain,filter,filter,filter,chain,next,filter,chain,assert,not,null,filter,filter,must,not,be,null,assert,not,null,next,filter,chain,filter,chain,must,not,be,null,this,filter,filter,this,next,filter,chain,next,filter,chain
PassThroughFilterChain -> public PassThroughFilterChain(Filter filter, FilterChain nextFilterChain);1537741670;Create a new PassThroughFilterChain that delegates to the given Filter,_calling it with the given FilterChain._@param filter the Filter to delegate to_@param nextFilterChain the FilterChain to use for that next Filter;public PassThroughFilterChain(Filter filter, FilterChain nextFilterChain) {_		Assert.notNull(filter, "Filter must not be null")__		Assert.notNull(nextFilterChain, "'FilterChain must not be null")__		this.filter = filter__		this.nextFilterChain = nextFilterChain__	};create,a,new,pass,through,filter,chain,that,delegates,to,the,given,filter,calling,it,with,the,given,filter,chain,param,filter,the,filter,to,delegate,to,param,next,filter,chain,the,filter,chain,to,use,for,that,next,filter;public,pass,through,filter,chain,filter,filter,filter,chain,next,filter,chain,assert,not,null,filter,filter,must,not,be,null,assert,not,null,next,filter,chain,filter,chain,must,not,be,null,this,filter,filter,this,next,filter,chain,next,filter,chain
PassThroughFilterChain -> public PassThroughFilterChain(Servlet servlet);1328020251;Create a new PassThroughFilterChain that delegates to the given Servlet._@param servlet the Servlet to delegate to;public PassThroughFilterChain(Servlet servlet) {_		Assert.notNull(servlet, "Servlet must not be null")__		this.servlet = servlet__	};create,a,new,pass,through,filter,chain,that,delegates,to,the,given,servlet,param,servlet,the,servlet,to,delegate,to;public,pass,through,filter,chain,servlet,servlet,assert,not,null,servlet,servlet,must,not,be,null,this,servlet,servlet
PassThroughFilterChain -> public PassThroughFilterChain(Servlet servlet);1356735495;Create a new PassThroughFilterChain that delegates to the given Servlet._@param servlet the Servlet to delegate to;public PassThroughFilterChain(Servlet servlet) {_		Assert.notNull(servlet, "Servlet must not be null")__		this.servlet = servlet__	};create,a,new,pass,through,filter,chain,that,delegates,to,the,given,servlet,param,servlet,the,servlet,to,delegate,to;public,pass,through,filter,chain,servlet,servlet,assert,not,null,servlet,servlet,must,not,be,null,this,servlet,servlet
PassThroughFilterChain -> public PassThroughFilterChain(Servlet servlet);1357119239;Create a new PassThroughFilterChain that delegates to the given Servlet._@param servlet the Servlet to delegate to;public PassThroughFilterChain(Servlet servlet) {_		Assert.notNull(servlet, "Servlet must not be null")__		this.servlet = servlet__	};create,a,new,pass,through,filter,chain,that,delegates,to,the,given,servlet,param,servlet,the,servlet,to,delegate,to;public,pass,through,filter,chain,servlet,servlet,assert,not,null,servlet,servlet,must,not,be,null,this,servlet,servlet
PassThroughFilterChain -> public PassThroughFilterChain(Servlet servlet);1368482696;Create a new PassThroughFilterChain that delegates to the given Servlet._@param servlet the Servlet to delegate to;public PassThroughFilterChain(Servlet servlet) {_		Assert.notNull(servlet, "Servlet must not be null")__		this.servlet = servlet__	};create,a,new,pass,through,filter,chain,that,delegates,to,the,given,servlet,param,servlet,the,servlet,to,delegate,to;public,pass,through,filter,chain,servlet,servlet,assert,not,null,servlet,servlet,must,not,be,null,this,servlet,servlet
PassThroughFilterChain -> public PassThroughFilterChain(Servlet servlet);1498780456;Create a new PassThroughFilterChain that delegates to the given Servlet._@param servlet the Servlet to delegate to;public PassThroughFilterChain(Servlet servlet) {_		Assert.notNull(servlet, "Servlet must not be null")__		this.servlet = servlet__	};create,a,new,pass,through,filter,chain,that,delegates,to,the,given,servlet,param,servlet,the,servlet,to,delegate,to;public,pass,through,filter,chain,servlet,servlet,assert,not,null,servlet,servlet,must,not,be,null,this,servlet,servlet
PassThroughFilterChain -> public PassThroughFilterChain(Servlet servlet);1537741670;Create a new PassThroughFilterChain that delegates to the given Servlet._@param servlet the Servlet to delegate to;public PassThroughFilterChain(Servlet servlet) {_		Assert.notNull(servlet, "Servlet must not be null")__		this.servlet = servlet__	};create,a,new,pass,through,filter,chain,that,delegates,to,the,given,servlet,param,servlet,the,servlet,to,delegate,to;public,pass,through,filter,chain,servlet,servlet,assert,not,null,servlet,servlet,must,not,be,null,this,servlet,servlet
PassThroughFilterChain -> @Override 	public void doFilter(ServletRequest request, ServletResponse response) throws ServletException, IOException;1356735495;Pass the call on to the Filter/Servlet.;@Override_	public void doFilter(ServletRequest request, ServletResponse response) throws ServletException, IOException {_		if (this.filter != null) {_			this.filter.doFilter(request, response, this.nextFilterChain)__		}_		else {_			this.servlet.service(request, response)__		}_	};pass,the,call,on,to,the,filter,servlet;override,public,void,do,filter,servlet,request,request,servlet,response,response,throws,servlet,exception,ioexception,if,this,filter,null,this,filter,do,filter,request,response,this,next,filter,chain,else,this,servlet,service,request,response
PassThroughFilterChain -> @Override 	public void doFilter(ServletRequest request, ServletResponse response) throws ServletException, IOException;1368482696;Pass the call on to the Filter/Servlet.;@Override_	public void doFilter(ServletRequest request, ServletResponse response) throws ServletException, IOException {_		if (this.filter != null) {_			this.filter.doFilter(request, response, this.nextFilterChain)__		}_		else {_			this.servlet.service(request, response)__		}_	};pass,the,call,on,to,the,filter,servlet;override,public,void,do,filter,servlet,request,request,servlet,response,response,throws,servlet,exception,ioexception,if,this,filter,null,this,filter,do,filter,request,response,this,next,filter,chain,else,this,servlet,service,request,response
PassThroughFilterChain -> @Override 	public void doFilter(ServletRequest request, ServletResponse response) throws ServletException, IOException;1498780456;Pass the call on to the Filter/Servlet.;@Override_	public void doFilter(ServletRequest request, ServletResponse response) throws ServletException, IOException {_		if (this.filter != null) {_			this.filter.doFilter(request, response, this.nextFilterChain)__		}_		else {_			Assert.state(this.servlet != null, "Neither a Filter not a Servlet set")__			this.servlet.service(request, response)__		}_	};pass,the,call,on,to,the,filter,servlet;override,public,void,do,filter,servlet,request,request,servlet,response,response,throws,servlet,exception,ioexception,if,this,filter,null,this,filter,do,filter,request,response,this,next,filter,chain,else,assert,state,this,servlet,null,neither,a,filter,not,a,servlet,set,this,servlet,service,request,response
PassThroughFilterChain -> @Override 	public void doFilter(ServletRequest request, ServletResponse response) throws ServletException, IOException;1537741670;Pass the call on to the Filter/Servlet.;@Override_	public void doFilter(ServletRequest request, ServletResponse response) throws ServletException, IOException {_		if (this.filter != null) {_			this.filter.doFilter(request, response, this.nextFilterChain)__		}_		else {_			Assert.state(this.servlet != null, "Neither a Filter not a Servlet set")__			this.servlet.service(request, response)__		}_	};pass,the,call,on,to,the,filter,servlet;override,public,void,do,filter,servlet,request,request,servlet,response,response,throws,servlet,exception,ioexception,if,this,filter,null,this,filter,do,filter,request,response,this,next,filter,chain,else,assert,state,this,servlet,null,neither,a,filter,not,a,servlet,set,this,servlet,service,request,response
