# id;timestamp;commentText;codeText;commentWords;codeWords
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod, 			Class<?> testClass);1328020251;Determine if the supplied <code>testMethod</code> is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>_Defaults to <code>true</code> if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared.__@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param testMethod the test method_@param testClass the test class_@return <code>true</code> if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod,_			Class<?> testClass) {__		IfProfileValue ifProfileValue = testClass.getAnnotation(IfProfileValue.class)__		boolean classLevelEnabled = isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)___		if (classLevelEnabled) {_			ifProfileValue = testMethod.getAnnotation(IfProfileValue.class)__			return isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)__		}__		return false__	};determine,if,the,supplied,code,test,method,code,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,code,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,code,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,method,test,method,class,test,class,if,profile,value,if,profile,value,test,class,get,annotation,if,profile,value,class,boolean,class,level,enabled,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,if,class,level,enabled,if,profile,value,test,method,get,annotation,if,profile,value,class,return,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,return,false
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod, 			Class<?> testClass);1356735495;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>_Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared.__@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod,_			Class<?> testClass) {__		IfProfileValue ifProfileValue = testClass.getAnnotation(IfProfileValue.class)__		boolean classLevelEnabled = isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)___		if (classLevelEnabled) {_			ifProfileValue = testMethod.getAnnotation(IfProfileValue.class)__			return isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)__		}__		return false__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,method,test,method,class,test,class,if,profile,value,if,profile,value,test,class,get,annotation,if,profile,value,class,boolean,class,level,enabled,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,if,class,level,enabled,if,profile,value,test,method,get,annotation,if,profile,value,class,return,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,return,false
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod, 			Class<?> testClass);1382920864;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>_Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared.__@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod,_			Class<?> testClass) {__		IfProfileValue ifProfileValue = findAnnotation(testClass, IfProfileValue.class)__		boolean classLevelEnabled = isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)___		if (classLevelEnabled) {_			ifProfileValue = findAnnotation(testMethod, IfProfileValue.class)__			return isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)__		}__		return false__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,method,test,method,class,test,class,if,profile,value,if,profile,value,find,annotation,test,class,if,profile,value,class,boolean,class,level,enabled,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,if,class,level,enabled,if,profile,value,find,annotation,test,method,if,profile,value,class,return,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,return,false
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod, 			Class<?> testClass);1413848647;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>_Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared.__@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod,_			Class<?> testClass) {__		IfProfileValue ifProfileValue = findAnnotation(testClass, IfProfileValue.class)__		boolean classLevelEnabled = isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)___		if (classLevelEnabled) {_			ifProfileValue = findAnnotation(testMethod, IfProfileValue.class)__			return isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)__		}__		return false__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,method,test,method,class,test,class,if,profile,value,if,profile,value,find,annotation,test,class,if,profile,value,class,boolean,class,level,enabled,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,if,class,level,enabled,if,profile,value,find,annotation,test,method,if,profile,value,class,return,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,return,false
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod, 			Class<?> testClass);1432125256;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>_Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared.__@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod,_			Class<?> testClass) {__		IfProfileValue ifProfileValue = findAnnotation(testClass, IfProfileValue.class)__		boolean classLevelEnabled = isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)___		if (classLevelEnabled) {_			ifProfileValue = findAnnotation(testMethod, IfProfileValue.class)__			return isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)__		}__		return false__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,method,test,method,class,test,class,if,profile,value,if,profile,value,find,annotation,test,class,if,profile,value,class,boolean,class,level,enabled,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,if,class,level,enabled,if,profile,value,find,annotation,test,method,if,profile,value,class,return,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,return,false
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod, 			Class<?> testClass);1458754760;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared._@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod,_			Class<?> testClass) {__		IfProfileValue ifProfileValue = AnnotatedElementUtils.findMergedAnnotation(testClass, IfProfileValue.class)__		boolean classLevelEnabled = isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)___		if (classLevelEnabled) {_			ifProfileValue = AnnotatedElementUtils.findMergedAnnotation(testMethod, IfProfileValue.class)__			return isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)__		}__		return false__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,method,test,method,class,test,class,if,profile,value,if,profile,value,annotated,element,utils,find,merged,annotation,test,class,if,profile,value,class,boolean,class,level,enabled,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,if,class,level,enabled,if,profile,value,annotated,element,utils,find,merged,annotation,test,method,if,profile,value,class,return,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,return,false
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod, 			Class<?> testClass);1468334463;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared._@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod,_			Class<?> testClass) {__		IfProfileValue ifProfileValue = AnnotatedElementUtils.findMergedAnnotation(testClass, IfProfileValue.class)__		boolean classLevelEnabled = isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)___		if (classLevelEnabled) {_			ifProfileValue = AnnotatedElementUtils.findMergedAnnotation(testMethod, IfProfileValue.class)__			return isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)__		}__		return false__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,method,test,method,class,test,class,if,profile,value,if,profile,value,annotated,element,utils,find,merged,annotation,test,class,if,profile,value,class,boolean,class,level,enabled,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,if,class,level,enabled,if,profile,value,annotated,element,utils,find,merged,annotation,test,method,if,profile,value,class,return,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,return,false
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod, 			Class<?> testClass);1468948866;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared._@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod,_			Class<?> testClass) {__		IfProfileValue ifProfileValue = AnnotatedElementUtils.findMergedAnnotation(testClass, IfProfileValue.class)__		boolean classLevelEnabled = isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)___		if (classLevelEnabled) {_			ifProfileValue = AnnotatedElementUtils.findMergedAnnotation(testMethod, IfProfileValue.class)__			return isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)__		}__		return false__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,method,test,method,class,test,class,if,profile,value,if,profile,value,annotated,element,utils,find,merged,annotation,test,class,if,profile,value,class,boolean,class,level,enabled,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,if,class,level,enabled,if,profile,value,annotated,element,utils,find,merged,annotation,test,method,if,profile,value,class,return,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,return,false
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod, 			Class<?> testClass);1495868221;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared._@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod,_			Class<?> testClass) {__		IfProfileValue ifProfileValue = AnnotatedElementUtils.findMergedAnnotation(testClass, IfProfileValue.class)__		boolean classLevelEnabled = isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)___		if (classLevelEnabled) {_			ifProfileValue = AnnotatedElementUtils.findMergedAnnotation(testMethod, IfProfileValue.class)__			return isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)__		}__		return false__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,method,test,method,class,test,class,if,profile,value,if,profile,value,annotated,element,utils,find,merged,annotation,test,class,if,profile,value,class,boolean,class,level,enabled,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,if,class,level,enabled,if,profile,value,annotated,element,utils,find,merged,annotation,test,method,if,profile,value,class,return,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,return,false
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod, 			Class<?> testClass);1496955179;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared._@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod,_			Class<?> testClass) {__		IfProfileValue ifProfileValue = AnnotatedElementUtils.findMergedAnnotation(testClass, IfProfileValue.class)__		boolean classLevelEnabled = isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)___		if (classLevelEnabled) {_			ifProfileValue = AnnotatedElementUtils.findMergedAnnotation(testMethod, IfProfileValue.class)__			return isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)__		}__		return false__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,method,test,method,class,test,class,if,profile,value,if,profile,value,annotated,element,utils,find,merged,annotation,test,class,if,profile,value,class,boolean,class,level,enabled,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,if,class,level,enabled,if,profile,value,annotated,element,utils,find,merged,annotation,test,method,if,profile,value,class,return,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,return,false
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod, 			Class<?> testClass);1530174524;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared._@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, Method testMethod,_			Class<?> testClass) {__		IfProfileValue ifProfileValue = AnnotatedElementUtils.findMergedAnnotation(testClass, IfProfileValue.class)__		boolean classLevelEnabled = isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)___		if (classLevelEnabled) {_			ifProfileValue = AnnotatedElementUtils.findMergedAnnotation(testMethod, IfProfileValue.class)__			return isTestEnabledInThisEnvironment(profileValueSource, ifProfileValue)__		}__		return false__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,method,test,method,class,test,class,if,profile,value,if,profile,value,annotated,element,utils,find,merged,annotation,test,class,if,profile,value,class,boolean,class,level,enabled,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,if,class,level,enabled,if,profile,value,annotated,element,utils,find,merged,annotation,test,method,if,profile,value,class,return,is,test,enabled,in,this,environment,profile,value,source,if,profile,value,return,false
ProfileValueUtils -> private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, 			IfProfileValue ifProfileValue);1328020251;Determine if the <code>value</code> (or one of the <code>values</code>)_in the supplied {@link IfProfileValue &#064_IfProfileValue} annotation is_<em>enabled</em> in the current environment.__@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param ifProfileValue the annotation to introspect_ may be_<code>null</code>_@return <code>true</code> if the test is <em>enabled</em> in the current_environment or if the supplied <code>ifProfileValue</code> is_<code>null</code>;private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource,_			IfProfileValue ifProfileValue) {__		if (ifProfileValue == null) {_			return true__		}__		String environmentValue = profileValueSource.get(ifProfileValue.name())__		String[] annotatedValues = ifProfileValue.values()__		if (StringUtils.hasLength(ifProfileValue.value())) {_			if (annotatedValues.length > 0) {_				throw new IllegalArgumentException("Setting both the 'value' and 'values' attributes "_						+ "of @IfProfileValue is not allowed: choose one or the other.")__			}_			annotatedValues = new String[] { ifProfileValue.value() }__		}__		for (String value : annotatedValues) {_			if (ObjectUtils.nullSafeEquals(value, environmentValue)) {_				return true__			}_		}_		return false__	};determine,if,the,code,value,code,or,one,of,the,code,values,code,in,the,supplied,link,if,profile,value,064,if,profile,value,annotation,is,em,enabled,em,in,the,current,environment,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,if,profile,value,the,annotation,to,introspect,may,be,code,null,code,return,code,true,code,if,the,test,is,em,enabled,em,in,the,current,environment,or,if,the,supplied,code,if,profile,value,code,is,code,null,code;private,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,if,profile,value,if,profile,value,if,if,profile,value,null,return,true,string,environment,value,profile,value,source,get,if,profile,value,name,string,annotated,values,if,profile,value,values,if,string,utils,has,length,if,profile,value,value,if,annotated,values,length,0,throw,new,illegal,argument,exception,setting,both,the,value,and,values,attributes,of,if,profile,value,is,not,allowed,choose,one,or,the,other,annotated,values,new,string,if,profile,value,value,for,string,value,annotated,values,if,object,utils,null,safe,equals,value,environment,value,return,true,return,false
ProfileValueUtils -> private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, 			IfProfileValue ifProfileValue);1356735495;Determine if the {@code value} (or one of the {@code values})_in the supplied {@link IfProfileValue &#064_IfProfileValue} annotation is_<em>enabled</em> in the current environment.__@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param ifProfileValue the annotation to introspect_ may be_{@code null}_@return {@code true} if the test is <em>enabled</em> in the current_environment or if the supplied {@code ifProfileValue} is_{@code null};private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource,_			IfProfileValue ifProfileValue) {__		if (ifProfileValue == null) {_			return true__		}__		String environmentValue = profileValueSource.get(ifProfileValue.name())__		String[] annotatedValues = ifProfileValue.values()__		if (StringUtils.hasLength(ifProfileValue.value())) {_			if (annotatedValues.length > 0) {_				throw new IllegalArgumentException("Setting both the 'value' and 'values' attributes "_						+ "of @IfProfileValue is not allowed: choose one or the other.")__			}_			annotatedValues = new String[] { ifProfileValue.value() }__		}__		for (String value : annotatedValues) {_			if (ObjectUtils.nullSafeEquals(value, environmentValue)) {_				return true__			}_		}_		return false__	};determine,if,the,code,value,or,one,of,the,code,values,in,the,supplied,link,if,profile,value,064,if,profile,value,annotation,is,em,enabled,em,in,the,current,environment,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,if,profile,value,the,annotation,to,introspect,may,be,code,null,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment,or,if,the,supplied,code,if,profile,value,is,code,null;private,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,if,profile,value,if,profile,value,if,if,profile,value,null,return,true,string,environment,value,profile,value,source,get,if,profile,value,name,string,annotated,values,if,profile,value,values,if,string,utils,has,length,if,profile,value,value,if,annotated,values,length,0,throw,new,illegal,argument,exception,setting,both,the,value,and,values,attributes,of,if,profile,value,is,not,allowed,choose,one,or,the,other,annotated,values,new,string,if,profile,value,value,for,string,value,annotated,values,if,object,utils,null,safe,equals,value,environment,value,return,true,return,false
ProfileValueUtils -> private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, 			IfProfileValue ifProfileValue);1382920864;Determine if the {@code value} (or one of the {@code values})_in the supplied {@link IfProfileValue &#064_IfProfileValue} annotation is_<em>enabled</em> in the current environment.__@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param ifProfileValue the annotation to introspect_ may be_{@code null}_@return {@code true} if the test is <em>enabled</em> in the current_environment or if the supplied {@code ifProfileValue} is_{@code null};private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource,_			IfProfileValue ifProfileValue) {__		if (ifProfileValue == null) {_			return true__		}__		String environmentValue = profileValueSource.get(ifProfileValue.name())__		String[] annotatedValues = ifProfileValue.values()__		if (StringUtils.hasLength(ifProfileValue.value())) {_			if (annotatedValues.length > 0) {_				throw new IllegalArgumentException("Setting both the 'value' and 'values' attributes "_						+ "of @IfProfileValue is not allowed: choose one or the other.")__			}_			annotatedValues = new String[] { ifProfileValue.value() }__		}__		for (String value : annotatedValues) {_			if (ObjectUtils.nullSafeEquals(value, environmentValue)) {_				return true__			}_		}_		return false__	};determine,if,the,code,value,or,one,of,the,code,values,in,the,supplied,link,if,profile,value,064,if,profile,value,annotation,is,em,enabled,em,in,the,current,environment,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,if,profile,value,the,annotation,to,introspect,may,be,code,null,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment,or,if,the,supplied,code,if,profile,value,is,code,null;private,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,if,profile,value,if,profile,value,if,if,profile,value,null,return,true,string,environment,value,profile,value,source,get,if,profile,value,name,string,annotated,values,if,profile,value,values,if,string,utils,has,length,if,profile,value,value,if,annotated,values,length,0,throw,new,illegal,argument,exception,setting,both,the,value,and,values,attributes,of,if,profile,value,is,not,allowed,choose,one,or,the,other,annotated,values,new,string,if,profile,value,value,for,string,value,annotated,values,if,object,utils,null,safe,equals,value,environment,value,return,true,return,false
ProfileValueUtils -> private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, 			IfProfileValue ifProfileValue);1413848647;Determine if the {@code value} (or one of the {@code values})_in the supplied {@link IfProfileValue &#064_IfProfileValue} annotation is_<em>enabled</em> in the current environment.__@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param ifProfileValue the annotation to introspect_ may be_{@code null}_@return {@code true} if the test is <em>enabled</em> in the current_environment or if the supplied {@code ifProfileValue} is_{@code null};private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource,_			IfProfileValue ifProfileValue) {__		if (ifProfileValue == null) {_			return true__		}__		String environmentValue = profileValueSource.get(ifProfileValue.name())__		String[] annotatedValues = ifProfileValue.values()__		if (StringUtils.hasLength(ifProfileValue.value())) {_			if (annotatedValues.length > 0) {_				throw new IllegalArgumentException("Setting both the 'value' and 'values' attributes "_						+ "of @IfProfileValue is not allowed: choose one or the other.")__			}_			annotatedValues = new String[] { ifProfileValue.value() }__		}__		for (String value : annotatedValues) {_			if (ObjectUtils.nullSafeEquals(value, environmentValue)) {_				return true__			}_		}_		return false__	};determine,if,the,code,value,or,one,of,the,code,values,in,the,supplied,link,if,profile,value,064,if,profile,value,annotation,is,em,enabled,em,in,the,current,environment,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,if,profile,value,the,annotation,to,introspect,may,be,code,null,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment,or,if,the,supplied,code,if,profile,value,is,code,null;private,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,if,profile,value,if,profile,value,if,if,profile,value,null,return,true,string,environment,value,profile,value,source,get,if,profile,value,name,string,annotated,values,if,profile,value,values,if,string,utils,has,length,if,profile,value,value,if,annotated,values,length,0,throw,new,illegal,argument,exception,setting,both,the,value,and,values,attributes,of,if,profile,value,is,not,allowed,choose,one,or,the,other,annotated,values,new,string,if,profile,value,value,for,string,value,annotated,values,if,object,utils,null,safe,equals,value,environment,value,return,true,return,false
ProfileValueUtils -> private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, 			IfProfileValue ifProfileValue);1432125256;Determine if the {@code value} (or one of the {@code values})_in the supplied {@link IfProfileValue &#064_IfProfileValue} annotation is_<em>enabled</em> in the current environment.__@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param ifProfileValue the annotation to introspect_ may be_{@code null}_@return {@code true} if the test is <em>enabled</em> in the current_environment or if the supplied {@code ifProfileValue} is_{@code null};private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource,_			IfProfileValue ifProfileValue) {__		if (ifProfileValue == null) {_			return true__		}__		String environmentValue = profileValueSource.get(ifProfileValue.name())__		String[] annotatedValues = ifProfileValue.values()__		if (StringUtils.hasLength(ifProfileValue.value())) {_			if (annotatedValues.length > 0) {_				throw new IllegalArgumentException("Setting both the 'value' and 'values' attributes "_						+ "of @IfProfileValue is not allowed: choose one or the other.")__			}_			annotatedValues = new String[] { ifProfileValue.value() }__		}__		for (String value : annotatedValues) {_			if (ObjectUtils.nullSafeEquals(value, environmentValue)) {_				return true__			}_		}_		return false__	};determine,if,the,code,value,or,one,of,the,code,values,in,the,supplied,link,if,profile,value,064,if,profile,value,annotation,is,em,enabled,em,in,the,current,environment,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,if,profile,value,the,annotation,to,introspect,may,be,code,null,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment,or,if,the,supplied,code,if,profile,value,is,code,null;private,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,if,profile,value,if,profile,value,if,if,profile,value,null,return,true,string,environment,value,profile,value,source,get,if,profile,value,name,string,annotated,values,if,profile,value,values,if,string,utils,has,length,if,profile,value,value,if,annotated,values,length,0,throw,new,illegal,argument,exception,setting,both,the,value,and,values,attributes,of,if,profile,value,is,not,allowed,choose,one,or,the,other,annotated,values,new,string,if,profile,value,value,for,string,value,annotated,values,if,object,utils,null,safe,equals,value,environment,value,return,true,return,false
ProfileValueUtils -> private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, 			IfProfileValue ifProfileValue);1458754760;Determine if the {@code value} (or one of the {@code values})_in the supplied {@link IfProfileValue &#064_IfProfileValue} annotation is_<em>enabled</em> in the current environment._@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param ifProfileValue the annotation to introspect_ may be_{@code null}_@return {@code true} if the test is <em>enabled</em> in the current_environment or if the supplied {@code ifProfileValue} is_{@code null};private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource,_			IfProfileValue ifProfileValue) {__		if (ifProfileValue == null) {_			return true__		}__		String environmentValue = profileValueSource.get(ifProfileValue.name())__		String[] annotatedValues = ifProfileValue.values()__		if (StringUtils.hasLength(ifProfileValue.value())) {_			if (annotatedValues.length > 0) {_				throw new IllegalArgumentException("Setting both the 'value' and 'values' attributes " +_						"of @IfProfileValue is not allowed: choose one or the other.")__			}_			annotatedValues = new String[] { ifProfileValue.value() }__		}__		for (String value : annotatedValues) {_			if (ObjectUtils.nullSafeEquals(value, environmentValue)) {_				return true__			}_		}_		return false__	};determine,if,the,code,value,or,one,of,the,code,values,in,the,supplied,link,if,profile,value,064,if,profile,value,annotation,is,em,enabled,em,in,the,current,environment,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,if,profile,value,the,annotation,to,introspect,may,be,code,null,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment,or,if,the,supplied,code,if,profile,value,is,code,null;private,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,if,profile,value,if,profile,value,if,if,profile,value,null,return,true,string,environment,value,profile,value,source,get,if,profile,value,name,string,annotated,values,if,profile,value,values,if,string,utils,has,length,if,profile,value,value,if,annotated,values,length,0,throw,new,illegal,argument,exception,setting,both,the,value,and,values,attributes,of,if,profile,value,is,not,allowed,choose,one,or,the,other,annotated,values,new,string,if,profile,value,value,for,string,value,annotated,values,if,object,utils,null,safe,equals,value,environment,value,return,true,return,false
ProfileValueUtils -> private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, 			IfProfileValue ifProfileValue);1468334463;Determine if the {@code value} (or one of the {@code values})_in the supplied {@link IfProfileValue &#064_IfProfileValue} annotation is_<em>enabled</em> in the current environment._@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param ifProfileValue the annotation to introspect_ may be_{@code null}_@return {@code true} if the test is <em>enabled</em> in the current_environment or if the supplied {@code ifProfileValue} is_{@code null};private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource,_			IfProfileValue ifProfileValue) {__		if (ifProfileValue == null) {_			return true__		}__		String environmentValue = profileValueSource.get(ifProfileValue.name())__		String[] annotatedValues = ifProfileValue.values()__		if (StringUtils.hasLength(ifProfileValue.value())) {_			Assert.isTrue(annotatedValues.length == 0, () -> "Setting both the 'value' and 'values' attributes " +_						"of @IfProfileValue is not allowed: choose one or the other.")__			annotatedValues = new String[] { ifProfileValue.value() }__		}__		for (String value : annotatedValues) {_			if (ObjectUtils.nullSafeEquals(value, environmentValue)) {_				return true__			}_		}_		return false__	};determine,if,the,code,value,or,one,of,the,code,values,in,the,supplied,link,if,profile,value,064,if,profile,value,annotation,is,em,enabled,em,in,the,current,environment,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,if,profile,value,the,annotation,to,introspect,may,be,code,null,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment,or,if,the,supplied,code,if,profile,value,is,code,null;private,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,if,profile,value,if,profile,value,if,if,profile,value,null,return,true,string,environment,value,profile,value,source,get,if,profile,value,name,string,annotated,values,if,profile,value,values,if,string,utils,has,length,if,profile,value,value,assert,is,true,annotated,values,length,0,setting,both,the,value,and,values,attributes,of,if,profile,value,is,not,allowed,choose,one,or,the,other,annotated,values,new,string,if,profile,value,value,for,string,value,annotated,values,if,object,utils,null,safe,equals,value,environment,value,return,true,return,false
ProfileValueUtils -> private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, 			IfProfileValue ifProfileValue);1468948866;Determine if the {@code value} (or one of the {@code values})_in the supplied {@link IfProfileValue &#064_IfProfileValue} annotation is_<em>enabled</em> in the current environment._@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param ifProfileValue the annotation to introspect_ may be_{@code null}_@return {@code true} if the test is <em>enabled</em> in the current_environment or if the supplied {@code ifProfileValue} is_{@code null};private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource,_			IfProfileValue ifProfileValue) {__		if (ifProfileValue == null) {_			return true__		}__		String environmentValue = profileValueSource.get(ifProfileValue.name())__		String[] annotatedValues = ifProfileValue.values()__		if (StringUtils.hasLength(ifProfileValue.value())) {_			Assert.isTrue(annotatedValues.length == 0, () -> "Setting both the 'value' and 'values' attributes " +_						"of @IfProfileValue is not allowed: choose one or the other.")__			annotatedValues = new String[] { ifProfileValue.value() }__		}__		for (String value : annotatedValues) {_			if (ObjectUtils.nullSafeEquals(value, environmentValue)) {_				return true__			}_		}_		return false__	};determine,if,the,code,value,or,one,of,the,code,values,in,the,supplied,link,if,profile,value,064,if,profile,value,annotation,is,em,enabled,em,in,the,current,environment,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,if,profile,value,the,annotation,to,introspect,may,be,code,null,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment,or,if,the,supplied,code,if,profile,value,is,code,null;private,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,if,profile,value,if,profile,value,if,if,profile,value,null,return,true,string,environment,value,profile,value,source,get,if,profile,value,name,string,annotated,values,if,profile,value,values,if,string,utils,has,length,if,profile,value,value,assert,is,true,annotated,values,length,0,setting,both,the,value,and,values,attributes,of,if,profile,value,is,not,allowed,choose,one,or,the,other,annotated,values,new,string,if,profile,value,value,for,string,value,annotated,values,if,object,utils,null,safe,equals,value,environment,value,return,true,return,false
ProfileValueUtils -> @SuppressWarnings("unchecked") 	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass);1328020251;Retrieves the {@link ProfileValueSource} type for the specified_{@link Class test class} as configured via the_{@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} annotation and instantiates a new_instance of that type._<p>_If {@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} is not present on the specified_class or if a custom {@link ProfileValueSource} is not declared, the_default {@link SystemProfileValueSource} will be returned instead.__@param testClass The test class for which the ProfileValueSource should_be retrieved_@return the configured (or default) ProfileValueSource for the specified_class_@see SystemProfileValueSource;@SuppressWarnings("unchecked")_	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass) {_		Assert.notNull(testClass, "testClass must not be null")___		Class<ProfileValueSourceConfiguration> annotationType = ProfileValueSourceConfiguration.class__		ProfileValueSourceConfiguration config = testClass.getAnnotation(annotationType)__		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved @ProfileValueSourceConfiguration [" + config + "] for test class ["_					+ testClass.getName() + "]")__		}__		Class<? extends ProfileValueSource> profileValueSourceType__		if (config != null) {_			profileValueSourceType = config.value()__		}_		else {_			profileValueSourceType = (Class<? extends ProfileValueSource>) AnnotationUtils.getDefaultValue(annotationType)__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved ProfileValueSource type [" + profileValueSourceType + "] for class ["_					+ testClass.getName() + "]")__		}__		ProfileValueSource profileValueSource__		if (SystemProfileValueSource.class.equals(profileValueSourceType)) {_			profileValueSource = SystemProfileValueSource.getInstance()__		}_		else {_			try {_				profileValueSource = profileValueSourceType.newInstance()__			}_			catch (Exception e) {_				if (logger.isWarnEnabled()) {_					logger.warn("Could not instantiate a ProfileValueSource of type [" + profileValueSourceType_							+ "] for class [" + testClass.getName() + "]: using default.", e)__				}_				profileValueSource = SystemProfileValueSource.getInstance()__			}_		}__		return profileValueSource__	};retrieves,the,link,profile,value,source,type,for,the,specified,link,class,test,class,as,configured,via,the,link,profile,value,source,configuration,064,profile,value,source,configuration,annotation,and,instantiates,a,new,instance,of,that,type,p,if,link,profile,value,source,configuration,064,profile,value,source,configuration,is,not,present,on,the,specified,class,or,if,a,custom,link,profile,value,source,is,not,declared,the,default,link,system,profile,value,source,will,be,returned,instead,param,test,class,the,test,class,for,which,the,profile,value,source,should,be,retrieved,return,the,configured,or,default,profile,value,source,for,the,specified,class,see,system,profile,value,source;suppress,warnings,unchecked,public,static,profile,value,source,retrieve,profile,value,source,class,test,class,assert,not,null,test,class,test,class,must,not,be,null,class,profile,value,source,configuration,annotation,type,profile,value,source,configuration,class,profile,value,source,configuration,config,test,class,get,annotation,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,configuration,config,for,test,class,test,class,get,name,class,extends,profile,value,source,profile,value,source,type,if,config,null,profile,value,source,type,config,value,else,profile,value,source,type,class,extends,profile,value,source,annotation,utils,get,default,value,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,type,profile,value,source,type,for,class,test,class,get,name,profile,value,source,profile,value,source,if,system,profile,value,source,class,equals,profile,value,source,type,profile,value,source,system,profile,value,source,get,instance,else,try,profile,value,source,profile,value,source,type,new,instance,catch,exception,e,if,logger,is,warn,enabled,logger,warn,could,not,instantiate,a,profile,value,source,of,type,profile,value,source,type,for,class,test,class,get,name,using,default,e,profile,value,source,system,profile,value,source,get,instance,return,profile,value,source
ProfileValueUtils -> @SuppressWarnings("unchecked") 	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass);1356735495;Retrieves the {@link ProfileValueSource} type for the specified_{@link Class test class} as configured via the_{@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} annotation and instantiates a new_instance of that type._<p>_If {@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} is not present on the specified_class or if a custom {@link ProfileValueSource} is not declared, the_default {@link SystemProfileValueSource} will be returned instead.__@param testClass The test class for which the ProfileValueSource should_be retrieved_@return the configured (or default) ProfileValueSource for the specified_class_@see SystemProfileValueSource;@SuppressWarnings("unchecked")_	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass) {_		Assert.notNull(testClass, "testClass must not be null")___		Class<ProfileValueSourceConfiguration> annotationType = ProfileValueSourceConfiguration.class__		ProfileValueSourceConfiguration config = testClass.getAnnotation(annotationType)__		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved @ProfileValueSourceConfiguration [" + config + "] for test class ["_					+ testClass.getName() + "]")__		}__		Class<? extends ProfileValueSource> profileValueSourceType__		if (config != null) {_			profileValueSourceType = config.value()__		}_		else {_			profileValueSourceType = (Class<? extends ProfileValueSource>) AnnotationUtils.getDefaultValue(annotationType)__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved ProfileValueSource type [" + profileValueSourceType + "] for class ["_					+ testClass.getName() + "]")__		}__		ProfileValueSource profileValueSource__		if (SystemProfileValueSource.class.equals(profileValueSourceType)) {_			profileValueSource = SystemProfileValueSource.getInstance()__		}_		else {_			try {_				profileValueSource = profileValueSourceType.newInstance()__			}_			catch (Exception e) {_				if (logger.isWarnEnabled()) {_					logger.warn("Could not instantiate a ProfileValueSource of type [" + profileValueSourceType_							+ "] for class [" + testClass.getName() + "]: using default.", e)__				}_				profileValueSource = SystemProfileValueSource.getInstance()__			}_		}__		return profileValueSource__	};retrieves,the,link,profile,value,source,type,for,the,specified,link,class,test,class,as,configured,via,the,link,profile,value,source,configuration,064,profile,value,source,configuration,annotation,and,instantiates,a,new,instance,of,that,type,p,if,link,profile,value,source,configuration,064,profile,value,source,configuration,is,not,present,on,the,specified,class,or,if,a,custom,link,profile,value,source,is,not,declared,the,default,link,system,profile,value,source,will,be,returned,instead,param,test,class,the,test,class,for,which,the,profile,value,source,should,be,retrieved,return,the,configured,or,default,profile,value,source,for,the,specified,class,see,system,profile,value,source;suppress,warnings,unchecked,public,static,profile,value,source,retrieve,profile,value,source,class,test,class,assert,not,null,test,class,test,class,must,not,be,null,class,profile,value,source,configuration,annotation,type,profile,value,source,configuration,class,profile,value,source,configuration,config,test,class,get,annotation,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,configuration,config,for,test,class,test,class,get,name,class,extends,profile,value,source,profile,value,source,type,if,config,null,profile,value,source,type,config,value,else,profile,value,source,type,class,extends,profile,value,source,annotation,utils,get,default,value,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,type,profile,value,source,type,for,class,test,class,get,name,profile,value,source,profile,value,source,if,system,profile,value,source,class,equals,profile,value,source,type,profile,value,source,system,profile,value,source,get,instance,else,try,profile,value,source,profile,value,source,type,new,instance,catch,exception,e,if,logger,is,warn,enabled,logger,warn,could,not,instantiate,a,profile,value,source,of,type,profile,value,source,type,for,class,test,class,get,name,using,default,e,profile,value,source,system,profile,value,source,get,instance,return,profile,value,source
ProfileValueUtils -> @SuppressWarnings("unchecked") 	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass);1382920864;Retrieves the {@link ProfileValueSource} type for the specified_{@link Class test class} as configured via the_{@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} annotation and instantiates a new_instance of that type._<p>_If {@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} is not present on the specified_class or if a custom {@link ProfileValueSource} is not declared, the_default {@link SystemProfileValueSource} will be returned instead.__@param testClass The test class for which the ProfileValueSource should_be retrieved_@return the configured (or default) ProfileValueSource for the specified_class_@see SystemProfileValueSource;@SuppressWarnings("unchecked")_	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass) {_		Assert.notNull(testClass, "testClass must not be null")___		Class<ProfileValueSourceConfiguration> annotationType = ProfileValueSourceConfiguration.class__		ProfileValueSourceConfiguration config = findAnnotation(testClass, annotationType)__		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved @ProfileValueSourceConfiguration [" + config + "] for test class ["_					+ testClass.getName() + "]")__		}__		Class<? extends ProfileValueSource> profileValueSourceType__		if (config != null) {_			profileValueSourceType = config.value()__		}_		else {_			profileValueSourceType = (Class<? extends ProfileValueSource>) AnnotationUtils.getDefaultValue(annotationType)__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved ProfileValueSource type [" + profileValueSourceType + "] for class ["_					+ testClass.getName() + "]")__		}__		ProfileValueSource profileValueSource__		if (SystemProfileValueSource.class.equals(profileValueSourceType)) {_			profileValueSource = SystemProfileValueSource.getInstance()__		}_		else {_			try {_				profileValueSource = profileValueSourceType.newInstance()__			}_			catch (Exception e) {_				if (logger.isWarnEnabled()) {_					logger.warn("Could not instantiate a ProfileValueSource of type [" + profileValueSourceType_							+ "] for class [" + testClass.getName() + "]: using default.", e)__				}_				profileValueSource = SystemProfileValueSource.getInstance()__			}_		}__		return profileValueSource__	};retrieves,the,link,profile,value,source,type,for,the,specified,link,class,test,class,as,configured,via,the,link,profile,value,source,configuration,064,profile,value,source,configuration,annotation,and,instantiates,a,new,instance,of,that,type,p,if,link,profile,value,source,configuration,064,profile,value,source,configuration,is,not,present,on,the,specified,class,or,if,a,custom,link,profile,value,source,is,not,declared,the,default,link,system,profile,value,source,will,be,returned,instead,param,test,class,the,test,class,for,which,the,profile,value,source,should,be,retrieved,return,the,configured,or,default,profile,value,source,for,the,specified,class,see,system,profile,value,source;suppress,warnings,unchecked,public,static,profile,value,source,retrieve,profile,value,source,class,test,class,assert,not,null,test,class,test,class,must,not,be,null,class,profile,value,source,configuration,annotation,type,profile,value,source,configuration,class,profile,value,source,configuration,config,find,annotation,test,class,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,configuration,config,for,test,class,test,class,get,name,class,extends,profile,value,source,profile,value,source,type,if,config,null,profile,value,source,type,config,value,else,profile,value,source,type,class,extends,profile,value,source,annotation,utils,get,default,value,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,type,profile,value,source,type,for,class,test,class,get,name,profile,value,source,profile,value,source,if,system,profile,value,source,class,equals,profile,value,source,type,profile,value,source,system,profile,value,source,get,instance,else,try,profile,value,source,profile,value,source,type,new,instance,catch,exception,e,if,logger,is,warn,enabled,logger,warn,could,not,instantiate,a,profile,value,source,of,type,profile,value,source,type,for,class,test,class,get,name,using,default,e,profile,value,source,system,profile,value,source,get,instance,return,profile,value,source
ProfileValueUtils -> @SuppressWarnings("unchecked") 	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass);1413848647;Retrieves the {@link ProfileValueSource} type for the specified_{@link Class test class} as configured via the_{@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} annotation and instantiates a new_instance of that type._<p>_If {@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} is not present on the specified_class or if a custom {@link ProfileValueSource} is not declared, the_default {@link SystemProfileValueSource} will be returned instead.__@param testClass The test class for which the ProfileValueSource should_be retrieved_@return the configured (or default) ProfileValueSource for the specified_class_@see SystemProfileValueSource;@SuppressWarnings("unchecked")_	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass) {_		Assert.notNull(testClass, "testClass must not be null")___		Class<ProfileValueSourceConfiguration> annotationType = ProfileValueSourceConfiguration.class__		ProfileValueSourceConfiguration config = findAnnotation(testClass, annotationType)__		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved @ProfileValueSourceConfiguration [" + config + "] for test class ["_					+ testClass.getName() + "]")__		}__		Class<? extends ProfileValueSource> profileValueSourceType__		if (config != null) {_			profileValueSourceType = config.value()__		}_		else {_			profileValueSourceType = (Class<? extends ProfileValueSource>) AnnotationUtils.getDefaultValue(annotationType)__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved ProfileValueSource type [" + profileValueSourceType + "] for class ["_					+ testClass.getName() + "]")__		}__		ProfileValueSource profileValueSource__		if (SystemProfileValueSource.class.equals(profileValueSourceType)) {_			profileValueSource = SystemProfileValueSource.getInstance()__		}_		else {_			try {_				profileValueSource = profileValueSourceType.newInstance()__			}_			catch (Exception e) {_				if (logger.isWarnEnabled()) {_					logger.warn("Could not instantiate a ProfileValueSource of type [" + profileValueSourceType_							+ "] for class [" + testClass.getName() + "]: using default.", e)__				}_				profileValueSource = SystemProfileValueSource.getInstance()__			}_		}__		return profileValueSource__	};retrieves,the,link,profile,value,source,type,for,the,specified,link,class,test,class,as,configured,via,the,link,profile,value,source,configuration,064,profile,value,source,configuration,annotation,and,instantiates,a,new,instance,of,that,type,p,if,link,profile,value,source,configuration,064,profile,value,source,configuration,is,not,present,on,the,specified,class,or,if,a,custom,link,profile,value,source,is,not,declared,the,default,link,system,profile,value,source,will,be,returned,instead,param,test,class,the,test,class,for,which,the,profile,value,source,should,be,retrieved,return,the,configured,or,default,profile,value,source,for,the,specified,class,see,system,profile,value,source;suppress,warnings,unchecked,public,static,profile,value,source,retrieve,profile,value,source,class,test,class,assert,not,null,test,class,test,class,must,not,be,null,class,profile,value,source,configuration,annotation,type,profile,value,source,configuration,class,profile,value,source,configuration,config,find,annotation,test,class,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,configuration,config,for,test,class,test,class,get,name,class,extends,profile,value,source,profile,value,source,type,if,config,null,profile,value,source,type,config,value,else,profile,value,source,type,class,extends,profile,value,source,annotation,utils,get,default,value,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,type,profile,value,source,type,for,class,test,class,get,name,profile,value,source,profile,value,source,if,system,profile,value,source,class,equals,profile,value,source,type,profile,value,source,system,profile,value,source,get,instance,else,try,profile,value,source,profile,value,source,type,new,instance,catch,exception,e,if,logger,is,warn,enabled,logger,warn,could,not,instantiate,a,profile,value,source,of,type,profile,value,source,type,for,class,test,class,get,name,using,default,e,profile,value,source,system,profile,value,source,get,instance,return,profile,value,source
ProfileValueUtils -> @SuppressWarnings("unchecked") 	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass);1432125256;Retrieves the {@link ProfileValueSource} type for the specified_{@link Class test class} as configured via the_{@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} annotation and instantiates a new_instance of that type._<p>_If {@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} is not present on the specified_class or if a custom {@link ProfileValueSource} is not declared, the_default {@link SystemProfileValueSource} will be returned instead.__@param testClass The test class for which the ProfileValueSource should_be retrieved_@return the configured (or default) ProfileValueSource for the specified_class_@see SystemProfileValueSource;@SuppressWarnings("unchecked")_	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass) {_		Assert.notNull(testClass, "testClass must not be null")___		Class<ProfileValueSourceConfiguration> annotationType = ProfileValueSourceConfiguration.class__		ProfileValueSourceConfiguration config = findAnnotation(testClass, annotationType)__		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved @ProfileValueSourceConfiguration [" + config + "] for test class ["_					+ testClass.getName() + "]")__		}__		Class<? extends ProfileValueSource> profileValueSourceType__		if (config != null) {_			profileValueSourceType = config.value()__		}_		else {_			profileValueSourceType = (Class<? extends ProfileValueSource>) AnnotationUtils.getDefaultValue(annotationType)__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved ProfileValueSource type [" + profileValueSourceType + "] for class ["_					+ testClass.getName() + "]")__		}__		ProfileValueSource profileValueSource__		if (SystemProfileValueSource.class == profileValueSourceType) {_			profileValueSource = SystemProfileValueSource.getInstance()__		}_		else {_			try {_				profileValueSource = profileValueSourceType.newInstance()__			}_			catch (Exception e) {_				if (logger.isWarnEnabled()) {_					logger.warn("Could not instantiate a ProfileValueSource of type [" + profileValueSourceType_							+ "] for class [" + testClass.getName() + "]: using default.", e)__				}_				profileValueSource = SystemProfileValueSource.getInstance()__			}_		}__		return profileValueSource__	};retrieves,the,link,profile,value,source,type,for,the,specified,link,class,test,class,as,configured,via,the,link,profile,value,source,configuration,064,profile,value,source,configuration,annotation,and,instantiates,a,new,instance,of,that,type,p,if,link,profile,value,source,configuration,064,profile,value,source,configuration,is,not,present,on,the,specified,class,or,if,a,custom,link,profile,value,source,is,not,declared,the,default,link,system,profile,value,source,will,be,returned,instead,param,test,class,the,test,class,for,which,the,profile,value,source,should,be,retrieved,return,the,configured,or,default,profile,value,source,for,the,specified,class,see,system,profile,value,source;suppress,warnings,unchecked,public,static,profile,value,source,retrieve,profile,value,source,class,test,class,assert,not,null,test,class,test,class,must,not,be,null,class,profile,value,source,configuration,annotation,type,profile,value,source,configuration,class,profile,value,source,configuration,config,find,annotation,test,class,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,configuration,config,for,test,class,test,class,get,name,class,extends,profile,value,source,profile,value,source,type,if,config,null,profile,value,source,type,config,value,else,profile,value,source,type,class,extends,profile,value,source,annotation,utils,get,default,value,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,type,profile,value,source,type,for,class,test,class,get,name,profile,value,source,profile,value,source,if,system,profile,value,source,class,profile,value,source,type,profile,value,source,system,profile,value,source,get,instance,else,try,profile,value,source,profile,value,source,type,new,instance,catch,exception,e,if,logger,is,warn,enabled,logger,warn,could,not,instantiate,a,profile,value,source,of,type,profile,value,source,type,for,class,test,class,get,name,using,default,e,profile,value,source,system,profile,value,source,get,instance,return,profile,value,source
ProfileValueUtils -> @SuppressWarnings("unchecked") 	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass);1458754760;Retrieves the {@link ProfileValueSource} type for the specified_{@link Class test class} as configured via the_{@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} annotation and instantiates a new_instance of that type._<p>If {@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} is not present on the specified_class or if a custom {@link ProfileValueSource} is not declared, the_default {@link SystemProfileValueSource} will be returned instead._@param testClass The test class for which the ProfileValueSource should_be retrieved_@return the configured (or default) ProfileValueSource for the specified_class_@see SystemProfileValueSource;@SuppressWarnings("unchecked")_	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass) {_		Assert.notNull(testClass, "testClass must not be null")___		Class<ProfileValueSourceConfiguration> annotationType = ProfileValueSourceConfiguration.class__		ProfileValueSourceConfiguration config = AnnotatedElementUtils.findMergedAnnotation(testClass, annotationType)__		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved @ProfileValueSourceConfiguration [" + config + "] for test class [" +_					testClass.getName() + "]")__		}__		Class<? extends ProfileValueSource> profileValueSourceType__		if (config != null) {_			profileValueSourceType = config.value()__		}_		else {_			profileValueSourceType = (Class<? extends ProfileValueSource>) AnnotationUtils.getDefaultValue(annotationType)__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved ProfileValueSource type [" + profileValueSourceType + "] for class [" +_					testClass.getName() + "]")__		}__		ProfileValueSource profileValueSource__		if (SystemProfileValueSource.class == profileValueSourceType) {_			profileValueSource = SystemProfileValueSource.getInstance()__		}_		else {_			try {_				profileValueSource = profileValueSourceType.newInstance()__			}_			catch (Exception ex) {_				if (logger.isWarnEnabled()) {_					logger.warn("Could not instantiate a ProfileValueSource of type [" + profileValueSourceType +_							"] for class [" + testClass.getName() + "]: using default.", ex)__				}_				profileValueSource = SystemProfileValueSource.getInstance()__			}_		}__		return profileValueSource__	};retrieves,the,link,profile,value,source,type,for,the,specified,link,class,test,class,as,configured,via,the,link,profile,value,source,configuration,064,profile,value,source,configuration,annotation,and,instantiates,a,new,instance,of,that,type,p,if,link,profile,value,source,configuration,064,profile,value,source,configuration,is,not,present,on,the,specified,class,or,if,a,custom,link,profile,value,source,is,not,declared,the,default,link,system,profile,value,source,will,be,returned,instead,param,test,class,the,test,class,for,which,the,profile,value,source,should,be,retrieved,return,the,configured,or,default,profile,value,source,for,the,specified,class,see,system,profile,value,source;suppress,warnings,unchecked,public,static,profile,value,source,retrieve,profile,value,source,class,test,class,assert,not,null,test,class,test,class,must,not,be,null,class,profile,value,source,configuration,annotation,type,profile,value,source,configuration,class,profile,value,source,configuration,config,annotated,element,utils,find,merged,annotation,test,class,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,configuration,config,for,test,class,test,class,get,name,class,extends,profile,value,source,profile,value,source,type,if,config,null,profile,value,source,type,config,value,else,profile,value,source,type,class,extends,profile,value,source,annotation,utils,get,default,value,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,type,profile,value,source,type,for,class,test,class,get,name,profile,value,source,profile,value,source,if,system,profile,value,source,class,profile,value,source,type,profile,value,source,system,profile,value,source,get,instance,else,try,profile,value,source,profile,value,source,type,new,instance,catch,exception,ex,if,logger,is,warn,enabled,logger,warn,could,not,instantiate,a,profile,value,source,of,type,profile,value,source,type,for,class,test,class,get,name,using,default,ex,profile,value,source,system,profile,value,source,get,instance,return,profile,value,source
ProfileValueUtils -> @SuppressWarnings("unchecked") 	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass);1468334463;Retrieves the {@link ProfileValueSource} type for the specified_{@link Class test class} as configured via the_{@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} annotation and instantiates a new_instance of that type._<p>If {@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} is not present on the specified_class or if a custom {@link ProfileValueSource} is not declared, the_default {@link SystemProfileValueSource} will be returned instead._@param testClass The test class for which the ProfileValueSource should_be retrieved_@return the configured (or default) ProfileValueSource for the specified_class_@see SystemProfileValueSource;@SuppressWarnings("unchecked")_	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass) {_		Assert.notNull(testClass, "testClass must not be null")___		Class<ProfileValueSourceConfiguration> annotationType = ProfileValueSourceConfiguration.class__		ProfileValueSourceConfiguration config = AnnotatedElementUtils.findMergedAnnotation(testClass, annotationType)__		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved @ProfileValueSourceConfiguration [" + config + "] for test class [" +_					testClass.getName() + "]")__		}__		Class<? extends ProfileValueSource> profileValueSourceType__		if (config != null) {_			profileValueSourceType = config.value()__		}_		else {_			profileValueSourceType = (Class<? extends ProfileValueSource>) AnnotationUtils.getDefaultValue(annotationType)__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved ProfileValueSource type [" + profileValueSourceType + "] for class [" +_					testClass.getName() + "]")__		}__		ProfileValueSource profileValueSource__		if (SystemProfileValueSource.class == profileValueSourceType) {_			profileValueSource = SystemProfileValueSource.getInstance()__		}_		else {_			try {_				profileValueSource = profileValueSourceType.newInstance()__			}_			catch (Exception ex) {_				if (logger.isWarnEnabled()) {_					logger.warn("Could not instantiate a ProfileValueSource of type [" + profileValueSourceType +_							"] for class [" + testClass.getName() + "]: using default.", ex)__				}_				profileValueSource = SystemProfileValueSource.getInstance()__			}_		}__		return profileValueSource__	};retrieves,the,link,profile,value,source,type,for,the,specified,link,class,test,class,as,configured,via,the,link,profile,value,source,configuration,064,profile,value,source,configuration,annotation,and,instantiates,a,new,instance,of,that,type,p,if,link,profile,value,source,configuration,064,profile,value,source,configuration,is,not,present,on,the,specified,class,or,if,a,custom,link,profile,value,source,is,not,declared,the,default,link,system,profile,value,source,will,be,returned,instead,param,test,class,the,test,class,for,which,the,profile,value,source,should,be,retrieved,return,the,configured,or,default,profile,value,source,for,the,specified,class,see,system,profile,value,source;suppress,warnings,unchecked,public,static,profile,value,source,retrieve,profile,value,source,class,test,class,assert,not,null,test,class,test,class,must,not,be,null,class,profile,value,source,configuration,annotation,type,profile,value,source,configuration,class,profile,value,source,configuration,config,annotated,element,utils,find,merged,annotation,test,class,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,configuration,config,for,test,class,test,class,get,name,class,extends,profile,value,source,profile,value,source,type,if,config,null,profile,value,source,type,config,value,else,profile,value,source,type,class,extends,profile,value,source,annotation,utils,get,default,value,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,type,profile,value,source,type,for,class,test,class,get,name,profile,value,source,profile,value,source,if,system,profile,value,source,class,profile,value,source,type,profile,value,source,system,profile,value,source,get,instance,else,try,profile,value,source,profile,value,source,type,new,instance,catch,exception,ex,if,logger,is,warn,enabled,logger,warn,could,not,instantiate,a,profile,value,source,of,type,profile,value,source,type,for,class,test,class,get,name,using,default,ex,profile,value,source,system,profile,value,source,get,instance,return,profile,value,source
ProfileValueUtils -> @SuppressWarnings("unchecked") 	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass);1468948866;Retrieves the {@link ProfileValueSource} type for the specified_{@link Class test class} as configured via the_{@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} annotation and instantiates a new_instance of that type._<p>If {@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} is not present on the specified_class or if a custom {@link ProfileValueSource} is not declared, the_default {@link SystemProfileValueSource} will be returned instead._@param testClass The test class for which the ProfileValueSource should_be retrieved_@return the configured (or default) ProfileValueSource for the specified_class_@see SystemProfileValueSource;@SuppressWarnings("unchecked")_	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass) {_		Assert.notNull(testClass, "testClass must not be null")___		Class<ProfileValueSourceConfiguration> annotationType = ProfileValueSourceConfiguration.class__		ProfileValueSourceConfiguration config = AnnotatedElementUtils.findMergedAnnotation(testClass, annotationType)__		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved @ProfileValueSourceConfiguration [" + config + "] for test class [" +_					testClass.getName() + "]")__		}__		Class<? extends ProfileValueSource> profileValueSourceType__		if (config != null) {_			profileValueSourceType = config.value()__		}_		else {_			profileValueSourceType = (Class<? extends ProfileValueSource>) AnnotationUtils.getDefaultValue(annotationType)__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved ProfileValueSource type [" + profileValueSourceType + "] for class [" +_					testClass.getName() + "]")__		}__		ProfileValueSource profileValueSource__		if (SystemProfileValueSource.class == profileValueSourceType) {_			profileValueSource = SystemProfileValueSource.getInstance()__		}_		else {_			try {_				profileValueSource = ReflectionUtils.accessibleConstructor(profileValueSourceType).newInstance()__			}_			catch (Exception ex) {_				if (logger.isWarnEnabled()) {_					logger.warn("Could not instantiate a ProfileValueSource of type [" + profileValueSourceType +_							"] for class [" + testClass.getName() + "]: using default.", ex)__				}_				profileValueSource = SystemProfileValueSource.getInstance()__			}_		}__		return profileValueSource__	};retrieves,the,link,profile,value,source,type,for,the,specified,link,class,test,class,as,configured,via,the,link,profile,value,source,configuration,064,profile,value,source,configuration,annotation,and,instantiates,a,new,instance,of,that,type,p,if,link,profile,value,source,configuration,064,profile,value,source,configuration,is,not,present,on,the,specified,class,or,if,a,custom,link,profile,value,source,is,not,declared,the,default,link,system,profile,value,source,will,be,returned,instead,param,test,class,the,test,class,for,which,the,profile,value,source,should,be,retrieved,return,the,configured,or,default,profile,value,source,for,the,specified,class,see,system,profile,value,source;suppress,warnings,unchecked,public,static,profile,value,source,retrieve,profile,value,source,class,test,class,assert,not,null,test,class,test,class,must,not,be,null,class,profile,value,source,configuration,annotation,type,profile,value,source,configuration,class,profile,value,source,configuration,config,annotated,element,utils,find,merged,annotation,test,class,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,configuration,config,for,test,class,test,class,get,name,class,extends,profile,value,source,profile,value,source,type,if,config,null,profile,value,source,type,config,value,else,profile,value,source,type,class,extends,profile,value,source,annotation,utils,get,default,value,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,type,profile,value,source,type,for,class,test,class,get,name,profile,value,source,profile,value,source,if,system,profile,value,source,class,profile,value,source,type,profile,value,source,system,profile,value,source,get,instance,else,try,profile,value,source,reflection,utils,accessible,constructor,profile,value,source,type,new,instance,catch,exception,ex,if,logger,is,warn,enabled,logger,warn,could,not,instantiate,a,profile,value,source,of,type,profile,value,source,type,for,class,test,class,get,name,using,default,ex,profile,value,source,system,profile,value,source,get,instance,return,profile,value,source
ProfileValueUtils -> @SuppressWarnings("unchecked") 	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass);1495868221;Retrieves the {@link ProfileValueSource} type for the specified_{@link Class test class} as configured via the_{@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} annotation and instantiates a new_instance of that type._<p>If {@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} is not present on the specified_class or if a custom {@link ProfileValueSource} is not declared, the_default {@link SystemProfileValueSource} will be returned instead._@param testClass The test class for which the ProfileValueSource should_be retrieved_@return the configured (or default) ProfileValueSource for the specified_class_@see SystemProfileValueSource;@SuppressWarnings("unchecked")_	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass) {_		Assert.notNull(testClass, "testClass must not be null")___		Class<ProfileValueSourceConfiguration> annotationType = ProfileValueSourceConfiguration.class__		ProfileValueSourceConfiguration config = AnnotatedElementUtils.findMergedAnnotation(testClass, annotationType)__		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved @ProfileValueSourceConfiguration [" + config + "] for test class [" +_					testClass.getName() + "]")__		}__		Class<? extends ProfileValueSource> profileValueSourceType__		if (config != null) {_			profileValueSourceType = config.value()__		}_		else {_			profileValueSourceType = (Class<? extends ProfileValueSource>) AnnotationUtils.getDefaultValue(annotationType)__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved ProfileValueSource type [" + profileValueSourceType + "] for class [" +_					testClass.getName() + "]")__		}__		ProfileValueSource profileValueSource__		if (SystemProfileValueSource.class == profileValueSourceType) {_			profileValueSource = SystemProfileValueSource.getInstance()__		}_		else {_			try {_				profileValueSource = ReflectionUtils.accessibleConstructor(profileValueSourceType).newInstance()__			}_			catch (Exception ex) {_				if (logger.isWarnEnabled()) {_					logger.warn("Could not instantiate a ProfileValueSource of type [" + profileValueSourceType +_							"] for class [" + testClass.getName() + "]: using default.", ex)__				}_				profileValueSource = SystemProfileValueSource.getInstance()__			}_		}__		return profileValueSource__	};retrieves,the,link,profile,value,source,type,for,the,specified,link,class,test,class,as,configured,via,the,link,profile,value,source,configuration,064,profile,value,source,configuration,annotation,and,instantiates,a,new,instance,of,that,type,p,if,link,profile,value,source,configuration,064,profile,value,source,configuration,is,not,present,on,the,specified,class,or,if,a,custom,link,profile,value,source,is,not,declared,the,default,link,system,profile,value,source,will,be,returned,instead,param,test,class,the,test,class,for,which,the,profile,value,source,should,be,retrieved,return,the,configured,or,default,profile,value,source,for,the,specified,class,see,system,profile,value,source;suppress,warnings,unchecked,public,static,profile,value,source,retrieve,profile,value,source,class,test,class,assert,not,null,test,class,test,class,must,not,be,null,class,profile,value,source,configuration,annotation,type,profile,value,source,configuration,class,profile,value,source,configuration,config,annotated,element,utils,find,merged,annotation,test,class,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,configuration,config,for,test,class,test,class,get,name,class,extends,profile,value,source,profile,value,source,type,if,config,null,profile,value,source,type,config,value,else,profile,value,source,type,class,extends,profile,value,source,annotation,utils,get,default,value,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,type,profile,value,source,type,for,class,test,class,get,name,profile,value,source,profile,value,source,if,system,profile,value,source,class,profile,value,source,type,profile,value,source,system,profile,value,source,get,instance,else,try,profile,value,source,reflection,utils,accessible,constructor,profile,value,source,type,new,instance,catch,exception,ex,if,logger,is,warn,enabled,logger,warn,could,not,instantiate,a,profile,value,source,of,type,profile,value,source,type,for,class,test,class,get,name,using,default,ex,profile,value,source,system,profile,value,source,get,instance,return,profile,value,source
ProfileValueUtils -> @SuppressWarnings("unchecked") 	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass);1496955179;Retrieves the {@link ProfileValueSource} type for the specified_{@link Class test class} as configured via the_{@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} annotation and instantiates a new_instance of that type._<p>If {@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} is not present on the specified_class or if a custom {@link ProfileValueSource} is not declared, the_default {@link SystemProfileValueSource} will be returned instead._@param testClass The test class for which the ProfileValueSource should_be retrieved_@return the configured (or default) ProfileValueSource for the specified_class_@see SystemProfileValueSource;@SuppressWarnings("unchecked")_	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass) {_		Assert.notNull(testClass, "testClass must not be null")___		Class<ProfileValueSourceConfiguration> annotationType = ProfileValueSourceConfiguration.class__		ProfileValueSourceConfiguration config = AnnotatedElementUtils.findMergedAnnotation(testClass, annotationType)__		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved @ProfileValueSourceConfiguration [" + config + "] for test class [" +_					testClass.getName() + "]")__		}__		Class<? extends ProfileValueSource> profileValueSourceType__		if (config != null) {_			profileValueSourceType = config.value()__		}_		else {_			profileValueSourceType = (Class<? extends ProfileValueSource>) AnnotationUtils.getDefaultValue(annotationType)__			Assert.state(profileValueSourceType != null, "No default ProfileValueSource class")__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved ProfileValueSource type [" + profileValueSourceType + "] for class [" +_					testClass.getName() + "]")__		}__		ProfileValueSource profileValueSource__		if (SystemProfileValueSource.class == profileValueSourceType) {_			profileValueSource = SystemProfileValueSource.getInstance()__		}_		else {_			try {_				profileValueSource = ReflectionUtils.accessibleConstructor(profileValueSourceType).newInstance()__			}_			catch (Exception ex) {_				if (logger.isWarnEnabled()) {_					logger.warn("Could not instantiate a ProfileValueSource of type [" + profileValueSourceType +_							"] for class [" + testClass.getName() + "]: using default.", ex)__				}_				profileValueSource = SystemProfileValueSource.getInstance()__			}_		}__		return profileValueSource__	};retrieves,the,link,profile,value,source,type,for,the,specified,link,class,test,class,as,configured,via,the,link,profile,value,source,configuration,064,profile,value,source,configuration,annotation,and,instantiates,a,new,instance,of,that,type,p,if,link,profile,value,source,configuration,064,profile,value,source,configuration,is,not,present,on,the,specified,class,or,if,a,custom,link,profile,value,source,is,not,declared,the,default,link,system,profile,value,source,will,be,returned,instead,param,test,class,the,test,class,for,which,the,profile,value,source,should,be,retrieved,return,the,configured,or,default,profile,value,source,for,the,specified,class,see,system,profile,value,source;suppress,warnings,unchecked,public,static,profile,value,source,retrieve,profile,value,source,class,test,class,assert,not,null,test,class,test,class,must,not,be,null,class,profile,value,source,configuration,annotation,type,profile,value,source,configuration,class,profile,value,source,configuration,config,annotated,element,utils,find,merged,annotation,test,class,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,configuration,config,for,test,class,test,class,get,name,class,extends,profile,value,source,profile,value,source,type,if,config,null,profile,value,source,type,config,value,else,profile,value,source,type,class,extends,profile,value,source,annotation,utils,get,default,value,annotation,type,assert,state,profile,value,source,type,null,no,default,profile,value,source,class,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,type,profile,value,source,type,for,class,test,class,get,name,profile,value,source,profile,value,source,if,system,profile,value,source,class,profile,value,source,type,profile,value,source,system,profile,value,source,get,instance,else,try,profile,value,source,reflection,utils,accessible,constructor,profile,value,source,type,new,instance,catch,exception,ex,if,logger,is,warn,enabled,logger,warn,could,not,instantiate,a,profile,value,source,of,type,profile,value,source,type,for,class,test,class,get,name,using,default,ex,profile,value,source,system,profile,value,source,get,instance,return,profile,value,source
ProfileValueUtils -> @SuppressWarnings("unchecked") 	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass);1530174524;Retrieves the {@link ProfileValueSource} type for the specified_{@link Class test class} as configured via the_{@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} annotation and instantiates a new_instance of that type._<p>If {@link ProfileValueSourceConfiguration_&#064_ProfileValueSourceConfiguration} is not present on the specified_class or if a custom {@link ProfileValueSource} is not declared, the_default {@link SystemProfileValueSource} will be returned instead._@param testClass the test class for which the ProfileValueSource should_be retrieved_@return the configured (or default) ProfileValueSource for the specified_class_@see SystemProfileValueSource;@SuppressWarnings("unchecked")_	public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass) {_		Assert.notNull(testClass, "testClass must not be null")___		Class<ProfileValueSourceConfiguration> annotationType = ProfileValueSourceConfiguration.class__		ProfileValueSourceConfiguration config = AnnotatedElementUtils.findMergedAnnotation(testClass, annotationType)__		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved @ProfileValueSourceConfiguration [" + config + "] for test class [" +_					testClass.getName() + "]")__		}__		Class<? extends ProfileValueSource> profileValueSourceType__		if (config != null) {_			profileValueSourceType = config.value()__		}_		else {_			profileValueSourceType = (Class<? extends ProfileValueSource>) AnnotationUtils.getDefaultValue(annotationType)__			Assert.state(profileValueSourceType != null, "No default ProfileValueSource class")__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Retrieved ProfileValueSource type [" + profileValueSourceType + "] for class [" +_					testClass.getName() + "]")__		}__		ProfileValueSource profileValueSource__		if (SystemProfileValueSource.class == profileValueSourceType) {_			profileValueSource = SystemProfileValueSource.getInstance()__		}_		else {_			try {_				profileValueSource = ReflectionUtils.accessibleConstructor(profileValueSourceType).newInstance()__			}_			catch (Exception ex) {_				if (logger.isWarnEnabled()) {_					logger.warn("Could not instantiate a ProfileValueSource of type [" + profileValueSourceType +_							"] for class [" + testClass.getName() + "]: using default.", ex)__				}_				profileValueSource = SystemProfileValueSource.getInstance()__			}_		}__		return profileValueSource__	};retrieves,the,link,profile,value,source,type,for,the,specified,link,class,test,class,as,configured,via,the,link,profile,value,source,configuration,064,profile,value,source,configuration,annotation,and,instantiates,a,new,instance,of,that,type,p,if,link,profile,value,source,configuration,064,profile,value,source,configuration,is,not,present,on,the,specified,class,or,if,a,custom,link,profile,value,source,is,not,declared,the,default,link,system,profile,value,source,will,be,returned,instead,param,test,class,the,test,class,for,which,the,profile,value,source,should,be,retrieved,return,the,configured,or,default,profile,value,source,for,the,specified,class,see,system,profile,value,source;suppress,warnings,unchecked,public,static,profile,value,source,retrieve,profile,value,source,class,test,class,assert,not,null,test,class,test,class,must,not,be,null,class,profile,value,source,configuration,annotation,type,profile,value,source,configuration,class,profile,value,source,configuration,config,annotated,element,utils,find,merged,annotation,test,class,annotation,type,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,configuration,config,for,test,class,test,class,get,name,class,extends,profile,value,source,profile,value,source,type,if,config,null,profile,value,source,type,config,value,else,profile,value,source,type,class,extends,profile,value,source,annotation,utils,get,default,value,annotation,type,assert,state,profile,value,source,type,null,no,default,profile,value,source,class,if,logger,is,debug,enabled,logger,debug,retrieved,profile,value,source,type,profile,value,source,type,for,class,test,class,get,name,profile,value,source,profile,value,source,if,system,profile,value,source,class,profile,value,source,type,profile,value,source,system,profile,value,source,get,instance,else,try,profile,value,source,reflection,utils,accessible,constructor,profile,value,source,type,new,instance,catch,exception,ex,if,logger,is,warn,enabled,logger,warn,could,not,instantiate,a,profile,value,source,of,type,profile,value,source,type,for,class,test,class,get,name,using,default,ex,profile,value,source,system,profile,value,source,get,instance,return,profile,value,source
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass);1328020251;Determine if the supplied <code>testMethod</code> is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>_Defaults to <code>true</code> if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared.__@param testMethod the test method_@param testClass the test class_@return <code>true</code> if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass) {_		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), testMethod, testClass)__	};determine,if,the,supplied,code,test,method,code,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,code,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,code,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,method,test,method,class,test,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,test,method,test,class
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass);1356735495;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>_Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared.__@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass) {_		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), testMethod, testClass)__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,method,test,method,class,test,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,test,method,test,class
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass);1382920864;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>_Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared.__@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass) {_		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), testMethod, testClass)__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,method,test,method,class,test,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,test,method,test,class
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass);1413848647;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>_Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared.__@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass) {_		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), testMethod, testClass)__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,method,test,method,class,test,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,test,method,test,class
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass);1432125256;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>_Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared.__@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass) {_		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), testMethod, testClass)__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,method,test,method,class,test,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,test,method,test,class
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass);1458754760;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared._@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass) {_		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), testMethod, testClass)__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,method,test,method,class,test,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,test,method,test,class
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass);1468334463;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared._@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass) {_		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), testMethod, testClass)__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,method,test,method,class,test,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,test,method,test,class
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass);1468948866;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared._@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass) {_		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), testMethod, testClass)__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,method,test,method,class,test,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,test,method,test,class
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass);1495868221;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared._@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass) {_		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), testMethod, testClass)__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,method,test,method,class,test,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,test,method,test,class
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass);1496955179;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared._@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass) {_		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), testMethod, testClass)__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,method,test,method,class,test,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,test,method,test,class
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass);1530174524;Determine if the supplied {@code testMethod} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation, which may be declared on the test_method itself or at the class level. Class-level usage overrides_method-level usage._<p>Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared._@param testMethod the test method_@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Method testMethod, Class<?> testClass) {_		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), testMethod, testClass)__	};determine,if,the,supplied,code,test,method,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,which,may,be,declared,on,the,test,method,itself,or,at,the,class,level,class,level,usage,overrides,method,level,usage,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,method,the,test,method,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,method,test,method,class,test,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,test,method,test,class
ProfileValueUtils -> private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, 			@Nullable IfProfileValue ifProfileValue);1495868221;Determine if the {@code value} (or one of the {@code values})_in the supplied {@link IfProfileValue &#064_IfProfileValue} annotation is_<em>enabled</em> in the current environment._@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param ifProfileValue the annotation to introspect_ may be_{@code null}_@return {@code true} if the test is <em>enabled</em> in the current_environment or if the supplied {@code ifProfileValue} is_{@code null};private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource,_			@Nullable IfProfileValue ifProfileValue) {__		if (ifProfileValue == null) {_			return true__		}__		String environmentValue = profileValueSource.get(ifProfileValue.name())__		String[] annotatedValues = ifProfileValue.values()__		if (StringUtils.hasLength(ifProfileValue.value())) {_			Assert.isTrue(annotatedValues.length == 0, () -> "Setting both the 'value' and 'values' attributes " +_						"of @IfProfileValue is not allowed: choose one or the other.")__			annotatedValues = new String[] { ifProfileValue.value() }__		}__		for (String value : annotatedValues) {_			if (ObjectUtils.nullSafeEquals(value, environmentValue)) {_				return true__			}_		}_		return false__	};determine,if,the,code,value,or,one,of,the,code,values,in,the,supplied,link,if,profile,value,064,if,profile,value,annotation,is,em,enabled,em,in,the,current,environment,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,if,profile,value,the,annotation,to,introspect,may,be,code,null,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment,or,if,the,supplied,code,if,profile,value,is,code,null;private,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,nullable,if,profile,value,if,profile,value,if,if,profile,value,null,return,true,string,environment,value,profile,value,source,get,if,profile,value,name,string,annotated,values,if,profile,value,values,if,string,utils,has,length,if,profile,value,value,assert,is,true,annotated,values,length,0,setting,both,the,value,and,values,attributes,of,if,profile,value,is,not,allowed,choose,one,or,the,other,annotated,values,new,string,if,profile,value,value,for,string,value,annotated,values,if,object,utils,null,safe,equals,value,environment,value,return,true,return,false
ProfileValueUtils -> private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, 			@Nullable IfProfileValue ifProfileValue);1496955179;Determine if the {@code value} (or one of the {@code values})_in the supplied {@link IfProfileValue &#064_IfProfileValue} annotation is_<em>enabled</em> in the current environment._@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param ifProfileValue the annotation to introspect_ may be_{@code null}_@return {@code true} if the test is <em>enabled</em> in the current_environment or if the supplied {@code ifProfileValue} is_{@code null};private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource,_			@Nullable IfProfileValue ifProfileValue) {__		if (ifProfileValue == null) {_			return true__		}__		String environmentValue = profileValueSource.get(ifProfileValue.name())__		String[] annotatedValues = ifProfileValue.values()__		if (StringUtils.hasLength(ifProfileValue.value())) {_			Assert.isTrue(annotatedValues.length == 0, () -> "Setting both the 'value' and 'values' attributes " +_						"of @IfProfileValue is not allowed: choose one or the other.")__			annotatedValues = new String[] { ifProfileValue.value() }__		}__		for (String value : annotatedValues) {_			if (ObjectUtils.nullSafeEquals(value, environmentValue)) {_				return true__			}_		}_		return false__	};determine,if,the,code,value,or,one,of,the,code,values,in,the,supplied,link,if,profile,value,064,if,profile,value,annotation,is,em,enabled,em,in,the,current,environment,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,if,profile,value,the,annotation,to,introspect,may,be,code,null,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment,or,if,the,supplied,code,if,profile,value,is,code,null;private,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,nullable,if,profile,value,if,profile,value,if,if,profile,value,null,return,true,string,environment,value,profile,value,source,get,if,profile,value,name,string,annotated,values,if,profile,value,values,if,string,utils,has,length,if,profile,value,value,assert,is,true,annotated,values,length,0,setting,both,the,value,and,values,attributes,of,if,profile,value,is,not,allowed,choose,one,or,the,other,annotated,values,new,string,if,profile,value,value,for,string,value,annotated,values,if,object,utils,null,safe,equals,value,environment,value,return,true,return,false
ProfileValueUtils -> private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource, 			@Nullable IfProfileValue ifProfileValue);1530174524;Determine if the {@code value} (or one of the {@code values})_in the supplied {@link IfProfileValue &#064_IfProfileValue} annotation is_<em>enabled</em> in the current environment._@param profileValueSource the ProfileValueSource to use to determine if_the test is enabled_@param ifProfileValue the annotation to introspect_ may be_{@code null}_@return {@code true} if the test is <em>enabled</em> in the current_environment or if the supplied {@code ifProfileValue} is_{@code null};private static boolean isTestEnabledInThisEnvironment(ProfileValueSource profileValueSource,_			@Nullable IfProfileValue ifProfileValue) {__		if (ifProfileValue == null) {_			return true__		}__		String environmentValue = profileValueSource.get(ifProfileValue.name())__		String[] annotatedValues = ifProfileValue.values()__		if (StringUtils.hasLength(ifProfileValue.value())) {_			Assert.isTrue(annotatedValues.length == 0, () -> "Setting both the 'value' and 'values' attributes " +_						"of @IfProfileValue is not allowed: choose one or the other.")__			annotatedValues = new String[] { ifProfileValue.value() }__		}__		for (String value : annotatedValues) {_			if (ObjectUtils.nullSafeEquals(value, environmentValue)) {_				return true__			}_		}_		return false__	};determine,if,the,code,value,or,one,of,the,code,values,in,the,supplied,link,if,profile,value,064,if,profile,value,annotation,is,em,enabled,em,in,the,current,environment,param,profile,value,source,the,profile,value,source,to,use,to,determine,if,the,test,is,enabled,param,if,profile,value,the,annotation,to,introspect,may,be,code,null,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment,or,if,the,supplied,code,if,profile,value,is,code,null;private,static,boolean,is,test,enabled,in,this,environment,profile,value,source,profile,value,source,nullable,if,profile,value,if,profile,value,if,if,profile,value,null,return,true,string,environment,value,profile,value,source,get,if,profile,value,name,string,annotated,values,if,profile,value,values,if,string,utils,has,length,if,profile,value,value,assert,is,true,annotated,values,length,0,setting,both,the,value,and,values,attributes,of,if,profile,value,is,not,allowed,choose,one,or,the,other,annotated,values,new,string,if,profile,value,value,for,string,value,annotated,values,if,object,utils,null,safe,equals,value,environment,value,return,true,return,false
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Class<?> testClass);1328020251;Determine if the supplied <code>testClass</code> is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation at the class level._<p>_Defaults to <code>true</code> if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared.__@param testClass the test class_@return <code>true</code> if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Class<?> testClass) {_		IfProfileValue ifProfileValue = testClass.getAnnotation(IfProfileValue.class)__		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), ifProfileValue)__	};determine,if,the,supplied,code,test,class,code,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,at,the,class,level,p,defaults,to,code,true,code,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,class,the,test,class,return,code,true,code,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,class,test,class,if,profile,value,if,profile,value,test,class,get,annotation,if,profile,value,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,if,profile,value
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Class<?> testClass);1356735495;Determine if the supplied {@code testClass} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation at the class level._<p>_Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared.__@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Class<?> testClass) {_		IfProfileValue ifProfileValue = testClass.getAnnotation(IfProfileValue.class)__		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), ifProfileValue)__	};determine,if,the,supplied,code,test,class,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,at,the,class,level,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,class,test,class,if,profile,value,if,profile,value,test,class,get,annotation,if,profile,value,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,if,profile,value
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Class<?> testClass);1382920864;Determine if the supplied {@code testClass} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation at the class level._<p>_Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared.__@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Class<?> testClass) {_		IfProfileValue ifProfileValue = findAnnotation(testClass, IfProfileValue.class)__		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), ifProfileValue)__	};determine,if,the,supplied,code,test,class,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,at,the,class,level,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,class,test,class,if,profile,value,if,profile,value,find,annotation,test,class,if,profile,value,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,if,profile,value
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Class<?> testClass);1413848647;Determine if the supplied {@code testClass} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation at the class level._<p>_Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared.__@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Class<?> testClass) {_		IfProfileValue ifProfileValue = findAnnotation(testClass, IfProfileValue.class)__		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), ifProfileValue)__	};determine,if,the,supplied,code,test,class,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,at,the,class,level,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,class,test,class,if,profile,value,if,profile,value,find,annotation,test,class,if,profile,value,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,if,profile,value
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Class<?> testClass);1432125256;Determine if the supplied {@code testClass} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation at the class level._<p>_Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared.__@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Class<?> testClass) {_		IfProfileValue ifProfileValue = findAnnotation(testClass, IfProfileValue.class)__		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), ifProfileValue)__	};determine,if,the,supplied,code,test,class,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,at,the,class,level,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,class,test,class,if,profile,value,if,profile,value,find,annotation,test,class,if,profile,value,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,if,profile,value
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Class<?> testClass);1458754760;Determine if the supplied {@code testClass} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation at the class level._<p>Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared._@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Class<?> testClass) {_		IfProfileValue ifProfileValue = AnnotatedElementUtils.findMergedAnnotation(testClass, IfProfileValue.class)__		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), ifProfileValue)__	};determine,if,the,supplied,code,test,class,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,at,the,class,level,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,class,test,class,if,profile,value,if,profile,value,annotated,element,utils,find,merged,annotation,test,class,if,profile,value,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,if,profile,value
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Class<?> testClass);1468334463;Determine if the supplied {@code testClass} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation at the class level._<p>Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared._@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Class<?> testClass) {_		IfProfileValue ifProfileValue = AnnotatedElementUtils.findMergedAnnotation(testClass, IfProfileValue.class)__		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), ifProfileValue)__	};determine,if,the,supplied,code,test,class,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,at,the,class,level,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,class,test,class,if,profile,value,if,profile,value,annotated,element,utils,find,merged,annotation,test,class,if,profile,value,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,if,profile,value
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Class<?> testClass);1468948866;Determine if the supplied {@code testClass} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation at the class level._<p>Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared._@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Class<?> testClass) {_		IfProfileValue ifProfileValue = AnnotatedElementUtils.findMergedAnnotation(testClass, IfProfileValue.class)__		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), ifProfileValue)__	};determine,if,the,supplied,code,test,class,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,at,the,class,level,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,class,test,class,if,profile,value,if,profile,value,annotated,element,utils,find,merged,annotation,test,class,if,profile,value,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,if,profile,value
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Class<?> testClass);1495868221;Determine if the supplied {@code testClass} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation at the class level._<p>Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared._@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Class<?> testClass) {_		IfProfileValue ifProfileValue = AnnotatedElementUtils.findMergedAnnotation(testClass, IfProfileValue.class)__		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), ifProfileValue)__	};determine,if,the,supplied,code,test,class,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,at,the,class,level,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,class,test,class,if,profile,value,if,profile,value,annotated,element,utils,find,merged,annotation,test,class,if,profile,value,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,if,profile,value
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Class<?> testClass);1496955179;Determine if the supplied {@code testClass} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation at the class level._<p>Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared._@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Class<?> testClass) {_		IfProfileValue ifProfileValue = AnnotatedElementUtils.findMergedAnnotation(testClass, IfProfileValue.class)__		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), ifProfileValue)__	};determine,if,the,supplied,code,test,class,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,at,the,class,level,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,class,test,class,if,profile,value,if,profile,value,annotated,element,utils,find,merged,annotation,test,class,if,profile,value,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,if,profile,value
ProfileValueUtils -> public static boolean isTestEnabledInThisEnvironment(Class<?> testClass);1530174524;Determine if the supplied {@code testClass} is <em>enabled</em> in_the current environment, as specified by the {@link IfProfileValue_&#064_IfProfileValue} annotation at the class level._<p>Defaults to {@code true} if no {@link IfProfileValue_&#064_IfProfileValue} annotation is declared._@param testClass the test class_@return {@code true} if the test is <em>enabled</em> in the current_environment;public static boolean isTestEnabledInThisEnvironment(Class<?> testClass) {_		IfProfileValue ifProfileValue = AnnotatedElementUtils.findMergedAnnotation(testClass, IfProfileValue.class)__		return isTestEnabledInThisEnvironment(retrieveProfileValueSource(testClass), ifProfileValue)__	};determine,if,the,supplied,code,test,class,is,em,enabled,em,in,the,current,environment,as,specified,by,the,link,if,profile,value,064,if,profile,value,annotation,at,the,class,level,p,defaults,to,code,true,if,no,link,if,profile,value,064,if,profile,value,annotation,is,declared,param,test,class,the,test,class,return,code,true,if,the,test,is,em,enabled,em,in,the,current,environment;public,static,boolean,is,test,enabled,in,this,environment,class,test,class,if,profile,value,if,profile,value,annotated,element,utils,find,merged,annotation,test,class,if,profile,value,class,return,is,test,enabled,in,this,environment,retrieve,profile,value,source,test,class,if,profile,value
