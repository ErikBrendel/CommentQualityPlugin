# id;timestamp;commentText;codeText;commentWords;codeWords
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1383669853;Expect a request to the given URI.__@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				AssertionErrors.assertEquals("Unexpected request", uri, request.getURI())__			}_		}__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assertion,errors,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1385412762;Expect a request to the given URI.__@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				AssertionErrors.assertEquals("Unexpected request", uri, request.getURI())__			}_		}__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assertion,errors,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1413848647;Expect a request to the given URI.__@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				AssertionErrors.assertEquals("Unexpected request", uri, request.getURI())__			}_		}__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assertion,errors,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1427238287;Expect a request to the given URI._@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				AssertionErrors.assertEquals("Unexpected request", uri, request.getURI())__			}_		}__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assertion,errors,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1439585110;Expect a request to the given URI._@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				AssertionErrors.assertEquals("Unexpected request", uri, request.getURI())__			}_		}__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assertion,errors,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1464613615;Expect a request to the given URI._@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				AssertionErrors.assertEquals("Unexpected request", uri, request.getURI())__			}_		}__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assertion,errors,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1465232056;Expect a request to the given URI._@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				AssertionErrors.assertEquals("Unexpected request", uri, request.getURI())__			}_		}__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assertion,errors,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1481662884;Expect a request to the given URI._@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				AssertionErrors.assertEquals("Unexpected request", uri, request.getURI())__			}_		}__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assertion,errors,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1483747037;Expect a request to the given URI._@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				AssertionErrors.assertEquals("Unexpected request", uri, request.getURI())__			}_		}__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assertion,errors,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1496955179;Expect a request to the given URI._@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				AssertionErrors.assertEquals("Unexpected request", uri, request.getURI())__			}_		}__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assertion,errors,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1497341397;Expect a request to the given URI._@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return request -> assertEquals("Unexpected request", uri, request.getURI())__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,request,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1502802662;Expect a request to the given URI._@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return request -> assertEquals("Unexpected request", uri, request.getURI())__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,request,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1520424452;Expect a request to the given URI._@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return request -> assertEquals("Unexpected request", uri, request.getURI())__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,request,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1520425341;Expect a request to the given URI._@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return request -> assertEquals("Unexpected request", uri, request.getURI())__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,request,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1520425356;Expect a request to the given URI._@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return request -> assertEquals("Unexpected request", uri, request.getURI())__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,request,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1520428857;Expect a request to the given URI._@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return request -> assertEquals("Unexpected request", uri, request.getURI())__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,request,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1520529117;Expect a request to the given URI._@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return request -> assertEquals("Unexpected request", uri, request.getURI())__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,request,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1520952939;Expect a request to the given URI._@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return request -> assertEquals("Unexpected request", uri, request.getURI())__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,request,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1530174524;Expect a request to the given URI._@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return request -> assertEquals("Unexpected request", uri, request.getURI())__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,request,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> public static RequestMatcher requestTo(final URI uri);1530174524;Expect a request to the given URI._@param uri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final URI uri) {_		Assert.notNull(uri, "'uri' must not be null")__		return request -> assertEquals("Unexpected request", uri, request.getURI())__	};expect,a,request,to,the,given,uri,param,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,uri,uri,assert,not,null,uri,uri,must,not,be,null,return,request,assert,equals,unexpected,request,uri,request,get,uri
MockRestRequestMatchers -> private MockRestRequestMatchers();1383669853;Private class constructor.;private MockRestRequestMatchers() {_	};private,class,constructor;private,mock,rest,request,matchers
MockRestRequestMatchers -> private MockRestRequestMatchers();1385412762;Private class constructor.;private MockRestRequestMatchers() {_	};private,class,constructor;private,mock,rest,request,matchers
MockRestRequestMatchers -> private MockRestRequestMatchers();1413848647;Private class constructor.;private MockRestRequestMatchers() {_	};private,class,constructor;private,mock,rest,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1383669853;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1385412762;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1413848647;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1427238287;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1439585110;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1464613615;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1465232056;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1481662884;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1483747037;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1496955179;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1497341397;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1502802662;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1520424452;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1520425341;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1520425356;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1520428857;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1520529117;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1520952939;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1530174524;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static ContentRequestMatchers content();1530174524;Access to request body matchers.;public static ContentRequestMatchers content() {_		return new ContentRequestMatchers()__	};access,to,request,body,matchers;public,static,content,request,matchers,content,return,new,content,request,matchers
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1383669853;Assert the {@link HttpMethod} of the request.__@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_				AssertionErrors.assertEquals("Unexpected HttpMethod", method, request.getMethod())__			}_		}__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error,assertion,errors,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1385412762;Assert the {@link HttpMethod} of the request.__@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_				AssertionErrors.assertEquals("Unexpected HttpMethod", method, request.getMethod())__			}_		}__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error,assertion,errors,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1413848647;Assert the {@link HttpMethod} of the request.__@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_				AssertionErrors.assertEquals("Unexpected HttpMethod", method, request.getMethod())__			}_		}__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error,assertion,errors,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1427238287;Assert the {@link HttpMethod} of the request._@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_				AssertionErrors.assertEquals("Unexpected HttpMethod", method, request.getMethod())__			}_		}__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error,assertion,errors,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1439585110;Assert the {@link HttpMethod} of the request._@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_				AssertionErrors.assertEquals("Unexpected HttpMethod", method, request.getMethod())__			}_		}__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error,assertion,errors,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1464613615;Assert the {@link HttpMethod} of the request._@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_				AssertionErrors.assertEquals("Unexpected HttpMethod", method, request.getMethod())__			}_		}__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error,assertion,errors,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1465232056;Assert the {@link HttpMethod} of the request._@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_				AssertionErrors.assertEquals("Unexpected HttpMethod", method, request.getMethod())__			}_		}__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error,assertion,errors,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1481662884;Assert the {@link HttpMethod} of the request._@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_				AssertionErrors.assertEquals("Unexpected HttpMethod", method, request.getMethod())__			}_		}__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error,assertion,errors,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1483747037;Assert the {@link HttpMethod} of the request._@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_				AssertionErrors.assertEquals("Unexpected HttpMethod", method, request.getMethod())__			}_		}__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error,assertion,errors,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1496955179;Assert the {@link HttpMethod} of the request._@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_				AssertionErrors.assertEquals("Unexpected HttpMethod", method, request.getMethod())__			}_		}__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error,assertion,errors,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1497341397;Assert the {@link HttpMethod} of the request._@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return request -> assertEquals("Unexpected HttpMethod", method, request.getMethod())__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,request,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1502802662;Assert the {@link HttpMethod} of the request._@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return request -> assertEquals("Unexpected HttpMethod", method, request.getMethod())__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,request,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1520424452;Assert the {@link HttpMethod} of the request._@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return request -> assertEquals("Unexpected HttpMethod", method, request.getMethod())__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,request,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1520425341;Assert the {@link HttpMethod} of the request._@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return request -> assertEquals("Unexpected HttpMethod", method, request.getMethod())__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,request,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1520425356;Assert the {@link HttpMethod} of the request._@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return request -> assertEquals("Unexpected HttpMethod", method, request.getMethod())__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,request,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1520428857;Assert the {@link HttpMethod} of the request._@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return request -> assertEquals("Unexpected HttpMethod", method, request.getMethod())__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,request,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1520529117;Assert the {@link HttpMethod} of the request._@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return request -> assertEquals("Unexpected HttpMethod", method, request.getMethod())__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,request,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1520952939;Assert the {@link HttpMethod} of the request._@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return request -> assertEquals("Unexpected HttpMethod", method, request.getMethod())__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,request,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1530174524;Assert the {@link HttpMethod} of the request._@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return request -> assertEquals("Unexpected HttpMethod", method, request.getMethod())__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,request,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher method(final HttpMethod method);1530174524;Assert the {@link HttpMethod} of the request._@param method the HTTP method_@return the request matcher;public static RequestMatcher method(final HttpMethod method) {_		Assert.notNull(method, "'method' must not be null")__		return request -> assertEquals("Unexpected HttpMethod", method, request.getMethod())__	};assert,the,link,http,method,of,the,request,param,method,the,http,method,return,the,request,matcher;public,static,request,matcher,method,final,http,method,method,assert,not,null,method,method,must,not,be,null,return,request,assert,equals,unexpected,http,method,method,request,get,method
MockRestRequestMatchers -> public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars);1502802662;Variant of {@link #requestTo(URI)} that prepares the URI from a URI_template plus optional variables via {@link UriComponentsBuilder}_including encoding._@param expectedUri the expected URI template_@param uriVars zero or more URI variables to populate the expected URI_@return the request matcher;public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		URI uri = UriComponentsBuilder.fromUriString(expectedUri).buildAndExpand(uriVars).encode().toUri()__		return requestTo(uri)__	};variant,of,link,request,to,uri,that,prepares,the,uri,from,a,uri,template,plus,optional,variables,via,link,uri,components,builder,including,encoding,param,expected,uri,the,expected,uri,template,param,uri,vars,zero,or,more,uri,variables,to,populate,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,uri,template,final,string,expected,uri,final,object,uri,vars,assert,not,null,expected,uri,uri,must,not,be,null,uri,uri,uri,components,builder,from,uri,string,expected,uri,build,and,expand,uri,vars,encode,to,uri,return,request,to,uri
MockRestRequestMatchers -> public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars);1520424452;Variant of {@link #requestTo(URI)} that prepares the URI from a URI_template plus optional variables via {@link UriComponentsBuilder}_including encoding._@param expectedUri the expected URI template_@param uriVars zero or more URI variables to populate the expected URI_@return the request matcher;public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		URI uri = UriComponentsBuilder.fromUriString(expectedUri).buildAndExpand(uriVars).encode().toUri()__		return requestTo(uri)__	};variant,of,link,request,to,uri,that,prepares,the,uri,from,a,uri,template,plus,optional,variables,via,link,uri,components,builder,including,encoding,param,expected,uri,the,expected,uri,template,param,uri,vars,zero,or,more,uri,variables,to,populate,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,uri,template,final,string,expected,uri,final,object,uri,vars,assert,not,null,expected,uri,uri,must,not,be,null,uri,uri,uri,components,builder,from,uri,string,expected,uri,build,and,expand,uri,vars,encode,to,uri,return,request,to,uri
MockRestRequestMatchers -> public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars);1520425341;Variant of {@link #requestTo(URI)} that prepares the URI from a URI_template plus optional variables via {@link UriComponentsBuilder}_including encoding._@param expectedUri the expected URI template_@param uriVars zero or more URI variables to populate the expected URI_@return the request matcher;public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		URI uri = UriComponentsBuilder.fromUriString(expectedUri).buildAndExpand(uriVars).encode().toUri()__		return requestTo(uri)__	};variant,of,link,request,to,uri,that,prepares,the,uri,from,a,uri,template,plus,optional,variables,via,link,uri,components,builder,including,encoding,param,expected,uri,the,expected,uri,template,param,uri,vars,zero,or,more,uri,variables,to,populate,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,uri,template,final,string,expected,uri,final,object,uri,vars,assert,not,null,expected,uri,uri,must,not,be,null,uri,uri,uri,components,builder,from,uri,string,expected,uri,build,and,expand,uri,vars,encode,to,uri,return,request,to,uri
MockRestRequestMatchers -> public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars);1520425356;Variant of {@link #requestTo(URI)} that prepares the URI from a URI_template plus optional variables via {@link UriComponentsBuilder}_including encoding._@param expectedUri the expected URI template_@param uriVars zero or more URI variables to populate the expected URI_@return the request matcher;public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		URI uri = UriComponentsBuilder.fromUriString(expectedUri).buildAndExpand(uriVars).encode().toUri()__		return requestTo(uri)__	};variant,of,link,request,to,uri,that,prepares,the,uri,from,a,uri,template,plus,optional,variables,via,link,uri,components,builder,including,encoding,param,expected,uri,the,expected,uri,template,param,uri,vars,zero,or,more,uri,variables,to,populate,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,uri,template,final,string,expected,uri,final,object,uri,vars,assert,not,null,expected,uri,uri,must,not,be,null,uri,uri,uri,components,builder,from,uri,string,expected,uri,build,and,expand,uri,vars,encode,to,uri,return,request,to,uri
MockRestRequestMatchers -> public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars);1520428857;Variant of {@link #requestTo(URI)} that prepares the URI from a URI_template plus optional variables via {@link UriComponentsBuilder}_including encoding._@param expectedUri the expected URI template_@param uriVars zero or more URI variables to populate the expected URI_@return the request matcher;public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		URI uri = UriComponentsBuilder.fromUriString(expectedUri).buildAndExpand(uriVars).encode().toUri()__		return requestTo(uri)__	};variant,of,link,request,to,uri,that,prepares,the,uri,from,a,uri,template,plus,optional,variables,via,link,uri,components,builder,including,encoding,param,expected,uri,the,expected,uri,template,param,uri,vars,zero,or,more,uri,variables,to,populate,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,uri,template,final,string,expected,uri,final,object,uri,vars,assert,not,null,expected,uri,uri,must,not,be,null,uri,uri,uri,components,builder,from,uri,string,expected,uri,build,and,expand,uri,vars,encode,to,uri,return,request,to,uri
MockRestRequestMatchers -> public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars);1520529117;Variant of {@link #requestTo(URI)} that prepares the URI from a URI_template plus optional variables via {@link UriComponentsBuilder}_including encoding._@param expectedUri the expected URI template_@param uriVars zero or more URI variables to populate the expected URI_@return the request matcher;public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		URI uri = UriComponentsBuilder.fromUriString(expectedUri).buildAndExpand(uriVars).encode().toUri()__		return requestTo(uri)__	};variant,of,link,request,to,uri,that,prepares,the,uri,from,a,uri,template,plus,optional,variables,via,link,uri,components,builder,including,encoding,param,expected,uri,the,expected,uri,template,param,uri,vars,zero,or,more,uri,variables,to,populate,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,uri,template,final,string,expected,uri,final,object,uri,vars,assert,not,null,expected,uri,uri,must,not,be,null,uri,uri,uri,components,builder,from,uri,string,expected,uri,build,and,expand,uri,vars,encode,to,uri,return,request,to,uri
MockRestRequestMatchers -> public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars);1520952939;Variant of {@link #requestTo(URI)} that prepares the URI from a URI_template plus optional variables via {@link UriComponentsBuilder}_including encoding._@param expectedUri the expected URI template_@param uriVars zero or more URI variables to populate the expected URI_@return the request matcher;public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		URI uri = UriComponentsBuilder.fromUriString(expectedUri).buildAndExpand(uriVars).encode().toUri()__		return requestTo(uri)__	};variant,of,link,request,to,uri,that,prepares,the,uri,from,a,uri,template,plus,optional,variables,via,link,uri,components,builder,including,encoding,param,expected,uri,the,expected,uri,template,param,uri,vars,zero,or,more,uri,variables,to,populate,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,uri,template,final,string,expected,uri,final,object,uri,vars,assert,not,null,expected,uri,uri,must,not,be,null,uri,uri,uri,components,builder,from,uri,string,expected,uri,build,and,expand,uri,vars,encode,to,uri,return,request,to,uri
MockRestRequestMatchers -> public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars);1530174524;Variant of {@link #requestTo(URI)} that prepares the URI from a URI_template plus optional variables via {@link UriComponentsBuilder}_including encoding._@param expectedUri the expected URI template_@param uriVars zero or more URI variables to populate the expected URI_@return the request matcher;public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		URI uri = UriComponentsBuilder.fromUriString(expectedUri).buildAndExpand(uriVars).encode().toUri()__		return requestTo(uri)__	};variant,of,link,request,to,uri,that,prepares,the,uri,from,a,uri,template,plus,optional,variables,via,link,uri,components,builder,including,encoding,param,expected,uri,the,expected,uri,template,param,uri,vars,zero,or,more,uri,variables,to,populate,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,uri,template,final,string,expected,uri,final,object,uri,vars,assert,not,null,expected,uri,uri,must,not,be,null,uri,uri,uri,components,builder,from,uri,string,expected,uri,build,and,expand,uri,vars,encode,to,uri,return,request,to,uri
MockRestRequestMatchers -> public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars);1530174524;Variant of {@link #requestTo(URI)} that prepares the URI from a URI_template plus optional variables via {@link UriComponentsBuilder}_including encoding._@param expectedUri the expected URI template_@param uriVars zero or more URI variables to populate the expected URI_@return the request matcher;public static RequestMatcher requestToUriTemplate(final String expectedUri, final Object... uriVars) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		URI uri = UriComponentsBuilder.fromUriString(expectedUri).buildAndExpand(uriVars).encode().toUri()__		return requestTo(uri)__	};variant,of,link,request,to,uri,that,prepares,the,uri,from,a,uri,template,plus,optional,variables,via,link,uri,components,builder,including,encoding,param,expected,uri,the,expected,uri,template,param,uri,vars,zero,or,more,uri,variables,to,populate,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,uri,template,final,string,expected,uri,final,object,uri,vars,assert,not,null,expected,uri,uri,must,not,be,null,uri,uri,uri,components,builder,from,uri,string,expected,uri,build,and,expand,uri,vars,encode,to,uri,return,request,to,uri
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1383669853;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				assertHeaderValueCount(name, request.getHeaders(), expectedValues.length)__				for (int i = 0 _ i < expectedValues.length_ i++) {_					assertEquals("Request header + [" + name + "]",_							expectedValues[i], request.getHeaders().get(name).get(i))__				}_			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,new,request,matcher,override,public,void,match,client,http,request,request,assert,header,value,count,name,request,get,headers,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,request,get,headers,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1385412762;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				assertHeaderValueCount(name, request.getHeaders(), expectedValues.length)__				for (int i = 0 _ i < expectedValues.length_ i++) {_					assertEquals("Request header + [" + name + "]",_							expectedValues[i], request.getHeaders().get(name).get(i))__				}_			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,new,request,matcher,override,public,void,match,client,http,request,request,assert,header,value,count,name,request,get,headers,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,request,get,headers,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1413848647;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				assertHeaderValueCount(name, request.getHeaders(), expectedValues.length)__				for (int i = 0 _ i < expectedValues.length_ i++) {_					assertEquals("Request header + [" + name + "]",_							expectedValues[i], request.getHeaders().get(name).get(i))__				}_			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,new,request,matcher,override,public,void,match,client,http,request,request,assert,header,value,count,name,request,get,headers,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,request,get,headers,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1427238287;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				assertHeaderValueCount(name, request.getHeaders(), expectedValues.length)__				for (int i = 0 _ i < expectedValues.length_ i++) {_					assertEquals("Request header + [" + name + "]",_							expectedValues[i], request.getHeaders().get(name).get(i))__				}_			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,new,request,matcher,override,public,void,match,client,http,request,request,assert,header,value,count,name,request,get,headers,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,request,get,headers,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1439585110;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				assertHeaderValueCount(name, request.getHeaders(), expectedValues.length)__				for (int i = 0 _ i < expectedValues.length_ i++) {_					assertEquals("Request header + [" + name + "]",_							expectedValues[i], request.getHeaders().get(name).get(i))__				}_			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,new,request,matcher,override,public,void,match,client,http,request,request,assert,header,value,count,name,request,get,headers,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,request,get,headers,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1464613615;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				assertHeaderValueCount(name, request.getHeaders(), expectedValues.length)__				for (int i = 0 _ i < expectedValues.length_ i++) {_					assertEquals("Request header + [" + name + "]",_							expectedValues[i], request.getHeaders().get(name).get(i))__				}_			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,new,request,matcher,override,public,void,match,client,http,request,request,assert,header,value,count,name,request,get,headers,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,request,get,headers,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1465232056;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				assertHeaderValueCount(name, request.getHeaders(), expectedValues.length)__				for (int i = 0 _ i < expectedValues.length_ i++) {_					assertEquals("Request header + [" + name + "]",_							expectedValues[i], request.getHeaders().get(name).get(i))__				}_			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,new,request,matcher,override,public,void,match,client,http,request,request,assert,header,value,count,name,request,get,headers,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,request,get,headers,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1481662884;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				assertValueCount("header", name, request.getHeaders(), expectedValues.length)__				for (int i = 0 _ i < expectedValues.length_ i++) {_					assertEquals("Request header + [" + name + "]",_							expectedValues[i], request.getHeaders().get(name).get(i))__				}_			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,new,request,matcher,override,public,void,match,client,http,request,request,assert,value,count,header,name,request,get,headers,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,request,get,headers,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1483747037;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				assertValueCount("header", name, request.getHeaders(), expectedValues.length)__				for (int i = 0 _ i < expectedValues.length_ i++) {_					assertEquals("Request header + [" + name + "]",_							expectedValues[i], request.getHeaders().get(name).get(i))__				}_			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,new,request,matcher,override,public,void,match,client,http,request,request,assert,value,count,header,name,request,get,headers,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,request,get,headers,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1496955179;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				assertValueCount("header", name, request.getHeaders(), expectedValues.length)__				List<String> headerValues = request.getHeaders().get(name)__				Assert.state(headerValues != null, "No header values")__				for (int i = 0 _ i < expectedValues.length_ i++) {_					assertEquals("Request header [" + name + "]", expectedValues[i], headerValues.get(i))__				}_			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,new,request,matcher,override,public,void,match,client,http,request,request,assert,value,count,header,name,request,get,headers,expected,values,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,header,values,get,i
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1497341397;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), expectedValues.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < expectedValues.length_ i++) {_				assertEquals("Request header  [" + name + "]",_						expectedValues[i], headerValues.get(i))___			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,request,assert,value,count,header,name,request,get,headers,expected,values,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,header,values,get,i
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1502802662;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), expectedValues.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < expectedValues.length_ i++) {_				assertEquals("Request header  [" + name + "]",_						expectedValues[i], headerValues.get(i))___			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,request,assert,value,count,header,name,request,get,headers,expected,values,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,header,values,get,i
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1520424452;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), expectedValues.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < expectedValues.length_ i++) {_				assertEquals("Request header  [" + name + "]",_						expectedValues[i], headerValues.get(i))___			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,request,assert,value,count,header,name,request,get,headers,expected,values,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,header,values,get,i
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1520425341;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), expectedValues.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < expectedValues.length_ i++) {_				assertEquals("Request header  [" + name + "]",_						expectedValues[i], headerValues.get(i))___			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,request,assert,value,count,header,name,request,get,headers,expected,values,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,header,values,get,i
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1520425356;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), expectedValues.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < expectedValues.length_ i++) {_				assertEquals("Request header  [" + name + "]",_						expectedValues[i], headerValues.get(i))__			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,request,assert,value,count,header,name,request,get,headers,expected,values,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,header,values,get,i
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1520428857;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), expectedValues.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < expectedValues.length_ i++) {_				assertEquals("Request header [" + name + "]",_						expectedValues[i], headerValues.get(i))__			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,request,assert,value,count,header,name,request,get,headers,expected,values,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,header,values,get,i
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1520529117;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), expectedValues.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < expectedValues.length_ i++) {_				assertEquals("Request header [" + name + "]", expectedValues[i], headerValues.get(i))__			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,request,assert,value,count,header,name,request,get,headers,expected,values,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,header,values,get,i
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1520952939;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), expectedValues.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < expectedValues.length_ i++) {_				assertEquals("Request header [" + name + "]", expectedValues[i], headerValues.get(i))__			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,request,assert,value,count,header,name,request,get,headers,expected,values,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,header,values,get,i
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1530174524;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), expectedValues.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < expectedValues.length_ i++) {_				assertEquals("Request header [" + name + "]", expectedValues[i], headerValues.get(i))__			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,request,assert,value,count,header,name,request,get,headers,expected,values,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,header,values,get,i
MockRestRequestMatchers -> public static RequestMatcher header(final String name, final String... expectedValues);1530174524;Assert request header values.;public static RequestMatcher header(final String name, final String... expectedValues) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), expectedValues.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < expectedValues.length_ i++) {_				assertEquals("Request header [" + name + "]", expectedValues[i], headerValues.get(i))__			}_		}__	};assert,request,header,values;public,static,request,matcher,header,final,string,name,final,string,expected,values,return,request,assert,value,count,header,name,request,get,headers,expected,values,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,expected,values,length,i,assert,equals,request,header,name,expected,values,i,header,values,get,i
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1383669853;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}.__@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1385412762;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}.__@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1413848647;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}.__@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1427238287;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1439585110;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1464613615;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1465232056;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1481662884;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1483747037;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1496955179;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1497341397;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1502802662;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1520424452;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1520425341;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1520425356;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1520428857;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1520529117;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1520952939;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1530174524;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException;1530174524;Access to request body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Object... args) throws XPathExpressionException {_		return new XpathRequestMatchers(expression, null, args)__	};access,to,request,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,null,args
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1383669853;Assert the request URI string with the given matcher.__@param matcher String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertThat("Request URI", request.getURI().toString(), matcher)__			}_		}__	};assert,the,request,uri,string,with,the,given,matcher,param,matcher,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1385412762;Assert the request URI string with the given matcher.__@param matcher String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertThat("Request URI", request.getURI().toString(), matcher)__			}_		}__	};assert,the,request,uri,string,with,the,given,matcher,param,matcher,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1413848647;Assert the request URI string with the given matcher.__@param matcher String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertThat("Request URI", request.getURI().toString(), matcher)__			}_		}__	};assert,the,request,uri,string,with,the,given,matcher,param,matcher,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1427238287;Assert the request URI string with the given matcher._@param matcher String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertThat("Request URI", request.getURI().toString(), matcher)__			}_		}__	};assert,the,request,uri,string,with,the,given,matcher,param,matcher,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1439585110;Assert the request URI string with the given matcher._@param matcher String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertThat("Request URI", request.getURI().toString(), matcher)__			}_		}__	};assert,the,request,uri,string,with,the,given,matcher,param,matcher,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1464613615;Assert the request URI string with the given matcher._@param matcher String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertThat("Request URI", request.getURI().toString(), matcher)__			}_		}__	};assert,the,request,uri,string,with,the,given,matcher,param,matcher,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1465232056;Assert the request URI string with the given matcher._@param matcher String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertThat("Request URI", request.getURI().toString(), matcher)__			}_		}__	};assert,the,request,uri,string,with,the,given,matcher,param,matcher,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1481662884;Assert the request URI string with the given matcher._@param matcher String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertThat("Request URI", request.getURI().toString(), matcher)__			}_		}__	};assert,the,request,uri,string,with,the,given,matcher,param,matcher,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1483747037;Assert the request URI string with the given matcher._@param matcher String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertThat("Request URI", request.getURI().toString(), matcher)__			}_		}__	};assert,the,request,uri,string,with,the,given,matcher,param,matcher,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1496955179;Assert the request URI string with the given matcher._@param matcher String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertThat("Request URI", request.getURI().toString(), matcher)__			}_		}__	};assert,the,request,uri,string,with,the,given,matcher,param,matcher,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1497341397;Assert the request URI string with the given matcher._@param matcher String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return request -> assertThat("Request URI", request.getURI().toString(), matcher)__	};assert,the,request,uri,string,with,the,given,matcher,param,matcher,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,request,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1502802662;Assert the request URI string with the given matcher._@param matcher String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return request -> assertThat("Request URI", request.getURI().toString(), matcher)__	};assert,the,request,uri,string,with,the,given,matcher,param,matcher,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,request,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1520424452;Assert the request URI string with the given matcher._@param matcher String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return request -> assertThat("Request URI", request.getURI().toString(), matcher)__	};assert,the,request,uri,string,with,the,given,matcher,param,matcher,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,request,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1520425341;Assert the request URI string with the given matcher._@param matcher String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return request -> assertThat("Request URI", request.getURI().toString(), matcher)__	};assert,the,request,uri,string,with,the,given,matcher,param,matcher,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,request,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1520425356;Assert the request URI string with the given Hamcrest matcher._@param matcher String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return request -> assertThat("Request URI", request.getURI().toString(), matcher)__	};assert,the,request,uri,string,with,the,given,hamcrest,matcher,param,matcher,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,request,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1520428857;Assert the request URI string with the given Hamcrest matcher._@param matcher String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return request -> assertThat("Request URI", request.getURI().toString(), matcher)__	};assert,the,request,uri,string,with,the,given,hamcrest,matcher,param,matcher,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,request,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1520529117;Assert the request URI string with the given Hamcrest matcher._@param matcher String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return request -> assertThat("Request URI", request.getURI().toString(), matcher)__	};assert,the,request,uri,string,with,the,given,hamcrest,matcher,param,matcher,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,request,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1520952939;Assert the request URI string with the given Hamcrest matcher._@param matcher String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return request -> assertThat("Request URI", request.getURI().toString(), matcher)__	};assert,the,request,uri,string,with,the,given,hamcrest,matcher,param,matcher,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,request,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1530174524;Assert the request URI string with the given Hamcrest matcher._@param matcher the String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return request -> assertThat("Request URI", request.getURI().toString(), matcher)__	};assert,the,request,uri,string,with,the,given,hamcrest,matcher,param,matcher,the,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,request,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> public static RequestMatcher requestTo(final Matcher<String> matcher);1530174524;Assert the request URI string with the given Hamcrest matcher._@param matcher the String matcher for the expected URI_@return the request matcher;public static RequestMatcher requestTo(final Matcher<String> matcher) {_		Assert.notNull(matcher, "'matcher' must not be null")__		return request -> assertThat("Request URI", request.getURI().toString(), matcher)__	};assert,the,request,uri,string,with,the,given,hamcrest,matcher,param,matcher,the,string,matcher,for,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,matcher,string,matcher,assert,not,null,matcher,matcher,must,not,be,null,return,request,assert,that,request,uri,request,get,uri,to,string,matcher
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers);1481662884;Assert request query parameter values with the given Hamcrest matcher.;@SafeVarargs_	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				MultiValueMap<String, String> params = getQueryParams(request)__				assertValueCount("query param", name, params, matchers.length)__				for (int i = 0 _ i < matchers.length_ i++) {_					assertThat("Query param", params.get(name).get(i), matchers[i])__				}_			}_		}__	};assert,request,query,parameter,values,with,the,given,hamcrest,matcher;safe,varargs,public,static,request,matcher,query,param,final,string,name,final,matcher,super,string,matchers,return,new,request,matcher,override,public,void,match,client,http,request,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,query,param,params,get,name,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers);1483747037;Assert request query parameter values with the given Hamcrest matcher.;@SafeVarargs_	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				MultiValueMap<String, String> params = getQueryParams(request)__				assertValueCount("query param", name, params, matchers.length)__				for (int i = 0 _ i < matchers.length_ i++) {_					assertThat("Query param", params.get(name).get(i), matchers[i])__				}_			}_		}__	};assert,request,query,parameter,values,with,the,given,hamcrest,matcher;safe,varargs,public,static,request,matcher,query,param,final,string,name,final,matcher,super,string,matchers,return,new,request,matcher,override,public,void,match,client,http,request,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,query,param,params,get,name,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers);1496955179;Assert request query parameter values with the given Hamcrest matcher.;@SafeVarargs_	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				MultiValueMap<String, String> params = getQueryParams(request)__				assertValueCount("query param", name, params, matchers.length)__				for (int i = 0 _ i < matchers.length_ i++) {_					assertThat("Query param", params.get(name).get(i), matchers[i])__				}_			}_		}__	};assert,request,query,parameter,values,with,the,given,hamcrest,matcher;safe,varargs,public,static,request,matcher,query,param,final,string,name,final,matcher,super,string,matchers,return,new,request,matcher,override,public,void,match,client,http,request,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,query,param,params,get,name,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers);1497341397;Assert request query parameter values with the given Hamcrest matcher.;@SafeVarargs_	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, matchers.length)__			for (int i = 0 _ i < matchers.length_ i++) {_				assertThat("Query param", params.get(name).get(i), matchers[i])__			}_		}__	};assert,request,query,parameter,values,with,the,given,hamcrest,matcher;safe,varargs,public,static,request,matcher,query,param,final,string,name,final,matcher,super,string,matchers,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,query,param,params,get,name,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers);1502802662;Assert request query parameter values with the given Hamcrest matcher.;@SafeVarargs_	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, matchers.length)__			for (int i = 0 _ i < matchers.length_ i++) {_				assertThat("Query param", params.get(name).get(i), matchers[i])__			}_		}__	};assert,request,query,parameter,values,with,the,given,hamcrest,matcher;safe,varargs,public,static,request,matcher,query,param,final,string,name,final,matcher,super,string,matchers,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,query,param,params,get,name,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers);1520424452;Assert request query parameter values with the given Hamcrest matcher.;@SafeVarargs_	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, matchers.length)__			for (int i = 0 _ i < matchers.length_ i++) {_				assertThat("Query param", params.get(name).get(i), matchers[i])__			}_		}__	};assert,request,query,parameter,values,with,the,given,hamcrest,matcher;safe,varargs,public,static,request,matcher,query,param,final,string,name,final,matcher,super,string,matchers,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,query,param,params,get,name,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers);1520425341;Assert request query parameter values with the given Hamcrest matcher.;@SafeVarargs_	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, matchers.length)__			for (int i = 0 _ i < matchers.length_ i++) {_				assertThat("Query param", params.get(name).get(i), matchers[i])__			}_		}__	};assert,request,query,parameter,values,with,the,given,hamcrest,matcher;safe,varargs,public,static,request,matcher,query,param,final,string,name,final,matcher,super,string,matchers,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,query,param,params,get,name,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers);1520425356;Assert request query parameter values with the given Hamcrest matcher(s).;@SafeVarargs_	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, matchers.length)__			for (int i = 0 _ i < matchers.length_ i++) {_				assertThat("Query param", params.get(name).get(i), matchers[i])__			}_		}__	};assert,request,query,parameter,values,with,the,given,hamcrest,matcher,s;safe,varargs,public,static,request,matcher,query,param,final,string,name,final,matcher,super,string,matchers,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,query,param,params,get,name,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers);1520428857;Assert request query parameter values with the given Hamcrest matcher(s).;@SafeVarargs_	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, matchers.length)__			for (int i = 0 _ i < matchers.length_ i++) {_				assertThat("Query param", params.get(name).get(i), matchers[i])__			}_		}__	};assert,request,query,parameter,values,with,the,given,hamcrest,matcher,s;safe,varargs,public,static,request,matcher,query,param,final,string,name,final,matcher,super,string,matchers,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,query,param,params,get,name,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers);1520529117;Assert request query parameter values with the given Hamcrest matcher(s).;@SafeVarargs_	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, matchers.length)__			for (int i = 0 _ i < matchers.length_ i++) {_				assertThat("Query param", params.get(name).get(i), matchers[i])__			}_		}__	};assert,request,query,parameter,values,with,the,given,hamcrest,matcher,s;safe,varargs,public,static,request,matcher,query,param,final,string,name,final,matcher,super,string,matchers,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,query,param,params,get,name,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers);1520952939;Assert request query parameter values with the given Hamcrest matcher(s).;@SafeVarargs_	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, matchers.length)__			for (int i = 0 _ i < matchers.length_ i++) {_				assertThat("Query param", params.get(name).get(i), matchers[i])__			}_		}__	};assert,request,query,parameter,values,with,the,given,hamcrest,matcher,s;safe,varargs,public,static,request,matcher,query,param,final,string,name,final,matcher,super,string,matchers,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,query,param,params,get,name,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers);1530174524;Assert request query parameter values with the given Hamcrest matcher(s).;@SafeVarargs_	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, matchers.length)__			for (int i = 0 _ i < matchers.length_ i++) {_				assertThat("Query param", params.get(name).get(i), matchers[i])__			}_		}__	};assert,request,query,parameter,values,with,the,given,hamcrest,matcher,s;safe,varargs,public,static,request,matcher,query,param,final,string,name,final,matcher,super,string,matchers,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,query,param,params,get,name,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers);1530174524;Assert request query parameter values with the given Hamcrest matcher(s).;@SafeVarargs_	public static RequestMatcher queryParam(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, matchers.length)__			for (int i = 0 _ i < matchers.length_ i++) {_				assertThat("Query param", params.get(name).get(i), matchers[i])__			}_		}__	};assert,request,query,parameter,values,with,the,given,hamcrest,matcher,s;safe,varargs,public,static,request,matcher,query,param,final,string,name,final,matcher,super,string,matchers,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,query,param,params,get,name,get,i,matchers,i
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1383669853;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}.__@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1385412762;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}.__@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1413848647;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}.__@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1427238287;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1439585110;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1464613615;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1465232056;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1481662884;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1483747037;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1496955179;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1497341397;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1502802662;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1520424452;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1520425341;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1520425356;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1520428857;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1520529117;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1520952939;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1530174524;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args) 			throws XPathExpressionException;1530174524;Access to response body matchers using an XPath to inspect a specific_subset of the body. The XPath expression can be a parameterized string_using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the XPath optionally parameterized with arguments_@param namespaces namespaces referenced in the XPath expression_@param args arguments to parameterize the XPath expression with;public static XpathRequestMatchers xpath(String expression, Map<String, String> namespaces, Object... args)_			throws XPathExpressionException {__		return new XpathRequestMatchers(expression, namespaces, args)__	};access,to,response,body,matchers,using,an,xpath,to,inspect,a,specific,subset,of,the,body,the,xpath,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,xpath,optionally,parameterized,with,arguments,param,namespaces,namespaces,referenced,in,the,xpath,expression,param,args,arguments,to,parameterize,the,xpath,expression,with;public,static,xpath,request,matchers,xpath,string,expression,map,string,string,namespaces,object,args,throws,xpath,expression,exception,return,new,xpath,request,matchers,expression,namespaces,args
MockRestRequestMatchers -> public static RequestMatcher anything();1383669853;Match to any request.;public static RequestMatcher anything() {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_			}_		}__	};match,to,any,request;public,static,request,matcher,anything,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error
MockRestRequestMatchers -> public static RequestMatcher anything();1385412762;Match to any request.;public static RequestMatcher anything() {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_			}_		}__	};match,to,any,request;public,static,request,matcher,anything,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error
MockRestRequestMatchers -> public static RequestMatcher anything();1413848647;Match to any request.;public static RequestMatcher anything() {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_			}_		}__	};match,to,any,request;public,static,request,matcher,anything,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error
MockRestRequestMatchers -> public static RequestMatcher anything();1427238287;Match to any request.;public static RequestMatcher anything() {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_			}_		}__	};match,to,any,request;public,static,request,matcher,anything,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error
MockRestRequestMatchers -> public static RequestMatcher anything();1439585110;Match to any request.;public static RequestMatcher anything() {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_			}_		}__	};match,to,any,request;public,static,request,matcher,anything,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error
MockRestRequestMatchers -> public static RequestMatcher anything();1464613615;Match to any request.;public static RequestMatcher anything() {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_			}_		}__	};match,to,any,request;public,static,request,matcher,anything,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error
MockRestRequestMatchers -> public static RequestMatcher anything();1465232056;Match to any request.;public static RequestMatcher anything() {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_			}_		}__	};match,to,any,request;public,static,request,matcher,anything,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error
MockRestRequestMatchers -> public static RequestMatcher anything();1481662884;Match to any request.;public static RequestMatcher anything() {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_			}_		}__	};match,to,any,request;public,static,request,matcher,anything,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error
MockRestRequestMatchers -> public static RequestMatcher anything();1483747037;Match to any request.;public static RequestMatcher anything() {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_			}_		}__	};match,to,any,request;public,static,request,matcher,anything,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error
MockRestRequestMatchers -> public static RequestMatcher anything();1496955179;Match to any request.;public static RequestMatcher anything() {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws AssertionError {_			}_		}__	};match,to,any,request;public,static,request,matcher,anything,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,assertion,error
MockRestRequestMatchers -> public static RequestMatcher anything();1497341397;Match to any request.;public static RequestMatcher anything() {_		return request -> {}__	};match,to,any,request;public,static,request,matcher,anything,return,request
MockRestRequestMatchers -> public static RequestMatcher anything();1502802662;Match to any request.;public static RequestMatcher anything() {_		return request -> {}__	};match,to,any,request;public,static,request,matcher,anything,return,request
MockRestRequestMatchers -> public static RequestMatcher anything();1520424452;Match to any request.;public static RequestMatcher anything() {_		return request -> {}__	};match,to,any,request;public,static,request,matcher,anything,return,request
MockRestRequestMatchers -> public static RequestMatcher anything();1520425341;Match to any request.;public static RequestMatcher anything() {_		return request -> {}__	};match,to,any,request;public,static,request,matcher,anything,return,request
MockRestRequestMatchers -> public static RequestMatcher anything();1520425356;Match to any request.;public static RequestMatcher anything() {_		return request -> {}__	};match,to,any,request;public,static,request,matcher,anything,return,request
MockRestRequestMatchers -> public static RequestMatcher anything();1520428857;Match to any request.;public static RequestMatcher anything() {_		return request -> {}__	};match,to,any,request;public,static,request,matcher,anything,return,request
MockRestRequestMatchers -> public static RequestMatcher anything();1520529117;Match to any request.;public static RequestMatcher anything() {_		return request -> {}__	};match,to,any,request;public,static,request,matcher,anything,return,request
MockRestRequestMatchers -> public static RequestMatcher anything();1520952939;Match to any request.;public static RequestMatcher anything() {_		return request -> {}__	};match,to,any,request;public,static,request,matcher,anything,return,request
MockRestRequestMatchers -> public static RequestMatcher anything();1530174524;Match to any request.;public static RequestMatcher anything() {_		return request -> {}__	};match,to,any,request;public,static,request,matcher,anything,return,request
MockRestRequestMatchers -> public static RequestMatcher anything();1530174524;Match to any request.;public static RequestMatcher anything() {_		return request -> {}__	};match,to,any,request;public,static,request,matcher,anything,return,request
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers);1465232056;Assert request header values with the given Hamcrest matcher.;@SafeVarargs_	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				assertHeaderValueCount(name, request.getHeaders(), matchers.length)__				for (int i = 0 _ i < matchers.length_ i++) {_					assertThat("Request header", request.getHeaders().get(name).get(i), matchers[i])__				}_			}_		}__	};assert,request,header,values,with,the,given,hamcrest,matcher;safe,varargs,public,static,request,matcher,header,final,string,name,final,matcher,super,string,matchers,return,new,request,matcher,override,public,void,match,client,http,request,request,assert,header,value,count,name,request,get,headers,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,request,header,request,get,headers,get,name,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers);1481662884;Assert request header values with the given Hamcrest matcher.;@SafeVarargs_	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				assertValueCount("header", name, request.getHeaders(), matchers.length)__				for (int i = 0 _ i < matchers.length_ i++) {_					assertThat("Request header", request.getHeaders().get(name).get(i), matchers[i])__				}_			}_		}__	};assert,request,header,values,with,the,given,hamcrest,matcher;safe,varargs,public,static,request,matcher,header,final,string,name,final,matcher,super,string,matchers,return,new,request,matcher,override,public,void,match,client,http,request,request,assert,value,count,header,name,request,get,headers,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,request,header,request,get,headers,get,name,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers);1483747037;Assert request header values with the given Hamcrest matcher.;@SafeVarargs_	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				assertValueCount("header", name, request.getHeaders(), matchers.length)__				for (int i = 0 _ i < matchers.length_ i++) {_					assertThat("Request header", request.getHeaders().get(name).get(i), matchers[i])__				}_			}_		}__	};assert,request,header,values,with,the,given,hamcrest,matcher;safe,varargs,public,static,request,matcher,header,final,string,name,final,matcher,super,string,matchers,return,new,request,matcher,override,public,void,match,client,http,request,request,assert,value,count,header,name,request,get,headers,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,request,header,request,get,headers,get,name,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers);1496955179;Assert request header values with the given Hamcrest matcher.;@SafeVarargs_	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				assertValueCount("header", name, request.getHeaders(), matchers.length)__				List<String> headerValues = request.getHeaders().get(name)__				Assert.state(headerValues != null, "No header values")__				for (int i = 0_ i < matchers.length_ i++) {_					assertThat("Request header [" + name + "]", headerValues.get(i), matchers[i])__				}_			}_		}__	};assert,request,header,values,with,the,given,hamcrest,matcher;safe,varargs,public,static,request,matcher,header,final,string,name,final,matcher,super,string,matchers,return,new,request,matcher,override,public,void,match,client,http,request,request,assert,value,count,header,name,request,get,headers,matchers,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,matchers,length,i,assert,that,request,header,name,header,values,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers);1497341397;Assert request header values with the given Hamcrest matcher.;@SafeVarargs_	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), matchers.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < matchers.length_ i++) {_				assertThat("Request header[" + name + "]", headerValues.get(i), matchers[i])___			}_		}__	};assert,request,header,values,with,the,given,hamcrest,matcher;safe,varargs,public,static,request,matcher,header,final,string,name,final,matcher,super,string,matchers,return,request,assert,value,count,header,name,request,get,headers,matchers,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,matchers,length,i,assert,that,request,header,name,header,values,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers);1502802662;Assert request header values with the given Hamcrest matcher.;@SafeVarargs_	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), matchers.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < matchers.length_ i++) {_				assertThat("Request header[" + name + "]", headerValues.get(i), matchers[i])___			}_		}__	};assert,request,header,values,with,the,given,hamcrest,matcher;safe,varargs,public,static,request,matcher,header,final,string,name,final,matcher,super,string,matchers,return,request,assert,value,count,header,name,request,get,headers,matchers,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,matchers,length,i,assert,that,request,header,name,header,values,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers);1520424452;Assert request header values with the given Hamcrest matcher.;@SafeVarargs_	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), matchers.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < matchers.length_ i++) {_				assertThat("Request header[" + name + "]", headerValues.get(i), matchers[i])___			}_		}__	};assert,request,header,values,with,the,given,hamcrest,matcher;safe,varargs,public,static,request,matcher,header,final,string,name,final,matcher,super,string,matchers,return,request,assert,value,count,header,name,request,get,headers,matchers,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,matchers,length,i,assert,that,request,header,name,header,values,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers);1520425341;Assert request header values with the given Hamcrest matcher.;@SafeVarargs_	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), matchers.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < matchers.length_ i++) {_				assertThat("Request header[" + name + "]", headerValues.get(i), matchers[i])___			}_		}__	};assert,request,header,values,with,the,given,hamcrest,matcher;safe,varargs,public,static,request,matcher,header,final,string,name,final,matcher,super,string,matchers,return,request,assert,value,count,header,name,request,get,headers,matchers,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,matchers,length,i,assert,that,request,header,name,header,values,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers);1520425356;Assert request header values with the given Hamcrest matcher(s).;@SafeVarargs_	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), matchers.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < matchers.length_ i++) {_				assertThat("Request header[" + name + "]", headerValues.get(i), matchers[i])__			}_		}__	};assert,request,header,values,with,the,given,hamcrest,matcher,s;safe,varargs,public,static,request,matcher,header,final,string,name,final,matcher,super,string,matchers,return,request,assert,value,count,header,name,request,get,headers,matchers,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,matchers,length,i,assert,that,request,header,name,header,values,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers);1520428857;Assert request header values with the given Hamcrest matcher(s).;@SafeVarargs_	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), matchers.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < matchers.length_ i++) {_				assertThat("Request header [" + name + "]", headerValues.get(i), matchers[i])__			}_		}__	};assert,request,header,values,with,the,given,hamcrest,matcher,s;safe,varargs,public,static,request,matcher,header,final,string,name,final,matcher,super,string,matchers,return,request,assert,value,count,header,name,request,get,headers,matchers,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,matchers,length,i,assert,that,request,header,name,header,values,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers);1520529117;Assert request header values with the given Hamcrest matcher(s).;@SafeVarargs_	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), matchers.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < matchers.length_ i++) {_				assertThat("Request header [" + name + "]", headerValues.get(i), matchers[i])__			}_		}__	};assert,request,header,values,with,the,given,hamcrest,matcher,s;safe,varargs,public,static,request,matcher,header,final,string,name,final,matcher,super,string,matchers,return,request,assert,value,count,header,name,request,get,headers,matchers,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,matchers,length,i,assert,that,request,header,name,header,values,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers);1520952939;Assert request header values with the given Hamcrest matcher(s).;@SafeVarargs_	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), matchers.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < matchers.length_ i++) {_				assertThat("Request header [" + name + "]", headerValues.get(i), matchers[i])__			}_		}__	};assert,request,header,values,with,the,given,hamcrest,matcher,s;safe,varargs,public,static,request,matcher,header,final,string,name,final,matcher,super,string,matchers,return,request,assert,value,count,header,name,request,get,headers,matchers,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,matchers,length,i,assert,that,request,header,name,header,values,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers);1530174524;Assert request header values with the given Hamcrest matcher(s).;@SafeVarargs_	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), matchers.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < matchers.length_ i++) {_				assertThat("Request header [" + name + "]", headerValues.get(i), matchers[i])__			}_		}__	};assert,request,header,values,with,the,given,hamcrest,matcher,s;safe,varargs,public,static,request,matcher,header,final,string,name,final,matcher,super,string,matchers,return,request,assert,value,count,header,name,request,get,headers,matchers,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,matchers,length,i,assert,that,request,header,name,header,values,get,i,matchers,i
MockRestRequestMatchers -> @SafeVarargs 	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers);1530174524;Assert request header values with the given Hamcrest matcher(s).;@SafeVarargs_	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers) {_		return request -> {_			assertValueCount("header", name, request.getHeaders(), matchers.length)__			List<String> headerValues = request.getHeaders().get(name)__			Assert.state(headerValues != null, "No header values")__			for (int i = 0_ i < matchers.length_ i++) {_				assertThat("Request header [" + name + "]", headerValues.get(i), matchers[i])__			}_		}__	};assert,request,header,values,with,the,given,hamcrest,matcher,s;safe,varargs,public,static,request,matcher,header,final,string,name,final,matcher,super,string,matchers,return,request,assert,value,count,header,name,request,get,headers,matchers,length,list,string,header,values,request,get,headers,get,name,assert,state,header,values,null,no,header,values,for,int,i,0,i,matchers,length,i,assert,that,request,header,name,header,values,get,i,matchers,i
MockRestRequestMatchers -> public static RequestMatcher queryParam(final String name, final String... expectedValues);1481662884;Assert request query parameter values.;public static RequestMatcher queryParam(final String name, final String... expectedValues) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				MultiValueMap<String, String> params = getQueryParams(request)__				assertValueCount("query param", name, params, expectedValues.length)__				for (int i = 0 _ i < expectedValues.length_ i++) {_					assertEquals("Query param + [" + name + "]", expectedValues[i], params.get(name).get(i))__				}_			}_		}__	};assert,request,query,parameter,values;public,static,request,matcher,query,param,final,string,name,final,string,expected,values,return,new,request,matcher,override,public,void,match,client,http,request,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,query,param,name,expected,values,i,params,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher queryParam(final String name, final String... expectedValues);1483747037;Assert request query parameter values.;public static RequestMatcher queryParam(final String name, final String... expectedValues) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				MultiValueMap<String, String> params = getQueryParams(request)__				assertValueCount("query param", name, params, expectedValues.length)__				for (int i = 0 _ i < expectedValues.length_ i++) {_					assertEquals("Query param + [" + name + "]", expectedValues[i], params.get(name).get(i))__				}_			}_		}__	};assert,request,query,parameter,values;public,static,request,matcher,query,param,final,string,name,final,string,expected,values,return,new,request,matcher,override,public,void,match,client,http,request,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,query,param,name,expected,values,i,params,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher queryParam(final String name, final String... expectedValues);1496955179;Assert request query parameter values.;public static RequestMatcher queryParam(final String name, final String... expectedValues) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				MultiValueMap<String, String> params = getQueryParams(request)__				assertValueCount("query param", name, params, expectedValues.length)__				for (int i = 0 _ i < expectedValues.length_ i++) {_					assertEquals("Query param + [" + name + "]", expectedValues[i], params.get(name).get(i))__				}_			}_		}__	};assert,request,query,parameter,values;public,static,request,matcher,query,param,final,string,name,final,string,expected,values,return,new,request,matcher,override,public,void,match,client,http,request,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,query,param,name,expected,values,i,params,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher queryParam(final String name, final String... expectedValues);1497341397;Assert request query parameter values.;public static RequestMatcher queryParam(final String name, final String... expectedValues) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, expectedValues.length)__			for (int i = 0 _ i < expectedValues.length_ i++) {_				assertEquals("Query param + [" + name + "]", expectedValues[i], params.get(name).get(i))__			}_		}__	};assert,request,query,parameter,values;public,static,request,matcher,query,param,final,string,name,final,string,expected,values,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,query,param,name,expected,values,i,params,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher queryParam(final String name, final String... expectedValues);1502802662;Assert request query parameter values.;public static RequestMatcher queryParam(final String name, final String... expectedValues) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, expectedValues.length)__			for (int i = 0 _ i < expectedValues.length_ i++) {_				assertEquals("Query param + [" + name + "]", expectedValues[i], params.get(name).get(i))__			}_		}__	};assert,request,query,parameter,values;public,static,request,matcher,query,param,final,string,name,final,string,expected,values,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,query,param,name,expected,values,i,params,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher queryParam(final String name, final String... expectedValues);1520424452;Assert request query parameter values.;public static RequestMatcher queryParam(final String name, final String... expectedValues) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, expectedValues.length)__			for (int i = 0 _ i < expectedValues.length_ i++) {_				assertEquals("Query param + [" + name + "]", expectedValues[i], params.get(name).get(i))__			}_		}__	};assert,request,query,parameter,values;public,static,request,matcher,query,param,final,string,name,final,string,expected,values,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,query,param,name,expected,values,i,params,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher queryParam(final String name, final String... expectedValues);1520425341;Assert request query parameter values.;public static RequestMatcher queryParam(final String name, final String... expectedValues) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, expectedValues.length)__			for (int i = 0 _ i < expectedValues.length_ i++) {_				assertEquals("Query param + [" + name + "]", expectedValues[i], params.get(name).get(i))__			}_		}__	};assert,request,query,parameter,values;public,static,request,matcher,query,param,final,string,name,final,string,expected,values,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,query,param,name,expected,values,i,params,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher queryParam(final String name, final String... expectedValues);1520425356;Assert request query parameter values.;public static RequestMatcher queryParam(final String name, final String... expectedValues) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, expectedValues.length)__			for (int i = 0 _ i < expectedValues.length_ i++) {_				assertEquals("Query param + [" + name + "]", expectedValues[i], params.get(name).get(i))__			}_		}__	};assert,request,query,parameter,values;public,static,request,matcher,query,param,final,string,name,final,string,expected,values,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,query,param,name,expected,values,i,params,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher queryParam(final String name, final String... expectedValues);1520428857;Assert request query parameter values.;public static RequestMatcher queryParam(final String name, final String... expectedValues) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, expectedValues.length)__			for (int i = 0 _ i < expectedValues.length_ i++) {_				assertEquals("Query param [" + name + "]", expectedValues[i], params.get(name).get(i))__			}_		}__	};assert,request,query,parameter,values;public,static,request,matcher,query,param,final,string,name,final,string,expected,values,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,query,param,name,expected,values,i,params,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher queryParam(final String name, final String... expectedValues);1520529117;Assert request query parameter values.;public static RequestMatcher queryParam(final String name, final String... expectedValues) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, expectedValues.length)__			for (int i = 0 _ i < expectedValues.length_ i++) {_				assertEquals("Query param [" + name + "]", expectedValues[i], params.get(name).get(i))__			}_		}__	};assert,request,query,parameter,values;public,static,request,matcher,query,param,final,string,name,final,string,expected,values,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,query,param,name,expected,values,i,params,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher queryParam(final String name, final String... expectedValues);1520952939;Assert request query parameter values.;public static RequestMatcher queryParam(final String name, final String... expectedValues) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, expectedValues.length)__			for (int i = 0 _ i < expectedValues.length_ i++) {_				assertEquals("Query param [" + name + "]", expectedValues[i], params.get(name).get(i))__			}_		}__	};assert,request,query,parameter,values;public,static,request,matcher,query,param,final,string,name,final,string,expected,values,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,query,param,name,expected,values,i,params,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher queryParam(final String name, final String... expectedValues);1530174524;Assert request query parameter values.;public static RequestMatcher queryParam(final String name, final String... expectedValues) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, expectedValues.length)__			for (int i = 0 _ i < expectedValues.length_ i++) {_				assertEquals("Query param [" + name + "]", expectedValues[i], params.get(name).get(i))__			}_		}__	};assert,request,query,parameter,values;public,static,request,matcher,query,param,final,string,name,final,string,expected,values,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,query,param,name,expected,values,i,params,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher queryParam(final String name, final String... expectedValues);1530174524;Assert request query parameter values.;public static RequestMatcher queryParam(final String name, final String... expectedValues) {_		return request -> {_			MultiValueMap<String, String> params = getQueryParams(request)__			assertValueCount("query param", name, params, expectedValues.length)__			for (int i = 0 _ i < expectedValues.length_ i++) {_				assertEquals("Query param [" + name + "]", expectedValues[i], params.get(name).get(i))__			}_		}__	};assert,request,query,parameter,values;public,static,request,matcher,query,param,final,string,name,final,string,expected,values,return,request,multi,value,map,string,string,params,get,query,params,request,assert,value,count,query,param,name,params,expected,values,length,for,int,i,0,i,expected,values,length,i,assert,equals,query,param,name,expected,values,i,params,get,name,get,i
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1383669853;Assert the request URI string.__@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertEquals("Request URI", expectedUri, request.getURI().toString())__			}_		}__	};assert,the,request,uri,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1385412762;Assert the request URI string.__@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertEquals("Request URI", expectedUri, request.getURI().toString())__			}_		}__	};assert,the,request,uri,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1413848647;Assert the request URI string.__@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertEquals("Request URI", expectedUri, request.getURI().toString())__			}_		}__	};assert,the,request,uri,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1427238287;Assert the request URI string._@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertEquals("Request URI", expectedUri, request.getURI().toString())__			}_		}__	};assert,the,request,uri,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1439585110;Assert the request URI string._@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertEquals("Request URI", expectedUri, request.getURI().toString())__			}_		}__	};assert,the,request,uri,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1464613615;Assert the request URI string._@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertEquals("Request URI", expectedUri, request.getURI().toString())__			}_		}__	};assert,the,request,uri,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1465232056;Assert the request URI string._@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertEquals("Request URI", expectedUri, request.getURI().toString())__			}_		}__	};assert,the,request,uri,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1481662884;Assert the request URI string._@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertEquals("Request URI", expectedUri, request.getURI().toString())__			}_		}__	};assert,the,request,uri,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1483747037;Assert the request URI string._@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertEquals("Request URI", expectedUri, request.getURI().toString())__			}_		}__	};assert,the,request,uri,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1496955179;Assert the request URI string._@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) throws IOException, AssertionError {_				assertEquals("Request URI", expectedUri, request.getURI().toString())__			}_		}__	};assert,the,request,uri,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,new,request,matcher,override,public,void,match,client,http,request,request,throws,ioexception,assertion,error,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1497341397;Assert the request URI string._@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return request -> assertEquals("Request URI", expectedUri, request.getURI().toString())__	};assert,the,request,uri,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,request,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1502802662;Assert the request URI matches the given string._@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return request -> assertEquals("Request URI", expectedUri, request.getURI().toString())__	};assert,the,request,uri,matches,the,given,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,request,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1520424452;Assert the request URI matches the given string._@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return request -> assertEquals("Request URI", expectedUri, request.getURI().toString())__	};assert,the,request,uri,matches,the,given,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,request,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1520425341;Assert the request URI matches the given string._@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return request -> assertEquals("Request URI", expectedUri, request.getURI().toString())__	};assert,the,request,uri,matches,the,given,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,request,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1520425356;Assert the request URI matches the given string._@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return request -> assertEquals("Request URI", expectedUri, request.getURI().toString())__	};assert,the,request,uri,matches,the,given,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,request,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1520428857;Assert the request URI matches the given string._@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return request -> assertEquals("Request URI", expectedUri, request.getURI().toString())__	};assert,the,request,uri,matches,the,given,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,request,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1520529117;Assert the request URI matches the given string._@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return request -> assertEquals("Request URI", expectedUri, request.getURI().toString())__	};assert,the,request,uri,matches,the,given,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,request,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1520952939;Assert the request URI matches the given string._@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return request -> assertEquals("Request URI", expectedUri, request.getURI().toString())__	};assert,the,request,uri,matches,the,given,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,request,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1530174524;Assert the request URI matches the given string._@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return request -> assertEquals("Request URI", expectedUri, request.getURI().toString())__	};assert,the,request,uri,matches,the,given,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,request,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static RequestMatcher requestTo(final String expectedUri);1530174524;Assert the request URI matches the given string._@param expectedUri the expected URI_@return the request matcher;public static RequestMatcher requestTo(final String expectedUri) {_		Assert.notNull(expectedUri, "'uri' must not be null")__		return request -> assertEquals("Request URI", expectedUri, request.getURI().toString())__	};assert,the,request,uri,matches,the,given,string,param,expected,uri,the,expected,uri,return,the,request,matcher;public,static,request,matcher,request,to,final,string,expected,uri,assert,not,null,expected,uri,uri,must,not,be,null,return,request,assert,equals,request,uri,expected,uri,request,get,uri,to,string
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1383669853;Access to request body matchers using a <a_href="http://goessner.net/articles/JsonPath/">JSONPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path.__@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,http,goessner,net,articles,json,path,jsonpath,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1385412762;Access to request body matchers using a <a_href="http://goessner.net/articles/JsonPath/">JSONPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path.__@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,http,goessner,net,articles,json,path,jsonpath,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1413848647;Access to request body matchers using a <a_href="http://goessner.net/articles/JsonPath/">JSONPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path.__@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,http,goessner,net,articles,json,path,jsonpath,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1427238287;Access to request body matchers using a <a_href="http://goessner.net/articles/JsonPath/">JSONPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path._@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,http,goessner,net,articles,json,path,jsonpath,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1439585110;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path._@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1464613615;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path._@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1465232056;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path._@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1481662884;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path._@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1483747037;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path._@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1496955179;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path._@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1497341397;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path._@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1502802662;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path._@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1520424452;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path._@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1520425341;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path._@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1520425356;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path._@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1520428857;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path._@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1520529117;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path._@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1520952939;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path._@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1530174524;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path._@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher);1530174524;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body and a Hamcrest match for asserting_the value found at the JSON path._@param expression the JSON path expression_@param matcher a matcher for the value expected at the JSON path;public static <T> RequestMatcher jsonPath(String expression, Matcher<T> matcher) {_		return new JsonPathRequestMatchers(expression).value(matcher)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,and,a,hamcrest,match,for,asserting,the,value,found,at,the,json,path,param,expression,the,json,path,expression,param,matcher,a,matcher,for,the,value,expected,at,the,json,path;public,static,t,request,matcher,json,path,string,expression,matcher,t,matcher,return,new,json,path,request,matchers,expression,value,matcher
MockRestRequestMatchers -> @SuppressWarnings("unchecked") 	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers);1385412762;Assert request header values with the given Hamcrest matcher.;@SuppressWarnings("unchecked")_	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				assertHeaderValueCount(name, request.getHeaders(), matchers.length)__				for (int i = 0 _ i < matchers.length_ i++) {_					assertThat("Request header", request.getHeaders().get(name).get(i), matchers[i])__				}_			}_		}__	};assert,request,header,values,with,the,given,hamcrest,matcher;suppress,warnings,unchecked,public,static,request,matcher,header,final,string,name,final,matcher,super,string,matchers,return,new,request,matcher,override,public,void,match,client,http,request,request,assert,header,value,count,name,request,get,headers,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,request,header,request,get,headers,get,name,get,i,matchers,i
MockRestRequestMatchers -> @SuppressWarnings("unchecked") 	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers);1413848647;Assert request header values with the given Hamcrest matcher.;@SuppressWarnings("unchecked")_	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				assertHeaderValueCount(name, request.getHeaders(), matchers.length)__				for (int i = 0 _ i < matchers.length_ i++) {_					assertThat("Request header", request.getHeaders().get(name).get(i), matchers[i])__				}_			}_		}__	};assert,request,header,values,with,the,given,hamcrest,matcher;suppress,warnings,unchecked,public,static,request,matcher,header,final,string,name,final,matcher,super,string,matchers,return,new,request,matcher,override,public,void,match,client,http,request,request,assert,header,value,count,name,request,get,headers,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,request,header,request,get,headers,get,name,get,i,matchers,i
MockRestRequestMatchers -> @SuppressWarnings("unchecked") 	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers);1427238287;Assert request header values with the given Hamcrest matcher.;@SuppressWarnings("unchecked")_	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				assertHeaderValueCount(name, request.getHeaders(), matchers.length)__				for (int i = 0 _ i < matchers.length_ i++) {_					assertThat("Request header", request.getHeaders().get(name).get(i), matchers[i])__				}_			}_		}__	};assert,request,header,values,with,the,given,hamcrest,matcher;suppress,warnings,unchecked,public,static,request,matcher,header,final,string,name,final,matcher,super,string,matchers,return,new,request,matcher,override,public,void,match,client,http,request,request,assert,header,value,count,name,request,get,headers,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,request,header,request,get,headers,get,name,get,i,matchers,i
MockRestRequestMatchers -> @SuppressWarnings("unchecked") 	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers);1439585110;Assert request header values with the given Hamcrest matcher.;@SuppressWarnings("unchecked")_	public static RequestMatcher header(final String name, final Matcher<? super String>... matchers) {_		return new RequestMatcher() {_			@Override_			public void match(ClientHttpRequest request) {_				assertHeaderValueCount(name, request.getHeaders(), matchers.length)__				for (int i = 0 _ i < matchers.length_ i++) {_					assertThat("Request header", request.getHeaders().get(name).get(i), matchers[i])__				}_			}_		}__	};assert,request,header,values,with,the,given,hamcrest,matcher;suppress,warnings,unchecked,public,static,request,matcher,header,final,string,name,final,matcher,super,string,matchers,return,new,request,matcher,override,public,void,match,client,http,request,request,assert,header,value,count,name,request,get,headers,matchers,length,for,int,i,0,i,matchers,length,i,assert,that,request,header,request,get,headers,get,name,get,i,matchers,i
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object ... args);1383669853;Access to request body matchers using a <a_href="http://goessner.net/articles/JsonPath/">JSONPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}.__@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object ... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,http,goessner,net,articles,json,path,jsonpath,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object ... args);1385412762;Access to request body matchers using a <a_href="http://goessner.net/articles/JsonPath/">JSONPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}.__@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object ... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,http,goessner,net,articles,json,path,jsonpath,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object ... args);1413848647;Access to request body matchers using a <a_href="http://goessner.net/articles/JsonPath/">JSONPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}.__@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object ... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,http,goessner,net,articles,json,path,jsonpath,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object ... args);1427238287;Access to request body matchers using a <a_href="http://goessner.net/articles/JsonPath/">JSONPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object ... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,http,goessner,net,articles,json,path,jsonpath,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object ... args);1439585110;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object ... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object ... args);1464613615;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object ... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object ... args);1465232056;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object ... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object ... args);1481662884;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object ... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object ... args);1483747037;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object ... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object ... args);1496955179;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object ... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object ... args);1497341397;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object ... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object ... args);1502802662;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object ... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object ... args);1520424452;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object ... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object ... args);1520425341;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object ... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object ... args);1520425356;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object ... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object ... args);1520428857;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object ... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object ... args);1520529117;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object ... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object... args);1520952939;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object... args);1530174524;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
MockRestRequestMatchers -> public static JsonPathRequestMatchers jsonPath(String expression, Object... args);1530174524;Access to request body matchers using a_<a href="https://github.com/jayway/JsonPath">JsonPath</a> expression to_inspect a specific subset of the body. The JSON path expression can be a_parameterized string using formatting specifiers as defined in_{@link String#format(String, Object...)}._@param expression the JSON path optionally parameterized with arguments_@param args arguments to parameterize the JSON path expression with;public static JsonPathRequestMatchers jsonPath(String expression, Object... args) {_		return new JsonPathRequestMatchers(expression, args)__	};access,to,request,body,matchers,using,a,a,href,https,github,com,jayway,json,path,json,path,a,expression,to,inspect,a,specific,subset,of,the,body,the,json,path,expression,can,be,a,parameterized,string,using,formatting,specifiers,as,defined,in,link,string,format,string,object,param,expression,the,json,path,optionally,parameterized,with,arguments,param,args,arguments,to,parameterize,the,json,path,expression,with;public,static,json,path,request,matchers,json,path,string,expression,object,args,return,new,json,path,request,matchers,expression,args
