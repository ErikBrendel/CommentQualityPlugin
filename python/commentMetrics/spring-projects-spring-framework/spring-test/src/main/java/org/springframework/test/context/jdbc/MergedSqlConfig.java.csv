# id;timestamp;commentText;codeText;commentWords;codeWords
MergedSqlConfig -> @Override 	public String toString();1405524203;Provide a String representation of the merged SQL script configuration.;@Override_	public String toString() {_		return new ToStringCreator(this)_		.append("dataSource", dataSource)_		.append("transactionManager", transactionManager)_		.append("transactionMode", transactionMode)_		.append("encoding", encoding)_		.append("separator", separator)_		.append("commentPrefix", commentPrefix)_		.append("blockCommentStartDelimiter", blockCommentStartDelimiter)_		.append("blockCommentEndDelimiter", blockCommentEndDelimiter)_		.append("errorMode", errorMode)_		.toString()__	};provide,a,string,representation,of,the,merged,sql,script,configuration;override,public,string,to,string,return,new,to,string,creator,this,append,data,source,data,source,append,transaction,manager,transaction,manager,append,transaction,mode,transaction,mode,append,encoding,encoding,append,separator,separator,append,comment,prefix,comment,prefix,append,block,comment,start,delimiter,block,comment,start,delimiter,append,block,comment,end,delimiter,block,comment,end,delimiter,append,error,mode,error,mode,to,string
MergedSqlConfig -> @Override 	public String toString();1405526063;Provide a String representation of the merged SQL script configuration.;@Override_	public String toString() {_		return new ToStringCreator(this)_		.append("dataSource", dataSource)_		.append("transactionManager", transactionManager)_		.append("transactionMode", transactionMode)_		.append("encoding", encoding)_		.append("separator", separator)_		.append("commentPrefix", commentPrefix)_		.append("blockCommentStartDelimiter", blockCommentStartDelimiter)_		.append("blockCommentEndDelimiter", blockCommentEndDelimiter)_		.append("errorMode", errorMode)_		.toString()__	};provide,a,string,representation,of,the,merged,sql,script,configuration;override,public,string,to,string,return,new,to,string,creator,this,append,data,source,data,source,append,transaction,manager,transaction,manager,append,transaction,mode,transaction,mode,append,encoding,encoding,append,separator,separator,append,comment,prefix,comment,prefix,append,block,comment,start,delimiter,block,comment,start,delimiter,append,block,comment,end,delimiter,block,comment,end,delimiter,append,error,mode,error,mode,to,string
MergedSqlConfig -> @Override 	public String toString();1405527179;Provide a String representation of the merged SQL script configuration.;@Override_	public String toString() {_		return new ToStringCreator(this)_		.append("dataSource", dataSource)_		.append("transactionManager", transactionManager)_		.append("transactionMode", transactionMode)_		.append("encoding", encoding)_		.append("separator", separator)_		.append("commentPrefix", commentPrefix)_		.append("blockCommentStartDelimiter", blockCommentStartDelimiter)_		.append("blockCommentEndDelimiter", blockCommentEndDelimiter)_		.append("errorMode", errorMode)_		.toString()__	};provide,a,string,representation,of,the,merged,sql,script,configuration;override,public,string,to,string,return,new,to,string,creator,this,append,data,source,data,source,append,transaction,manager,transaction,manager,append,transaction,mode,transaction,mode,append,encoding,encoding,append,separator,separator,append,comment,prefix,comment,prefix,append,block,comment,start,delimiter,block,comment,start,delimiter,append,block,comment,end,delimiter,block,comment,end,delimiter,append,error,mode,error,mode,to,string
MergedSqlConfig -> @Override 	public String toString();1405687163;Provide a String representation of the merged SQL script configuration.;@Override_	public String toString() {_		return new ToStringCreator(this)_		.append("dataSource", dataSource)_		.append("transactionManager", transactionManager)_		.append("transactionMode", transactionMode)_		.append("encoding", encoding)_		.append("separator", separator)_		.append("commentPrefix", commentPrefix)_		.append("blockCommentStartDelimiter", blockCommentStartDelimiter)_		.append("blockCommentEndDelimiter", blockCommentEndDelimiter)_		.append("errorMode", errorMode)_		.toString()__	};provide,a,string,representation,of,the,merged,sql,script,configuration;override,public,string,to,string,return,new,to,string,creator,this,append,data,source,data,source,append,transaction,manager,transaction,manager,append,transaction,mode,transaction,mode,append,encoding,encoding,append,separator,separator,append,comment,prefix,comment,prefix,append,block,comment,start,delimiter,block,comment,start,delimiter,append,block,comment,end,delimiter,block,comment,end,delimiter,append,error,mode,error,mode,to,string
MergedSqlConfig -> @Override 	public String toString();1405695765;Provide a String representation of the merged SQL script configuration.;@Override_	public String toString() {_		return new ToStringCreator(this)_		.append("dataSource", dataSource)_		.append("transactionManager", transactionManager)_		.append("transactionMode", transactionMode)_		.append("encoding", encoding)_		.append("separator", separator)_		.append("commentPrefix", commentPrefix)_		.append("blockCommentStartDelimiter", blockCommentStartDelimiter)_		.append("blockCommentEndDelimiter", blockCommentEndDelimiter)_		.append("errorMode", errorMode)_		.toString()__	};provide,a,string,representation,of,the,merged,sql,script,configuration;override,public,string,to,string,return,new,to,string,creator,this,append,data,source,data,source,append,transaction,manager,transaction,manager,append,transaction,mode,transaction,mode,append,encoding,encoding,append,separator,separator,append,comment,prefix,comment,prefix,append,block,comment,start,delimiter,block,comment,start,delimiter,append,block,comment,end,delimiter,block,comment,end,delimiter,append,error,mode,error,mode,to,string
MergedSqlConfig -> @Override 	public String toString();1413848647;Provide a String representation of the merged SQL script configuration.;@Override_	public String toString() {_		return new ToStringCreator(this)_		.append("dataSource", dataSource)_		.append("transactionManager", transactionManager)_		.append("transactionMode", transactionMode)_		.append("encoding", encoding)_		.append("separator", separator)_		.append("commentPrefix", commentPrefix)_		.append("blockCommentStartDelimiter", blockCommentStartDelimiter)_		.append("blockCommentEndDelimiter", blockCommentEndDelimiter)_		.append("errorMode", errorMode)_		.toString()__	};provide,a,string,representation,of,the,merged,sql,script,configuration;override,public,string,to,string,return,new,to,string,creator,this,append,data,source,data,source,append,transaction,manager,transaction,manager,append,transaction,mode,transaction,mode,append,encoding,encoding,append,separator,separator,append,comment,prefix,comment,prefix,append,block,comment,start,delimiter,block,comment,start,delimiter,append,block,comment,end,delimiter,block,comment,end,delimiter,append,error,mode,error,mode,to,string
MergedSqlConfig -> @Override 	public String toString();1431568199;Provide a String representation of the merged SQL script configuration.;@Override_	public String toString() {_		return new ToStringCreator(this)_		.append("dataSource", dataSource)_		.append("transactionManager", transactionManager)_		.append("transactionMode", transactionMode)_		.append("encoding", encoding)_		.append("separator", separator)_		.append("commentPrefix", commentPrefix)_		.append("blockCommentStartDelimiter", blockCommentStartDelimiter)_		.append("blockCommentEndDelimiter", blockCommentEndDelimiter)_		.append("errorMode", errorMode)_		.toString()__	};provide,a,string,representation,of,the,merged,sql,script,configuration;override,public,string,to,string,return,new,to,string,creator,this,append,data,source,data,source,append,transaction,manager,transaction,manager,append,transaction,mode,transaction,mode,append,encoding,encoding,append,separator,separator,append,comment,prefix,comment,prefix,append,block,comment,start,delimiter,block,comment,start,delimiter,append,block,comment,end,delimiter,block,comment,end,delimiter,append,error,mode,error,mode,to,string
MergedSqlConfig -> @Override 	public String toString();1432856630;Provide a String representation of the merged SQL script configuration.;@Override_	public String toString() {_		return new ToStringCreator(this)_		.append("dataSource", dataSource)_		.append("transactionManager", transactionManager)_		.append("transactionMode", transactionMode)_		.append("encoding", encoding)_		.append("separator", separator)_		.append("commentPrefix", commentPrefix)_		.append("blockCommentStartDelimiter", blockCommentStartDelimiter)_		.append("blockCommentEndDelimiter", blockCommentEndDelimiter)_		.append("errorMode", errorMode)_		.toString()__	};provide,a,string,representation,of,the,merged,sql,script,configuration;override,public,string,to,string,return,new,to,string,creator,this,append,data,source,data,source,append,transaction,manager,transaction,manager,append,transaction,mode,transaction,mode,append,encoding,encoding,append,separator,separator,append,comment,prefix,comment,prefix,append,block,comment,start,delimiter,block,comment,start,delimiter,append,block,comment,end,delimiter,block,comment,end,delimiter,append,error,mode,error,mode,to,string
MergedSqlConfig -> @Override 	public String toString();1434234880;Provide a String representation of the merged SQL script configuration.;@Override_	public String toString() {_		return new ToStringCreator(this)_		.append("dataSource", dataSource)_		.append("transactionManager", transactionManager)_		.append("transactionMode", transactionMode)_		.append("encoding", encoding)_		.append("separator", separator)_		.append("commentPrefix", commentPrefix)_		.append("blockCommentStartDelimiter", blockCommentStartDelimiter)_		.append("blockCommentEndDelimiter", blockCommentEndDelimiter)_		.append("errorMode", errorMode)_		.toString()__	};provide,a,string,representation,of,the,merged,sql,script,configuration;override,public,string,to,string,return,new,to,string,creator,this,append,data,source,data,source,append,transaction,manager,transaction,manager,append,transaction,mode,transaction,mode,append,encoding,encoding,append,separator,separator,append,comment,prefix,comment,prefix,append,block,comment,start,delimiter,block,comment,start,delimiter,append,block,comment,end,delimiter,block,comment,end,delimiter,append,error,mode,error,mode,to,string
MergedSqlConfig -> @Override 	public String toString();1458754769;Provide a String representation of the merged SQL script configuration.;@Override_	public String toString() {_		return new ToStringCreator(this)_				.append("dataSource", this.dataSource)_				.append("transactionManager", this.transactionManager)_				.append("transactionMode", this.transactionMode)_				.append("encoding", this.encoding)_				.append("separator", this.separator)_				.append("commentPrefix", this.commentPrefix)_				.append("blockCommentStartDelimiter", this.blockCommentStartDelimiter)_				.append("blockCommentEndDelimiter", this.blockCommentEndDelimiter)_				.append("errorMode", this.errorMode)_				.toString()__	};provide,a,string,representation,of,the,merged,sql,script,configuration;override,public,string,to,string,return,new,to,string,creator,this,append,data,source,this,data,source,append,transaction,manager,this,transaction,manager,append,transaction,mode,this,transaction,mode,append,encoding,this,encoding,append,separator,this,separator,append,comment,prefix,this,comment,prefix,append,block,comment,start,delimiter,this,block,comment,start,delimiter,append,block,comment,end,delimiter,this,block,comment,end,delimiter,append,error,mode,this,error,mode,to,string
MergedSqlConfig -> String getDataSource();1405524203;@see SqlConfig#dataSource();String getDataSource() {_		return this.dataSource__	};see,sql,config,data,source;string,get,data,source,return,this,data,source
MergedSqlConfig -> String getDataSource();1405526063;@see SqlConfig#dataSource();String getDataSource() {_		return this.dataSource__	};see,sql,config,data,source;string,get,data,source,return,this,data,source
MergedSqlConfig -> String getDataSource();1405527179;@see SqlConfig#dataSource();String getDataSource() {_		return this.dataSource__	};see,sql,config,data,source;string,get,data,source,return,this,data,source
MergedSqlConfig -> String getDataSource();1405687163;@see SqlConfig#dataSource();String getDataSource() {_		return this.dataSource__	};see,sql,config,data,source;string,get,data,source,return,this,data,source
MergedSqlConfig -> String getDataSource();1405695765;@see SqlConfig#dataSource();String getDataSource() {_		return this.dataSource__	};see,sql,config,data,source;string,get,data,source,return,this,data,source
MergedSqlConfig -> String getDataSource();1413848647;@see SqlConfig#dataSource();String getDataSource() {_		return this.dataSource__	};see,sql,config,data,source;string,get,data,source,return,this,data,source
MergedSqlConfig -> String getDataSource();1431568199;@see SqlConfig#dataSource();String getDataSource() {_		return this.dataSource__	};see,sql,config,data,source;string,get,data,source,return,this,data,source
MergedSqlConfig -> String getDataSource();1432856630;@see SqlConfig#dataSource();String getDataSource() {_		return this.dataSource__	};see,sql,config,data,source;string,get,data,source,return,this,data,source
MergedSqlConfig -> String getDataSource();1434234880;@see SqlConfig#dataSource();String getDataSource() {_		return this.dataSource__	};see,sql,config,data,source;string,get,data,source,return,this,data,source
MergedSqlConfig -> String getDataSource();1458754769;@see SqlConfig#dataSource();String getDataSource() {_		return this.dataSource__	};see,sql,config,data,source;string,get,data,source,return,this,data,source
MergedSqlConfig -> String getCommentPrefix();1405524203;@see SqlConfig#commentPrefix();String getCommentPrefix() {_		return this.commentPrefix__	};see,sql,config,comment,prefix;string,get,comment,prefix,return,this,comment,prefix
MergedSqlConfig -> String getCommentPrefix();1405526063;@see SqlConfig#commentPrefix();String getCommentPrefix() {_		return this.commentPrefix__	};see,sql,config,comment,prefix;string,get,comment,prefix,return,this,comment,prefix
MergedSqlConfig -> String getCommentPrefix();1405527179;@see SqlConfig#commentPrefix();String getCommentPrefix() {_		return this.commentPrefix__	};see,sql,config,comment,prefix;string,get,comment,prefix,return,this,comment,prefix
MergedSqlConfig -> String getCommentPrefix();1405687163;@see SqlConfig#commentPrefix();String getCommentPrefix() {_		return this.commentPrefix__	};see,sql,config,comment,prefix;string,get,comment,prefix,return,this,comment,prefix
MergedSqlConfig -> String getCommentPrefix();1405695765;@see SqlConfig#commentPrefix();String getCommentPrefix() {_		return this.commentPrefix__	};see,sql,config,comment,prefix;string,get,comment,prefix,return,this,comment,prefix
MergedSqlConfig -> String getCommentPrefix();1413848647;@see SqlConfig#commentPrefix();String getCommentPrefix() {_		return this.commentPrefix__	};see,sql,config,comment,prefix;string,get,comment,prefix,return,this,comment,prefix
MergedSqlConfig -> String getCommentPrefix();1431568199;@see SqlConfig#commentPrefix();String getCommentPrefix() {_		return this.commentPrefix__	};see,sql,config,comment,prefix;string,get,comment,prefix,return,this,comment,prefix
MergedSqlConfig -> String getCommentPrefix();1432856630;@see SqlConfig#commentPrefix();String getCommentPrefix() {_		return this.commentPrefix__	};see,sql,config,comment,prefix;string,get,comment,prefix,return,this,comment,prefix
MergedSqlConfig -> String getCommentPrefix();1434234880;@see SqlConfig#commentPrefix();String getCommentPrefix() {_		return this.commentPrefix__	};see,sql,config,comment,prefix;string,get,comment,prefix,return,this,comment,prefix
MergedSqlConfig -> String getCommentPrefix();1458754769;@see SqlConfig#commentPrefix();String getCommentPrefix() {_		return this.commentPrefix__	};see,sql,config,comment,prefix;string,get,comment,prefix,return,this,comment,prefix
MergedSqlConfig -> ErrorMode getErrorMode();1405524203;@see SqlConfig#errorMode();ErrorMode getErrorMode() {_		return this.errorMode__	};see,sql,config,error,mode;error,mode,get,error,mode,return,this,error,mode
MergedSqlConfig -> ErrorMode getErrorMode();1405526063;@see SqlConfig#errorMode();ErrorMode getErrorMode() {_		return this.errorMode__	};see,sql,config,error,mode;error,mode,get,error,mode,return,this,error,mode
MergedSqlConfig -> ErrorMode getErrorMode();1405527179;@see SqlConfig#errorMode();ErrorMode getErrorMode() {_		return this.errorMode__	};see,sql,config,error,mode;error,mode,get,error,mode,return,this,error,mode
MergedSqlConfig -> ErrorMode getErrorMode();1405687163;@see SqlConfig#errorMode();ErrorMode getErrorMode() {_		return this.errorMode__	};see,sql,config,error,mode;error,mode,get,error,mode,return,this,error,mode
MergedSqlConfig -> ErrorMode getErrorMode();1405695765;@see SqlConfig#errorMode();ErrorMode getErrorMode() {_		return this.errorMode__	};see,sql,config,error,mode;error,mode,get,error,mode,return,this,error,mode
MergedSqlConfig -> ErrorMode getErrorMode();1413848647;@see SqlConfig#errorMode();ErrorMode getErrorMode() {_		return this.errorMode__	};see,sql,config,error,mode;error,mode,get,error,mode,return,this,error,mode
MergedSqlConfig -> ErrorMode getErrorMode();1431568199;@see SqlConfig#errorMode();ErrorMode getErrorMode() {_		return this.errorMode__	};see,sql,config,error,mode;error,mode,get,error,mode,return,this,error,mode
MergedSqlConfig -> ErrorMode getErrorMode();1432856630;@see SqlConfig#errorMode();ErrorMode getErrorMode() {_		return this.errorMode__	};see,sql,config,error,mode;error,mode,get,error,mode,return,this,error,mode
MergedSqlConfig -> ErrorMode getErrorMode();1434234880;@see SqlConfig#errorMode();ErrorMode getErrorMode() {_		return this.errorMode__	};see,sql,config,error,mode;error,mode,get,error,mode,return,this,error,mode
MergedSqlConfig -> ErrorMode getErrorMode();1458754769;@see SqlConfig#errorMode();ErrorMode getErrorMode() {_		return this.errorMode__	};see,sql,config,error,mode;error,mode,get,error,mode,return,this,error,mode
MergedSqlConfig -> String getBlockCommentStartDelimiter();1405524203;@see SqlConfig#blockCommentStartDelimiter();String getBlockCommentStartDelimiter() {_		return this.blockCommentStartDelimiter__	};see,sql,config,block,comment,start,delimiter;string,get,block,comment,start,delimiter,return,this,block,comment,start,delimiter
MergedSqlConfig -> String getBlockCommentStartDelimiter();1405526063;@see SqlConfig#blockCommentStartDelimiter();String getBlockCommentStartDelimiter() {_		return this.blockCommentStartDelimiter__	};see,sql,config,block,comment,start,delimiter;string,get,block,comment,start,delimiter,return,this,block,comment,start,delimiter
MergedSqlConfig -> String getBlockCommentStartDelimiter();1405527179;@see SqlConfig#blockCommentStartDelimiter();String getBlockCommentStartDelimiter() {_		return this.blockCommentStartDelimiter__	};see,sql,config,block,comment,start,delimiter;string,get,block,comment,start,delimiter,return,this,block,comment,start,delimiter
MergedSqlConfig -> String getBlockCommentStartDelimiter();1405687163;@see SqlConfig#blockCommentStartDelimiter();String getBlockCommentStartDelimiter() {_		return this.blockCommentStartDelimiter__	};see,sql,config,block,comment,start,delimiter;string,get,block,comment,start,delimiter,return,this,block,comment,start,delimiter
MergedSqlConfig -> String getBlockCommentStartDelimiter();1405695765;@see SqlConfig#blockCommentStartDelimiter();String getBlockCommentStartDelimiter() {_		return this.blockCommentStartDelimiter__	};see,sql,config,block,comment,start,delimiter;string,get,block,comment,start,delimiter,return,this,block,comment,start,delimiter
MergedSqlConfig -> String getBlockCommentStartDelimiter();1413848647;@see SqlConfig#blockCommentStartDelimiter();String getBlockCommentStartDelimiter() {_		return this.blockCommentStartDelimiter__	};see,sql,config,block,comment,start,delimiter;string,get,block,comment,start,delimiter,return,this,block,comment,start,delimiter
MergedSqlConfig -> String getBlockCommentStartDelimiter();1431568199;@see SqlConfig#blockCommentStartDelimiter();String getBlockCommentStartDelimiter() {_		return this.blockCommentStartDelimiter__	};see,sql,config,block,comment,start,delimiter;string,get,block,comment,start,delimiter,return,this,block,comment,start,delimiter
MergedSqlConfig -> String getBlockCommentStartDelimiter();1432856630;@see SqlConfig#blockCommentStartDelimiter();String getBlockCommentStartDelimiter() {_		return this.blockCommentStartDelimiter__	};see,sql,config,block,comment,start,delimiter;string,get,block,comment,start,delimiter,return,this,block,comment,start,delimiter
MergedSqlConfig -> String getBlockCommentStartDelimiter();1434234880;@see SqlConfig#blockCommentStartDelimiter();String getBlockCommentStartDelimiter() {_		return this.blockCommentStartDelimiter__	};see,sql,config,block,comment,start,delimiter;string,get,block,comment,start,delimiter,return,this,block,comment,start,delimiter
MergedSqlConfig -> String getBlockCommentStartDelimiter();1458754769;@see SqlConfig#blockCommentStartDelimiter();String getBlockCommentStartDelimiter() {_		return this.blockCommentStartDelimiter__	};see,sql,config,block,comment,start,delimiter;string,get,block,comment,start,delimiter,return,this,block,comment,start,delimiter
MergedSqlConfig -> String getBlockCommentEndDelimiter();1405524203;@see SqlConfig#blockCommentEndDelimiter();String getBlockCommentEndDelimiter() {_		return this.blockCommentEndDelimiter__	};see,sql,config,block,comment,end,delimiter;string,get,block,comment,end,delimiter,return,this,block,comment,end,delimiter
MergedSqlConfig -> String getBlockCommentEndDelimiter();1405526063;@see SqlConfig#blockCommentEndDelimiter();String getBlockCommentEndDelimiter() {_		return this.blockCommentEndDelimiter__	};see,sql,config,block,comment,end,delimiter;string,get,block,comment,end,delimiter,return,this,block,comment,end,delimiter
MergedSqlConfig -> String getBlockCommentEndDelimiter();1405527179;@see SqlConfig#blockCommentEndDelimiter();String getBlockCommentEndDelimiter() {_		return this.blockCommentEndDelimiter__	};see,sql,config,block,comment,end,delimiter;string,get,block,comment,end,delimiter,return,this,block,comment,end,delimiter
MergedSqlConfig -> String getBlockCommentEndDelimiter();1405687163;@see SqlConfig#blockCommentEndDelimiter();String getBlockCommentEndDelimiter() {_		return this.blockCommentEndDelimiter__	};see,sql,config,block,comment,end,delimiter;string,get,block,comment,end,delimiter,return,this,block,comment,end,delimiter
MergedSqlConfig -> String getBlockCommentEndDelimiter();1405695765;@see SqlConfig#blockCommentEndDelimiter();String getBlockCommentEndDelimiter() {_		return this.blockCommentEndDelimiter__	};see,sql,config,block,comment,end,delimiter;string,get,block,comment,end,delimiter,return,this,block,comment,end,delimiter
MergedSqlConfig -> String getBlockCommentEndDelimiter();1413848647;@see SqlConfig#blockCommentEndDelimiter();String getBlockCommentEndDelimiter() {_		return this.blockCommentEndDelimiter__	};see,sql,config,block,comment,end,delimiter;string,get,block,comment,end,delimiter,return,this,block,comment,end,delimiter
MergedSqlConfig -> String getBlockCommentEndDelimiter();1431568199;@see SqlConfig#blockCommentEndDelimiter();String getBlockCommentEndDelimiter() {_		return this.blockCommentEndDelimiter__	};see,sql,config,block,comment,end,delimiter;string,get,block,comment,end,delimiter,return,this,block,comment,end,delimiter
MergedSqlConfig -> String getBlockCommentEndDelimiter();1432856630;@see SqlConfig#blockCommentEndDelimiter();String getBlockCommentEndDelimiter() {_		return this.blockCommentEndDelimiter__	};see,sql,config,block,comment,end,delimiter;string,get,block,comment,end,delimiter,return,this,block,comment,end,delimiter
MergedSqlConfig -> String getBlockCommentEndDelimiter();1434234880;@see SqlConfig#blockCommentEndDelimiter();String getBlockCommentEndDelimiter() {_		return this.blockCommentEndDelimiter__	};see,sql,config,block,comment,end,delimiter;string,get,block,comment,end,delimiter,return,this,block,comment,end,delimiter
MergedSqlConfig -> String getBlockCommentEndDelimiter();1458754769;@see SqlConfig#blockCommentEndDelimiter();String getBlockCommentEndDelimiter() {_		return this.blockCommentEndDelimiter__	};see,sql,config,block,comment,end,delimiter;string,get,block,comment,end,delimiter,return,this,block,comment,end,delimiter
MergedSqlConfig -> TransactionMode getTransactionMode();1405524203;@see SqlConfig#transactionMode();TransactionMode getTransactionMode() {_		return this.transactionMode__	};see,sql,config,transaction,mode;transaction,mode,get,transaction,mode,return,this,transaction,mode
MergedSqlConfig -> TransactionMode getTransactionMode();1405526063;@see SqlConfig#transactionMode();TransactionMode getTransactionMode() {_		return this.transactionMode__	};see,sql,config,transaction,mode;transaction,mode,get,transaction,mode,return,this,transaction,mode
MergedSqlConfig -> TransactionMode getTransactionMode();1405527179;@see SqlConfig#transactionMode();TransactionMode getTransactionMode() {_		return this.transactionMode__	};see,sql,config,transaction,mode;transaction,mode,get,transaction,mode,return,this,transaction,mode
MergedSqlConfig -> TransactionMode getTransactionMode();1405687163;@see SqlConfig#transactionMode();TransactionMode getTransactionMode() {_		return this.transactionMode__	};see,sql,config,transaction,mode;transaction,mode,get,transaction,mode,return,this,transaction,mode
MergedSqlConfig -> TransactionMode getTransactionMode();1405695765;@see SqlConfig#transactionMode();TransactionMode getTransactionMode() {_		return this.transactionMode__	};see,sql,config,transaction,mode;transaction,mode,get,transaction,mode,return,this,transaction,mode
MergedSqlConfig -> TransactionMode getTransactionMode();1413848647;@see SqlConfig#transactionMode();TransactionMode getTransactionMode() {_		return this.transactionMode__	};see,sql,config,transaction,mode;transaction,mode,get,transaction,mode,return,this,transaction,mode
MergedSqlConfig -> TransactionMode getTransactionMode();1431568199;@see SqlConfig#transactionMode();TransactionMode getTransactionMode() {_		return this.transactionMode__	};see,sql,config,transaction,mode;transaction,mode,get,transaction,mode,return,this,transaction,mode
MergedSqlConfig -> TransactionMode getTransactionMode();1432856630;@see SqlConfig#transactionMode();TransactionMode getTransactionMode() {_		return this.transactionMode__	};see,sql,config,transaction,mode;transaction,mode,get,transaction,mode,return,this,transaction,mode
MergedSqlConfig -> TransactionMode getTransactionMode();1434234880;@see SqlConfig#transactionMode();TransactionMode getTransactionMode() {_		return this.transactionMode__	};see,sql,config,transaction,mode;transaction,mode,get,transaction,mode,return,this,transaction,mode
MergedSqlConfig -> TransactionMode getTransactionMode();1458754769;@see SqlConfig#transactionMode();TransactionMode getTransactionMode() {_		return this.transactionMode__	};see,sql,config,transaction,mode;transaction,mode,get,transaction,mode,return,this,transaction,mode
MergedSqlConfig -> String getTransactionManager();1405524203;@see SqlConfig#transactionManager();String getTransactionManager() {_		return this.transactionManager__	};see,sql,config,transaction,manager;string,get,transaction,manager,return,this,transaction,manager
MergedSqlConfig -> String getTransactionManager();1405526063;@see SqlConfig#transactionManager();String getTransactionManager() {_		return this.transactionManager__	};see,sql,config,transaction,manager;string,get,transaction,manager,return,this,transaction,manager
MergedSqlConfig -> String getTransactionManager();1405527179;@see SqlConfig#transactionManager();String getTransactionManager() {_		return this.transactionManager__	};see,sql,config,transaction,manager;string,get,transaction,manager,return,this,transaction,manager
MergedSqlConfig -> String getTransactionManager();1405687163;@see SqlConfig#transactionManager();String getTransactionManager() {_		return this.transactionManager__	};see,sql,config,transaction,manager;string,get,transaction,manager,return,this,transaction,manager
MergedSqlConfig -> String getTransactionManager();1405695765;@see SqlConfig#transactionManager();String getTransactionManager() {_		return this.transactionManager__	};see,sql,config,transaction,manager;string,get,transaction,manager,return,this,transaction,manager
MergedSqlConfig -> String getTransactionManager();1413848647;@see SqlConfig#transactionManager();String getTransactionManager() {_		return this.transactionManager__	};see,sql,config,transaction,manager;string,get,transaction,manager,return,this,transaction,manager
MergedSqlConfig -> String getTransactionManager();1431568199;@see SqlConfig#transactionManager();String getTransactionManager() {_		return this.transactionManager__	};see,sql,config,transaction,manager;string,get,transaction,manager,return,this,transaction,manager
MergedSqlConfig -> String getTransactionManager();1432856630;@see SqlConfig#transactionManager();String getTransactionManager() {_		return this.transactionManager__	};see,sql,config,transaction,manager;string,get,transaction,manager,return,this,transaction,manager
MergedSqlConfig -> String getTransactionManager();1434234880;@see SqlConfig#transactionManager();String getTransactionManager() {_		return this.transactionManager__	};see,sql,config,transaction,manager;string,get,transaction,manager,return,this,transaction,manager
MergedSqlConfig -> String getTransactionManager();1458754769;@see SqlConfig#transactionManager();String getTransactionManager() {_		return this.transactionManager__	};see,sql,config,transaction,manager;string,get,transaction,manager,return,this,transaction,manager
MergedSqlConfig -> String getEncoding();1405524203;@see SqlConfig#encoding();String getEncoding() {_		return this.encoding__	};see,sql,config,encoding;string,get,encoding,return,this,encoding
MergedSqlConfig -> String getEncoding();1405526063;@see SqlConfig#encoding();String getEncoding() {_		return this.encoding__	};see,sql,config,encoding;string,get,encoding,return,this,encoding
MergedSqlConfig -> String getEncoding();1405527179;@see SqlConfig#encoding();String getEncoding() {_		return this.encoding__	};see,sql,config,encoding;string,get,encoding,return,this,encoding
MergedSqlConfig -> String getEncoding();1405687163;@see SqlConfig#encoding();String getEncoding() {_		return this.encoding__	};see,sql,config,encoding;string,get,encoding,return,this,encoding
MergedSqlConfig -> String getEncoding();1405695765;@see SqlConfig#encoding();String getEncoding() {_		return this.encoding__	};see,sql,config,encoding;string,get,encoding,return,this,encoding
MergedSqlConfig -> String getEncoding();1413848647;@see SqlConfig#encoding();String getEncoding() {_		return this.encoding__	};see,sql,config,encoding;string,get,encoding,return,this,encoding
MergedSqlConfig -> String getEncoding();1431568199;@see SqlConfig#encoding();String getEncoding() {_		return this.encoding__	};see,sql,config,encoding;string,get,encoding,return,this,encoding
MergedSqlConfig -> String getEncoding();1432856630;@see SqlConfig#encoding();String getEncoding() {_		return this.encoding__	};see,sql,config,encoding;string,get,encoding,return,this,encoding
MergedSqlConfig -> String getEncoding();1434234880;@see SqlConfig#encoding();String getEncoding() {_		return this.encoding__	};see,sql,config,encoding;string,get,encoding,return,this,encoding
MergedSqlConfig -> String getEncoding();1458754769;@see SqlConfig#encoding();String getEncoding() {_		return this.encoding__	};see,sql,config,encoding;string,get,encoding,return,this,encoding
MergedSqlConfig -> MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass);1405524203;Construct a {@code MergedSqlConfig} instance by merging the configuration_from the supplied local (potentially method-level) {@code @SqlConfig} annotation_with class-level configuration discovered on the supplied {@code testClass}._<p>Local configuration overrides class-level configuration._<p>If the test class is not annotated with {@code @SqlConfig}, no merging_takes place and the local configuration is used "as is".;MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass) {_		Assert.notNull(localSqlConfig, "Local @SqlConfig must not be null")__		Assert.notNull(testClass, "testClass must not be null")___		_		AnnotationAttributes attributes = AnnotatedElementUtils.getAnnotationAttributes(testClass,_			SqlConfig.class.getName())___		_		if (attributes != null) {_			for (String key : attributes.keySet()) {_				Object value = AnnotationUtils.getValue(localSqlConfig, key)__				if (value != null) {_					_					if (!value.equals("") && (value != TransactionMode.DEFAULT) && (value != ErrorMode.DEFAULT)) {_						attributes.put(key, value)__					}_				}_			}_		}_		else {_			_			attributes = AnnotationUtils.getAnnotationAttributes(localSqlConfig, false, false)__		}__		this.dataSource = attributes.getString("dataSource")__		this.transactionManager = attributes.getString("transactionManager")__		this.transactionMode = retrieveTransactionMode(attributes)__		this.encoding = attributes.getString("encoding")__		this.separator = retrieveSeparator(attributes)__		this.commentPrefix = retrieveCommentPrefix(attributes)__		this.blockCommentStartDelimiter = retrieveBlockCommentStartDelimiter(attributes)__		this.blockCommentEndDelimiter = retrieveBlockCommentEndDelimiter(attributes)__		this.errorMode = retrieveErrorMode(attributes)__	};construct,a,code,merged,sql,config,instance,by,merging,the,configuration,from,the,supplied,local,potentially,method,level,code,sql,config,annotation,with,class,level,configuration,discovered,on,the,supplied,code,test,class,p,local,configuration,overrides,class,level,configuration,p,if,the,test,class,is,not,annotated,with,code,sql,config,no,merging,takes,place,and,the,local,configuration,is,used,as,is;merged,sql,config,sql,config,local,sql,config,class,test,class,assert,not,null,local,sql,config,local,sql,config,must,not,be,null,assert,not,null,test,class,test,class,must,not,be,null,annotation,attributes,attributes,annotated,element,utils,get,annotation,attributes,test,class,sql,config,class,get,name,if,attributes,null,for,string,key,attributes,key,set,object,value,annotation,utils,get,value,local,sql,config,key,if,value,null,if,value,equals,value,transaction,mode,default,value,error,mode,default,attributes,put,key,value,else,attributes,annotation,utils,get,annotation,attributes,local,sql,config,false,false,this,data,source,attributes,get,string,data,source,this,transaction,manager,attributes,get,string,transaction,manager,this,transaction,mode,retrieve,transaction,mode,attributes,this,encoding,attributes,get,string,encoding,this,separator,retrieve,separator,attributes,this,comment,prefix,retrieve,comment,prefix,attributes,this,block,comment,start,delimiter,retrieve,block,comment,start,delimiter,attributes,this,block,comment,end,delimiter,retrieve,block,comment,end,delimiter,attributes,this,error,mode,retrieve,error,mode,attributes
MergedSqlConfig -> MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass);1405526063;Construct a {@code MergedSqlConfig} instance by merging the configuration_from the supplied local (potentially method-level) {@code @SqlConfig} annotation_with class-level configuration discovered on the supplied {@code testClass}._<p>Local configuration overrides class-level configuration._<p>If the test class is not annotated with {@code @SqlConfig}, no merging_takes place and the local configuration is used "as is".;MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass) {_		Assert.notNull(localSqlConfig, "Local @SqlConfig must not be null")__		Assert.notNull(testClass, "testClass must not be null")___		_		AnnotationAttributes attributes = AnnotatedElementUtils.getAnnotationAttributes(testClass,_			SqlConfig.class.getName())___		_		if (attributes != null) {_			for (String key : attributes.keySet()) {_				Object value = AnnotationUtils.getValue(localSqlConfig, key)__				if (value != null) {_					_					if (!value.equals("") && (value != TransactionMode.DEFAULT) && (value != ErrorMode.DEFAULT)) {_						attributes.put(key, value)__					}_				}_			}_		}_		else {_			_			attributes = AnnotationUtils.getAnnotationAttributes(localSqlConfig, false, false)__		}__		this.dataSource = attributes.getString("dataSource")__		this.transactionManager = attributes.getString("transactionManager")__		this.transactionMode = retrieveTransactionMode(attributes)__		this.encoding = attributes.getString("encoding")__		this.separator = retrieveSeparator(attributes)__		this.commentPrefix = retrieveCommentPrefix(attributes)__		this.blockCommentStartDelimiter = retrieveBlockCommentStartDelimiter(attributes)__		this.blockCommentEndDelimiter = retrieveBlockCommentEndDelimiter(attributes)__		this.errorMode = retrieveErrorMode(attributes)__	};construct,a,code,merged,sql,config,instance,by,merging,the,configuration,from,the,supplied,local,potentially,method,level,code,sql,config,annotation,with,class,level,configuration,discovered,on,the,supplied,code,test,class,p,local,configuration,overrides,class,level,configuration,p,if,the,test,class,is,not,annotated,with,code,sql,config,no,merging,takes,place,and,the,local,configuration,is,used,as,is;merged,sql,config,sql,config,local,sql,config,class,test,class,assert,not,null,local,sql,config,local,sql,config,must,not,be,null,assert,not,null,test,class,test,class,must,not,be,null,annotation,attributes,attributes,annotated,element,utils,get,annotation,attributes,test,class,sql,config,class,get,name,if,attributes,null,for,string,key,attributes,key,set,object,value,annotation,utils,get,value,local,sql,config,key,if,value,null,if,value,equals,value,transaction,mode,default,value,error,mode,default,attributes,put,key,value,else,attributes,annotation,utils,get,annotation,attributes,local,sql,config,false,false,this,data,source,attributes,get,string,data,source,this,transaction,manager,attributes,get,string,transaction,manager,this,transaction,mode,retrieve,transaction,mode,attributes,this,encoding,attributes,get,string,encoding,this,separator,retrieve,separator,attributes,this,comment,prefix,retrieve,comment,prefix,attributes,this,block,comment,start,delimiter,retrieve,block,comment,start,delimiter,attributes,this,block,comment,end,delimiter,retrieve,block,comment,end,delimiter,attributes,this,error,mode,retrieve,error,mode,attributes
MergedSqlConfig -> MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass);1405527179;Construct a {@code MergedSqlConfig} instance by merging the configuration_from the supplied local (potentially method-level) {@code @SqlConfig} annotation_with class-level configuration discovered on the supplied {@code testClass}._<p>Local configuration overrides class-level configuration._<p>If the test class is not annotated with {@code @SqlConfig}, no merging_takes place and the local configuration is used "as is".;MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass) {_		Assert.notNull(localSqlConfig, "Local @SqlConfig must not be null")__		Assert.notNull(testClass, "testClass must not be null")___		_		AnnotationAttributes attributes = AnnotatedElementUtils.getAnnotationAttributes(testClass,_			SqlConfig.class.getName())___		_		if (attributes != null) {_			for (String key : attributes.keySet()) {_				Object value = AnnotationUtils.getValue(localSqlConfig, key)__				if (value != null) {_					_					if (!value.equals("") && (value != TransactionMode.DEFAULT) && (value != ErrorMode.DEFAULT)) {_						attributes.put(key, value)__					}_				}_			}_		}_		else {_			_			attributes = AnnotationUtils.getAnnotationAttributes(localSqlConfig, false, false)__		}__		this.dataSource = attributes.getString("dataSource")__		this.transactionManager = attributes.getString("transactionManager")__		this.transactionMode = retrieveTransactionMode(attributes)__		this.encoding = attributes.getString("encoding")__		this.separator = retrieveSeparator(attributes)__		this.commentPrefix = retrieveCommentPrefix(attributes)__		this.blockCommentStartDelimiter = retrieveBlockCommentStartDelimiter(attributes)__		this.blockCommentEndDelimiter = retrieveBlockCommentEndDelimiter(attributes)__		this.errorMode = retrieveErrorMode(attributes)__	};construct,a,code,merged,sql,config,instance,by,merging,the,configuration,from,the,supplied,local,potentially,method,level,code,sql,config,annotation,with,class,level,configuration,discovered,on,the,supplied,code,test,class,p,local,configuration,overrides,class,level,configuration,p,if,the,test,class,is,not,annotated,with,code,sql,config,no,merging,takes,place,and,the,local,configuration,is,used,as,is;merged,sql,config,sql,config,local,sql,config,class,test,class,assert,not,null,local,sql,config,local,sql,config,must,not,be,null,assert,not,null,test,class,test,class,must,not,be,null,annotation,attributes,attributes,annotated,element,utils,get,annotation,attributes,test,class,sql,config,class,get,name,if,attributes,null,for,string,key,attributes,key,set,object,value,annotation,utils,get,value,local,sql,config,key,if,value,null,if,value,equals,value,transaction,mode,default,value,error,mode,default,attributes,put,key,value,else,attributes,annotation,utils,get,annotation,attributes,local,sql,config,false,false,this,data,source,attributes,get,string,data,source,this,transaction,manager,attributes,get,string,transaction,manager,this,transaction,mode,retrieve,transaction,mode,attributes,this,encoding,attributes,get,string,encoding,this,separator,retrieve,separator,attributes,this,comment,prefix,retrieve,comment,prefix,attributes,this,block,comment,start,delimiter,retrieve,block,comment,start,delimiter,attributes,this,block,comment,end,delimiter,retrieve,block,comment,end,delimiter,attributes,this,error,mode,retrieve,error,mode,attributes
MergedSqlConfig -> MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass);1405687163;Construct a {@code MergedSqlConfig} instance by merging the configuration_from the supplied local (potentially method-level) {@code @SqlConfig} annotation_with class-level configuration discovered on the supplied {@code testClass}._<p>Local configuration overrides class-level configuration._<p>If the test class is not annotated with {@code @SqlConfig}, no merging_takes place and the local configuration is used "as is".;MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass) {_		Assert.notNull(localSqlConfig, "Local @SqlConfig must not be null")__		Assert.notNull(testClass, "testClass must not be null")___		_		AnnotationAttributes attributes = AnnotatedElementUtils.getAnnotationAttributes(testClass,_			SqlConfig.class.getName())___		_		if (attributes != null) {_			for (String key : attributes.keySet()) {_				Object value = AnnotationUtils.getValue(localSqlConfig, key)__				if (value != null) {_					_					if (!value.equals("") && (value != TransactionMode.DEFAULT) && (value != ErrorMode.DEFAULT)) {_						attributes.put(key, value)__					}_				}_			}_		}_		else {_			_			attributes = AnnotationUtils.getAnnotationAttributes(localSqlConfig, false, false)__		}__		this.dataSource = attributes.getString("dataSource")__		this.transactionManager = attributes.getString("transactionManager")__		this.transactionMode = getEnum(attributes, "transactionMode", TransactionMode.DEFAULT, TransactionMode.INFERRED)__		this.encoding = attributes.getString("encoding")__		this.separator = getString(attributes, "separator", ScriptUtils.DEFAULT_STATEMENT_SEPARATOR)__		this.commentPrefix = getString(attributes, "commentPrefix", ScriptUtils.DEFAULT_COMMENT_PREFIX)__		this.blockCommentStartDelimiter = getString(attributes, "blockCommentStartDelimiter",_			ScriptUtils.DEFAULT_BLOCK_COMMENT_START_DELIMITER)__		this.blockCommentEndDelimiter = getString(attributes, "blockCommentEndDelimiter",_			ScriptUtils.DEFAULT_BLOCK_COMMENT_END_DELIMITER)__		this.errorMode = getEnum(attributes, "errorMode", ErrorMode.DEFAULT, ErrorMode.FAIL_ON_ERROR)__	};construct,a,code,merged,sql,config,instance,by,merging,the,configuration,from,the,supplied,local,potentially,method,level,code,sql,config,annotation,with,class,level,configuration,discovered,on,the,supplied,code,test,class,p,local,configuration,overrides,class,level,configuration,p,if,the,test,class,is,not,annotated,with,code,sql,config,no,merging,takes,place,and,the,local,configuration,is,used,as,is;merged,sql,config,sql,config,local,sql,config,class,test,class,assert,not,null,local,sql,config,local,sql,config,must,not,be,null,assert,not,null,test,class,test,class,must,not,be,null,annotation,attributes,attributes,annotated,element,utils,get,annotation,attributes,test,class,sql,config,class,get,name,if,attributes,null,for,string,key,attributes,key,set,object,value,annotation,utils,get,value,local,sql,config,key,if,value,null,if,value,equals,value,transaction,mode,default,value,error,mode,default,attributes,put,key,value,else,attributes,annotation,utils,get,annotation,attributes,local,sql,config,false,false,this,data,source,attributes,get,string,data,source,this,transaction,manager,attributes,get,string,transaction,manager,this,transaction,mode,get,enum,attributes,transaction,mode,transaction,mode,default,transaction,mode,inferred,this,encoding,attributes,get,string,encoding,this,separator,get,string,attributes,separator,script,utils,this,comment,prefix,get,string,attributes,comment,prefix,script,utils,this,block,comment,start,delimiter,get,string,attributes,block,comment,start,delimiter,script,utils,this,block,comment,end,delimiter,get,string,attributes,block,comment,end,delimiter,script,utils,this,error,mode,get,enum,attributes,error,mode,error,mode,default,error,mode
MergedSqlConfig -> MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass);1405695765;Construct a {@code MergedSqlConfig} instance by merging the configuration_from the supplied local (potentially method-level) {@code @SqlConfig} annotation_with class-level configuration discovered on the supplied {@code testClass}._<p>Local configuration overrides class-level configuration._<p>If the test class is not annotated with {@code @SqlConfig}, no merging_takes place and the local configuration is used "as is".;MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass) {_		Assert.notNull(localSqlConfig, "Local @SqlConfig must not be null")__		Assert.notNull(testClass, "testClass must not be null")___		_		AnnotationAttributes attributes = AnnotatedElementUtils.getAnnotationAttributes(testClass,_			SqlConfig.class.getName())___		_		if (attributes != null) {_			for (String key : attributes.keySet()) {_				Object value = AnnotationUtils.getValue(localSqlConfig, key)__				if (value != null) {_					_					if (!value.equals("") && (value != TransactionMode.DEFAULT) && (value != ErrorMode.DEFAULT)) {_						attributes.put(key, value)__					}_				}_			}_		}_		else {_			_			attributes = AnnotationUtils.getAnnotationAttributes(localSqlConfig, false, false)__		}__		this.dataSource = attributes.getString("dataSource")__		this.transactionManager = attributes.getString("transactionManager")__		this.transactionMode = getEnum(attributes, "transactionMode", TransactionMode.DEFAULT, TransactionMode.INFERRED)__		this.encoding = attributes.getString("encoding")__		this.separator = getString(attributes, "separator", ScriptUtils.DEFAULT_STATEMENT_SEPARATOR)__		this.commentPrefix = getString(attributes, "commentPrefix", ScriptUtils.DEFAULT_COMMENT_PREFIX)__		this.blockCommentStartDelimiter = getString(attributes, "blockCommentStartDelimiter",_			ScriptUtils.DEFAULT_BLOCK_COMMENT_START_DELIMITER)__		this.blockCommentEndDelimiter = getString(attributes, "blockCommentEndDelimiter",_			ScriptUtils.DEFAULT_BLOCK_COMMENT_END_DELIMITER)__		this.errorMode = getEnum(attributes, "errorMode", ErrorMode.DEFAULT, ErrorMode.FAIL_ON_ERROR)__	};construct,a,code,merged,sql,config,instance,by,merging,the,configuration,from,the,supplied,local,potentially,method,level,code,sql,config,annotation,with,class,level,configuration,discovered,on,the,supplied,code,test,class,p,local,configuration,overrides,class,level,configuration,p,if,the,test,class,is,not,annotated,with,code,sql,config,no,merging,takes,place,and,the,local,configuration,is,used,as,is;merged,sql,config,sql,config,local,sql,config,class,test,class,assert,not,null,local,sql,config,local,sql,config,must,not,be,null,assert,not,null,test,class,test,class,must,not,be,null,annotation,attributes,attributes,annotated,element,utils,get,annotation,attributes,test,class,sql,config,class,get,name,if,attributes,null,for,string,key,attributes,key,set,object,value,annotation,utils,get,value,local,sql,config,key,if,value,null,if,value,equals,value,transaction,mode,default,value,error,mode,default,attributes,put,key,value,else,attributes,annotation,utils,get,annotation,attributes,local,sql,config,false,false,this,data,source,attributes,get,string,data,source,this,transaction,manager,attributes,get,string,transaction,manager,this,transaction,mode,get,enum,attributes,transaction,mode,transaction,mode,default,transaction,mode,inferred,this,encoding,attributes,get,string,encoding,this,separator,get,string,attributes,separator,script,utils,this,comment,prefix,get,string,attributes,comment,prefix,script,utils,this,block,comment,start,delimiter,get,string,attributes,block,comment,start,delimiter,script,utils,this,block,comment,end,delimiter,get,string,attributes,block,comment,end,delimiter,script,utils,this,error,mode,get,enum,attributes,error,mode,error,mode,default,error,mode
MergedSqlConfig -> MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass);1413848647;Construct a {@code MergedSqlConfig} instance by merging the configuration_from the supplied local (potentially method-level) {@code @SqlConfig} annotation_with class-level configuration discovered on the supplied {@code testClass}._<p>Local configuration overrides class-level configuration._<p>If the test class is not annotated with {@code @SqlConfig}, no merging_takes place and the local configuration is used "as is".;MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass) {_		Assert.notNull(localSqlConfig, "Local @SqlConfig must not be null")__		Assert.notNull(testClass, "testClass must not be null")___		_		AnnotationAttributes attributes = AnnotatedElementUtils.getAnnotationAttributes(testClass,_			SqlConfig.class.getName())___		_		if (attributes != null) {_			for (String key : attributes.keySet()) {_				Object value = AnnotationUtils.getValue(localSqlConfig, key)__				if (value != null) {_					_					if (!value.equals("") && (value != TransactionMode.DEFAULT) && (value != ErrorMode.DEFAULT)) {_						attributes.put(key, value)__					}_				}_			}_		}_		else {_			_			attributes = AnnotationUtils.getAnnotationAttributes(localSqlConfig, false, false)__		}__		this.dataSource = attributes.getString("dataSource")__		this.transactionManager = attributes.getString("transactionManager")__		this.transactionMode = getEnum(attributes, "transactionMode", TransactionMode.DEFAULT, TransactionMode.INFERRED)__		this.encoding = attributes.getString("encoding")__		this.separator = getString(attributes, "separator", ScriptUtils.DEFAULT_STATEMENT_SEPARATOR)__		this.commentPrefix = getString(attributes, "commentPrefix", ScriptUtils.DEFAULT_COMMENT_PREFIX)__		this.blockCommentStartDelimiter = getString(attributes, "blockCommentStartDelimiter",_			ScriptUtils.DEFAULT_BLOCK_COMMENT_START_DELIMITER)__		this.blockCommentEndDelimiter = getString(attributes, "blockCommentEndDelimiter",_			ScriptUtils.DEFAULT_BLOCK_COMMENT_END_DELIMITER)__		this.errorMode = getEnum(attributes, "errorMode", ErrorMode.DEFAULT, ErrorMode.FAIL_ON_ERROR)__	};construct,a,code,merged,sql,config,instance,by,merging,the,configuration,from,the,supplied,local,potentially,method,level,code,sql,config,annotation,with,class,level,configuration,discovered,on,the,supplied,code,test,class,p,local,configuration,overrides,class,level,configuration,p,if,the,test,class,is,not,annotated,with,code,sql,config,no,merging,takes,place,and,the,local,configuration,is,used,as,is;merged,sql,config,sql,config,local,sql,config,class,test,class,assert,not,null,local,sql,config,local,sql,config,must,not,be,null,assert,not,null,test,class,test,class,must,not,be,null,annotation,attributes,attributes,annotated,element,utils,get,annotation,attributes,test,class,sql,config,class,get,name,if,attributes,null,for,string,key,attributes,key,set,object,value,annotation,utils,get,value,local,sql,config,key,if,value,null,if,value,equals,value,transaction,mode,default,value,error,mode,default,attributes,put,key,value,else,attributes,annotation,utils,get,annotation,attributes,local,sql,config,false,false,this,data,source,attributes,get,string,data,source,this,transaction,manager,attributes,get,string,transaction,manager,this,transaction,mode,get,enum,attributes,transaction,mode,transaction,mode,default,transaction,mode,inferred,this,encoding,attributes,get,string,encoding,this,separator,get,string,attributes,separator,script,utils,this,comment,prefix,get,string,attributes,comment,prefix,script,utils,this,block,comment,start,delimiter,get,string,attributes,block,comment,start,delimiter,script,utils,this,block,comment,end,delimiter,get,string,attributes,block,comment,end,delimiter,script,utils,this,error,mode,get,enum,attributes,error,mode,error,mode,default,error,mode
MergedSqlConfig -> MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass);1431568199;Construct a {@code MergedSqlConfig} instance by merging the configuration_from the supplied local (potentially method-level) {@code @SqlConfig} annotation_with class-level configuration discovered on the supplied {@code testClass}._<p>Local configuration overrides class-level configuration._<p>If the test class is not annotated with {@code @SqlConfig}, no merging_takes place and the local configuration is used "as is".;MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass) {_		Assert.notNull(localSqlConfig, "Local @SqlConfig must not be null")__		Assert.notNull(testClass, "testClass must not be null")___		_		AnnotationAttributes attributes = AnnotatedElementUtils.findAnnotationAttributes(testClass,_			SqlConfig.class.getName())___		_		if (attributes != null) {_			for (String key : attributes.keySet()) {_				Object value = AnnotationUtils.getValue(localSqlConfig, key)__				if (value != null) {_					_					if (!value.equals("") && (value != TransactionMode.DEFAULT) && (value != ErrorMode.DEFAULT)) {_						attributes.put(key, value)__					}_				}_			}_		}_		else {_			_			attributes = AnnotationUtils.getAnnotationAttributes(localSqlConfig, false, false)__		}__		this.dataSource = attributes.getString("dataSource")__		this.transactionManager = attributes.getString("transactionManager")__		this.transactionMode = getEnum(attributes, "transactionMode", TransactionMode.DEFAULT, TransactionMode.INFERRED)__		this.encoding = attributes.getString("encoding")__		this.separator = getString(attributes, "separator", ScriptUtils.DEFAULT_STATEMENT_SEPARATOR)__		this.commentPrefix = getString(attributes, "commentPrefix", ScriptUtils.DEFAULT_COMMENT_PREFIX)__		this.blockCommentStartDelimiter = getString(attributes, "blockCommentStartDelimiter",_			ScriptUtils.DEFAULT_BLOCK_COMMENT_START_DELIMITER)__		this.blockCommentEndDelimiter = getString(attributes, "blockCommentEndDelimiter",_			ScriptUtils.DEFAULT_BLOCK_COMMENT_END_DELIMITER)__		this.errorMode = getEnum(attributes, "errorMode", ErrorMode.DEFAULT, ErrorMode.FAIL_ON_ERROR)__	};construct,a,code,merged,sql,config,instance,by,merging,the,configuration,from,the,supplied,local,potentially,method,level,code,sql,config,annotation,with,class,level,configuration,discovered,on,the,supplied,code,test,class,p,local,configuration,overrides,class,level,configuration,p,if,the,test,class,is,not,annotated,with,code,sql,config,no,merging,takes,place,and,the,local,configuration,is,used,as,is;merged,sql,config,sql,config,local,sql,config,class,test,class,assert,not,null,local,sql,config,local,sql,config,must,not,be,null,assert,not,null,test,class,test,class,must,not,be,null,annotation,attributes,attributes,annotated,element,utils,find,annotation,attributes,test,class,sql,config,class,get,name,if,attributes,null,for,string,key,attributes,key,set,object,value,annotation,utils,get,value,local,sql,config,key,if,value,null,if,value,equals,value,transaction,mode,default,value,error,mode,default,attributes,put,key,value,else,attributes,annotation,utils,get,annotation,attributes,local,sql,config,false,false,this,data,source,attributes,get,string,data,source,this,transaction,manager,attributes,get,string,transaction,manager,this,transaction,mode,get,enum,attributes,transaction,mode,transaction,mode,default,transaction,mode,inferred,this,encoding,attributes,get,string,encoding,this,separator,get,string,attributes,separator,script,utils,this,comment,prefix,get,string,attributes,comment,prefix,script,utils,this,block,comment,start,delimiter,get,string,attributes,block,comment,start,delimiter,script,utils,this,block,comment,end,delimiter,get,string,attributes,block,comment,end,delimiter,script,utils,this,error,mode,get,enum,attributes,error,mode,error,mode,default,error,mode
MergedSqlConfig -> MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass);1432856630;Construct a {@code MergedSqlConfig} instance by merging the configuration_from the supplied local (potentially method-level) {@code @SqlConfig} annotation_with class-level configuration discovered on the supplied {@code testClass}._<p>Local configuration overrides class-level configuration._<p>If the test class is not annotated with {@code @SqlConfig}, no merging_takes place and the local configuration is used "as is".;MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass) {_		Assert.notNull(localSqlConfig, "Local @SqlConfig must not be null")__		Assert.notNull(testClass, "testClass must not be null")___		_		AnnotationAttributes attributes = AnnotatedElementUtils.findAnnotationAttributes(testClass,_			SqlConfig.class.getName(), false, false)___		_		if (attributes != null) {_			for (String key : attributes.keySet()) {_				Object value = AnnotationUtils.getValue(localSqlConfig, key)__				if (value != null) {_					_					if (!value.equals("") && (value != TransactionMode.DEFAULT) && (value != ErrorMode.DEFAULT)) {_						attributes.put(key, value)__					}_				}_			}_		}_		else {_			_			attributes = AnnotationUtils.getAnnotationAttributes(localSqlConfig, false, false)__		}__		this.dataSource = attributes.getString("dataSource")__		this.transactionManager = attributes.getString("transactionManager")__		this.transactionMode = getEnum(attributes, "transactionMode", TransactionMode.DEFAULT, TransactionMode.INFERRED)__		this.encoding = attributes.getString("encoding")__		this.separator = getString(attributes, "separator", ScriptUtils.DEFAULT_STATEMENT_SEPARATOR)__		this.commentPrefix = getString(attributes, "commentPrefix", ScriptUtils.DEFAULT_COMMENT_PREFIX)__		this.blockCommentStartDelimiter = getString(attributes, "blockCommentStartDelimiter",_			ScriptUtils.DEFAULT_BLOCK_COMMENT_START_DELIMITER)__		this.blockCommentEndDelimiter = getString(attributes, "blockCommentEndDelimiter",_			ScriptUtils.DEFAULT_BLOCK_COMMENT_END_DELIMITER)__		this.errorMode = getEnum(attributes, "errorMode", ErrorMode.DEFAULT, ErrorMode.FAIL_ON_ERROR)__	};construct,a,code,merged,sql,config,instance,by,merging,the,configuration,from,the,supplied,local,potentially,method,level,code,sql,config,annotation,with,class,level,configuration,discovered,on,the,supplied,code,test,class,p,local,configuration,overrides,class,level,configuration,p,if,the,test,class,is,not,annotated,with,code,sql,config,no,merging,takes,place,and,the,local,configuration,is,used,as,is;merged,sql,config,sql,config,local,sql,config,class,test,class,assert,not,null,local,sql,config,local,sql,config,must,not,be,null,assert,not,null,test,class,test,class,must,not,be,null,annotation,attributes,attributes,annotated,element,utils,find,annotation,attributes,test,class,sql,config,class,get,name,false,false,if,attributes,null,for,string,key,attributes,key,set,object,value,annotation,utils,get,value,local,sql,config,key,if,value,null,if,value,equals,value,transaction,mode,default,value,error,mode,default,attributes,put,key,value,else,attributes,annotation,utils,get,annotation,attributes,local,sql,config,false,false,this,data,source,attributes,get,string,data,source,this,transaction,manager,attributes,get,string,transaction,manager,this,transaction,mode,get,enum,attributes,transaction,mode,transaction,mode,default,transaction,mode,inferred,this,encoding,attributes,get,string,encoding,this,separator,get,string,attributes,separator,script,utils,this,comment,prefix,get,string,attributes,comment,prefix,script,utils,this,block,comment,start,delimiter,get,string,attributes,block,comment,start,delimiter,script,utils,this,block,comment,end,delimiter,get,string,attributes,block,comment,end,delimiter,script,utils,this,error,mode,get,enum,attributes,error,mode,error,mode,default,error,mode
MergedSqlConfig -> MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass);1434234880;Construct a {@code MergedSqlConfig} instance by merging the configuration_from the supplied local (potentially method-level) {@code @SqlConfig} annotation_with class-level configuration discovered on the supplied {@code testClass}._<p>Local configuration overrides class-level configuration._<p>If the test class is not annotated with {@code @SqlConfig}, no merging_takes place and the local configuration is used "as is".;MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass) {_		Assert.notNull(localSqlConfig, "Local @SqlConfig must not be null")__		Assert.notNull(testClass, "testClass must not be null")___		_		AnnotationAttributes attributes = AnnotatedElementUtils.findMergedAnnotationAttributes(testClass,_			SqlConfig.class.getName(), false, false)___		_		if (attributes != null) {_			for (String key : attributes.keySet()) {_				Object value = AnnotationUtils.getValue(localSqlConfig, key)__				if (value != null) {_					_					if (!value.equals("") && (value != TransactionMode.DEFAULT) && (value != ErrorMode.DEFAULT)) {_						attributes.put(key, value)__					}_				}_			}_		}_		else {_			_			attributes = AnnotationUtils.getAnnotationAttributes(localSqlConfig, false, false)__		}__		this.dataSource = attributes.getString("dataSource")__		this.transactionManager = attributes.getString("transactionManager")__		this.transactionMode = getEnum(attributes, "transactionMode", TransactionMode.DEFAULT, TransactionMode.INFERRED)__		this.encoding = attributes.getString("encoding")__		this.separator = getString(attributes, "separator", ScriptUtils.DEFAULT_STATEMENT_SEPARATOR)__		this.commentPrefix = getString(attributes, "commentPrefix", ScriptUtils.DEFAULT_COMMENT_PREFIX)__		this.blockCommentStartDelimiter = getString(attributes, "blockCommentStartDelimiter",_			ScriptUtils.DEFAULT_BLOCK_COMMENT_START_DELIMITER)__		this.blockCommentEndDelimiter = getString(attributes, "blockCommentEndDelimiter",_			ScriptUtils.DEFAULT_BLOCK_COMMENT_END_DELIMITER)__		this.errorMode = getEnum(attributes, "errorMode", ErrorMode.DEFAULT, ErrorMode.FAIL_ON_ERROR)__	};construct,a,code,merged,sql,config,instance,by,merging,the,configuration,from,the,supplied,local,potentially,method,level,code,sql,config,annotation,with,class,level,configuration,discovered,on,the,supplied,code,test,class,p,local,configuration,overrides,class,level,configuration,p,if,the,test,class,is,not,annotated,with,code,sql,config,no,merging,takes,place,and,the,local,configuration,is,used,as,is;merged,sql,config,sql,config,local,sql,config,class,test,class,assert,not,null,local,sql,config,local,sql,config,must,not,be,null,assert,not,null,test,class,test,class,must,not,be,null,annotation,attributes,attributes,annotated,element,utils,find,merged,annotation,attributes,test,class,sql,config,class,get,name,false,false,if,attributes,null,for,string,key,attributes,key,set,object,value,annotation,utils,get,value,local,sql,config,key,if,value,null,if,value,equals,value,transaction,mode,default,value,error,mode,default,attributes,put,key,value,else,attributes,annotation,utils,get,annotation,attributes,local,sql,config,false,false,this,data,source,attributes,get,string,data,source,this,transaction,manager,attributes,get,string,transaction,manager,this,transaction,mode,get,enum,attributes,transaction,mode,transaction,mode,default,transaction,mode,inferred,this,encoding,attributes,get,string,encoding,this,separator,get,string,attributes,separator,script,utils,this,comment,prefix,get,string,attributes,comment,prefix,script,utils,this,block,comment,start,delimiter,get,string,attributes,block,comment,start,delimiter,script,utils,this,block,comment,end,delimiter,get,string,attributes,block,comment,end,delimiter,script,utils,this,error,mode,get,enum,attributes,error,mode,error,mode,default,error,mode
MergedSqlConfig -> MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass);1458754769;Construct a {@code MergedSqlConfig} instance by merging the configuration_from the supplied local (potentially method-level) {@code @SqlConfig} annotation_with class-level configuration discovered on the supplied {@code testClass}._<p>Local configuration overrides class-level configuration._<p>If the test class is not annotated with {@code @SqlConfig}, no merging_takes place and the local configuration is used "as is".;MergedSqlConfig(SqlConfig localSqlConfig, Class<?> testClass) {_		Assert.notNull(localSqlConfig, "Local @SqlConfig must not be null")__		Assert.notNull(testClass, "testClass must not be null")___		_		AnnotationAttributes attributes = AnnotatedElementUtils.findMergedAnnotationAttributes(_				testClass, SqlConfig.class.getName(), false, false)___		_		if (attributes != null) {_			for (String key : attributes.keySet()) {_				Object value = AnnotationUtils.getValue(localSqlConfig, key)__				if (value != null) {_					_					if (!value.equals("") && value != TransactionMode.DEFAULT && value != ErrorMode.DEFAULT) {_						attributes.put(key, value)__					}_				}_			}_		}_		else {_			_			attributes = AnnotationUtils.getAnnotationAttributes(localSqlConfig, false, false)__		}__		this.dataSource = attributes.getString("dataSource")__		this.transactionManager = attributes.getString("transactionManager")__		this.transactionMode = getEnum(attributes, "transactionMode", TransactionMode.DEFAULT, TransactionMode.INFERRED)__		this.encoding = attributes.getString("encoding")__		this.separator = getString(attributes, "separator", ScriptUtils.DEFAULT_STATEMENT_SEPARATOR)__		this.commentPrefix = getString(attributes, "commentPrefix", ScriptUtils.DEFAULT_COMMENT_PREFIX)__		this.blockCommentStartDelimiter = getString(attributes, "blockCommentStartDelimiter",_				ScriptUtils.DEFAULT_BLOCK_COMMENT_START_DELIMITER)__		this.blockCommentEndDelimiter = getString(attributes, "blockCommentEndDelimiter",_				ScriptUtils.DEFAULT_BLOCK_COMMENT_END_DELIMITER)__		this.errorMode = getEnum(attributes, "errorMode", ErrorMode.DEFAULT, ErrorMode.FAIL_ON_ERROR)__	};construct,a,code,merged,sql,config,instance,by,merging,the,configuration,from,the,supplied,local,potentially,method,level,code,sql,config,annotation,with,class,level,configuration,discovered,on,the,supplied,code,test,class,p,local,configuration,overrides,class,level,configuration,p,if,the,test,class,is,not,annotated,with,code,sql,config,no,merging,takes,place,and,the,local,configuration,is,used,as,is;merged,sql,config,sql,config,local,sql,config,class,test,class,assert,not,null,local,sql,config,local,sql,config,must,not,be,null,assert,not,null,test,class,test,class,must,not,be,null,annotation,attributes,attributes,annotated,element,utils,find,merged,annotation,attributes,test,class,sql,config,class,get,name,false,false,if,attributes,null,for,string,key,attributes,key,set,object,value,annotation,utils,get,value,local,sql,config,key,if,value,null,if,value,equals,value,transaction,mode,default,value,error,mode,default,attributes,put,key,value,else,attributes,annotation,utils,get,annotation,attributes,local,sql,config,false,false,this,data,source,attributes,get,string,data,source,this,transaction,manager,attributes,get,string,transaction,manager,this,transaction,mode,get,enum,attributes,transaction,mode,transaction,mode,default,transaction,mode,inferred,this,encoding,attributes,get,string,encoding,this,separator,get,string,attributes,separator,script,utils,this,comment,prefix,get,string,attributes,comment,prefix,script,utils,this,block,comment,start,delimiter,get,string,attributes,block,comment,start,delimiter,script,utils,this,block,comment,end,delimiter,get,string,attributes,block,comment,end,delimiter,script,utils,this,error,mode,get,enum,attributes,error,mode,error,mode,default,error,mode
MergedSqlConfig -> String getSeparator();1405524203;@see SqlConfig#separator();String getSeparator() {_		return this.separator__	};see,sql,config,separator;string,get,separator,return,this,separator
MergedSqlConfig -> String getSeparator();1405526063;@see SqlConfig#separator();String getSeparator() {_		return this.separator__	};see,sql,config,separator;string,get,separator,return,this,separator
MergedSqlConfig -> String getSeparator();1405527179;@see SqlConfig#separator();String getSeparator() {_		return this.separator__	};see,sql,config,separator;string,get,separator,return,this,separator
MergedSqlConfig -> String getSeparator();1405687163;@see SqlConfig#separator();String getSeparator() {_		return this.separator__	};see,sql,config,separator;string,get,separator,return,this,separator
MergedSqlConfig -> String getSeparator();1405695765;@see SqlConfig#separator();String getSeparator() {_		return this.separator__	};see,sql,config,separator;string,get,separator,return,this,separator
MergedSqlConfig -> String getSeparator();1413848647;@see SqlConfig#separator();String getSeparator() {_		return this.separator__	};see,sql,config,separator;string,get,separator,return,this,separator
MergedSqlConfig -> String getSeparator();1431568199;@see SqlConfig#separator();String getSeparator() {_		return this.separator__	};see,sql,config,separator;string,get,separator,return,this,separator
MergedSqlConfig -> String getSeparator();1432856630;@see SqlConfig#separator();String getSeparator() {_		return this.separator__	};see,sql,config,separator;string,get,separator,return,this,separator
MergedSqlConfig -> String getSeparator();1434234880;@see SqlConfig#separator();String getSeparator() {_		return this.separator__	};see,sql,config,separator;string,get,separator,return,this,separator
MergedSqlConfig -> String getSeparator();1458754769;@see SqlConfig#separator();String getSeparator() {_		return this.separator__	};see,sql,config,separator;string,get,separator,return,this,separator
