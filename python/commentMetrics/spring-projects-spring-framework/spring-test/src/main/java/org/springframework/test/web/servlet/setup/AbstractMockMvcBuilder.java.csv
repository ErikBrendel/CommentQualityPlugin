# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T dispatchOptions(boolean dispatchOptions);1387852827;Should the {@link org.springframework.web.servlet.DispatcherServlet} dispatch OPTIONS request to controllers._@param dispatchOptions_@see org.springframework.web.servlet.DispatcherServlet#setDispatchOptionsRequest(boolean);@SuppressWarnings("unchecked")_	public final <T extends B> T dispatchOptions(boolean dispatchOptions) {_		this.dispatchOptions = dispatchOptions__		return (T) this__	};should,the,link,org,springframework,web,servlet,dispatcher,servlet,dispatch,options,request,to,controllers,param,dispatch,options,see,org,springframework,web,servlet,dispatcher,servlet,set,dispatch,options,request,boolean;suppress,warnings,unchecked,public,final,t,extends,b,t,dispatch,options,boolean,dispatch,options,this,dispatch,options,dispatch,options,return,t,this
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T dispatchOptions(boolean dispatchOptions);1405479565;Whether to enable the DispatcherServlet property_{@link org.springframework.web.servlet.DispatcherServlet#setDispatchOptionsRequest_dispatchOptionsRequest} which allows processing of HTTP OPTIONS requests.;@SuppressWarnings("unchecked")_	public final <T extends B> T dispatchOptions(boolean dispatchOptions) {_		this.dispatchOptions = dispatchOptions__		return (T) this__	};whether,to,enable,the,dispatcher,servlet,property,link,org,springframework,web,servlet,dispatcher,servlet,set,dispatch,options,request,dispatch,options,request,which,allows,processing,of,http,options,requests;suppress,warnings,unchecked,public,final,t,extends,b,t,dispatch,options,boolean,dispatch,options,this,dispatch,options,dispatch,options,return,t,this
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T dispatchOptions(boolean dispatchOptions);1405696918;Whether to enable the DispatcherServlet property_{@link org.springframework.web.servlet.DispatcherServlet#setDispatchOptionsRequest_dispatchOptionsRequest} which allows processing of HTTP OPTIONS requests.;@SuppressWarnings("unchecked")_	public final <T extends B> T dispatchOptions(boolean dispatchOptions) {_		this.dispatchOptions = dispatchOptions__		return (T) this__	};whether,to,enable,the,dispatcher,servlet,property,link,org,springframework,web,servlet,dispatcher,servlet,set,dispatch,options,request,dispatch,options,request,which,allows,processing,of,http,options,requests;suppress,warnings,unchecked,public,final,t,extends,b,t,dispatch,options,boolean,dispatch,options,this,dispatch,options,dispatch,options,return,t,this
AbstractMockMvcBuilder -> @Override 	public final MockMvc build();1387852827;Build a {@link org.springframework.test.web.servlet.MockMvc} instance.;@Override_	public final MockMvc build() {__		WebApplicationContext wac = initWebAppContext()___		ServletContext servletContext = wac.getServletContext()__		MockServletConfig mockServletConfig = new MockServletConfig(servletContext)___		Filter[] filterArray = this.filters.toArray(new Filter[this.filters.size()])___		return super.createMockMvc(filterArray, mockServletConfig, wac, this.defaultRequestBuilder,_				this.globalResultMatchers, this.globalResultHandlers, this.dispatchOptions)__	};build,a,link,org,springframework,test,web,servlet,mock,mvc,instance;override,public,final,mock,mvc,build,web,application,context,wac,init,web,app,context,servlet,context,servlet,context,wac,get,servlet,context,mock,servlet,config,mock,servlet,config,new,mock,servlet,config,servlet,context,filter,filter,array,this,filters,to,array,new,filter,this,filters,size,return,super,create,mock,mvc,filter,array,mock,servlet,config,wac,this,default,request,builder,this,global,result,matchers,this,global,result,handlers,this,dispatch,options
AbstractMockMvcBuilder -> @Override 	public final MockMvc build();1405479565;Build a {@link org.springframework.test.web.servlet.MockMvc} instance.;@Override_	public final MockMvc build() {__		WebApplicationContext wac = initWebAppContext()___		ServletContext servletContext = wac.getServletContext()__		MockServletConfig mockServletConfig = new MockServletConfig(servletContext)___		for (MockMvcConfigurer configurer : this.configurers) {_			configurer.beforeMockMvcCreated(this, this.defaultRequestBuilder, wac)__		}__		Filter[] filterArray = this.filters.toArray(new Filter[this.filters.size()])___		return super.createMockMvc(filterArray, mockServletConfig, wac, this.defaultRequestBuilder,_				this.globalResultMatchers, this.globalResultHandlers, this.dispatchOptions)__	};build,a,link,org,springframework,test,web,servlet,mock,mvc,instance;override,public,final,mock,mvc,build,web,application,context,wac,init,web,app,context,servlet,context,servlet,context,wac,get,servlet,context,mock,servlet,config,mock,servlet,config,new,mock,servlet,config,servlet,context,for,mock,mvc,configurer,configurer,this,configurers,configurer,before,mock,mvc,created,this,this,default,request,builder,wac,filter,filter,array,this,filters,to,array,new,filter,this,filters,size,return,super,create,mock,mvc,filter,array,mock,servlet,config,wac,this,default,request,builder,this,global,result,matchers,this,global,result,handlers,this,dispatch,options
AbstractMockMvcBuilder -> @Override 	public final MockMvc build();1405696918;Build a {@link org.springframework.test.web.servlet.MockMvc} instance.;@Override_	public final MockMvc build() {__		WebApplicationContext wac = initWebAppContext()___		ServletContext servletContext = wac.getServletContext()__		MockServletConfig mockServletConfig = new MockServletConfig(servletContext)___		for (MockMvcConfigurer configurer : this.configurers) {_			configurer.beforeMockMvcCreated(this, this.defaultRequestBuilder, wac)__		}__		Filter[] filterArray = this.filters.toArray(new Filter[this.filters.size()])___		return super.createMockMvc(filterArray, mockServletConfig, wac, this.defaultRequestBuilder,_				this.globalResultMatchers, this.globalResultHandlers, this.dispatchOptions)__	};build,a,link,org,springframework,test,web,servlet,mock,mvc,instance;override,public,final,mock,mvc,build,web,application,context,wac,init,web,app,context,servlet,context,servlet,context,wac,get,servlet,context,mock,servlet,config,mock,servlet,config,new,mock,servlet,config,servlet,context,for,mock,mvc,configurer,configurer,this,configurers,configurer,before,mock,mvc,created,this,this,default,request,builder,wac,filter,filter,array,this,filters,to,array,new,filter,this,filters,size,return,super,create,mock,mvc,filter,array,mock,servlet,config,wac,this,default,request,builder,this,global,result,matchers,this,global,result,handlers,this,dispatch,options
AbstractMockMvcBuilder -> @Override 	public final MockMvc build();1406050882;Build a {@link org.springframework.test.web.servlet.MockMvc} instance.;@Override_	public final MockMvc build() {__		WebApplicationContext wac = initWebAppContext()___		ServletContext servletContext = wac.getServletContext()__		MockServletConfig mockServletConfig = new MockServletConfig(servletContext)___		for (MockMvcConfigurer configurer : this.configurers) {_			RequestPostProcessor processor = configurer.beforeMockMvcCreated(this, wac)__			if (processor != null) {_				if (this.defaultRequestBuilder == null) {_					this.defaultRequestBuilder = MockMvcRequestBuilders.get("/")__				}_				if (this.defaultRequestBuilder instanceof ConfigurableSmartRequestBuilder) {_					((ConfigurableSmartRequestBuilder) this.defaultRequestBuilder).with(processor)__				}_			}_		}__		Filter[] filterArray = this.filters.toArray(new Filter[this.filters.size()])___		return super.createMockMvc(filterArray, mockServletConfig, wac, this.defaultRequestBuilder,_				this.globalResultMatchers, this.globalResultHandlers, this.dispatchOptions)__	};build,a,link,org,springframework,test,web,servlet,mock,mvc,instance;override,public,final,mock,mvc,build,web,application,context,wac,init,web,app,context,servlet,context,servlet,context,wac,get,servlet,context,mock,servlet,config,mock,servlet,config,new,mock,servlet,config,servlet,context,for,mock,mvc,configurer,configurer,this,configurers,request,post,processor,processor,configurer,before,mock,mvc,created,this,wac,if,processor,null,if,this,default,request,builder,null,this,default,request,builder,mock,mvc,request,builders,get,if,this,default,request,builder,instanceof,configurable,smart,request,builder,configurable,smart,request,builder,this,default,request,builder,with,processor,filter,filter,array,this,filters,to,array,new,filter,this,filters,size,return,super,create,mock,mvc,filter,array,mock,servlet,config,wac,this,default,request,builder,this,global,result,matchers,this,global,result,handlers,this,dispatch,options
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T defaultRequest(RequestBuilder requestBuilder);1387852827;Define default request properties that should be merged into all_performed requests. In effect this provides a mechanism for defining_common initialization for all requests such as the content type, request_parameters, session attributes, and any other request property.__<p>Properties specified at the time of performing a request override the_default properties defined here.__@param requestBuilder a RequestBuilder_ see static factory methods in_{@link org.springframework.test.web.servlet.request.MockMvcRequestBuilders};@SuppressWarnings("unchecked")_	public final <T extends B> T defaultRequest(RequestBuilder requestBuilder) {_		this.defaultRequestBuilder = requestBuilder__		return (T) this__	};define,default,request,properties,that,should,be,merged,into,all,performed,requests,in,effect,this,provides,a,mechanism,for,defining,common,initialization,for,all,requests,such,as,the,content,type,request,parameters,session,attributes,and,any,other,request,property,p,properties,specified,at,the,time,of,performing,a,request,override,the,default,properties,defined,here,param,request,builder,a,request,builder,see,static,factory,methods,in,link,org,springframework,test,web,servlet,request,mock,mvc,request,builders;suppress,warnings,unchecked,public,final,t,extends,b,t,default,request,request,builder,request,builder,this,default,request,builder,request,builder,return,t,this
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T defaultRequest(RequestBuilder requestBuilder);1405479565;Define default request properties that should be merged into all_performed requests. In effect this provides a mechanism for defining_common initialization for all requests such as the content type, request_parameters, session attributes, and any other request property.__<p>Properties specified at the time of performing a request override the_default properties defined here.__@param requestBuilder a RequestBuilder_ see static factory methods in_{@link org.springframework.test.web.servlet.request.MockMvcRequestBuilders};@SuppressWarnings("unchecked")_	public final <T extends B> T defaultRequest(RequestBuilder requestBuilder) {_		this.defaultRequestBuilder = requestBuilder__		return (T) this__	};define,default,request,properties,that,should,be,merged,into,all,performed,requests,in,effect,this,provides,a,mechanism,for,defining,common,initialization,for,all,requests,such,as,the,content,type,request,parameters,session,attributes,and,any,other,request,property,p,properties,specified,at,the,time,of,performing,a,request,override,the,default,properties,defined,here,param,request,builder,a,request,builder,see,static,factory,methods,in,link,org,springframework,test,web,servlet,request,mock,mvc,request,builders;suppress,warnings,unchecked,public,final,t,extends,b,t,default,request,request,builder,request,builder,this,default,request,builder,request,builder,return,t,this
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T defaultRequest(RequestBuilder requestBuilder);1405696918;Define default request properties that should be merged into all_performed requests. In effect this provides a mechanism for defining_common initialization for all requests such as the content type, request_parameters, session attributes, and any other request property.__<p>Properties specified at the time of performing a request override the_default properties defined here.__@param requestBuilder a RequestBuilder_ see static factory methods in_{@link org.springframework.test.web.servlet.request.MockMvcRequestBuilders};@SuppressWarnings("unchecked")_	public final <T extends B> T defaultRequest(RequestBuilder requestBuilder) {_		this.defaultRequestBuilder = requestBuilder__		return (T) this__	};define,default,request,properties,that,should,be,merged,into,all,performed,requests,in,effect,this,provides,a,mechanism,for,defining,common,initialization,for,all,requests,such,as,the,content,type,request,parameters,session,attributes,and,any,other,request,property,p,properties,specified,at,the,time,of,performing,a,request,override,the,default,properties,defined,here,param,request,builder,a,request,builder,see,static,factory,methods,in,link,org,springframework,test,web,servlet,request,mock,mvc,request,builders;suppress,warnings,unchecked,public,final,t,extends,b,t,default,request,request,builder,request,builder,this,default,request,builder,request,builder,return,t,this
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T add(MockMvcConfigurer configurer);1405479565;Add a {@code MockMvcConfigurer} which encapsulates ways to further configure_this MockMvcBuilder with some specific purpose in mind.;@SuppressWarnings("unchecked")_	public final <T extends B> T add(MockMvcConfigurer configurer) {_		configurer.afterConfigurerAdded(this)__		this.configurers.add(configurer)__		return (T) this__	};add,a,code,mock,mvc,configurer,which,encapsulates,ways,to,further,configure,this,mock,mvc,builder,with,some,specific,purpose,in,mind;suppress,warnings,unchecked,public,final,t,extends,b,t,add,mock,mvc,configurer,configurer,configurer,after,configurer,added,this,this,configurers,add,configurer,return,t,this
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T add(MockMvcConfigurer configurer);1405696918;Add a {@code MockMvcConfigurer} which encapsulates ways to further configure_this MockMvcBuilder with some specific purpose in mind.;@SuppressWarnings("unchecked")_	public final <T extends B> T add(MockMvcConfigurer configurer) {_		configurer.afterConfigurerAdded(this)__		this.configurers.add(configurer)__		return (T) this__	};add,a,code,mock,mvc,configurer,which,encapsulates,ways,to,further,configure,this,mock,mvc,builder,with,some,specific,purpose,in,mind;suppress,warnings,unchecked,public,final,t,extends,b,t,add,mock,mvc,configurer,configurer,configurer,after,configurer,added,this,this,configurers,add,configurer,return,t,this
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T alwaysDo(ResultHandler resultHandler);1387852827;Define a global action that should <em>always</em> be applied to every_response. For example, writing detailed information about the performed_request and resulting response to {@code System.out}.__@param resultHandler a ResultHandler_ see static factory methods in_{@link org.springframework.test.web.servlet.result.MockMvcResultHandlers};@SuppressWarnings("unchecked")_	public final <T extends B> T alwaysDo(ResultHandler resultHandler) {_		this.globalResultHandlers.add(resultHandler)__		return (T) this__	};define,a,global,action,that,should,em,always,em,be,applied,to,every,response,for,example,writing,detailed,information,about,the,performed,request,and,resulting,response,to,code,system,out,param,result,handler,a,result,handler,see,static,factory,methods,in,link,org,springframework,test,web,servlet,result,mock,mvc,result,handlers;suppress,warnings,unchecked,public,final,t,extends,b,t,always,do,result,handler,result,handler,this,global,result,handlers,add,result,handler,return,t,this
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T alwaysDo(ResultHandler resultHandler);1405479565;Define a global action that should <em>always</em> be applied to every_response. For example, writing detailed information about the performed_request and resulting response to {@code System.out}.__@param resultHandler a ResultHandler_ see static factory methods in_{@link org.springframework.test.web.servlet.result.MockMvcResultHandlers};@SuppressWarnings("unchecked")_	public final <T extends B> T alwaysDo(ResultHandler resultHandler) {_		this.globalResultHandlers.add(resultHandler)__		return (T) this__	};define,a,global,action,that,should,em,always,em,be,applied,to,every,response,for,example,writing,detailed,information,about,the,performed,request,and,resulting,response,to,code,system,out,param,result,handler,a,result,handler,see,static,factory,methods,in,link,org,springframework,test,web,servlet,result,mock,mvc,result,handlers;suppress,warnings,unchecked,public,final,t,extends,b,t,always,do,result,handler,result,handler,this,global,result,handlers,add,result,handler,return,t,this
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T alwaysDo(ResultHandler resultHandler);1405696918;Define a global action that should <em>always</em> be applied to every_response. For example, writing detailed information about the performed_request and resulting response to {@code System.out}.__@param resultHandler a ResultHandler_ see static factory methods in_{@link org.springframework.test.web.servlet.result.MockMvcResultHandlers};@SuppressWarnings("unchecked")_	public final <T extends B> T alwaysDo(ResultHandler resultHandler) {_		this.globalResultHandlers.add(resultHandler)__		return (T) this__	};define,a,global,action,that,should,em,always,em,be,applied,to,every,response,for,example,writing,detailed,information,about,the,performed,request,and,resulting,response,to,code,system,out,param,result,handler,a,result,handler,see,static,factory,methods,in,link,org,springframework,test,web,servlet,result,mock,mvc,result,handlers;suppress,warnings,unchecked,public,final,t,extends,b,t,always,do,result,handler,result,handler,this,global,result,handlers,add,result,handler,return,t,this
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T addFilters(Filter... filters);1387852827;Add filters mapped to any request (i.e. "/*"). For example:__<pre class="code">_mockMvcBuilder.addFilters(springSecurityFilterChain)__</pre>__<p>is the equivalent of the following web.xml configuration:__<pre class="code">_&lt_filter-mapping&gt__&lt_filter-name&gt_springSecurityFilterChain&lt_/filter-name&gt__&lt_url-pattern&gt_/*&lt_/url-pattern&gt__&lt_/filter-mapping&gt__</pre>__<p>Filters will be invoked in the order in which they are provided.__@param filters the filters to add;@SuppressWarnings("unchecked")_	public final <T extends B> T addFilters(Filter... filters) {_		Assert.notNull(filters, "filters cannot be null")___		for(Filter f : filters) {_			Assert.notNull(f, "filters cannot contain null values")__			this.filters.add(f)__		}_		return (T) this__	};add,filters,mapped,to,any,request,i,e,for,example,pre,class,code,mock,mvc,builder,add,filters,spring,security,filter,chain,pre,p,is,the,equivalent,of,the,following,web,xml,configuration,pre,class,code,lt,filter,mapping,gt,lt,filter,name,gt,spring,security,filter,chain,lt,filter,name,gt,lt,url,pattern,gt,lt,url,pattern,gt,lt,filter,mapping,gt,pre,p,filters,will,be,invoked,in,the,order,in,which,they,are,provided,param,filters,the,filters,to,add;suppress,warnings,unchecked,public,final,t,extends,b,t,add,filters,filter,filters,assert,not,null,filters,filters,cannot,be,null,for,filter,f,filters,assert,not,null,f,filters,cannot,contain,null,values,this,filters,add,f,return,t,this
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T addFilters(Filter... filters);1405479565;Add filters mapped to any request (i.e. "/*"). For example:__<pre class="code">_mockMvcBuilder.addFilters(springSecurityFilterChain)__</pre>__<p>is the equivalent of the following web.xml configuration:__<pre class="code">_&lt_filter-mapping&gt__&lt_filter-name&gt_springSecurityFilterChain&lt_/filter-name&gt__&lt_url-pattern&gt_/*&lt_/url-pattern&gt__&lt_/filter-mapping&gt__</pre>__<p>Filters will be invoked in the order in which they are provided.__@param filters the filters to add;@SuppressWarnings("unchecked")_	public final <T extends B> T addFilters(Filter... filters) {_		Assert.notNull(filters, "filters cannot be null")___		for(Filter f : filters) {_			Assert.notNull(f, "filters cannot contain null values")__			this.filters.add(f)__		}_		return (T) this__	};add,filters,mapped,to,any,request,i,e,for,example,pre,class,code,mock,mvc,builder,add,filters,spring,security,filter,chain,pre,p,is,the,equivalent,of,the,following,web,xml,configuration,pre,class,code,lt,filter,mapping,gt,lt,filter,name,gt,spring,security,filter,chain,lt,filter,name,gt,lt,url,pattern,gt,lt,url,pattern,gt,lt,filter,mapping,gt,pre,p,filters,will,be,invoked,in,the,order,in,which,they,are,provided,param,filters,the,filters,to,add;suppress,warnings,unchecked,public,final,t,extends,b,t,add,filters,filter,filters,assert,not,null,filters,filters,cannot,be,null,for,filter,f,filters,assert,not,null,f,filters,cannot,contain,null,values,this,filters,add,f,return,t,this
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T addFilters(Filter... filters);1405696918;Add filters mapped to any request (i.e. "/*"). For example:__<pre class="code">_mockMvcBuilder.addFilters(springSecurityFilterChain)__</pre>__<p>is the equivalent of the following web.xml configuration:__<pre class="code">_&lt_filter-mapping&gt__&lt_filter-name&gt_springSecurityFilterChain&lt_/filter-name&gt__&lt_url-pattern&gt_/*&lt_/url-pattern&gt__&lt_/filter-mapping&gt__</pre>__<p>Filters will be invoked in the order in which they are provided.__@param filters the filters to add;@SuppressWarnings("unchecked")_	public final <T extends B> T addFilters(Filter... filters) {_		Assert.notNull(filters, "filters cannot be null")___		for (Filter f : filters) {_			Assert.notNull(f, "filters cannot contain null values")__			this.filters.add(f)__		}_		return (T) this__	};add,filters,mapped,to,any,request,i,e,for,example,pre,class,code,mock,mvc,builder,add,filters,spring,security,filter,chain,pre,p,is,the,equivalent,of,the,following,web,xml,configuration,pre,class,code,lt,filter,mapping,gt,lt,filter,name,gt,spring,security,filter,chain,lt,filter,name,gt,lt,url,pattern,gt,lt,url,pattern,gt,lt,filter,mapping,gt,pre,p,filters,will,be,invoked,in,the,order,in,which,they,are,provided,param,filters,the,filters,to,add;suppress,warnings,unchecked,public,final,t,extends,b,t,add,filters,filter,filters,assert,not,null,filters,filters,cannot,be,null,for,filter,f,filters,assert,not,null,f,filters,cannot,contain,null,values,this,filters,add,f,return,t,this
AbstractMockMvcBuilder -> @Override 	@SuppressWarnings("rawtypes") 	public final MockMvc build();1406203934;Build a {@link org.springframework.test.web.servlet.MockMvc} instance.;@Override_	@SuppressWarnings("rawtypes")_	public final MockMvc build() {__		WebApplicationContext wac = initWebAppContext()___		ServletContext servletContext = wac.getServletContext()__		MockServletConfig mockServletConfig = new MockServletConfig(servletContext)___		for (MockMvcConfigurer configurer : this.configurers) {_			RequestPostProcessor processor = configurer.beforeMockMvcCreated(this, wac)__			if (processor != null) {_				if (this.defaultRequestBuilder == null) {_					this.defaultRequestBuilder = MockMvcRequestBuilders.get("/")__				}_				if (this.defaultRequestBuilder instanceof ConfigurableSmartRequestBuilder) {_					((ConfigurableSmartRequestBuilder) this.defaultRequestBuilder).with(processor)__				}_			}_		}__		Filter[] filterArray = this.filters.toArray(new Filter[this.filters.size()])___		return super.createMockMvc(filterArray, mockServletConfig, wac, this.defaultRequestBuilder,_				this.globalResultMatchers, this.globalResultHandlers, this.dispatchOptions)__	};build,a,link,org,springframework,test,web,servlet,mock,mvc,instance;override,suppress,warnings,rawtypes,public,final,mock,mvc,build,web,application,context,wac,init,web,app,context,servlet,context,servlet,context,wac,get,servlet,context,mock,servlet,config,mock,servlet,config,new,mock,servlet,config,servlet,context,for,mock,mvc,configurer,configurer,this,configurers,request,post,processor,processor,configurer,before,mock,mvc,created,this,wac,if,processor,null,if,this,default,request,builder,null,this,default,request,builder,mock,mvc,request,builders,get,if,this,default,request,builder,instanceof,configurable,smart,request,builder,configurable,smart,request,builder,this,default,request,builder,with,processor,filter,filter,array,this,filters,to,array,new,filter,this,filters,size,return,super,create,mock,mvc,filter,array,mock,servlet,config,wac,this,default,request,builder,this,global,result,matchers,this,global,result,handlers,this,dispatch,options
AbstractMockMvcBuilder -> @Override 	@SuppressWarnings("rawtypes") 	public final MockMvc build();1413848647;Build a {@link org.springframework.test.web.servlet.MockMvc} instance.;@Override_	@SuppressWarnings("rawtypes")_	public final MockMvc build() {__		WebApplicationContext wac = initWebAppContext()___		ServletContext servletContext = wac.getServletContext()__		MockServletConfig mockServletConfig = new MockServletConfig(servletContext)___		for (MockMvcConfigurer configurer : this.configurers) {_			RequestPostProcessor processor = configurer.beforeMockMvcCreated(this, wac)__			if (processor != null) {_				if (this.defaultRequestBuilder == null) {_					this.defaultRequestBuilder = MockMvcRequestBuilders.get("/")__				}_				if (this.defaultRequestBuilder instanceof ConfigurableSmartRequestBuilder) {_					((ConfigurableSmartRequestBuilder) this.defaultRequestBuilder).with(processor)__				}_			}_		}__		Filter[] filterArray = this.filters.toArray(new Filter[this.filters.size()])___		return super.createMockMvc(filterArray, mockServletConfig, wac, this.defaultRequestBuilder,_				this.globalResultMatchers, this.globalResultHandlers, this.dispatchOptions)__	};build,a,link,org,springframework,test,web,servlet,mock,mvc,instance;override,suppress,warnings,rawtypes,public,final,mock,mvc,build,web,application,context,wac,init,web,app,context,servlet,context,servlet,context,wac,get,servlet,context,mock,servlet,config,mock,servlet,config,new,mock,servlet,config,servlet,context,for,mock,mvc,configurer,configurer,this,configurers,request,post,processor,processor,configurer,before,mock,mvc,created,this,wac,if,processor,null,if,this,default,request,builder,null,this,default,request,builder,mock,mvc,request,builders,get,if,this,default,request,builder,instanceof,configurable,smart,request,builder,configurable,smart,request,builder,this,default,request,builder,with,processor,filter,filter,array,this,filters,to,array,new,filter,this,filters,size,return,super,create,mock,mvc,filter,array,mock,servlet,config,wac,this,default,request,builder,this,global,result,matchers,this,global,result,handlers,this,dispatch,options
AbstractMockMvcBuilder -> @Override 	@SuppressWarnings("rawtypes") 	public final MockMvc build();1453729744;Build a {@link org.springframework.test.web.servlet.MockMvc} instance.;@Override_	@SuppressWarnings("rawtypes")_	public final MockMvc build() {__		WebApplicationContext wac = initWebAppContext()___		ServletContext servletContext = wac.getServletContext()__		MockServletConfig mockServletConfig = new MockServletConfig(servletContext)___		for (MockMvcConfigurer configurer : this.configurers) {_			RequestPostProcessor processor = configurer.beforeMockMvcCreated(this, wac)__			if (processor != null) {_				if (this.defaultRequestBuilder == null) {_					this.defaultRequestBuilder = MockMvcRequestBuilders.get("/")__				}_				if (this.defaultRequestBuilder instanceof ConfigurableSmartRequestBuilder) {_					((ConfigurableSmartRequestBuilder) this.defaultRequestBuilder).with(processor)__				}_			}_		}__		Filter[] filterArray = this.filters.toArray(new Filter[this.filters.size()])___		return super.createMockMvc(filterArray, mockServletConfig, wac, this.defaultRequestBuilder,_				this.globalResultMatchers, this.globalResultHandlers, this.dispatchOptions)__	};build,a,link,org,springframework,test,web,servlet,mock,mvc,instance;override,suppress,warnings,rawtypes,public,final,mock,mvc,build,web,application,context,wac,init,web,app,context,servlet,context,servlet,context,wac,get,servlet,context,mock,servlet,config,mock,servlet,config,new,mock,servlet,config,servlet,context,for,mock,mvc,configurer,configurer,this,configurers,request,post,processor,processor,configurer,before,mock,mvc,created,this,wac,if,processor,null,if,this,default,request,builder,null,this,default,request,builder,mock,mvc,request,builders,get,if,this,default,request,builder,instanceof,configurable,smart,request,builder,configurable,smart,request,builder,this,default,request,builder,with,processor,filter,filter,array,this,filters,to,array,new,filter,this,filters,size,return,super,create,mock,mvc,filter,array,mock,servlet,config,wac,this,default,request,builder,this,global,result,matchers,this,global,result,handlers,this,dispatch,options
AbstractMockMvcBuilder -> @Override 	@SuppressWarnings("rawtypes") 	public final MockMvc build();1467730834;Build a {@link org.springframework.test.web.servlet.MockMvc} instance.;@Override_	@SuppressWarnings("rawtypes")_	public final MockMvc build() {__		WebApplicationContext wac = initWebAppContext()___		ServletContext servletContext = wac.getServletContext()__		MockServletConfig mockServletConfig = new MockServletConfig(servletContext)___		for (MockMvcConfigurer configurer : this.configurers) {_			RequestPostProcessor processor = configurer.beforeMockMvcCreated(this, wac)__			if (processor != null) {_				if (this.defaultRequestBuilder == null) {_					this.defaultRequestBuilder = MockMvcRequestBuilders.get("/")__				}_				if (this.defaultRequestBuilder instanceof ConfigurableSmartRequestBuilder) {_					((ConfigurableSmartRequestBuilder) this.defaultRequestBuilder).with(processor)__				}_			}_		}__		Filter[] filterArray = this.filters.toArray(new Filter[this.filters.size()])___		return super.createMockMvc(filterArray, mockServletConfig, wac, this.defaultRequestBuilder,_				this.globalResultMatchers, this.globalResultHandlers, this.dispatchOptions)__	};build,a,link,org,springframework,test,web,servlet,mock,mvc,instance;override,suppress,warnings,rawtypes,public,final,mock,mvc,build,web,application,context,wac,init,web,app,context,servlet,context,servlet,context,wac,get,servlet,context,mock,servlet,config,mock,servlet,config,new,mock,servlet,config,servlet,context,for,mock,mvc,configurer,configurer,this,configurers,request,post,processor,processor,configurer,before,mock,mvc,created,this,wac,if,processor,null,if,this,default,request,builder,null,this,default,request,builder,mock,mvc,request,builders,get,if,this,default,request,builder,instanceof,configurable,smart,request,builder,configurable,smart,request,builder,this,default,request,builder,with,processor,filter,filter,array,this,filters,to,array,new,filter,this,filters,size,return,super,create,mock,mvc,filter,array,mock,servlet,config,wac,this,default,request,builder,this,global,result,matchers,this,global,result,handlers,this,dispatch,options
AbstractMockMvcBuilder -> @Override 	@SuppressWarnings("rawtypes") 	public final MockMvc build();1477731509;Build a {@link org.springframework.test.web.servlet.MockMvc} instance.;@Override_	@SuppressWarnings("rawtypes")_	public final MockMvc build() {__		WebApplicationContext wac = initWebAppContext()___		ServletContext servletContext = wac.getServletContext()__		MockServletConfig mockServletConfig = new MockServletConfig(servletContext)___		for (MockMvcConfigurer configurer : this.configurers) {_			RequestPostProcessor processor = configurer.beforeMockMvcCreated(this, wac)__			if (processor != null) {_				if (this.defaultRequestBuilder == null) {_					this.defaultRequestBuilder = MockMvcRequestBuilders.get("/")__				}_				if (this.defaultRequestBuilder instanceof ConfigurableSmartRequestBuilder) {_					((ConfigurableSmartRequestBuilder) this.defaultRequestBuilder).with(processor)__				}_			}_		}__		Filter[] filterArray = this.filters.toArray(new Filter[this.filters.size()])___		return super.createMockMvc(filterArray, mockServletConfig, wac, this.defaultRequestBuilder,_				this.globalResultMatchers, this.globalResultHandlers, this.dispatcherServletCustomizers)__	};build,a,link,org,springframework,test,web,servlet,mock,mvc,instance;override,suppress,warnings,rawtypes,public,final,mock,mvc,build,web,application,context,wac,init,web,app,context,servlet,context,servlet,context,wac,get,servlet,context,mock,servlet,config,mock,servlet,config,new,mock,servlet,config,servlet,context,for,mock,mvc,configurer,configurer,this,configurers,request,post,processor,processor,configurer,before,mock,mvc,created,this,wac,if,processor,null,if,this,default,request,builder,null,this,default,request,builder,mock,mvc,request,builders,get,if,this,default,request,builder,instanceof,configurable,smart,request,builder,configurable,smart,request,builder,this,default,request,builder,with,processor,filter,filter,array,this,filters,to,array,new,filter,this,filters,size,return,super,create,mock,mvc,filter,array,mock,servlet,config,wac,this,default,request,builder,this,global,result,matchers,this,global,result,handlers,this,dispatcher,servlet,customizers
AbstractMockMvcBuilder -> @Override 	@SuppressWarnings("rawtypes") 	public final MockMvc build();1477732526;Build a {@link org.springframework.test.web.servlet.MockMvc} instance.;@Override_	@SuppressWarnings("rawtypes")_	public final MockMvc build() {__		WebApplicationContext wac = initWebAppContext()___		ServletContext servletContext = wac.getServletContext()__		MockServletConfig mockServletConfig = new MockServletConfig(servletContext)___		for (MockMvcConfigurer configurer : this.configurers) {_			RequestPostProcessor processor = configurer.beforeMockMvcCreated(this, wac)__			if (processor != null) {_				if (this.defaultRequestBuilder == null) {_					this.defaultRequestBuilder = MockMvcRequestBuilders.get("/")__				}_				if (this.defaultRequestBuilder instanceof ConfigurableSmartRequestBuilder) {_					((ConfigurableSmartRequestBuilder) this.defaultRequestBuilder).with(processor)__				}_			}_		}__		Filter[] filterArray = this.filters.toArray(new Filter[this.filters.size()])___		return super.createMockMvc(filterArray, mockServletConfig, wac, this.defaultRequestBuilder,_				this.globalResultMatchers, this.globalResultHandlers, this.dispatcherServletCustomizers)__	};build,a,link,org,springframework,test,web,servlet,mock,mvc,instance;override,suppress,warnings,rawtypes,public,final,mock,mvc,build,web,application,context,wac,init,web,app,context,servlet,context,servlet,context,wac,get,servlet,context,mock,servlet,config,mock,servlet,config,new,mock,servlet,config,servlet,context,for,mock,mvc,configurer,configurer,this,configurers,request,post,processor,processor,configurer,before,mock,mvc,created,this,wac,if,processor,null,if,this,default,request,builder,null,this,default,request,builder,mock,mvc,request,builders,get,if,this,default,request,builder,instanceof,configurable,smart,request,builder,configurable,smart,request,builder,this,default,request,builder,with,processor,filter,filter,array,this,filters,to,array,new,filter,this,filters,size,return,super,create,mock,mvc,filter,array,mock,servlet,config,wac,this,default,request,builder,this,global,result,matchers,this,global,result,handlers,this,dispatcher,servlet,customizers
AbstractMockMvcBuilder -> @Override 	@SuppressWarnings("rawtypes") 	public final MockMvc build();1485365591;Build a {@link org.springframework.test.web.servlet.MockMvc} instance.;@Override_	@SuppressWarnings("rawtypes")_	public final MockMvc build() {__		WebApplicationContext wac = initWebAppContext()___		ServletContext servletContext = wac.getServletContext()__		MockServletConfig mockServletConfig = new MockServletConfig(servletContext)___		for (MockMvcConfigurer configurer : this.configurers) {_			RequestPostProcessor processor = configurer.beforeMockMvcCreated(this, wac)__			if (processor != null) {_				if (this.defaultRequestBuilder == null) {_					this.defaultRequestBuilder = MockMvcRequestBuilders.get("/")__				}_				if (this.defaultRequestBuilder instanceof ConfigurableSmartRequestBuilder) {_					((ConfigurableSmartRequestBuilder) this.defaultRequestBuilder).with(processor)__				}_			}_		}__		Filter[] filterArray = this.filters.toArray(new Filter[this.filters.size()])___		return super.createMockMvc(filterArray, mockServletConfig, wac, this.defaultRequestBuilder,_				this.globalResultMatchers, this.globalResultHandlers, this.dispatcherServletCustomizers)__	};build,a,link,org,springframework,test,web,servlet,mock,mvc,instance;override,suppress,warnings,rawtypes,public,final,mock,mvc,build,web,application,context,wac,init,web,app,context,servlet,context,servlet,context,wac,get,servlet,context,mock,servlet,config,mock,servlet,config,new,mock,servlet,config,servlet,context,for,mock,mvc,configurer,configurer,this,configurers,request,post,processor,processor,configurer,before,mock,mvc,created,this,wac,if,processor,null,if,this,default,request,builder,null,this,default,request,builder,mock,mvc,request,builders,get,if,this,default,request,builder,instanceof,configurable,smart,request,builder,configurable,smart,request,builder,this,default,request,builder,with,processor,filter,filter,array,this,filters,to,array,new,filter,this,filters,size,return,super,create,mock,mvc,filter,array,mock,servlet,config,wac,this,default,request,builder,this,global,result,matchers,this,global,result,handlers,this,dispatcher,servlet,customizers
AbstractMockMvcBuilder -> @Override 	@SuppressWarnings("rawtypes") 	public final MockMvc build();1496955179;Build a {@link org.springframework.test.web.servlet.MockMvc} instance.;@Override_	@SuppressWarnings("rawtypes")_	public final MockMvc build() {_		WebApplicationContext wac = initWebAppContext()__		ServletContext servletContext = wac.getServletContext()__		MockServletConfig mockServletConfig = new MockServletConfig(servletContext)___		for (MockMvcConfigurer configurer : this.configurers) {_			RequestPostProcessor processor = configurer.beforeMockMvcCreated(this, wac)__			if (processor != null) {_				if (this.defaultRequestBuilder == null) {_					this.defaultRequestBuilder = MockMvcRequestBuilders.get("/")__				}_				if (this.defaultRequestBuilder instanceof ConfigurableSmartRequestBuilder) {_					((ConfigurableSmartRequestBuilder) this.defaultRequestBuilder).with(processor)__				}_			}_		}__		Filter[] filterArray = this.filters.toArray(new Filter[this.filters.size()])___		return super.createMockMvc(filterArray, mockServletConfig, wac, this.defaultRequestBuilder,_				this.globalResultMatchers, this.globalResultHandlers, this.dispatcherServletCustomizers)__	};build,a,link,org,springframework,test,web,servlet,mock,mvc,instance;override,suppress,warnings,rawtypes,public,final,mock,mvc,build,web,application,context,wac,init,web,app,context,servlet,context,servlet,context,wac,get,servlet,context,mock,servlet,config,mock,servlet,config,new,mock,servlet,config,servlet,context,for,mock,mvc,configurer,configurer,this,configurers,request,post,processor,processor,configurer,before,mock,mvc,created,this,wac,if,processor,null,if,this,default,request,builder,null,this,default,request,builder,mock,mvc,request,builders,get,if,this,default,request,builder,instanceof,configurable,smart,request,builder,configurable,smart,request,builder,this,default,request,builder,with,processor,filter,filter,array,this,filters,to,array,new,filter,this,filters,size,return,super,create,mock,mvc,filter,array,mock,servlet,config,wac,this,default,request,builder,this,global,result,matchers,this,global,result,handlers,this,dispatcher,servlet,customizers
AbstractMockMvcBuilder -> @Override 	@SuppressWarnings("rawtypes") 	public final MockMvc build();1498780456;Build a {@link org.springframework.test.web.servlet.MockMvc} instance.;@Override_	@SuppressWarnings("rawtypes")_	public final MockMvc build() {_		WebApplicationContext wac = initWebAppContext()__		ServletContext servletContext = wac.getServletContext()__		MockServletConfig mockServletConfig = new MockServletConfig(servletContext)___		for (MockMvcConfigurer configurer : this.configurers) {_			RequestPostProcessor processor = configurer.beforeMockMvcCreated(this, wac)__			if (processor != null) {_				if (this.defaultRequestBuilder == null) {_					this.defaultRequestBuilder = MockMvcRequestBuilders.get("/")__				}_				if (this.defaultRequestBuilder instanceof ConfigurableSmartRequestBuilder) {_					((ConfigurableSmartRequestBuilder) this.defaultRequestBuilder).with(processor)__				}_			}_		}__		Filter[] filterArray = this.filters.toArray(new Filter[this.filters.size()])___		return super.createMockMvc(filterArray, mockServletConfig, wac, this.defaultRequestBuilder,_				this.globalResultMatchers, this.globalResultHandlers, this.dispatcherServletCustomizers)__	};build,a,link,org,springframework,test,web,servlet,mock,mvc,instance;override,suppress,warnings,rawtypes,public,final,mock,mvc,build,web,application,context,wac,init,web,app,context,servlet,context,servlet,context,wac,get,servlet,context,mock,servlet,config,mock,servlet,config,new,mock,servlet,config,servlet,context,for,mock,mvc,configurer,configurer,this,configurers,request,post,processor,processor,configurer,before,mock,mvc,created,this,wac,if,processor,null,if,this,default,request,builder,null,this,default,request,builder,mock,mvc,request,builders,get,if,this,default,request,builder,instanceof,configurable,smart,request,builder,configurable,smart,request,builder,this,default,request,builder,with,processor,filter,filter,array,this,filters,to,array,new,filter,this,filters,size,return,super,create,mock,mvc,filter,array,mock,servlet,config,wac,this,default,request,builder,this,global,result,matchers,this,global,result,handlers,this,dispatcher,servlet,customizers
AbstractMockMvcBuilder -> @Override 	@SuppressWarnings("rawtypes") 	public final MockMvc build();1519295386;Build a {@link org.springframework.test.web.servlet.MockMvc} instance.;@Override_	@SuppressWarnings("rawtypes")_	public final MockMvc build() {_		WebApplicationContext wac = initWebAppContext()__		ServletContext servletContext = wac.getServletContext()__		MockServletConfig mockServletConfig = new MockServletConfig(servletContext)___		for (MockMvcConfigurer configurer : this.configurers) {_			RequestPostProcessor processor = configurer.beforeMockMvcCreated(this, wac)__			if (processor != null) {_				if (this.defaultRequestBuilder == null) {_					this.defaultRequestBuilder = MockMvcRequestBuilders.get("/")__				}_				if (this.defaultRequestBuilder instanceof ConfigurableSmartRequestBuilder) {_					((ConfigurableSmartRequestBuilder) this.defaultRequestBuilder).with(processor)__				}_			}_		}__		Filter[] filterArray = this.filters.toArray(new Filter[0])___		return super.createMockMvc(filterArray, mockServletConfig, wac, this.defaultRequestBuilder,_				this.globalResultMatchers, this.globalResultHandlers, this.dispatcherServletCustomizers)__	};build,a,link,org,springframework,test,web,servlet,mock,mvc,instance;override,suppress,warnings,rawtypes,public,final,mock,mvc,build,web,application,context,wac,init,web,app,context,servlet,context,servlet,context,wac,get,servlet,context,mock,servlet,config,mock,servlet,config,new,mock,servlet,config,servlet,context,for,mock,mvc,configurer,configurer,this,configurers,request,post,processor,processor,configurer,before,mock,mvc,created,this,wac,if,processor,null,if,this,default,request,builder,null,this,default,request,builder,mock,mvc,request,builders,get,if,this,default,request,builder,instanceof,configurable,smart,request,builder,configurable,smart,request,builder,this,default,request,builder,with,processor,filter,filter,array,this,filters,to,array,new,filter,0,return,super,create,mock,mvc,filter,array,mock,servlet,config,wac,this,default,request,builder,this,global,result,matchers,this,global,result,handlers,this,dispatcher,servlet,customizers
AbstractMockMvcBuilder -> @Override 	@SuppressWarnings("rawtypes") 	public final MockMvc build();1530174524;Build a {@link org.springframework.test.web.servlet.MockMvc} instance.;@Override_	@SuppressWarnings("rawtypes")_	public final MockMvc build() {_		WebApplicationContext wac = initWebAppContext()__		ServletContext servletContext = wac.getServletContext()__		MockServletConfig mockServletConfig = new MockServletConfig(servletContext)___		for (MockMvcConfigurer configurer : this.configurers) {_			RequestPostProcessor processor = configurer.beforeMockMvcCreated(this, wac)__			if (processor != null) {_				if (this.defaultRequestBuilder == null) {_					this.defaultRequestBuilder = MockMvcRequestBuilders.get("/")__				}_				if (this.defaultRequestBuilder instanceof ConfigurableSmartRequestBuilder) {_					((ConfigurableSmartRequestBuilder) this.defaultRequestBuilder).with(processor)__				}_			}_		}__		Filter[] filterArray = this.filters.toArray(new Filter[0])___		return super.createMockMvc(filterArray, mockServletConfig, wac, this.defaultRequestBuilder,_				this.globalResultMatchers, this.globalResultHandlers, this.dispatcherServletCustomizers)__	};build,a,link,org,springframework,test,web,servlet,mock,mvc,instance;override,suppress,warnings,rawtypes,public,final,mock,mvc,build,web,application,context,wac,init,web,app,context,servlet,context,servlet,context,wac,get,servlet,context,mock,servlet,config,mock,servlet,config,new,mock,servlet,config,servlet,context,for,mock,mvc,configurer,configurer,this,configurers,request,post,processor,processor,configurer,before,mock,mvc,created,this,wac,if,processor,null,if,this,default,request,builder,null,this,default,request,builder,mock,mvc,request,builders,get,if,this,default,request,builder,instanceof,configurable,smart,request,builder,configurable,smart,request,builder,this,default,request,builder,with,processor,filter,filter,array,this,filters,to,array,new,filter,0,return,super,create,mock,mvc,filter,array,mock,servlet,config,wac,this,default,request,builder,this,global,result,matchers,this,global,result,handlers,this,dispatcher,servlet,customizers
AbstractMockMvcBuilder -> @Override 	@SuppressWarnings("rawtypes") 	public final MockMvc build();1530174524;Build a {@link org.springframework.test.web.servlet.MockMvc} instance.;@Override_	@SuppressWarnings("rawtypes")_	public final MockMvc build() {_		WebApplicationContext wac = initWebAppContext()__		ServletContext servletContext = wac.getServletContext()__		MockServletConfig mockServletConfig = new MockServletConfig(servletContext)___		for (MockMvcConfigurer configurer : this.configurers) {_			RequestPostProcessor processor = configurer.beforeMockMvcCreated(this, wac)__			if (processor != null) {_				if (this.defaultRequestBuilder == null) {_					this.defaultRequestBuilder = MockMvcRequestBuilders.get("/")__				}_				if (this.defaultRequestBuilder instanceof ConfigurableSmartRequestBuilder) {_					((ConfigurableSmartRequestBuilder) this.defaultRequestBuilder).with(processor)__				}_			}_		}__		Filter[] filterArray = this.filters.toArray(new Filter[0])___		return super.createMockMvc(filterArray, mockServletConfig, wac, this.defaultRequestBuilder,_				this.globalResultMatchers, this.globalResultHandlers, this.dispatcherServletCustomizers)__	};build,a,link,org,springframework,test,web,servlet,mock,mvc,instance;override,suppress,warnings,rawtypes,public,final,mock,mvc,build,web,application,context,wac,init,web,app,context,servlet,context,servlet,context,wac,get,servlet,context,mock,servlet,config,mock,servlet,config,new,mock,servlet,config,servlet,context,for,mock,mvc,configurer,configurer,this,configurers,request,post,processor,processor,configurer,before,mock,mvc,created,this,wac,if,processor,null,if,this,default,request,builder,null,this,default,request,builder,mock,mvc,request,builders,get,if,this,default,request,builder,instanceof,configurable,smart,request,builder,configurable,smart,request,builder,this,default,request,builder,with,processor,filter,filter,array,this,filters,to,array,new,filter,0,return,super,create,mock,mvc,filter,array,mock,servlet,config,wac,this,default,request,builder,this,global,result,matchers,this,global,result,handlers,this,dispatcher,servlet,customizers
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T addFilter(Filter filter, String... urlPatterns);1387852827;Add a filter mapped to a specific set of patterns. For example:__<pre class="code">_mockMvcBuilder.addFilters(myResourceFilter, "/resources/*")__</pre>__<p>is the equivalent of:__<pre class="code">_&lt_filter-mapping&gt__&lt_filter-name&gt_myResourceFilter&lt_/filter-name&gt__&lt_url-pattern&gt_/resources/*&lt_/url-pattern&gt__&lt_/filter-mapping&gt__</pre>__<p>Filters will be invoked in the order in which they are provided.__@param filter the filter to add_@param urlPatterns URL patterns to map to_ if empty, "/*" is used by default;@SuppressWarnings("unchecked")_	public final <T extends B> T addFilter(Filter filter, String... urlPatterns) {__		Assert.notNull(filter, "filter cannot be null")__		Assert.notNull(urlPatterns, "urlPatterns cannot be null")___		if(urlPatterns.length > 0) {_			filter = new PatternMappingFilterProxy(filter, urlPatterns)__		}__		this.filters.add(filter)__		return (T) this__	};add,a,filter,mapped,to,a,specific,set,of,patterns,for,example,pre,class,code,mock,mvc,builder,add,filters,my,resource,filter,resources,pre,p,is,the,equivalent,of,pre,class,code,lt,filter,mapping,gt,lt,filter,name,gt,my,resource,filter,lt,filter,name,gt,lt,url,pattern,gt,resources,lt,url,pattern,gt,lt,filter,mapping,gt,pre,p,filters,will,be,invoked,in,the,order,in,which,they,are,provided,param,filter,the,filter,to,add,param,url,patterns,url,patterns,to,map,to,if,empty,is,used,by,default;suppress,warnings,unchecked,public,final,t,extends,b,t,add,filter,filter,filter,string,url,patterns,assert,not,null,filter,filter,cannot,be,null,assert,not,null,url,patterns,url,patterns,cannot,be,null,if,url,patterns,length,0,filter,new,pattern,mapping,filter,proxy,filter,url,patterns,this,filters,add,filter,return,t,this
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T addFilter(Filter filter, String... urlPatterns);1405479565;Add a filter mapped to a specific set of patterns. For example:__<pre class="code">_mockMvcBuilder.addFilters(myResourceFilter, "/resources/*")__</pre>__<p>is the equivalent of:__<pre class="code">_&lt_filter-mapping&gt__&lt_filter-name&gt_myResourceFilter&lt_/filter-name&gt__&lt_url-pattern&gt_/resources/*&lt_/url-pattern&gt__&lt_/filter-mapping&gt__</pre>__<p>Filters will be invoked in the order in which they are provided.__@param filter the filter to add_@param urlPatterns URL patterns to map to_ if empty, "/*" is used by default;@SuppressWarnings("unchecked")_	public final <T extends B> T addFilter(Filter filter, String... urlPatterns) {__		Assert.notNull(filter, "filter cannot be null")__		Assert.notNull(urlPatterns, "urlPatterns cannot be null")___		if(urlPatterns.length > 0) {_			filter = new PatternMappingFilterProxy(filter, urlPatterns)__		}__		this.filters.add(filter)__		return (T) this__	};add,a,filter,mapped,to,a,specific,set,of,patterns,for,example,pre,class,code,mock,mvc,builder,add,filters,my,resource,filter,resources,pre,p,is,the,equivalent,of,pre,class,code,lt,filter,mapping,gt,lt,filter,name,gt,my,resource,filter,lt,filter,name,gt,lt,url,pattern,gt,resources,lt,url,pattern,gt,lt,filter,mapping,gt,pre,p,filters,will,be,invoked,in,the,order,in,which,they,are,provided,param,filter,the,filter,to,add,param,url,patterns,url,patterns,to,map,to,if,empty,is,used,by,default;suppress,warnings,unchecked,public,final,t,extends,b,t,add,filter,filter,filter,string,url,patterns,assert,not,null,filter,filter,cannot,be,null,assert,not,null,url,patterns,url,patterns,cannot,be,null,if,url,patterns,length,0,filter,new,pattern,mapping,filter,proxy,filter,url,patterns,this,filters,add,filter,return,t,this
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T addFilter(Filter filter, String... urlPatterns);1405696918;Add a filter mapped to a specific set of patterns. For example:__<pre class="code">_mockMvcBuilder.addFilters(myResourceFilter, "/resources/*")__</pre>__<p>is the equivalent of:__<pre class="code">_&lt_filter-mapping&gt__&lt_filter-name&gt_myResourceFilter&lt_/filter-name&gt__&lt_url-pattern&gt_/resources/*&lt_/url-pattern&gt__&lt_/filter-mapping&gt__</pre>__<p>Filters will be invoked in the order in which they are provided.__@param filter the filter to add_@param urlPatterns URL patterns to map to_ if empty, "/*" is used by default;@SuppressWarnings("unchecked")_	public final <T extends B> T addFilter(Filter filter, String... urlPatterns) {__		Assert.notNull(filter, "filter cannot be null")__		Assert.notNull(urlPatterns, "urlPatterns cannot be null")___		if (urlPatterns.length > 0) {_			filter = new PatternMappingFilterProxy(filter, urlPatterns)__		}__		this.filters.add(filter)__		return (T) this__	};add,a,filter,mapped,to,a,specific,set,of,patterns,for,example,pre,class,code,mock,mvc,builder,add,filters,my,resource,filter,resources,pre,p,is,the,equivalent,of,pre,class,code,lt,filter,mapping,gt,lt,filter,name,gt,my,resource,filter,lt,filter,name,gt,lt,url,pattern,gt,resources,lt,url,pattern,gt,lt,filter,mapping,gt,pre,p,filters,will,be,invoked,in,the,order,in,which,they,are,provided,param,filter,the,filter,to,add,param,url,patterns,url,patterns,to,map,to,if,empty,is,used,by,default;suppress,warnings,unchecked,public,final,t,extends,b,t,add,filter,filter,filter,string,url,patterns,assert,not,null,filter,filter,cannot,be,null,assert,not,null,url,patterns,url,patterns,cannot,be,null,if,url,patterns,length,0,filter,new,pattern,mapping,filter,proxy,filter,url,patterns,this,filters,add,filter,return,t,this
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T alwaysExpect(ResultMatcher resultMatcher);1387852827;Define a global expectation that should <em>always</em> be applied to_every response. For example, status code 200 (OK), content type_{@code "application/json"}, etc.__@param resultMatcher a ResultMatcher_ see static factory methods in_{@link org.springframework.test.web.servlet.result.MockMvcResultMatchers};@SuppressWarnings("unchecked")_	public final <T extends B> T alwaysExpect(ResultMatcher resultMatcher) {_		this.globalResultMatchers.add(resultMatcher)__		return (T) this__	};define,a,global,expectation,that,should,em,always,em,be,applied,to,every,response,for,example,status,code,200,ok,content,type,code,application,json,etc,param,result,matcher,a,result,matcher,see,static,factory,methods,in,link,org,springframework,test,web,servlet,result,mock,mvc,result,matchers;suppress,warnings,unchecked,public,final,t,extends,b,t,always,expect,result,matcher,result,matcher,this,global,result,matchers,add,result,matcher,return,t,this
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T alwaysExpect(ResultMatcher resultMatcher);1405479565;Define a global expectation that should <em>always</em> be applied to_every response. For example, status code 200 (OK), content type_{@code "application/json"}, etc.__@param resultMatcher a ResultMatcher_ see static factory methods in_{@link org.springframework.test.web.servlet.result.MockMvcResultMatchers};@SuppressWarnings("unchecked")_	public final <T extends B> T alwaysExpect(ResultMatcher resultMatcher) {_		this.globalResultMatchers.add(resultMatcher)__		return (T) this__	};define,a,global,expectation,that,should,em,always,em,be,applied,to,every,response,for,example,status,code,200,ok,content,type,code,application,json,etc,param,result,matcher,a,result,matcher,see,static,factory,methods,in,link,org,springframework,test,web,servlet,result,mock,mvc,result,matchers;suppress,warnings,unchecked,public,final,t,extends,b,t,always,expect,result,matcher,result,matcher,this,global,result,matchers,add,result,matcher,return,t,this
AbstractMockMvcBuilder -> @SuppressWarnings("unchecked") 	public final <T extends B> T alwaysExpect(ResultMatcher resultMatcher);1405696918;Define a global expectation that should <em>always</em> be applied to_every response. For example, status code 200 (OK), content type_{@code "application/json"}, etc.__@param resultMatcher a ResultMatcher_ see static factory methods in_{@link org.springframework.test.web.servlet.result.MockMvcResultMatchers};@SuppressWarnings("unchecked")_	public final <T extends B> T alwaysExpect(ResultMatcher resultMatcher) {_		this.globalResultMatchers.add(resultMatcher)__		return (T) this__	};define,a,global,expectation,that,should,em,always,em,be,applied,to,every,response,for,example,status,code,200,ok,content,type,code,application,json,etc,param,result,matcher,a,result,matcher,see,static,factory,methods,in,link,org,springframework,test,web,servlet,result,mock,mvc,result,matchers;suppress,warnings,unchecked,public,final,t,extends,b,t,always,expect,result,matcher,result,matcher,this,global,result,matchers,add,result,matcher,return,t,this
AbstractMockMvcBuilder -> protected abstract WebApplicationContext initWebAppContext()_;1387852827;A method to obtain the WebApplicationContext to be passed to the DispatcherServlet._Invoked from {@link #build()} before the_{@link org.springframework.test.web.servlet.MockMvc} instance is created.;protected abstract WebApplicationContext initWebAppContext()_;a,method,to,obtain,the,web,application,context,to,be,passed,to,the,dispatcher,servlet,invoked,from,link,build,before,the,link,org,springframework,test,web,servlet,mock,mvc,instance,is,created;protected,abstract,web,application,context,init,web,app,context
AbstractMockMvcBuilder -> protected abstract WebApplicationContext initWebAppContext()_;1405479565;A method to obtain the WebApplicationContext to be passed to the DispatcherServlet._Invoked from {@link #build()} before the_{@link org.springframework.test.web.servlet.MockMvc} instance is created.;protected abstract WebApplicationContext initWebAppContext()_;a,method,to,obtain,the,web,application,context,to,be,passed,to,the,dispatcher,servlet,invoked,from,link,build,before,the,link,org,springframework,test,web,servlet,mock,mvc,instance,is,created;protected,abstract,web,application,context,init,web,app,context
AbstractMockMvcBuilder -> protected abstract WebApplicationContext initWebAppContext()_;1405696918;A method to obtain the WebApplicationContext to be passed to the DispatcherServlet._Invoked from {@link #build()} before the_{@link org.springframework.test.web.servlet.MockMvc} instance is created.;protected abstract WebApplicationContext initWebAppContext()_;a,method,to,obtain,the,web,application,context,to,be,passed,to,the,dispatcher,servlet,invoked,from,link,build,before,the,link,org,springframework,test,web,servlet,mock,mvc,instance,is,created;protected,abstract,web,application,context,init,web,app,context
AbstractMockMvcBuilder -> protected abstract WebApplicationContext initWebAppContext()_;1406050882;A method to obtain the WebApplicationContext to be passed to the DispatcherServlet._Invoked from {@link #build()} before the_{@link org.springframework.test.web.servlet.MockMvc} instance is created.;protected abstract WebApplicationContext initWebAppContext()_;a,method,to,obtain,the,web,application,context,to,be,passed,to,the,dispatcher,servlet,invoked,from,link,build,before,the,link,org,springframework,test,web,servlet,mock,mvc,instance,is,created;protected,abstract,web,application,context,init,web,app,context
AbstractMockMvcBuilder -> protected abstract WebApplicationContext initWebAppContext()_;1406203934;A method to obtain the WebApplicationContext to be passed to the DispatcherServlet._Invoked from {@link #build()} before the_{@link org.springframework.test.web.servlet.MockMvc} instance is created.;protected abstract WebApplicationContext initWebAppContext()_;a,method,to,obtain,the,web,application,context,to,be,passed,to,the,dispatcher,servlet,invoked,from,link,build,before,the,link,org,springframework,test,web,servlet,mock,mvc,instance,is,created;protected,abstract,web,application,context,init,web,app,context
AbstractMockMvcBuilder -> protected abstract WebApplicationContext initWebAppContext()_;1413848647;A method to obtain the WebApplicationContext to be passed to the DispatcherServlet._Invoked from {@link #build()} before the_{@link org.springframework.test.web.servlet.MockMvc} instance is created.;protected abstract WebApplicationContext initWebAppContext()_;a,method,to,obtain,the,web,application,context,to,be,passed,to,the,dispatcher,servlet,invoked,from,link,build,before,the,link,org,springframework,test,web,servlet,mock,mvc,instance,is,created;protected,abstract,web,application,context,init,web,app,context
AbstractMockMvcBuilder -> protected abstract WebApplicationContext initWebAppContext()_;1453729744;A method to obtain the WebApplicationContext to be passed to the DispatcherServlet._Invoked from {@link #build()} before the_{@link org.springframework.test.web.servlet.MockMvc} instance is created.;protected abstract WebApplicationContext initWebAppContext()_;a,method,to,obtain,the,web,application,context,to,be,passed,to,the,dispatcher,servlet,invoked,from,link,build,before,the,link,org,springframework,test,web,servlet,mock,mvc,instance,is,created;protected,abstract,web,application,context,init,web,app,context
AbstractMockMvcBuilder -> protected abstract WebApplicationContext initWebAppContext()_;1467730834;A method to obtain the WebApplicationContext to be passed to the DispatcherServlet._Invoked from {@link #build()} before the_{@link org.springframework.test.web.servlet.MockMvc} instance is created.;protected abstract WebApplicationContext initWebAppContext()_;a,method,to,obtain,the,web,application,context,to,be,passed,to,the,dispatcher,servlet,invoked,from,link,build,before,the,link,org,springframework,test,web,servlet,mock,mvc,instance,is,created;protected,abstract,web,application,context,init,web,app,context
AbstractMockMvcBuilder -> protected abstract WebApplicationContext initWebAppContext()_;1477731509;A method to obtain the WebApplicationContext to be passed to the DispatcherServlet._Invoked from {@link #build()} before the_{@link org.springframework.test.web.servlet.MockMvc} instance is created.;protected abstract WebApplicationContext initWebAppContext()_;a,method,to,obtain,the,web,application,context,to,be,passed,to,the,dispatcher,servlet,invoked,from,link,build,before,the,link,org,springframework,test,web,servlet,mock,mvc,instance,is,created;protected,abstract,web,application,context,init,web,app,context
AbstractMockMvcBuilder -> protected abstract WebApplicationContext initWebAppContext()_;1477732526;A method to obtain the WebApplicationContext to be passed to the DispatcherServlet._Invoked from {@link #build()} before the_{@link org.springframework.test.web.servlet.MockMvc} instance is created.;protected abstract WebApplicationContext initWebAppContext()_;a,method,to,obtain,the,web,application,context,to,be,passed,to,the,dispatcher,servlet,invoked,from,link,build,before,the,link,org,springframework,test,web,servlet,mock,mvc,instance,is,created;protected,abstract,web,application,context,init,web,app,context
AbstractMockMvcBuilder -> protected abstract WebApplicationContext initWebAppContext()_;1485365591;A method to obtain the {@code WebApplicationContext} to be passed to the_{@code DispatcherServlet}. Invoked from {@link #build()} before the_{@link MockMvc} instance is created.;protected abstract WebApplicationContext initWebAppContext()_;a,method,to,obtain,the,code,web,application,context,to,be,passed,to,the,code,dispatcher,servlet,invoked,from,link,build,before,the,link,mock,mvc,instance,is,created;protected,abstract,web,application,context,init,web,app,context
AbstractMockMvcBuilder -> protected abstract WebApplicationContext initWebAppContext()_;1496955179;A method to obtain the {@code WebApplicationContext} to be passed to the_{@code DispatcherServlet}. Invoked from {@link #build()} before the_{@link MockMvc} instance is created.;protected abstract WebApplicationContext initWebAppContext()_;a,method,to,obtain,the,code,web,application,context,to,be,passed,to,the,code,dispatcher,servlet,invoked,from,link,build,before,the,link,mock,mvc,instance,is,created;protected,abstract,web,application,context,init,web,app,context
AbstractMockMvcBuilder -> protected abstract WebApplicationContext initWebAppContext()_;1498780456;A method to obtain the {@code WebApplicationContext} to be passed to the_{@code DispatcherServlet}. Invoked from {@link #build()} before the_{@link MockMvc} instance is created.;protected abstract WebApplicationContext initWebAppContext()_;a,method,to,obtain,the,code,web,application,context,to,be,passed,to,the,code,dispatcher,servlet,invoked,from,link,build,before,the,link,mock,mvc,instance,is,created;protected,abstract,web,application,context,init,web,app,context
AbstractMockMvcBuilder -> protected abstract WebApplicationContext initWebAppContext()_;1519295386;A method to obtain the {@code WebApplicationContext} to be passed to the_{@code DispatcherServlet}. Invoked from {@link #build()} before the_{@link MockMvc} instance is created.;protected abstract WebApplicationContext initWebAppContext()_;a,method,to,obtain,the,code,web,application,context,to,be,passed,to,the,code,dispatcher,servlet,invoked,from,link,build,before,the,link,mock,mvc,instance,is,created;protected,abstract,web,application,context,init,web,app,context
AbstractMockMvcBuilder -> protected abstract WebApplicationContext initWebAppContext()_;1530174524;A method to obtain the {@code WebApplicationContext} to be passed to the_{@code DispatcherServlet}. Invoked from {@link #build()} before the_{@link MockMvc} instance is created.;protected abstract WebApplicationContext initWebAppContext()_;a,method,to,obtain,the,code,web,application,context,to,be,passed,to,the,code,dispatcher,servlet,invoked,from,link,build,before,the,link,mock,mvc,instance,is,created;protected,abstract,web,application,context,init,web,app,context
AbstractMockMvcBuilder -> protected abstract WebApplicationContext initWebAppContext()_;1530174524;A method to obtain the {@code WebApplicationContext} to be passed to the_{@code DispatcherServlet}. Invoked from {@link #build()} before the_{@link MockMvc} instance is created.;protected abstract WebApplicationContext initWebAppContext()_;a,method,to,obtain,the,code,web,application,context,to,be,passed,to,the,code,dispatcher,servlet,invoked,from,link,build,before,the,link,mock,mvc,instance,is,created;protected,abstract,web,application,context,init,web,app,context
