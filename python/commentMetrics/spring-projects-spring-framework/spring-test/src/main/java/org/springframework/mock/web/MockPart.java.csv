commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getName() {     return this.name. }
false;public;0;5;;@Override @Nullable public String getSubmittedFileName() {     return this.filename. }
false;public;0;6;;@Override @Nullable public String getContentType() {     MediaType contentType = this.headers.getContentType().     return (contentType != null ? contentType.toString() : null). }
false;public;0;4;;@Override public long getSize() {     return this.content.length. }
false;public;0;4;;@Override public InputStream getInputStream() throws IOException {     return new ByteArrayInputStream(this.content). }
false;public;1;4;;@Override public void write(String fileName) throws IOException {     throw new UnsupportedOperationException(). }
false;public;0;4;;@Override public void delete() throws IOException {     throw new UnsupportedOperationException(). }
false;public;1;5;;@Override @Nullable public String getHeader(String name) {     return this.headers.getFirst(name). }
false;public;1;5;;@Override public Collection<String> getHeaders(String name) {     Collection<String> headerValues = this.headers.get(name).     return (headerValues != null ? headerValues : Collections.emptyList()). }
false;public;0;4;;@Override public Collection<String> getHeaderNames() {     return this.headers.keySet(). }
true;public,final;0;3;/**  * Return the {@link HttpHeaders} backing header related accessor methods,  * allowing for populating selected header entries.  */ ;/**  * Return the {@link HttpHeaders} backing header related accessor methods,  * allowing for populating selected header entries.  */ public final HttpHeaders getHeaders() {     return this.headers. }
