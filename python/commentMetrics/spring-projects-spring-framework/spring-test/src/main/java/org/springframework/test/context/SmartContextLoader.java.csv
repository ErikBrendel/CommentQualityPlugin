# id;timestamp;commentText;codeText;commentWords;codeWords
SmartContextLoader -> ApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception_;1328020251;Loads a new {@link ApplicationContext context} based on the supplied_{@link MergedContextConfiguration merged context configuration},_configures the context, and finally returns the context in a fully_<em>refreshed</em> state._<p>Concrete implementations should register annotation configuration_processors with bean factories of_{@link ApplicationContext application contexts} loaded by this_{@code SmartContextLoader}. Beans will therefore automatically be_candidates for annotation-based dependency injection using_{@link org.springframework.beans.factory.annotation.Autowired @Autowired},_{@link javax.annotation.Resource @Resource}, and_{@link javax.inject.Inject @Inject}. In addition, concrete implementations_should set the active bean definition profiles in the context's_{@link org.springframework.core.env.Environment Environment}._<p>Any <code>ApplicationContext</code> loaded by a_{@code SmartContextLoader} <strong>must</strong> register a JVM_shutdown hook for itself. Unless the context gets closed early, all context_instances will be automatically closed on JVM shutdown. This allows for_freeing of external resources held by beans within the context (e.g.,_temporary files)._@param mergedConfig the merged context configuration to use to load the_application context_@return a new application context_@throws Exception if context loading failed_@see #processContextConfiguration(ContextConfigurationAttributes)_@see org.springframework.context.annotation.AnnotationConfigUtils#registerAnnotationConfigProcessors()_@see org.springframework.test.context.MergedContextConfiguration#getActiveProfiles()_@see org.springframework.context.ConfigurableApplicationContext#getEnvironment();ApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception_;loads,a,new,link,application,context,context,based,on,the,supplied,link,merged,context,configuration,merged,context,configuration,configures,the,context,and,finally,returns,the,context,in,a,fully,em,refreshed,em,state,p,concrete,implementations,should,register,annotation,configuration,processors,with,bean,factories,of,link,application,context,application,contexts,loaded,by,this,code,smart,context,loader,beans,will,therefore,automatically,be,candidates,for,annotation,based,dependency,injection,using,link,org,springframework,beans,factory,annotation,autowired,autowired,link,javax,annotation,resource,resource,and,link,javax,inject,inject,inject,in,addition,concrete,implementations,should,set,the,active,bean,definition,profiles,in,the,context,s,link,org,springframework,core,env,environment,environment,p,any,code,application,context,code,loaded,by,a,code,smart,context,loader,strong,must,strong,register,a,jvm,shutdown,hook,for,itself,unless,the,context,gets,closed,early,all,context,instances,will,be,automatically,closed,on,jvm,shutdown,this,allows,for,freeing,of,external,resources,held,by,beans,within,the,context,e,g,temporary,files,param,merged,config,the,merged,context,configuration,to,use,to,load,the,application,context,return,a,new,application,context,throws,exception,if,context,loading,failed,see,process,context,configuration,context,configuration,attributes,see,org,springframework,context,annotation,annotation,config,utils,register,annotation,config,processors,see,org,springframework,test,context,merged,context,configuration,get,active,profiles,see,org,springframework,context,configurable,application,context,get,environment;application,context,load,context,merged,context,configuration,merged,config,throws,exception
SmartContextLoader -> ApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception_;1335774711;Loads a new {@link ApplicationContext context} based on the supplied_{@link MergedContextConfiguration merged context configuration},_configures the context, and finally returns the context in a fully_<em>refreshed</em> state._<p>Concrete implementations should register annotation configuration_processors with bean factories of_{@link ApplicationContext application contexts} loaded by this_{@code SmartContextLoader}. Beans will therefore automatically be_candidates for annotation-based dependency injection using_{@link org.springframework.beans.factory.annotation.Autowired @Autowired},_{@link javax.annotation.Resource @Resource}, and_{@link javax.inject.Inject @Inject}. In addition, concrete implementations_should set the active bean definition profiles in the context's_{@link org.springframework.core.env.Environment Environment}._<p>Any <code>ApplicationContext</code> loaded by a_{@code SmartContextLoader} <strong>must</strong> register a JVM_shutdown hook for itself. Unless the context gets closed early, all context_instances will be automatically closed on JVM shutdown. This allows for_freeing of external resources held by beans within the context (e.g.,_temporary files)._@param mergedConfig the merged context configuration to use to load the_application context_@return a new application context_@throws Exception if context loading failed_@see #processContextConfiguration(ContextConfigurationAttributes)_@see org.springframework.context.annotation.AnnotationConfigUtils_#registerAnnotationConfigProcessors(org.springframework.beans.factory.support.BeanDefinitionRegistry)_@see org.springframework.test.context.MergedContextConfiguration#getActiveProfiles()_@see org.springframework.context.ConfigurableApplicationContext#getEnvironment();ApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception_;loads,a,new,link,application,context,context,based,on,the,supplied,link,merged,context,configuration,merged,context,configuration,configures,the,context,and,finally,returns,the,context,in,a,fully,em,refreshed,em,state,p,concrete,implementations,should,register,annotation,configuration,processors,with,bean,factories,of,link,application,context,application,contexts,loaded,by,this,code,smart,context,loader,beans,will,therefore,automatically,be,candidates,for,annotation,based,dependency,injection,using,link,org,springframework,beans,factory,annotation,autowired,autowired,link,javax,annotation,resource,resource,and,link,javax,inject,inject,inject,in,addition,concrete,implementations,should,set,the,active,bean,definition,profiles,in,the,context,s,link,org,springframework,core,env,environment,environment,p,any,code,application,context,code,loaded,by,a,code,smart,context,loader,strong,must,strong,register,a,jvm,shutdown,hook,for,itself,unless,the,context,gets,closed,early,all,context,instances,will,be,automatically,closed,on,jvm,shutdown,this,allows,for,freeing,of,external,resources,held,by,beans,within,the,context,e,g,temporary,files,param,merged,config,the,merged,context,configuration,to,use,to,load,the,application,context,return,a,new,application,context,throws,exception,if,context,loading,failed,see,process,context,configuration,context,configuration,attributes,see,org,springframework,context,annotation,annotation,config,utils,register,annotation,config,processors,org,springframework,beans,factory,support,bean,definition,registry,see,org,springframework,test,context,merged,context,configuration,get,active,profiles,see,org,springframework,context,configurable,application,context,get,environment;application,context,load,context,merged,context,configuration,merged,config,throws,exception
SmartContextLoader -> ApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception_;1337278668;Loads a new {@link ApplicationContext context} based on the supplied_{@link MergedContextConfiguration merged context configuration},_configures the context, and finally returns the context in a fully_<em>refreshed</em> state._<p>Concrete implementations should register annotation configuration_processors with bean factories of_{@link ApplicationContext application contexts} loaded by this_{@code SmartContextLoader}. Beans will therefore automatically be_candidates for annotation-based dependency injection using_{@link org.springframework.beans.factory.annotation.Autowired @Autowired},_{@link javax.annotation.Resource @Resource}, and_{@link javax.inject.Inject @Inject}. In addition, concrete implementations_should set the active bean definition profiles in the context's_{@link org.springframework.core.env.Environment Environment}._<p>Any <code>ApplicationContext</code> loaded by a_{@code SmartContextLoader} <strong>must</strong> register a JVM_shutdown hook for itself. Unless the context gets closed early, all context_instances will be automatically closed on JVM shutdown. This allows for_freeing of external resources held by beans within the context (e.g.,_temporary files)._@param mergedConfig the merged context configuration to use to load the_application context_@return a new application context_@throws Exception if context loading failed_@see #processContextConfiguration(ContextConfigurationAttributes)_@see org.springframework.context.annotation.AnnotationConfigUtils_#registerAnnotationConfigProcessors(org.springframework.beans.factory.support.BeanDefinitionRegistry)_@see org.springframework.test.context.MergedContextConfiguration#getActiveProfiles()_@see org.springframework.context.ConfigurableApplicationContext#getEnvironment();ApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception_;loads,a,new,link,application,context,context,based,on,the,supplied,link,merged,context,configuration,merged,context,configuration,configures,the,context,and,finally,returns,the,context,in,a,fully,em,refreshed,em,state,p,concrete,implementations,should,register,annotation,configuration,processors,with,bean,factories,of,link,application,context,application,contexts,loaded,by,this,code,smart,context,loader,beans,will,therefore,automatically,be,candidates,for,annotation,based,dependency,injection,using,link,org,springframework,beans,factory,annotation,autowired,autowired,link,javax,annotation,resource,resource,and,link,javax,inject,inject,inject,in,addition,concrete,implementations,should,set,the,active,bean,definition,profiles,in,the,context,s,link,org,springframework,core,env,environment,environment,p,any,code,application,context,code,loaded,by,a,code,smart,context,loader,strong,must,strong,register,a,jvm,shutdown,hook,for,itself,unless,the,context,gets,closed,early,all,context,instances,will,be,automatically,closed,on,jvm,shutdown,this,allows,for,freeing,of,external,resources,held,by,beans,within,the,context,e,g,temporary,files,param,merged,config,the,merged,context,configuration,to,use,to,load,the,application,context,return,a,new,application,context,throws,exception,if,context,loading,failed,see,process,context,configuration,context,configuration,attributes,see,org,springframework,context,annotation,annotation,config,utils,register,annotation,config,processors,org,springframework,beans,factory,support,bean,definition,registry,see,org,springframework,test,context,merged,context,configuration,get,active,profiles,see,org,springframework,context,configurable,application,context,get,environment;application,context,load,context,merged,context,configuration,merged,config,throws,exception
SmartContextLoader -> ApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception_;1356735495;Loads a new {@link ApplicationContext context} based on the supplied_{@link MergedContextConfiguration merged context configuration},_configures the context, and finally returns the context in a fully_<em>refreshed</em> state._<p>Concrete implementations should register annotation configuration_processors with bean factories of_{@link ApplicationContext application contexts} loaded by this_{@code SmartContextLoader}. Beans will therefore automatically be_candidates for annotation-based dependency injection using_{@link org.springframework.beans.factory.annotation.Autowired @Autowired},_{@link javax.annotation.Resource @Resource}, and_{@link javax.inject.Inject @Inject}. In addition, concrete implementations_should set the active bean definition profiles in the context's_{@link org.springframework.core.env.Environment Environment}._<p>Any {@code ApplicationContext} loaded by a_{@code SmartContextLoader} <strong>must</strong> register a JVM_shutdown hook for itself. Unless the context gets closed early, all context_instances will be automatically closed on JVM shutdown. This allows for_freeing of external resources held by beans within the context (e.g.,_temporary files)._@param mergedConfig the merged context configuration to use to load the_application context_@return a new application context_@throws Exception if context loading failed_@see #processContextConfiguration(ContextConfigurationAttributes)_@see org.springframework.context.annotation.AnnotationConfigUtils_#registerAnnotationConfigProcessors(org.springframework.beans.factory.support.BeanDefinitionRegistry)_@see MergedContextConfiguration#getActiveProfiles()_@see org.springframework.context.ConfigurableApplicationContext#getEnvironment();ApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception_;loads,a,new,link,application,context,context,based,on,the,supplied,link,merged,context,configuration,merged,context,configuration,configures,the,context,and,finally,returns,the,context,in,a,fully,em,refreshed,em,state,p,concrete,implementations,should,register,annotation,configuration,processors,with,bean,factories,of,link,application,context,application,contexts,loaded,by,this,code,smart,context,loader,beans,will,therefore,automatically,be,candidates,for,annotation,based,dependency,injection,using,link,org,springframework,beans,factory,annotation,autowired,autowired,link,javax,annotation,resource,resource,and,link,javax,inject,inject,inject,in,addition,concrete,implementations,should,set,the,active,bean,definition,profiles,in,the,context,s,link,org,springframework,core,env,environment,environment,p,any,code,application,context,loaded,by,a,code,smart,context,loader,strong,must,strong,register,a,jvm,shutdown,hook,for,itself,unless,the,context,gets,closed,early,all,context,instances,will,be,automatically,closed,on,jvm,shutdown,this,allows,for,freeing,of,external,resources,held,by,beans,within,the,context,e,g,temporary,files,param,merged,config,the,merged,context,configuration,to,use,to,load,the,application,context,return,a,new,application,context,throws,exception,if,context,loading,failed,see,process,context,configuration,context,configuration,attributes,see,org,springframework,context,annotation,annotation,config,utils,register,annotation,config,processors,org,springframework,beans,factory,support,bean,definition,registry,see,merged,context,configuration,get,active,profiles,see,org,springframework,context,configurable,application,context,get,environment;application,context,load,context,merged,context,configuration,merged,config,throws,exception
SmartContextLoader -> ApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception_;1363208506;Loads a new {@link ApplicationContext context} based on the supplied_{@link MergedContextConfiguration merged context configuration},_configures the context, and finally returns the context in a fully_<em>refreshed</em> state._<p>Concrete implementations should register annotation configuration_processors with bean factories of_{@link ApplicationContext application contexts} loaded by this_{@code SmartContextLoader}. Beans will therefore automatically be_candidates for annotation-based dependency injection using_{@link org.springframework.beans.factory.annotation.Autowired @Autowired},_{@link javax.annotation.Resource @Resource}, and_{@link javax.inject.Inject @Inject}. In addition, concrete implementations_should set the active bean definition profiles in the context's_{@link org.springframework.core.env.Environment Environment}._<p>Any {@code ApplicationContext} loaded by a_{@code SmartContextLoader} <strong>must</strong> register a JVM_shutdown hook for itself. Unless the context gets closed early, all context_instances will be automatically closed on JVM shutdown. This allows for_freeing of external resources held by beans within the context (e.g.,_temporary files)._@param mergedConfig the merged context configuration to use to load the_application context_@return a new application context_@throws Exception if context loading failed_@see #processContextConfiguration(ContextConfigurationAttributes)_@see org.springframework.context.annotation.AnnotationConfigUtils_#registerAnnotationConfigProcessors(org.springframework.beans.factory.support.BeanDefinitionRegistry)_@see MergedContextConfiguration#getActiveProfiles()_@see org.springframework.context.ConfigurableApplicationContext#getEnvironment();ApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception_;loads,a,new,link,application,context,context,based,on,the,supplied,link,merged,context,configuration,merged,context,configuration,configures,the,context,and,finally,returns,the,context,in,a,fully,em,refreshed,em,state,p,concrete,implementations,should,register,annotation,configuration,processors,with,bean,factories,of,link,application,context,application,contexts,loaded,by,this,code,smart,context,loader,beans,will,therefore,automatically,be,candidates,for,annotation,based,dependency,injection,using,link,org,springframework,beans,factory,annotation,autowired,autowired,link,javax,annotation,resource,resource,and,link,javax,inject,inject,inject,in,addition,concrete,implementations,should,set,the,active,bean,definition,profiles,in,the,context,s,link,org,springframework,core,env,environment,environment,p,any,code,application,context,loaded,by,a,code,smart,context,loader,strong,must,strong,register,a,jvm,shutdown,hook,for,itself,unless,the,context,gets,closed,early,all,context,instances,will,be,automatically,closed,on,jvm,shutdown,this,allows,for,freeing,of,external,resources,held,by,beans,within,the,context,e,g,temporary,files,param,merged,config,the,merged,context,configuration,to,use,to,load,the,application,context,return,a,new,application,context,throws,exception,if,context,loading,failed,see,process,context,configuration,context,configuration,attributes,see,org,springframework,context,annotation,annotation,config,utils,register,annotation,config,processors,org,springframework,beans,factory,support,bean,definition,registry,see,merged,context,configuration,get,active,profiles,see,org,springframework,context,configurable,application,context,get,environment;application,context,load,context,merged,context,configuration,merged,config,throws,exception
SmartContextLoader -> void processContextConfiguration(ContextConfigurationAttributes configAttributes)_;1328020251;Processes the {@link ContextConfigurationAttributes} for a given test class._<p>Concrete implementations may choose to <em>modify</em> the <code>locations</code>_or <code>classes</code> in the supplied {@link ContextConfigurationAttributes},_<em>generate</em> default configuration locations, or <em>detect</em>_default configuration classes if the supplied values are <code>null</code>_or empty._<p><b>Note</b>: in contrast to a standard {@code ContextLoader}, a_{@code SmartContextLoader} <b>must</b> <em>preemptively</em> verify that_a generated or detected default actually exists before setting the corresponding_<code>locations</code> or <code>classes</code> property in the supplied_{@link ContextConfigurationAttributes}. Consequently, leaving the_<code>locations</code> or <code>classes</code> property empty signals that_this {@code SmartContextLoader} was not able to generate or detect defaults._@param configAttributes the context configuration attributes to process;void processContextConfiguration(ContextConfigurationAttributes configAttributes)_;processes,the,link,context,configuration,attributes,for,a,given,test,class,p,concrete,implementations,may,choose,to,em,modify,em,the,code,locations,code,or,code,classes,code,in,the,supplied,link,context,configuration,attributes,em,generate,em,default,configuration,locations,or,em,detect,em,default,configuration,classes,if,the,supplied,values,are,code,null,code,or,empty,p,b,note,b,in,contrast,to,a,standard,code,context,loader,a,code,smart,context,loader,b,must,b,em,preemptively,em,verify,that,a,generated,or,detected,default,actually,exists,before,setting,the,corresponding,code,locations,code,or,code,classes,code,property,in,the,supplied,link,context,configuration,attributes,consequently,leaving,the,code,locations,code,or,code,classes,code,property,empty,signals,that,this,code,smart,context,loader,was,not,able,to,generate,or,detect,defaults,param,config,attributes,the,context,configuration,attributes,to,process;void,process,context,configuration,context,configuration,attributes,config,attributes
SmartContextLoader -> void processContextConfiguration(ContextConfigurationAttributes configAttributes)_;1335774711;Processes the {@link ContextConfigurationAttributes} for a given test class._<p>Concrete implementations may choose to <em>modify</em> the <code>locations</code>_or <code>classes</code> in the supplied {@link ContextConfigurationAttributes},_<em>generate</em> default configuration locations, or <em>detect</em>_default configuration classes if the supplied values are <code>null</code>_or empty._<p><b>Note</b>: in contrast to a standard {@code ContextLoader}, a_{@code SmartContextLoader} <b>must</b> <em>preemptively</em> verify that_a generated or detected default actually exists before setting the corresponding_<code>locations</code> or <code>classes</code> property in the supplied_{@link ContextConfigurationAttributes}. Consequently, leaving the_<code>locations</code> or <code>classes</code> property empty signals that_this {@code SmartContextLoader} was not able to generate or detect defaults._@param configAttributes the context configuration attributes to process;void processContextConfiguration(ContextConfigurationAttributes configAttributes)_;processes,the,link,context,configuration,attributes,for,a,given,test,class,p,concrete,implementations,may,choose,to,em,modify,em,the,code,locations,code,or,code,classes,code,in,the,supplied,link,context,configuration,attributes,em,generate,em,default,configuration,locations,or,em,detect,em,default,configuration,classes,if,the,supplied,values,are,code,null,code,or,empty,p,b,note,b,in,contrast,to,a,standard,code,context,loader,a,code,smart,context,loader,b,must,b,em,preemptively,em,verify,that,a,generated,or,detected,default,actually,exists,before,setting,the,corresponding,code,locations,code,or,code,classes,code,property,in,the,supplied,link,context,configuration,attributes,consequently,leaving,the,code,locations,code,or,code,classes,code,property,empty,signals,that,this,code,smart,context,loader,was,not,able,to,generate,or,detect,defaults,param,config,attributes,the,context,configuration,attributes,to,process;void,process,context,configuration,context,configuration,attributes,config,attributes
SmartContextLoader -> void processContextConfiguration(ContextConfigurationAttributes configAttributes)_;1337278668;Processes the {@link ContextConfigurationAttributes} for a given test class._<p>Concrete implementations may choose to <em>modify</em> the <code>locations</code>_or <code>classes</code> in the supplied {@link ContextConfigurationAttributes},_<em>generate</em> default configuration locations, or <em>detect</em>_default configuration classes if the supplied values are <code>null</code>_or empty._<p><b>Note</b>: in contrast to a standard {@code ContextLoader}, a_{@code SmartContextLoader} <b>must</b> <em>preemptively</em> verify that_a generated or detected default actually exists before setting the corresponding_<code>locations</code> or <code>classes</code> property in the supplied_{@link ContextConfigurationAttributes}. Consequently, leaving the_<code>locations</code> or <code>classes</code> property empty signals that_this {@code SmartContextLoader} was not able to generate or detect defaults._@param configAttributes the context configuration attributes to process;void processContextConfiguration(ContextConfigurationAttributes configAttributes)_;processes,the,link,context,configuration,attributes,for,a,given,test,class,p,concrete,implementations,may,choose,to,em,modify,em,the,code,locations,code,or,code,classes,code,in,the,supplied,link,context,configuration,attributes,em,generate,em,default,configuration,locations,or,em,detect,em,default,configuration,classes,if,the,supplied,values,are,code,null,code,or,empty,p,b,note,b,in,contrast,to,a,standard,code,context,loader,a,code,smart,context,loader,b,must,b,em,preemptively,em,verify,that,a,generated,or,detected,default,actually,exists,before,setting,the,corresponding,code,locations,code,or,code,classes,code,property,in,the,supplied,link,context,configuration,attributes,consequently,leaving,the,code,locations,code,or,code,classes,code,property,empty,signals,that,this,code,smart,context,loader,was,not,able,to,generate,or,detect,defaults,param,config,attributes,the,context,configuration,attributes,to,process;void,process,context,configuration,context,configuration,attributes,config,attributes
SmartContextLoader -> void processContextConfiguration(ContextConfigurationAttributes configAttributes)_;1356735495;Processes the {@link ContextConfigurationAttributes} for a given test class._<p>Concrete implementations may choose to <em>modify</em> the {@code locations}_or {@code classes} in the supplied {@link ContextConfigurationAttributes},_<em>generate</em> default configuration locations, or <em>detect</em>_default configuration classes if the supplied values are {@code null}_or empty._<p><b>Note</b>: in contrast to a standard {@code ContextLoader}, a_{@code SmartContextLoader} <b>must</b> <em>preemptively</em> verify that_a generated or detected default actually exists before setting the corresponding_{@code locations} or {@code classes} property in the supplied_{@link ContextConfigurationAttributes}. Consequently, leaving the_{@code locations} or {@code classes} property empty signals that_this {@code SmartContextLoader} was not able to generate or detect defaults._@param configAttributes the context configuration attributes to process;void processContextConfiguration(ContextConfigurationAttributes configAttributes)_;processes,the,link,context,configuration,attributes,for,a,given,test,class,p,concrete,implementations,may,choose,to,em,modify,em,the,code,locations,or,code,classes,in,the,supplied,link,context,configuration,attributes,em,generate,em,default,configuration,locations,or,em,detect,em,default,configuration,classes,if,the,supplied,values,are,code,null,or,empty,p,b,note,b,in,contrast,to,a,standard,code,context,loader,a,code,smart,context,loader,b,must,b,em,preemptively,em,verify,that,a,generated,or,detected,default,actually,exists,before,setting,the,corresponding,code,locations,or,code,classes,property,in,the,supplied,link,context,configuration,attributes,consequently,leaving,the,code,locations,or,code,classes,property,empty,signals,that,this,code,smart,context,loader,was,not,able,to,generate,or,detect,defaults,param,config,attributes,the,context,configuration,attributes,to,process;void,process,context,configuration,context,configuration,attributes,config,attributes
SmartContextLoader -> void processContextConfiguration(ContextConfigurationAttributes configAttributes)_;1363208506;Processes the {@link ContextConfigurationAttributes} for a given test class._<p>Concrete implementations may choose to <em>modify</em> the {@code locations}_or {@code classes} in the supplied {@link ContextConfigurationAttributes},_<em>generate</em> default configuration locations, or <em>detect</em>_default configuration classes if the supplied values are {@code null}_or empty._<p><b>Note</b>: in contrast to a standard {@code ContextLoader}, a_{@code SmartContextLoader} <b>must</b> <em>preemptively</em> verify that_a generated or detected default actually exists before setting the corresponding_{@code locations} or {@code classes} property in the supplied_{@link ContextConfigurationAttributes}. Consequently, leaving the_{@code locations} or {@code classes} property empty signals that_this {@code SmartContextLoader} was not able to generate or detect defaults._@param configAttributes the context configuration attributes to process;void processContextConfiguration(ContextConfigurationAttributes configAttributes)_;processes,the,link,context,configuration,attributes,for,a,given,test,class,p,concrete,implementations,may,choose,to,em,modify,em,the,code,locations,or,code,classes,in,the,supplied,link,context,configuration,attributes,em,generate,em,default,configuration,locations,or,em,detect,em,default,configuration,classes,if,the,supplied,values,are,code,null,or,empty,p,b,note,b,in,contrast,to,a,standard,code,context,loader,a,code,smart,context,loader,b,must,b,em,preemptively,em,verify,that,a,generated,or,detected,default,actually,exists,before,setting,the,corresponding,code,locations,or,code,classes,property,in,the,supplied,link,context,configuration,attributes,consequently,leaving,the,code,locations,or,code,classes,property,empty,signals,that,this,code,smart,context,loader,was,not,able,to,generate,or,detect,defaults,param,config,attributes,the,context,configuration,attributes,to,process;void,process,context,configuration,context,configuration,attributes,config,attributes
