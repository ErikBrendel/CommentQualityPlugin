# id;timestamp;commentText;codeText;commentWords;codeWords
HeaderResultMatchers -> public ResultMatcher string(final String name, final Matcher<? super String> matcher);1383669853;Assert the primary value of the named response header with the given_Hamcrest {@link Matcher}.;public ResultMatcher string(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {__			@Override_			public void match(MvcResult result) {_				assertThat("Response header " + name, result.getResponse().getHeader(name), matcher)__			}_		}__	};assert,the,primary,value,of,the,named,response,header,with,the,given,hamcrest,link,matcher;public,result,matcher,string,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,that,response,header,name,result,get,response,get,header,name,matcher
HeaderResultMatchers -> public ResultMatcher string(final String name, final Matcher<? super String> matcher);1413848647;Assert the primary value of the named response header with the given_Hamcrest {@link Matcher}.;public ResultMatcher string(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {__			@Override_			public void match(MvcResult result) {_				assertThat("Response header " + name, result.getResponse().getHeader(name), matcher)__			}_		}__	};assert,the,primary,value,of,the,named,response,header,with,the,given,hamcrest,link,matcher;public,result,matcher,string,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,that,response,header,name,result,get,response,get,header,name,matcher
HeaderResultMatchers -> public ResultMatcher string(final String name, final Matcher<? super String> matcher);1427238287;Assert the primary value of the named response header with the given_Hamcrest {@link Matcher}.;public ResultMatcher string(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertThat("Response header " + name, result.getResponse().getHeader(name), matcher)__			}_		}__	};assert,the,primary,value,of,the,named,response,header,with,the,given,hamcrest,link,matcher;public,result,matcher,string,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,that,response,header,name,result,get,response,get,header,name,matcher
HeaderResultMatchers -> public ResultMatcher string(final String name, final Matcher<? super String> matcher);1437424890;Assert the primary value of the named response header with the given_Hamcrest {@link Matcher}.;public ResultMatcher string(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertThat("Response header " + name, result.getResponse().getHeader(name), matcher)__			}_		}__	};assert,the,primary,value,of,the,named,response,header,with,the,given,hamcrest,link,matcher;public,result,matcher,string,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,that,response,header,name,result,get,response,get,header,name,matcher
HeaderResultMatchers -> public ResultMatcher string(final String name, final Matcher<? super String> matcher);1437556964;Assert the primary value of the named response header with the given_Hamcrest {@link Matcher}.;public ResultMatcher string(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertThat("Response header " + name, result.getResponse().getHeader(name), matcher)__			}_		}__	};assert,the,primary,value,of,the,named,response,header,with,the,given,hamcrest,link,matcher;public,result,matcher,string,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,that,response,header,name,result,get,response,get,header,name,matcher
HeaderResultMatchers -> public ResultMatcher string(final String name, final Matcher<? super String> matcher);1453389604;Assert the primary value of the named response header with the given_Hamcrest {@link Matcher}.;public ResultMatcher string(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertThat("Response header " + name, result.getResponse().getHeader(name), matcher)__			}_		}__	};assert,the,primary,value,of,the,named,response,header,with,the,given,hamcrest,link,matcher;public,result,matcher,string,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,that,response,header,name,result,get,response,get,header,name,matcher
HeaderResultMatchers -> public ResultMatcher string(final String name, final Matcher<? super String> matcher);1453393183;Assert the primary value of the response header with the given Hamcrest_String {@code Matcher}.;public ResultMatcher string(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertThat("Response header " + name, result.getResponse().getHeader(name), matcher)__			}_		}__	};assert,the,primary,value,of,the,response,header,with,the,given,hamcrest,string,code,matcher;public,result,matcher,string,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,that,response,header,name,result,get,response,get,header,name,matcher
HeaderResultMatchers -> public ResultMatcher string(final String name, final Matcher<? super String> matcher);1456838309;Assert the primary value of the response header with the given Hamcrest_String {@code Matcher}.;public ResultMatcher string(final String name, final Matcher<? super String> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertThat("Response header " + name, result.getResponse().getHeader(name), matcher)__			}_		}__	};assert,the,primary,value,of,the,response,header,with,the,given,hamcrest,string,code,matcher;public,result,matcher,string,final,string,name,final,matcher,super,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,that,response,header,name,result,get,response,get,header,name,matcher
HeaderResultMatchers -> public ResultMatcher string(final String name, final Matcher<? super String> matcher);1493235170;Assert the primary value of the response header with the given Hamcrest_String {@code Matcher}.;public ResultMatcher string(final String name, final Matcher<? super String> matcher) {_		return result -> assertThat("Response header '" + name + "'", result.getResponse().getHeader(name), matcher)__	};assert,the,primary,value,of,the,response,header,with,the,given,hamcrest,string,code,matcher;public,result,matcher,string,final,string,name,final,matcher,super,string,matcher,return,result,assert,that,response,header,name,result,get,response,get,header,name,matcher
HeaderResultMatchers -> public ResultMatcher string(final String name, final Matcher<? super String> matcher);1496955179;Assert the primary value of the response header with the given Hamcrest_String {@code Matcher}.;public ResultMatcher string(final String name, final Matcher<? super String> matcher) {_		return result -> assertThat("Response header '" + name + "'", result.getResponse().getHeader(name), matcher)__	};assert,the,primary,value,of,the,response,header,with,the,given,hamcrest,string,code,matcher;public,result,matcher,string,final,string,name,final,matcher,super,string,matcher,return,result,assert,that,response,header,name,result,get,response,get,header,name,matcher
HeaderResultMatchers -> public ResultMatcher string(final String name, final Matcher<? super String> matcher);1516833555;Assert the primary value of the response header with the given Hamcrest_String {@code Matcher}.;public ResultMatcher string(final String name, final Matcher<? super String> matcher) {_		return result -> assertThat("Response header '" + name + "'", result.getResponse().getHeader(name), matcher)__	};assert,the,primary,value,of,the,response,header,with,the,given,hamcrest,string,code,matcher;public,result,matcher,string,final,string,name,final,matcher,super,string,matcher,return,result,assert,that,response,header,name,result,get,response,get,header,name,matcher
HeaderResultMatchers -> public ResultMatcher string(final String name, final Matcher<? super String> matcher);1516983894;Assert the primary value of the response header with the given Hamcrest_String {@code Matcher}.;public ResultMatcher string(final String name, final Matcher<? super String> matcher) {_		return result -> assertThat("Response header '" + name + "'", result.getResponse().getHeader(name), matcher)__	};assert,the,primary,value,of,the,response,header,with,the,given,hamcrest,string,code,matcher;public,result,matcher,string,final,string,name,final,matcher,super,string,matcher,return,result,assert,that,response,header,name,result,get,response,get,header,name,matcher
HeaderResultMatchers -> public ResultMatcher string(final String name, final Matcher<? super String> matcher);1530174524;Assert the primary value of the response header with the given Hamcrest_String {@code Matcher}.;public ResultMatcher string(final String name, final Matcher<? super String> matcher) {_		return result -> assertThat("Response header '" + name + "'", result.getResponse().getHeader(name), matcher)__	};assert,the,primary,value,of,the,response,header,with,the,given,hamcrest,string,code,matcher;public,result,matcher,string,final,string,name,final,matcher,super,string,matcher,return,result,assert,that,response,header,name,result,get,response,get,header,name,matcher
HeaderResultMatchers -> public ResultMatcher string(final String name, final Matcher<? super String> matcher);1530174524;Assert the primary value of the response header with the given Hamcrest_String {@code Matcher}.;public ResultMatcher string(final String name, final Matcher<? super String> matcher) {_		return result -> assertThat("Response header '" + name + "'", result.getResponse().getHeader(name), matcher)__	};assert,the,primary,value,of,the,response,header,with,the,given,hamcrest,string,code,matcher;public,result,matcher,string,final,string,name,final,matcher,super,string,matcher,return,result,assert,that,response,header,name,result,get,response,get,header,name,matcher
HeaderResultMatchers -> public ResultMatcher string(final String name, final Matcher<? super String> matcher);1539373302;Assert the primary value of the response header with the given Hamcrest_String {@code Matcher}.;public ResultMatcher string(final String name, final Matcher<? super String> matcher) {_		return result -> assertThat("Response header '" + name + "'", result.getResponse().getHeader(name), matcher)__	};assert,the,primary,value,of,the,response,header,with,the,given,hamcrest,string,code,matcher;public,result,matcher,string,final,string,name,final,matcher,super,string,matcher,return,result,assert,that,response,header,name,result,get,response,get,header,name,matcher
HeaderResultMatchers -> public ResultMatcher dateValue(final String name, final long value);1437556964;Assert the primary value of the named response header as a date String,_using the preferred date format described in RFC 7231._<p>The {@link ResultMatcher} returned by this method throws an {@link AssertionError}_if the response does not contain the specified header, or if the supplied_{@code value} does not match the primary value.__@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>_@since 4.2;public ResultMatcher dateValue(final String name, final long value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				SimpleDateFormat format = new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss zzz", Locale.US)__				format.setTimeZone(TimeZone.getTimeZone("GMT"))__				assertTrue("Response does not contain header " + name, result.getResponse().containsHeader(name))__				assertEquals("Response header " + name, format.format(new Date(value)), result.getResponse().getHeader(name))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,date,string,using,the,preferred,date,format,described,in,rfc,7231,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a,since,4,2;public,result,matcher,date,value,final,string,name,final,long,value,return,new,result,matcher,override,public,void,match,mvc,result,result,simple,date,format,format,new,simple,date,format,eee,dd,mmm,yyyy,hh,mm,ss,zzz,locale,us,format,set,time,zone,time,zone,get,time,zone,gmt,assert,true,response,does,not,contain,header,name,result,get,response,contains,header,name,assert,equals,response,header,name,format,format,new,date,value,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher dateValue(final String name, final long value);1453389604;Assert the primary value of the named response header as a date String,_using the preferred date format described in RFC 7231._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value._@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>_@since 4.2;public ResultMatcher dateValue(final String name, final long value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				SimpleDateFormat format = new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss zzz", Locale.US)__				format.setTimeZone(TimeZone.getTimeZone("GMT"))__				String formatted = format.format(new Date(value))__				MockHttpServletResponse response = result.getResponse()__				assertTrue("Response does not contain header " + name, response.containsHeader(name))__				assertEquals("Response header " + name, formatted, response.getHeader(name))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,date,string,using,the,preferred,date,format,described,in,rfc,7231,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a,since,4,2;public,result,matcher,date,value,final,string,name,final,long,value,return,new,result,matcher,override,public,void,match,mvc,result,result,simple,date,format,format,new,simple,date,format,eee,dd,mmm,yyyy,hh,mm,ss,zzz,locale,us,format,set,time,zone,time,zone,get,time,zone,gmt,string,formatted,format,format,new,date,value,mock,http,servlet,response,response,result,get,response,assert,true,response,does,not,contain,header,name,response,contains,header,name,assert,equals,response,header,name,formatted,response,get,header,name
HeaderResultMatchers -> public ResultMatcher dateValue(final String name, final long value);1453393183;Assert the primary value of the named response header as a date String,_using the preferred date format described in RFC 7231._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value._@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>_@since 4.2;public ResultMatcher dateValue(final String name, final long value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				SimpleDateFormat format = new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss zzz", Locale.US)__				format.setTimeZone(TimeZone.getTimeZone("GMT"))__				String formatted = format.format(new Date(value))__				MockHttpServletResponse response = result.getResponse()__				assertTrue("Response does not contain header " + name, response.containsHeader(name))__				assertEquals("Response header " + name, formatted, response.getHeader(name))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,date,string,using,the,preferred,date,format,described,in,rfc,7231,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a,since,4,2;public,result,matcher,date,value,final,string,name,final,long,value,return,new,result,matcher,override,public,void,match,mvc,result,result,simple,date,format,format,new,simple,date,format,eee,dd,mmm,yyyy,hh,mm,ss,zzz,locale,us,format,set,time,zone,time,zone,get,time,zone,gmt,string,formatted,format,format,new,date,value,mock,http,servlet,response,response,result,get,response,assert,true,response,does,not,contain,header,name,response,contains,header,name,assert,equals,response,header,name,formatted,response,get,header,name
HeaderResultMatchers -> public ResultMatcher dateValue(final String name, final long value);1456838309;Assert the primary value of the named response header as a date String,_using the preferred date format described in RFC 7231._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value._@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>_@since 4.2;public ResultMatcher dateValue(final String name, final long value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				SimpleDateFormat format = new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss zzz", Locale.US)__				format.setTimeZone(TimeZone.getTimeZone("GMT"))__				String formatted = format.format(new Date(value))__				MockHttpServletResponse response = result.getResponse()__				assertTrue("Response does not contain header " + name, response.containsHeader(name))__				assertEquals("Response header " + name, formatted, response.getHeader(name))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,date,string,using,the,preferred,date,format,described,in,rfc,7231,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a,since,4,2;public,result,matcher,date,value,final,string,name,final,long,value,return,new,result,matcher,override,public,void,match,mvc,result,result,simple,date,format,format,new,simple,date,format,eee,dd,mmm,yyyy,hh,mm,ss,zzz,locale,us,format,set,time,zone,time,zone,get,time,zone,gmt,string,formatted,format,format,new,date,value,mock,http,servlet,response,response,result,get,response,assert,true,response,does,not,contain,header,name,response,contains,header,name,assert,equals,response,header,name,formatted,response,get,header,name
HeaderResultMatchers -> public ResultMatcher dateValue(final String name, final long value);1493235170;Assert the primary value of the named response header as a date String,_using the preferred date format described in RFC 7231._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value._@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>_@since 4.2;public ResultMatcher dateValue(final String name, final long value) {_		return result -> {_			SimpleDateFormat format = new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss zzz", Locale.US)__			format.setTimeZone(TimeZone.getTimeZone("GMT"))__			String formatted = format.format(new Date(value))__			MockHttpServletResponse response = result.getResponse()__			assertTrue("Response does not contain header '" + name + "'", response.containsHeader(name))__			assertEquals("Response header '" + name + "'", formatted, response.getHeader(name))__		}__	};assert,the,primary,value,of,the,named,response,header,as,a,date,string,using,the,preferred,date,format,described,in,rfc,7231,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a,since,4,2;public,result,matcher,date,value,final,string,name,final,long,value,return,result,simple,date,format,format,new,simple,date,format,eee,dd,mmm,yyyy,hh,mm,ss,zzz,locale,us,format,set,time,zone,time,zone,get,time,zone,gmt,string,formatted,format,format,new,date,value,mock,http,servlet,response,response,result,get,response,assert,true,response,does,not,contain,header,name,response,contains,header,name,assert,equals,response,header,name,formatted,response,get,header,name
HeaderResultMatchers -> public ResultMatcher dateValue(final String name, final long value);1496955179;Assert the primary value of the named response header as a date String,_using the preferred date format described in RFC 7231._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value._@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>_@since 4.2;public ResultMatcher dateValue(final String name, final long value) {_		return result -> {_			SimpleDateFormat format = new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss zzz", Locale.US)__			format.setTimeZone(TimeZone.getTimeZone("GMT"))__			String formatted = format.format(new Date(value))__			MockHttpServletResponse response = result.getResponse()__			assertTrue("Response does not contain header '" + name + "'", response.containsHeader(name))__			assertEquals("Response header '" + name + "'", formatted, response.getHeader(name))__		}__	};assert,the,primary,value,of,the,named,response,header,as,a,date,string,using,the,preferred,date,format,described,in,rfc,7231,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a,since,4,2;public,result,matcher,date,value,final,string,name,final,long,value,return,result,simple,date,format,format,new,simple,date,format,eee,dd,mmm,yyyy,hh,mm,ss,zzz,locale,us,format,set,time,zone,time,zone,get,time,zone,gmt,string,formatted,format,format,new,date,value,mock,http,servlet,response,response,result,get,response,assert,true,response,does,not,contain,header,name,response,contains,header,name,assert,equals,response,header,name,formatted,response,get,header,name
HeaderResultMatchers -> public ResultMatcher dateValue(final String name, final long value);1516833555;Assert the primary value of the named response header as a date String,_using the preferred date format described in RFC 7231._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value._@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>_@since 4.2;public ResultMatcher dateValue(final String name, final long value) {_		return result -> {_			SimpleDateFormat format = new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss zzz", Locale.US)__			format.setTimeZone(TimeZone.getTimeZone("GMT"))__			String formatted = format.format(new Date(value))__			MockHttpServletResponse response = result.getResponse()__			assertTrue("Response does not contain header '" + name + "'", response.containsHeader(name))__			assertEquals("Response header '" + name + "'", formatted, response.getHeader(name))__		}__	};assert,the,primary,value,of,the,named,response,header,as,a,date,string,using,the,preferred,date,format,described,in,rfc,7231,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a,since,4,2;public,result,matcher,date,value,final,string,name,final,long,value,return,result,simple,date,format,format,new,simple,date,format,eee,dd,mmm,yyyy,hh,mm,ss,zzz,locale,us,format,set,time,zone,time,zone,get,time,zone,gmt,string,formatted,format,format,new,date,value,mock,http,servlet,response,response,result,get,response,assert,true,response,does,not,contain,header,name,response,contains,header,name,assert,equals,response,header,name,formatted,response,get,header,name
HeaderResultMatchers -> public ResultMatcher dateValue(final String name, final long value);1516983894;Assert the primary value of the named response header as a date String,_using the preferred date format described in RFC 7231._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value._@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>_@since 4.2;public ResultMatcher dateValue(final String name, final long value) {_		return result -> {_			SimpleDateFormat format = new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss zzz", Locale.US)__			format.setTimeZone(TimeZone.getTimeZone("GMT"))__			String formatted = format.format(new Date(value))__			MockHttpServletResponse response = result.getResponse()__			assertTrue("Response does not contain header '" + name + "'", response.containsHeader(name))__			assertEquals("Response header '" + name + "'", formatted, response.getHeader(name))__		}__	};assert,the,primary,value,of,the,named,response,header,as,a,date,string,using,the,preferred,date,format,described,in,rfc,7231,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a,since,4,2;public,result,matcher,date,value,final,string,name,final,long,value,return,result,simple,date,format,format,new,simple,date,format,eee,dd,mmm,yyyy,hh,mm,ss,zzz,locale,us,format,set,time,zone,time,zone,get,time,zone,gmt,string,formatted,format,format,new,date,value,mock,http,servlet,response,response,result,get,response,assert,true,response,does,not,contain,header,name,response,contains,header,name,assert,equals,response,header,name,formatted,response,get,header,name
HeaderResultMatchers -> public ResultMatcher dateValue(final String name, final long value);1530174524;Assert the primary value of the named response header as a date String,_using the preferred date format described in RFC 7231._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value._@since 4.2_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;public ResultMatcher dateValue(final String name, final long value) {_		return result -> {_			SimpleDateFormat format = new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss zzz", Locale.US)__			format.setTimeZone(TimeZone.getTimeZone("GMT"))__			String formatted = format.format(new Date(value))__			MockHttpServletResponse response = result.getResponse()__			assertTrue("Response does not contain header '" + name + "'", response.containsHeader(name))__			assertEquals("Response header '" + name + "'", formatted, response.getHeader(name))__		}__	};assert,the,primary,value,of,the,named,response,header,as,a,date,string,using,the,preferred,date,format,described,in,rfc,7231,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value,since,4,2,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;public,result,matcher,date,value,final,string,name,final,long,value,return,result,simple,date,format,format,new,simple,date,format,eee,dd,mmm,yyyy,hh,mm,ss,zzz,locale,us,format,set,time,zone,time,zone,get,time,zone,gmt,string,formatted,format,format,new,date,value,mock,http,servlet,response,response,result,get,response,assert,true,response,does,not,contain,header,name,response,contains,header,name,assert,equals,response,header,name,formatted,response,get,header,name
HeaderResultMatchers -> public ResultMatcher dateValue(final String name, final long value);1530174524;Assert the primary value of the named response header as a date String,_using the preferred date format described in RFC 7231._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value._@since 4.2_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;public ResultMatcher dateValue(final String name, final long value) {_		return result -> {_			SimpleDateFormat format = new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss zzz", Locale.US)__			format.setTimeZone(TimeZone.getTimeZone("GMT"))__			String formatted = format.format(new Date(value))__			MockHttpServletResponse response = result.getResponse()__			assertTrue("Response does not contain header '" + name + "'", response.containsHeader(name))__			assertEquals("Response header '" + name + "'", formatted, response.getHeader(name))__		}__	};assert,the,primary,value,of,the,named,response,header,as,a,date,string,using,the,preferred,date,format,described,in,rfc,7231,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value,since,4,2,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;public,result,matcher,date,value,final,string,name,final,long,value,return,result,simple,date,format,format,new,simple,date,format,eee,dd,mmm,yyyy,hh,mm,ss,zzz,locale,us,format,set,time,zone,time,zone,get,time,zone,gmt,string,formatted,format,format,new,date,value,mock,http,servlet,response,response,result,get,response,assert,true,response,does,not,contain,header,name,response,contains,header,name,assert,equals,response,header,name,formatted,response,get,header,name
HeaderResultMatchers -> public ResultMatcher dateValue(final String name, final long value);1539373302;Assert the primary value of the named response header parsed into a date_using the preferred date format described in RFC 7231._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value._@since 4.2_@see <a href="https://tools.ietf.org/html/rfc7231#section-7.1.1.1">Section 7.1.1.1 of RFC 7231</a>;public ResultMatcher dateValue(final String name, final long value) {_		return result -> {_			MockHttpServletResponse response = result.getResponse()__			String headerValue = response.getHeader(name)__			assertNotNull("Response does not contain header '" + name + "'", headerValue)___			HttpHeaders headers = new HttpHeaders()__			headers.setDate("expected", value)__			headers.set("actual", headerValue)___			assertEquals("Response header '" + name + "'='" + headerValue + "' " +_							"does not match expected value '" + headers.getFirst("expected") + "'",_					headers.getFirstDate("expected"), headers.getFirstDate("actual"))__		}__	};assert,the,primary,value,of,the,named,response,header,parsed,into,a,date,using,the,preferred,date,format,described,in,rfc,7231,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value,since,4,2,see,a,href,https,tools,ietf,org,html,rfc7231,section,7,1,1,1,section,7,1,1,1,of,rfc,7231,a;public,result,matcher,date,value,final,string,name,final,long,value,return,result,mock,http,servlet,response,response,result,get,response,string,header,value,response,get,header,name,assert,not,null,response,does,not,contain,header,name,header,value,http,headers,headers,new,http,headers,headers,set,date,expected,value,headers,set,actual,header,value,assert,equals,response,header,name,header,value,does,not,match,expected,value,headers,get,first,expected,headers,get,first,date,expected,headers,get,first,date,actual
HeaderResultMatchers -> public <T> ResultMatcher stringValues(final String name, final Matcher<Iterable<String>> matcher);1453393183;Assert the values of the response header with the given Hamcrest_Iterable {@link Matcher}._@since 4.3;public <T> ResultMatcher stringValues(final String name, final Matcher<Iterable<String>> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				List<String> values = result.getResponse().getHeaders(name)__				assertThat("Response header " + name, values, matcher)__			}_		}__	};assert,the,values,of,the,response,header,with,the,given,hamcrest,iterable,link,matcher,since,4,3;public,t,result,matcher,string,values,final,string,name,final,matcher,iterable,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,list,string,values,result,get,response,get,headers,name,assert,that,response,header,name,values,matcher
HeaderResultMatchers -> public <T> ResultMatcher stringValues(final String name, final Matcher<Iterable<String>> matcher);1456838309;Assert the values of the response header with the given Hamcrest_Iterable {@link Matcher}._@since 4.3;public <T> ResultMatcher stringValues(final String name, final Matcher<Iterable<String>> matcher) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				List<String> values = result.getResponse().getHeaders(name)__				assertThat("Response header " + name, values, matcher)__			}_		}__	};assert,the,values,of,the,response,header,with,the,given,hamcrest,iterable,link,matcher,since,4,3;public,t,result,matcher,string,values,final,string,name,final,matcher,iterable,string,matcher,return,new,result,matcher,override,public,void,match,mvc,result,result,list,string,values,result,get,response,get,headers,name,assert,that,response,header,name,values,matcher
HeaderResultMatchers -> public <T> ResultMatcher stringValues(final String name, final Matcher<Iterable<String>> matcher);1493235170;Assert the values of the response header with the given Hamcrest_Iterable {@link Matcher}._@since 4.3;public <T> ResultMatcher stringValues(final String name, final Matcher<Iterable<String>> matcher) {_		return result -> {_			List<String> values = result.getResponse().getHeaders(name)__			assertThat("Response header '" + name + "'", values, matcher)__		}__	};assert,the,values,of,the,response,header,with,the,given,hamcrest,iterable,link,matcher,since,4,3;public,t,result,matcher,string,values,final,string,name,final,matcher,iterable,string,matcher,return,result,list,string,values,result,get,response,get,headers,name,assert,that,response,header,name,values,matcher
HeaderResultMatchers -> public <T> ResultMatcher stringValues(final String name, final Matcher<Iterable<String>> matcher);1496955179;Assert the values of the response header with the given Hamcrest_Iterable {@link Matcher}._@since 4.3;public <T> ResultMatcher stringValues(final String name, final Matcher<Iterable<String>> matcher) {_		return result -> {_			List<String> values = result.getResponse().getHeaders(name)__			assertThat("Response header '" + name + "'", values, matcher)__		}__	};assert,the,values,of,the,response,header,with,the,given,hamcrest,iterable,link,matcher,since,4,3;public,t,result,matcher,string,values,final,string,name,final,matcher,iterable,string,matcher,return,result,list,string,values,result,get,response,get,headers,name,assert,that,response,header,name,values,matcher
HeaderResultMatchers -> public <T> ResultMatcher stringValues(final String name, final Matcher<Iterable<String>> matcher);1516833555;Assert the values of the response header with the given Hamcrest_Iterable {@link Matcher}._@since 4.3;public <T> ResultMatcher stringValues(final String name, final Matcher<Iterable<String>> matcher) {_		return result -> {_			List<String> values = result.getResponse().getHeaders(name)__			assertThat("Response header '" + name + "'", values, matcher)__		}__	};assert,the,values,of,the,response,header,with,the,given,hamcrest,iterable,link,matcher,since,4,3;public,t,result,matcher,string,values,final,string,name,final,matcher,iterable,string,matcher,return,result,list,string,values,result,get,response,get,headers,name,assert,that,response,header,name,values,matcher
HeaderResultMatchers -> public <T> ResultMatcher stringValues(final String name, final Matcher<Iterable<String>> matcher);1516983894;Assert the values of the response header with the given Hamcrest_Iterable {@link Matcher}._@since 4.3;public <T> ResultMatcher stringValues(final String name, final Matcher<Iterable<String>> matcher) {_		return result -> {_			List<String> values = result.getResponse().getHeaders(name)__			assertThat("Response header '" + name + "'", values, matcher)__		}__	};assert,the,values,of,the,response,header,with,the,given,hamcrest,iterable,link,matcher,since,4,3;public,t,result,matcher,string,values,final,string,name,final,matcher,iterable,string,matcher,return,result,list,string,values,result,get,response,get,headers,name,assert,that,response,header,name,values,matcher
HeaderResultMatchers -> public <T> ResultMatcher stringValues(final String name, final Matcher<Iterable<String>> matcher);1530174524;Assert the values of the response header with the given Hamcrest_Iterable {@link Matcher}._@since 4.3;public <T> ResultMatcher stringValues(final String name, final Matcher<Iterable<String>> matcher) {_		return result -> {_			List<String> values = result.getResponse().getHeaders(name)__			assertThat("Response header '" + name + "'", values, matcher)__		}__	};assert,the,values,of,the,response,header,with,the,given,hamcrest,iterable,link,matcher,since,4,3;public,t,result,matcher,string,values,final,string,name,final,matcher,iterable,string,matcher,return,result,list,string,values,result,get,response,get,headers,name,assert,that,response,header,name,values,matcher
HeaderResultMatchers -> public <T> ResultMatcher stringValues(final String name, final Matcher<Iterable<String>> matcher);1530174524;Assert the values of the response header with the given Hamcrest_Iterable {@link Matcher}._@since 4.3;public <T> ResultMatcher stringValues(final String name, final Matcher<Iterable<String>> matcher) {_		return result -> {_			List<String> values = result.getResponse().getHeaders(name)__			assertThat("Response header '" + name + "'", values, matcher)__		}__	};assert,the,values,of,the,response,header,with,the,given,hamcrest,iterable,link,matcher,since,4,3;public,t,result,matcher,string,values,final,string,name,final,matcher,iterable,string,matcher,return,result,list,string,values,result,get,response,get,headers,name,assert,that,response,header,name,values,matcher
HeaderResultMatchers -> public <T> ResultMatcher stringValues(final String name, final Matcher<Iterable<String>> matcher);1539373302;Assert the values of the response header with the given Hamcrest_Iterable {@link Matcher}._@since 4.3;public <T> ResultMatcher stringValues(final String name, final Matcher<Iterable<String>> matcher) {_		return result -> {_			List<String> values = result.getResponse().getHeaders(name)__			assertThat("Response header '" + name + "'", values, matcher)__		}__	};assert,the,values,of,the,response,header,with,the,given,hamcrest,iterable,link,matcher,since,4,3;public,t,result,matcher,string,values,final,string,name,final,matcher,iterable,string,matcher,return,result,list,string,values,result,get,response,get,headers,name,assert,that,response,header,name,values,matcher
HeaderResultMatchers -> public ResultMatcher stringValues(final String name, final String... values);1453393183;Assert the values of the response header as String values._@since 4.3;public ResultMatcher stringValues(final String name, final String... values) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				List<Object> actual = result.getResponse().getHeaderValues(name)__				assertEquals("Response header " + name, Arrays.asList(values), actual)__			}_		}__	};assert,the,values,of,the,response,header,as,string,values,since,4,3;public,result,matcher,string,values,final,string,name,final,string,values,return,new,result,matcher,override,public,void,match,mvc,result,result,list,object,actual,result,get,response,get,header,values,name,assert,equals,response,header,name,arrays,as,list,values,actual
HeaderResultMatchers -> public ResultMatcher stringValues(final String name, final String... values);1456838309;Assert the values of the response header as String values._@since 4.3;public ResultMatcher stringValues(final String name, final String... values) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				List<Object> actual = result.getResponse().getHeaderValues(name)__				assertEquals("Response header " + name, Arrays.asList(values), actual)__			}_		}__	};assert,the,values,of,the,response,header,as,string,values,since,4,3;public,result,matcher,string,values,final,string,name,final,string,values,return,new,result,matcher,override,public,void,match,mvc,result,result,list,object,actual,result,get,response,get,header,values,name,assert,equals,response,header,name,arrays,as,list,values,actual
HeaderResultMatchers -> public ResultMatcher stringValues(final String name, final String... values);1493235170;Assert the values of the response header as String values._@since 4.3;public ResultMatcher stringValues(final String name, final String... values) {_		return result -> {_			List<Object> actual = result.getResponse().getHeaderValues(name)__			assertEquals("Response header '" + name + "'", Arrays.asList(values), actual)__		}__	};assert,the,values,of,the,response,header,as,string,values,since,4,3;public,result,matcher,string,values,final,string,name,final,string,values,return,result,list,object,actual,result,get,response,get,header,values,name,assert,equals,response,header,name,arrays,as,list,values,actual
HeaderResultMatchers -> public ResultMatcher stringValues(final String name, final String... values);1496955179;Assert the values of the response header as String values._@since 4.3;public ResultMatcher stringValues(final String name, final String... values) {_		return result -> {_			List<Object> actual = result.getResponse().getHeaderValues(name)__			assertEquals("Response header '" + name + "'", Arrays.asList(values), actual)__		}__	};assert,the,values,of,the,response,header,as,string,values,since,4,3;public,result,matcher,string,values,final,string,name,final,string,values,return,result,list,object,actual,result,get,response,get,header,values,name,assert,equals,response,header,name,arrays,as,list,values,actual
HeaderResultMatchers -> public ResultMatcher stringValues(final String name, final String... values);1516833555;Assert the values of the response header as String values._@since 4.3;public ResultMatcher stringValues(final String name, final String... values) {_		return result -> {_			List<Object> actual = result.getResponse().getHeaderValues(name)__			assertEquals("Response header '" + name + "'", Arrays.asList(values), actual)__		}__	};assert,the,values,of,the,response,header,as,string,values,since,4,3;public,result,matcher,string,values,final,string,name,final,string,values,return,result,list,object,actual,result,get,response,get,header,values,name,assert,equals,response,header,name,arrays,as,list,values,actual
HeaderResultMatchers -> public ResultMatcher stringValues(final String name, final String... values);1516983894;Assert the values of the response header as String values._@since 4.3;public ResultMatcher stringValues(final String name, final String... values) {_		return result -> {_			List<Object> actual = result.getResponse().getHeaderValues(name)__			assertEquals("Response header '" + name + "'", Arrays.asList(values), actual)__		}__	};assert,the,values,of,the,response,header,as,string,values,since,4,3;public,result,matcher,string,values,final,string,name,final,string,values,return,result,list,object,actual,result,get,response,get,header,values,name,assert,equals,response,header,name,arrays,as,list,values,actual
HeaderResultMatchers -> public ResultMatcher stringValues(final String name, final String... values);1530174524;Assert the values of the response header as String values._@since 4.3;public ResultMatcher stringValues(final String name, final String... values) {_		return result -> {_			List<Object> actual = result.getResponse().getHeaderValues(name)__			assertEquals("Response header '" + name + "'", Arrays.asList(values), actual)__		}__	};assert,the,values,of,the,response,header,as,string,values,since,4,3;public,result,matcher,string,values,final,string,name,final,string,values,return,result,list,object,actual,result,get,response,get,header,values,name,assert,equals,response,header,name,arrays,as,list,values,actual
HeaderResultMatchers -> public ResultMatcher stringValues(final String name, final String... values);1530174524;Assert the values of the response header as String values._@since 4.3;public ResultMatcher stringValues(final String name, final String... values) {_		return result -> {_			List<Object> actual = result.getResponse().getHeaderValues(name)__			assertEquals("Response header '" + name + "'", Arrays.asList(values), actual)__		}__	};assert,the,values,of,the,response,header,as,string,values,since,4,3;public,result,matcher,string,values,final,string,name,final,string,values,return,result,list,object,actual,result,get,response,get,header,values,name,assert,equals,response,header,name,arrays,as,list,values,actual
HeaderResultMatchers -> public ResultMatcher stringValues(final String name, final String... values);1539373302;Assert the values of the response header as String values._@since 4.3;public ResultMatcher stringValues(final String name, final String... values) {_		return result -> {_			List<Object> actual = result.getResponse().getHeaderValues(name)__			assertEquals("Response header '" + name + "'", Arrays.asList(values), actual)__		}__	};assert,the,values,of,the,response,header,as,string,values,since,4,3;public,result,matcher,string,values,final,string,name,final,string,values,return,result,list,object,actual,result,get,response,get,header,values,name,assert,equals,response,header,name,arrays,as,list,values,actual
HeaderResultMatchers -> public ResultMatcher longValue(final String name, final long value);1383669853;Assert the primary value of the named response header as a {@code long}.__<p>The {@link ResultMatcher} returned by this method throws an {@link AssertionError}_if the response does not contain the specified header, or if the supplied_{@code value} does not match the primary value.;public ResultMatcher longValue(final String name, final long value) {_		return new ResultMatcher() {__			@Override_			public void match(MvcResult result) {_				assertTrue("Response does not contain header " + name, result.getResponse().containsHeader(name))__				assertEquals("Response header " + name, value, Long.parseLong(result.getResponse().getHeader(name)))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,code,long,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value;public,result,matcher,long,value,final,string,name,final,long,value,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,true,response,does,not,contain,header,name,result,get,response,contains,header,name,assert,equals,response,header,name,value,long,parse,long,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher longValue(final String name, final long value);1413848647;Assert the primary value of the named response header as a {@code long}.__<p>The {@link ResultMatcher} returned by this method throws an {@link AssertionError}_if the response does not contain the specified header, or if the supplied_{@code value} does not match the primary value.;public ResultMatcher longValue(final String name, final long value) {_		return new ResultMatcher() {__			@Override_			public void match(MvcResult result) {_				assertTrue("Response does not contain header " + name, result.getResponse().containsHeader(name))__				assertEquals("Response header " + name, value, Long.parseLong(result.getResponse().getHeader(name)))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,code,long,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value;public,result,matcher,long,value,final,string,name,final,long,value,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,true,response,does,not,contain,header,name,result,get,response,contains,header,name,assert,equals,response,header,name,value,long,parse,long,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher longValue(final String name, final long value);1427238287;Assert the primary value of the named response header as a {@code long}._<p>The {@link ResultMatcher} returned by this method throws an {@link AssertionError}_if the response does not contain the specified header, or if the supplied_{@code value} does not match the primary value.;public ResultMatcher longValue(final String name, final long value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertTrue("Response does not contain header " + name, result.getResponse().containsHeader(name))__				assertEquals("Response header " + name, value, Long.parseLong(result.getResponse().getHeader(name)))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,code,long,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value;public,result,matcher,long,value,final,string,name,final,long,value,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,true,response,does,not,contain,header,name,result,get,response,contains,header,name,assert,equals,response,header,name,value,long,parse,long,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher longValue(final String name, final long value);1437424890;Assert the primary value of the named response header as a {@code long}._<p>The {@link ResultMatcher} returned by this method throws an {@link AssertionError}_if the response does not contain the specified header, or if the supplied_{@code value} does not match the primary value.;public ResultMatcher longValue(final String name, final long value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertTrue("Response does not contain header " + name, result.getResponse().containsHeader(name))__				assertEquals("Response header " + name, value, Long.parseLong(result.getResponse().getHeader(name)))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,code,long,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value;public,result,matcher,long,value,final,string,name,final,long,value,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,true,response,does,not,contain,header,name,result,get,response,contains,header,name,assert,equals,response,header,name,value,long,parse,long,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher longValue(final String name, final long value);1437556964;Assert the primary value of the named response header as a {@code long}._<p>The {@link ResultMatcher} returned by this method throws an {@link AssertionError}_if the response does not contain the specified header, or if the supplied_{@code value} does not match the primary value.;public ResultMatcher longValue(final String name, final long value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertTrue("Response does not contain header " + name, result.getResponse().containsHeader(name))__				assertEquals("Response header " + name, value, Long.parseLong(result.getResponse().getHeader(name)))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,code,long,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value;public,result,matcher,long,value,final,string,name,final,long,value,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,true,response,does,not,contain,header,name,result,get,response,contains,header,name,assert,equals,response,header,name,value,long,parse,long,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher longValue(final String name, final long value);1453389604;Assert the primary value of the named response header as a {@code long}._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value.;public ResultMatcher longValue(final String name, final long value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				MockHttpServletResponse response = result.getResponse()__				assertTrue("Response does not contain header " + name, response.containsHeader(name))__				assertEquals("Response header " + name, value, Long.parseLong(response.getHeader(name)))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,code,long,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value;public,result,matcher,long,value,final,string,name,final,long,value,return,new,result,matcher,override,public,void,match,mvc,result,result,mock,http,servlet,response,response,result,get,response,assert,true,response,does,not,contain,header,name,response,contains,header,name,assert,equals,response,header,name,value,long,parse,long,response,get,header,name
HeaderResultMatchers -> public ResultMatcher longValue(final String name, final long value);1453393183;Assert the primary value of the named response header as a {@code long}._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value.;public ResultMatcher longValue(final String name, final long value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				MockHttpServletResponse response = result.getResponse()__				assertTrue("Response does not contain header " + name, response.containsHeader(name))__				assertEquals("Response header " + name, value, Long.parseLong(response.getHeader(name)))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,code,long,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value;public,result,matcher,long,value,final,string,name,final,long,value,return,new,result,matcher,override,public,void,match,mvc,result,result,mock,http,servlet,response,response,result,get,response,assert,true,response,does,not,contain,header,name,response,contains,header,name,assert,equals,response,header,name,value,long,parse,long,response,get,header,name
HeaderResultMatchers -> public ResultMatcher longValue(final String name, final long value);1456838309;Assert the primary value of the named response header as a {@code long}._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value.;public ResultMatcher longValue(final String name, final long value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				MockHttpServletResponse response = result.getResponse()__				assertTrue("Response does not contain header " + name, response.containsHeader(name))__				assertEquals("Response header " + name, value, Long.parseLong(response.getHeader(name)))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,code,long,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value;public,result,matcher,long,value,final,string,name,final,long,value,return,new,result,matcher,override,public,void,match,mvc,result,result,mock,http,servlet,response,response,result,get,response,assert,true,response,does,not,contain,header,name,response,contains,header,name,assert,equals,response,header,name,value,long,parse,long,response,get,header,name
HeaderResultMatchers -> public ResultMatcher longValue(final String name, final long value);1493235170;Assert the primary value of the named response header as a {@code long}._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value.;public ResultMatcher longValue(final String name, final long value) {_		return result -> {_			MockHttpServletResponse response = result.getResponse()__			assertTrue("Response does not contain header '" + name + "'", response.containsHeader(name))__			assertEquals("Response header '" + name + "'", value, Long.parseLong(response.getHeader(name)))__		}__	};assert,the,primary,value,of,the,named,response,header,as,a,code,long,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value;public,result,matcher,long,value,final,string,name,final,long,value,return,result,mock,http,servlet,response,response,result,get,response,assert,true,response,does,not,contain,header,name,response,contains,header,name,assert,equals,response,header,name,value,long,parse,long,response,get,header,name
HeaderResultMatchers -> public ResultMatcher longValue(final String name, final long value);1496955179;Assert the primary value of the named response header as a {@code long}._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value.;public ResultMatcher longValue(final String name, final long value) {_		return result -> {_			MockHttpServletResponse response = result.getResponse()__			assertTrue("Response does not contain header '" + name + "'", response.containsHeader(name))__			String headerValue = response.getHeader(name)__			if (headerValue != null) {_				assertEquals("Response header '" + name + "'", value, Long.parseLong(headerValue))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,code,long,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value;public,result,matcher,long,value,final,string,name,final,long,value,return,result,mock,http,servlet,response,response,result,get,response,assert,true,response,does,not,contain,header,name,response,contains,header,name,string,header,value,response,get,header,name,if,header,value,null,assert,equals,response,header,name,value,long,parse,long,header,value
HeaderResultMatchers -> public ResultMatcher longValue(final String name, final long value);1516833555;Assert the primary value of the named response header as a {@code long}._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value.;public ResultMatcher longValue(final String name, final long value) {_		return result -> {_			MockHttpServletResponse response = result.getResponse()__			assertTrue("Response does not contain header '" + name + "'", response.containsHeader(name))__			String headerValue = response.getHeader(name)__			if (headerValue != null) {_				assertEquals("Response header '" + name + "'", value, Long.parseLong(headerValue))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,code,long,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value;public,result,matcher,long,value,final,string,name,final,long,value,return,result,mock,http,servlet,response,response,result,get,response,assert,true,response,does,not,contain,header,name,response,contains,header,name,string,header,value,response,get,header,name,if,header,value,null,assert,equals,response,header,name,value,long,parse,long,header,value
HeaderResultMatchers -> public ResultMatcher longValue(final String name, final long value);1516983894;Assert the primary value of the named response header as a {@code long}._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value.;public ResultMatcher longValue(final String name, final long value) {_		return result -> {_			MockHttpServletResponse response = result.getResponse()__			assertTrue("Response does not contain header '" + name + "'", response.containsHeader(name))__			String headerValue = response.getHeader(name)__			if (headerValue != null) {_				assertEquals("Response header '" + name + "'", value, Long.parseLong(headerValue))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,code,long,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value;public,result,matcher,long,value,final,string,name,final,long,value,return,result,mock,http,servlet,response,response,result,get,response,assert,true,response,does,not,contain,header,name,response,contains,header,name,string,header,value,response,get,header,name,if,header,value,null,assert,equals,response,header,name,value,long,parse,long,header,value
HeaderResultMatchers -> public ResultMatcher longValue(final String name, final long value);1530174524;Assert the primary value of the named response header as a {@code long}._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value.;public ResultMatcher longValue(final String name, final long value) {_		return result -> {_			MockHttpServletResponse response = result.getResponse()__			assertTrue("Response does not contain header '" + name + "'", response.containsHeader(name))__			String headerValue = response.getHeader(name)__			if (headerValue != null) {_				assertEquals("Response header '" + name + "'", value, Long.parseLong(headerValue))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,code,long,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value;public,result,matcher,long,value,final,string,name,final,long,value,return,result,mock,http,servlet,response,response,result,get,response,assert,true,response,does,not,contain,header,name,response,contains,header,name,string,header,value,response,get,header,name,if,header,value,null,assert,equals,response,header,name,value,long,parse,long,header,value
HeaderResultMatchers -> public ResultMatcher longValue(final String name, final long value);1530174524;Assert the primary value of the named response header as a {@code long}._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value.;public ResultMatcher longValue(final String name, final long value) {_		return result -> {_			MockHttpServletResponse response = result.getResponse()__			assertTrue("Response does not contain header '" + name + "'", response.containsHeader(name))__			String headerValue = response.getHeader(name)__			if (headerValue != null) {_				assertEquals("Response header '" + name + "'", value, Long.parseLong(headerValue))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,code,long,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value;public,result,matcher,long,value,final,string,name,final,long,value,return,result,mock,http,servlet,response,response,result,get,response,assert,true,response,does,not,contain,header,name,response,contains,header,name,string,header,value,response,get,header,name,if,header,value,null,assert,equals,response,header,name,value,long,parse,long,header,value
HeaderResultMatchers -> public ResultMatcher longValue(final String name, final long value);1539373302;Assert the primary value of the named response header as a {@code long}._<p>The {@link ResultMatcher} returned by this method throws an_{@link AssertionError} if the response does not contain the specified_header, or if the supplied {@code value} does not match the primary value.;public ResultMatcher longValue(final String name, final long value) {_		return result -> {_			MockHttpServletResponse response = result.getResponse()__			assertTrue("Response does not contain header '" + name + "'", response.containsHeader(name))__			String headerValue = response.getHeader(name)__			if (headerValue != null) {_				assertEquals("Response header '" + name + "'", value, Long.parseLong(headerValue))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,code,long,p,the,link,result,matcher,returned,by,this,method,throws,an,link,assertion,error,if,the,response,does,not,contain,the,specified,header,or,if,the,supplied,code,value,does,not,match,the,primary,value;public,result,matcher,long,value,final,string,name,final,long,value,return,result,mock,http,servlet,response,response,result,get,response,assert,true,response,does,not,contain,header,name,response,contains,header,name,string,header,value,response,get,header,name,if,header,value,null,assert,equals,response,header,name,value,long,parse,long,header,value
HeaderResultMatchers -> protected HeaderResultMatchers();1383669853;Protected constructor._Use {@link MockMvcResultMatchers#header()}.;protected HeaderResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,header;protected,header,result,matchers
HeaderResultMatchers -> protected HeaderResultMatchers();1413848647;Protected constructor._Use {@link MockMvcResultMatchers#header()}.;protected HeaderResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,header;protected,header,result,matchers
HeaderResultMatchers -> protected HeaderResultMatchers();1427238287;Protected constructor._Use {@link MockMvcResultMatchers#header()}.;protected HeaderResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,header;protected,header,result,matchers
HeaderResultMatchers -> protected HeaderResultMatchers();1437424890;Protected constructor._Use {@link MockMvcResultMatchers#header()}.;protected HeaderResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,header;protected,header,result,matchers
HeaderResultMatchers -> protected HeaderResultMatchers();1437556964;Protected constructor._Use {@link MockMvcResultMatchers#header()}.;protected HeaderResultMatchers() {_	};protected,constructor,use,link,mock,mvc,result,matchers,header;protected,header,result,matchers
HeaderResultMatchers -> protected HeaderResultMatchers();1453389604;Protected constructor._See {@link MockMvcResultMatchers#header()}.;protected HeaderResultMatchers() {_	};protected,constructor,see,link,mock,mvc,result,matchers,header;protected,header,result,matchers
HeaderResultMatchers -> protected HeaderResultMatchers();1453393183;Protected constructor._See {@link MockMvcResultMatchers#header()}.;protected HeaderResultMatchers() {_	};protected,constructor,see,link,mock,mvc,result,matchers,header;protected,header,result,matchers
HeaderResultMatchers -> protected HeaderResultMatchers();1456838309;Protected constructor._See {@link MockMvcResultMatchers#header()}.;protected HeaderResultMatchers() {_	};protected,constructor,see,link,mock,mvc,result,matchers,header;protected,header,result,matchers
HeaderResultMatchers -> protected HeaderResultMatchers();1493235170;Protected constructor._See {@link MockMvcResultMatchers#header()}.;protected HeaderResultMatchers() {_	};protected,constructor,see,link,mock,mvc,result,matchers,header;protected,header,result,matchers
HeaderResultMatchers -> protected HeaderResultMatchers();1496955179;Protected constructor._See {@link MockMvcResultMatchers#header()}.;protected HeaderResultMatchers() {_	};protected,constructor,see,link,mock,mvc,result,matchers,header;protected,header,result,matchers
HeaderResultMatchers -> protected HeaderResultMatchers();1516833555;Protected constructor._See {@link MockMvcResultMatchers#header()}.;protected HeaderResultMatchers() {_	};protected,constructor,see,link,mock,mvc,result,matchers,header;protected,header,result,matchers
HeaderResultMatchers -> protected HeaderResultMatchers();1516983894;Protected constructor._See {@link MockMvcResultMatchers#header()}.;protected HeaderResultMatchers() {_	};protected,constructor,see,link,mock,mvc,result,matchers,header;protected,header,result,matchers
HeaderResultMatchers -> protected HeaderResultMatchers();1530174524;Protected constructor._See {@link MockMvcResultMatchers#header()}.;protected HeaderResultMatchers() {_	};protected,constructor,see,link,mock,mvc,result,matchers,header;protected,header,result,matchers
HeaderResultMatchers -> protected HeaderResultMatchers();1530174524;Protected constructor._See {@link MockMvcResultMatchers#header()}.;protected HeaderResultMatchers() {_	};protected,constructor,see,link,mock,mvc,result,matchers,header;protected,header,result,matchers
HeaderResultMatchers -> protected HeaderResultMatchers();1539373302;Protected constructor._See {@link MockMvcResultMatchers#header()}.;protected HeaderResultMatchers() {_	};protected,constructor,see,link,mock,mvc,result,matchers,header;protected,header,result,matchers
HeaderResultMatchers -> public ResultMatcher string(final String name, final String value);1383669853;Assert the primary value of the named response header as a {@link String}.;public ResultMatcher string(final String name, final String value) {_		return new ResultMatcher() {__			@Override_			public void match(MvcResult result) {_				assertEquals("Response header " + name, value, result.getResponse().getHeader(name))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,link,string;public,result,matcher,string,final,string,name,final,string,value,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,equals,response,header,name,value,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher string(final String name, final String value);1413848647;Assert the primary value of the named response header as a {@link String}.;public ResultMatcher string(final String name, final String value) {_		return new ResultMatcher() {__			@Override_			public void match(MvcResult result) {_				assertEquals("Response header " + name, value, result.getResponse().getHeader(name))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,link,string;public,result,matcher,string,final,string,name,final,string,value,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,equals,response,header,name,value,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher string(final String name, final String value);1427238287;Assert the primary value of the named response header as a {@link String}.;public ResultMatcher string(final String name, final String value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertEquals("Response header " + name, value, result.getResponse().getHeader(name))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,link,string;public,result,matcher,string,final,string,name,final,string,value,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,equals,response,header,name,value,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher string(final String name, final String value);1437424890;Assert the primary value of the named response header as a {@link String}.;public ResultMatcher string(final String name, final String value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertEquals("Response header " + name, value, result.getResponse().getHeader(name))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,link,string;public,result,matcher,string,final,string,name,final,string,value,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,equals,response,header,name,value,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher string(final String name, final String value);1437556964;Assert the primary value of the named response header as a {@link String}.;public ResultMatcher string(final String name, final String value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertEquals("Response header " + name, value, result.getResponse().getHeader(name))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,link,string;public,result,matcher,string,final,string,name,final,string,value,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,equals,response,header,name,value,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher string(final String name, final String value);1453389604;Assert the primary value of the named response header as a {@link String}.;public ResultMatcher string(final String name, final String value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertEquals("Response header " + name, value, result.getResponse().getHeader(name))__			}_		}__	};assert,the,primary,value,of,the,named,response,header,as,a,link,string;public,result,matcher,string,final,string,name,final,string,value,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,equals,response,header,name,value,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher string(final String name, final String value);1453393183;Assert the primary value of the response header as a String value.;public ResultMatcher string(final String name, final String value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertEquals("Response header " + name, result.getResponse().getHeader(name), value)__			}_		}__	};assert,the,primary,value,of,the,response,header,as,a,string,value;public,result,matcher,string,final,string,name,final,string,value,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,equals,response,header,name,result,get,response,get,header,name,value
HeaderResultMatchers -> public ResultMatcher string(final String name, final String value);1456838309;Assert the primary value of the response header as a String value.;public ResultMatcher string(final String name, final String value) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertEquals("Response header " + name, value, result.getResponse().getHeader(name))__			}_		}__	};assert,the,primary,value,of,the,response,header,as,a,string,value;public,result,matcher,string,final,string,name,final,string,value,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,equals,response,header,name,value,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher string(final String name, final String value);1493235170;Assert the primary value of the response header as a String value.;public ResultMatcher string(final String name, final String value) {_		return result -> assertEquals("Response header '" + name + "'", value, result.getResponse().getHeader(name))__	};assert,the,primary,value,of,the,response,header,as,a,string,value;public,result,matcher,string,final,string,name,final,string,value,return,result,assert,equals,response,header,name,value,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher string(final String name, final String value);1496955179;Assert the primary value of the response header as a String value.;public ResultMatcher string(final String name, final String value) {_		return result -> assertEquals("Response header '" + name + "'", value, result.getResponse().getHeader(name))__	};assert,the,primary,value,of,the,response,header,as,a,string,value;public,result,matcher,string,final,string,name,final,string,value,return,result,assert,equals,response,header,name,value,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher string(final String name, final String value);1516833555;Assert the primary value of the response header as a String value.;public ResultMatcher string(final String name, final String value) {_		return result -> assertEquals("Response header '" + name + "'", value, result.getResponse().getHeader(name))__	};assert,the,primary,value,of,the,response,header,as,a,string,value;public,result,matcher,string,final,string,name,final,string,value,return,result,assert,equals,response,header,name,value,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher string(final String name, final String value);1516983894;Assert the primary value of the response header as a String value.;public ResultMatcher string(final String name, final String value) {_		return result -> assertEquals("Response header '" + name + "'", value, result.getResponse().getHeader(name))__	};assert,the,primary,value,of,the,response,header,as,a,string,value;public,result,matcher,string,final,string,name,final,string,value,return,result,assert,equals,response,header,name,value,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher string(final String name, final String value);1530174524;Assert the primary value of the response header as a String value.;public ResultMatcher string(final String name, final String value) {_		return result -> assertEquals("Response header '" + name + "'", value, result.getResponse().getHeader(name))__	};assert,the,primary,value,of,the,response,header,as,a,string,value;public,result,matcher,string,final,string,name,final,string,value,return,result,assert,equals,response,header,name,value,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher string(final String name, final String value);1530174524;Assert the primary value of the response header as a String value.;public ResultMatcher string(final String name, final String value) {_		return result -> assertEquals("Response header '" + name + "'", value, result.getResponse().getHeader(name))__	};assert,the,primary,value,of,the,response,header,as,a,string,value;public,result,matcher,string,final,string,name,final,string,value,return,result,assert,equals,response,header,name,value,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher string(final String name, final String value);1539373302;Assert the primary value of the response header as a String value.;public ResultMatcher string(final String name, final String value) {_		return result -> assertEquals("Response header '" + name + "'", value, result.getResponse().getHeader(name))__	};assert,the,primary,value,of,the,response,header,as,a,string,value;public,result,matcher,string,final,string,name,final,string,value,return,result,assert,equals,response,header,name,value,result,get,response,get,header,name
HeaderResultMatchers -> public ResultMatcher exists(final String name);1516983894;Assert that the named response header exists._@since 5.0.3;public ResultMatcher exists(final String name) {_		return result -> assertTrue("Response should contain header '" + name + "'",_				result.getResponse().containsHeader(name))__	};assert,that,the,named,response,header,exists,since,5,0,3;public,result,matcher,exists,final,string,name,return,result,assert,true,response,should,contain,header,name,result,get,response,contains,header,name
HeaderResultMatchers -> public ResultMatcher exists(final String name);1530174524;Assert that the named response header exists._@since 5.0.3;public ResultMatcher exists(final String name) {_		return result -> assertTrue("Response should contain header '" + name + "'",_				result.getResponse().containsHeader(name))__	};assert,that,the,named,response,header,exists,since,5,0,3;public,result,matcher,exists,final,string,name,return,result,assert,true,response,should,contain,header,name,result,get,response,contains,header,name
HeaderResultMatchers -> public ResultMatcher exists(final String name);1530174524;Assert that the named response header exists._@since 5.0.3;public ResultMatcher exists(final String name) {_		return result -> assertTrue("Response should contain header '" + name + "'",_				result.getResponse().containsHeader(name))__	};assert,that,the,named,response,header,exists,since,5,0,3;public,result,matcher,exists,final,string,name,return,result,assert,true,response,should,contain,header,name,result,get,response,contains,header,name
HeaderResultMatchers -> public ResultMatcher exists(final String name);1539373302;Assert that the named response header exists._@since 5.0.3;public ResultMatcher exists(final String name) {_		return result -> assertTrue("Response should contain header '" + name + "'",_				result.getResponse().containsHeader(name))__	};assert,that,the,named,response,header,exists,since,5,0,3;public,result,matcher,exists,final,string,name,return,result,assert,true,response,should,contain,header,name,result,get,response,contains,header,name
HeaderResultMatchers -> public ResultMatcher doesNotExist(final String name);1383669853;Assert that the named response header does not exist._@since 4.0;public ResultMatcher doesNotExist(final String name) {_		return new ResultMatcher() {__			@Override_			public void match(MvcResult result) {_				assertTrue("Response should not contain header " + name, !result.getResponse().containsHeader(name))__			}_		}__	};assert,that,the,named,response,header,does,not,exist,since,4,0;public,result,matcher,does,not,exist,final,string,name,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,true,response,should,not,contain,header,name,result,get,response,contains,header,name
HeaderResultMatchers -> public ResultMatcher doesNotExist(final String name);1413848647;Assert that the named response header does not exist._@since 4.0;public ResultMatcher doesNotExist(final String name) {_		return new ResultMatcher() {__			@Override_			public void match(MvcResult result) {_				assertTrue("Response should not contain header " + name, !result.getResponse().containsHeader(name))__			}_		}__	};assert,that,the,named,response,header,does,not,exist,since,4,0;public,result,matcher,does,not,exist,final,string,name,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,true,response,should,not,contain,header,name,result,get,response,contains,header,name
HeaderResultMatchers -> public ResultMatcher doesNotExist(final String name);1427238287;Assert that the named response header does not exist._@since 4.0;public ResultMatcher doesNotExist(final String name) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertTrue("Response should not contain header " + name, !result.getResponse().containsHeader(name))__			}_		}__	};assert,that,the,named,response,header,does,not,exist,since,4,0;public,result,matcher,does,not,exist,final,string,name,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,true,response,should,not,contain,header,name,result,get,response,contains,header,name
HeaderResultMatchers -> public ResultMatcher doesNotExist(final String name);1437424890;Assert that the named response header does not exist._@since 4.0;public ResultMatcher doesNotExist(final String name) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertTrue("Response should not contain header " + name, !result.getResponse().containsHeader(name))__			}_		}__	};assert,that,the,named,response,header,does,not,exist,since,4,0;public,result,matcher,does,not,exist,final,string,name,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,true,response,should,not,contain,header,name,result,get,response,contains,header,name
HeaderResultMatchers -> public ResultMatcher doesNotExist(final String name);1437556964;Assert that the named response header does not exist._@since 4.0;public ResultMatcher doesNotExist(final String name) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertTrue("Response should not contain header " + name, !result.getResponse().containsHeader(name))__			}_		}__	};assert,that,the,named,response,header,does,not,exist,since,4,0;public,result,matcher,does,not,exist,final,string,name,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,true,response,should,not,contain,header,name,result,get,response,contains,header,name
HeaderResultMatchers -> public ResultMatcher doesNotExist(final String name);1453389604;Assert that the named response header does not exist._@since 4.0;public ResultMatcher doesNotExist(final String name) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertTrue("Response should not contain header " + name,_						!result.getResponse().containsHeader(name))__			}_		}__	};assert,that,the,named,response,header,does,not,exist,since,4,0;public,result,matcher,does,not,exist,final,string,name,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,true,response,should,not,contain,header,name,result,get,response,contains,header,name
HeaderResultMatchers -> public ResultMatcher doesNotExist(final String name);1453393183;Assert that the named response header does not exist._@since 4.0;public ResultMatcher doesNotExist(final String name) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertTrue("Response should not contain header " + name,_						!result.getResponse().containsHeader(name))__			}_		}__	};assert,that,the,named,response,header,does,not,exist,since,4,0;public,result,matcher,does,not,exist,final,string,name,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,true,response,should,not,contain,header,name,result,get,response,contains,header,name
HeaderResultMatchers -> public ResultMatcher doesNotExist(final String name);1456838309;Assert that the named response header does not exist._@since 4.0;public ResultMatcher doesNotExist(final String name) {_		return new ResultMatcher() {_			@Override_			public void match(MvcResult result) {_				assertTrue("Response should not contain header " + name,_						!result.getResponse().containsHeader(name))__			}_		}__	};assert,that,the,named,response,header,does,not,exist,since,4,0;public,result,matcher,does,not,exist,final,string,name,return,new,result,matcher,override,public,void,match,mvc,result,result,assert,true,response,should,not,contain,header,name,result,get,response,contains,header,name
HeaderResultMatchers -> public ResultMatcher doesNotExist(final String name);1493235170;Assert that the named response header does not exist._@since 4.0;public ResultMatcher doesNotExist(final String name) {_		return result -> assertTrue("Response should not contain header '" + name + "'",_				!result.getResponse().containsHeader(name))__	};assert,that,the,named,response,header,does,not,exist,since,4,0;public,result,matcher,does,not,exist,final,string,name,return,result,assert,true,response,should,not,contain,header,name,result,get,response,contains,header,name
HeaderResultMatchers -> public ResultMatcher doesNotExist(final String name);1496955179;Assert that the named response header does not exist._@since 4.0;public ResultMatcher doesNotExist(final String name) {_		return result -> assertTrue("Response should not contain header '" + name + "'",_				!result.getResponse().containsHeader(name))__	};assert,that,the,named,response,header,does,not,exist,since,4,0;public,result,matcher,does,not,exist,final,string,name,return,result,assert,true,response,should,not,contain,header,name,result,get,response,contains,header,name
HeaderResultMatchers -> public ResultMatcher doesNotExist(final String name);1516833555;Assert that the named response header does not exist._@since 4.0;public ResultMatcher doesNotExist(final String name) {_		return result -> assertTrue("Response should not contain header '" + name + "'",_				!result.getResponse().containsHeader(name))__	};assert,that,the,named,response,header,does,not,exist,since,4,0;public,result,matcher,does,not,exist,final,string,name,return,result,assert,true,response,should,not,contain,header,name,result,get,response,contains,header,name
HeaderResultMatchers -> public ResultMatcher doesNotExist(final String name);1516983894;Assert that the named response header does not exist._@since 4.0;public ResultMatcher doesNotExist(final String name) {_		return result -> assertTrue("Response should not contain header '" + name + "'",_				!result.getResponse().containsHeader(name))__	};assert,that,the,named,response,header,does,not,exist,since,4,0;public,result,matcher,does,not,exist,final,string,name,return,result,assert,true,response,should,not,contain,header,name,result,get,response,contains,header,name
HeaderResultMatchers -> public ResultMatcher doesNotExist(final String name);1530174524;Assert that the named response header does not exist._@since 4.0;public ResultMatcher doesNotExist(final String name) {_		return result -> assertTrue("Response should not contain header '" + name + "'",_				!result.getResponse().containsHeader(name))__	};assert,that,the,named,response,header,does,not,exist,since,4,0;public,result,matcher,does,not,exist,final,string,name,return,result,assert,true,response,should,not,contain,header,name,result,get,response,contains,header,name
HeaderResultMatchers -> public ResultMatcher doesNotExist(final String name);1530174524;Assert that the named response header does not exist._@since 4.0;public ResultMatcher doesNotExist(final String name) {_		return result -> assertTrue("Response should not contain header '" + name + "'",_				!result.getResponse().containsHeader(name))__	};assert,that,the,named,response,header,does,not,exist,since,4,0;public,result,matcher,does,not,exist,final,string,name,return,result,assert,true,response,should,not,contain,header,name,result,get,response,contains,header,name
HeaderResultMatchers -> public ResultMatcher doesNotExist(final String name);1539373302;Assert that the named response header does not exist._@since 4.0;public ResultMatcher doesNotExist(final String name) {_		return result -> assertTrue("Response should not contain header '" + name + "'",_				!result.getResponse().containsHeader(name))__	};assert,that,the,named,response,header,does,not,exist,since,4,0;public,result,matcher,does,not,exist,final,string,name,return,result,assert,true,response,should,not,contain,header,name,result,get,response,contains,header,name
