commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;public void setValue(@Nullable Object value) {     this.values.clear().     if (value != null) {         this.values.add(value).     } }
false;public;1;3;;public void addValue(Object value) {     this.values.add(value). }
false;public;1;3;;public void addValues(Collection<?> values) {     this.values.addAll(values). }
false;public;1;3;;public void addValueArray(Object values) {     CollectionUtils.mergeArrayIntoCollection(values, this.values). }
false;public;0;3;;public List<Object> getValues() {     return Collections.unmodifiableList(this.values). }
false;public;0;7;;public List<String> getStringValues() {     List<String> stringList = new ArrayList<>(this.values.size()).     for (Object value : this.values) {         stringList.add(value.toString()).     }     return Collections.unmodifiableList(stringList). }
false;public;0;4;;@Nullable public Object getValue() {     return (!this.values.isEmpty() ? this.values.get(0) : null). }
false;public;0;4;;@Nullable public String getStringValue() {     return (!this.values.isEmpty() ? String.valueOf(this.values.get(0)) : null). }
false;public;0;4;;@Override public String toString() {     return this.values.toString(). }
true;public,static;2;10;/**  * Find a HeaderValueHolder by name, ignoring casing.  * @param headers the Map of header names to HeaderValueHolders  * @param name the name of the desired header  * @return the corresponding HeaderValueHolder, or {@code null} if none found  */ ;/**  * Find a HeaderValueHolder by name, ignoring casing.  * @param headers the Map of header names to HeaderValueHolders  * @param name the name of the desired header  * @return the corresponding HeaderValueHolder, or {@code null} if none found  */ @Nullable public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name) {     Assert.notNull(name, "Header name must not be null").     for (String headerName : headers.keySet()) {         if (headerName.equalsIgnoreCase(name)) {             return headers.get(headerName).         }     }     return null. }
