# id;timestamp;commentText;codeText;commentWords;codeWords
HeaderValueHolder -> @Nullable 	public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name);1495868221;Find a HeaderValueHolder by name, ignoring casing._@param headers the Map of header names to HeaderValueHolders_@param name the name of the desired header_@return the corresponding HeaderValueHolder,_or {@code null} if none found;@Nullable_	public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name) {_		Assert.notNull(name, "Header name must not be null")__		for (String headerName : headers.keySet()) {_			if (headerName.equalsIgnoreCase(name)) {_				return headers.get(headerName)__			}_		}_		return null__	};find,a,header,value,holder,by,name,ignoring,casing,param,headers,the,map,of,header,names,to,header,value,holders,param,name,the,name,of,the,desired,header,return,the,corresponding,header,value,holder,or,code,null,if,none,found;nullable,public,static,header,value,holder,get,by,name,map,string,header,value,holder,headers,string,name,assert,not,null,name,header,name,must,not,be,null,for,string,header,name,headers,key,set,if,header,name,equals,ignore,case,name,return,headers,get,header,name,return,null
HeaderValueHolder -> @Nullable 	public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name);1496955179;Find a HeaderValueHolder by name, ignoring casing._@param headers the Map of header names to HeaderValueHolders_@param name the name of the desired header_@return the corresponding HeaderValueHolder,_or {@code null} if none found;@Nullable_	public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name) {_		Assert.notNull(name, "Header name must not be null")__		for (String headerName : headers.keySet()) {_			if (headerName.equalsIgnoreCase(name)) {_				return headers.get(headerName)__			}_		}_		return null__	};find,a,header,value,holder,by,name,ignoring,casing,param,headers,the,map,of,header,names,to,header,value,holders,param,name,the,name,of,the,desired,header,return,the,corresponding,header,value,holder,or,code,null,if,none,found;nullable,public,static,header,value,holder,get,by,name,map,string,header,value,holder,headers,string,name,assert,not,null,name,header,name,must,not,be,null,for,string,header,name,headers,key,set,if,header,name,equals,ignore,case,name,return,headers,get,header,name,return,null
HeaderValueHolder -> @Nullable 	public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name);1500448076;Find a HeaderValueHolder by name, ignoring casing._@param headers the Map of header names to HeaderValueHolders_@param name the name of the desired header_@return the corresponding HeaderValueHolder,_or {@code null} if none found;@Nullable_	public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name) {_		Assert.notNull(name, "Header name must not be null")__		for (String headerName : headers.keySet()) {_			if (headerName.equalsIgnoreCase(name)) {_				return headers.get(headerName)__			}_		}_		return null__	};find,a,header,value,holder,by,name,ignoring,casing,param,headers,the,map,of,header,names,to,header,value,holders,param,name,the,name,of,the,desired,header,return,the,corresponding,header,value,holder,or,code,null,if,none,found;nullable,public,static,header,value,holder,get,by,name,map,string,header,value,holder,headers,string,name,assert,not,null,name,header,name,must,not,be,null,for,string,header,name,headers,key,set,if,header,name,equals,ignore,case,name,return,headers,get,header,name,return,null
HeaderValueHolder -> @Nullable 	public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name);1537741670;Find a HeaderValueHolder by name, ignoring casing._@param headers the Map of header names to HeaderValueHolders_@param name the name of the desired header_@return the corresponding HeaderValueHolder, or {@code null} if none found;@Nullable_	public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name) {_		Assert.notNull(name, "Header name must not be null")__		for (String headerName : headers.keySet()) {_			if (headerName.equalsIgnoreCase(name)) {_				return headers.get(headerName)__			}_		}_		return null__	};find,a,header,value,holder,by,name,ignoring,casing,param,headers,the,map,of,header,names,to,header,value,holders,param,name,the,name,of,the,desired,header,return,the,corresponding,header,value,holder,or,code,null,if,none,found;nullable,public,static,header,value,holder,get,by,name,map,string,header,value,holder,headers,string,name,assert,not,null,name,header,name,must,not,be,null,for,string,header,name,headers,key,set,if,header,name,equals,ignore,case,name,return,headers,get,header,name,return,null
HeaderValueHolder -> public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name);1328020251;Find a HeaderValueHolder by name, ignoring casing._@param headers the Map of header names to HeaderValueHolders_@param name the name of the desired header_@return the corresponding HeaderValueHolder,_or <code>null</code> if none found;public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name) {_		Assert.notNull(name, "Header name must not be null")__		for (String headerName : headers.keySet()) {_			if (headerName.equalsIgnoreCase(name)) {_				return headers.get(headerName)__			}_		}_		return null__	};find,a,header,value,holder,by,name,ignoring,casing,param,headers,the,map,of,header,names,to,header,value,holders,param,name,the,name,of,the,desired,header,return,the,corresponding,header,value,holder,or,code,null,code,if,none,found;public,static,header,value,holder,get,by,name,map,string,header,value,holder,headers,string,name,assert,not,null,name,header,name,must,not,be,null,for,string,header,name,headers,key,set,if,header,name,equals,ignore,case,name,return,headers,get,header,name,return,null
HeaderValueHolder -> public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name);1356735495;Find a HeaderValueHolder by name, ignoring casing._@param headers the Map of header names to HeaderValueHolders_@param name the name of the desired header_@return the corresponding HeaderValueHolder,_or {@code null} if none found;public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name) {_		Assert.notNull(name, "Header name must not be null")__		for (String headerName : headers.keySet()) {_			if (headerName.equalsIgnoreCase(name)) {_				return headers.get(headerName)__			}_		}_		return null__	};find,a,header,value,holder,by,name,ignoring,casing,param,headers,the,map,of,header,names,to,header,value,holders,param,name,the,name,of,the,desired,header,return,the,corresponding,header,value,holder,or,code,null,if,none,found;public,static,header,value,holder,get,by,name,map,string,header,value,holder,headers,string,name,assert,not,null,name,header,name,must,not,be,null,for,string,header,name,headers,key,set,if,header,name,equals,ignore,case,name,return,headers,get,header,name,return,null
HeaderValueHolder -> public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name);1467730834;Find a HeaderValueHolder by name, ignoring casing._@param headers the Map of header names to HeaderValueHolders_@param name the name of the desired header_@return the corresponding HeaderValueHolder,_or {@code null} if none found;public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name) {_		Assert.notNull(name, "Header name must not be null")__		for (String headerName : headers.keySet()) {_			if (headerName.equalsIgnoreCase(name)) {_				return headers.get(headerName)__			}_		}_		return null__	};find,a,header,value,holder,by,name,ignoring,casing,param,headers,the,map,of,header,names,to,header,value,holders,param,name,the,name,of,the,desired,header,return,the,corresponding,header,value,holder,or,code,null,if,none,found;public,static,header,value,holder,get,by,name,map,string,header,value,holder,headers,string,name,assert,not,null,name,header,name,must,not,be,null,for,string,header,name,headers,key,set,if,header,name,equals,ignore,case,name,return,headers,get,header,name,return,null
HeaderValueHolder -> public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name);1490350021;Find a HeaderValueHolder by name, ignoring casing._@param headers the Map of header names to HeaderValueHolders_@param name the name of the desired header_@return the corresponding HeaderValueHolder,_or {@code null} if none found;public static HeaderValueHolder getByName(Map<String, HeaderValueHolder> headers, String name) {_		Assert.notNull(name, "Header name must not be null")__		for (String headerName : headers.keySet()) {_			if (headerName.equalsIgnoreCase(name)) {_				return headers.get(headerName)__			}_		}_		return null__	};find,a,header,value,holder,by,name,ignoring,casing,param,headers,the,map,of,header,names,to,header,value,holders,param,name,the,name,of,the,desired,header,return,the,corresponding,header,value,holder,or,code,null,if,none,found;public,static,header,value,holder,get,by,name,map,string,header,value,holder,headers,string,name,assert,not,null,name,header,name,must,not,be,null,for,string,header,name,headers,key,set,if,header,name,equals,ignore,case,name,return,headers,get,header,name,return,null
