# id;timestamp;commentText;codeText;commentWords;codeWords
ServletTestExecutionListener -> public void beforeTestMethod(TestContext testContext) throws Exception;1351363326;TODO [SPR-9864] Document overridden beforeTestMethod().__@see org.springframework.test.context.TestExecutionListener#beforeTestMethod(TestContext);public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};todo,spr,9864,document,overridden,before,test,method,see,org,springframework,test,context,test,execution,listener,before,test,method,test,context;public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> public void beforeTestMethod(TestContext testContext) throws Exception;1351375981;TODO [SPR-9864] Document overridden beforeTestMethod().__@see TestExecutionListener#beforeTestMethod(TestContext);public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};todo,spr,9864,document,overridden,before,test,method,see,test,execution,listener,before,test,method,test,context;public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> public void beforeTestMethod(TestContext testContext) throws Exception;1352571746;TODO [SPR-9864] Document overridden beforeTestMethod().__@see TestExecutionListener#beforeTestMethod(TestContext);public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};todo,spr,9864,document,overridden,before,test,method,see,test,execution,listener,before,test,method,test,context;public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> public void beforeTestMethod(TestContext testContext) throws Exception;1354573750;TODO [SPR-9864] Document overridden beforeTestMethod().__@see TestExecutionListener#beforeTestMethod(TestContext);public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};todo,spr,9864,document,overridden,before,test,method,see,test,execution,listener,before,test,method,test,context;public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> public void beforeTestMethod(TestContext testContext) throws Exception;1355187490;Sets up thread-local state before each test method via Spring Web's_{@link RequestContextHolder}.__@see TestExecutionListener#beforeTestMethod(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,before,each,test,method,via,spring,web,s,link,request,context,holder,see,test,execution,listener,before,test,method,test,context,see,set,up,request,context,if,necessary,test,context;public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> public void beforeTestMethod(TestContext testContext) throws Exception;1357119239;Sets up thread-local state before each test method via Spring Web's_{@link RequestContextHolder}.__@see TestExecutionListener#beforeTestMethod(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,before,each,test,method,via,spring,web,s,link,request,context,holder,see,test,execution,listener,before,test,method,test,context,see,set,up,request,context,if,necessary,test,context;public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> public void beforeTestMethod(TestContext testContext) throws Exception;1362408075;Sets up thread-local state before each test method via Spring Web's_{@link RequestContextHolder}.__@see TestExecutionListener#beforeTestMethod(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,before,each,test,method,via,spring,web,s,link,request,context,holder,see,test,execution,listener,before,test,method,test,context,see,set,up,request,context,if,necessary,test,context;public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> public void prepareTestInstance(TestContext testContext) throws Exception;1351363326;TODO [SPR-9864] Document overridden prepareTestInstance().__@see org.springframework.test.context.TestExecutionListener#prepareTestInstance(TestContext);public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};todo,spr,9864,document,overridden,prepare,test,instance,see,org,springframework,test,context,test,execution,listener,prepare,test,instance,test,context;public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> public void prepareTestInstance(TestContext testContext) throws Exception;1351375981;TODO [SPR-9864] Document overridden prepareTestInstance().__@see TestExecutionListener#prepareTestInstance(TestContext);public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};todo,spr,9864,document,overridden,prepare,test,instance,see,test,execution,listener,prepare,test,instance,test,context;public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> public void prepareTestInstance(TestContext testContext) throws Exception;1352571746;TODO [SPR-9864] Document overridden prepareTestInstance().__@see TestExecutionListener#prepareTestInstance(TestContext);public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};todo,spr,9864,document,overridden,prepare,test,instance,see,test,execution,listener,prepare,test,instance,test,context;public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> public void prepareTestInstance(TestContext testContext) throws Exception;1354573750;TODO [SPR-9864] Document overridden prepareTestInstance().__@see TestExecutionListener#prepareTestInstance(TestContext);public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};todo,spr,9864,document,overridden,prepare,test,instance,see,test,execution,listener,prepare,test,instance,test,context;public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> public void prepareTestInstance(TestContext testContext) throws Exception;1355187490;Sets up thread-local state during the <em>test instance preparation</em>_callback phase via Spring Web's {@link RequestContextHolder}.__@see TestExecutionListener#prepareTestInstance(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,during,the,em,test,instance,preparation,em,callback,phase,via,spring,web,s,link,request,context,holder,see,test,execution,listener,prepare,test,instance,test,context,see,set,up,request,context,if,necessary,test,context;public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> public void prepareTestInstance(TestContext testContext) throws Exception;1357119239;Sets up thread-local state during the <em>test instance preparation</em>_callback phase via Spring Web's {@link RequestContextHolder}.__@see TestExecutionListener#prepareTestInstance(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,during,the,em,test,instance,preparation,em,callback,phase,via,spring,web,s,link,request,context,holder,see,test,execution,listener,prepare,test,instance,test,context,see,set,up,request,context,if,necessary,test,context;public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> public void prepareTestInstance(TestContext testContext) throws Exception;1362408075;Sets up thread-local state during the <em>test instance preparation</em>_callback phase via Spring Web's {@link RequestContextHolder}.__@see TestExecutionListener#prepareTestInstance(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,during,the,em,test,instance,preparation,em,callback,phase,via,spring,web,s,link,request,context,holder,see,test,execution,listener,prepare,test,instance,test,context,see,set,up,request,context,if,necessary,test,context;public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> public void afterTestClass(TestContext testContext) throws Exception;1351363326;The default implementation is <em>empty</em>. Can be overridden by_subclasses as necessary.__@see org.springframework.test.context.TestExecutionListener#afterTestClass(TestContext);public void afterTestClass(TestContext testContext) throws Exception {_		_	};the,default,implementation,is,em,empty,em,can,be,overridden,by,subclasses,as,necessary,see,org,springframework,test,context,test,execution,listener,after,test,class,test,context;public,void,after,test,class,test,context,test,context,throws,exception
ServletTestExecutionListener -> public void afterTestClass(TestContext testContext) throws Exception;1351375981;The default implementation is <em>empty</em>. Can be overridden by_subclasses as necessary.__@see TestExecutionListener#afterTestClass(TestContext);public void afterTestClass(TestContext testContext) throws Exception {_		_	};the,default,implementation,is,em,empty,em,can,be,overridden,by,subclasses,as,necessary,see,test,execution,listener,after,test,class,test,context;public,void,after,test,class,test,context,test,context,throws,exception
ServletTestExecutionListener -> public void afterTestClass(TestContext testContext) throws Exception;1352571746;The default implementation is <em>empty</em>. Can be overridden by_subclasses as necessary.__@see TestExecutionListener#afterTestClass(TestContext);public void afterTestClass(TestContext testContext) throws Exception {_		_	};the,default,implementation,is,em,empty,em,can,be,overridden,by,subclasses,as,necessary,see,test,execution,listener,after,test,class,test,context;public,void,after,test,class,test,context,test,context,throws,exception
ServletTestExecutionListener -> @Override 	public final int getOrder();1408048216;Returns {@code 1000}.;@Override_	public final int getOrder() {_		return 1000__	};returns,code,1000;override,public,final,int,get,order,return,1000
ServletTestExecutionListener -> @Override 	public final int getOrder();1413848647;Returns {@code 1000}.;@Override_	public final int getOrder() {_		return 1000__	};returns,code,1000;override,public,final,int,get,order,return,1000
ServletTestExecutionListener -> @Override 	public final int getOrder();1437424889;Returns {@code 1000}.;@Override_	public final int getOrder() {_		return 1000__	};returns,code,1000;override,public,final,int,get,order,return,1000
ServletTestExecutionListener -> @Override 	public final int getOrder();1457626850;Returns {@code 1000}.;@Override_	public final int getOrder() {_		return 1000__	};returns,code,1000;override,public,final,int,get,order,return,1000
ServletTestExecutionListener -> @Override 	public final int getOrder();1458754760;Returns {@code 1000}.;@Override_	public final int getOrder() {_		return 1000__	};returns,code,1000;override,public,final,int,get,order,return,1000
ServletTestExecutionListener -> @Override 	public final int getOrder();1465306936;Returns {@code 1000}.;@Override_	public final int getOrder() {_		return 1000__	};returns,code,1000;override,public,final,int,get,order,return,1000
ServletTestExecutionListener -> @Override 	public final int getOrder();1468334463;Returns {@code 1000}.;@Override_	public final int getOrder() {_		return 1000__	};returns,code,1000;override,public,final,int,get,order,return,1000
ServletTestExecutionListener -> @Override 	public final int getOrder();1490602182;Returns {@code 1000}.;@Override_	public final int getOrder() {_		return 1000__	};returns,code,1000;override,public,final,int,get,order,return,1000
ServletTestExecutionListener -> public void beforeTestClass(TestContext testContext) throws Exception;1351363326;The default implementation is <em>empty</em>. Can be overridden by_subclasses as necessary.__@see org.springframework.test.context.TestExecutionListener#beforeTestClass(TestContext);public void beforeTestClass(TestContext testContext) throws Exception {_		_	};the,default,implementation,is,em,empty,em,can,be,overridden,by,subclasses,as,necessary,see,org,springframework,test,context,test,execution,listener,before,test,class,test,context;public,void,before,test,class,test,context,test,context,throws,exception
ServletTestExecutionListener -> public void beforeTestClass(TestContext testContext) throws Exception;1351375981;The default implementation is <em>empty</em>. Can be overridden by_subclasses as necessary.__@see TestExecutionListener#beforeTestClass(TestContext);public void beforeTestClass(TestContext testContext) throws Exception {_		_	};the,default,implementation,is,em,empty,em,can,be,overridden,by,subclasses,as,necessary,see,test,execution,listener,before,test,class,test,context;public,void,before,test,class,test,context,test,context,throws,exception
ServletTestExecutionListener -> public void beforeTestClass(TestContext testContext) throws Exception;1352571746;The default implementation is <em>empty</em>. Can be overridden by_subclasses as necessary.__@see TestExecutionListener#beforeTestClass(TestContext);public void beforeTestClass(TestContext testContext) throws Exception {_		_	};the,default,implementation,is,em,empty,em,can,be,overridden,by,subclasses,as,necessary,see,test,execution,listener,before,test,class,test,context;public,void,before,test,class,test,context,test,context,throws,exception
ServletTestExecutionListener -> @Override 	public void beforeTestMethod(TestContext testContext) throws Exception;1350692960;TODO [SPR-9864] Document overridden beforeTestMethod().__@see org.springframework.test.context.support.AbstractTestExecutionListener#beforeTestMethod(org.springframework.test.context.TestContext);@Override_	public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};todo,spr,9864,document,overridden,before,test,method,see,org,springframework,test,context,support,abstract,test,execution,listener,before,test,method,org,springframework,test,context,test,context;override,public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void beforeTestMethod(TestContext testContext) throws Exception;1356735495;Sets up thread-local state before each test method via Spring Web's_{@link RequestContextHolder}.__@see TestExecutionListener#beforeTestMethod(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,before,each,test,method,via,spring,web,s,link,request,context,holder,see,test,execution,listener,before,test,method,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void beforeTestMethod(TestContext testContext) throws Exception;1385412762;Sets up thread-local state before each test method via Spring Web's_{@link RequestContextHolder}.__@see TestExecutionListener#beforeTestMethod(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,before,each,test,method,via,spring,web,s,link,request,context,holder,see,test,execution,listener,before,test,method,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void beforeTestMethod(TestContext testContext) throws Exception;1386599754;Sets up thread-local state before each test method via Spring Web's_{@link RequestContextHolder}.__@see TestExecutionListener#beforeTestMethod(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,before,each,test,method,via,spring,web,s,link,request,context,holder,see,test,execution,listener,before,test,method,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void beforeTestMethod(TestContext testContext) throws Exception;1386715798;Sets up thread-local state before each test method via Spring Web's_{@link RequestContextHolder}, but only if the_{@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}.__@see TestExecutionListener#beforeTestMethod(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,before,each,test,method,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,before,test,method,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void beforeTestMethod(TestContext testContext) throws Exception;1386720004;Sets up thread-local state before each test method via Spring Web's_{@link RequestContextHolder}, but only if the_{@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}.__@see TestExecutionListener#beforeTestMethod(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,before,each,test,method,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,before,test,method,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void beforeTestMethod(TestContext testContext) throws Exception;1396124089;Sets up thread-local state before each test method via Spring Web's_{@link RequestContextHolder}, but only if the_{@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}.__@see TestExecutionListener#beforeTestMethod(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,before,each,test,method,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,before,test,method,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void beforeTestMethod(TestContext testContext) throws Exception;1408048216;Sets up thread-local state before each test method via Spring Web's_{@link RequestContextHolder}, but only if the_{@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}.__@see TestExecutionListener#beforeTestMethod(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,before,each,test,method,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,before,test,method,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void beforeTestMethod(TestContext testContext) throws Exception;1413848647;Sets up thread-local state before each test method via Spring Web's_{@link RequestContextHolder}, but only if the_{@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}.__@see TestExecutionListener#beforeTestMethod(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,before,each,test,method,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,before,test,method,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void beforeTestMethod(TestContext testContext) throws Exception;1437424889;Sets up thread-local state before each test method via Spring Web's_{@link RequestContextHolder}, but only if the_{@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}.__@see TestExecutionListener#beforeTestMethod(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,before,each,test,method,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,before,test,method,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void beforeTestMethod(TestContext testContext) throws Exception;1457626850;Sets up thread-local state before each test method via Spring Web's_{@link RequestContextHolder}, but only if the_{@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}.__@see TestExecutionListener#beforeTestMethod(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,before,each,test,method,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,before,test,method,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void beforeTestMethod(TestContext testContext) throws Exception;1458754760;Sets up thread-local state before each test method via Spring Web's_{@link RequestContextHolder}, but only if the_{@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}.__@see TestExecutionListener#beforeTestMethod(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,before,each,test,method,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,before,test,method,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void beforeTestMethod(TestContext testContext) throws Exception;1465306936;Sets up thread-local state before each test method via Spring Web's_{@link RequestContextHolder}, but only if the_{@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}._@see TestExecutionListener#beforeTestMethod(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,before,each,test,method,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,before,test,method,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void beforeTestMethod(TestContext testContext) throws Exception;1468334463;Sets up thread-local state before each test method via Spring Web's_{@link RequestContextHolder}, but only if the_{@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}._@see TestExecutionListener#beforeTestMethod(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,before,each,test,method,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,before,test,method,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void beforeTestMethod(TestContext testContext) throws Exception;1490602182;Sets up thread-local state before each test method via Spring Web's_{@link RequestContextHolder}, but only if the_{@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}._@see TestExecutionListener#beforeTestMethod(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void beforeTestMethod(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,before,each,test,method,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,before,test,method,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,before,test,method,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void prepareTestInstance(TestContext testContext) throws Exception;1350692960;TODO [SPR-9864] Document overridden prepareTestInstance().__@see org.springframework.test.context.support.AbstractTestExecutionListener#prepareTestInstance(org.springframework.test.context.TestContext);@Override_	public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};todo,spr,9864,document,overridden,prepare,test,instance,see,org,springframework,test,context,support,abstract,test,execution,listener,prepare,test,instance,org,springframework,test,context,test,context;override,public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void prepareTestInstance(TestContext testContext) throws Exception;1356735495;Sets up thread-local state during the <em>test instance preparation</em>_callback phase via Spring Web's {@link RequestContextHolder}.__@see TestExecutionListener#prepareTestInstance(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,during,the,em,test,instance,preparation,em,callback,phase,via,spring,web,s,link,request,context,holder,see,test,execution,listener,prepare,test,instance,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void prepareTestInstance(TestContext testContext) throws Exception;1385412762;Sets up thread-local state during the <em>test instance preparation</em>_callback phase via Spring Web's {@link RequestContextHolder}.__@see TestExecutionListener#prepareTestInstance(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,during,the,em,test,instance,preparation,em,callback,phase,via,spring,web,s,link,request,context,holder,see,test,execution,listener,prepare,test,instance,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void prepareTestInstance(TestContext testContext) throws Exception;1386599754;Sets up thread-local state during the <em>test instance preparation</em>_callback phase via Spring Web's {@link RequestContextHolder}.__@see TestExecutionListener#prepareTestInstance(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,during,the,em,test,instance,preparation,em,callback,phase,via,spring,web,s,link,request,context,holder,see,test,execution,listener,prepare,test,instance,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void prepareTestInstance(TestContext testContext) throws Exception;1386715798;Sets up thread-local state during the <em>test instance preparation</em>_callback phase via Spring Web's {@link RequestContextHolder}, but only if_the {@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}.__@see TestExecutionListener#prepareTestInstance(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,during,the,em,test,instance,preparation,em,callback,phase,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,prepare,test,instance,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void prepareTestInstance(TestContext testContext) throws Exception;1386720004;Sets up thread-local state during the <em>test instance preparation</em>_callback phase via Spring Web's {@link RequestContextHolder}, but only if_the {@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}.__@see TestExecutionListener#prepareTestInstance(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,during,the,em,test,instance,preparation,em,callback,phase,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,prepare,test,instance,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void prepareTestInstance(TestContext testContext) throws Exception;1396124089;Sets up thread-local state during the <em>test instance preparation</em>_callback phase via Spring Web's {@link RequestContextHolder}, but only if_the {@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}.__@see TestExecutionListener#prepareTestInstance(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,during,the,em,test,instance,preparation,em,callback,phase,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,prepare,test,instance,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void prepareTestInstance(TestContext testContext) throws Exception;1408048216;Sets up thread-local state during the <em>test instance preparation</em>_callback phase via Spring Web's {@link RequestContextHolder}, but only if_the {@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}.__@see TestExecutionListener#prepareTestInstance(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,during,the,em,test,instance,preparation,em,callback,phase,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,prepare,test,instance,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void prepareTestInstance(TestContext testContext) throws Exception;1413848647;Sets up thread-local state during the <em>test instance preparation</em>_callback phase via Spring Web's {@link RequestContextHolder}, but only if_the {@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}.__@see TestExecutionListener#prepareTestInstance(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,during,the,em,test,instance,preparation,em,callback,phase,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,prepare,test,instance,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void prepareTestInstance(TestContext testContext) throws Exception;1437424889;Sets up thread-local state during the <em>test instance preparation</em>_callback phase via Spring Web's {@link RequestContextHolder}, but only if_the {@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}.__@see TestExecutionListener#prepareTestInstance(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,during,the,em,test,instance,preparation,em,callback,phase,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,prepare,test,instance,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void prepareTestInstance(TestContext testContext) throws Exception;1457626850;Sets up thread-local state during the <em>test instance preparation</em>_callback phase via Spring Web's {@link RequestContextHolder}, but only if_the {@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}.__@see TestExecutionListener#prepareTestInstance(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,during,the,em,test,instance,preparation,em,callback,phase,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,prepare,test,instance,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void prepareTestInstance(TestContext testContext) throws Exception;1458754760;Sets up thread-local state during the <em>test instance preparation</em>_callback phase via Spring Web's {@link RequestContextHolder}, but only if_the {@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}.__@see TestExecutionListener#prepareTestInstance(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,during,the,em,test,instance,preparation,em,callback,phase,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,prepare,test,instance,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void prepareTestInstance(TestContext testContext) throws Exception;1465306936;Sets up thread-local state during the <em>test instance preparation</em>_callback phase via Spring Web's {@link RequestContextHolder}, but only if_the {@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}._@see TestExecutionListener#prepareTestInstance(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,during,the,em,test,instance,preparation,em,callback,phase,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,prepare,test,instance,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void prepareTestInstance(TestContext testContext) throws Exception;1468334463;Sets up thread-local state during the <em>test instance preparation</em>_callback phase via Spring Web's {@link RequestContextHolder}, but only if_the {@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}._@see TestExecutionListener#prepareTestInstance(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,during,the,em,test,instance,preparation,em,callback,phase,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,prepare,test,instance,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> @Override 	public void prepareTestInstance(TestContext testContext) throws Exception;1490602182;Sets up thread-local state during the <em>test instance preparation</em>_callback phase via Spring Web's {@link RequestContextHolder}, but only if_the {@linkplain TestContext#getTestClass() test class} is annotated with_{@link WebAppConfiguration @WebAppConfiguration}._@see TestExecutionListener#prepareTestInstance(TestContext)_@see #setUpRequestContextIfNecessary(TestContext);@Override_	public void prepareTestInstance(TestContext testContext) throws Exception {_		setUpRequestContextIfNecessary(testContext)__	};sets,up,thread,local,state,during,the,em,test,instance,preparation,em,callback,phase,via,spring,web,s,link,request,context,holder,but,only,if,the,linkplain,test,context,get,test,class,test,class,is,annotated,with,link,web,app,configuration,web,app,configuration,see,test,execution,listener,prepare,test,instance,test,context,see,set,up,request,context,if,necessary,test,context;override,public,void,prepare,test,instance,test,context,test,context,throws,exception,set,up,request,context,if,necessary,test,context
ServletTestExecutionListener -> private void setUpRequestContextIfNecessary(TestContext testContext);1350692960;TODO [SPR-9864] Document setUpRequestContext().__@param testContext_@param servletContext;private void setUpRequestContextIfNecessary(TestContext testContext) {__		ApplicationContext context = testContext.getApplicationContext()___		if (context instanceof WebApplicationContext) {_			WebApplicationContext wac = (WebApplicationContext) context__			ServletContext servletContext = wac.getServletContext()__			if (!(servletContext instanceof MockServletContext)) {_				throw new IllegalStateException(String.format(_					"The WebApplicationContext for test context %s must be configured with a MockServletContext.",_					testContext))__			}__			if (logger.isDebugEnabled()) {_				logger.debug(String.format(_					"Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context %s.",_					testContext))__			}__			if (RequestContextHolder.getRequestAttributes() == null) {_				MockServletContext mockServletContext = (MockServletContext) servletContext__				MockHttpServletRequest request = new MockHttpServletRequest(mockServletContext)__				MockHttpServletResponse response = new MockHttpServletResponse()__				ServletWebRequest servletWebRequest = new ServletWebRequest(request, response)___				RequestContextHolder.setRequestAttributes(servletWebRequest)___				if (wac instanceof ConfigurableApplicationContext) {_					ConfigurableApplicationContext configurableApplicationContext = (ConfigurableApplicationContext) wac__					ConfigurableListableBeanFactory bf = configurableApplicationContext.getBeanFactory()__					bf.registerResolvableDependency(MockHttpServletResponse.class, response)__					bf.registerResolvableDependency(ServletWebRequest.class, servletWebRequest)__				}_			}_		}_	};todo,spr,9864,document,set,up,request,context,param,test,context,param,servlet,context;private,void,set,up,request,context,if,necessary,test,context,test,context,application,context,context,test,context,get,application,context,if,context,instanceof,web,application,context,web,application,context,wac,web,application,context,context,servlet,context,servlet,context,wac,get,servlet,context,if,servlet,context,instanceof,mock,servlet,context,throw,new,illegal,state,exception,string,format,the,web,application,context,for,test,context,s,must,be,configured,with,a,mock,servlet,context,test,context,if,logger,is,debug,enabled,logger,debug,string,format,setting,up,mock,http,servlet,request,mock,http,servlet,response,servlet,web,request,and,request,context,holder,for,test,context,s,test,context,if,request,context,holder,get,request,attributes,null,mock,servlet,context,mock,servlet,context,mock,servlet,context,servlet,context,mock,http,servlet,request,request,new,mock,http,servlet,request,mock,servlet,context,mock,http,servlet,response,response,new,mock,http,servlet,response,servlet,web,request,servlet,web,request,new,servlet,web,request,request,response,request,context,holder,set,request,attributes,servlet,web,request,if,wac,instanceof,configurable,application,context,configurable,application,context,configurable,application,context,configurable,application,context,wac,configurable,listable,bean,factory,bf,configurable,application,context,get,bean,factory,bf,register,resolvable,dependency,mock,http,servlet,response,class,response,bf,register,resolvable,dependency,servlet,web,request,class,servlet,web,request
ServletTestExecutionListener -> private void setUpRequestContextIfNecessary(TestContext testContext);1351363326;TODO [SPR-9864] Document setUpRequestContext().__@param testContext_@param servletContext;private void setUpRequestContextIfNecessary(TestContext testContext) {__		ApplicationContext context = testContext.getApplicationContext()___		if (context instanceof WebApplicationContext) {_			WebApplicationContext wac = (WebApplicationContext) context__			ServletContext servletContext = wac.getServletContext()__			if (!(servletContext instanceof MockServletContext)) {_				throw new IllegalStateException(String.format(_					"The WebApplicationContext for test context %s must be configured with a MockServletContext.",_					testContext))__			}__			if (logger.isDebugEnabled()) {_				logger.debug(String.format(_					"Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context %s.",_					testContext))__			}__			if (RequestContextHolder.getRequestAttributes() == null) {_				MockServletContext mockServletContext = (MockServletContext) servletContext__				MockHttpServletRequest request = new MockHttpServletRequest(mockServletContext)__				MockHttpServletResponse response = new MockHttpServletResponse()__				ServletWebRequest servletWebRequest = new ServletWebRequest(request, response)___				RequestContextHolder.setRequestAttributes(servletWebRequest)___				if (wac instanceof ConfigurableApplicationContext) {_					ConfigurableApplicationContext configurableApplicationContext = (ConfigurableApplicationContext) wac__					ConfigurableListableBeanFactory bf = configurableApplicationContext.getBeanFactory()__					bf.registerResolvableDependency(MockHttpServletResponse.class, response)__					bf.registerResolvableDependency(ServletWebRequest.class, servletWebRequest)__				}_			}_		}_	};todo,spr,9864,document,set,up,request,context,param,test,context,param,servlet,context;private,void,set,up,request,context,if,necessary,test,context,test,context,application,context,context,test,context,get,application,context,if,context,instanceof,web,application,context,web,application,context,wac,web,application,context,context,servlet,context,servlet,context,wac,get,servlet,context,if,servlet,context,instanceof,mock,servlet,context,throw,new,illegal,state,exception,string,format,the,web,application,context,for,test,context,s,must,be,configured,with,a,mock,servlet,context,test,context,if,logger,is,debug,enabled,logger,debug,string,format,setting,up,mock,http,servlet,request,mock,http,servlet,response,servlet,web,request,and,request,context,holder,for,test,context,s,test,context,if,request,context,holder,get,request,attributes,null,mock,servlet,context,mock,servlet,context,mock,servlet,context,servlet,context,mock,http,servlet,request,request,new,mock,http,servlet,request,mock,servlet,context,mock,http,servlet,response,response,new,mock,http,servlet,response,servlet,web,request,servlet,web,request,new,servlet,web,request,request,response,request,context,holder,set,request,attributes,servlet,web,request,if,wac,instanceof,configurable,application,context,configurable,application,context,configurable,application,context,configurable,application,context,wac,configurable,listable,bean,factory,bf,configurable,application,context,get,bean,factory,bf,register,resolvable,dependency,mock,http,servlet,response,class,response,bf,register,resolvable,dependency,servlet,web,request,class,servlet,web,request
ServletTestExecutionListener -> private void setUpRequestContextIfNecessary(TestContext testContext);1351375981;TODO [SPR-9864] Document setUpRequestContext().__@param testContext_@param servletContext;private void setUpRequestContextIfNecessary(TestContext testContext) {__		ApplicationContext context = testContext.getApplicationContext()___		if (context instanceof WebApplicationContext) {_			WebApplicationContext wac = (WebApplicationContext) context__			ServletContext servletContext = wac.getServletContext()__			if (!(servletContext instanceof MockServletContext)) {_				throw new IllegalStateException(String.format(_					"The WebApplicationContext for test context %s must be configured with a MockServletContext.",_					testContext))__			}__			if (logger.isDebugEnabled()) {_				logger.debug(String.format(_					"Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context %s.",_					testContext))__			}__			if (RequestContextHolder.getRequestAttributes() == null) {_				MockServletContext mockServletContext = (MockServletContext) servletContext__				MockHttpServletRequest request = new MockHttpServletRequest(mockServletContext)__				MockHttpServletResponse response = new MockHttpServletResponse()__				ServletWebRequest servletWebRequest = new ServletWebRequest(request, response)___				RequestContextHolder.setRequestAttributes(servletWebRequest)___				if (wac instanceof ConfigurableApplicationContext) {_					ConfigurableApplicationContext configurableApplicationContext = (ConfigurableApplicationContext) wac__					ConfigurableListableBeanFactory bf = configurableApplicationContext.getBeanFactory()__					bf.registerResolvableDependency(MockHttpServletResponse.class, response)__					bf.registerResolvableDependency(ServletWebRequest.class, servletWebRequest)__				}_			}_		}_	};todo,spr,9864,document,set,up,request,context,param,test,context,param,servlet,context;private,void,set,up,request,context,if,necessary,test,context,test,context,application,context,context,test,context,get,application,context,if,context,instanceof,web,application,context,web,application,context,wac,web,application,context,context,servlet,context,servlet,context,wac,get,servlet,context,if,servlet,context,instanceof,mock,servlet,context,throw,new,illegal,state,exception,string,format,the,web,application,context,for,test,context,s,must,be,configured,with,a,mock,servlet,context,test,context,if,logger,is,debug,enabled,logger,debug,string,format,setting,up,mock,http,servlet,request,mock,http,servlet,response,servlet,web,request,and,request,context,holder,for,test,context,s,test,context,if,request,context,holder,get,request,attributes,null,mock,servlet,context,mock,servlet,context,mock,servlet,context,servlet,context,mock,http,servlet,request,request,new,mock,http,servlet,request,mock,servlet,context,mock,http,servlet,response,response,new,mock,http,servlet,response,servlet,web,request,servlet,web,request,new,servlet,web,request,request,response,request,context,holder,set,request,attributes,servlet,web,request,if,wac,instanceof,configurable,application,context,configurable,application,context,configurable,application,context,configurable,application,context,wac,configurable,listable,bean,factory,bf,configurable,application,context,get,bean,factory,bf,register,resolvable,dependency,mock,http,servlet,response,class,response,bf,register,resolvable,dependency,servlet,web,request,class,servlet,web,request
ServletTestExecutionListener -> private void setUpRequestContextIfNecessary(TestContext testContext);1352571746;TODO [SPR-9864] Document setUpRequestContext().__@param testContext_@param servletContext;private void setUpRequestContextIfNecessary(TestContext testContext) {__		ApplicationContext context = testContext.getApplicationContext()___		if (context instanceof WebApplicationContext) {_			WebApplicationContext wac = (WebApplicationContext) context__			ServletContext servletContext = wac.getServletContext()__			if (!(servletContext instanceof MockServletContext)) {_				throw new IllegalStateException(String.format(_					"The WebApplicationContext for test context %s must be configured with a MockServletContext.",_					testContext))__			}__			if (logger.isDebugEnabled()) {_				logger.debug(String.format(_					"Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context %s.",_					testContext))__			}__			if (RequestContextHolder.getRequestAttributes() == null) {_				MockServletContext mockServletContext = (MockServletContext) servletContext__				MockHttpServletRequest request = new MockHttpServletRequest(mockServletContext)__				MockHttpServletResponse response = new MockHttpServletResponse()__				ServletWebRequest servletWebRequest = new ServletWebRequest(request, response)___				RequestContextHolder.setRequestAttributes(servletWebRequest)___				if (wac instanceof ConfigurableApplicationContext) {_					@SuppressWarnings("resource")_					ConfigurableApplicationContext configurableApplicationContext = (ConfigurableApplicationContext) wac__					ConfigurableListableBeanFactory bf = configurableApplicationContext.getBeanFactory()__					bf.registerResolvableDependency(MockHttpServletResponse.class, response)__					bf.registerResolvableDependency(ServletWebRequest.class, servletWebRequest)__				}_			}_		}_	};todo,spr,9864,document,set,up,request,context,param,test,context,param,servlet,context;private,void,set,up,request,context,if,necessary,test,context,test,context,application,context,context,test,context,get,application,context,if,context,instanceof,web,application,context,web,application,context,wac,web,application,context,context,servlet,context,servlet,context,wac,get,servlet,context,if,servlet,context,instanceof,mock,servlet,context,throw,new,illegal,state,exception,string,format,the,web,application,context,for,test,context,s,must,be,configured,with,a,mock,servlet,context,test,context,if,logger,is,debug,enabled,logger,debug,string,format,setting,up,mock,http,servlet,request,mock,http,servlet,response,servlet,web,request,and,request,context,holder,for,test,context,s,test,context,if,request,context,holder,get,request,attributes,null,mock,servlet,context,mock,servlet,context,mock,servlet,context,servlet,context,mock,http,servlet,request,request,new,mock,http,servlet,request,mock,servlet,context,mock,http,servlet,response,response,new,mock,http,servlet,response,servlet,web,request,servlet,web,request,new,servlet,web,request,request,response,request,context,holder,set,request,attributes,servlet,web,request,if,wac,instanceof,configurable,application,context,suppress,warnings,resource,configurable,application,context,configurable,application,context,configurable,application,context,wac,configurable,listable,bean,factory,bf,configurable,application,context,get,bean,factory,bf,register,resolvable,dependency,mock,http,servlet,response,class,response,bf,register,resolvable,dependency,servlet,web,request,class,servlet,web,request
ServletTestExecutionListener -> private void setUpRequestContextIfNecessary(TestContext testContext);1354573750;TODO [SPR-9864] Document setUpRequestContext().__@param testContext;private void setUpRequestContextIfNecessary(TestContext testContext) {__		ApplicationContext context = testContext.getApplicationContext()___		if (context instanceof WebApplicationContext) {_			WebApplicationContext wac = (WebApplicationContext) context__			ServletContext servletContext = wac.getServletContext()__			if (!(servletContext instanceof MockServletContext)) {_				throw new IllegalStateException(String.format(_					"The WebApplicationContext for test context %s must be configured with a MockServletContext.",_					testContext))__			}__			if (logger.isDebugEnabled()) {_				logger.debug(String.format(_					"Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context %s.",_					testContext))__			}__			if (RequestContextHolder.getRequestAttributes() == null) {_				MockServletContext mockServletContext = (MockServletContext) servletContext__				MockHttpServletRequest request = new MockHttpServletRequest(mockServletContext)__				MockHttpServletResponse response = new MockHttpServletResponse()__				ServletWebRequest servletWebRequest = new ServletWebRequest(request, response)___				RequestContextHolder.setRequestAttributes(servletWebRequest)___				if (wac instanceof ConfigurableApplicationContext) {_					@SuppressWarnings("resource")_					ConfigurableApplicationContext configurableApplicationContext = (ConfigurableApplicationContext) wac__					ConfigurableListableBeanFactory bf = configurableApplicationContext.getBeanFactory()__					bf.registerResolvableDependency(MockHttpServletResponse.class, response)__					bf.registerResolvableDependency(ServletWebRequest.class, servletWebRequest)__				}_			}_		}_	};todo,spr,9864,document,set,up,request,context,param,test,context;private,void,set,up,request,context,if,necessary,test,context,test,context,application,context,context,test,context,get,application,context,if,context,instanceof,web,application,context,web,application,context,wac,web,application,context,context,servlet,context,servlet,context,wac,get,servlet,context,if,servlet,context,instanceof,mock,servlet,context,throw,new,illegal,state,exception,string,format,the,web,application,context,for,test,context,s,must,be,configured,with,a,mock,servlet,context,test,context,if,logger,is,debug,enabled,logger,debug,string,format,setting,up,mock,http,servlet,request,mock,http,servlet,response,servlet,web,request,and,request,context,holder,for,test,context,s,test,context,if,request,context,holder,get,request,attributes,null,mock,servlet,context,mock,servlet,context,mock,servlet,context,servlet,context,mock,http,servlet,request,request,new,mock,http,servlet,request,mock,servlet,context,mock,http,servlet,response,response,new,mock,http,servlet,response,servlet,web,request,servlet,web,request,new,servlet,web,request,request,response,request,context,holder,set,request,attributes,servlet,web,request,if,wac,instanceof,configurable,application,context,suppress,warnings,resource,configurable,application,context,configurable,application,context,configurable,application,context,wac,configurable,listable,bean,factory,bf,configurable,application,context,get,bean,factory,bf,register,resolvable,dependency,mock,http,servlet,response,class,response,bf,register,resolvable,dependency,servlet,web,request,class,servlet,web,request
ServletTestExecutionListener -> @Override 	public void afterTestMethod(TestContext testContext) throws Exception;1350692960;TODO [SPR-9864] Document overridden afterTestMethod().__@see org.springframework.test.context.support.AbstractTestExecutionListener#afterTestMethod(org.springframework.test.context.TestContext);@Override_	public void afterTestMethod(TestContext testContext) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__		}_		RequestContextHolder.resetRequestAttributes()__	};todo,spr,9864,document,overridden,after,test,method,see,org,springframework,test,context,support,abstract,test,execution,listener,after,test,method,org,springframework,test,context,test,context;override,public,void,after,test,method,test,context,test,context,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes
ServletTestExecutionListener -> @Override 	public void afterTestMethod(TestContext testContext) throws Exception;1356735495;Cleans up thread-local state after each test method by {@linkplain_RequestContextHolder#resetRequestAttributes() resetting} Spring Web's_{@code RequestContextHolder}.__@see TestExecutionListener#afterTestMethod(TestContext);@Override_	public void afterTestMethod(TestContext testContext) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__		}_		RequestContextHolder.resetRequestAttributes()__	};cleans,up,thread,local,state,after,each,test,method,by,linkplain,request,context,holder,reset,request,attributes,resetting,spring,web,s,code,request,context,holder,see,test,execution,listener,after,test,method,test,context;override,public,void,after,test,method,test,context,test,context,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes
ServletTestExecutionListener -> @Override 	public void afterTestMethod(TestContext testContext) throws Exception;1368482696;Cleans up thread-local state after each test method by {@linkplain_RequestContextHolder#resetRequestAttributes() resetting} Spring Web's_{@code RequestContextHolder}.__@see TestExecutionListener#afterTestMethod(TestContext);@Override_	public void afterTestMethod(TestContext testContext) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__		}_		RequestContextHolder.resetRequestAttributes()__	};cleans,up,thread,local,state,after,each,test,method,by,linkplain,request,context,holder,reset,request,attributes,resetting,spring,web,s,code,request,context,holder,see,test,execution,listener,after,test,method,test,context;override,public,void,after,test,method,test,context,test,context,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes
ServletTestExecutionListener -> @Override 	public void afterTestMethod(TestContext testContext) throws Exception;1385412762;Cleans up thread-local state after each test method by {@linkplain_RequestContextHolder#resetRequestAttributes() resetting} Spring Web's_{@code RequestContextHolder}.__@see TestExecutionListener#afterTestMethod(TestContext);@Override_	public void afterTestMethod(TestContext testContext) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__		}_		RequestContextHolder.resetRequestAttributes()__	};cleans,up,thread,local,state,after,each,test,method,by,linkplain,request,context,holder,reset,request,attributes,resetting,spring,web,s,code,request,context,holder,see,test,execution,listener,after,test,method,test,context;override,public,void,after,test,method,test,context,test,context,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes
ServletTestExecutionListener -> @Override 	public void afterTestMethod(TestContext testContext) throws Exception;1386599754;Cleans up thread-local state after each test method by {@linkplain_RequestContextHolder#resetRequestAttributes() resetting} Spring Web's_{@code RequestContextHolder}.__@see TestExecutionListener#afterTestMethod(TestContext);@Override_	public void afterTestMethod(TestContext testContext) throws Exception {_		if (Boolean.TRUE.equals(testContext.getAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE))) {_			if (logger.isDebugEnabled()) {_				logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__			}_			RequestContextHolder.resetRequestAttributes()__			testContext.removeAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__		}_	};cleans,up,thread,local,state,after,each,test,method,by,linkplain,request,context,holder,reset,request,attributes,resetting,spring,web,s,code,request,context,holder,see,test,execution,listener,after,test,method,test,context;override,public,void,after,test,method,test,context,test,context,throws,exception,if,boolean,true,equals,test,context,get,attribute,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes,test,context,remove,attribute
ServletTestExecutionListener -> @Override 	public void afterTestMethod(TestContext testContext) throws Exception;1386715798;Cleans up thread-local state after each test method by {@linkplain_RequestContextHolder#resetRequestAttributes() resetting} Spring Web's_{@code RequestContextHolder}, but only if the {@link_#RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} in the supplied {@code TestContext}_has a value of {@link Boolean#TRUE}._<p>The {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} will be_subsequently removed from the test context, regardless of its value.__@see TestExecutionListener#afterTestMethod(TestContext);@Override_	public void afterTestMethod(TestContext testContext) throws Exception {_		if (Boolean.TRUE.equals(testContext.getAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE))) {_			if (logger.isDebugEnabled()) {_				logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__			}_			RequestContextHolder.resetRequestAttributes()__		}_		testContext.removeAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__	};cleans,up,thread,local,state,after,each,test,method,by,linkplain,request,context,holder,reset,request,attributes,resetting,spring,web,s,code,request,context,holder,but,only,if,the,link,in,the,supplied,code,test,context,has,a,value,of,link,boolean,true,p,the,link,will,be,subsequently,removed,from,the,test,context,regardless,of,its,value,see,test,execution,listener,after,test,method,test,context;override,public,void,after,test,method,test,context,test,context,throws,exception,if,boolean,true,equals,test,context,get,attribute,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes,test,context,remove,attribute
ServletTestExecutionListener -> @Override 	public void afterTestMethod(TestContext testContext) throws Exception;1386720004;Cleans up thread-local state after each test method by {@linkplain_RequestContextHolder#resetRequestAttributes() resetting} Spring Web's_{@code RequestContextHolder}, but only if the {@link_#RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} in the supplied {@code TestContext}_has a value of {@link Boolean#TRUE}.__<p>The {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} and_{@link #POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} will be subsequently_removed from the test context, regardless of their values.__@see TestExecutionListener#afterTestMethod(TestContext);@Override_	public void afterTestMethod(TestContext testContext) throws Exception {_		if (Boolean.TRUE.equals(testContext.getAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE))) {_			if (logger.isDebugEnabled()) {_				logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__			}_			RequestContextHolder.resetRequestAttributes()__		}_		testContext.removeAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__		testContext.removeAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__	};cleans,up,thread,local,state,after,each,test,method,by,linkplain,request,context,holder,reset,request,attributes,resetting,spring,web,s,code,request,context,holder,but,only,if,the,link,in,the,supplied,code,test,context,has,a,value,of,link,boolean,true,p,the,link,and,link,will,be,subsequently,removed,from,the,test,context,regardless,of,their,values,see,test,execution,listener,after,test,method,test,context;override,public,void,after,test,method,test,context,test,context,throws,exception,if,boolean,true,equals,test,context,get,attribute,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes,test,context,remove,attribute,test,context,remove,attribute
ServletTestExecutionListener -> @Override 	public void afterTestMethod(TestContext testContext) throws Exception;1396124089;If the {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} in the supplied_{@code TestContext} has a value of {@link Boolean#TRUE}, this method will_(1) clean up thread-local state after each test method by {@linkplain_RequestContextHolder#resetRequestAttributes() resetting} Spring Web's_{@code RequestContextHolder} and (2) ensure that new mocks are injected_into the test instance for subsequent tests by setting the_{@link DependencyInjectionTestExecutionListener#REINJECT_DEPENDENCIES_ATTRIBUTE}_in the test context to {@code true}.__<p>The {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} and_{@link #POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} will be subsequently_removed from the test context, regardless of their values.__@see TestExecutionListener#afterTestMethod(TestContext);@Override_	public void afterTestMethod(TestContext testContext) throws Exception {_		if (Boolean.TRUE.equals(testContext.getAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE))) {_			if (logger.isDebugEnabled()) {_				logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__			}_			RequestContextHolder.resetRequestAttributes()__			testContext.setAttribute(DependencyInjectionTestExecutionListener.REINJECT_DEPENDENCIES_ATTRIBUTE,_				Boolean.TRUE)__		}_		testContext.removeAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__		testContext.removeAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__	};if,the,link,in,the,supplied,code,test,context,has,a,value,of,link,boolean,true,this,method,will,1,clean,up,thread,local,state,after,each,test,method,by,linkplain,request,context,holder,reset,request,attributes,resetting,spring,web,s,code,request,context,holder,and,2,ensure,that,new,mocks,are,injected,into,the,test,instance,for,subsequent,tests,by,setting,the,link,dependency,injection,test,execution,listener,in,the,test,context,to,code,true,p,the,link,and,link,will,be,subsequently,removed,from,the,test,context,regardless,of,their,values,see,test,execution,listener,after,test,method,test,context;override,public,void,after,test,method,test,context,test,context,throws,exception,if,boolean,true,equals,test,context,get,attribute,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes,test,context,set,attribute,dependency,injection,test,execution,listener,boolean,true,test,context,remove,attribute,test,context,remove,attribute
ServletTestExecutionListener -> @Override 	public void afterTestMethod(TestContext testContext) throws Exception;1408048216;If the {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} in the supplied_{@code TestContext} has a value of {@link Boolean#TRUE}, this method will_(1) clean up thread-local state after each test method by {@linkplain_RequestContextHolder#resetRequestAttributes() resetting} Spring Web's_{@code RequestContextHolder} and (2) ensure that new mocks are injected_into the test instance for subsequent tests by setting the_{@link DependencyInjectionTestExecutionListener#REINJECT_DEPENDENCIES_ATTRIBUTE}_in the test context to {@code true}.__<p>The {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} and_{@link #POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} will be subsequently_removed from the test context, regardless of their values.__@see TestExecutionListener#afterTestMethod(TestContext);@Override_	public void afterTestMethod(TestContext testContext) throws Exception {_		if (Boolean.TRUE.equals(testContext.getAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE))) {_			if (logger.isDebugEnabled()) {_				logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__			}_			RequestContextHolder.resetRequestAttributes()__			testContext.setAttribute(DependencyInjectionTestExecutionListener.REINJECT_DEPENDENCIES_ATTRIBUTE,_				Boolean.TRUE)__		}_		testContext.removeAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__		testContext.removeAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__	};if,the,link,in,the,supplied,code,test,context,has,a,value,of,link,boolean,true,this,method,will,1,clean,up,thread,local,state,after,each,test,method,by,linkplain,request,context,holder,reset,request,attributes,resetting,spring,web,s,code,request,context,holder,and,2,ensure,that,new,mocks,are,injected,into,the,test,instance,for,subsequent,tests,by,setting,the,link,dependency,injection,test,execution,listener,in,the,test,context,to,code,true,p,the,link,and,link,will,be,subsequently,removed,from,the,test,context,regardless,of,their,values,see,test,execution,listener,after,test,method,test,context;override,public,void,after,test,method,test,context,test,context,throws,exception,if,boolean,true,equals,test,context,get,attribute,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes,test,context,set,attribute,dependency,injection,test,execution,listener,boolean,true,test,context,remove,attribute,test,context,remove,attribute
ServletTestExecutionListener -> @Override 	public void afterTestMethod(TestContext testContext) throws Exception;1413848647;If the {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} in the supplied_{@code TestContext} has a value of {@link Boolean#TRUE}, this method will_(1) clean up thread-local state after each test method by {@linkplain_RequestContextHolder#resetRequestAttributes() resetting} Spring Web's_{@code RequestContextHolder} and (2) ensure that new mocks are injected_into the test instance for subsequent tests by setting the_{@link DependencyInjectionTestExecutionListener#REINJECT_DEPENDENCIES_ATTRIBUTE}_in the test context to {@code true}.__<p>The {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} and_{@link #POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} will be subsequently_removed from the test context, regardless of their values.__@see TestExecutionListener#afterTestMethod(TestContext);@Override_	public void afterTestMethod(TestContext testContext) throws Exception {_		if (Boolean.TRUE.equals(testContext.getAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE))) {_			if (logger.isDebugEnabled()) {_				logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__			}_			RequestContextHolder.resetRequestAttributes()__			testContext.setAttribute(DependencyInjectionTestExecutionListener.REINJECT_DEPENDENCIES_ATTRIBUTE,_				Boolean.TRUE)__		}_		testContext.removeAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__		testContext.removeAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__	};if,the,link,in,the,supplied,code,test,context,has,a,value,of,link,boolean,true,this,method,will,1,clean,up,thread,local,state,after,each,test,method,by,linkplain,request,context,holder,reset,request,attributes,resetting,spring,web,s,code,request,context,holder,and,2,ensure,that,new,mocks,are,injected,into,the,test,instance,for,subsequent,tests,by,setting,the,link,dependency,injection,test,execution,listener,in,the,test,context,to,code,true,p,the,link,and,link,will,be,subsequently,removed,from,the,test,context,regardless,of,their,values,see,test,execution,listener,after,test,method,test,context;override,public,void,after,test,method,test,context,test,context,throws,exception,if,boolean,true,equals,test,context,get,attribute,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes,test,context,set,attribute,dependency,injection,test,execution,listener,boolean,true,test,context,remove,attribute,test,context,remove,attribute
ServletTestExecutionListener -> @Override 	public void afterTestMethod(TestContext testContext) throws Exception;1437424889;If the {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} in the supplied_{@code TestContext} has a value of {@link Boolean#TRUE}, this method will_(1) clean up thread-local state after each test method by {@linkplain_RequestContextHolder#resetRequestAttributes() resetting} Spring Web's_{@code RequestContextHolder} and (2) ensure that new mocks are injected_into the test instance for subsequent tests by setting the_{@link DependencyInjectionTestExecutionListener#REINJECT_DEPENDENCIES_ATTRIBUTE}_in the test context to {@code true}.__<p>The {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} and_{@link #POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} will be subsequently_removed from the test context, regardless of their values.__@see TestExecutionListener#afterTestMethod(TestContext);@Override_	public void afterTestMethod(TestContext testContext) throws Exception {_		if (Boolean.TRUE.equals(testContext.getAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE))) {_			if (logger.isDebugEnabled()) {_				logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__			}_			RequestContextHolder.resetRequestAttributes()__			testContext.setAttribute(DependencyInjectionTestExecutionListener.REINJECT_DEPENDENCIES_ATTRIBUTE,_				Boolean.TRUE)__		}_		testContext.removeAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__		testContext.removeAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__	};if,the,link,in,the,supplied,code,test,context,has,a,value,of,link,boolean,true,this,method,will,1,clean,up,thread,local,state,after,each,test,method,by,linkplain,request,context,holder,reset,request,attributes,resetting,spring,web,s,code,request,context,holder,and,2,ensure,that,new,mocks,are,injected,into,the,test,instance,for,subsequent,tests,by,setting,the,link,dependency,injection,test,execution,listener,in,the,test,context,to,code,true,p,the,link,and,link,will,be,subsequently,removed,from,the,test,context,regardless,of,their,values,see,test,execution,listener,after,test,method,test,context;override,public,void,after,test,method,test,context,test,context,throws,exception,if,boolean,true,equals,test,context,get,attribute,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes,test,context,set,attribute,dependency,injection,test,execution,listener,boolean,true,test,context,remove,attribute,test,context,remove,attribute
ServletTestExecutionListener -> @Override 	public void afterTestMethod(TestContext testContext) throws Exception;1457626850;If the {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} in the supplied_{@code TestContext} has a value of {@link Boolean#TRUE}, this method will_(1) clean up thread-local state after each test method by {@linkplain_RequestContextHolder#resetRequestAttributes() resetting} Spring Web's_{@code RequestContextHolder} and (2) ensure that new mocks are injected_into the test instance for subsequent tests by setting the_{@link DependencyInjectionTestExecutionListener#REINJECT_DEPENDENCIES_ATTRIBUTE}_in the test context to {@code true}.__<p>The {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} and_{@link #POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} will be subsequently_removed from the test context, regardless of their values.__@see TestExecutionListener#afterTestMethod(TestContext);@Override_	public void afterTestMethod(TestContext testContext) throws Exception {_		if (Boolean.TRUE.equals(testContext.getAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE))) {_			if (logger.isDebugEnabled()) {_				logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__			}_			RequestContextHolder.resetRequestAttributes()__			testContext.setAttribute(DependencyInjectionTestExecutionListener.REINJECT_DEPENDENCIES_ATTRIBUTE,_				Boolean.TRUE)__		}_		testContext.removeAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__		testContext.removeAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__	};if,the,link,in,the,supplied,code,test,context,has,a,value,of,link,boolean,true,this,method,will,1,clean,up,thread,local,state,after,each,test,method,by,linkplain,request,context,holder,reset,request,attributes,resetting,spring,web,s,code,request,context,holder,and,2,ensure,that,new,mocks,are,injected,into,the,test,instance,for,subsequent,tests,by,setting,the,link,dependency,injection,test,execution,listener,in,the,test,context,to,code,true,p,the,link,and,link,will,be,subsequently,removed,from,the,test,context,regardless,of,their,values,see,test,execution,listener,after,test,method,test,context;override,public,void,after,test,method,test,context,test,context,throws,exception,if,boolean,true,equals,test,context,get,attribute,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes,test,context,set,attribute,dependency,injection,test,execution,listener,boolean,true,test,context,remove,attribute,test,context,remove,attribute
ServletTestExecutionListener -> @Override 	public void afterTestMethod(TestContext testContext) throws Exception;1458754760;If the {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} in the supplied_{@code TestContext} has a value of {@link Boolean#TRUE}, this method will_(1) clean up thread-local state after each test method by {@linkplain_RequestContextHolder#resetRequestAttributes() resetting} Spring Web's_{@code RequestContextHolder} and (2) ensure that new mocks are injected_into the test instance for subsequent tests by setting the_{@link DependencyInjectionTestExecutionListener#REINJECT_DEPENDENCIES_ATTRIBUTE}_in the test context to {@code true}.__<p>The {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} and_{@link #POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} will be subsequently_removed from the test context, regardless of their values.__@see TestExecutionListener#afterTestMethod(TestContext);@Override_	public void afterTestMethod(TestContext testContext) throws Exception {_		if (Boolean.TRUE.equals(testContext.getAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE))) {_			if (logger.isDebugEnabled()) {_				logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__			}_			RequestContextHolder.resetRequestAttributes()__			testContext.setAttribute(DependencyInjectionTestExecutionListener.REINJECT_DEPENDENCIES_ATTRIBUTE,_				Boolean.TRUE)__		}_		testContext.removeAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__		testContext.removeAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__	};if,the,link,in,the,supplied,code,test,context,has,a,value,of,link,boolean,true,this,method,will,1,clean,up,thread,local,state,after,each,test,method,by,linkplain,request,context,holder,reset,request,attributes,resetting,spring,web,s,code,request,context,holder,and,2,ensure,that,new,mocks,are,injected,into,the,test,instance,for,subsequent,tests,by,setting,the,link,dependency,injection,test,execution,listener,in,the,test,context,to,code,true,p,the,link,and,link,will,be,subsequently,removed,from,the,test,context,regardless,of,their,values,see,test,execution,listener,after,test,method,test,context;override,public,void,after,test,method,test,context,test,context,throws,exception,if,boolean,true,equals,test,context,get,attribute,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes,test,context,set,attribute,dependency,injection,test,execution,listener,boolean,true,test,context,remove,attribute,test,context,remove,attribute
ServletTestExecutionListener -> @Override 	public void afterTestMethod(TestContext testContext) throws Exception;1465306936;If the {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} in the supplied_{@code TestContext} has a value of {@link Boolean#TRUE}, this method will_(1) clean up thread-local state after each test method by {@linkplain_RequestContextHolder#resetRequestAttributes() resetting} Spring Web's_{@code RequestContextHolder} and (2) ensure that new mocks are injected_into the test instance for subsequent tests by setting the_{@link DependencyInjectionTestExecutionListener#REINJECT_DEPENDENCIES_ATTRIBUTE}_in the test context to {@code true}._<p>The {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} and_{@link #POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} will be subsequently_removed from the test context, regardless of their values._@see TestExecutionListener#afterTestMethod(TestContext);@Override_	public void afterTestMethod(TestContext testContext) throws Exception {_		if (Boolean.TRUE.equals(testContext.getAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE))) {_			if (logger.isDebugEnabled()) {_				logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__			}_			RequestContextHolder.resetRequestAttributes()__			testContext.setAttribute(DependencyInjectionTestExecutionListener.REINJECT_DEPENDENCIES_ATTRIBUTE,_				Boolean.TRUE)__		}_		testContext.removeAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__		testContext.removeAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__	};if,the,link,in,the,supplied,code,test,context,has,a,value,of,link,boolean,true,this,method,will,1,clean,up,thread,local,state,after,each,test,method,by,linkplain,request,context,holder,reset,request,attributes,resetting,spring,web,s,code,request,context,holder,and,2,ensure,that,new,mocks,are,injected,into,the,test,instance,for,subsequent,tests,by,setting,the,link,dependency,injection,test,execution,listener,in,the,test,context,to,code,true,p,the,link,and,link,will,be,subsequently,removed,from,the,test,context,regardless,of,their,values,see,test,execution,listener,after,test,method,test,context;override,public,void,after,test,method,test,context,test,context,throws,exception,if,boolean,true,equals,test,context,get,attribute,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes,test,context,set,attribute,dependency,injection,test,execution,listener,boolean,true,test,context,remove,attribute,test,context,remove,attribute
ServletTestExecutionListener -> @Override 	public void afterTestMethod(TestContext testContext) throws Exception;1468334463;If the {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} in the supplied_{@code TestContext} has a value of {@link Boolean#TRUE}, this method will_(1) clean up thread-local state after each test method by {@linkplain_RequestContextHolder#resetRequestAttributes() resetting} Spring Web's_{@code RequestContextHolder} and (2) ensure that new mocks are injected_into the test instance for subsequent tests by setting the_{@link DependencyInjectionTestExecutionListener#REINJECT_DEPENDENCIES_ATTRIBUTE}_in the test context to {@code true}._<p>The {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} and_{@link #POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} will be subsequently_removed from the test context, regardless of their values._@see TestExecutionListener#afterTestMethod(TestContext);@Override_	public void afterTestMethod(TestContext testContext) throws Exception {_		if (Boolean.TRUE.equals(testContext.getAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE))) {_			if (logger.isDebugEnabled()) {_				logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__			}_			RequestContextHolder.resetRequestAttributes()__			testContext.setAttribute(DependencyInjectionTestExecutionListener.REINJECT_DEPENDENCIES_ATTRIBUTE,_				Boolean.TRUE)__		}_		testContext.removeAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__		testContext.removeAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__	};if,the,link,in,the,supplied,code,test,context,has,a,value,of,link,boolean,true,this,method,will,1,clean,up,thread,local,state,after,each,test,method,by,linkplain,request,context,holder,reset,request,attributes,resetting,spring,web,s,code,request,context,holder,and,2,ensure,that,new,mocks,are,injected,into,the,test,instance,for,subsequent,tests,by,setting,the,link,dependency,injection,test,execution,listener,in,the,test,context,to,code,true,p,the,link,and,link,will,be,subsequently,removed,from,the,test,context,regardless,of,their,values,see,test,execution,listener,after,test,method,test,context;override,public,void,after,test,method,test,context,test,context,throws,exception,if,boolean,true,equals,test,context,get,attribute,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes,test,context,set,attribute,dependency,injection,test,execution,listener,boolean,true,test,context,remove,attribute,test,context,remove,attribute
ServletTestExecutionListener -> @Override 	public void afterTestMethod(TestContext testContext) throws Exception;1490602182;If the {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} in the supplied_{@code TestContext} has a value of {@link Boolean#TRUE}, this method will_(1) clean up thread-local state after each test method by {@linkplain_RequestContextHolder#resetRequestAttributes() resetting} Spring Web's_{@code RequestContextHolder} and (2) ensure that new mocks are injected_into the test instance for subsequent tests by setting the_{@link DependencyInjectionTestExecutionListener#REINJECT_DEPENDENCIES_ATTRIBUTE}_in the test context to {@code true}._<p>The {@link #RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} and_{@link #POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE} will be subsequently_removed from the test context, regardless of their values._@see TestExecutionListener#afterTestMethod(TestContext);@Override_	public void afterTestMethod(TestContext testContext) throws Exception {_		if (Boolean.TRUE.equals(testContext.getAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE))) {_			if (logger.isDebugEnabled()) {_				logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__			}_			RequestContextHolder.resetRequestAttributes()__			testContext.setAttribute(DependencyInjectionTestExecutionListener.REINJECT_DEPENDENCIES_ATTRIBUTE,_				Boolean.TRUE)__		}_		testContext.removeAttribute(POPULATED_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__		testContext.removeAttribute(RESET_REQUEST_CONTEXT_HOLDER_ATTRIBUTE)__	};if,the,link,in,the,supplied,code,test,context,has,a,value,of,link,boolean,true,this,method,will,1,clean,up,thread,local,state,after,each,test,method,by,linkplain,request,context,holder,reset,request,attributes,resetting,spring,web,s,code,request,context,holder,and,2,ensure,that,new,mocks,are,injected,into,the,test,instance,for,subsequent,tests,by,setting,the,link,dependency,injection,test,execution,listener,in,the,test,context,to,code,true,p,the,link,and,link,will,be,subsequently,removed,from,the,test,context,regardless,of,their,values,see,test,execution,listener,after,test,method,test,context;override,public,void,after,test,method,test,context,test,context,throws,exception,if,boolean,true,equals,test,context,get,attribute,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes,test,context,set,attribute,dependency,injection,test,execution,listener,boolean,true,test,context,remove,attribute,test,context,remove,attribute
ServletTestExecutionListener -> public void afterTestMethod(TestContext testContext) throws Exception;1351363326;TODO [SPR-9864] Document overridden afterTestMethod().__@see org.springframework.test.context.TestExecutionListener#afterTestMethod(TestContext);public void afterTestMethod(TestContext testContext) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__		}_		RequestContextHolder.resetRequestAttributes()__	};todo,spr,9864,document,overridden,after,test,method,see,org,springframework,test,context,test,execution,listener,after,test,method,test,context;public,void,after,test,method,test,context,test,context,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes
ServletTestExecutionListener -> public void afterTestMethod(TestContext testContext) throws Exception;1351375981;TODO [SPR-9864] Document overridden afterTestMethod().__@see TestExecutionListener#afterTestMethod(TestContext);public void afterTestMethod(TestContext testContext) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__		}_		RequestContextHolder.resetRequestAttributes()__	};todo,spr,9864,document,overridden,after,test,method,see,test,execution,listener,after,test,method,test,context;public,void,after,test,method,test,context,test,context,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes
ServletTestExecutionListener -> public void afterTestMethod(TestContext testContext) throws Exception;1352571746;TODO [SPR-9864] Document overridden afterTestMethod().__@see TestExecutionListener#afterTestMethod(TestContext);public void afterTestMethod(TestContext testContext) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__		}_		RequestContextHolder.resetRequestAttributes()__	};todo,spr,9864,document,overridden,after,test,method,see,test,execution,listener,after,test,method,test,context;public,void,after,test,method,test,context,test,context,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes
ServletTestExecutionListener -> public void afterTestMethod(TestContext testContext) throws Exception;1354573750;TODO [SPR-9864] Document overridden afterTestMethod().__@see TestExecutionListener#afterTestMethod(TestContext);public void afterTestMethod(TestContext testContext) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__		}_		RequestContextHolder.resetRequestAttributes()__	};todo,spr,9864,document,overridden,after,test,method,see,test,execution,listener,after,test,method,test,context;public,void,after,test,method,test,context,test,context,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes
ServletTestExecutionListener -> public void afterTestMethod(TestContext testContext) throws Exception;1355187490;Cleans up thread-local state after each test method by {@linkplain_RequestContextHolder#resetRequestAttributes() resetting} Spring Web's_{@code RequestContextHolder}.__@see TestExecutionListener#afterTestMethod(TestContext);public void afterTestMethod(TestContext testContext) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__		}_		RequestContextHolder.resetRequestAttributes()__	};cleans,up,thread,local,state,after,each,test,method,by,linkplain,request,context,holder,reset,request,attributes,resetting,spring,web,s,code,request,context,holder,see,test,execution,listener,after,test,method,test,context;public,void,after,test,method,test,context,test,context,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes
ServletTestExecutionListener -> public void afterTestMethod(TestContext testContext) throws Exception;1357119239;Cleans up thread-local state after each test method by {@linkplain_RequestContextHolder#resetRequestAttributes() resetting} Spring Web's_{@code RequestContextHolder}.__@see TestExecutionListener#afterTestMethod(TestContext);public void afterTestMethod(TestContext testContext) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__		}_		RequestContextHolder.resetRequestAttributes()__	};cleans,up,thread,local,state,after,each,test,method,by,linkplain,request,context,holder,reset,request,attributes,resetting,spring,web,s,code,request,context,holder,see,test,execution,listener,after,test,method,test,context;public,void,after,test,method,test,context,test,context,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes
ServletTestExecutionListener -> public void afterTestMethod(TestContext testContext) throws Exception;1362408075;Cleans up thread-local state after each test method by {@linkplain_RequestContextHolder#resetRequestAttributes() resetting} Spring Web's_{@code RequestContextHolder}.__@see TestExecutionListener#afterTestMethod(TestContext);public void afterTestMethod(TestContext testContext) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__		}_		RequestContextHolder.resetRequestAttributes()__	};cleans,up,thread,local,state,after,each,test,method,by,linkplain,request,context,holder,reset,request,attributes,resetting,spring,web,s,code,request,context,holder,see,test,execution,listener,after,test,method,test,context;public,void,after,test,method,test,context,test,context,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes
ServletTestExecutionListener -> public void afterTestMethod(TestContext testContext) throws Exception;1363208506;Cleans up thread-local state after each test method by {@linkplain_RequestContextHolder#resetRequestAttributes() resetting} Spring Web's_{@code RequestContextHolder}.__@see TestExecutionListener#afterTestMethod(TestContext);public void afterTestMethod(TestContext testContext) throws Exception {_		if (logger.isDebugEnabled()) {_			logger.debug(String.format("Resetting RequestContextHolder for test context %s.", testContext))__		}_		RequestContextHolder.resetRequestAttributes()__	};cleans,up,thread,local,state,after,each,test,method,by,linkplain,request,context,holder,reset,request,attributes,resetting,spring,web,s,code,request,context,holder,see,test,execution,listener,after,test,method,test,context;public,void,after,test,method,test,context,test,context,throws,exception,if,logger,is,debug,enabled,logger,debug,string,format,resetting,request,context,holder,for,test,context,s,test,context,request,context,holder,reset,request,attributes
