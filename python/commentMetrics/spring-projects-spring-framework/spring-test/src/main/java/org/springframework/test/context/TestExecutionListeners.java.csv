# id;timestamp;commentText;codeText;commentWords;codeWords
TestExecutionListeners -> MergeMode mergeMode() default MergeMode.REPLACE_DEFAULTS_;1408062102;The <em>merge mode</em> to use when {@code @TestExecutionListeners} is_declared on a class that does <strong>not</strong> inherit listeners_from a superclass._<p>Can be set to {@link MergeMode#MERGE_WITH_DEFAULTS MERGE_WITH_DEFAULTS}_to have locally declared listeners <em>merged</em> with the default_listeners._<p>The mode is ignored if listeners are inherited from a superclass._<p>Defaults to {@link MergeMode#REPLACE_DEFAULTS REPLACE_DEFAULTS}_for backwards compatibility._@see MergeMode_@since 4.1;MergeMode mergeMode() default MergeMode.REPLACE_DEFAULTS_;the,em,merge,mode,em,to,use,when,code,test,execution,listeners,is,declared,on,a,class,that,does,strong,not,strong,inherit,listeners,from,a,superclass,p,can,be,set,to,link,merge,mode,to,have,locally,declared,listeners,em,merged,em,with,the,default,listeners,p,the,mode,is,ignored,if,listeners,are,inherited,from,a,superclass,p,defaults,to,link,merge,mode,for,backwards,compatibility,see,merge,mode,since,4,1;merge,mode,merge,mode,default,merge,mode
TestExecutionListeners -> MergeMode mergeMode() default MergeMode.REPLACE_DEFAULTS_;1408102693;The <em>merge mode</em> to use when {@code @TestExecutionListeners} is_declared on a class that does <strong>not</strong> inherit listeners_from a superclass._<p>Can be set to {@link MergeMode#MERGE_WITH_DEFAULTS MERGE_WITH_DEFAULTS}_to have locally declared listeners <em>merged</em> with the default_listeners._<p>The mode is ignored if listeners are inherited from a superclass._<p>Defaults to {@link MergeMode#REPLACE_DEFAULTS REPLACE_DEFAULTS}_for backwards compatibility._@see MergeMode_@since 4.1;MergeMode mergeMode() default MergeMode.REPLACE_DEFAULTS_;the,em,merge,mode,em,to,use,when,code,test,execution,listeners,is,declared,on,a,class,that,does,strong,not,strong,inherit,listeners,from,a,superclass,p,can,be,set,to,link,merge,mode,to,have,locally,declared,listeners,em,merged,em,with,the,default,listeners,p,the,mode,is,ignored,if,listeners,are,inherited,from,a,superclass,p,defaults,to,link,merge,mode,for,backwards,compatibility,see,merge,mode,since,4,1;merge,mode,merge,mode,default,merge,mode
TestExecutionListeners -> MergeMode mergeMode() default MergeMode.REPLACE_DEFAULTS_;1432246071;The <em>merge mode</em> to use when {@code @TestExecutionListeners} is_declared on a class that does <strong>not</strong> inherit listeners_from a superclass._<p>Can be set to {@link MergeMode#MERGE_WITH_DEFAULTS MERGE_WITH_DEFAULTS}_to have locally declared listeners <em>merged</em> with the default_listeners._<p>The mode is ignored if listeners are inherited from a superclass._<p>Defaults to {@link MergeMode#REPLACE_DEFAULTS REPLACE_DEFAULTS}_for backwards compatibility._@see MergeMode_@since 4.1;MergeMode mergeMode() default MergeMode.REPLACE_DEFAULTS_;the,em,merge,mode,em,to,use,when,code,test,execution,listeners,is,declared,on,a,class,that,does,strong,not,strong,inherit,listeners,from,a,superclass,p,can,be,set,to,link,merge,mode,to,have,locally,declared,listeners,em,merged,em,with,the,default,listeners,p,the,mode,is,ignored,if,listeners,are,inherited,from,a,superclass,p,defaults,to,link,merge,mode,for,backwards,compatibility,see,merge,mode,since,4,1;merge,mode,merge,mode,default,merge,mode
TestExecutionListeners -> MergeMode mergeMode() default MergeMode.REPLACE_DEFAULTS_;1438176426;The <em>merge mode</em> to use when {@code @TestExecutionListeners} is_declared on a class that does <strong>not</strong> inherit listeners_from a superclass._<p>Can be set to {@link MergeMode#MERGE_WITH_DEFAULTS MERGE_WITH_DEFAULTS}_to have locally declared listeners <em>merged</em> with the default_listeners._<p>The mode is ignored if listeners are inherited from a superclass._<p>Defaults to {@link MergeMode#REPLACE_DEFAULTS REPLACE_DEFAULTS}_for backwards compatibility._@see MergeMode_@since 4.1;MergeMode mergeMode() default MergeMode.REPLACE_DEFAULTS_;the,em,merge,mode,em,to,use,when,code,test,execution,listeners,is,declared,on,a,class,that,does,strong,not,strong,inherit,listeners,from,a,superclass,p,can,be,set,to,link,merge,mode,to,have,locally,declared,listeners,em,merged,em,with,the,default,listeners,p,the,mode,is,ignored,if,listeners,are,inherited,from,a,superclass,p,defaults,to,link,merge,mode,for,backwards,compatibility,see,merge,mode,since,4,1;merge,mode,merge,mode,default,merge,mode
TestExecutionListeners -> MergeMode mergeMode() default MergeMode.REPLACE_DEFAULTS_;1459842161;The <em>merge mode</em> to use when {@code @TestExecutionListeners} is_declared on a class that does <strong>not</strong> inherit listeners_from a superclass._<p>Can be set to {@link MergeMode#MERGE_WITH_DEFAULTS MERGE_WITH_DEFAULTS}_to have locally declared listeners <em>merged</em> with the default_listeners._<p>The mode is ignored if listeners are inherited from a superclass._<p>Defaults to {@link MergeMode#REPLACE_DEFAULTS REPLACE_DEFAULTS}_for backwards compatibility._@see MergeMode_@since 4.1;MergeMode mergeMode() default MergeMode.REPLACE_DEFAULTS_;the,em,merge,mode,em,to,use,when,code,test,execution,listeners,is,declared,on,a,class,that,does,strong,not,strong,inherit,listeners,from,a,superclass,p,can,be,set,to,link,merge,mode,to,have,locally,declared,listeners,em,merged,em,with,the,default,listeners,p,the,mode,is,ignored,if,listeners,are,inherited,from,a,superclass,p,defaults,to,link,merge,mode,for,backwards,compatibility,see,merge,mode,since,4,1;merge,mode,merge,mode,default,merge,mode
TestExecutionListeners -> MergeMode mergeMode() default MergeMode.REPLACE_DEFAULTS_;1462470884;The <em>merge mode</em> to use when {@code @TestExecutionListeners} is_declared on a class that does <strong>not</strong> inherit listeners_from a superclass._<p>Can be set to {@link MergeMode#MERGE_WITH_DEFAULTS MERGE_WITH_DEFAULTS}_to have locally declared listeners <em>merged</em> with the default_listeners._<p>The mode is ignored if listeners are inherited from a superclass._<p>Defaults to {@link MergeMode#REPLACE_DEFAULTS REPLACE_DEFAULTS}_for backwards compatibility._@see MergeMode_@since 4.1;MergeMode mergeMode() default MergeMode.REPLACE_DEFAULTS_;the,em,merge,mode,em,to,use,when,code,test,execution,listeners,is,declared,on,a,class,that,does,strong,not,strong,inherit,listeners,from,a,superclass,p,can,be,set,to,link,merge,mode,to,have,locally,declared,listeners,em,merged,em,with,the,default,listeners,p,the,mode,is,ignored,if,listeners,are,inherited,from,a,superclass,p,defaults,to,link,merge,mode,for,backwards,compatibility,see,merge,mode,since,4,1;merge,mode,merge,mode,default,merge,mode
TestExecutionListeners -> boolean inheritListeners() default true_;1328020251;<p>_Whether or not {@link #value() TestExecutionListeners} from superclasses_should be <em>inherited</em>._</p>_<p>_The default value is <code>true</code>, which means that an annotated_class will <em>inherit</em> the listeners defined by an annotated_superclass. Specifically, the listeners for an annotated class will be_appended to the list of listeners defined by an annotated superclass._Thus, subclasses have the option of <em>extending</em> the list of_listeners. In the following example, <code>AbstractBaseTest</code> will_be configured with <code>DependencyInjectionTestExecutionListener</code>_and <code>DirtiesContextTestExecutionListener</code>_ whereas,_<code>TransactionalTest</code> will be configured with_<code>DependencyInjectionTestExecutionListener</code>,_<code>DirtiesContextTestExecutionListener</code>, <strong>and</strong>_<code>TransactionalTestExecutionListener</code>, in that order._</p>__<pre class="code">_&#064_TestExecutionListeners({ DependencyInjectionTestExecutionListener.class,_DirtiesContextTestExecutionListener.class })_public abstract class AbstractBaseTest {_// ...___&#064_TestExecutionListeners(TransactionalTestExecutionListener.class)_public class TransactionalTest extends AbstractBaseTest {_// ...__</pre>__<p>_If <code>inheritListeners</code> is set to <code>false</code>, the_listeners for the annotated class will <em>shadow</em> and effectively_replace any listeners defined by a superclass._</p>;boolean inheritListeners() default true_;p,whether,or,not,link,value,test,execution,listeners,from,superclasses,should,be,em,inherited,em,p,p,the,default,value,is,code,true,code,which,means,that,an,annotated,class,will,em,inherit,em,the,listeners,defined,by,an,annotated,superclass,specifically,the,listeners,for,an,annotated,class,will,be,appended,to,the,list,of,listeners,defined,by,an,annotated,superclass,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,listeners,in,the,following,example,code,abstract,base,test,code,will,be,configured,with,code,dependency,injection,test,execution,listener,code,and,code,dirties,context,test,execution,listener,code,whereas,code,transactional,test,code,will,be,configured,with,code,dependency,injection,test,execution,listener,code,code,dirties,context,test,execution,listener,code,strong,and,strong,code,transactional,test,execution,listener,code,in,that,order,p,pre,class,code,064,test,execution,listeners,dependency,injection,test,execution,listener,class,dirties,context,test,execution,listener,class,public,abstract,class,abstract,base,test,064,test,execution,listeners,transactional,test,execution,listener,class,public,class,transactional,test,extends,abstract,base,test,pre,p,if,code,inherit,listeners,code,is,set,to,code,false,code,the,listeners,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,listeners,defined,by,a,superclass,p;boolean,inherit,listeners,default,true
TestExecutionListeners -> boolean inheritListeners() default true_;1356735495;<p>_Whether or not {@link #value() TestExecutionListeners} from superclasses_should be <em>inherited</em>._</p>_<p>_The default value is {@code true}, which means that an annotated_class will <em>inherit</em> the listeners defined by an annotated_superclass. Specifically, the listeners for an annotated class will be_appended to the list of listeners defined by an annotated superclass._Thus, subclasses have the option of <em>extending</em> the list of_listeners. In the following example, {@code AbstractBaseTest} will_be configured with {@code DependencyInjectionTestExecutionListener}_and {@code DirtiesContextTestExecutionListener}_ whereas,_{@code TransactionalTest} will be configured with_{@code DependencyInjectionTestExecutionListener},_{@code DirtiesContextTestExecutionListener}, <strong>and</strong>_{@code TransactionalTestExecutionListener}, in that order._</p>__<pre class="code">_&#064_TestExecutionListeners({ DependencyInjectionTestExecutionListener.class,_DirtiesContextTestExecutionListener.class })_public abstract class AbstractBaseTest {_// ...___&#064_TestExecutionListeners(TransactionalTestExecutionListener.class)_public class TransactionalTest extends AbstractBaseTest {_// ...__</pre>__<p>_If {@code inheritListeners} is set to {@code false}, the_listeners for the annotated class will <em>shadow</em> and effectively_replace any listeners defined by a superclass._</p>;boolean inheritListeners() default true_;p,whether,or,not,link,value,test,execution,listeners,from,superclasses,should,be,em,inherited,em,p,p,the,default,value,is,code,true,which,means,that,an,annotated,class,will,em,inherit,em,the,listeners,defined,by,an,annotated,superclass,specifically,the,listeners,for,an,annotated,class,will,be,appended,to,the,list,of,listeners,defined,by,an,annotated,superclass,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,listeners,in,the,following,example,code,abstract,base,test,will,be,configured,with,code,dependency,injection,test,execution,listener,and,code,dirties,context,test,execution,listener,whereas,code,transactional,test,will,be,configured,with,code,dependency,injection,test,execution,listener,code,dirties,context,test,execution,listener,strong,and,strong,code,transactional,test,execution,listener,in,that,order,p,pre,class,code,064,test,execution,listeners,dependency,injection,test,execution,listener,class,dirties,context,test,execution,listener,class,public,abstract,class,abstract,base,test,064,test,execution,listeners,transactional,test,execution,listener,class,public,class,transactional,test,extends,abstract,base,test,pre,p,if,code,inherit,listeners,is,set,to,code,false,the,listeners,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,listeners,defined,by,a,superclass,p;boolean,inherit,listeners,default,true
TestExecutionListeners -> boolean inheritListeners() default true_;1363208506;Whether or not {@link #value() TestExecutionListeners} from superclasses_should be <em>inherited</em>._<p>_The default value is {@code true}, which means that an annotated_class will <em>inherit</em> the listeners defined by an annotated_superclass. Specifically, the listeners for an annotated class will be_appended to the list of listeners defined by an annotated superclass._Thus, subclasses have the option of <em>extending</em> the list of_listeners. In the following example, {@code AbstractBaseTest} will_be configured with {@code DependencyInjectionTestExecutionListener}_and {@code DirtiesContextTestExecutionListener}_ whereas,_{@code TransactionalTest} will be configured with_{@code DependencyInjectionTestExecutionListener},_{@code DirtiesContextTestExecutionListener}, <strong>and</strong>_{@code TransactionalTestExecutionListener}, in that order.__<pre class="code">_&#064_TestExecutionListeners({_DependencyInjectionTestExecutionListener.class,_DirtiesContextTestExecutionListener.class__public abstract class AbstractBaseTest {_// ...___&#064_TestExecutionListeners(TransactionalTestExecutionListener.class)_public class TransactionalTest extends AbstractBaseTest {_// ..._}</pre>__<p>_If {@code inheritListeners} is set to {@code false}, the listeners for the_annotated class will <em>shadow</em> and effectively replace any listeners_defined by a superclass.;boolean inheritListeners() default true_;whether,or,not,link,value,test,execution,listeners,from,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,which,means,that,an,annotated,class,will,em,inherit,em,the,listeners,defined,by,an,annotated,superclass,specifically,the,listeners,for,an,annotated,class,will,be,appended,to,the,list,of,listeners,defined,by,an,annotated,superclass,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,listeners,in,the,following,example,code,abstract,base,test,will,be,configured,with,code,dependency,injection,test,execution,listener,and,code,dirties,context,test,execution,listener,whereas,code,transactional,test,will,be,configured,with,code,dependency,injection,test,execution,listener,code,dirties,context,test,execution,listener,strong,and,strong,code,transactional,test,execution,listener,in,that,order,pre,class,code,064,test,execution,listeners,dependency,injection,test,execution,listener,class,dirties,context,test,execution,listener,class,public,abstract,class,abstract,base,test,064,test,execution,listeners,transactional,test,execution,listener,class,public,class,transactional,test,extends,abstract,base,test,pre,p,if,code,inherit,listeners,is,set,to,code,false,the,listeners,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,listeners,defined,by,a,superclass;boolean,inherit,listeners,default,true
TestExecutionListeners -> boolean inheritListeners() default true_;1386769390;Whether or not {@link #value() TestExecutionListeners} from superclasses_should be <em>inherited</em>._<p>_The default value is {@code true}, which means that an annotated_class will <em>inherit</em> the listeners defined by an annotated_superclass. Specifically, the listeners for an annotated class will be_appended to the list of listeners defined by an annotated superclass._Thus, subclasses have the option of <em>extending</em> the list of_listeners. In the following example, {@code AbstractBaseTest} will_be configured with {@code DependencyInjectionTestExecutionListener}_and {@code DirtiesContextTestExecutionListener}_ whereas,_{@code TransactionalTest} will be configured with_{@code DependencyInjectionTestExecutionListener},_{@code DirtiesContextTestExecutionListener}, <strong>and</strong>_{@code TransactionalTestExecutionListener}, in that order.__<pre class="code">_&#064_TestExecutionListeners({_DependencyInjectionTestExecutionListener.class,_DirtiesContextTestExecutionListener.class__public abstract class AbstractBaseTest {_// ...___&#064_TestExecutionListeners(TransactionalTestExecutionListener.class)_public class TransactionalTest extends AbstractBaseTest {_// ..._}</pre>__<p>_If {@code inheritListeners} is set to {@code false}, the listeners for the_annotated class will <em>shadow</em> and effectively replace any listeners_defined by a superclass.;boolean inheritListeners() default true_;whether,or,not,link,value,test,execution,listeners,from,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,which,means,that,an,annotated,class,will,em,inherit,em,the,listeners,defined,by,an,annotated,superclass,specifically,the,listeners,for,an,annotated,class,will,be,appended,to,the,list,of,listeners,defined,by,an,annotated,superclass,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,listeners,in,the,following,example,code,abstract,base,test,will,be,configured,with,code,dependency,injection,test,execution,listener,and,code,dirties,context,test,execution,listener,whereas,code,transactional,test,will,be,configured,with,code,dependency,injection,test,execution,listener,code,dirties,context,test,execution,listener,strong,and,strong,code,transactional,test,execution,listener,in,that,order,pre,class,code,064,test,execution,listeners,dependency,injection,test,execution,listener,class,dirties,context,test,execution,listener,class,public,abstract,class,abstract,base,test,064,test,execution,listeners,transactional,test,execution,listener,class,public,class,transactional,test,extends,abstract,base,test,pre,p,if,code,inherit,listeners,is,set,to,code,false,the,listeners,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,listeners,defined,by,a,superclass;boolean,inherit,listeners,default,true
TestExecutionListeners -> boolean inheritListeners() default true_;1397082962;Whether or not {@link #value() TestExecutionListeners} from superclasses_should be <em>inherited</em>._<p>_The default value is {@code true}, which means that an annotated_class will <em>inherit</em> the listeners defined by an annotated_superclass. Specifically, the listeners for an annotated class will be_appended to the list of listeners defined by an annotated superclass._Thus, subclasses have the option of <em>extending</em> the list of_listeners. In the following example, {@code AbstractBaseTest} will_be configured with {@code DependencyInjectionTestExecutionListener}_and {@code DirtiesContextTestExecutionListener}_ whereas,_{@code TransactionalTest} will be configured with_{@code DependencyInjectionTestExecutionListener},_{@code DirtiesContextTestExecutionListener}, <strong>and</strong>_{@code TransactionalTestExecutionListener}, in that order.__<pre class="code">_&#064_TestExecutionListeners({_DependencyInjectionTestExecutionListener.class,_DirtiesContextTestExecutionListener.class__public abstract class AbstractBaseTest {_// ...___&#064_TestExecutionListeners(TransactionalTestExecutionListener.class)_public class TransactionalTest extends AbstractBaseTest {_// ..._}</pre>__<p>_If {@code inheritListeners} is set to {@code false}, the listeners for the_annotated class will <em>shadow</em> and effectively replace any listeners_defined by a superclass.;boolean inheritListeners() default true_;whether,or,not,link,value,test,execution,listeners,from,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,which,means,that,an,annotated,class,will,em,inherit,em,the,listeners,defined,by,an,annotated,superclass,specifically,the,listeners,for,an,annotated,class,will,be,appended,to,the,list,of,listeners,defined,by,an,annotated,superclass,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,listeners,in,the,following,example,code,abstract,base,test,will,be,configured,with,code,dependency,injection,test,execution,listener,and,code,dirties,context,test,execution,listener,whereas,code,transactional,test,will,be,configured,with,code,dependency,injection,test,execution,listener,code,dirties,context,test,execution,listener,strong,and,strong,code,transactional,test,execution,listener,in,that,order,pre,class,code,064,test,execution,listeners,dependency,injection,test,execution,listener,class,dirties,context,test,execution,listener,class,public,abstract,class,abstract,base,test,064,test,execution,listeners,transactional,test,execution,listener,class,public,class,transactional,test,extends,abstract,base,test,pre,p,if,code,inherit,listeners,is,set,to,code,false,the,listeners,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,listeners,defined,by,a,superclass;boolean,inherit,listeners,default,true
TestExecutionListeners -> boolean inheritListeners() default true_;1408062102;Whether or not {@link #listeners TestExecutionListeners} from superclasses_should be <em>inherited</em>.__<p>The default value is {@code true}, which means that an annotated_class will <em>inherit</em> the listeners defined by an annotated_superclass. Specifically, the listeners for an annotated class will be_appended to the list of listeners defined by an annotated superclass._Thus, subclasses have the option of <em>extending</em> the list of_listeners. In the following example, {@code AbstractBaseTest} will_be configured with {@code DependencyInjectionTestExecutionListener}_and {@code DirtiesContextTestExecutionListener}_ whereas,_{@code TransactionalTest} will be configured with_{@code DependencyInjectionTestExecutionListener},_{@code DirtiesContextTestExecutionListener}, <strong>and</strong>_{@code TransactionalTestExecutionListener}, in that order.__<pre class="code">_&#064_TestExecutionListeners({_DependencyInjectionTestExecutionListener.class,_DirtiesContextTestExecutionListener.class__public abstract class AbstractBaseTest {_// ...___&#064_TestExecutionListeners(TransactionalTestExecutionListener.class)_public class TransactionalTest extends AbstractBaseTest {_// ..._}</pre>__<p>_If {@code inheritListeners} is set to {@code false}, the listeners for the_annotated class will <em>shadow</em> and effectively replace any listeners_defined by a superclass.;boolean inheritListeners() default true_;whether,or,not,link,listeners,test,execution,listeners,from,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,which,means,that,an,annotated,class,will,em,inherit,em,the,listeners,defined,by,an,annotated,superclass,specifically,the,listeners,for,an,annotated,class,will,be,appended,to,the,list,of,listeners,defined,by,an,annotated,superclass,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,listeners,in,the,following,example,code,abstract,base,test,will,be,configured,with,code,dependency,injection,test,execution,listener,and,code,dirties,context,test,execution,listener,whereas,code,transactional,test,will,be,configured,with,code,dependency,injection,test,execution,listener,code,dirties,context,test,execution,listener,strong,and,strong,code,transactional,test,execution,listener,in,that,order,pre,class,code,064,test,execution,listeners,dependency,injection,test,execution,listener,class,dirties,context,test,execution,listener,class,public,abstract,class,abstract,base,test,064,test,execution,listeners,transactional,test,execution,listener,class,public,class,transactional,test,extends,abstract,base,test,pre,p,if,code,inherit,listeners,is,set,to,code,false,the,listeners,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,listeners,defined,by,a,superclass;boolean,inherit,listeners,default,true
TestExecutionListeners -> boolean inheritListeners() default true_;1408102693;Whether or not {@link #listeners TestExecutionListeners} from superclasses_should be <em>inherited</em>.__<p>The default value is {@code true}, which means that an annotated_class will <em>inherit</em> the listeners defined by an annotated_superclass. Specifically, the listeners for an annotated class will be_appended to the list of listeners defined by an annotated superclass._Thus, subclasses have the option of <em>extending</em> the list of_listeners. In the following example, {@code AbstractBaseTest} will_be configured with {@code DependencyInjectionTestExecutionListener}_and {@code DirtiesContextTestExecutionListener}_ whereas,_{@code TransactionalTest} will be configured with_{@code DependencyInjectionTestExecutionListener},_{@code DirtiesContextTestExecutionListener}, <strong>and</strong>_{@code TransactionalTestExecutionListener}, in that order.__<pre class="code">_&#064_TestExecutionListeners({_DependencyInjectionTestExecutionListener.class,_DirtiesContextTestExecutionListener.class__public abstract class AbstractBaseTest {_// ...___&#064_TestExecutionListeners(TransactionalTestExecutionListener.class)_public class TransactionalTest extends AbstractBaseTest {_// ..._}</pre>__<p>If {@code inheritListeners} is set to {@code false}, the listeners for_the annotated class will <em>shadow</em> and effectively replace any_listeners defined by a superclass.;boolean inheritListeners() default true_;whether,or,not,link,listeners,test,execution,listeners,from,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,which,means,that,an,annotated,class,will,em,inherit,em,the,listeners,defined,by,an,annotated,superclass,specifically,the,listeners,for,an,annotated,class,will,be,appended,to,the,list,of,listeners,defined,by,an,annotated,superclass,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,listeners,in,the,following,example,code,abstract,base,test,will,be,configured,with,code,dependency,injection,test,execution,listener,and,code,dirties,context,test,execution,listener,whereas,code,transactional,test,will,be,configured,with,code,dependency,injection,test,execution,listener,code,dirties,context,test,execution,listener,strong,and,strong,code,transactional,test,execution,listener,in,that,order,pre,class,code,064,test,execution,listeners,dependency,injection,test,execution,listener,class,dirties,context,test,execution,listener,class,public,abstract,class,abstract,base,test,064,test,execution,listeners,transactional,test,execution,listener,class,public,class,transactional,test,extends,abstract,base,test,pre,p,if,code,inherit,listeners,is,set,to,code,false,the,listeners,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,listeners,defined,by,a,superclass;boolean,inherit,listeners,default,true
TestExecutionListeners -> boolean inheritListeners() default true_;1432246071;Whether or not {@link #listeners TestExecutionListeners} from superclasses_should be <em>inherited</em>.__<p>The default value is {@code true}, which means that an annotated_class will <em>inherit</em> the listeners defined by an annotated_superclass. Specifically, the listeners for an annotated class will be_appended to the list of listeners defined by an annotated superclass._Thus, subclasses have the option of <em>extending</em> the list of_listeners. In the following example, {@code AbstractBaseTest} will_be configured with {@code DependencyInjectionTestExecutionListener}_and {@code DirtiesContextTestExecutionListener}_ whereas,_{@code TransactionalTest} will be configured with_{@code DependencyInjectionTestExecutionListener},_{@code DirtiesContextTestExecutionListener}, <strong>and</strong>_{@code TransactionalTestExecutionListener}, in that order.__<pre class="code">_&#064_TestExecutionListeners({_DependencyInjectionTestExecutionListener.class,_DirtiesContextTestExecutionListener.class__public abstract class AbstractBaseTest {_// ...___&#064_TestExecutionListeners(TransactionalTestExecutionListener.class)_public class TransactionalTest extends AbstractBaseTest {_// ..._}</pre>__<p>If {@code inheritListeners} is set to {@code false}, the listeners for_the annotated class will <em>shadow</em> and effectively replace any_listeners defined by a superclass.;boolean inheritListeners() default true_;whether,or,not,link,listeners,test,execution,listeners,from,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,which,means,that,an,annotated,class,will,em,inherit,em,the,listeners,defined,by,an,annotated,superclass,specifically,the,listeners,for,an,annotated,class,will,be,appended,to,the,list,of,listeners,defined,by,an,annotated,superclass,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,listeners,in,the,following,example,code,abstract,base,test,will,be,configured,with,code,dependency,injection,test,execution,listener,and,code,dirties,context,test,execution,listener,whereas,code,transactional,test,will,be,configured,with,code,dependency,injection,test,execution,listener,code,dirties,context,test,execution,listener,strong,and,strong,code,transactional,test,execution,listener,in,that,order,pre,class,code,064,test,execution,listeners,dependency,injection,test,execution,listener,class,dirties,context,test,execution,listener,class,public,abstract,class,abstract,base,test,064,test,execution,listeners,transactional,test,execution,listener,class,public,class,transactional,test,extends,abstract,base,test,pre,p,if,code,inherit,listeners,is,set,to,code,false,the,listeners,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,listeners,defined,by,a,superclass;boolean,inherit,listeners,default,true
TestExecutionListeners -> boolean inheritListeners() default true_;1438176426;Whether or not {@link #listeners TestExecutionListeners} from superclasses_should be <em>inherited</em>.__<p>The default value is {@code true}, which means that an annotated_class will <em>inherit</em> the listeners defined by an annotated_superclass. Specifically, the listeners for an annotated class will be_appended to the list of listeners defined by an annotated superclass._Thus, subclasses have the option of <em>extending</em> the list of_listeners. In the following example, {@code AbstractBaseTest} will_be configured with {@code DependencyInjectionTestExecutionListener}_and {@code DirtiesContextTestExecutionListener}_ whereas,_{@code TransactionalTest} will be configured with_{@code DependencyInjectionTestExecutionListener},_{@code DirtiesContextTestExecutionListener}, <strong>and</strong>_{@code TransactionalTestExecutionListener}, in that order.__<pre class="code">_&#064_TestExecutionListeners({_DependencyInjectionTestExecutionListener.class,_DirtiesContextTestExecutionListener.class__public abstract class AbstractBaseTest {_// ...___&#064_TestExecutionListeners(TransactionalTestExecutionListener.class)_public class TransactionalTest extends AbstractBaseTest {_// ..._}</pre>__<p>If {@code inheritListeners} is set to {@code false}, the listeners for_the annotated class will <em>shadow</em> and effectively replace any_listeners defined by a superclass.;boolean inheritListeners() default true_;whether,or,not,link,listeners,test,execution,listeners,from,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,which,means,that,an,annotated,class,will,em,inherit,em,the,listeners,defined,by,an,annotated,superclass,specifically,the,listeners,for,an,annotated,class,will,be,appended,to,the,list,of,listeners,defined,by,an,annotated,superclass,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,listeners,in,the,following,example,code,abstract,base,test,will,be,configured,with,code,dependency,injection,test,execution,listener,and,code,dirties,context,test,execution,listener,whereas,code,transactional,test,will,be,configured,with,code,dependency,injection,test,execution,listener,code,dirties,context,test,execution,listener,strong,and,strong,code,transactional,test,execution,listener,in,that,order,pre,class,code,064,test,execution,listeners,dependency,injection,test,execution,listener,class,dirties,context,test,execution,listener,class,public,abstract,class,abstract,base,test,064,test,execution,listeners,transactional,test,execution,listener,class,public,class,transactional,test,extends,abstract,base,test,pre,p,if,code,inherit,listeners,is,set,to,code,false,the,listeners,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,listeners,defined,by,a,superclass;boolean,inherit,listeners,default,true
TestExecutionListeners -> boolean inheritListeners() default true_;1459842161;Whether or not {@link #listeners TestExecutionListeners} from superclasses_should be <em>inherited</em>._<p>The default value is {@code true}, which means that an annotated_class will <em>inherit</em> the listeners defined by an annotated_superclass. Specifically, the listeners for an annotated class will be_appended to the list of listeners defined by an annotated superclass._Thus, subclasses have the option of <em>extending</em> the list of_listeners. In the following example, {@code AbstractBaseTest} will_be configured with {@code DependencyInjectionTestExecutionListener}_and {@code DirtiesContextTestExecutionListener}_ whereas,_{@code TransactionalTest} will be configured with_{@code DependencyInjectionTestExecutionListener},_{@code DirtiesContextTestExecutionListener}, <strong>and</strong>_{@code TransactionalTestExecutionListener}, in that order._<pre class="code">_&#064_TestExecutionListeners({_DependencyInjectionTestExecutionListener.class,_DirtiesContextTestExecutionListener.class__public abstract class AbstractBaseTest {_// ...___&#064_TestExecutionListeners(TransactionalTestExecutionListener.class)_public class TransactionalTest extends AbstractBaseTest {_// ..._}</pre>_<p>If {@code inheritListeners} is set to {@code false}, the listeners for_the annotated class will <em>shadow</em> and effectively replace any_listeners defined by a superclass.;boolean inheritListeners() default true_;whether,or,not,link,listeners,test,execution,listeners,from,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,which,means,that,an,annotated,class,will,em,inherit,em,the,listeners,defined,by,an,annotated,superclass,specifically,the,listeners,for,an,annotated,class,will,be,appended,to,the,list,of,listeners,defined,by,an,annotated,superclass,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,listeners,in,the,following,example,code,abstract,base,test,will,be,configured,with,code,dependency,injection,test,execution,listener,and,code,dirties,context,test,execution,listener,whereas,code,transactional,test,will,be,configured,with,code,dependency,injection,test,execution,listener,code,dirties,context,test,execution,listener,strong,and,strong,code,transactional,test,execution,listener,in,that,order,pre,class,code,064,test,execution,listeners,dependency,injection,test,execution,listener,class,dirties,context,test,execution,listener,class,public,abstract,class,abstract,base,test,064,test,execution,listeners,transactional,test,execution,listener,class,public,class,transactional,test,extends,abstract,base,test,pre,p,if,code,inherit,listeners,is,set,to,code,false,the,listeners,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,listeners,defined,by,a,superclass;boolean,inherit,listeners,default,true
TestExecutionListeners -> boolean inheritListeners() default true_;1462470884;Whether or not {@link #listeners TestExecutionListeners} from superclasses_should be <em>inherited</em>._<p>The default value is {@code true}, which means that an annotated_class will <em>inherit</em> the listeners defined by an annotated_superclass. Specifically, the listeners for an annotated class will be_appended to the list of listeners defined by an annotated superclass._Thus, subclasses have the option of <em>extending</em> the list of_listeners. In the following example, {@code AbstractBaseTest} will_be configured with {@code DependencyInjectionTestExecutionListener}_and {@code DirtiesContextTestExecutionListener}_ whereas,_{@code TransactionalTest} will be configured with_{@code DependencyInjectionTestExecutionListener},_{@code DirtiesContextTestExecutionListener}, <strong>and</strong>_{@code TransactionalTestExecutionListener}, in that order._<pre class="code">_&#064_TestExecutionListeners({_DependencyInjectionTestExecutionListener.class,_DirtiesContextTestExecutionListener.class__public abstract class AbstractBaseTest {_// ...___&#064_TestExecutionListeners(TransactionalTestExecutionListener.class)_public class TransactionalTest extends AbstractBaseTest {_// ..._}</pre>_<p>If {@code inheritListeners} is set to {@code false}, the listeners for_the annotated class will <em>shadow</em> and effectively replace any_listeners defined by a superclass.;boolean inheritListeners() default true_;whether,or,not,link,listeners,test,execution,listeners,from,superclasses,should,be,em,inherited,em,p,the,default,value,is,code,true,which,means,that,an,annotated,class,will,em,inherit,em,the,listeners,defined,by,an,annotated,superclass,specifically,the,listeners,for,an,annotated,class,will,be,appended,to,the,list,of,listeners,defined,by,an,annotated,superclass,thus,subclasses,have,the,option,of,em,extending,em,the,list,of,listeners,in,the,following,example,code,abstract,base,test,will,be,configured,with,code,dependency,injection,test,execution,listener,and,code,dirties,context,test,execution,listener,whereas,code,transactional,test,will,be,configured,with,code,dependency,injection,test,execution,listener,code,dirties,context,test,execution,listener,strong,and,strong,code,transactional,test,execution,listener,in,that,order,pre,class,code,064,test,execution,listeners,dependency,injection,test,execution,listener,class,dirties,context,test,execution,listener,class,public,abstract,class,abstract,base,test,064,test,execution,listeners,transactional,test,execution,listener,class,public,class,transactional,test,extends,abstract,base,test,pre,p,if,code,inherit,listeners,is,set,to,code,false,the,listeners,for,the,annotated,class,will,em,shadow,em,and,effectively,replace,any,listeners,defined,by,a,superclass;boolean,inherit,listeners,default,true
TestExecutionListeners -> @AliasFor("value") 	Class<? extends TestExecutionListener>[] listeners() default {}_;1438176426;The {@link TestExecutionListener TestExecutionListeners} to register with_the {@link TestContextManager}.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value}, but it may be used instead of {@link #value}.__@see org.springframework.test.context.web.ServletTestExecutionListener_@see org.springframework.test.context.support.DependencyInjectionTestExecutionListener_@see org.springframework.test.context.support.DirtiesContextTestExecutionListener_@see org.springframework.test.context.transaction.TransactionalTestExecutionListener_@see org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener;@AliasFor("value")_	Class<? extends TestExecutionListener>[] listeners() default {}_;the,link,test,execution,listener,test,execution,listeners,to,register,with,the,link,test,context,manager,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,but,it,may,be,used,instead,of,link,value,see,org,springframework,test,context,web,servlet,test,execution,listener,see,org,springframework,test,context,support,dependency,injection,test,execution,listener,see,org,springframework,test,context,support,dirties,context,test,execution,listener,see,org,springframework,test,context,transaction,transactional,test,execution,listener,see,org,springframework,test,context,jdbc,sql,scripts,test,execution,listener;alias,for,value,class,extends,test,execution,listener,listeners,default
TestExecutionListeners -> @AliasFor("value") 	Class<? extends TestExecutionListener>[] listeners() default {}_;1459842161;The {@link TestExecutionListener TestExecutionListeners} to register with_the {@link TestContextManager}._<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value}, but it may be used instead of {@link #value}._@see org.springframework.test.context.web.ServletTestExecutionListener_@see org.springframework.test.context.support.DependencyInjectionTestExecutionListener_@see org.springframework.test.context.support.DirtiesContextTestExecutionListener_@see org.springframework.test.context.transaction.TransactionalTestExecutionListener_@see org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener;@AliasFor("value")_	Class<? extends TestExecutionListener>[] listeners() default {}_;the,link,test,execution,listener,test,execution,listeners,to,register,with,the,link,test,context,manager,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,but,it,may,be,used,instead,of,link,value,see,org,springframework,test,context,web,servlet,test,execution,listener,see,org,springframework,test,context,support,dependency,injection,test,execution,listener,see,org,springframework,test,context,support,dirties,context,test,execution,listener,see,org,springframework,test,context,transaction,transactional,test,execution,listener,see,org,springframework,test,context,jdbc,sql,scripts,test,execution,listener;alias,for,value,class,extends,test,execution,listener,listeners,default
TestExecutionListeners -> @AliasFor("value") 	Class<? extends TestExecutionListener>[] listeners() default {}_;1462470884;The {@link TestExecutionListener TestExecutionListeners} to register with_the {@link TestContextManager}._<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value}, but it may be used instead of {@link #value}._@see org.springframework.test.context.web.ServletTestExecutionListener_@see org.springframework.test.context.support.DependencyInjectionTestExecutionListener_@see org.springframework.test.context.support.DirtiesContextTestExecutionListener_@see org.springframework.test.context.transaction.TransactionalTestExecutionListener_@see org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener;@AliasFor("value")_	Class<? extends TestExecutionListener>[] listeners() default {}_;the,link,test,execution,listener,test,execution,listeners,to,register,with,the,link,test,context,manager,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,but,it,may,be,used,instead,of,link,value,see,org,springframework,test,context,web,servlet,test,execution,listener,see,org,springframework,test,context,support,dependency,injection,test,execution,listener,see,org,springframework,test,context,support,dirties,context,test,execution,listener,see,org,springframework,test,context,transaction,transactional,test,execution,listener,see,org,springframework,test,context,jdbc,sql,scripts,test,execution,listener;alias,for,value,class,extends,test,execution,listener,listeners,default
TestExecutionListeners -> Class<? extends TestExecutionListener>[] value() default {}_;1328020251;Alias for {@link #listeners() listeners}.;Class<? extends TestExecutionListener>[] value() default {}_;alias,for,link,listeners,listeners;class,extends,test,execution,listener,value,default
TestExecutionListeners -> Class<? extends TestExecutionListener>[] value() default {}_;1356735495;Alias for {@link #listeners() listeners}.;Class<? extends TestExecutionListener>[] value() default {}_;alias,for,link,listeners,listeners;class,extends,test,execution,listener,value,default
TestExecutionListeners -> Class<? extends TestExecutionListener>[] value() default {}_;1363208506;Alias for {@link #listeners() listeners}.;Class<? extends TestExecutionListener>[] value() default {}_;alias,for,link,listeners,listeners;class,extends,test,execution,listener,value,default
TestExecutionListeners -> Class<? extends TestExecutionListener>[] value() default {}_;1386769390;Alias for {@link #listeners() listeners}.;Class<? extends TestExecutionListener>[] value() default {}_;alias,for,link,listeners,listeners;class,extends,test,execution,listener,value,default
TestExecutionListeners -> Class<? extends TestExecutionListener>[] value() default {}_;1397082962;Alias for {@link #listeners() listeners}.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #listeners}, but it may be used instead of {@link #listeners}.;Class<? extends TestExecutionListener>[] value() default {}_;alias,for,link,listeners,listeners,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,listeners,but,it,may,be,used,instead,of,link,listeners;class,extends,test,execution,listener,value,default
TestExecutionListeners -> Class<? extends TestExecutionListener>[] value() default {}_;1408062102;Alias for {@link #listeners}.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #listeners}, but it may be used instead of {@link #listeners}.;Class<? extends TestExecutionListener>[] value() default {}_;alias,for,link,listeners,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,listeners,but,it,may,be,used,instead,of,link,listeners;class,extends,test,execution,listener,value,default
TestExecutionListeners -> Class<? extends TestExecutionListener>[] value() default {}_;1408102693;Alias for {@link #listeners}.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #listeners}, but it may be used instead of {@link #listeners}.;Class<? extends TestExecutionListener>[] value() default {}_;alias,for,link,listeners,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,listeners,but,it,may,be,used,instead,of,link,listeners;class,extends,test,execution,listener,value,default
TestExecutionListeners -> Class<? extends TestExecutionListener>[] listeners() default {}_;1328020251;<p>_The {@link TestExecutionListener TestExecutionListeners} to register with_a {@link TestContextManager}._</p>__@see org.springframework.test.context.support.DependencyInjectionTestExecutionListener_@see org.springframework.test.context.support.DirtiesContextTestExecutionListener_@see org.springframework.test.context.transaction.TransactionalTestExecutionListener;Class<? extends TestExecutionListener>[] listeners() default {}_;p,the,link,test,execution,listener,test,execution,listeners,to,register,with,a,link,test,context,manager,p,see,org,springframework,test,context,support,dependency,injection,test,execution,listener,see,org,springframework,test,context,support,dirties,context,test,execution,listener,see,org,springframework,test,context,transaction,transactional,test,execution,listener;class,extends,test,execution,listener,listeners,default
TestExecutionListeners -> Class<? extends TestExecutionListener>[] listeners() default {}_;1356735495;<p>_The {@link TestExecutionListener TestExecutionListeners} to register with_a {@link TestContextManager}._</p>__@see org.springframework.test.context.support.DependencyInjectionTestExecutionListener_@see org.springframework.test.context.support.DirtiesContextTestExecutionListener_@see org.springframework.test.context.transaction.TransactionalTestExecutionListener;Class<? extends TestExecutionListener>[] listeners() default {}_;p,the,link,test,execution,listener,test,execution,listeners,to,register,with,a,link,test,context,manager,p,see,org,springframework,test,context,support,dependency,injection,test,execution,listener,see,org,springframework,test,context,support,dirties,context,test,execution,listener,see,org,springframework,test,context,transaction,transactional,test,execution,listener;class,extends,test,execution,listener,listeners,default
TestExecutionListeners -> Class<? extends TestExecutionListener>[] listeners() default {}_;1363208506;The {@link TestExecutionListener TestExecutionListeners} to register with_a {@link TestContextManager}.__@see org.springframework.test.context.web.ServletTestExecutionListener_@see org.springframework.test.context.support.DependencyInjectionTestExecutionListener_@see org.springframework.test.context.support.DirtiesContextTestExecutionListener_@see org.springframework.test.context.transaction.TransactionalTestExecutionListener;Class<? extends TestExecutionListener>[] listeners() default {}_;the,link,test,execution,listener,test,execution,listeners,to,register,with,a,link,test,context,manager,see,org,springframework,test,context,web,servlet,test,execution,listener,see,org,springframework,test,context,support,dependency,injection,test,execution,listener,see,org,springframework,test,context,support,dirties,context,test,execution,listener,see,org,springframework,test,context,transaction,transactional,test,execution,listener;class,extends,test,execution,listener,listeners,default
TestExecutionListeners -> Class<? extends TestExecutionListener>[] listeners() default {}_;1386769390;The {@link TestExecutionListener TestExecutionListeners} to register with_a {@link TestContextManager}.__@see org.springframework.test.context.web.ServletTestExecutionListener_@see org.springframework.test.context.support.DependencyInjectionTestExecutionListener_@see org.springframework.test.context.support.DirtiesContextTestExecutionListener_@see org.springframework.test.context.transaction.TransactionalTestExecutionListener;Class<? extends TestExecutionListener>[] listeners() default {}_;the,link,test,execution,listener,test,execution,listeners,to,register,with,a,link,test,context,manager,see,org,springframework,test,context,web,servlet,test,execution,listener,see,org,springframework,test,context,support,dependency,injection,test,execution,listener,see,org,springframework,test,context,support,dirties,context,test,execution,listener,see,org,springframework,test,context,transaction,transactional,test,execution,listener;class,extends,test,execution,listener,listeners,default
TestExecutionListeners -> Class<? extends TestExecutionListener>[] listeners() default {}_;1397082962;The {@link TestExecutionListener TestExecutionListeners} to register with_a {@link TestContextManager}.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value}, but it may be used instead of {@link #value}.__@see org.springframework.test.context.web.ServletTestExecutionListener_@see org.springframework.test.context.support.DependencyInjectionTestExecutionListener_@see org.springframework.test.context.support.DirtiesContextTestExecutionListener_@see org.springframework.test.context.transaction.TransactionalTestExecutionListener;Class<? extends TestExecutionListener>[] listeners() default {}_;the,link,test,execution,listener,test,execution,listeners,to,register,with,a,link,test,context,manager,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,but,it,may,be,used,instead,of,link,value,see,org,springframework,test,context,web,servlet,test,execution,listener,see,org,springframework,test,context,support,dependency,injection,test,execution,listener,see,org,springframework,test,context,support,dirties,context,test,execution,listener,see,org,springframework,test,context,transaction,transactional,test,execution,listener;class,extends,test,execution,listener,listeners,default
TestExecutionListeners -> Class<? extends TestExecutionListener>[] listeners() default {}_;1408062102;The {@link TestExecutionListener TestExecutionListeners} to register with_the {@link TestContextManager}.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value}, but it may be used instead of {@link #value}.__@see org.springframework.test.context.web.ServletTestExecutionListener_@see org.springframework.test.context.support.DependencyInjectionTestExecutionListener_@see org.springframework.test.context.support.DirtiesContextTestExecutionListener_@see org.springframework.test.context.transaction.TransactionalTestExecutionListener_@see org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener;Class<? extends TestExecutionListener>[] listeners() default {}_;the,link,test,execution,listener,test,execution,listeners,to,register,with,the,link,test,context,manager,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,but,it,may,be,used,instead,of,link,value,see,org,springframework,test,context,web,servlet,test,execution,listener,see,org,springframework,test,context,support,dependency,injection,test,execution,listener,see,org,springframework,test,context,support,dirties,context,test,execution,listener,see,org,springframework,test,context,transaction,transactional,test,execution,listener,see,org,springframework,test,context,jdbc,sql,scripts,test,execution,listener;class,extends,test,execution,listener,listeners,default
TestExecutionListeners -> Class<? extends TestExecutionListener>[] listeners() default {}_;1408102693;The {@link TestExecutionListener TestExecutionListeners} to register with_the {@link TestContextManager}.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #value}, but it may be used instead of {@link #value}.__@see org.springframework.test.context.web.ServletTestExecutionListener_@see org.springframework.test.context.support.DependencyInjectionTestExecutionListener_@see org.springframework.test.context.support.DirtiesContextTestExecutionListener_@see org.springframework.test.context.transaction.TransactionalTestExecutionListener_@see org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener;Class<? extends TestExecutionListener>[] listeners() default {}_;the,link,test,execution,listener,test,execution,listeners,to,register,with,the,link,test,context,manager,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,value,but,it,may,be,used,instead,of,link,value,see,org,springframework,test,context,web,servlet,test,execution,listener,see,org,springframework,test,context,support,dependency,injection,test,execution,listener,see,org,springframework,test,context,support,dirties,context,test,execution,listener,see,org,springframework,test,context,transaction,transactional,test,execution,listener,see,org,springframework,test,context,jdbc,sql,scripts,test,execution,listener;class,extends,test,execution,listener,listeners,default
TestExecutionListeners -> @AliasFor("listeners") 	Class<? extends TestExecutionListener>[] value() default {}_;1438176426;Alias for {@link #listeners}.__<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #listeners}, but it may be used instead of {@link #listeners}.;@AliasFor("listeners")_	Class<? extends TestExecutionListener>[] value() default {}_;alias,for,link,listeners,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,listeners,but,it,may,be,used,instead,of,link,listeners;alias,for,listeners,class,extends,test,execution,listener,value,default
TestExecutionListeners -> @AliasFor("listeners") 	Class<? extends TestExecutionListener>[] value() default {}_;1459842161;Alias for {@link #listeners}._<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #listeners}, but it may be used instead of {@link #listeners}.;@AliasFor("listeners")_	Class<? extends TestExecutionListener>[] value() default {}_;alias,for,link,listeners,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,listeners,but,it,may,be,used,instead,of,link,listeners;alias,for,listeners,class,extends,test,execution,listener,value,default
TestExecutionListeners -> @AliasFor("listeners") 	Class<? extends TestExecutionListener>[] value() default {}_;1462470884;Alias for {@link #listeners}._<p>This attribute may <strong>not</strong> be used in conjunction with_{@link #listeners}, but it may be used instead of {@link #listeners}.;@AliasFor("listeners")_	Class<? extends TestExecutionListener>[] value() default {}_;alias,for,link,listeners,p,this,attribute,may,strong,not,strong,be,used,in,conjunction,with,link,listeners,but,it,may,be,used,instead,of,link,listeners;alias,for,listeners,class,extends,test,execution,listener,value,default
