# id;timestamp;commentText;codeText;commentWords;codeWords
XmlExpectationsHelper -> public void assertNode(String content, Matcher<? super Node> matcher) throws Exception;1383669853;Parse the content as {@link Node} and apply a {@link Matcher}.;public void assertNode(String content, Matcher<? super Node> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", document, matcher)__	};parse,the,content,as,link,node,and,apply,a,link,matcher;public,void,assert,node,string,content,matcher,super,node,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,document,matcher
XmlExpectationsHelper -> public void assertNode(String content, Matcher<? super Node> matcher) throws Exception;1386025020;Parse the content as {@link Node} and apply a {@link Matcher}.;public void assertNode(String content, Matcher<? super Node> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", document, matcher)__	};parse,the,content,as,link,node,and,apply,a,link,matcher;public,void,assert,node,string,content,matcher,super,node,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,document,matcher
XmlExpectationsHelper -> public void assertNode(String content, Matcher<? super Node> matcher) throws Exception;1386031021;Parse the content as {@link Node} and apply a {@link Matcher}.;public void assertNode(String content, Matcher<? super Node> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", document, matcher)__	};parse,the,content,as,link,node,and,apply,a,link,matcher;public,void,assert,node,string,content,matcher,super,node,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,document,matcher
XmlExpectationsHelper -> public void assertNode(String content, Matcher<? super Node> matcher) throws Exception;1427238287;Parse the content as {@link Node} and apply a {@link Matcher}.;public void assertNode(String content, Matcher<? super Node> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", document, matcher)__	};parse,the,content,as,link,node,and,apply,a,link,matcher;public,void,assert,node,string,content,matcher,super,node,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,document,matcher
XmlExpectationsHelper -> public void assertNode(String content, Matcher<? super Node> matcher) throws Exception;1469106261;Parse the content as {@link Node} and apply a {@link Matcher}.;public void assertNode(String content, Matcher<? super Node> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", document, matcher)__	};parse,the,content,as,link,node,and,apply,a,link,matcher;public,void,assert,node,string,content,matcher,super,node,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,document,matcher
XmlExpectationsHelper -> public void assertNode(String content, Matcher<? super Node> matcher) throws Exception;1487016455;Parse the content as {@link Node} and apply a {@link Matcher}.;public void assertNode(String content, Matcher<? super Node> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", document, matcher)__	};parse,the,content,as,link,node,and,apply,a,link,matcher;public,void,assert,node,string,content,matcher,super,node,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,document,matcher
XmlExpectationsHelper -> public void assertNode(String content, Matcher<? super Node> matcher) throws Exception;1487031441;Parse the content as {@link Node} and apply a {@link Matcher}.;public void assertNode(String content, Matcher<? super Node> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", document, matcher)__	};parse,the,content,as,link,node,and,apply,a,link,matcher;public,void,assert,node,string,content,matcher,super,node,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,document,matcher
XmlExpectationsHelper -> public void assertNode(String content, Matcher<? super Node> matcher) throws Exception;1530174524;Parse the content as {@link Node} and apply a {@link Matcher}.;public void assertNode(String content, Matcher<? super Node> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", document, matcher)__	};parse,the,content,as,link,node,and,apply,a,link,matcher;public,void,assert,node,string,content,matcher,super,node,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,document,matcher
XmlExpectationsHelper -> public void assertNode(String content, Matcher<? super Node> matcher) throws Exception;1530174524;Parse the content as {@link Node} and apply a {@link Matcher}.;public void assertNode(String content, Matcher<? super Node> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", document, matcher)__	};parse,the,content,as,link,node,and,apply,a,link,matcher;public,void,assert,node,string,content,matcher,super,node,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,document,matcher
XmlExpectationsHelper -> public void assertNode(String content, Matcher<? super Node> matcher) throws Exception;1530174524;Parse the content as {@link Node} and apply a {@link Matcher}.;public void assertNode(String content, Matcher<? super Node> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", document, matcher)__	};parse,the,content,as,link,node,and,apply,a,link,matcher;public,void,assert,node,string,content,matcher,super,node,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,document,matcher
XmlExpectationsHelper -> public void assertSource(String content, Matcher<? super Source> matcher) throws Exception;1383669853;Parse the content as {@link DOMSource} and apply a {@link Matcher}._@see <a href="http://code.google.com/p/xml-matchers/">xml-matchers</a>;public void assertSource(String content, Matcher<? super Source> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", new DOMSource(document), matcher)__	};parse,the,content,as,link,domsource,and,apply,a,link,matcher,see,a,href,http,code,google,com,p,xml,matchers,xml,matchers,a;public,void,assert,source,string,content,matcher,super,source,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,new,domsource,document,matcher
XmlExpectationsHelper -> public void assertSource(String content, Matcher<? super Source> matcher) throws Exception;1386025020;Parse the content as {@link DOMSource} and apply a {@link Matcher}._@see <a href="http://code.google.com/p/xml-matchers/">xml-matchers</a>;public void assertSource(String content, Matcher<? super Source> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", new DOMSource(document), matcher)__	};parse,the,content,as,link,domsource,and,apply,a,link,matcher,see,a,href,http,code,google,com,p,xml,matchers,xml,matchers,a;public,void,assert,source,string,content,matcher,super,source,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,new,domsource,document,matcher
XmlExpectationsHelper -> public void assertSource(String content, Matcher<? super Source> matcher) throws Exception;1386031021;Parse the content as {@link DOMSource} and apply a {@link Matcher}._@see <a href="http://code.google.com/p/xml-matchers/">xml-matchers</a>;public void assertSource(String content, Matcher<? super Source> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", new DOMSource(document), matcher)__	};parse,the,content,as,link,domsource,and,apply,a,link,matcher,see,a,href,http,code,google,com,p,xml,matchers,xml,matchers,a;public,void,assert,source,string,content,matcher,super,source,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,new,domsource,document,matcher
XmlExpectationsHelper -> public void assertSource(String content, Matcher<? super Source> matcher) throws Exception;1427238287;Parse the content as {@link DOMSource} and apply a {@link Matcher}._@see <a href="http://code.google.com/p/xml-matchers/">xml-matchers</a>;public void assertSource(String content, Matcher<? super Source> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", new DOMSource(document), matcher)__	};parse,the,content,as,link,domsource,and,apply,a,link,matcher,see,a,href,http,code,google,com,p,xml,matchers,xml,matchers,a;public,void,assert,source,string,content,matcher,super,source,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,new,domsource,document,matcher
XmlExpectationsHelper -> public void assertSource(String content, Matcher<? super Source> matcher) throws Exception;1469106261;Parse the content as {@link DOMSource} and apply a {@link Matcher}._@see <a href="http://code.google.com/p/xml-matchers/">xml-matchers</a>;public void assertSource(String content, Matcher<? super Source> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", new DOMSource(document), matcher)__	};parse,the,content,as,link,domsource,and,apply,a,link,matcher,see,a,href,http,code,google,com,p,xml,matchers,xml,matchers,a;public,void,assert,source,string,content,matcher,super,source,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,new,domsource,document,matcher
XmlExpectationsHelper -> public void assertSource(String content, Matcher<? super Source> matcher) throws Exception;1487016455;Parse the content as {@link DOMSource} and apply a {@link Matcher}._@see <a href="https://github.com/davidehringer/xml-matchers">xml-matchers</a>;public void assertSource(String content, Matcher<? super Source> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", new DOMSource(document), matcher)__	};parse,the,content,as,link,domsource,and,apply,a,link,matcher,see,a,href,https,github,com,davidehringer,xml,matchers,xml,matchers,a;public,void,assert,source,string,content,matcher,super,source,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,new,domsource,document,matcher
XmlExpectationsHelper -> public void assertSource(String content, Matcher<? super Source> matcher) throws Exception;1487031441;Parse the content as {@link DOMSource} and apply a {@link Matcher}._@see <a href="https://github.com/davidehringer/xml-matchers">xml-matchers</a>;public void assertSource(String content, Matcher<? super Source> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", new DOMSource(document), matcher)__	};parse,the,content,as,link,domsource,and,apply,a,link,matcher,see,a,href,https,github,com,davidehringer,xml,matchers,xml,matchers,a;public,void,assert,source,string,content,matcher,super,source,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,new,domsource,document,matcher
XmlExpectationsHelper -> public void assertSource(String content, Matcher<? super Source> matcher) throws Exception;1530174524;Parse the content as {@link DOMSource} and apply a {@link Matcher}._@see <a href="https://github.com/davidehringer/xml-matchers">xml-matchers</a>;public void assertSource(String content, Matcher<? super Source> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", new DOMSource(document), matcher)__	};parse,the,content,as,link,domsource,and,apply,a,link,matcher,see,a,href,https,github,com,davidehringer,xml,matchers,xml,matchers,a;public,void,assert,source,string,content,matcher,super,source,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,new,domsource,document,matcher
XmlExpectationsHelper -> public void assertSource(String content, Matcher<? super Source> matcher) throws Exception;1530174524;Parse the content as {@link DOMSource} and apply a {@link Matcher}._@see <a href="https://github.com/davidehringer/xml-matchers">xml-matchers</a>;public void assertSource(String content, Matcher<? super Source> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", new DOMSource(document), matcher)__	};parse,the,content,as,link,domsource,and,apply,a,link,matcher,see,a,href,https,github,com,davidehringer,xml,matchers,xml,matchers,a;public,void,assert,source,string,content,matcher,super,source,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,new,domsource,document,matcher
XmlExpectationsHelper -> public void assertSource(String content, Matcher<? super Source> matcher) throws Exception;1530174524;Parse the content as {@link DOMSource} and apply a {@link Matcher}._@see <a href="https://github.com/davidehringer/xml-matchers">xml-matchers</a>;public void assertSource(String content, Matcher<? super Source> matcher) throws Exception {_		Document document = parseXmlString(content)__		assertThat("Body content", new DOMSource(document), matcher)__	};parse,the,content,as,link,domsource,and,apply,a,link,matcher,see,a,href,https,github,com,davidehringer,xml,matchers,xml,matchers,a;public,void,assert,source,string,content,matcher,super,source,matcher,throws,exception,document,document,parse,xml,string,content,assert,that,body,content,new,domsource,document,matcher
XmlExpectationsHelper -> public void assertXmlEqual(String expected, String actual) throws Exception;1383669853;Parse the expected and actual content strings as XML and assert that the_two are "similar" -- i.e. they contain the same elements and attributes_regardless of order.__<p>Use of this method assumes the_<a href="http://xmlunit.sourceforge.net/">XMLUnit<a/> library is available.__@param expected the expected XML content_@param actual the actual XML content__@see MockMvcResultMatchers#xpath(String, Object...)_@see MockMvcResultMatchers#xpath(String, Map, Object...);public void assertXmlEqual(String expected, String actual) throws Exception {__		XMLUnit.setIgnoreWhitespace(true)__		XMLUnit.setIgnoreComments(true)__		XMLUnit.setIgnoreAttributeOrder(true)___		Document control = XMLUnit.buildControlDocument(expected)__		Document test = XMLUnit.buildTestDocument(actual)__		Diff diff = new Diff(control, test)__		if (!diff.similar()) {_			AssertionErrors.fail("Body content " + diff.toString())__		}_	};parse,the,expected,and,actual,content,strings,as,xml,and,assert,that,the,two,are,similar,i,e,they,contain,the,same,elements,and,attributes,regardless,of,order,p,use,of,this,method,assumes,the,a,href,http,xmlunit,sourceforge,net,xmlunit,a,library,is,available,param,expected,the,expected,xml,content,param,actual,the,actual,xml,content,see,mock,mvc,result,matchers,xpath,string,object,see,mock,mvc,result,matchers,xpath,string,map,object;public,void,assert,xml,equal,string,expected,string,actual,throws,exception,xmlunit,set,ignore,whitespace,true,xmlunit,set,ignore,comments,true,xmlunit,set,ignore,attribute,order,true,document,control,xmlunit,build,control,document,expected,document,test,xmlunit,build,test,document,actual,diff,diff,new,diff,control,test,if,diff,similar,assertion,errors,fail,body,content,diff,to,string
XmlExpectationsHelper -> public void assertXmlEqual(String expected, String actual) throws Exception;1386025020;Parse the expected and actual content strings as XML and assert that the_two are "similar" -- i.e. they contain the same elements and attributes_regardless of order._<p>Use of this method assumes the_<a href="http://xmlunit.sourceforge.net/">XMLUnit<a/> library is available._@param expected the expected XML content_@param actual the actual XML content_@see org.springframework.test.web.servlet.result.MockMvcResultMatchers#xpath(String, Object...)_@see org.springframework.test.web.servlet.result.MockMvcResultMatchers#xpath(String, Map, Object...);public void assertXmlEqual(String expected, String actual) throws Exception {__		XMLUnit.setIgnoreWhitespace(true)__		XMLUnit.setIgnoreComments(true)__		XMLUnit.setIgnoreAttributeOrder(true)___		Document control = XMLUnit.buildControlDocument(expected)__		Document test = XMLUnit.buildTestDocument(actual)__		Diff diff = new Diff(control, test)__		if (!diff.similar()) {_			AssertionErrors.fail("Body content " + diff.toString())__		}_	};parse,the,expected,and,actual,content,strings,as,xml,and,assert,that,the,two,are,similar,i,e,they,contain,the,same,elements,and,attributes,regardless,of,order,p,use,of,this,method,assumes,the,a,href,http,xmlunit,sourceforge,net,xmlunit,a,library,is,available,param,expected,the,expected,xml,content,param,actual,the,actual,xml,content,see,org,springframework,test,web,servlet,result,mock,mvc,result,matchers,xpath,string,object,see,org,springframework,test,web,servlet,result,mock,mvc,result,matchers,xpath,string,map,object;public,void,assert,xml,equal,string,expected,string,actual,throws,exception,xmlunit,set,ignore,whitespace,true,xmlunit,set,ignore,comments,true,xmlunit,set,ignore,attribute,order,true,document,control,xmlunit,build,control,document,expected,document,test,xmlunit,build,test,document,actual,diff,diff,new,diff,control,test,if,diff,similar,assertion,errors,fail,body,content,diff,to,string
XmlExpectationsHelper -> public void assertXmlEqual(String expected, String actual) throws Exception;1386031021;Parse the expected and actual content strings as XML and assert that the_two are "similar" -- i.e. they contain the same elements and attributes_regardless of order._<p>Use of this method assumes the_<a href="http://xmlunit.sourceforge.net/">XMLUnit<a/> library is available._@param expected the expected XML content_@param actual the actual XML content_@see org.springframework.test.web.servlet.result.MockMvcResultMatchers#xpath(String, Object...)_@see org.springframework.test.web.servlet.result.MockMvcResultMatchers#xpath(String, Map, Object...);public void assertXmlEqual(String expected, String actual) throws Exception {_		XMLUnit.setIgnoreWhitespace(true)__		XMLUnit.setIgnoreComments(true)__		XMLUnit.setIgnoreAttributeOrder(true)___		Document control = XMLUnit.buildControlDocument(expected)__		Document test = XMLUnit.buildTestDocument(actual)__		Diff diff = new Diff(control, test)__		if (!diff.similar()) {_			AssertionErrors.fail("Body content " + diff.toString())__		}_	};parse,the,expected,and,actual,content,strings,as,xml,and,assert,that,the,two,are,similar,i,e,they,contain,the,same,elements,and,attributes,regardless,of,order,p,use,of,this,method,assumes,the,a,href,http,xmlunit,sourceforge,net,xmlunit,a,library,is,available,param,expected,the,expected,xml,content,param,actual,the,actual,xml,content,see,org,springframework,test,web,servlet,result,mock,mvc,result,matchers,xpath,string,object,see,org,springframework,test,web,servlet,result,mock,mvc,result,matchers,xpath,string,map,object;public,void,assert,xml,equal,string,expected,string,actual,throws,exception,xmlunit,set,ignore,whitespace,true,xmlunit,set,ignore,comments,true,xmlunit,set,ignore,attribute,order,true,document,control,xmlunit,build,control,document,expected,document,test,xmlunit,build,test,document,actual,diff,diff,new,diff,control,test,if,diff,similar,assertion,errors,fail,body,content,diff,to,string
XmlExpectationsHelper -> public void assertXmlEqual(String expected, String actual) throws Exception;1427238287;Parse the expected and actual content strings as XML and assert that the_two are "similar" -- i.e. they contain the same elements and attributes_regardless of order._<p>Use of this method assumes the_<a href="http://xmlunit.sourceforge.net/">XMLUnit<a/> library is available._@param expected the expected XML content_@param actual the actual XML content_@see org.springframework.test.web.servlet.result.MockMvcResultMatchers#xpath(String, Object...)_@see org.springframework.test.web.servlet.result.MockMvcResultMatchers#xpath(String, Map, Object...);public void assertXmlEqual(String expected, String actual) throws Exception {_		XMLUnit.setIgnoreWhitespace(true)__		XMLUnit.setIgnoreComments(true)__		XMLUnit.setIgnoreAttributeOrder(true)___		Document control = XMLUnit.buildControlDocument(expected)__		Document test = XMLUnit.buildTestDocument(actual)__		Diff diff = new Diff(control, test)__		if (!diff.similar()) {_			AssertionErrors.fail("Body content " + diff.toString())__		}_	};parse,the,expected,and,actual,content,strings,as,xml,and,assert,that,the,two,are,similar,i,e,they,contain,the,same,elements,and,attributes,regardless,of,order,p,use,of,this,method,assumes,the,a,href,http,xmlunit,sourceforge,net,xmlunit,a,library,is,available,param,expected,the,expected,xml,content,param,actual,the,actual,xml,content,see,org,springframework,test,web,servlet,result,mock,mvc,result,matchers,xpath,string,object,see,org,springframework,test,web,servlet,result,mock,mvc,result,matchers,xpath,string,map,object;public,void,assert,xml,equal,string,expected,string,actual,throws,exception,xmlunit,set,ignore,whitespace,true,xmlunit,set,ignore,comments,true,xmlunit,set,ignore,attribute,order,true,document,control,xmlunit,build,control,document,expected,document,test,xmlunit,build,test,document,actual,diff,diff,new,diff,control,test,if,diff,similar,assertion,errors,fail,body,content,diff,to,string
XmlExpectationsHelper -> public void assertXmlEqual(String expected, String actual) throws Exception;1469106261;Parse the expected and actual content strings as XML and assert that the_two are "similar" -- i.e. they contain the same elements and attributes_regardless of order._<p>Use of this method assumes the_<a href="http://xmlunit.sourceforge.net/">XMLUnit<a/> library is available._@param expected the expected XML content_@param actual the actual XML content_@see org.springframework.test.web.servlet.result.MockMvcResultMatchers#xpath(String, Object...)_@see org.springframework.test.web.servlet.result.MockMvcResultMatchers#xpath(String, Map, Object...);public void assertXmlEqual(String expected, String actual) throws Exception {_		Diff diffSimilar = DiffBuilder.compare(expected).withTest(actual)_				.ignoreWhitespace().ignoreComments()_				.checkForSimilar()_				.build()__		if (diffSimilar.hasDifferences()) {_			AssertionErrors.fail("Body content " + diffSimilar.toString())__		}_	};parse,the,expected,and,actual,content,strings,as,xml,and,assert,that,the,two,are,similar,i,e,they,contain,the,same,elements,and,attributes,regardless,of,order,p,use,of,this,method,assumes,the,a,href,http,xmlunit,sourceforge,net,xmlunit,a,library,is,available,param,expected,the,expected,xml,content,param,actual,the,actual,xml,content,see,org,springframework,test,web,servlet,result,mock,mvc,result,matchers,xpath,string,object,see,org,springframework,test,web,servlet,result,mock,mvc,result,matchers,xpath,string,map,object;public,void,assert,xml,equal,string,expected,string,actual,throws,exception,diff,diff,similar,diff,builder,compare,expected,with,test,actual,ignore,whitespace,ignore,comments,check,for,similar,build,if,diff,similar,has,differences,assertion,errors,fail,body,content,diff,similar,to,string
XmlExpectationsHelper -> public void assertXmlEqual(String expected, String actual) throws Exception;1487016455;Parse the expected and actual content strings as XML and assert that the_two are "similar" -- i.e. they contain the same elements and attributes_regardless of order._<p>Use of this method assumes the_<a href="https://github.com/xmlunit/xmlunit">XMLUnit<a/> library is available._@param expected the expected XML content_@param actual the actual XML content_@see org.springframework.test.web.servlet.result.MockMvcResultMatchers#xpath(String, Object...)_@see org.springframework.test.web.servlet.result.MockMvcResultMatchers#xpath(String, Map, Object...);public void assertXmlEqual(String expected, String actual) throws Exception {_		Diff diffSimilar = DiffBuilder.compare(expected).withTest(actual)_				.withNodeMatcher(new DefaultNodeMatcher(ElementSelectors.byNameAndText))_				.ignoreWhitespace().ignoreComments()_				.checkForSimilar()_				.build()__		if (diffSimilar.hasDifferences()) {_			AssertionErrors.fail("Body content " + diffSimilar.toString())__		}_	};parse,the,expected,and,actual,content,strings,as,xml,and,assert,that,the,two,are,similar,i,e,they,contain,the,same,elements,and,attributes,regardless,of,order,p,use,of,this,method,assumes,the,a,href,https,github,com,xmlunit,xmlunit,xmlunit,a,library,is,available,param,expected,the,expected,xml,content,param,actual,the,actual,xml,content,see,org,springframework,test,web,servlet,result,mock,mvc,result,matchers,xpath,string,object,see,org,springframework,test,web,servlet,result,mock,mvc,result,matchers,xpath,string,map,object;public,void,assert,xml,equal,string,expected,string,actual,throws,exception,diff,diff,similar,diff,builder,compare,expected,with,test,actual,with,node,matcher,new,default,node,matcher,element,selectors,by,name,and,text,ignore,whitespace,ignore,comments,check,for,similar,build,if,diff,similar,has,differences,assertion,errors,fail,body,content,diff,similar,to,string
XmlExpectationsHelper -> public void assertXmlEqual(String expected, String actual) throws Exception;1487031441;Parse the expected and actual content strings as XML and assert that the_two are "similar" -- i.e. they contain the same elements and attributes_regardless of order._<p>Use of this method assumes the_<a href="https://github.com/xmlunit/xmlunit">XMLUnit<a/> library is available._@param expected the expected XML content_@param actual the actual XML content_@see org.springframework.test.web.servlet.result.MockMvcResultMatchers#xpath(String, Object...)_@see org.springframework.test.web.servlet.result.MockMvcResultMatchers#xpath(String, Map, Object...);public void assertXmlEqual(String expected, String actual) throws Exception {_		XmlUnitDiff diff = new XmlUnitDiff(expected, actual)__		if (diff.hasDifferences()) {_			AssertionErrors.fail("Body content " + diff.toString())__		}_	};parse,the,expected,and,actual,content,strings,as,xml,and,assert,that,the,two,are,similar,i,e,they,contain,the,same,elements,and,attributes,regardless,of,order,p,use,of,this,method,assumes,the,a,href,https,github,com,xmlunit,xmlunit,xmlunit,a,library,is,available,param,expected,the,expected,xml,content,param,actual,the,actual,xml,content,see,org,springframework,test,web,servlet,result,mock,mvc,result,matchers,xpath,string,object,see,org,springframework,test,web,servlet,result,mock,mvc,result,matchers,xpath,string,map,object;public,void,assert,xml,equal,string,expected,string,actual,throws,exception,xml,unit,diff,diff,new,xml,unit,diff,expected,actual,if,diff,has,differences,assertion,errors,fail,body,content,diff,to,string
XmlExpectationsHelper -> public void assertXmlEqual(String expected, String actual) throws Exception;1530174524;Parse the expected and actual content strings as XML and assert that the_two are "similar" -- i.e. they contain the same elements and attributes_regardless of order._<p>Use of this method assumes the_<a href="https://github.com/xmlunit/xmlunit">XMLUnit</a> library is available._@param expected the expected XML content_@param actual the actual XML content_@see org.springframework.test.web.servlet.result.MockMvcResultMatchers#xpath(String, Object...)_@see org.springframework.test.web.servlet.result.MockMvcResultMatchers#xpath(String, Map, Object...);public void assertXmlEqual(String expected, String actual) throws Exception {_		XmlUnitDiff diff = new XmlUnitDiff(expected, actual)__		if (diff.hasDifferences()) {_			AssertionErrors.fail("Body content " + diff.toString())__		}_	};parse,the,expected,and,actual,content,strings,as,xml,and,assert,that,the,two,are,similar,i,e,they,contain,the,same,elements,and,attributes,regardless,of,order,p,use,of,this,method,assumes,the,a,href,https,github,com,xmlunit,xmlunit,xmlunit,a,library,is,available,param,expected,the,expected,xml,content,param,actual,the,actual,xml,content,see,org,springframework,test,web,servlet,result,mock,mvc,result,matchers,xpath,string,object,see,org,springframework,test,web,servlet,result,mock,mvc,result,matchers,xpath,string,map,object;public,void,assert,xml,equal,string,expected,string,actual,throws,exception,xml,unit,diff,diff,new,xml,unit,diff,expected,actual,if,diff,has,differences,assertion,errors,fail,body,content,diff,to,string
XmlExpectationsHelper -> public void assertXmlEqual(String expected, String actual) throws Exception;1530174524;Parse the expected and actual content strings as XML and assert that the_two are "similar" -- i.e. they contain the same elements and attributes_regardless of order._<p>Use of this method assumes the_<a href="https://github.com/xmlunit/xmlunit">XMLUnit</a> library is available._@param expected the expected XML content_@param actual the actual XML content_@see org.springframework.test.web.servlet.result.MockMvcResultMatchers#xpath(String, Object...)_@see org.springframework.test.web.servlet.result.MockMvcResultMatchers#xpath(String, Map, Object...);public void assertXmlEqual(String expected, String actual) throws Exception {_		XmlUnitDiff diff = new XmlUnitDiff(expected, actual)__		if (diff.hasDifferences()) {_			AssertionErrors.fail("Body content " + diff.toString())__		}_	};parse,the,expected,and,actual,content,strings,as,xml,and,assert,that,the,two,are,similar,i,e,they,contain,the,same,elements,and,attributes,regardless,of,order,p,use,of,this,method,assumes,the,a,href,https,github,com,xmlunit,xmlunit,xmlunit,a,library,is,available,param,expected,the,expected,xml,content,param,actual,the,actual,xml,content,see,org,springframework,test,web,servlet,result,mock,mvc,result,matchers,xpath,string,object,see,org,springframework,test,web,servlet,result,mock,mvc,result,matchers,xpath,string,map,object;public,void,assert,xml,equal,string,expected,string,actual,throws,exception,xml,unit,diff,diff,new,xml,unit,diff,expected,actual,if,diff,has,differences,assertion,errors,fail,body,content,diff,to,string
XmlExpectationsHelper -> public void assertXmlEqual(String expected, String actual) throws Exception;1530174524;Parse the expected and actual content strings as XML and assert that the_two are "similar" -- i.e. they contain the same elements and attributes_regardless of order._<p>Use of this method assumes the_<a href="https://github.com/xmlunit/xmlunit">XMLUnit</a> library is available._@param expected the expected XML content_@param actual the actual XML content_@see org.springframework.test.web.servlet.result.MockMvcResultMatchers#xpath(String, Object...)_@see org.springframework.test.web.servlet.result.MockMvcResultMatchers#xpath(String, Map, Object...);public void assertXmlEqual(String expected, String actual) throws Exception {_		XmlUnitDiff diff = new XmlUnitDiff(expected, actual)__		if (diff.hasDifferences()) {_			AssertionErrors.fail("Body content " + diff.toString())__		}_	};parse,the,expected,and,actual,content,strings,as,xml,and,assert,that,the,two,are,similar,i,e,they,contain,the,same,elements,and,attributes,regardless,of,order,p,use,of,this,method,assumes,the,a,href,https,github,com,xmlunit,xmlunit,xmlunit,a,library,is,available,param,expected,the,expected,xml,content,param,actual,the,actual,xml,content,see,org,springframework,test,web,servlet,result,mock,mvc,result,matchers,xpath,string,object,see,org,springframework,test,web,servlet,result,mock,mvc,result,matchers,xpath,string,map,object;public,void,assert,xml,equal,string,expected,string,actual,throws,exception,xml,unit,diff,diff,new,xml,unit,diff,expected,actual,if,diff,has,differences,assertion,errors,fail,body,content,diff,to,string
