commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Get the resource path to the root directory of the web application for the  * {@linkplain #getTestClass() test class}, configured via {@code @WebAppConfiguration}.  * @see WebAppConfiguration  */ ;/**  * Get the resource path to the root directory of the web application for the  * {@linkplain #getTestClass() test class}, configured via {@code @WebAppConfiguration}.  * @see WebAppConfiguration  */ public String getResourceBasePath() {     return this.resourceBasePath. }
true;public;1;5;/**  * Determine if the supplied object is equal to this {@code WebMergedContextConfiguration}  * instance by comparing both object's {@linkplain #getLocations() locations},  * {@linkplain #getClasses() annotated classes},  * {@linkplain #getContextInitializerClasses() context initializer classes},  * {@linkplain #getActiveProfiles() active profiles},  * {@linkplain #getResourceBasePath() resource base path},  * {@linkplain #getParent() parents}, and the fully qualified names of their  * {@link #getContextLoader() ContextLoaders}.  */ ;/**  * Determine if the supplied object is equal to this {@code WebMergedContextConfiguration}  * instance by comparing both object's {@linkplain #getLocations() locations},  * {@linkplain #getClasses() annotated classes},  * {@linkplain #getContextInitializerClasses() context initializer classes},  * {@linkplain #getActiveProfiles() active profiles},  * {@linkplain #getResourceBasePath() resource base path},  * {@linkplain #getParent() parents}, and the fully qualified names of their  * {@link #getContextLoader() ContextLoaders}.  */ @Override public boolean equals(@Nullable Object other) {     return (this == other || (super.equals(other) && this.resourceBasePath.equals(((WebMergedContextConfiguration) other).resourceBasePath))). }
true;public;0;4;/**  * Generate a unique hash code for all properties of this  * {@code WebMergedContextConfiguration} excluding the  * {@linkplain #getTestClass() test class}.  */ ;/**  * Generate a unique hash code for all properties of this  * {@code WebMergedContextConfiguration} excluding the  * {@linkplain #getTestClass() test class}.  */ @Override public int hashCode() {     return super.hashCode() * 31 + this.resourceBasePath.hashCode(). }
true;public;0;16;/**  * Provide a String representation of the {@linkplain #getTestClass() test class},  * {@linkplain #getLocations() locations}, {@linkplain #getClasses() annotated classes},  * {@linkplain #getContextInitializerClasses() context initializer classes},  * {@linkplain #getActiveProfiles() active profiles},  * {@linkplain #getPropertySourceLocations() property source locations},  * {@linkplain #getPropertySourceProperties() property source properties},  * {@linkplain #getContextCustomizers() context customizers},  * {@linkplain #getResourceBasePath() resource base path}, the name of the  * {@link #getContextLoader() ContextLoader}, and the  * {@linkplain #getParent() parent configuration}.  */ ;/**  * Provide a String representation of the {@linkplain #getTestClass() test class},  * {@linkplain #getLocations() locations}, {@linkplain #getClasses() annotated classes},  * {@linkplain #getContextInitializerClasses() context initializer classes},  * {@linkplain #getActiveProfiles() active profiles},  * {@linkplain #getPropertySourceLocations() property source locations},  * {@linkplain #getPropertySourceProperties() property source properties},  * {@linkplain #getContextCustomizers() context customizers},  * {@linkplain #getResourceBasePath() resource base path}, the name of the  * {@link #getContextLoader() ContextLoader}, and the  * {@linkplain #getParent() parent configuration}.  */ @Override public String toString() {     return new ToStringCreator(this).append("testClass", getTestClass()).append("locations", ObjectUtils.nullSafeToString(getLocations())).append("classes", ObjectUtils.nullSafeToString(getClasses())).append("contextInitializerClasses", ObjectUtils.nullSafeToString(getContextInitializerClasses())).append("activeProfiles", ObjectUtils.nullSafeToString(getActiveProfiles())).append("propertySourceLocations", ObjectUtils.nullSafeToString(getPropertySourceLocations())).append("propertySourceProperties", ObjectUtils.nullSafeToString(getPropertySourceProperties())).append("contextCustomizers", getContextCustomizers()).append("resourceBasePath", getResourceBasePath()).append("contextLoader", nullSafeClassName(getContextLoader())).append("parent", getParent()).toString(). }
