commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;public void processing(RoundEnvironment roundEnv) {     for (Element element : roundEnv.getRootElements()) {         markAsProcessed(element).     } }
false;private;1;5;;private void markAsProcessed(Element element) {     if (element instanceof TypeElement) {         this.processedSourceTypes.add(this.typeHelper.getType(element)).     } }
false;public;1;3;;public void add(ItemMetadata metadata) {     this.metadataItems.add(metadata). }
false;public;0;15;;public CandidateComponentsMetadata getMetadata() {     CandidateComponentsMetadata metadata = new CandidateComponentsMetadata().     for (ItemMetadata item : this.metadataItems) {         metadata.add(item).     }     if (this.previousMetadata != null) {         List<ItemMetadata> items = this.previousMetadata.getItems().         for (ItemMetadata item : items) {             if (shouldBeMerged(item)) {                 metadata.add(item).             }         }     }     return metadata. }
false;private;1;5;;private boolean shouldBeMerged(ItemMetadata itemMetadata) {     String sourceType = itemMetadata.getType().     return (sourceType != null && !deletedInCurrentBuild(sourceType) && !processedInCurrentBuild(sourceType)). }
false;private;1;4;;private boolean deletedInCurrentBuild(String sourceType) {     return this.processingEnvironment.getElementUtils().getTypeElement(sourceType) == null. }
false;private;1;3;;private boolean processedInCurrentBuild(String sourceType) {     return this.processedSourceTypes.contains(sourceType). }
