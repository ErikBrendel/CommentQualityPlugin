commented;modifiers;parameterAmount;loc;comment;code
false;public;1;13;;@Override public Set<String> getStereotypes(Element element) {     Set<String> stereotypes = new LinkedHashSet<>().     ElementKind kind = element.getKind().     if (kind != ElementKind.CLASS && kind != ElementKind.INTERFACE) {         return stereotypes.     }     Set<Element> seen = new HashSet<>().     collectStereotypesOnAnnotations(seen, stereotypes, element).     seen = new HashSet<>().     collectStereotypesOnTypes(seen, stereotypes, element).     return stereotypes. }
false;private;3;8;;private void collectStereotypesOnAnnotations(Set<Element> seen, Set<String> stereotypes, Element element) {     for (AnnotationMirror annotation : this.typeHelper.getAllAnnotationMirrors(element)) {         Element next = collectStereotypes(seen, stereotypes, element, annotation).         if (next != null) {             collectStereotypesOnAnnotations(seen, stereotypes, next).         }     } }
false;private;3;14;;private void collectStereotypesOnTypes(Set<Element> seen, Set<String> stereotypes, Element type) {     if (!seen.contains(type)) {         seen.add(type).         if (isAnnotatedWithIndexed(type)) {             stereotypes.add(this.typeHelper.getType(type)).         }         Element superClass = this.typeHelper.getSuperClass(type).         if (superClass != null) {             collectStereotypesOnTypes(seen, stereotypes, superClass).         }         this.typeHelper.getDirectInterfaces(type).forEach(i -> collectStereotypesOnTypes(seen, stereotypes, i)).     } }
false;private;4;8;;private Element collectStereotypes(Set<Element> seen, Set<String> stereotypes, Element element, AnnotationMirror annotation) {     if (isIndexedAnnotation(annotation)) {         stereotypes.add(this.typeHelper.getType(element)).     }     return getCandidateAnnotationElement(seen, annotation). }
false;private;2;11;;private Element getCandidateAnnotationElement(Set<Element> seen, AnnotationMirror annotation) {     Element element = annotation.getAnnotationType().asElement().     if (seen.contains(element)) {         return null.     }     // We need to visit all indexed annotations.     if (!isIndexedAnnotation(annotation)) {         seen.add(element).     }     return (!element.toString().startsWith("java.lang") ? element : null). }
false;private;1;8;;private boolean isAnnotatedWithIndexed(Element type) {     for (AnnotationMirror annotation : type.getAnnotationMirrors()) {         if (isIndexedAnnotation(annotation)) {             return true.         }     }     return false. }
false;private;1;3;;private boolean isIndexedAnnotation(AnnotationMirror annotation) {     return INDEXED_ANNOTATION.equals(annotation.getAnnotationType().toString()). }
