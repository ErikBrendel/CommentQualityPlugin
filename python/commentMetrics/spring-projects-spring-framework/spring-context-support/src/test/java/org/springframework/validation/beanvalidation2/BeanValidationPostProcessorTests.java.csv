commented;modifiers;parameterAmount;loc;comment;code
false;public;0;16;;@Test public void testNotNullConstraint() {     GenericApplicationContext ac = new GenericApplicationContext().     ac.registerBeanDefinition("bvpp", new RootBeanDefinition(BeanValidationPostProcessor.class)).     ac.registerBeanDefinition("capp", new RootBeanDefinition(CommonAnnotationBeanPostProcessor.class)).     ac.registerBeanDefinition("bean", new RootBeanDefinition(NotNullConstrainedBean.class)).     try {         ac.refresh().         fail("Should have thrown BeanCreationException").     } catch (BeanCreationException ex) {         assertTrue(ex.getRootCause().getMessage().contains("testBean")).         assertTrue(ex.getRootCause().getMessage().contains("invalid")).     }     ac.close(). }
false;public;0;11;;@Test public void testNotNullConstraintSatisfied() {     GenericApplicationContext ac = new GenericApplicationContext().     ac.registerBeanDefinition("bvpp", new RootBeanDefinition(BeanValidationPostProcessor.class)).     ac.registerBeanDefinition("capp", new RootBeanDefinition(CommonAnnotationBeanPostProcessor.class)).     RootBeanDefinition bd = new RootBeanDefinition(NotNullConstrainedBean.class).     bd.getPropertyValues().add("testBean", new TestBean()).     ac.registerBeanDefinition("bean", bd).     ac.refresh().     ac.close(). }
false;public;0;11;;@Test public void testNotNullConstraintAfterInitialization() {     GenericApplicationContext ac = new GenericApplicationContext().     RootBeanDefinition bvpp = new RootBeanDefinition(BeanValidationPostProcessor.class).     bvpp.getPropertyValues().add("afterInitialization", true).     ac.registerBeanDefinition("bvpp", bvpp).     ac.registerBeanDefinition("capp", new RootBeanDefinition(CommonAnnotationBeanPostProcessor.class)).     ac.registerBeanDefinition("bean", new RootBeanDefinition(AfterInitConstraintBean.class)).     ac.refresh().     ac.close(). }
false;public;0;18;;@Test public void testSizeConstraint() {     GenericApplicationContext ac = new GenericApplicationContext().     ac.registerBeanDefinition("bvpp", new RootBeanDefinition(BeanValidationPostProcessor.class)).     RootBeanDefinition bd = new RootBeanDefinition(NotNullConstrainedBean.class).     bd.getPropertyValues().add("testBean", new TestBean()).     bd.getPropertyValues().add("stringValue", "s").     ac.registerBeanDefinition("bean", bd).     try {         ac.refresh().         fail("Should have thrown BeanCreationException").     } catch (BeanCreationException ex) {         assertTrue(ex.getRootCause().getMessage().contains("stringValue")).         assertTrue(ex.getRootCause().getMessage().contains("invalid")).     }     ac.close(). }
false;public;0;11;;@Test public void testSizeConstraintSatisfied() {     GenericApplicationContext ac = new GenericApplicationContext().     ac.registerBeanDefinition("bvpp", new RootBeanDefinition(BeanValidationPostProcessor.class)).     RootBeanDefinition bd = new RootBeanDefinition(NotNullConstrainedBean.class).     bd.getPropertyValues().add("testBean", new TestBean()).     bd.getPropertyValues().add("stringValue", "ss").     ac.registerBeanDefinition("bean", bd).     ac.refresh().     ac.close(). }
false;public;0;3;;public TestBean getTestBean() {     return testBean. }
false;public;1;3;;public void setTestBean(TestBean testBean) {     this.testBean = testBean. }
false;public;0;3;;public String getStringValue() {     return stringValue. }
false;public;1;3;;public void setStringValue(String stringValue) {     this.stringValue = stringValue. }
false;public;0;4;;@PostConstruct public void init() {     assertNotNull("Shouldn't be here after constraint checking", this.testBean). }
false;public;0;3;;public TestBean getTestBean() {     return testBean. }
false;public;1;3;;public void setTestBean(TestBean testBean) {     this.testBean = testBean. }
false;public;0;4;;@PostConstruct public void init() {     this.testBean = new TestBean(). }
