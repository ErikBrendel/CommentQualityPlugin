# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractKeyCacheInterceptor -> protected CacheKeyInvocationContext<A> createCacheKeyInvocationContext( 			CacheOperationInvocationContext<O> context);1396865240;Create a {@link CacheKeyInvocationContext} based on the specified invocation._@param context the context of the invocation._@return the related {@code CacheKeyInvocationContext};protected CacheKeyInvocationContext<A> createCacheKeyInvocationContext(_			CacheOperationInvocationContext<O> context) {_		return new DefaultCacheKeyInvocationContext<A>(context.getOperation(), context.getTarget(), context.getArgs())__	};create,a,link,cache,key,invocation,context,based,on,the,specified,invocation,param,context,the,context,of,the,invocation,return,the,related,code,cache,key,invocation,context;protected,cache,key,invocation,context,a,create,cache,key,invocation,context,cache,operation,invocation,context,o,context,return,new,default,cache,key,invocation,context,a,context,get,operation,context,get,target,context,get,args
AbstractKeyCacheInterceptor -> protected CacheKeyInvocationContext<A> createCacheKeyInvocationContext( 			CacheOperationInvocationContext<O> context);1400596774;Create a {@link CacheKeyInvocationContext} based on the specified invocation._@param context the context of the invocation._@return the related {@code CacheKeyInvocationContext};protected CacheKeyInvocationContext<A> createCacheKeyInvocationContext(_			CacheOperationInvocationContext<O> context) {_		return new DefaultCacheKeyInvocationContext<A>(context.getOperation(), context.getTarget(), context.getArgs())__	};create,a,link,cache,key,invocation,context,based,on,the,specified,invocation,param,context,the,context,of,the,invocation,return,the,related,code,cache,key,invocation,context;protected,cache,key,invocation,context,a,create,cache,key,invocation,context,cache,operation,invocation,context,o,context,return,new,default,cache,key,invocation,context,a,context,get,operation,context,get,target,context,get,args
AbstractKeyCacheInterceptor -> protected CacheKeyInvocationContext<A> createCacheKeyInvocationContext( 			CacheOperationInvocationContext<O> context);1406128099;Create a {@link CacheKeyInvocationContext} based on the specified invocation._@param context the context of the invocation._@return the related {@code CacheKeyInvocationContext};protected CacheKeyInvocationContext<A> createCacheKeyInvocationContext(_			CacheOperationInvocationContext<O> context) {_		return new DefaultCacheKeyInvocationContext<A>(context.getOperation(), context.getTarget(), context.getArgs())__	};create,a,link,cache,key,invocation,context,based,on,the,specified,invocation,param,context,the,context,of,the,invocation,return,the,related,code,cache,key,invocation,context;protected,cache,key,invocation,context,a,create,cache,key,invocation,context,cache,operation,invocation,context,o,context,return,new,default,cache,key,invocation,context,a,context,get,operation,context,get,target,context,get,args
AbstractKeyCacheInterceptor -> protected CacheKeyInvocationContext<A> createCacheKeyInvocationContext( 			CacheOperationInvocationContext<O> context);1413848647;Create a {@link CacheKeyInvocationContext} based on the specified invocation._@param context the context of the invocation._@return the related {@code CacheKeyInvocationContext};protected CacheKeyInvocationContext<A> createCacheKeyInvocationContext(_			CacheOperationInvocationContext<O> context) {_		return new DefaultCacheKeyInvocationContext<A>(context.getOperation(), context.getTarget(), context.getArgs())__	};create,a,link,cache,key,invocation,context,based,on,the,specified,invocation,param,context,the,context,of,the,invocation,return,the,related,code,cache,key,invocation,context;protected,cache,key,invocation,context,a,create,cache,key,invocation,context,cache,operation,invocation,context,o,context,return,new,default,cache,key,invocation,context,a,context,get,operation,context,get,target,context,get,args
AbstractKeyCacheInterceptor -> protected CacheKeyInvocationContext<A> createCacheKeyInvocationContext( 			CacheOperationInvocationContext<O> context);1467730834;Create a {@link CacheKeyInvocationContext} based on the specified invocation._@param context the context of the invocation._@return the related {@code CacheKeyInvocationContext};protected CacheKeyInvocationContext<A> createCacheKeyInvocationContext(_			CacheOperationInvocationContext<O> context) {_		return new DefaultCacheKeyInvocationContext<>(context.getOperation(), context.getTarget(), context.getArgs())__	};create,a,link,cache,key,invocation,context,based,on,the,specified,invocation,param,context,the,context,of,the,invocation,return,the,related,code,cache,key,invocation,context;protected,cache,key,invocation,context,a,create,cache,key,invocation,context,cache,operation,invocation,context,o,context,return,new,default,cache,key,invocation,context,context,get,operation,context,get,target,context,get,args
AbstractKeyCacheInterceptor -> protected CacheKeyInvocationContext<A> createCacheKeyInvocationContext( 			CacheOperationInvocationContext<O> context);1530174524;Create a {@link CacheKeyInvocationContext} based on the specified invocation._@param context the context of the invocation._@return the related {@code CacheKeyInvocationContext};protected CacheKeyInvocationContext<A> createCacheKeyInvocationContext(_			CacheOperationInvocationContext<O> context) {_		return new DefaultCacheKeyInvocationContext<>(context.getOperation(), context.getTarget(), context.getArgs())__	};create,a,link,cache,key,invocation,context,based,on,the,specified,invocation,param,context,the,context,of,the,invocation,return,the,related,code,cache,key,invocation,context;protected,cache,key,invocation,context,a,create,cache,key,invocation,context,cache,operation,invocation,context,o,context,return,new,default,cache,key,invocation,context,context,get,operation,context,get,target,context,get,args
AbstractKeyCacheInterceptor -> protected Object generateKey(CacheOperationInvocationContext<O> context);1396865240;Generate a key for the specified invocation._@param context the context of the invocation_@return the key to use;protected Object generateKey(CacheOperationInvocationContext<O> context) {_		KeyGenerator keyGenerator = context.getOperation().getKeyGenerator()__		Object key = keyGenerator.generate(context.getTarget(), context.getMethod(), context.getArgs())__		if (logger.isTraceEnabled()) {_			logger.trace("Computed cache key " + key + " for operation " + context.getOperation())__		}_		return key__	};generate,a,key,for,the,specified,invocation,param,context,the,context,of,the,invocation,return,the,key,to,use;protected,object,generate,key,cache,operation,invocation,context,o,context,key,generator,key,generator,context,get,operation,get,key,generator,object,key,key,generator,generate,context,get,target,context,get,method,context,get,args,if,logger,is,trace,enabled,logger,trace,computed,cache,key,key,for,operation,context,get,operation,return,key
AbstractKeyCacheInterceptor -> protected Object generateKey(CacheOperationInvocationContext<O> context);1400596774;Generate a key for the specified invocation._@param context the context of the invocation_@return the key to use;protected Object generateKey(CacheOperationInvocationContext<O> context) {_		KeyGenerator keyGenerator = context.getOperation().getKeyGenerator()__		Object key = keyGenerator.generate(context.getTarget(), context.getMethod(), context.getArgs())__		if (logger.isTraceEnabled()) {_			logger.trace("Computed cache key " + key + " for operation " + context.getOperation())__		}_		return key__	};generate,a,key,for,the,specified,invocation,param,context,the,context,of,the,invocation,return,the,key,to,use;protected,object,generate,key,cache,operation,invocation,context,o,context,key,generator,key,generator,context,get,operation,get,key,generator,object,key,key,generator,generate,context,get,target,context,get,method,context,get,args,if,logger,is,trace,enabled,logger,trace,computed,cache,key,key,for,operation,context,get,operation,return,key
AbstractKeyCacheInterceptor -> protected Object generateKey(CacheOperationInvocationContext<O> context);1406128099;Generate a key for the specified invocation._@param context the context of the invocation_@return the key to use;protected Object generateKey(CacheOperationInvocationContext<O> context) {_		KeyGenerator keyGenerator = context.getOperation().getKeyGenerator()__		Object key = keyGenerator.generate(context.getTarget(), context.getMethod(), context.getArgs())__		if (logger.isTraceEnabled()) {_			logger.trace("Computed cache key " + key + " for operation " + context.getOperation())__		}_		return key__	};generate,a,key,for,the,specified,invocation,param,context,the,context,of,the,invocation,return,the,key,to,use;protected,object,generate,key,cache,operation,invocation,context,o,context,key,generator,key,generator,context,get,operation,get,key,generator,object,key,key,generator,generate,context,get,target,context,get,method,context,get,args,if,logger,is,trace,enabled,logger,trace,computed,cache,key,key,for,operation,context,get,operation,return,key
AbstractKeyCacheInterceptor -> protected Object generateKey(CacheOperationInvocationContext<O> context);1413848647;Generate a key for the specified invocation._@param context the context of the invocation_@return the key to use;protected Object generateKey(CacheOperationInvocationContext<O> context) {_		KeyGenerator keyGenerator = context.getOperation().getKeyGenerator()__		Object key = keyGenerator.generate(context.getTarget(), context.getMethod(), context.getArgs())__		if (logger.isTraceEnabled()) {_			logger.trace("Computed cache key " + key + " for operation " + context.getOperation())__		}_		return key__	};generate,a,key,for,the,specified,invocation,param,context,the,context,of,the,invocation,return,the,key,to,use;protected,object,generate,key,cache,operation,invocation,context,o,context,key,generator,key,generator,context,get,operation,get,key,generator,object,key,key,generator,generate,context,get,target,context,get,method,context,get,args,if,logger,is,trace,enabled,logger,trace,computed,cache,key,key,for,operation,context,get,operation,return,key
AbstractKeyCacheInterceptor -> protected Object generateKey(CacheOperationInvocationContext<O> context);1467730834;Generate a key for the specified invocation._@param context the context of the invocation_@return the key to use;protected Object generateKey(CacheOperationInvocationContext<O> context) {_		KeyGenerator keyGenerator = context.getOperation().getKeyGenerator()__		Object key = keyGenerator.generate(context.getTarget(), context.getMethod(), context.getArgs())__		if (logger.isTraceEnabled()) {_			logger.trace("Computed cache key " + key + " for operation " + context.getOperation())__		}_		return key__	};generate,a,key,for,the,specified,invocation,param,context,the,context,of,the,invocation,return,the,key,to,use;protected,object,generate,key,cache,operation,invocation,context,o,context,key,generator,key,generator,context,get,operation,get,key,generator,object,key,key,generator,generate,context,get,target,context,get,method,context,get,args,if,logger,is,trace,enabled,logger,trace,computed,cache,key,key,for,operation,context,get,operation,return,key
AbstractKeyCacheInterceptor -> protected Object generateKey(CacheOperationInvocationContext<O> context);1530174524;Generate a key for the specified invocation._@param context the context of the invocation_@return the key to use;protected Object generateKey(CacheOperationInvocationContext<O> context) {_		KeyGenerator keyGenerator = context.getOperation().getKeyGenerator()__		Object key = keyGenerator.generate(context.getTarget(), context.getMethod(), context.getArgs())__		if (logger.isTraceEnabled()) {_			logger.trace("Computed cache key " + key + " for operation " + context.getOperation())__		}_		return key__	};generate,a,key,for,the,specified,invocation,param,context,the,context,of,the,invocation,return,the,key,to,use;protected,object,generate,key,cache,operation,invocation,context,o,context,key,generator,key,generator,context,get,operation,get,key,generator,object,key,key,generator,generate,context,get,target,context,get,method,context,get,args,if,logger,is,trace,enabled,logger,trace,computed,cache,key,key,for,operation,context,get,operation,return,key
AbstractKeyCacheInterceptor -> protected Object generateKey(CacheOperationInvocationContext<O> context);1531589372;Generate a key for the specified invocation._@param context the context of the invocation_@return the key to use;protected Object generateKey(CacheOperationInvocationContext<O> context) {_		KeyGenerator keyGenerator = context.getOperation().getKeyGenerator()__		Object key = keyGenerator.generate(context.getTarget(), context.getMethod(), context.getArgs())__		if (logger.isTraceEnabled()) {_			logger.trace("Computed cache key " + key + " for operation " + context.getOperation())__		}_		return key__	};generate,a,key,for,the,specified,invocation,param,context,the,context,of,the,invocation,return,the,key,to,use;protected,object,generate,key,cache,operation,invocation,context,o,context,key,generator,key,generator,context,get,operation,get,key,generator,object,key,key,generator,generate,context,get,target,context,get,method,context,get,args,if,logger,is,trace,enabled,logger,trace,computed,cache,key,key,for,operation,context,get,operation,return,key
